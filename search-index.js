var N = null;var searchIndex = {};
searchIndex["aho_corasick"]={"doc":"An implementation of the Aho-Corasick string search…","items":[[3,"Match","aho_corasick","Records a match in the search text.",N,N],[12,"pati","","The pattern index.",0,N],[12,"start","","The starting byte offset of the match in the search text.",0,N],[12,"end","","The ending byte offset of the match in the search text.",0,N],[3,"Matches","","An iterator of non-overlapping matches for in-memory text.",N,N],[3,"MatchesOverlapping","","An iterator of overlapping matches for in-memory text.",N,N],[3,"StreamMatches","","An iterator of non-overlapping matches for streaming text.",N,N],[3,"StreamMatchesOverlapping","","An iterator of overlapping matches for streaming text.",N,N],[3,"FullAcAutomaton","","A complete Aho-Corasick automaton.",N,N],[3,"AcAutomaton","","An Aho-Corasick finite automaton.",N,N],[3,"Dense","","State transitions that can be stored either sparsely or…",N,N],[3,"Sparse","","State transitions that are always sparse.",N,N],[11,"new","","Build a new expanded Aho-Corasick automaton from an…",1,[[["acautomaton"]],["fullacautomaton"]]],[6,"StateIdx","","The integer type used for the state index.",N,N],[8,"Automaton","","An abstraction over automatons and their corresponding…",N,N],[10,"next_state","","Return the next state given the current state and next…",2,[[["self"],["stateidx"],["u8"]],["stateidx"]]],[10,"has_match","","Return true if and only if the given state and current…",2,[[["self"],["stateidx"],["usize"]],["bool"]]],[10,"get_match","","Build a match given the current state, pattern index and…",2,[[["self"],["stateidx"],["usize"],["usize"]],["match"]]],[10,"start_bytes","","Return the set of bytes that have transitions in the root…",2,N],[10,"patterns","","Returns all of the patterns matched by this automaton.",2,N],[10,"pattern","","Returns the pattern indexed at `i`.",2,[[["self"],["usize"]],["p"]]],[11,"len","","Return the number of patterns in the automaton.",2,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the automaton has no patterns.",2,[[["self"]],["bool"]]],[11,"find","","Returns an iterator of non-overlapping matches in `s`.",2,[[["self"],["q"]],["matches"]]],[11,"find_overlapping","","Returns an iterator of overlapping matches in `s`.",2,[[["self"],["q"]],["matchesoverlapping"]]],[11,"stream_find","","Returns an iterator of non-overlapping matches in the…",2,[[["self"],["r"]],["streammatches"]]],[11,"stream_find_overlapping","","Returns an iterator of overlapping matches in the given…",2,[[["self"],["r"]],["streammatchesoverlapping"]]],[8,"Transitions","","An abstraction over state transition strategies.",N,N],[10,"new","","Return a new state at the given depth.",3,[[["u32"]],["self"]]],[10,"goto","","Return the next state index given the next character.",3,[[["self"],["u8"]],["stateidx"]]],[10,"set_goto","","Set the next state index for the character given.",3,[[["self"],["u8"],["stateidx"]]]],[10,"heap_bytes","","The memory use in bytes (on the heap) of this set of…",3,[[["self"]],["usize"]]],[11,"for_each_transition","","Iterates over each state",3,[[["self"],["f"]]]],[11,"for_each_ok_transition","","Iterates over each non-fail state",3,[[["self"],["f"]]]],[11,"new","","Create a new automaton from an iterator of patterns.",4,[[["i"]],["acautomaton",["dense"]]]],[11,"with_transitions","","Create a new automaton from an iterator of patterns.",4,[[["i"]],["acautomaton"]]],[11,"into_full","","Build out the entire automaton into a single matrix.",4,[[["self"]],["fullacautomaton"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into_iter","","",5,[[["self"]],["i"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into_iter","","",6,[[["self"]],["i"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into_iter","","",7,[[["self"]],["i"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into_iter","","",8,[[["self"]],["i"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"next_state","","",1,[[["self"],["stateidx"],["u8"]],["stateidx"]]],[11,"get_match","","",1,[[["self"],["stateidx"],["usize"],["usize"]],["match"]]],[11,"has_match","","",1,[[["self"],["stateidx"],["usize"]],["bool"]]],[11,"start_bytes","","",1,N],[11,"patterns","","",1,N],[11,"pattern","","",1,[[["self"],["usize"]],["p"]]],[11,"next_state","","",4,[[["self"],["stateidx"],["u8"]],["stateidx"]]],[11,"get_match","","",4,[[["self"],["stateidx"],["usize"],["usize"]],["match"]]],[11,"has_match","","",4,[[["self"],["stateidx"],["usize"]],["bool"]]],[11,"start_bytes","","",4,N],[11,"patterns","","",4,N],[11,"pattern","","",4,[[["self"],["usize"]],["p"]]],[11,"new","","",9,[[["u32"]],["dense"]]],[11,"goto","","",9,[[["self"],["u8"]],["stateidx"]]],[11,"set_goto","","",9,[[["self"],["u8"],["stateidx"]]]],[11,"heap_bytes","","",9,[[["self"]],["usize"]]],[11,"for_each_transition","","",9,[[["self"],["f"]]]],[11,"for_each_ok_transition","","",9,[[["self"],["f"]]]],[11,"new","","",10,[[["u32"]],["sparse"]]],[11,"goto","","",10,[[["self"],["u8"]],["stateidx"]]],[11,"set_goto","","",10,[[["self"],["u8"],["stateidx"]]]],[11,"heap_bytes","","",10,[[["self"]],["usize"]]],[11,"eq","","",0,[[["self"],["match"]],["bool"]]],[11,"ne","","",0,[[["self"],["match"]],["bool"]]],[11,"clone","","",0,[[["self"]],["match"]]],[11,"clone","","",1,[[["self"]],["fullacautomaton"]]],[11,"clone","","",4,[[["self"]],["acautomaton"]]],[11,"clone","","",9,[[["self"]],["dense"]]],[11,"clone","","",10,[[["self"]],["sparse"]]],[11,"next","","",5,[[["self"]],["option",["match"]]]],[11,"next","","",7,[[["self"]],["option",["result"]]]],[11,"next","","",6,[[["self"]],["option",["match"]]]],[11,"next","","",8,[[["self"]],["option",["result"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"hash","","",0,N],[11,"from_iter","","Create an automaton from an iterator of strings.",4,[[["t"]],["acautomaton"]]],[11,"len","","Return the number of patterns in the automaton.",2,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the automaton has no patterns.",2,[[["self"]],["bool"]]],[11,"find","","Returns an iterator of non-overlapping matches in `s`.",2,[[["self"],["q"]],["matches"]]],[11,"find_overlapping","","Returns an iterator of overlapping matches in `s`.",2,[[["self"],["q"]],["matchesoverlapping"]]],[11,"stream_find","","Returns an iterator of non-overlapping matches in the…",2,[[["self"],["r"]],["streammatches"]]],[11,"stream_find_overlapping","","Returns an iterator of overlapping matches in the given…",2,[[["self"],["r"]],["streammatchesoverlapping"]]]],"paths":[[3,"Match"],[3,"FullAcAutomaton"],[8,"Automaton"],[8,"Transitions"],[3,"AcAutomaton"],[3,"Matches"],[3,"MatchesOverlapping"],[3,"StreamMatches"],[3,"StreamMatchesOverlapping"],[3,"Dense"],[3,"Sparse"]]};
searchIndex["ansi_term"]={"doc":"This is a library for controlling colours and formatting,…","items":[[3,"Prefix","ansi_term","Like `ANSIString`, but only displays the style prefix.",N,N],[3,"Infix","","Like `ANSIString`, but only displays the difference…",N,N],[3,"Suffix","","Like `ANSIString`, but only displays the style suffix.",N,N],[3,"Style","","A style is a collection of properties that can format a…",N,N],[12,"foreground","","The style's foreground colour, if it has one.",0,N],[12,"background","","The style's background colour, if it has one.",0,N],[12,"is_bold","","Whether this style is bold.",0,N],[12,"is_dimmed","","Whether this style is dimmed.",0,N],[12,"is_italic","","Whether this style is italic.",0,N],[12,"is_underline","","Whether this style is underlined.",0,N],[12,"is_blink","","Whether this style is blinking.",0,N],[12,"is_reverse","","Whether this style has reverse colours.",0,N],[12,"is_hidden","","Whether this style is hidden.",0,N],[12,"is_strikethrough","","Whether this style is struckthrough.",0,N],[3,"ANSIGenericString","","An `ANSIGenericString` includes a generic string type and…",N,N],[3,"ANSIGenericStrings","","A set of `ANSIGenericString`s collected together, in order…",N,N],[12,"0","","",1,N],[4,"Colour","","A colour is one specific type of ANSI escape code, and can…",N,N],[13,"Black","","Colour #0 (foreground code `30`, background code `40`).",2,N],[13,"Red","","Colour #1 (foreground code `31`, background code `41`).",2,N],[13,"Green","","Colour #2 (foreground code `32`, background code `42`).",2,N],[13,"Yellow","","Colour #3 (foreground code `33`, background code `43`).",2,N],[13,"Blue","","Colour #4 (foreground code `34`, background code `44`).",2,N],[13,"Purple","","Colour #5 (foreground code `35`, background code `45`).",2,N],[13,"Cyan","","Colour #6 (foreground code `36`, background code `46`).",2,N],[13,"White","","Colour #7 (foreground code `37`, background code `47`).",2,N],[13,"Fixed","","A colour number from 0 to 255, for use in 256-colour…",2,N],[13,"RGB","","A 24-bit RGB color, as specified by ISO-8613-3.",2,N],[4,"Color","","A colour is one specific type of ANSI escape code, and can…",N,N],[13,"Black","","Colour #0 (foreground code `30`, background code `40`).",2,N],[13,"Red","","Colour #1 (foreground code `31`, background code `41`).",2,N],[13,"Green","","Colour #2 (foreground code `32`, background code `42`).",2,N],[13,"Yellow","","Colour #3 (foreground code `33`, background code `43`).",2,N],[13,"Blue","","Colour #4 (foreground code `34`, background code `44`).",2,N],[13,"Purple","","Colour #5 (foreground code `35`, background code `45`).",2,N],[13,"Cyan","","Colour #6 (foreground code `36`, background code `46`).",2,N],[13,"White","","Colour #7 (foreground code `37`, background code `47`).",2,N],[13,"Fixed","","A colour number from 0 to 255, for use in 256-colour…",2,N],[13,"RGB","","A 24-bit RGB color, as specified by ISO-8613-3.",2,N],[5,"ANSIStrings","","A function to construct an `ANSIStrings` instance.",N,N],[5,"ANSIByteStrings","","A function to construct an `ANSIByteStrings` instance.",N,N],[11,"prefix","","The prefix for this style.",0,[[["self"]],["prefix"]]],[11,"infix","","The infix between this style and another.",0,[[["self"],["style"]],["infix"]]],[11,"suffix","","The suffix for this style.",0,[[["self"]],["suffix"]]],[11,"prefix","","The prefix for this colour.",2,[[["self"]],["prefix"]]],[11,"infix","","The infix between this colour and another.",2,[[["self"],["colour"]],["infix"]]],[11,"suffix","","The suffix for this colour.",2,[[["self"]],["suffix"]]],[11,"new","","Creates a new Style with no differences.",0,[[],["style"]]],[11,"bold","","Returns a `Style` with the bold property set.",0,[[["self"]],["style"]]],[11,"dimmed","","Returns a `Style` with the dimmed property set.",0,[[["self"]],["style"]]],[11,"italic","","Returns a `Style` with the italic property set.",0,[[["self"]],["style"]]],[11,"underline","","Returns a `Style` with the underline property set.",0,[[["self"]],["style"]]],[11,"blink","","Returns a `Style` with the blink property set.",0,[[["self"]],["style"]]],[11,"reverse","","Returns a `Style` with the reverse property set.",0,[[["self"]],["style"]]],[11,"hidden","","Returns a `Style` with the hidden property set.",0,[[["self"]],["style"]]],[11,"strikethrough","","Returns a `Style` with the hidden property set.",0,[[["self"]],["style"]]],[11,"fg","","Returns a `Style` with the foreground colour property set.",0,[[["self"],["colour"]],["style"]]],[11,"on","","Returns a `Style` with the background colour property set.",0,[[["self"],["colour"]],["style"]]],[11,"is_plain","","Return true if this `Style` has no actual styles, and can…",0,[[["self"]],["bool"]]],[11,"normal","","Return a `Style` with the foreground colour set to this…",2,[[["self"]],["style"]]],[11,"bold","","Returns a `Style` with the bold property set.",2,[[["self"]],["style"]]],[11,"dimmed","","Returns a `Style` with the dimmed property set.",2,[[["self"]],["style"]]],[11,"italic","","Returns a `Style` with the italic property set.",2,[[["self"]],["style"]]],[11,"underline","","Returns a `Style` with the underline property set.",2,[[["self"]],["style"]]],[11,"blink","","Returns a `Style` with the blink property set.",2,[[["self"]],["style"]]],[11,"reverse","","Returns a `Style` with the reverse property set.",2,[[["self"]],["style"]]],[11,"hidden","","Returns a `Style` with the hidden property set.",2,[[["self"]],["style"]]],[11,"strikethrough","","Returns a `Style` with the strikethrough property set.",2,[[["self"]],["style"]]],[11,"on","","Returns a `Style` with the background colour property set.",2,[[["self"],["colour"]],["style"]]],[11,"paint","","Paints the given text with this colour, returning an ANSI…",0,[[["self"],["i"]],["ansigenericstring"]]],[11,"paint","","Paints the given text with this colour, returning an ANSI…",2,[[["self"],["i"]],["ansigenericstring"]]],[6,"ANSIString","","An ANSI String is a string coupled with the `Style` to…",N,N],[6,"ANSIByteString","","An `ANSIByteString` represents a formatted series of…",N,N],[6,"ANSIStrings","","A set of `ANSIString`s collected together, in order to be…",N,N],[6,"ANSIByteStrings","","A set of `ANSIByteString`s collected together, in order to…",N,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"eq","","",0,[[["self"],["style"]],["bool"]]],[11,"ne","","",0,[[["self"],["style"]],["bool"]]],[11,"eq","","",2,[[["self"],["colour"]],["bool"]]],[11,"ne","","",2,[[["self"],["colour"]],["bool"]]],[11,"eq","","",6,[[["self"],["ansigenericstring"]],["bool"]]],[11,"ne","","",6,[[["self"],["ansigenericstring"]],["bool"]]],[11,"from","","You can turn a `Colour` into a `Style` with the foreground…",0,[[["colour"]],["style"]]],[11,"from","","",6,[[["i"]],["ansigenericstring"]]],[11,"clone","","",3,[[["self"]],["prefix"]]],[11,"clone","","",4,[[["self"]],["infix"]]],[11,"clone","","",5,[[["self"]],["suffix"]]],[11,"clone","","",0,[[["self"]],["style"]]],[11,"clone","","",2,[[["self"]],["colour"]]],[11,"clone","","",6,[[["self"]],["ansigenericstring"]]],[11,"default","","Returns a style with no properties set. Formatting text…",0,[[],["style"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"deref","","",6,[[["self"]],["s"]]],[11,"write_to","","Write an `ANSIByteString` to an `io::Write`. This writes…",9,[[["self"],["w"]],["result"]]],[11,"write_to","","Write `ANSIByteStrings` to an `io::Write`. This writes the…",10,[[["self"],["w"]],["result"]]]],"paths":[[3,"Style"],[3,"ANSIGenericStrings"],[4,"Colour"],[3,"Prefix"],[3,"Infix"],[3,"Suffix"],[3,"ANSIGenericString"],[6,"ANSIString"],[6,"ANSIStrings"],[6,"ANSIByteString"],[6,"ANSIByteStrings"]]};
searchIndex["asciifile"]={"doc":"","items":[[0,"file","asciifile","Represents an input file that my only contain ASCII…",N,N],[3,"AsciiFile","asciifile::file","",N,N],[12,"mapping","","",0,N],[4,"EncodingError","","",N,N],[13,"NotAscii","","",1,N],[12,"offset","asciifile::file::EncodingError","",1,N],[12,"position","","",1,N],[11,"lookup_cache","asciifile::file","",0,[[["self"]],["linenumbercache"]]],[11,"new","","",0,N],[11,"iter","","",0,[[["self"]],["positioniterator"]]],[0,"iter","asciifile","",N,N],[3,"PositionIterator","asciifile::iter","",N,N],[3,"ReversePositionIterator","","Iterator that traverses a file from front to back.",N,N],[11,"new","","",2,[[["option",["position"]]],["self"]]],[11,"peek_exactly","","Look at the next `n` characters without advancing the…",2,[[["self"],["usize"]],["option",["span"]]]],[11,"peek_at_most","","Look at the next `n` characters without advancing the…",2,[[["self"],["usize"]],["option",["span"]]]],[11,"matches","","",2,[[["self"],["str"]],["bool"]]],[11,"peek","","",2,[[["self"]],["option",["position"]]]],[11,"eof_reached","","",2,[[["self"]],["bool"]]],[11,"new","","",3,[[["option",["position"]]],["self"]]],[0,"line_number_cache","asciifile","Caches information about linebreaks that allows us to…",N,N],[3,"LineNumberCache","asciifile::line_number_cache","",N,N],[11,"new","","Return a `LineNumberCache` with UNIX-style line breaks…",4,[[["vec",["usize"]]],["self"]]],[11,"line_number","","Return the line number at `byte_offset`. Identical to…",4,[[["self"],["usize"]],["usize"]]],[11,"column","","Return the column of the characters position within the…",4,[[["self"],["usize"]],["usize"]]],[11,"row","","Return the row of the character's position within the file.",4,[[["self"],["usize"]],["usize"]]],[11,"row_and_column","","Get row and column at once. Equivalent to calling…",4,N],[0,"maybe_spanned","asciifile","",N,N],[4,"MaybeSpanned","asciifile::maybe_spanned","",N,N],[13,"WithoutSpan","","",5,N],[13,"WithSpan","","",5,N],[0,"position","asciifile","abstraction over a character and its position within a file.",N,N],[3,"Position","asciifile::position","",N,N],[11,"at_file_start","","Create a new Position object pointing at the first…",6,[[["asciifile"]],["option"]]],[11,"to_single_char_span","","",6,[[["self"]],["span"]]],[11,"byte_offset","","",6,[[["self"]],["usize"]]],[11,"file","","",6,[[["self"]],["asciifile"]]],[11,"chr","","Get the character at this position",6,[[["self"]],["char"]]],[11,"byte","","Get the byte at this position",6,[[["self"]],["u8"]]],[11,"row","","Return the row of the character's position within the file.",6,[[["self"]],["usize"]]],[11,"line_number","","Return the character's line number. Identical to `row() + 1`",6,[[["self"]],["usize"]]],[11,"column","","Return the column of the characters position within the…",6,[[["self"]],["usize"]]],[11,"row_and_column","","Return the column of the characters position within the…",6,N],[11,"next","","Get the position immediatly following this position or…",6,[[["self"]],["option",["position"]]]],[11,"next_mut","","The same as `next()` but in-place.",6,[[["self"]],["result"]]],[11,"is_last","","Check if we are at the end of the file (the last valid…",6,[[["self"]],["bool"]]],[11,"prev","","Get the position immediatly following this position or…",6,[[["self"]],["option",["position"]]]],[11,"prev_mut","","The same as `prev()` but in-place.",6,[[["self"]],["result"]]],[11,"line","","Get source code line containing the position.",6,[[["self"]],["span"]]],[11,"iter","","",6,[[["self"]],["positioniterator"]]],[11,"reverse_iter","","",6,[[["self"]],["reversepositioniterator"]]],[0,"span","asciifile","Input File Ranges",N,N],[3,"Span","asciifile::span","",N,N],[3,"LineIterator","","An Iterator over the lines of a `Span`.",N,N],[3,"LineNumberIterator","","Iterator adapter that adds line numbers to a `LineIterator`",N,N],[11,"new","","Create a new span from two positions.",7,[[["position"],["position"]],["self"]]],[11,"from_single_position","","Creates a span containing only the given position",7,[[["position"]],["self"]]],[11,"as_str","","Creates a span containing only the given position",7,[[["self"]],["str"]]],[11,"as_bytes","","",7,N],[11,"is_empty","","",7,[[["self"]],["bool"]]],[11,"is_single_char","","",7,[[["self"]],["bool"]]],[11,"start_position","","",7,[[["self"]],["position"]]],[11,"end_position","","",7,[[["self"]],["position"]]],[11,"is_multiline","","Check if a span extends over multiple lines",7,[[["self"]],["bool"]]],[11,"lines","","An iterator over the lines of a span.",7,[[["self"]],["lineiterator"]]],[11,"extend_to_position","","extends the span to include the given position",7,[[["self"],["position"]],["span"]]],[11,"has_subset","","test if a span contains another span",7,[[["self"],["span"]],["bool"]]],[11,"combine","","",7,[[["span"],["span"]],["span"]]],[11,"intersect","","Get the overlapping part of two spans. Returns `None` if…",7,[[["span"],["span"]],["option",["span"]]]],[11,"len","","Get the number of characters in a span",7,[[["self"]],["usize"]]],[11,"from_positions","","",7,N],[11,"new","","",8,[[["span"]],["self"]]],[11,"numbered","","",8,[[["self"]],["linenumberiterator"]]],[11,"new","","",9,[[["lineiterator"]],["self"]]],[0,"spanned","asciifile","",N,N],[3,"Spanned","asciifile::spanned","",N,N],[12,"span","","",10,N],[12,"data","","",10,N],[11,"new","","",10,[[["span"],["t"]],["self"]]],[11,"map","","",10,[[["self"],["f"]],["spanned"]]],[11,"map_ref","","",10,[[["self"],["f"]],["spanned"]]],[11,"combine_with","","Combine two `Spanned`s, aplying `f` to compute the…",10,[[["self"],["spanned"],["f"]],["spanned"]]],[11,"combine_with_boxed","","",10,[[["self"],["box",["spanned"]],["f"]],["spanned"]]],[11,"combine_boxed_with","","",10,[[["box"],["spanned"],["f"]],["spanned"]]],[11,"combine_boxed_with_boxed","","",10,[[["box"],["box",["spanned"]],["f"]],["spanned"]]],[11,"from","asciifile::file","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"as_fail","","",1,[[["self"]],["fail"]]],[11,"from","asciifile::iter","",2,[[["t"]],["t"]]],[11,"into_iter","","",2,[[["self"]],["i"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into_iter","","",3,[[["self"]],["i"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","asciifile::line_number_cache","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","asciifile::maybe_spanned","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","asciifile::position","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","asciifile::span","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into_iter","","",8,[[["self"]],["i"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into_iter","","",9,[[["self"]],["i"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","asciifile::spanned","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"to_string","","",10,[[["self"]],["string"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"cmp","asciifile::position","",6,[[["self"],["position"]],["ordering"]]],[11,"eq","","",6,[[["self"],["position"]],["bool"]]],[11,"eq","asciifile::span","",7,[[["self"],["span"]],["bool"]]],[11,"ne","","",7,[[["self"],["span"]],["bool"]]],[11,"eq","asciifile::spanned","This only compares the `data`! I.e. two `Spanned`s are…",10,[[["self"],["self"]],["bool"]]],[11,"clone","asciifile::iter","",2,[[["self"]],["positioniterator"]]],[11,"clone","","",3,[[["self"]],["reversepositioniterator"]]],[11,"clone","asciifile::position","",6,[[["self"]],["position"]]],[11,"clone","asciifile::span","",7,[[["self"]],["span"]]],[11,"clone","asciifile::spanned","",10,[[["self"]],["spanned"]]],[11,"partial_cmp","asciifile::position","",6,[[["self"],["position"]],["option",["ordering"]]]],[11,"next","asciifile::iter","",2,[[["self"]],["option",["position"]]]],[11,"next","","",3,[[["self"]],["option",["position"]]]],[11,"next","asciifile::span","",8,[[["self"]],["option"]]],[11,"next","","",9,[[["self"]],["option"]]],[11,"fmt","asciifile::file","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","asciifile::position","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","asciifile::span","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","asciifile::spanned","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","asciifile::file","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","asciifile::iter","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","asciifile::line_number_cache","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","asciifile::maybe_spanned","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","asciifile::position","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","asciifile::span","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","asciifile::spanned","",10,[[["self"],["formatter"]],["result"]]],[11,"deref","asciifile::file","",0,N],[11,"deref","asciifile::maybe_spanned","",5,[[["self"]],["t"]]],[11,"deref","asciifile::spanned","",10,N],[11,"cause","asciifile::file","",1,[[["self"]],["option",["fail"]]]],[11,"backtrace","","",1,[[["self"]],["option",["backtrace"]]]]],"paths":[[3,"AsciiFile"],[4,"EncodingError"],[3,"PositionIterator"],[3,"ReversePositionIterator"],[3,"LineNumberCache"],[4,"MaybeSpanned"],[3,"Position"],[3,"Span"],[3,"LineIterator"],[3,"LineNumberIterator"],[3,"Spanned"]]};
searchIndex["atty"]={"doc":"atty is a simple utility that answers one question > is…","items":[[4,"Stream","atty","possible stream sources",N,N],[13,"Stdout","","",0,N],[13,"Stderr","","",0,N],[13,"Stdin","","",0,N],[5,"is","","returns true if this is a tty",N,[[["stream"]],["bool"]]],[5,"isnt","","returns true if this is not a tty",N,[[["stream"]],["bool"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"clone","","",0,[[["self"]],["stream"]]]],"paths":[[4,"Stream"]]};
searchIndex["backtrace"]={"doc":"A library for acquiring a backtrace at runtime","items":[[3,"Frame","backtrace","A trait representing one frame of a backtrace, yielded to…",N,N],[3,"Symbol","","A trait representing the resolution of a symbol in a file.",N,N],[3,"SymbolName","","A wrapper around a symbol name to provide ergonomic…",N,N],[3,"Backtrace","","Representation of an owned and self-contained backtrace.",N,N],[3,"BacktraceFrame","","Captured version of a frame in a backtrace.",N,N],[3,"BacktraceSymbol","","Captured version of a symbol in a backtrace.",N,N],[4,"BytesOrWideString","","A platform independent representation of a string. When…",N,N],[13,"Bytes","","A slice, typically provided on Unix platforms.",0,N],[13,"Wide","","Wide strings typically from Windows.",0,N],[5,"trace_unsynchronized","","Same as `trace`, only unsafe as it's unsynchronized.",N,[[["f"]]]],[5,"resolve_unsynchronized","","Same as `resolve`, only unsafe as it's unsynchronized.",N,N],[5,"trace","","Inspects the current call-stack, passing all active frames…",N,[[["f"]]]],[5,"resolve","","Resolve an address to a symbol, passing the symbol to the…",N,N],[11,"ip","","Returns the current instruction pointer of this frame.",1,N],[11,"symbol_address","","Returns the starting symbol address of the frame of this…",1,N],[11,"name","","Returns the name of this function.",2,[[["self"]],["option",["symbolname"]]]],[11,"addr","","Returns the starting address of this function.",2,[[["self"]],["option"]]],[11,"filename_raw","","Returns the raw filename as a slice. This is mainly useful…",2,[[["self"]],["option",["bytesorwidestring"]]]],[11,"lineno","","Returns the line number for where this symbol is currently…",2,[[["self"]],["option",["u32"]]]],[11,"filename","","Returns the file name where this function was defined.",2,[[["self"]],["option",["path"]]]],[11,"new","","Creates a new symbol name from the raw underlying bytes.",3,N],[11,"as_str","","Returns the raw symbol name as a `str` if the symbols is…",3,[[["self"]],["option",["str"]]]],[11,"as_bytes","","Returns the raw symbol name as a list of bytes",3,N],[11,"to_str_lossy","","Lossy converts to a `Cow<str>`, will allocate if `Bytes`…",0,[[["self"]],["cow",["str"]]]],[11,"into_path_buf","","Provides a `Path` representation of `BytesOrWideString`.",0,[[["self"]],["pathbuf"]]],[11,"new","","Captures a backtrace at the callsite of this function,…",4,[[],["backtrace"]]],[11,"new_unresolved","","Similar to `new` except that this does not resolve any…",4,[[],["backtrace"]]],[11,"frames","","Returns the frames from when this backtrace was captured.",4,N],[11,"resolve","","If this backtrace was created from `new_unresolved` then…",4,[[["self"]]]],[11,"ip","","Same as `Frame::ip`",5,N],[11,"symbol_address","","Same as `Frame::symbol_address`",5,N],[11,"symbols","","Returns the list of symbols that this frame corresponds to.",5,N],[11,"name","","Same as `Symbol::name`",6,[[["self"]],["option",["symbolname"]]]],[11,"addr","","Same as `Symbol::addr`",6,[[["self"]],["option"]]],[11,"filename","","Same as `Symbol::filename`",6,[[["self"]],["option",["path"]]]],[11,"lineno","","Same as `Symbol::lineno`",6,[[["self"]],["option",["u32"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"from","","",4,[[["vec",["backtraceframe"]]],["self"]]],[11,"clone","","",4,[[["self"]],["backtrace"]]],[11,"clone","","",5,[[["self"]],["backtraceframe"]]],[11,"clone","","",6,[[["self"]],["backtracesymbol"]]],[11,"default","","",4,[[],["backtrace"]]],[11,"into","","",4,[[["self"]],["vec",["backtraceframe"]]]]],"paths":[[4,"BytesOrWideString"],[3,"Frame"],[3,"Symbol"],[3,"SymbolName"],[3,"Backtrace"],[3,"BacktraceFrame"],[3,"BacktraceSymbol"]]};
searchIndex["backtrace_sys"]={"doc":"","items":[[4,"backtrace_state","backtrace_sys","",N,N],[5,"backtrace_create_state","","",N,N],[5,"backtrace_syminfo","","",N,N],[5,"backtrace_pcinfo","","",N,N],[6,"backtrace_syminfo_callback","","",N,N],[6,"backtrace_full_callback","","",N,N],[6,"backtrace_error_callback","","",N,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]]],"paths":[[4,"backtrace_state"]]};
searchIndex["base64"]={"doc":"Configs","items":[[3,"Config","base64","Contains configuration parameters for base64 encoding",N,N],[4,"DecodeError","","Errors that can occur while decoding.",N,N],[13,"InvalidByte","","An invalid byte was found in the input. The offset and…",0,N],[13,"InvalidLength","","The length of the input is invalid.",0,N],[4,"CharacterSet","","Available encoding character sets",N,N],[13,"Standard","","The standard character set (uses `+` and `/`)",1,N],[13,"UrlSafe","","The URL safe character set (uses `-` and `_`)",1,N],[13,"Crypt","","The `crypt(3)` character set (uses…",1,N],[4,"LineEnding","","Line ending used in optional line wrapping.",N,N],[13,"LF","","Unix-style \\n",2,N],[13,"CRLF","","Windows-style \\r\\n",2,N],[4,"LineWrap","","Line wrap configuration.",N,N],[13,"NoWrap","","Don't wrap.",3,N],[13,"Wrap","","Wrap lines with the specified length and line ending. The…",3,N],[5,"encode","","Encode arbitrary octets as base64. Returns a String.…",N,[[["t"]],["string"]]],[5,"encode_config","","Encode arbitrary octets as base64. Returns a String.",N,[[["t"],["config"]],["string"]]],[5,"encode_config_buf","","Encode arbitrary octets as base64. Writes into the…",N,[[["t"],["config"],["string"]]]],[5,"encode_config_slice","","Encode arbitrary octets as base64. Writes into the…",N,N],[5,"decode","","Decode from string reference as octets. Returns a Result…",N,[[["t"]],["result",["vec","decodeerror"]]]],[5,"decode_config","","Decode from string reference as octets. Returns a Result…",N,[[["t"],["config"]],["result",["vec","decodeerror"]]]],[5,"decode_config_buf","","Decode from string reference as octets. Writes into the…",N,[[["t"],["config"],["vec"]],["result",["decodeerror"]]]],[5,"decode_config_slice","","Decode the input into the provided output slice.",N,N],[0,"display","","Enables base64'd output anywhere you might use a `Display`…",N,N],[3,"Base64Display","base64::display","A convenience wrapper for base64'ing bytes into a format…",N,N],[4,"DisplayError","","Errors that can occur initializing a Base64Display.",N,N],[13,"InvalidLineLength","","If wrapping is configured, the line length must be a…",4,N],[11,"with_config","","Create a `Base64Display` with the provided config.",5,N],[11,"standard","","Convenience method for creating a `Base64Display` with the…",5,N],[11,"url_safe","","Convenience method for creating a `Base64Display` with the…",5,N],[17,"STANDARD","base64","Standard character set with padding.",N,N],[17,"STANDARD_NO_PAD","","Standard character set without padding.",N,N],[17,"MIME","","As per standards for MIME encoded messages",N,N],[17,"URL_SAFE","","URL-safe character set with padding",N,N],[17,"URL_SAFE_NO_PAD","","URL-safe character set without padding",N,N],[17,"CRYPT","","As per `crypt(3)` requirements",N,N],[11,"new","","Create a new `Config`.",6,[[["characterset"],["bool"],["bool"],["linewrap"]],["config"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","base64::display","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"eq","","",4,[[["self"],["displayerror"]],["bool"]]],[11,"eq","base64","",0,[[["self"],["decodeerror"]],["bool"]]],[11,"ne","","",0,[[["self"],["decodeerror"]],["bool"]]],[11,"clone","","",0,[[["self"]],["decodeerror"]]],[11,"clone","","",1,[[["self"]],["characterset"]]],[11,"clone","","",2,[[["self"]],["lineending"]]],[11,"clone","","",3,[[["self"]],["linewrap"]]],[11,"clone","","",6,[[["self"]],["config"]]],[11,"fmt","base64::display","",5,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","base64","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","base64::display","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","base64","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"description","","",0,[[["self"]],["str"]]],[11,"cause","","",0,[[["self"]],["option",["error"]]]]],"paths":[[4,"DecodeError"],[4,"CharacterSet"],[4,"LineEnding"],[4,"LineWrap"],[4,"DisplayError"],[3,"Base64Display"],[3,"Config"]]};
searchIndex["benchmark"]={"doc":"Executes all mjtests in the /exec/big folder.","items":[[3,"Opts","benchmark","Small utility to benchmark each step of the compiler…",N,N],[3,"BenchmarkEntry","","",N,N],[3,"Benchmark","","",N,N],[11,"new","","",0,[[["pathbuf"]],["self"]]],[11,"add","","",0,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into_collection","","",1,[[["self"]],["smallvec"]]],[11,"mapped","","",1,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",1,[[["self"]],["result",["parseerr"]]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into_collection","","",2,[[["self"]],["smallvec"]]],[11,"mapped","","",2,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",2,[[["self"]],["result",["parseerr"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into_collection","","",0,[[["self"]],["smallvec"]]],[11,"mapped","","",0,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",0,[[["self"]],["result",["parseerr"]]]],[11,"clone","","",2,[[["self"]],["benchmarkentry"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"clap","","",1,[[],["app"]]],[11,"from_clap","","",1,[[["argmatches"]],["self"]]]],"paths":[[3,"Benchmark"],[3,"Opts"],[3,"BenchmarkEntry"]]};
searchIndex["bit_set"]={"doc":"An implementation of a set using a bit vector as an…","items":[[3,"BitSet","bit_set","",N,N],[3,"Iter","","An iterator for `BitSet`.",N,N],[3,"Union","","",N,N],[3,"Intersection","","",N,N],[3,"Difference","","",N,N],[3,"SymmetricDifference","","",N,N],[11,"new","","Creates a new empty `BitSet`.",0,[[],["self"]]],[11,"with_capacity","","Creates a new `BitSet` with initially no contents, able to…",0,[[["usize"]],["self"]]],[11,"from_bit_vec","","Creates a new `BitSet` from the given bit vector.",0,[[["bitvec"]],["self"]]],[11,"from_bytes","","",0,N],[11,"capacity","","Returns the capacity in bits for this bit vector.…",0,[[["self"]],["usize"]]],[11,"reserve_len","","Reserves capacity for the given `BitSet` to contain `len`…",0,[[["self"],["usize"]]]],[11,"reserve_len_exact","","Reserves the minimum capacity for the given `BitSet` to…",0,[[["self"],["usize"]]]],[11,"into_bit_vec","","Consumes this set to return the underlying bit vector.",0,[[["self"]],["bitvec"]]],[11,"get_ref","","Returns a reference to the underlying bit vector.",0,[[["self"]],["bitvec"]]],[11,"shrink_to_fit","","Truncates the underlying vector to the least length…",0,[[["self"]]]],[11,"iter","","Iterator over each usize stored in the `BitSet`.",0,[[["self"]],["iter"]]],[11,"union","","Iterator over each usize stored in `self` union `other`.…",0,[[["self"],["self"]],["union"]]],[11,"intersection","","Iterator over each usize stored in `self` intersect…",0,[[["self"],["self"]],["intersection"]]],[11,"difference","","Iterator over each usize stored in the `self` setminus…",0,[[["self"],["self"]],["difference"]]],[11,"symmetric_difference","","Iterator over each usize stored in the symmetric…",0,[[["self"],["self"]],["symmetricdifference"]]],[11,"union_with","","Unions in-place with the specified other bit vector.",0,[[["self"],["self"]]]],[11,"intersect_with","","Intersects in-place with the specified other bit vector.",0,[[["self"],["self"]]]],[11,"difference_with","","Makes this bit vector the difference with the specified…",0,[[["self"],["self"]]]],[11,"symmetric_difference_with","","Makes this bit vector the symmetric difference with the…",0,[[["self"],["self"]]]],[11,"len","","Returns the number of set bits in this set.",0,[[["self"]],["usize"]]],[11,"is_empty","","Returns whether there are no bits set in this set",0,[[["self"]],["bool"]]],[11,"clear","","Clears all bits in this set",0,[[["self"]]]],[11,"contains","","Returns `true` if this set contains the specified integer.",0,[[["self"],["usize"]],["bool"]]],[11,"is_disjoint","","Returns `true` if the set has no elements in common with…",0,[[["self"],["self"]],["bool"]]],[11,"is_subset","","Returns `true` if the set is a subset of another.",0,[[["self"],["self"]],["bool"]]],[11,"is_superset","","Returns `true` if the set is a superset of another.",0,[[["self"],["self"]],["bool"]]],[11,"insert","","Adds a value to the set. Returns `true` if the value was…",0,[[["self"],["usize"]],["bool"]]],[11,"remove","","Removes a value from the set. Returns `true` if the value…",0,[[["self"],["usize"]],["bool"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into_iter","","",1,[[["self"]],["i"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into_iter","","",2,[[["self"]],["i"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into_iter","","",3,[[["self"]],["i"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into_iter","","",4,[[["self"]],["i"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into_iter","","",5,[[["self"]],["i"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"cmp","","",0,[[["self"],["self"]],["ordering"]]],[11,"eq","","",0,[[["self"],["self"]],["bool"]]],[11,"clone","","",0,[[["self"]],["self"]]],[11,"clone","","",1,[[["self"]],["iter"]]],[11,"clone","","",2,[[["self"]],["union"]]],[11,"clone","","",3,[[["self"]],["intersection"]]],[11,"clone","","",4,[[["self"]],["difference"]]],[11,"clone","","",5,[[["self"]],["symmetricdifference"]]],[11,"extend","","",0,[[["self"],["i"]]]],[11,"partial_cmp","","",0,[[["self"],["self"]],["option",["ordering"]]]],[11,"next","","",1,[[["self"]],["option",["usize"]]]],[11,"size_hint","","",1,N],[11,"next","","",2,[[["self"]],["option",["usize"]]]],[11,"size_hint","","",2,N],[11,"next","","",3,[[["self"]],["option",["usize"]]]],[11,"size_hint","","",3,N],[11,"next","","",4,[[["self"]],["option",["usize"]]]],[11,"size_hint","","",4,N],[11,"next","","",5,[[["self"]],["option",["usize"]]]],[11,"size_hint","","",5,N],[11,"default","","",0,[[],["self"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"hash","","",0,[[["self"],["h"]]]],[11,"from_iter","","",0,[[["i"]],["self"]]]],"paths":[[3,"BitSet"],[3,"Iter"],[3,"Union"],[3,"Intersection"],[3,"Difference"],[3,"SymmetricDifference"]]};
searchIndex["bit_vec"]={"doc":"Collections implemented with bit vectors.","items":[[3,"BitVec","bit_vec","The bitvector type.",N,N],[3,"Iter","","An iterator for `BitVec`.",N,N],[3,"IntoIter","","",N,N],[3,"Blocks","","An iterator over the blocks of a `BitVec`.",N,N],[8,"BitBlock","","Abstracts over a pile of bits (basically unsigned…",N,N],[10,"bits","","How many bits it has",0,[[],["usize"]]],[11,"bytes","","How many bytes it has",0,[[],["usize"]]],[10,"from_byte","","Convert a byte into this type (lowest-order bits set)",0,[[["u8"]],["self"]]],[10,"count_ones","","Count the number of 1's in the bitwise repr",0,[[["self"]],["usize"]]],[10,"zero","","Get `0`",0,[[],["self"]]],[10,"one","","Get `1`",0,[[],["self"]]],[11,"new","","Creates an empty `BitVec`.",1,[[],["self"]]],[11,"from_elem","","Creates a `BitVec` that holds `nbits` elements, setting…",1,[[["usize"],["bool"]],["self"]]],[11,"with_capacity","","Constructs a new, empty `BitVec` with the specified…",1,[[["usize"]],["self"]]],[11,"from_bytes","","Transforms a byte-vector into a `BitVec`. Each byte…",1,N],[11,"from_fn","","Creates a `BitVec` of the specified length where the value…",1,[[["usize"],["f"]],["self"]]],[11,"blocks","","Iterator over the underlying blocks of data",1,[[["self"]],["blocks"]]],[11,"storage","","Exposes the raw block storage of this BitVec",1,N],[11,"storage_mut","","Exposes the raw block storage of this BitVec",1,[[["self"]],["vec"]]],[11,"get","","Retrieves the value at index `i`, or `None` if the index…",1,[[["self"],["usize"]],["option",["bool"]]]],[11,"set","","Sets the value of a bit at an index `i`.",1,[[["self"],["usize"],["bool"]]]],[11,"set_all","","Sets all bits to 1.",1,[[["self"]]]],[11,"negate","","Flips all bits.",1,[[["self"]]]],[11,"union","","Calculates the union of two bitvectors. This acts like the…",1,[[["self"],["self"]],["bool"]]],[11,"intersect","","Calculates the intersection of two bitvectors. This acts…",1,[[["self"],["self"]],["bool"]]],[11,"difference","","Calculates the difference between two bitvectors.",1,[[["self"],["self"]],["bool"]]],[11,"all","","Returns `true` if all bits are 1.",1,[[["self"]],["bool"]]],[11,"iter","","Returns an iterator over the elements of the vector in…",1,[[["self"]],["iter"]]],[11,"none","","Returns `true` if all bits are 0.",1,[[["self"]],["bool"]]],[11,"any","","Returns `true` if any bit is 1.",1,[[["self"]],["bool"]]],[11,"to_bytes","","Organises the bits into bytes, such that the first bit in…",1,[[["self"]],["vec",["u8"]]]],[11,"eq_vec","","Compares a `BitVec` to a slice of `bool`s. Both the…",1,N],[11,"truncate","","Shortens a `BitVec`, dropping excess elements.",1,[[["self"],["usize"]]]],[11,"reserve","","Reserves capacity for at least `additional` more bits to…",1,[[["self"],["usize"]]]],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional`…",1,[[["self"],["usize"]]]],[11,"capacity","","Returns the capacity in bits for this bit vector.…",1,[[["self"]],["usize"]]],[11,"grow","","Grows the `BitVec` in-place, adding `n` copies of `value`…",1,[[["self"],["usize"],["bool"]]]],[11,"pop","","Removes the last bit from the BitVec, and returns it.…",1,[[["self"]],["option",["bool"]]]],[11,"push","","Pushes a `bool` onto the end.",1,[[["self"],["bool"]]]],[11,"len","","Returns the total number of bits in this vector",1,[[["self"]],["usize"]]],[11,"set_len","","Sets the number of bits that this BitVec considers…",1,[[["self"],["usize"]]]],[11,"is_empty","","Returns true if there are no bits in this vector",1,[[["self"]],["bool"]]],[11,"clear","","Clears all bits in this vector.",1,[[["self"]]]],[11,"shrink_to_fit","","Shrinks the capacity of the underlying storage as much as…",1,[[["self"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into_iter","","",1,[[["self"]],["i"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into_iter","","",2,[[["self"]],["i"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into_iter","","",3,[[["self"]],["i"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into_iter","","",4,[[["self"]],["i"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"eq","","",1,[[["self"],["self"]],["bool"]]],[11,"cmp","","",1,[[["self"],["self"]],["ordering"]]],[11,"partial_cmp","","",1,[[["self"],["self"]],["option",["ordering"]]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"index","","",1,[[["self"],["usize"]],["bool"]]],[11,"hash","","",1,[[["self"],["h"]]]],[11,"from_iter","","",1,[[["i"]],["self"]]],[11,"next_back","","",2,[[["self"]],["option",["bool"]]]],[11,"next_back","","",3,[[["self"]],["option",["bool"]]]],[11,"next_back","","",4,[[["self"]],["option"]]],[11,"extend","","",1,[[["self"],["i"]]]],[11,"next","","",2,[[["self"]],["option",["bool"]]]],[11,"size_hint","","",2,N],[11,"next","","",3,[[["self"]],["option",["bool"]]]],[11,"next","","",4,[[["self"]],["option"]]],[11,"size_hint","","",4,N],[11,"into_iter","","",1,[[["self"]],["intoiter"]]],[11,"clone","","",1,[[["self"]],["self"]]],[11,"clone_from","","",1,[[["self"],["self"]]]],[11,"clone","","",2,[[["self"]],["iter"]]],[11,"clone","","",4,[[["self"]],["blocks"]]],[11,"default","","",1,[[],["self"]]]],"paths":[[8,"BitBlock"],[3,"BitVec"],[3,"Iter"],[3,"IntoIter"],[3,"Blocks"]]};
searchIndex["bitflags"]={"doc":"A typesafe bitmask flag generator useful for sets of…","items":[[14,"bitflags","bitflags","The macro used to generate the flag structure.",N,N]],"paths":[]};
searchIndex["byteorder"]={"doc":"This crate provides convenience methods for encoding and…","items":[[4,"BigEndian","byteorder","Defines big-endian serialization.",N,N],[4,"LittleEndian","","Defines little-endian serialization.",N,N],[6,"BE","","A type alias for [`BigEndian`].",N,N],[6,"LE","","A type alias for [`LittleEndian`].",N,N],[6,"NetworkEndian","","Defines network byte order serialization.",N,N],[6,"NativeEndian","","Defines system native-endian serialization.",N,N],[8,"ReadBytesExt","","Extends [`Read`] with methods for reading numbers. (For…",N,N],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",0,[[["self"]],["result",["u8"]]]],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,[[["self"]],["result",["i8"]]]],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",0,[[["self"]],["result",["u16"]]]],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,[[["self"]],["result",["i16"]]]],[11,"read_u24","","Reads an unsigned 24 bit integer from the underlying reader.",0,[[["self"]],["result",["u32"]]]],[11,"read_i24","","Reads a signed 24 bit integer from the underlying reader.",0,[[["self"]],["result",["i32"]]]],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",0,[[["self"]],["result",["u32"]]]],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,[[["self"]],["result",["i32"]]]],[11,"read_u48","","Reads an unsigned 48 bit integer from the underlying reader.",0,[[["self"]],["result",["u64"]]]],[11,"read_i48","","Reads a signed 48 bit integer from the underlying reader.",0,[[["self"]],["result",["i64"]]]],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",0,[[["self"]],["result",["u64"]]]],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,[[["self"]],["result",["i64"]]]],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying…",0,[[["self"],["usize"]],["result",["u64"]]]],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,[[["self"],["usize"]],["result",["i64"]]]],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point…",0,[[["self"]],["result",["f32"]]]],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point…",0,[[["self"]],["result",["f64"]]]],[11,"read_u16_into","","Reads a sequence of unsigned 16 bit integers from the…",0,N],[11,"read_u32_into","","Reads a sequence of unsigned 32 bit integers from the…",0,N],[11,"read_u64_into","","Reads a sequence of unsigned 64 bit integers from the…",0,N],[11,"read_i16_into","","Reads a sequence of signed 16 bit integers from the…",0,N],[11,"read_i32_into","","Reads a sequence of signed 32 bit integers from the…",0,N],[11,"read_i64_into","","Reads a sequence of signed 64 bit integers from the…",0,N],[11,"read_f32_into","","Reads a sequence of IEEE754 single-precision (4 bytes)…",0,N],[11,"read_f32_into_unchecked","","DEPRECATED.",0,N],[11,"read_f64_into","","Reads a sequence of IEEE754 double-precision (8 bytes)…",0,N],[11,"read_f64_into_unchecked","","DEPRECATED.",0,N],[8,"WriteBytesExt","","Extends [`Write`] with methods for writing numbers. (For…",N,N],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,[[["self"],["u8"]],["result"]]],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,[[["self"],["i8"]],["result"]]],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",1,[[["self"],["u16"]],["result"]]],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,[[["self"],["i16"]],["result"]]],[11,"write_u24","","Writes an unsigned 24 bit integer to the underlying writer.",1,[[["self"],["u32"]],["result"]]],[11,"write_i24","","Writes a signed 24 bit integer to the underlying writer.",1,[[["self"],["i32"]],["result"]]],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",1,[[["self"],["u32"]],["result"]]],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,[[["self"],["i32"]],["result"]]],[11,"write_u48","","Writes an unsigned 48 bit integer to the underlying writer.",1,[[["self"],["u64"]],["result"]]],[11,"write_i48","","Writes a signed 48 bit integer to the underlying writer.",1,[[["self"],["i64"]],["result"]]],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",1,[[["self"],["u64"]],["result"]]],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,[[["self"],["i64"]],["result"]]],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying writer.",1,[[["self"],["u64"],["usize"]],["result"]]],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,[[["self"],["i64"],["usize"]],["result"]]],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point…",1,[[["self"],["f32"]],["result"]]],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point…",1,[[["self"],["f64"]],["result"]]],[8,"ByteOrder","","`ByteOrder` describes types that can serialize integers as…",N,N],[10,"read_u16","","Reads an unsigned 16 bit integer from `buf`.",2,N],[11,"read_u24","","Reads an unsigned 24 bit integer from `buf`, stored in u32.",2,N],[10,"read_u32","","Reads an unsigned 32 bit integer from `buf`.",2,N],[11,"read_u48","","Reads an unsigned 48 bit integer from `buf`, stored in u64.",2,N],[10,"read_u64","","Reads an unsigned 64 bit integer from `buf`.",2,N],[10,"read_uint","","Reads an unsigned n-bytes integer from `buf`.",2,N],[10,"write_u16","","Writes an unsigned 16 bit integer `n` to `buf`.",2,N],[11,"write_u24","","Writes an unsigned 24 bit integer `n` to `buf`, stored in…",2,N],[10,"write_u32","","Writes an unsigned 32 bit integer `n` to `buf`.",2,N],[11,"write_u48","","Writes an unsigned 48 bit integer `n` to `buf`, stored in…",2,N],[10,"write_u64","","Writes an unsigned 64 bit integer `n` to `buf`.",2,N],[10,"write_uint","","Writes an unsigned integer `n` to `buf` using only `nbytes`.",2,N],[11,"read_i16","","Reads a signed 16 bit integer from `buf`.",2,N],[11,"read_i24","","Reads a signed 24 bit integer from `buf`, stored in i32.",2,N],[11,"read_i32","","Reads a signed 32 bit integer from `buf`.",2,N],[11,"read_i48","","Reads a signed 48 bit integer from `buf`, stored in i64.",2,N],[11,"read_i64","","Reads a signed 64 bit integer from `buf`.",2,N],[11,"read_int","","Reads a signed n-bytes integer from `buf`.",2,N],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point…",2,N],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point…",2,N],[11,"write_i16","","Writes a signed 16 bit integer `n` to `buf`.",2,N],[11,"write_i24","","Writes a signed 24 bit integer `n` to `buf`, stored in i32.",2,N],[11,"write_i32","","Writes a signed 32 bit integer `n` to `buf`.",2,N],[11,"write_i48","","Writes a signed 48 bit integer `n` to `buf`, stored in i64.",2,N],[11,"write_i64","","Writes a signed 64 bit integer `n` to `buf`.",2,N],[11,"write_int","","Writes a signed integer `n` to `buf` using only `nbytes`.",2,N],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point…",2,N],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point…",2,N],[10,"read_u16_into","","Reads unsigned 16 bit integers from `src` into `dst`.",2,N],[10,"read_u32_into","","Reads unsigned 32 bit integers from `src` into `dst`.",2,N],[10,"read_u64_into","","Reads unsigned 64 bit integers from `src` into `dst`.",2,N],[11,"read_i16_into","","Reads signed 16 bit integers from `src` to `dst`.",2,N],[11,"read_i32_into","","Reads signed 32 bit integers from `src` into `dst`.",2,N],[11,"read_i64_into","","Reads signed 64 bit integers from `src` into `dst`.",2,N],[11,"read_f32_into_unchecked","","Reads IEEE754 single-precision (4 bytes) floating point…",2,N],[11,"read_f64_into_unchecked","","Reads IEEE754 single-precision (4 bytes) floating point…",2,N],[10,"write_u16_into","","Writes unsigned 16 bit integers from `src` into `dst`.",2,N],[10,"write_u32_into","","Writes unsigned 32 bit integers from `src` into `dst`.",2,N],[10,"write_u64_into","","Writes unsigned 64 bit integers from `src` into `dst`.",2,N],[11,"write_i16_into","","Writes signed 16 bit integers from `src` into `dst`.",2,N],[11,"write_i32_into","","Writes signed 32 bit integers from `src` into `dst`.",2,N],[11,"write_i64_into","","Writes signed 64 bit integers from `src` into `dst`.",2,N],[11,"write_f32_into","","Writes IEEE754 single-precision (4 bytes) floating point…",2,N],[11,"write_f64_into","","Writes IEEE754 double-precision (8 bytes) floating point…",2,N],[10,"from_slice_u16","","Converts the given slice of unsigned 16 bit integers to a…",2,N],[10,"from_slice_u32","","Converts the given slice of unsigned 32 bit integers to a…",2,N],[10,"from_slice_u64","","Converts the given slice of unsigned 64 bit integers to a…",2,N],[11,"from_slice_i16","","Converts the given slice of signed 16 bit integers to a…",2,N],[11,"from_slice_i32","","Converts the given slice of signed 32 bit integers to a…",2,N],[11,"from_slice_i64","","Converts the given slice of signed 64 bit integers to a…",2,N],[10,"from_slice_f32","","Converts the given slice of IEEE754 single-precision (4…",2,N],[10,"from_slice_f64","","Converts the given slice of IEEE754 double-precision (8…",2,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"read_u16","","",3,N],[11,"read_u32","","",3,N],[11,"read_u64","","",3,N],[11,"read_uint","","",3,N],[11,"write_u16","","",3,N],[11,"write_u32","","",3,N],[11,"write_u64","","",3,N],[11,"write_uint","","",3,N],[11,"read_u16_into","","",3,N],[11,"read_u32_into","","",3,N],[11,"read_u64_into","","",3,N],[11,"write_u16_into","","",3,N],[11,"write_u32_into","","",3,N],[11,"write_u64_into","","",3,N],[11,"from_slice_u16","","",3,N],[11,"from_slice_u32","","",3,N],[11,"from_slice_u64","","",3,N],[11,"from_slice_f32","","",3,N],[11,"from_slice_f64","","",3,N],[11,"read_u16","","",4,N],[11,"read_u32","","",4,N],[11,"read_u64","","",4,N],[11,"read_uint","","",4,N],[11,"write_u16","","",4,N],[11,"write_u32","","",4,N],[11,"write_u64","","",4,N],[11,"write_uint","","",4,N],[11,"read_u16_into","","",4,N],[11,"read_u32_into","","",4,N],[11,"read_u64_into","","",4,N],[11,"write_u16_into","","",4,N],[11,"write_u32_into","","",4,N],[11,"write_u64_into","","",4,N],[11,"from_slice_u16","","",4,N],[11,"from_slice_u32","","",4,N],[11,"from_slice_u64","","",4,N],[11,"from_slice_f32","","",4,N],[11,"from_slice_f64","","",4,N],[11,"cmp","","",3,[[["self"],["bigendian"]],["ordering"]]],[11,"cmp","","",4,[[["self"],["littleendian"]],["ordering"]]],[11,"eq","","",3,[[["self"],["bigendian"]],["bool"]]],[11,"eq","","",4,[[["self"],["littleendian"]],["bool"]]],[11,"clone","","",3,[[["self"]],["bigendian"]]],[11,"clone","","",4,[[["self"]],["littleendian"]]],[11,"partial_cmp","","",3,[[["self"],["bigendian"]],["option",["ordering"]]]],[11,"partial_cmp","","",4,[[["self"],["littleendian"]],["option",["ordering"]]]],[11,"default","","",3,[[],["bigendian"]]],[11,"default","","",4,[[],["littleendian"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"hash","","",3,N],[11,"hash","","",4,N],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",0,[[["self"]],["result",["u8"]]]],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,[[["self"]],["result",["i8"]]]],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",0,[[["self"]],["result",["u16"]]]],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,[[["self"]],["result",["i16"]]]],[11,"read_u24","","Reads an unsigned 24 bit integer from the underlying reader.",0,[[["self"]],["result",["u32"]]]],[11,"read_i24","","Reads a signed 24 bit integer from the underlying reader.",0,[[["self"]],["result",["i32"]]]],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",0,[[["self"]],["result",["u32"]]]],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,[[["self"]],["result",["i32"]]]],[11,"read_u48","","Reads an unsigned 48 bit integer from the underlying reader.",0,[[["self"]],["result",["u64"]]]],[11,"read_i48","","Reads a signed 48 bit integer from the underlying reader.",0,[[["self"]],["result",["i64"]]]],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",0,[[["self"]],["result",["u64"]]]],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,[[["self"]],["result",["i64"]]]],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying…",0,[[["self"],["usize"]],["result",["u64"]]]],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,[[["self"],["usize"]],["result",["i64"]]]],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point…",0,[[["self"]],["result",["f32"]]]],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point…",0,[[["self"]],["result",["f64"]]]],[11,"read_u16_into","","Reads a sequence of unsigned 16 bit integers from the…",0,N],[11,"read_u32_into","","Reads a sequence of unsigned 32 bit integers from the…",0,N],[11,"read_u64_into","","Reads a sequence of unsigned 64 bit integers from the…",0,N],[11,"read_i16_into","","Reads a sequence of signed 16 bit integers from the…",0,N],[11,"read_i32_into","","Reads a sequence of signed 32 bit integers from the…",0,N],[11,"read_i64_into","","Reads a sequence of signed 64 bit integers from the…",0,N],[11,"read_f32_into","","Reads a sequence of IEEE754 single-precision (4 bytes)…",0,N],[11,"read_f32_into_unchecked","","DEPRECATED.",0,N],[11,"read_f64_into","","Reads a sequence of IEEE754 double-precision (8 bytes)…",0,N],[11,"read_f64_into_unchecked","","DEPRECATED.",0,N],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,[[["self"],["u8"]],["result"]]],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,[[["self"],["i8"]],["result"]]],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",1,[[["self"],["u16"]],["result"]]],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,[[["self"],["i16"]],["result"]]],[11,"write_u24","","Writes an unsigned 24 bit integer to the underlying writer.",1,[[["self"],["u32"]],["result"]]],[11,"write_i24","","Writes a signed 24 bit integer to the underlying writer.",1,[[["self"],["i32"]],["result"]]],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",1,[[["self"],["u32"]],["result"]]],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,[[["self"],["i32"]],["result"]]],[11,"write_u48","","Writes an unsigned 48 bit integer to the underlying writer.",1,[[["self"],["u64"]],["result"]]],[11,"write_i48","","Writes a signed 48 bit integer to the underlying writer.",1,[[["self"],["i64"]],["result"]]],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",1,[[["self"],["u64"]],["result"]]],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,[[["self"],["i64"]],["result"]]],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying writer.",1,[[["self"],["u64"],["usize"]],["result"]]],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,[[["self"],["i64"],["usize"]],["result"]]],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point…",1,[[["self"],["f32"]],["result"]]],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point…",1,[[["self"],["f64"]],["result"]]]],"paths":[[8,"ReadBytesExt"],[8,"WriteBytesExt"],[8,"ByteOrder"],[4,"BigEndian"],[4,"LittleEndian"]]};
searchIndex["bytes"]={"doc":"Provides abstractions for working with bytes.","items":[[8,"ByteOrder","bytes","`ByteOrder` describes types that can serialize integers as…",N,N],[10,"read_u16","","Reads an unsigned 16 bit integer from `buf`.",0,N],[11,"read_u24","","Reads an unsigned 24 bit integer from `buf`, stored in u32.",0,N],[10,"read_u32","","Reads an unsigned 32 bit integer from `buf`.",0,N],[11,"read_u48","","Reads an unsigned 48 bit integer from `buf`, stored in u64.",0,N],[10,"read_u64","","Reads an unsigned 64 bit integer from `buf`.",0,N],[10,"read_uint","","Reads an unsigned n-bytes integer from `buf`.",0,N],[10,"write_u16","","Writes an unsigned 16 bit integer `n` to `buf`.",0,N],[11,"write_u24","","Writes an unsigned 24 bit integer `n` to `buf`, stored in…",0,N],[10,"write_u32","","Writes an unsigned 32 bit integer `n` to `buf`.",0,N],[11,"write_u48","","Writes an unsigned 48 bit integer `n` to `buf`, stored in…",0,N],[10,"write_u64","","Writes an unsigned 64 bit integer `n` to `buf`.",0,N],[10,"write_uint","","Writes an unsigned integer `n` to `buf` using only `nbytes`.",0,N],[11,"read_i16","","Reads a signed 16 bit integer from `buf`.",0,N],[11,"read_i24","","Reads a signed 24 bit integer from `buf`, stored in i32.",0,N],[11,"read_i32","","Reads a signed 32 bit integer from `buf`.",0,N],[11,"read_i48","","Reads a signed 48 bit integer from `buf`, stored in i64.",0,N],[11,"read_i64","","Reads a signed 64 bit integer from `buf`.",0,N],[11,"read_int","","Reads a signed n-bytes integer from `buf`.",0,N],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point…",0,N],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point…",0,N],[11,"write_i16","","Writes a signed 16 bit integer `n` to `buf`.",0,N],[11,"write_i24","","Writes a signed 24 bit integer `n` to `buf`, stored in i32.",0,N],[11,"write_i32","","Writes a signed 32 bit integer `n` to `buf`.",0,N],[11,"write_i48","","Writes a signed 48 bit integer `n` to `buf`, stored in i64.",0,N],[11,"write_i64","","Writes a signed 64 bit integer `n` to `buf`.",0,N],[11,"write_int","","Writes a signed integer `n` to `buf` using only `nbytes`.",0,N],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point…",0,N],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point…",0,N],[10,"read_u16_into","","Reads unsigned 16 bit integers from `src` into `dst`.",0,N],[10,"read_u32_into","","Reads unsigned 32 bit integers from `src` into `dst`.",0,N],[10,"read_u64_into","","Reads unsigned 64 bit integers from `src` into `dst`.",0,N],[11,"read_i16_into","","Reads signed 16 bit integers from `src` to `dst`.",0,N],[11,"read_i32_into","","Reads signed 32 bit integers from `src` into `dst`.",0,N],[11,"read_i64_into","","Reads signed 64 bit integers from `src` into `dst`.",0,N],[11,"read_f32_into_unchecked","","Reads IEEE754 single-precision (4 bytes) floating point…",0,N],[11,"read_f64_into_unchecked","","Reads IEEE754 single-precision (4 bytes) floating point…",0,N],[10,"write_u16_into","","Writes unsigned 16 bit integers from `src` into `dst`.",0,N],[10,"write_u32_into","","Writes unsigned 32 bit integers from `src` into `dst`.",0,N],[10,"write_u64_into","","Writes unsigned 64 bit integers from `src` into `dst`.",0,N],[11,"write_i16_into","","Writes signed 16 bit integers from `src` into `dst`.",0,N],[11,"write_i32_into","","Writes signed 32 bit integers from `src` into `dst`.",0,N],[11,"write_i64_into","","Writes signed 64 bit integers from `src` into `dst`.",0,N],[11,"write_f32_into","","Writes IEEE754 single-precision (4 bytes) floating point…",0,N],[11,"write_f64_into","","Writes IEEE754 double-precision (8 bytes) floating point…",0,N],[10,"from_slice_u16","","Converts the given slice of unsigned 16 bit integers to a…",0,N],[10,"from_slice_u32","","Converts the given slice of unsigned 32 bit integers to a…",0,N],[10,"from_slice_u64","","Converts the given slice of unsigned 64 bit integers to a…",0,N],[11,"from_slice_i16","","Converts the given slice of signed 16 bit integers to a…",0,N],[11,"from_slice_i32","","Converts the given slice of signed 32 bit integers to a…",0,N],[11,"from_slice_i64","","Converts the given slice of signed 64 bit integers to a…",0,N],[10,"from_slice_f32","","Converts the given slice of IEEE754 single-precision (4…",0,N],[10,"from_slice_f64","","Converts the given slice of IEEE754 double-precision (8…",0,N],[4,"BigEndian","","Defines big-endian serialization.",N,N],[4,"LittleEndian","","Defines little-endian serialization.",N,N],[3,"Bytes","","A reference counted contiguous slice of memory.",N,N],[3,"BytesMut","","A unique reference to a contiguous slice of memory.",N,N],[0,"buf","","Utilities for working with buffers.",N,N],[3,"Chain","bytes::buf","A `Chain` sequences two buffers.",N,N],[3,"Iter","","Iterator over the bytes contained by the buffer.",N,N],[3,"Reader","","A `Buf` adapter which implements `io::Read` for the inner…",N,N],[3,"Take","","A `Buf` adapter which limits the bytes read from an…",N,N],[3,"Writer","","A `BufMut` adapter which implements `io::Write` for the…",N,N],[11,"new","","Creates a new `Chain` sequencing the provided values.",1,[[["t"],["u"]],["chain"]]],[11,"first_ref","","Gets a reference to the first underlying `Buf`.",1,[[["self"]],["t"]]],[11,"first_mut","","Gets a mutable reference to the first underlying `Buf`.",1,[[["self"]],["t"]]],[11,"last_ref","","Gets a reference to the last underlying `Buf`.",1,[[["self"]],["u"]]],[11,"last_mut","","Gets a mutable reference to the last underlying `Buf`.",1,[[["self"]],["u"]]],[11,"into_inner","","Consumes this `Chain`, returning the underlying values.",1,N],[11,"into_inner","","Consumes this `Iter`, returning the underlying value.",2,[[["self"]],["t"]]],[11,"get_ref","","Gets a reference to the underlying `Buf`.",2,[[["self"]],["t"]]],[11,"get_mut","","Gets a mutable reference to the underlying `Buf`.",2,[[["self"]],["t"]]],[11,"get_ref","","Gets a reference to the underlying `Buf`.",3,[[["self"]],["b"]]],[11,"get_mut","","Gets a mutable reference to the underlying `Buf`.",3,[[["self"]],["b"]]],[11,"into_inner","","Consumes this `Reader`, returning the underlying value.",3,[[["self"]],["b"]]],[11,"into_inner","","Consumes this `Take`, returning the underlying value.",4,[[["self"]],["t"]]],[11,"get_ref","","Gets a reference to the underlying `Buf`.",4,[[["self"]],["t"]]],[11,"get_mut","","Gets a mutable reference to the underlying `Buf`.",4,[[["self"]],["t"]]],[11,"limit","","Returns the maximum number of bytes that can be read.",4,[[["self"]],["usize"]]],[11,"set_limit","","Sets the maximum number of bytes that can be read.",4,[[["self"],["usize"]]]],[11,"get_ref","","Gets a reference to the underlying `BufMut`.",5,[[["self"]],["b"]]],[11,"get_mut","","Gets a mutable reference to the underlying `BufMut`.",5,[[["self"]],["b"]]],[11,"into_inner","","Consumes this `Writer`, returning the underlying value.",5,[[["self"]],["b"]]],[8,"Buf","","Read bytes from a buffer.",N,N],[10,"remaining","","Returns the number of bytes between the current position…",6,[[["self"]],["usize"]]],[10,"bytes","","Returns a slice starting at the current position and of…",6,N],[11,"bytes_vec","","Fills `dst` with potentially multiple slices starting at…",6,N],[10,"advance","","Advance the internal cursor of the Buf",6,[[["self"],["usize"]]]],[11,"has_remaining","","Returns true if there are any more bytes to consume",6,[[["self"]],["bool"]]],[11,"copy_to_slice","","Copies bytes from `self` into `dst`.",6,N],[11,"get_u8","","Gets an unsigned 8 bit integer from `self`.",6,[[["self"]],["u8"]]],[11,"get_i8","","Gets a signed 8 bit integer from `self`.",6,[[["self"]],["i8"]]],[11,"get_u16_be","","Gets an unsigned 16 bit integer from `self` in big-endian…",6,[[["self"]],["u16"]]],[11,"get_u16_le","","Gets an unsigned 16 bit integer from `self` in…",6,[[["self"]],["u16"]]],[11,"get_i16_be","","Gets a signed 16 bit integer from `self` in big-endian…",6,[[["self"]],["i16"]]],[11,"get_i16_le","","Gets a signed 16 bit integer from `self` in little-endian…",6,[[["self"]],["i16"]]],[11,"get_u32_be","","Gets an unsigned 32 bit integer from `self` in the…",6,[[["self"]],["u32"]]],[11,"get_u32_le","","Gets an unsigned 32 bit integer from `self` in the…",6,[[["self"]],["u32"]]],[11,"get_i32_be","","Gets a signed 32 bit integer from `self` in big-endian…",6,[[["self"]],["i32"]]],[11,"get_i32_le","","Gets a signed 32 bit integer from `self` in little-endian…",6,[[["self"]],["i32"]]],[11,"get_u64_be","","Gets an unsigned 64 bit integer from `self` in big-endian…",6,[[["self"]],["u64"]]],[11,"get_u64_le","","Gets an unsigned 64 bit integer from `self` in…",6,[[["self"]],["u64"]]],[11,"get_i64_be","","Gets a signed 64 bit integer from `self` in big-endian…",6,[[["self"]],["i64"]]],[11,"get_i64_le","","Gets a signed 64 bit integer from `self` in little-endian…",6,[[["self"]],["i64"]]],[11,"get_uint_be","","Gets an unsigned n-byte integer from `self` in big-endian…",6,[[["self"],["usize"]],["u64"]]],[11,"get_uint_le","","Gets an unsigned n-byte integer from `self` in…",6,[[["self"],["usize"]],["u64"]]],[11,"get_int_be","","Gets a signed n-byte integer from `self` in big-endian…",6,[[["self"],["usize"]],["i64"]]],[11,"get_int_le","","Gets a signed n-byte integer from `self` in little-endian…",6,[[["self"],["usize"]],["i64"]]],[11,"get_f32_be","","Gets an IEEE754 single-precision (4 bytes) floating point…",6,[[["self"]],["f32"]]],[11,"get_f32_le","","Gets an IEEE754 single-precision (4 bytes) floating point…",6,[[["self"]],["f32"]]],[11,"get_f64_be","","Gets an IEEE754 double-precision (8 bytes) floating point…",6,[[["self"]],["f64"]]],[11,"get_f64_le","","Gets an IEEE754 double-precision (8 bytes) floating point…",6,[[["self"]],["f64"]]],[11,"collect","","Transforms a `Buf` into a concrete buffer.",6,[[["self"]],["b"]]],[11,"take","","Creates an adaptor which will read at most `limit` bytes…",6,[[["self"],["usize"]],["take"]]],[11,"chain","","Creates an adaptor which will chain this buffer with…",6,[[["self"],["u"]],["chain"]]],[11,"by_ref","","Creates a \"by reference\" adaptor for this instance of `Buf`.",6,[[["self"]],["self"]]],[11,"reader","","Creates an adaptor which implements the `Read` trait for…",6,[[["self"]],["reader"]]],[11,"iter","","Returns an iterator over the bytes contained by the buffer.",6,[[["self"]],["iter"]]],[8,"BufMut","","A trait for values that provide sequential write access to…",N,N],[10,"remaining_mut","","Returns the number of bytes that can be written from the…",7,[[["self"]],["usize"]]],[10,"advance_mut","","Advance the internal cursor of the BufMut",7,[[["self"],["usize"]]]],[11,"has_remaining_mut","","Returns true if there is space in `self` for more bytes.",7,[[["self"]],["bool"]]],[10,"bytes_mut","","Returns a mutable slice starting at the current BufMut…",7,N],[11,"bytes_vec_mut","","Fills `dst` with potentially multiple mutable slices…",7,N],[11,"put","","Transfer bytes into `self` from `src` and advance the…",7,[[["self"],["t"]]]],[11,"put_slice","","Transfer bytes into `self` from `src` and advance the…",7,N],[11,"put_u8","","Writes an unsigned 8 bit integer to `self`.",7,[[["self"],["u8"]]]],[11,"put_i8","","Writes a signed 8 bit integer to `self`.",7,[[["self"],["i8"]]]],[11,"put_u16_be","","Writes an unsigned 16 bit integer to `self` in big-endian…",7,[[["self"],["u16"]]]],[11,"put_u16_le","","Writes an unsigned 16 bit integer to `self` in…",7,[[["self"],["u16"]]]],[11,"put_i16_be","","Writes a signed 16 bit integer to `self` in big-endian…",7,[[["self"],["i16"]]]],[11,"put_i16_le","","Writes a signed 16 bit integer to `self` in little-endian…",7,[[["self"],["i16"]]]],[11,"put_u32_be","","Writes an unsigned 32 bit integer to `self` in big-endian…",7,[[["self"],["u32"]]]],[11,"put_u32_le","","Writes an unsigned 32 bit integer to `self` in…",7,[[["self"],["u32"]]]],[11,"put_i32_be","","Writes a signed 32 bit integer to `self` in big-endian…",7,[[["self"],["i32"]]]],[11,"put_i32_le","","Writes a signed 32 bit integer to `self` in little-endian…",7,[[["self"],["i32"]]]],[11,"put_u64_be","","Writes an unsigned 64 bit integer to `self` in the…",7,[[["self"],["u64"]]]],[11,"put_u64_le","","Writes an unsigned 64 bit integer to `self` in…",7,[[["self"],["u64"]]]],[11,"put_i64_be","","Writes a signed 64 bit integer to `self` in the big-endian…",7,[[["self"],["i64"]]]],[11,"put_i64_le","","Writes a signed 64 bit integer to `self` in little-endian…",7,[[["self"],["i64"]]]],[11,"put_uint_be","","Writes an unsigned n-byte integer to `self` in big-endian…",7,[[["self"],["u64"],["usize"]]]],[11,"put_uint_le","","Writes an unsigned n-byte integer to `self` in the…",7,[[["self"],["u64"],["usize"]]]],[11,"put_int_be","","Writes a signed n-byte integer to `self` in big-endian…",7,[[["self"],["i64"],["usize"]]]],[11,"put_int_le","","Writes a signed n-byte integer to `self` in little-endian…",7,[[["self"],["i64"],["usize"]]]],[11,"put_f32_be","","Writes an IEEE754 single-precision (4 bytes) floating…",7,[[["self"],["f32"]]]],[11,"put_f32_le","","Writes an IEEE754 single-precision (4 bytes) floating…",7,[[["self"],["f32"]]]],[11,"put_f64_be","","Writes an IEEE754 double-precision (8 bytes) floating…",7,[[["self"],["f64"]]]],[11,"put_f64_le","","Writes an IEEE754 double-precision (8 bytes) floating…",7,[[["self"],["f64"]]]],[11,"by_ref","","Creates a \"by reference\" adaptor for this instance of…",7,[[["self"]],["self"]]],[11,"writer","","Creates an adaptor which implements the `Write` trait for…",7,[[["self"]],["writer"]]],[8,"FromBuf","","Conversion from a [`Buf`]",N,N],[10,"from_buf","","Creates a value from a buffer.",8,[[["t"]],["self"]]],[8,"IntoBuf","","Conversion into a `Buf`",N,N],[16,"Buf","","The `Buf` type that `self` is being converted into",9,N],[10,"into_buf","","Creates a `Buf` from a value.",9,N],[11,"with_capacity","bytes","Creates a new `Bytes` with the specified capacity.",10,[[["usize"]],["bytes"]]],[11,"new","","Creates a new empty `Bytes`.",10,[[],["bytes"]]],[11,"from_static","","Creates a new `Bytes` from a static slice.",10,N],[11,"len","","Returns the number of bytes contained in this `Bytes`.",10,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the `Bytes` has a length of 0.",10,[[["self"]],["bool"]]],[11,"slice","","Returns a slice of self for the index range `[begin..end)`.",10,[[["self"],["usize"],["usize"]],["bytes"]]],[11,"slice_from","","Returns a slice of self for the index range…",10,[[["self"],["usize"]],["bytes"]]],[11,"slice_to","","Returns a slice of self for the index range `[0..end)`.",10,[[["self"],["usize"]],["bytes"]]],[11,"slice_ref","","Returns a slice of self that is equivalent to the given…",10,N],[11,"split_off","","Splits the bytes into two at the given index.",10,[[["self"],["usize"]],["bytes"]]],[11,"split_to","","Splits the bytes into two at the given index.",10,[[["self"],["usize"]],["bytes"]]],[11,"truncate","","Shortens the buffer, keeping the first `len` bytes and…",10,[[["self"],["usize"]]]],[11,"advance","","Shortens the buffer, dropping the first `cnt` bytes and…",10,[[["self"],["usize"]]]],[11,"clear","","Clears the buffer, removing all data.",10,[[["self"]]]],[11,"try_mut","","Attempts to convert into a `BytesMut` handle.",10,[[["self"]],["result",["bytesmut","bytes"]]]],[11,"extend_from_slice","","Appends given bytes to this object.",10,N],[11,"with_capacity","","Creates a new `BytesMut` with the specified capacity.",11,[[["usize"]],["bytesmut"]]],[11,"new","","Creates a new `BytesMut` with default capacity.",11,[[],["bytesmut"]]],[11,"len","","Returns the number of bytes contained in this `BytesMut`.",11,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the `BytesMut` has a length of 0.",11,[[["self"]],["bool"]]],[11,"capacity","","Returns the number of bytes the `BytesMut` can hold…",11,[[["self"]],["usize"]]],[11,"freeze","","Converts `self` into an immutable `Bytes`.",11,[[["self"]],["bytes"]]],[11,"split_off","","Splits the bytes into two at the given index.",11,[[["self"],["usize"]],["bytesmut"]]],[11,"take","","Removes the bytes from the current view, returning them in…",11,[[["self"]],["bytesmut"]]],[11,"split_to","","Splits the buffer into two at the given index.",11,[[["self"],["usize"]],["bytesmut"]]],[11,"truncate","","Shortens the buffer, keeping the first `len` bytes and…",11,[[["self"],["usize"]]]],[11,"advance","","Shortens the buffer, dropping the first `cnt` bytes and…",11,[[["self"],["usize"]]]],[11,"clear","","Clears the buffer, removing all data.",11,[[["self"]]]],[11,"resize","","Resizes the buffer so that `len` is equal to `new_len`.",11,[[["self"],["usize"],["u8"]]]],[11,"set_len","","Sets the length of the buffer.",11,[[["self"],["usize"]]]],[11,"reserve","","Reserves capacity for at least `additional` more bytes to…",11,[[["self"],["usize"]]]],[11,"extend_from_slice","","Appends given bytes to this object.",11,N],[11,"unsplit","","Combine splitted BytesMut objects back as contiguous.",11,[[["self"],["bytesmut"]]]],[8,"Buf","","Read bytes from a buffer.",N,N],[10,"remaining","","Returns the number of bytes between the current position…",6,[[["self"]],["usize"]]],[10,"bytes","","Returns a slice starting at the current position and of…",6,N],[11,"bytes_vec","bytes::buf","Fills `dst` with potentially multiple slices starting at…",6,N],[10,"advance","bytes","Advance the internal cursor of the Buf",6,[[["self"],["usize"]]]],[11,"has_remaining","bytes::buf","Returns true if there are any more bytes to consume",6,[[["self"]],["bool"]]],[11,"copy_to_slice","","Copies bytes from `self` into `dst`.",6,N],[11,"get_u8","","Gets an unsigned 8 bit integer from `self`.",6,[[["self"]],["u8"]]],[11,"get_i8","","Gets a signed 8 bit integer from `self`.",6,[[["self"]],["i8"]]],[11,"get_u16_be","","Gets an unsigned 16 bit integer from `self` in big-endian…",6,[[["self"]],["u16"]]],[11,"get_u16_le","","Gets an unsigned 16 bit integer from `self` in…",6,[[["self"]],["u16"]]],[11,"get_i16_be","","Gets a signed 16 bit integer from `self` in big-endian…",6,[[["self"]],["i16"]]],[11,"get_i16_le","","Gets a signed 16 bit integer from `self` in little-endian…",6,[[["self"]],["i16"]]],[11,"get_u32_be","","Gets an unsigned 32 bit integer from `self` in the…",6,[[["self"]],["u32"]]],[11,"get_u32_le","","Gets an unsigned 32 bit integer from `self` in the…",6,[[["self"]],["u32"]]],[11,"get_i32_be","","Gets a signed 32 bit integer from `self` in big-endian…",6,[[["self"]],["i32"]]],[11,"get_i32_le","","Gets a signed 32 bit integer from `self` in little-endian…",6,[[["self"]],["i32"]]],[11,"get_u64_be","","Gets an unsigned 64 bit integer from `self` in big-endian…",6,[[["self"]],["u64"]]],[11,"get_u64_le","","Gets an unsigned 64 bit integer from `self` in…",6,[[["self"]],["u64"]]],[11,"get_i64_be","","Gets a signed 64 bit integer from `self` in big-endian…",6,[[["self"]],["i64"]]],[11,"get_i64_le","","Gets a signed 64 bit integer from `self` in little-endian…",6,[[["self"]],["i64"]]],[11,"get_uint_be","","Gets an unsigned n-byte integer from `self` in big-endian…",6,[[["self"],["usize"]],["u64"]]],[11,"get_uint_le","","Gets an unsigned n-byte integer from `self` in…",6,[[["self"],["usize"]],["u64"]]],[11,"get_int_be","","Gets a signed n-byte integer from `self` in big-endian…",6,[[["self"],["usize"]],["i64"]]],[11,"get_int_le","","Gets a signed n-byte integer from `self` in little-endian…",6,[[["self"],["usize"]],["i64"]]],[11,"get_f32_be","","Gets an IEEE754 single-precision (4 bytes) floating point…",6,[[["self"]],["f32"]]],[11,"get_f32_le","","Gets an IEEE754 single-precision (4 bytes) floating point…",6,[[["self"]],["f32"]]],[11,"get_f64_be","","Gets an IEEE754 double-precision (8 bytes) floating point…",6,[[["self"]],["f64"]]],[11,"get_f64_le","","Gets an IEEE754 double-precision (8 bytes) floating point…",6,[[["self"]],["f64"]]],[11,"collect","","Transforms a `Buf` into a concrete buffer.",6,[[["self"]],["b"]]],[11,"take","","Creates an adaptor which will read at most `limit` bytes…",6,[[["self"],["usize"]],["take"]]],[11,"chain","","Creates an adaptor which will chain this buffer with…",6,[[["self"],["u"]],["chain"]]],[11,"by_ref","","Creates a \"by reference\" adaptor for this instance of `Buf`.",6,[[["self"]],["self"]]],[11,"reader","","Creates an adaptor which implements the `Read` trait for…",6,[[["self"]],["reader"]]],[11,"iter","","Returns an iterator over the bytes contained by the buffer.",6,[[["self"]],["iter"]]],[8,"BufMut","bytes","A trait for values that provide sequential write access to…",N,N],[10,"remaining_mut","","Returns the number of bytes that can be written from the…",7,[[["self"]],["usize"]]],[10,"advance_mut","","Advance the internal cursor of the BufMut",7,[[["self"],["usize"]]]],[11,"has_remaining_mut","bytes::buf","Returns true if there is space in `self` for more bytes.",7,[[["self"]],["bool"]]],[10,"bytes_mut","bytes","Returns a mutable slice starting at the current BufMut…",7,N],[11,"bytes_vec_mut","bytes::buf","Fills `dst` with potentially multiple mutable slices…",7,N],[11,"put","","Transfer bytes into `self` from `src` and advance the…",7,[[["self"],["t"]]]],[11,"put_slice","","Transfer bytes into `self` from `src` and advance the…",7,N],[11,"put_u8","","Writes an unsigned 8 bit integer to `self`.",7,[[["self"],["u8"]]]],[11,"put_i8","","Writes a signed 8 bit integer to `self`.",7,[[["self"],["i8"]]]],[11,"put_u16_be","","Writes an unsigned 16 bit integer to `self` in big-endian…",7,[[["self"],["u16"]]]],[11,"put_u16_le","","Writes an unsigned 16 bit integer to `self` in…",7,[[["self"],["u16"]]]],[11,"put_i16_be","","Writes a signed 16 bit integer to `self` in big-endian…",7,[[["self"],["i16"]]]],[11,"put_i16_le","","Writes a signed 16 bit integer to `self` in little-endian…",7,[[["self"],["i16"]]]],[11,"put_u32_be","","Writes an unsigned 32 bit integer to `self` in big-endian…",7,[[["self"],["u32"]]]],[11,"put_u32_le","","Writes an unsigned 32 bit integer to `self` in…",7,[[["self"],["u32"]]]],[11,"put_i32_be","","Writes a signed 32 bit integer to `self` in big-endian…",7,[[["self"],["i32"]]]],[11,"put_i32_le","","Writes a signed 32 bit integer to `self` in little-endian…",7,[[["self"],["i32"]]]],[11,"put_u64_be","","Writes an unsigned 64 bit integer to `self` in the…",7,[[["self"],["u64"]]]],[11,"put_u64_le","","Writes an unsigned 64 bit integer to `self` in…",7,[[["self"],["u64"]]]],[11,"put_i64_be","","Writes a signed 64 bit integer to `self` in the big-endian…",7,[[["self"],["i64"]]]],[11,"put_i64_le","","Writes a signed 64 bit integer to `self` in little-endian…",7,[[["self"],["i64"]]]],[11,"put_uint_be","","Writes an unsigned n-byte integer to `self` in big-endian…",7,[[["self"],["u64"],["usize"]]]],[11,"put_uint_le","","Writes an unsigned n-byte integer to `self` in the…",7,[[["self"],["u64"],["usize"]]]],[11,"put_int_be","","Writes a signed n-byte integer to `self` in big-endian…",7,[[["self"],["i64"],["usize"]]]],[11,"put_int_le","","Writes a signed n-byte integer to `self` in little-endian…",7,[[["self"],["i64"],["usize"]]]],[11,"put_f32_be","","Writes an IEEE754 single-precision (4 bytes) floating…",7,[[["self"],["f32"]]]],[11,"put_f32_le","","Writes an IEEE754 single-precision (4 bytes) floating…",7,[[["self"],["f32"]]]],[11,"put_f64_be","","Writes an IEEE754 double-precision (8 bytes) floating…",7,[[["self"],["f64"]]]],[11,"put_f64_le","","Writes an IEEE754 double-precision (8 bytes) floating…",7,[[["self"],["f64"]]]],[11,"by_ref","","Creates a \"by reference\" adaptor for this instance of…",7,[[["self"]],["self"]]],[11,"writer","","Creates an adaptor which implements the `Write` trait for…",7,[[["self"]],["writer"]]],[8,"IntoBuf","bytes","Conversion into a `Buf`",N,N],[16,"Buf","","The `Buf` type that `self` is being converted into",9,N],[10,"into_buf","","Creates a `Buf` from a value.",9,N],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into_iter","","",10,[[["self"]],["i"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into_iter","","",11,[[["self"]],["i"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","bytes::buf","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into_iter","","",2,[[["self"]],["i"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"cmp","bytes","",13,[[["self"],["littleendian"]],["ordering"]]],[11,"cmp","","",12,[[["self"],["bigendian"]],["ordering"]]],[11,"default","","",13,[[],["littleendian"]]],[11,"default","","",12,[[],["bigendian"]]],[11,"eq","","",13,[[["self"],["littleendian"]],["bool"]]],[11,"eq","","",12,[[["self"],["bigendian"]],["bool"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result",["error"]]]],[11,"read_u16","","",12,N],[11,"read_u32","","",12,N],[11,"read_u64","","",12,N],[11,"read_uint","","",12,N],[11,"write_u16","","",12,N],[11,"write_u32","","",12,N],[11,"write_u64","","",12,N],[11,"write_uint","","",12,N],[11,"read_u16_into","","",12,N],[11,"read_u32_into","","",12,N],[11,"read_u64_into","","",12,N],[11,"write_u16_into","","",12,N],[11,"write_u32_into","","",12,N],[11,"write_u64_into","","",12,N],[11,"from_slice_u16","","",12,N],[11,"from_slice_u32","","",12,N],[11,"from_slice_u64","","",12,N],[11,"from_slice_f32","","",12,N],[11,"from_slice_f64","","",12,N],[11,"read_u16","","",13,N],[11,"read_u32","","",13,N],[11,"read_u64","","",13,N],[11,"read_uint","","",13,N],[11,"write_u16","","",13,N],[11,"write_u32","","",13,N],[11,"write_u64","","",13,N],[11,"write_uint","","",13,N],[11,"read_u16_into","","",13,N],[11,"read_u32_into","","",13,N],[11,"read_u64_into","","",13,N],[11,"write_u16_into","","",13,N],[11,"write_u32_into","","",13,N],[11,"write_u64_into","","",13,N],[11,"from_slice_u16","","",13,N],[11,"from_slice_u32","","",13,N],[11,"from_slice_u64","","",13,N],[11,"from_slice_f32","","",13,N],[11,"from_slice_f64","","",13,N],[11,"clone","","",12,[[["self"]],["bigendian"]]],[11,"clone","","",13,[[["self"]],["littleendian"]]],[11,"partial_cmp","","",13,[[["self"],["littleendian"]],["option",["ordering"]]]],[11,"partial_cmp","","",12,[[["self"],["bigendian"]],["option",["ordering"]]]],[11,"hash","","",12,N],[11,"hash","","",13,N],[11,"remaining","bytes::buf","",1,[[["self"]],["usize"]]],[11,"bytes","","",1,N],[11,"advance","","",1,[[["self"],["usize"]]]],[11,"bytes_vec","","",1,N],[11,"remaining","","",4,[[["self"]],["usize"]]],[11,"bytes","","",4,N],[11,"advance","","",4,[[["self"],["usize"]]]],[11,"remaining_mut","","",1,[[["self"]],["usize"]]],[11,"bytes_mut","","",1,N],[11,"advance_mut","","",1,[[["self"],["usize"]]]],[11,"bytes_vec_mut","","",1,N],[11,"remaining_mut","bytes","",11,[[["self"]],["usize"]]],[11,"advance_mut","","",11,[[["self"],["usize"]]]],[11,"bytes_mut","","",11,N],[11,"put_slice","","",11,N],[11,"put_u8","","",11,[[["self"],["u8"]]]],[11,"put_i8","","",11,[[["self"],["i8"]]]],[11,"from_buf","","",10,[[["t"]],["self"]]],[11,"from_buf","","",11,[[["t"]],["self"]]],[11,"into_buf","","",10,N],[11,"into_buf","","",11,N],[11,"cmp","","",10,[[["self"],["bytes"]],["ordering"]]],[11,"cmp","","",11,[[["self"],["bytesmut"]],["ordering"]]],[11,"eq","","",10,[[["self"],["bytes"]],["bool"]]],[11,"eq","","",11,[[["self"],["bytesmut"]],["bool"]]],[11,"eq","","",11,N],[11,"eq","","",11,[[["self"],["str"]],["bool"]]],[11,"eq","","",11,[[["self"],["vec"]],["bool"]]],[11,"eq","","",11,[[["self"],["string"]],["bool"]]],[11,"eq","","",11,[[["self"],["t"]],["bool"]]],[11,"eq","","",10,N],[11,"eq","","",10,[[["self"],["str"]],["bool"]]],[11,"eq","","",10,[[["self"],["vec"]],["bool"]]],[11,"eq","","",10,[[["self"],["string"]],["bool"]]],[11,"eq","","",10,[[["self"],["t"]],["bool"]]],[11,"eq","","",10,[[["self"],["bytesmut"]],["bool"]]],[11,"eq","","",11,[[["self"],["bytes"]],["bool"]]],[11,"from","","",10,[[["bytesmut"]],["bytes"]]],[11,"from","","",10,[[["vec",["u8"]]],["bytes"]]],[11,"from","","",10,[[["string"]],["bytes"]]],[11,"from","","",10,N],[11,"from","","",10,[[["str"]],["bytes"]]],[11,"from","","",11,[[["vec",["u8"]]],["bytesmut"]]],[11,"from","","",11,[[["string"]],["bytesmut"]]],[11,"from","","",11,N],[11,"from","","",11,[[["str"]],["bytesmut"]]],[11,"from","","",11,[[["bytes"]],["bytesmut"]]],[11,"clone","","",10,[[["self"]],["bytes"]]],[11,"clone","","",11,[[["self"]],["bytesmut"]]],[11,"into_iter","","",10,N],[11,"into_iter","","",11,N],[11,"extend","","",10,[[["self"],["t"]]]],[11,"extend","","",10,[[["self"],["t"]]]],[11,"extend","","",11,[[["self"],["t"]]]],[11,"extend","","",11,[[["self"],["t"]]]],[11,"partial_cmp","","",10,[[["self"],["bytes"]],["option",["ordering"]]]],[11,"partial_cmp","","",11,[[["self"],["bytesmut"]],["option",["ordering"]]]],[11,"partial_cmp","","",11,N],[11,"partial_cmp","","",11,[[["self"],["str"]],["option",["ordering"]]]],[11,"partial_cmp","","",11,[[["self"],["vec"]],["option",["ordering"]]]],[11,"partial_cmp","","",11,[[["self"],["string"]],["option",["ordering"]]]],[11,"partial_cmp","","",11,[[["self"],["t"]],["option",["ordering"]]]],[11,"partial_cmp","","",10,N],[11,"partial_cmp","","",10,[[["self"],["str"]],["option",["ordering"]]]],[11,"partial_cmp","","",10,[[["self"],["vec"]],["option",["ordering"]]]],[11,"partial_cmp","","",10,[[["self"],["string"]],["option",["ordering"]]]],[11,"partial_cmp","","",10,[[["self"],["t"]],["option",["ordering"]]]],[11,"as_mut","","",11,N],[11,"next","bytes::buf","",2,[[["self"]],["option",["u8"]]]],[11,"size_hint","","",2,N],[11,"as_ref","bytes","",10,N],[11,"as_ref","","",11,N],[11,"default","","",10,[[],["bytes"]]],[11,"default","","",11,[[],["bytesmut"]]],[11,"fmt","bytes::buf","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","bytes","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"write_str","","",11,[[["self"],["str"]],["result"]]],[11,"write_fmt","","",11,[[["self"],["arguments"]],["result"]]],[11,"deref","","",10,N],[11,"deref","","",11,N],[11,"deref_mut","","",11,N],[11,"hash","","",10,[[["self"],["h"]]]],[11,"hash","","",11,[[["self"],["h"]]]],[11,"from_iter","","",11,[[["t"]],["self"]]],[11,"from_iter","","",10,[[["t"]],["self"]]],[11,"borrow","","",10,N],[11,"borrow","","",11,N],[11,"read","bytes::buf","",3,N],[11,"write","","",5,N],[11,"flush","","",5,[[["self"]],["result"]]],[11,"fill_buf","","",3,[[["self"]],["result"]]],[11,"consume","","",3,[[["self"],["usize"]]]],[11,"borrow_mut","bytes","",11,N],[11,"bytes_vec","bytes::buf","Fills `dst` with potentially multiple slices starting at…",6,N],[11,"has_remaining","","Returns true if there are any more bytes to consume",6,[[["self"]],["bool"]]],[11,"copy_to_slice","","Copies bytes from `self` into `dst`.",6,N],[11,"get_u8","","Gets an unsigned 8 bit integer from `self`.",6,[[["self"]],["u8"]]],[11,"get_i8","","Gets a signed 8 bit integer from `self`.",6,[[["self"]],["i8"]]],[11,"get_u16_be","","Gets an unsigned 16 bit integer from `self` in big-endian…",6,[[["self"]],["u16"]]],[11,"get_u16_le","","Gets an unsigned 16 bit integer from `self` in…",6,[[["self"]],["u16"]]],[11,"get_i16_be","","Gets a signed 16 bit integer from `self` in big-endian…",6,[[["self"]],["i16"]]],[11,"get_i16_le","","Gets a signed 16 bit integer from `self` in little-endian…",6,[[["self"]],["i16"]]],[11,"get_u32_be","","Gets an unsigned 32 bit integer from `self` in the…",6,[[["self"]],["u32"]]],[11,"get_u32_le","","Gets an unsigned 32 bit integer from `self` in the…",6,[[["self"]],["u32"]]],[11,"get_i32_be","","Gets a signed 32 bit integer from `self` in big-endian…",6,[[["self"]],["i32"]]],[11,"get_i32_le","","Gets a signed 32 bit integer from `self` in little-endian…",6,[[["self"]],["i32"]]],[11,"get_u64_be","","Gets an unsigned 64 bit integer from `self` in big-endian…",6,[[["self"]],["u64"]]],[11,"get_u64_le","","Gets an unsigned 64 bit integer from `self` in…",6,[[["self"]],["u64"]]],[11,"get_i64_be","","Gets a signed 64 bit integer from `self` in big-endian…",6,[[["self"]],["i64"]]],[11,"get_i64_le","","Gets a signed 64 bit integer from `self` in little-endian…",6,[[["self"]],["i64"]]],[11,"get_uint_be","","Gets an unsigned n-byte integer from `self` in big-endian…",6,[[["self"],["usize"]],["u64"]]],[11,"get_uint_le","","Gets an unsigned n-byte integer from `self` in…",6,[[["self"],["usize"]],["u64"]]],[11,"get_int_be","","Gets a signed n-byte integer from `self` in big-endian…",6,[[["self"],["usize"]],["i64"]]],[11,"get_int_le","","Gets a signed n-byte integer from `self` in little-endian…",6,[[["self"],["usize"]],["i64"]]],[11,"get_f32_be","","Gets an IEEE754 single-precision (4 bytes) floating point…",6,[[["self"]],["f32"]]],[11,"get_f32_le","","Gets an IEEE754 single-precision (4 bytes) floating point…",6,[[["self"]],["f32"]]],[11,"get_f64_be","","Gets an IEEE754 double-precision (8 bytes) floating point…",6,[[["self"]],["f64"]]],[11,"get_f64_le","","Gets an IEEE754 double-precision (8 bytes) floating point…",6,[[["self"]],["f64"]]],[11,"collect","","Transforms a `Buf` into a concrete buffer.",6,[[["self"]],["b"]]],[11,"take","","Creates an adaptor which will read at most `limit` bytes…",6,[[["self"],["usize"]],["take"]]],[11,"chain","","Creates an adaptor which will chain this buffer with…",6,[[["self"],["u"]],["chain"]]],[11,"by_ref","","Creates a \"by reference\" adaptor for this instance of `Buf`.",6,[[["self"]],["self"]]],[11,"reader","","Creates an adaptor which implements the `Read` trait for…",6,[[["self"]],["reader"]]],[11,"iter","","Returns an iterator over the bytes contained by the buffer.",6,[[["self"]],["iter"]]],[11,"has_remaining_mut","","Returns true if there is space in `self` for more bytes.",7,[[["self"]],["bool"]]],[11,"bytes_vec_mut","","Fills `dst` with potentially multiple mutable slices…",7,N],[11,"put","","Transfer bytes into `self` from `src` and advance the…",7,[[["self"],["t"]]]],[11,"put_slice","","Transfer bytes into `self` from `src` and advance the…",7,N],[11,"put_u8","","Writes an unsigned 8 bit integer to `self`.",7,[[["self"],["u8"]]]],[11,"put_i8","","Writes a signed 8 bit integer to `self`.",7,[[["self"],["i8"]]]],[11,"put_u16_be","","Writes an unsigned 16 bit integer to `self` in big-endian…",7,[[["self"],["u16"]]]],[11,"put_u16_le","","Writes an unsigned 16 bit integer to `self` in…",7,[[["self"],["u16"]]]],[11,"put_i16_be","","Writes a signed 16 bit integer to `self` in big-endian…",7,[[["self"],["i16"]]]],[11,"put_i16_le","","Writes a signed 16 bit integer to `self` in little-endian…",7,[[["self"],["i16"]]]],[11,"put_u32_be","","Writes an unsigned 32 bit integer to `self` in big-endian…",7,[[["self"],["u32"]]]],[11,"put_u32_le","","Writes an unsigned 32 bit integer to `self` in…",7,[[["self"],["u32"]]]],[11,"put_i32_be","","Writes a signed 32 bit integer to `self` in big-endian…",7,[[["self"],["i32"]]]],[11,"put_i32_le","","Writes a signed 32 bit integer to `self` in little-endian…",7,[[["self"],["i32"]]]],[11,"put_u64_be","","Writes an unsigned 64 bit integer to `self` in the…",7,[[["self"],["u64"]]]],[11,"put_u64_le","","Writes an unsigned 64 bit integer to `self` in…",7,[[["self"],["u64"]]]],[11,"put_i64_be","","Writes a signed 64 bit integer to `self` in the big-endian…",7,[[["self"],["i64"]]]],[11,"put_i64_le","","Writes a signed 64 bit integer to `self` in little-endian…",7,[[["self"],["i64"]]]],[11,"put_uint_be","","Writes an unsigned n-byte integer to `self` in big-endian…",7,[[["self"],["u64"],["usize"]]]],[11,"put_uint_le","","Writes an unsigned n-byte integer to `self` in the…",7,[[["self"],["u64"],["usize"]]]],[11,"put_int_be","","Writes a signed n-byte integer to `self` in big-endian…",7,[[["self"],["i64"],["usize"]]]],[11,"put_int_le","","Writes a signed n-byte integer to `self` in little-endian…",7,[[["self"],["i64"],["usize"]]]],[11,"put_f32_be","","Writes an IEEE754 single-precision (4 bytes) floating…",7,[[["self"],["f32"]]]],[11,"put_f32_le","","Writes an IEEE754 single-precision (4 bytes) floating…",7,[[["self"],["f32"]]]],[11,"put_f64_be","","Writes an IEEE754 double-precision (8 bytes) floating…",7,[[["self"],["f64"]]]],[11,"put_f64_le","","Writes an IEEE754 double-precision (8 bytes) floating…",7,[[["self"],["f64"]]]],[11,"by_ref","","Creates a \"by reference\" adaptor for this instance of…",7,[[["self"]],["self"]]],[11,"writer","","Creates an adaptor which implements the `Write` trait for…",7,[[["self"]],["writer"]]]],"paths":[[8,"ByteOrder"],[3,"Chain"],[3,"Iter"],[3,"Reader"],[3,"Take"],[3,"Writer"],[8,"Buf"],[8,"BufMut"],[8,"FromBuf"],[8,"IntoBuf"],[3,"Bytes"],[3,"BytesMut"],[4,"BigEndian"],[4,"LittleEndian"]]};
searchIndex["cfg_if"]={"doc":"A macro for defining `#[cfg]` if-else statements.","items":[[14,"cfg_if","cfg_if","",N,N]],"paths":[]};
searchIndex["clap"]={"doc":"`clap` is a simple-to-use, efficient, and full-featured…","items":[[3,"Arg","clap","The abstract representation of a command line argument.…",N,N],[3,"ArgGroup","","`ArgGroup`s are a family of related [arguments] and way…",N,N],[3,"ArgMatches","","Used to get information about the arguments that where…",N,N],[3,"OsValues","","An iterator for getting multiple values out of an argument…",N,N],[3,"SubCommand","","The abstract representation of a command line subcommand.",N,N],[3,"Values","","An iterator for getting multiple values out of an argument…",N,N],[3,"App","","Used to create a representation of a command line program…",N,N],[3,"Error","","Command Line Argument Parser Error",N,N],[12,"message","","Formatted error message",0,N],[12,"kind","","The type of error",0,N],[12,"info","","Any additional information passed along, such as the…",0,N],[4,"ArgSettings","","Various settings that apply to arguments and may be set,…",N,N],[13,"Required","","The argument must be used",1,N],[13,"Multiple","","The argument may be used multiple times such as `--flag…",1,N],[13,"EmptyValues","","The argument allows empty values such as `--option \"\"`",1,N],[13,"Global","","The argument should be propagated down through all child…",1,N],[13,"Hidden","","The argument should not be shown in help text",1,N],[13,"TakesValue","","The argument accepts a value, such as `--option <value>`",1,N],[13,"UseValueDelimiter","","Determines if the argument allows values to be grouped via…",1,N],[13,"NextLineHelp","","Prints the help text on the line after the argument",1,N],[13,"RequireDelimiter","","Requires the use of a value delimiter for all multiple…",1,N],[13,"HidePossibleValues","","Hides the possible values from the help string",1,N],[13,"AllowLeadingHyphen","","Allows vals that start with a '-'",1,N],[13,"RequireEquals","","Require options use `--option=val` syntax",1,N],[13,"Last","","Specifies that the arg is the last positional argument and…",1,N],[13,"HideDefaultValue","","Hides the default value from the help string",1,N],[13,"CaseInsensitive","","Makes `Arg::possible_values` case insensitive",1,N],[13,"HideEnvValues","","Hides ENV values in the help message",1,N],[13,"HiddenShortHelp","","The argument should not be shown in short help text",1,N],[13,"HiddenLongHelp","","The argument should not be shown in long help text",1,N],[4,"AppSettings","","Application level settings, which affect how [`App`]…",N,N],[13,"AllowInvalidUtf8","","Specifies that any invalid UTF-8 code points should not be…",2,N],[13,"AllArgsOverrideSelf","","Essentially sets [`Arg::overrides_with(\"itself\")`] for all…",2,N],[13,"AllowLeadingHyphen","","Specifies that leading hyphens are allowed in argument…",2,N],[13,"AllowNegativeNumbers","","Allows negative numbers to pass as values. This is similar…",2,N],[13,"AllowMissingPositional","","Allows one to implement two styles of CLIs where…",2,N],[13,"AllowExternalSubcommands","","Specifies that an unexpected positional argument, which…",2,N],[13,"ArgsNegateSubcommands","","Specifies that use of a valid [argument] negates…",2,N],[13,"ArgRequiredElseHelp","","Specifies that the help text should be displayed (and then…",2,N],[13,"ColoredHelp","","Uses colorized help messages.",2,N],[13,"ColorAuto","","Enables colored output only when the output is going to a…",2,N],[13,"ColorAlways","","Enables colored output regardless of whether or not the…",2,N],[13,"ColorNever","","Disables colored output no matter if the output is going…",2,N],[13,"DontCollapseArgsInUsage","","Disables the automatic collapsing of positional args into…",2,N],[13,"DontDelimitTrailingValues","","Disables the automatic delimiting of values when `--` or…",2,N],[13,"DisableHelpSubcommand","","Disables the `help` subcommand",2,N],[13,"DisableVersion","","Disables `-V` and `--version` [`App`] without affecting…",2,N],[13,"DeriveDisplayOrder","","Displays the arguments and [`SubCommand`]s in the help…",2,N],[13,"GlobalVersion","","Specifies to use the version of the current command for…",2,N],[13,"Hidden","","Specifies that this [`SubCommand`] should be hidden from…",2,N],[13,"HidePossibleValuesInHelp","","Tells `clap` not to print possible values when displaying…",2,N],[13,"InferSubcommands","","Tries to match unknown args to partial [`subcommands`] or…",2,N],[13,"NoBinaryName","","Specifies that the parser should not assume the first…",2,N],[13,"NextLineHelp","","Places the help string for all arguments on the line after…",2,N],[13,"PropagateGlobalValuesDown","","DEPRECATED: This setting is no longer required in order to…",2,N],[13,"SubcommandsNegateReqs","","Allows [`SubCommand`]s to override all requirements of the…",2,N],[13,"SubcommandRequiredElseHelp","","Specifies that the help text should be displayed (before…",2,N],[13,"StrictUtf8","","Specifies that any invalid UTF-8 code points should be…",2,N],[13,"SubcommandRequired","","Allows specifying that if no [`SubCommand`] is present at…",2,N],[13,"TrailingVarArg","","Specifies that the final positional argument is a \"VarArg\"…",2,N],[13,"UnifiedHelpMessage","","Groups flags and options together, presenting a more…",2,N],[13,"VersionlessSubcommands","","Disables `-V` and `--version` for all [`SubCommand`]s…",2,N],[13,"WaitOnError","","Will display a message \"Press [ENTER]/[RETURN] to…",2,N],[4,"ErrorKind","","Command line argument parser kind of error",N,N],[13,"InvalidValue","","Occurs when an [`Arg`] has a set of possible values, and…",3,N],[13,"UnknownArgument","","Occurs when a user provides a flag, option, argument or…",3,N],[13,"InvalidSubcommand","","Occurs when the user provides an unrecognized…",3,N],[13,"UnrecognizedSubcommand","","Occurs when the user provides an unrecognized…",3,N],[13,"EmptyValue","","Occurs when the user provides an empty value for an option…",3,N],[13,"ValueValidation","","Occurs when the user provides a value for an argument with…",3,N],[13,"TooManyValues","","Occurs when a user provides more values for an argument…",3,N],[13,"TooFewValues","","Occurs when the user provides fewer values for an argument…",3,N],[13,"WrongNumberOfValues","","Occurs when the user provides a different number of values…",3,N],[13,"ArgumentConflict","","Occurs when the user provides two values which conflict…",3,N],[13,"MissingRequiredArgument","","Occurs when the user does not provide one or more required…",3,N],[13,"MissingSubcommand","","Occurs when a subcommand is required (as defined by…",3,N],[13,"MissingArgumentOrSubcommand","","Occurs when either an argument or [`SubCommand`] is…",3,N],[13,"UnexpectedMultipleUsage","","Occurs when the user provides multiple values to an…",3,N],[13,"InvalidUtf8","","Occurs when the user provides a value containing invalid…",3,N],[13,"HelpDisplayed","","Not a true \"error\" as it means `--help` or similar was…",3,N],[13,"VersionDisplayed","","Not a true \"error\" as it means `--version` or similar was…",3,N],[13,"ArgumentNotFound","","Occurs when using the [`value_t!`] and [`values_t!`]…",3,N],[13,"Io","","Represents an [I/O error]. Can occur when writing to…",3,N],[13,"Format","","Represents a [Format error] (which is a part of…",3,N],[4,"Shell","","Describes which shell to produce a completions file for",N,N],[13,"Bash","","Generates a .bash completion file for the Bourne Again…",4,N],[13,"Fish","","Generates a .fish completion file for the Friendly…",4,N],[13,"Zsh","","Generates a completion file for the Z SHell (ZSH)",4,N],[13,"PowerShell","","Generates a completion file for PowerShell",4,N],[13,"Elvish","","Generates a completion file for Elvish",4,N],[11,"new","","Creates a new instance of an application requiring a name.…",5,[[["s"]],["self"]]],[11,"get_name","","Get the name of the app",5,[[["self"]],["str"]]],[11,"get_bin_name","","Get the name of the binary",5,[[["self"]],["option",["str"]]]],[11,"with_defaults","","Creates a new instance of an application requiring a name,…",5,[[["s"]],["self"]]],[11,"author","","Sets a string of author(s) that will be displayed to the…",5,[[["self"],["s"]],["self"]]],[11,"bin_name","","Overrides the system-determined binary name. This should…",5,[[["self"],["s"]],["self"]]],[11,"about","","Sets a string describing what the program does. This will…",5,[[["self"],["s"]],["self"]]],[11,"long_about","","Sets a string describing what the program does. This will…",5,[[["self"],["s"]],["self"]]],[11,"name","","Sets the program's name. This will be displayed when…",5,[[["self"],["s"]],["self"]]],[11,"after_help","","Adds additional help information to be displayed in…",5,[[["self"],["s"]],["self"]]],[11,"before_help","","Adds additional help information to be displayed in…",5,[[["self"],["s"]],["self"]]],[11,"version","","Sets a string of the version number to be displayed when…",5,[[["self"],["s"]],["self"]]],[11,"long_version","","Sets a string of the version number to be displayed when…",5,[[["self"],["s"]],["self"]]],[11,"usage","","Sets a custom usage string to override the auto-generated…",5,[[["self"],["s"]],["self"]]],[11,"help","","Sets a custom help message and overrides the…",5,[[["self"],["s"]],["self"]]],[11,"help_short","","Sets the [`short`] for the auto-generated `help` argument.",5,[[["self"],["s"]],["self"]]],[11,"version_short","","Sets the [`short`] for the auto-generated `version`…",5,[[["self"],["s"]],["self"]]],[11,"help_message","","Sets the help text for the auto-generated `help` argument.",5,[[["self"],["s"]],["self"]]],[11,"version_message","","Sets the help text for the auto-generated `version`…",5,[[["self"],["s"]],["self"]]],[11,"template","","Sets the help template to be used, overriding the default…",5,[[["self"],["s"]],["self"]]],[11,"setting","","Enables a single command, or [`SubCommand`], level settings.",5,[[["self"],["appsettings"]],["self"]]],[11,"settings","","Enables multiple command, or [`SubCommand`], level settings",5,N],[11,"global_setting","","Enables a single setting that is propagated down through…",5,[[["self"],["appsettings"]],["self"]]],[11,"global_settings","","Enables multiple settings which are propagated down…",5,N],[11,"unset_setting","","Disables a single command, or [`SubCommand`], level setting.",5,[[["self"],["appsettings"]],["self"]]],[11,"unset_settings","","Disables multiple command, or [`SubCommand`], level…",5,N],[11,"set_term_width","","Sets the terminal width at which to wrap help messages.…",5,[[["self"],["usize"]],["self"]]],[11,"max_term_width","","Sets the max terminal width at which to wrap help…",5,[[["self"],["usize"]],["self"]]],[11,"arg","","Adds an [argument] to the list of valid possibilities.",5,[[["self"],["a"]],["self"]]],[11,"args","","Adds multiple [arguments] to the list of valid possibilities",5,N],[11,"arg_from_usage","","A convenience method for adding a single [argument] from a…",5,[[["self"],["str"]],["self"]]],[11,"args_from_usage","","Adds multiple [arguments] at once from a usage string, one…",5,[[["self"],["str"]],["self"]]],[11,"alias","","Allows adding a [`SubCommand`] alias, which function as…",5,[[["self"],["s"]],["self"]]],[11,"aliases","","Allows adding [`SubCommand`] aliases, which function as…",5,N],[11,"visible_alias","","Allows adding a [`SubCommand`] alias that functions…",5,[[["self"],["s"]],["self"]]],[11,"visible_aliases","","Allows adding multiple [`SubCommand`] aliases that…",5,N],[11,"group","","Adds an [`ArgGroup`] to the application. [`ArgGroup`]s are…",5,[[["self"],["arggroup"]],["self"]]],[11,"groups","","Adds multiple [`ArgGroup`]s to the [`App`] at once.",5,N],[11,"subcommand","","Adds a [`SubCommand`] to the list of valid possibilities.…",5,[[["self"],["app"]],["self"]]],[11,"subcommands","","Adds multiple subcommands to the list of valid…",5,[[["self"],["i"]],["self"]]],[11,"display_order","","Allows custom ordering of [`SubCommand`]s within the help…",5,[[["self"],["usize"]],["self"]]],[11,"print_help","","Prints the full help message to [`io::stdout()`] using a…",5,[[["self"]],["clapresult"]]],[11,"print_long_help","","Prints the full help message to [`io::stdout()`] using a…",5,[[["self"]],["clapresult"]]],[11,"write_help","","Writes the full help message to the user to a…",5,[[["self"],["w"]],["clapresult"]]],[11,"write_long_help","","Writes the full help message to the user to a…",5,[[["self"],["w"]],["clapresult"]]],[11,"write_version","","Writes the version message to the user to a [`io::Write`]…",5,[[["self"],["w"]],["clapresult"]]],[11,"write_long_version","","Writes the version message to the user to a [`io::Write`]…",5,[[["self"],["w"]],["clapresult"]]],[11,"gen_completions","","Generate a completions file for a specified shell at…",5,[[["self"],["s"],["shell"],["t"]]]],[11,"gen_completions_to","","Generate a completions file for a specified shell at…",5,[[["self"],["s"],["shell"],["w"]]]],[11,"get_matches","","Starts the parsing process, upon a failed parse an error…",5,[[["self"]],["argmatches"]]],[11,"get_matches_safe","","Starts the parsing process. This method will return a…",5,[[["self"]],["clapresult",["argmatches"]]]],[11,"get_matches_from","","Starts the parsing process. Like [`App::get_matches`] this…",5,[[["self"],["i"]],["argmatches"]]],[11,"get_matches_from_safe","","Starts the parsing process. A combination of…",5,[[["self"],["i"]],["clapresult",["argmatches"]]]],[11,"get_matches_from_safe_borrow","","Starts the parsing process without consuming the [`App`]…",5,[[["self"],["i"]],["clapresult",["argmatches"]]]],[11,"with_name","","Creates a new instance of [`Arg`] using a unique string…",6,[[["str"]],["self"]]],[11,"from_usage","","Creates a new instance of [`Arg`] from a usage string.…",6,[[["str"]],["self"]]],[11,"short","","Sets the short version of the argument without the…",6,[[["self"],["s"]],["self"]]],[11,"long","","Sets the long version of the argument without the…",6,[[["self"],["str"]],["self"]]],[11,"alias","","Allows adding a [`Arg`] alias, which function as \"hidden\"…",6,[[["self"],["s"]],["self"]]],[11,"aliases","","Allows adding [`Arg`] aliases, which function as \"hidden\"…",6,N],[11,"visible_alias","","Allows adding a [`Arg`] alias that functions exactly like…",6,[[["self"],["s"]],["self"]]],[11,"visible_aliases","","Allows adding multiple [`Arg`] aliases that functions…",6,N],[11,"help","","Sets the short help text of the argument that will be…",6,[[["self"],["str"]],["self"]]],[11,"long_help","","Sets the long help text of the argument that will be…",6,[[["self"],["str"]],["self"]]],[11,"last","","Specifies that this arg is the last, or final, positional…",6,[[["self"],["bool"]],["self"]]],[11,"required","","Sets whether or not the argument is required by default.…",6,[[["self"],["bool"]],["self"]]],[11,"require_equals","","Requires that options use the `--option=val` syntax (i.e.…",6,[[["self"],["bool"]],["self"]]],[11,"allow_hyphen_values","","Allows values which start with a leading hyphen (`-`)",6,[[["self"],["bool"]],["self"]]],[11,"required_unless","","Sets an arg that override this arg's required setting.…",6,[[["self"],["str"]],["self"]]],[11,"required_unless_all","","Sets args that override this arg's required setting. (i.e.…",6,N],[11,"required_unless_one","","Sets args that override this arg's [required] setting.…",6,N],[11,"conflicts_with","","Sets a conflicting argument by name. I.e. when using this…",6,[[["self"],["str"]],["self"]]],[11,"conflicts_with_all","","The same as [`Arg::conflicts_with`] but allows specifying…",6,N],[11,"overrides_with","","Sets a overridable argument by name. I.e. this argument…",6,[[["self"],["str"]],["self"]]],[11,"overrides_with_all","","Sets multiple mutually overridable arguments by name. I.e.…",6,N],[11,"requires","","Sets an argument by name that is required when this one is…",6,[[["self"],["str"]],["self"]]],[11,"requires_if","","Allows a conditional requirement. The requirement will…",6,[[["self"],["str"],["str"]],["self"]]],[11,"requires_ifs","","Allows multiple conditional requirements. The requirement…",6,N],[11,"required_if","","Allows specifying that an argument is [required]…",6,[[["self"],["str"],["str"]],["self"]]],[11,"required_ifs","","Allows specifying that an argument is [required] based on…",6,N],[11,"requires_all","","Sets multiple arguments by names that are required when…",6,N],[11,"takes_value","","Specifies that the argument takes a value at run time.",6,[[["self"],["bool"]],["self"]]],[11,"hide_possible_values","","Specifies if the possible values of an argument should be…",6,[[["self"],["bool"]],["self"]]],[11,"hide_default_value","","Specifies if the default value of an argument should be…",6,[[["self"],["bool"]],["self"]]],[11,"index","","Specifies the index of a positional argument starting at 1.",6,[[["self"],["u64"]],["self"]]],[11,"multiple","","Specifies that the argument may appear more than once. For…",6,[[["self"],["bool"]],["self"]]],[11,"value_terminator","","Specifies a value that stops parsing multiple values of a…",6,[[["self"],["str"]],["self"]]],[11,"global","","Specifies that an argument can be matched to all child…",6,[[["self"],["bool"]],["self"]]],[11,"empty_values","","Allows an argument to accept explicitly empty values. An…",6,[[["self"],["bool"]],["self"]]],[11,"hidden","","Hides an argument from help message output.",6,[[["self"],["bool"]],["self"]]],[11,"possible_values","","Specifies a list of possible values for this argument. At…",6,N],[11,"possible_value","","Specifies a possible value for this argument, one at a…",6,[[["self"],["str"]],["self"]]],[11,"case_insensitive","","When used with [`Arg::possible_values`] it allows the…",6,[[["self"],["bool"]],["self"]]],[11,"group","","Specifies the name of the [`ArgGroup`] the argument…",6,[[["self"],["str"]],["self"]]],[11,"groups","","Specifies the names of multiple [`ArgGroup`]'s the…",6,N],[11,"number_of_values","","Specifies how many values are required to satisfy this…",6,[[["self"],["u64"]],["self"]]],[11,"validator","","Allows one to perform a custom validation on the argument…",6,[[["self"],["f"]],["self"]]],[11,"validator_os","","Works identically to Validator but is intended to be used…",6,[[["self"],["f"]],["self"]]],[11,"max_values","","Specifies the maximum number of values are for this…",6,[[["self"],["u64"]],["self"]]],[11,"min_values","","Specifies the minimum number of values for this argument.…",6,[[["self"],["u64"]],["self"]]],[11,"use_delimiter","","Specifies whether or not an argument should allow grouping…",6,[[["self"],["bool"]],["self"]]],[11,"require_delimiter","","Specifies that multiple values may only be set using the…",6,[[["self"],["bool"]],["self"]]],[11,"value_delimiter","","Specifies the separator to use when values are clumped…",6,[[["self"],["str"]],["self"]]],[11,"value_names","","Specify multiple names for values of option arguments.…",6,N],[11,"value_name","","Specifies the name for value of [option] or [positional]…",6,[[["self"],["str"]],["self"]]],[11,"default_value","","Specifies the value of the argument when not specified at…",6,[[["self"],["str"]],["self"]]],[11,"default_value_os","","Provides a default value in the exact same manner as…",6,[[["self"],["osstr"]],["self"]]],[11,"default_value_if","","Specifies the value of the argument if `arg` has been used…",6,[[["self"],["str"],["option",["str"]],["str"]],["self"]]],[11,"default_value_if_os","","Provides a conditional default value in the exact same…",6,[[["self"],["str"],["option",["osstr"]],["osstr"]],["self"]]],[11,"default_value_ifs","","Specifies multiple values and conditions in the same…",6,N],[11,"default_value_ifs_os","","Provides multiple conditional default values in the exact…",6,N],[11,"env","","Specifies that if the value is not passed in as an…",6,[[["self"],["str"]],["self"]]],[11,"env_os","","Specifies that if the value is not passed in as an…",6,[[["self"],["osstr"]],["self"]]],[11,"hide_env_values","","@TODO @p2 @docs @release: write docs",6,[[["self"],["bool"]],["self"]]],[11,"next_line_help","","When set to `true` the help string will be displayed on…",6,[[["self"],["bool"]],["self"]]],[11,"display_order","","Allows custom ordering of args within the help message.…",6,[[["self"],["usize"]],["self"]]],[11,"raw","","Indicates that all parameters passed after this should not…",6,[[["self"],["bool"]],["self"]]],[11,"hidden_short_help","","Hides an argument from short help message output.",6,[[["self"],["bool"]],["self"]]],[11,"hidden_long_help","","Hides an argument from long help message output.",6,[[["self"],["bool"]],["self"]]],[11,"is_set","","Checks if one of the [`ArgSettings`] settings is set for…",6,[[["self"],["argsettings"]],["bool"]]],[11,"set","","Sets one of the [`ArgSettings`] settings for the argument…",6,[[["self"],["argsettings"]],["self"]]],[11,"unset","","Unsets one of the [`ArgSettings`] settings for the…",6,[[["self"],["argsettings"]],["self"]]],[11,"value_of","","Gets the value of a specific [option] or [positional]…",7,[[["self"],["s"]],["option",["str"]]]],[11,"value_of_lossy","","Gets the lossy value of a specific argument. If the…",7,[[["self"],["s"]],["option",["cow"]]]],[11,"value_of_os","","Gets the OS version of a string value of a specific…",7,[[["self"],["s"]],["option",["osstr"]]]],[11,"values_of","","Gets a [`Values`] struct which implements [`Iterator`] for…",7,[[["self"],["s"]],["option",["values"]]]],[11,"values_of_lossy","","Gets the lossy values of a specific argument. If the…",7,[[["self"],["s"]],["option",["vec"]]]],[11,"values_of_os","","Gets a [`OsValues`] struct which is implements…",7,[[["self"],["s"]],["option",["osvalues"]]]],[11,"is_present","","Returns `true` if an argument was present at runtime,…",7,[[["self"],["s"]],["bool"]]],[11,"occurrences_of","","Returns the number of times an argument was used at…",7,[[["self"],["s"]],["u64"]]],[11,"index_of","","Gets the starting index of the argument in respect to all…",7,[[["self"],["s"]],["option",["usize"]]]],[11,"indices_of","","Gets all indices of the argument in respect to all other…",7,[[["self"],["s"]],["option",["indices"]]]],[11,"subcommand_matches","","Because [`Subcommand`]s are essentially \"sub-[`App`]s\"…",7,[[["self"],["s"]],["option",["argmatches"]]]],[11,"subcommand_name","","Because [`Subcommand`]s are essentially \"sub-[`App`]s\"…",7,[[["self"]],["option",["str"]]]],[11,"subcommand","","This brings together [`ArgMatches::subcommand_matches`]…",7,N],[11,"usage","","Returns a string slice of the usage statement for the…",7,[[["self"]],["str"]]],[11,"with_name","","Creates a new instance of a subcommand requiring a name.…",8,[[["str"]],["app"]]],[11,"with_name","","Creates a new instance of `ArgGroup` using a unique string…",9,[[["str"]],["self"]]],[11,"arg","","Adds an [argument] to this group by name",9,[[["self"],["str"]],["self"]]],[11,"args","","Adds multiple [arguments] to this group by name",9,N],[11,"multiple","","Allows more than one of the ['Arg']s in this group to be…",9,[[["self"],["bool"]],["self"]]],[11,"required","","Sets the group as required or not. A required group will…",9,[[["self"],["bool"]],["self"]]],[11,"requires","","Sets the requirement rules of this group. This is not to…",9,[[["self"],["str"]],["self"]]],[11,"requires_all","","Sets the requirement rules of this group. This is not to…",9,N],[11,"conflicts_with","","Sets the exclusion rules of this group. Exclusion (aka…",9,[[["self"],["str"]],["self"]]],[11,"conflicts_with_all","","Sets the exclusion rules of this group. Exclusion rules…",9,N],[11,"use_stderr","","Should the message be written to `stdout` or not",0,[[["self"]],["bool"]]],[11,"exit","","Prints the error to `stderr` and exits with a status of `1`",0,N],[11,"with_description","","Create an error with a custom description.",0,[[["str"],["errorkind"]],["self"]]],[11,"variants","","A list of possible variants in `&'static str` form",4,N],[6,"Result","","Short hand for [`Result`] type",N,N],[14,"value_t","","Convenience macro getting a typed value `T` where `T`…",N,N],[14,"value_t_or_exit","","Convenience macro getting a typed value `T` where `T`…",N,N],[14,"values_t","","Convenience macro getting a typed value [`Vec<T>`] where…",N,N],[14,"values_t_or_exit","","Convenience macro getting a typed value [`Vec<T>`] where…",N,N],[14,"_clap_count_exprs","","Counts the number of comma-delimited expressions passed to…",N,N],[14,"arg_enum","","Convenience macro to generate more complete enums with…",N,N],[14,"crate_version","","Allows you to pull the version from your Cargo.toml at…",N,N],[14,"crate_authors","","Allows you to pull the authors for the app from your…",N,N],[14,"crate_description","","Allows you to pull the description from your Cargo.toml at…",N,N],[14,"crate_name","","Allows you to pull the name from your Cargo.toml at…",N,N],[14,"app_from_crate","","Allows you to build the `App` instance from your…",N,N],[14,"clap_app","","Build `App`, `Arg`s, `SubCommand`s and `Group`s with…",N,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into_iter","","",10,[[["self"]],["i"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into_iter","","",11,[[["self"]],["i"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"next_back","","",11,[[["self"]],["option",["str"]]]],[11,"next_back","","",10,[[["self"]],["option",["osstr"]]]],[11,"eq","","",2,[[["self"],["appsettings"]],["bool"]]],[11,"eq","","",6,[[["self"],["arg"]],["bool"]]],[11,"eq","","",1,[[["self"],["argsettings"]],["bool"]]],[11,"eq","","",3,[[["self"],["errorkind"]],["bool"]]],[11,"from","","",6,[[["arg"]],["self"]]],[11,"from","","",9,[[["arggroup"]],["self"]]],[11,"from","","",0,[[["error"]],["self"]]],[11,"from","","",0,[[["error"]],["self"]]],[11,"clone","","",2,[[["self"]],["appsettings"]]],[11,"clone","","",5,[[["self"]],["self"]]],[11,"clone","","",6,[[["self"]],["arg"]]],[11,"clone","","",7,[[["self"]],["argmatches"]]],[11,"clone","","",11,[[["self"]],["values"]]],[11,"clone","","",10,[[["self"]],["osvalues"]]],[11,"clone","","",8,[[["self"]],["subcommand"]]],[11,"clone","","",9,[[["self"]],["self"]]],[11,"clone","","",1,[[["self"]],["argsettings"]]],[11,"clone","","",3,[[["self"]],["errorkind"]]],[11,"clone","","",4,[[["self"]],["shell"]]],[11,"next","","",11,[[["self"]],["option",["str"]]]],[11,"size_hint","","",11,N],[11,"next","","",10,[[["self"]],["option",["osstr"]]]],[11,"size_hint","","",10,N],[11,"default","","",6,[[],["arg"]]],[11,"default","","",7,[[],["self"]]],[11,"default","","",11,[[],["self"]]],[11,"default","","",10,[[],["self"]]],[11,"default","","",9,[[],["arggroup"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"from_str","","",2,[[["str"]],["result"]]],[11,"from_str","","",1,[[["str"]],["result"]]],[11,"from_str","","",4,[[["str"]],["result"]]],[11,"description","","",0,[[["self"]],["str"]]]],"paths":[[3,"Error"],[4,"ArgSettings"],[4,"AppSettings"],[4,"ErrorKind"],[4,"Shell"],[3,"App"],[3,"Arg"],[3,"ArgMatches"],[3,"SubCommand"],[3,"ArgGroup"],[3,"OsValues"],[3,"Values"]]};
searchIndex["compiler_cli"]={"doc":"","items":[[0,"optimization_arg","compiler_cli","Parses the optimization command line flag, which might…",N,N],[3,"Arg","compiler_cli::optimization_arg","",N,N],[4,"ParseError","","",N,N],[13,"UnknownLevel","","",0,N],[12,"name","compiler_cli::optimization_arg::ParseError","",0,N],[13,"UnknownOptimization","compiler_cli::optimization_arg","",0,N],[12,"name","compiler_cli::optimization_arg::ParseError","",0,N],[13,"UnknownFlag","compiler_cli::optimization_arg","",0,N],[12,"name","compiler_cli::optimization_arg::ParseError","",0,N],[13,"TooManySeparators","compiler_cli::optimization_arg","",0,N],[13,"CustomWithoutList","","",0,N],[13,"NoDebuggerSupport","","",0,N],[12,"flag","compiler_cli::optimization_arg::ParseError","",0,N],[11,"from","compiler_cli::optimization_arg","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into_collection","","",1,[[["self"]],["smallvec"]]],[11,"mapped","","",1,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",1,[[["self"]],["result",["parseerr"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"as_fail","","",0,[[["self"]],["fail"]]],[11,"into_collection","","",0,[[["self"]],["smallvec"]]],[11,"mapped","","",0,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",0,[[["self"]],["result",["parseerr"]]]],[11,"clone","","",1,[[["self"]],["arg"]]],[11,"into","","",1,[[["self"]],["level"]]],[11,"default","","",1,[[],["arg"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"from_str","","",1,[[["str"]],["result"]]],[11,"cause","","",0,[[["self"]],["option",["fail"]]]],[11,"backtrace","","",0,[[["self"]],["option",["backtrace"]]]]],"paths":[[4,"ParseError"],[3,"Arg"]]};
searchIndex["compiler_lib"]={"doc":"","items":[[0,"ref_eq","compiler_lib","",N,N],[3,"RefEq","compiler_lib::ref_eq","",N,N],[12,"0","","",0,N],[0,"context","compiler_lib","All state shared by the lexer, parser and semantic…",N,N],[3,"Context","compiler_lib::context","",N,N],[12,"file","","",1,N],[12,"diagnostics","","",1,N],[5,"dummy_writer","","",N,N],[0,"ast","compiler_lib","",N,N],[4,"AST","compiler_lib::ast","",N,N],[13,"Empty","","",2,N],[13,"Program","","",2,N],[4,"ASTDiscriminants","","Auto-generated discriminant enum variants",N,N],[13,"Empty","","",3,N],[13,"Program","","",3,N],[3,"Program","","This is the top-level AST node. It stores all class…",N,N],[12,"classes","","",4,N],[12,"attrs","","",4,N],[3,"ClassDeclaration","","This AST node stores the Class declaration, which consists…",N,N],[12,"name","","",5,N],[12,"members","","",5,N],[12,"attrs","","",5,N],[3,"ClassMember","","This AST node describes a class member. Variants of class…",N,N],[12,"kind","","",6,N],[12,"name","","",6,N],[12,"attrs","","",6,N],[6,"ParameterList","","",N,N],[4,"ClassMemberKind","","A class member is either one of * `Field(type)`: a…",N,N],[13,"Field","","",7,N],[13,"Method","","",7,N],[13,"MainMethod","","",7,N],[4,"ClassMemberKindDiscriminants","","Auto-generated discriminant enum variants",N,N],[13,"Field","","",8,N],[13,"Method","","",8,N],[13,"MainMethod","","",8,N],[3,"Parameter","","This AST node represents a method parameter. A parameter…",N,N],[12,"ty","","",9,N],[12,"name","","",9,N],[3,"Type","","A `Type<'t>` is basically a `BasicType<'t>`. Optional it…",N,N],[12,"basic","","",10,N],[12,"array_depth","","Depth of the array type (number of `[]`) i.e. this means…",10,N],[4,"BasicType","","A `BasicType<'t>` is either one of * `Int`: a 32-bit…",N,N],[13,"Int","","",11,N],[13,"Boolean","","",11,N],[13,"Void","","",11,N],[13,"Custom","","",11,N],[13,"MainParam","","",11,N],[4,"BasicTypeDiscriminants","","Auto-generated discriminant enum variants",N,N],[13,"Int","","",12,N],[13,"Boolean","","",12,N],[13,"Void","","",12,N],[13,"Custom","","",12,N],[13,"MainParam","","",12,N],[3,"Block","","A `Block` in the AST is basically just a vector of…",N,N],[12,"statements","","",13,N],[4,"Stmt","","A statement can have one of the kinds: * `Block`: A block…",N,N],[13,"Block","","",14,N],[13,"Empty","","",14,N],[13,"If","","",14,N],[13,"While","","",14,N],[13,"Expression","","",14,N],[13,"Return","","",14,N],[13,"LocalVariableDeclaration","","",14,N],[4,"StmtDiscriminants","","Auto-generated discriminant enum variants",N,N],[13,"Block","","",15,N],[13,"Empty","","",15,N],[13,"If","","",15,N],[13,"While","","",15,N],[13,"Expression","","",15,N],[13,"Return","","",15,N],[13,"LocalVariableDeclaration","","",15,N],[4,"Expr","","An expression is either one of * `Assignment`: an…",N,N],[13,"Binary","","",16,N],[13,"Unary","","",16,N],[13,"MethodInvocation","","",16,N],[13,"FieldAccess","","",16,N],[13,"ArrayAccess","","",16,N],[13,"Null","","",16,N],[13,"Boolean","","",16,N],[13,"Int","","",16,N],[13,"NegInt","","",16,N],[13,"Var","","",16,N],[13,"ThisMethodInvocation","","",16,N],[13,"This","","",16,N],[13,"NewObject","","",16,N],[13,"NewArray","","",16,N],[4,"ExprDiscriminants","","Auto-generated discriminant enum variants",N,N],[13,"Binary","","",17,N],[13,"Unary","","",17,N],[13,"MethodInvocation","","",17,N],[13,"FieldAccess","","",17,N],[13,"ArrayAccess","","",17,N],[13,"Null","","",17,N],[13,"Boolean","","",17,N],[13,"Int","","",17,N],[13,"NegInt","","",17,N],[13,"Var","","",17,N],[13,"ThisMethodInvocation","","",17,N],[13,"This","","",17,N],[13,"NewObject","","",17,N],[13,"NewArray","","",17,N],[4,"BinaryOp","","Binary operations like comparisons (`==`, `!=`, `<=`,…",N,N],[13,"Assign","","",18,N],[13,"Equals","","",18,N],[13,"NotEquals","","",18,N],[13,"LessThan","","",18,N],[13,"GreaterThan","","",18,N],[13,"LessEquals","","",18,N],[13,"GreaterEquals","","",18,N],[13,"LogicalOr","","",18,N],[13,"LogicalAnd","","",18,N],[13,"Add","","",18,N],[13,"Sub","","",18,N],[13,"Mul","","",18,N],[13,"Div","","",18,N],[13,"Mod","","",18,N],[4,"UnaryOp","","One of the unary operations `!` and `-`",N,N],[13,"Not","","",19,N],[13,"Neg","","",19,N],[6,"ArgumentList","","",N,N],[4,"Attribute","","Attributes can be given to a program with `ignore…",N,N],[13,"LintLevel","","",20,N],[13,"Inline","","",20,N],[0,"visitor","compiler_lib","The visitor module for the AST.",N,N],[4,"NodeKind","compiler_lib::visitor","",N,N],[13,"AST","","",21,N],[13,"Program","","",21,N],[13,"ClassDeclaration","","",21,N],[13,"ClassMember","","",21,N],[13,"Parameter","","",21,N],[13,"ParameterList","","",21,N],[13,"Type","","",21,N],[13,"BasicType","","",21,N],[13,"Block","","",21,N],[13,"Stmt","","",21,N],[13,"Expr","","",21,N],[13,"BinaryOp","","",21,N],[13,"UnaryOp","","",21,N],[4,"NodeKindDiscriminants","","Auto-generated discriminant enum variants",N,N],[13,"AST","","",22,N],[13,"Program","","",22,N],[13,"ClassDeclaration","","",22,N],[13,"ClassMember","","",22,N],[13,"Parameter","","",22,N],[13,"ParameterList","","",22,N],[13,"Type","","",22,N],[13,"BasicType","","",22,N],[13,"Block","","",22,N],[13,"Stmt","","",22,N],[13,"Expr","","",22,N],[13,"BinaryOp","","",22,N],[13,"UnaryOp","","",22,N],[8,"VisitResult","","",N,N],[10,"stop_visit","","",23,[[["self"]],["bool"]]],[4,"OutputSpecification","compiler_lib","",N,N],[13,"Stdout","","",24,N],[13,"File","","",24,N],[3,"FirmContext","","FirmContext is a singleton that represents the global…",N,N],[0,"backend","","",N,N],[0,"amd64","compiler_lib::backend","",N,N],[3,"Backend","compiler_lib::backend::amd64","",N,N],[12,"firm_ctx","","",25,N],[8,"AsmOut","compiler_lib::backend","",N,N],[8,"AsmBackend","","",N,N],[10,"emit_asm","","",26,[[["self"],["asmout"]],["result"]]],[0,"linter","compiler_lib","How to write an early lint:",N,N],[3,"UnknownLint","compiler_lib::linter","",N,N],[3,"Linter","","",N,N],[3,"EarlyContext","","",N,N],[3,"LateContext","","",N,N],[8,"LintPass","","",N,N],[10,"get_lints","","",27,[[["self"]],["lintarray"]]],[8,"AstLintPass","","",N,N],[11,"check_program","","",28,[[["self"],["earlycontext"],["spanned"]]]],[11,"check_class_decl","","",28,[[["self"],["earlycontext"],["spanned"]]]],[11,"check_class_member","","",28,[[["self"],["earlycontext"],["spanned"]]]],[11,"check_parameter_list","","",28,[[["self"],["earlycontext"],["spanned"]]]],[11,"check_parameter","","",28,[[["self"],["earlycontext"],["spanned"]]]],[11,"check_block","","",28,[[["self"],["earlycontext"],["spanned"]]]],[11,"check_stmt","","",28,[[["self"],["earlycontext"],["spanned"]]]],[11,"check_expr","","",28,[[["self"],["earlycontext"],["spanned"]]]],[11,"check_binop","","",28,[[["self"],["earlycontext"],["binaryop"]]]],[11,"check_unop","","",28,[[["self"],["earlycontext"],["unaryop"]]]],[11,"check_type","","",28,[[["self"],["earlycontext"],["spanned"]]]],[11,"check_basic_type","","",28,[[["self"],["earlycontext"],["spanned"]]]],[11,"check_program_post","","",28,[[["self"],["earlycontext"],["spanned"]]]],[11,"check_class_decl_post","","",28,[[["self"],["earlycontext"],["spanned"]]]],[11,"check_class_member_post","","",28,[[["self"],["earlycontext"],["spanned"]]]],[8,"SemanticLintPass","","",N,N],[11,"check_program","","",29,[[["self"],["latecontext"],["spanned"]]]],[11,"check_class_decl","","",29,[[["self"],["latecontext"],["spanned"]]]],[11,"check_class_member","","",29,[[["self"],["latecontext"],["spanned"]]]],[11,"check_parameter_list","","",29,[[["self"],["latecontext"],["spanned"]]]],[11,"check_parameter","","",29,[[["self"],["latecontext"],["spanned"]]]],[11,"check_block","","",29,[[["self"],["latecontext"],["spanned"]]]],[11,"check_stmt","","",29,[[["self"],["latecontext"],["spanned"]]]],[11,"check_expr","","",29,[[["self"],["latecontext"],["spanned"]]]],[11,"check_binop","","",29,[[["self"],["latecontext"],["binaryop"]]]],[11,"check_unop","","",29,[[["self"],["latecontext"],["unaryop"]]]],[11,"check_type","","",29,[[["self"],["latecontext"],["spanned"]]]],[11,"check_basic_type","","",29,[[["self"],["latecontext"],["spanned"]]]],[11,"check_program_post","","",29,[[["self"],["latecontext"],["spanned"]]]],[11,"check_class_decl_post","","",29,[[["self"],["latecontext"],["spanned"]]]],[11,"check_class_member_post","","",29,[[["self"],["latecontext"],["spanned"]]]],[8,"LintContext","","",N,N],[10,"struct_lint","","",30,[[["self"],["lint"],["span"],["str"]]]],[11,"check_ast","","",31,[[["self"],["context"],["ast"]],["result",["unknownlint"]]]],[11,"check_semantic","","",31,[[["self"],["context"],["ast"],["typeanalysis"]],["result",["unknownlint"]]]],[11,"register_ast_passes","","",31,[[["self"]]]],[11,"register_semantic_passes","","",31,[[["self"]]]],[0,"print","compiler_lib","",N,N],[0,"pretty","compiler_lib::print","",N,N],[5,"print","compiler_lib::print::pretty","",N,[[["ast"],["write"]],["result",["error"]]]],[5,"compare_class_member","","",N,[[["classmember"],["classmember"]],["ordering"]]],[0,"structure","compiler_lib::print","",N,N],[5,"print","compiler_lib::print::structure","",N,[[["ast"],["write"]],["result",["error"]]]],[11,"build","compiler_lib","`type_system`",32,[[["path"],["typesystem"],["typeanalysis"],["stringtable"],["box",["rtlib"]]],["firmcontext"]]],[11,"high_level_dump","","May panic or fail silently if dumping fails. Must only be…",32,[[["self"],["options"]]]],[11,"run_optimizations","","Must only be called once.",32,[[["self"],["level"]]]],[11,"use_external_backend","","Must only be called once.",32,[[["self"]],["firmprogram"]]],[11,"from","compiler_lib::ref_eq","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"equivalent","","",0,[[["self"],["k"]],["bool"]]],[11,"into_collection","","",0,[[["self"]],["smallvec"]]],[11,"mapped","","",0,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",0,[[["self"]],["result",["parseerr"]]]],[11,"equivalent","","",0,[[["self"],["k"]],["bool"]]],[11,"equivalent","","",0,[[["self"],["k"]],["bool"]]],[11,"from","compiler_lib::context","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into_collection","","",1,[[["self"]],["smallvec"]]],[11,"mapped","","",1,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",1,[[["self"]],["result",["parseerr"]]]],[11,"from","compiler_lib::ast","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"equivalent","","",2,[[["self"],["k"]],["bool"]]],[11,"into_collection","","",2,[[["self"]],["smallvec"]]],[11,"mapped","","",2,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",2,[[["self"]],["result",["parseerr"]]]],[11,"equivalent","","",2,[[["self"],["k"]],["bool"]]],[11,"equivalent","","",2,[[["self"],["k"]],["bool"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"equivalent","","",3,[[["self"],["k"]],["bool"]]],[11,"into_collection","","",3,[[["self"]],["smallvec"]]],[11,"mapped","","",3,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",3,[[["self"]],["result",["parseerr"]]]],[11,"equivalent","","",3,[[["self"],["k"]],["bool"]]],[11,"equivalent","","",3,[[["self"],["k"]],["bool"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"equivalent","","",4,[[["self"],["k"]],["bool"]]],[11,"into_collection","","",4,[[["self"]],["smallvec"]]],[11,"mapped","","",4,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",4,[[["self"]],["result",["parseerr"]]]],[11,"equivalent","","",4,[[["self"],["k"]],["bool"]]],[11,"equivalent","","",4,[[["self"],["k"]],["bool"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"equivalent","","",5,[[["self"],["k"]],["bool"]]],[11,"into_collection","","",5,[[["self"]],["smallvec"]]],[11,"mapped","","",5,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",5,[[["self"]],["result",["parseerr"]]]],[11,"equivalent","","",5,[[["self"],["k"]],["bool"]]],[11,"equivalent","","",5,[[["self"],["k"]],["bool"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"equivalent","","",6,[[["self"],["k"]],["bool"]]],[11,"into_collection","","",6,[[["self"]],["smallvec"]]],[11,"mapped","","",6,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",6,[[["self"]],["result",["parseerr"]]]],[11,"equivalent","","",6,[[["self"],["k"]],["bool"]]],[11,"equivalent","","",6,[[["self"],["k"]],["bool"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"equivalent","","",7,[[["self"],["k"]],["bool"]]],[11,"into_collection","","",7,[[["self"]],["smallvec"]]],[11,"mapped","","",7,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",7,[[["self"]],["result",["parseerr"]]]],[11,"equivalent","","",7,[[["self"],["k"]],["bool"]]],[11,"equivalent","","",7,[[["self"],["k"]],["bool"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"equivalent","","",8,[[["self"],["k"]],["bool"]]],[11,"into_collection","","",8,[[["self"]],["smallvec"]]],[11,"mapped","","",8,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",8,[[["self"]],["result",["parseerr"]]]],[11,"equivalent","","",8,[[["self"],["k"]],["bool"]]],[11,"equivalent","","",8,[[["self"],["k"]],["bool"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"equivalent","","",9,[[["self"],["k"]],["bool"]]],[11,"into_collection","","",9,[[["self"]],["smallvec"]]],[11,"mapped","","",9,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",9,[[["self"]],["result",["parseerr"]]]],[11,"equivalent","","",9,[[["self"],["k"]],["bool"]]],[11,"equivalent","","",9,[[["self"],["k"]],["bool"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"equivalent","","",10,[[["self"],["k"]],["bool"]]],[11,"into_collection","","",10,[[["self"]],["smallvec"]]],[11,"mapped","","",10,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",10,[[["self"]],["result",["parseerr"]]]],[11,"equivalent","","",10,[[["self"],["k"]],["bool"]]],[11,"equivalent","","",10,[[["self"],["k"]],["bool"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"equivalent","","",11,[[["self"],["k"]],["bool"]]],[11,"into_collection","","",11,[[["self"]],["smallvec"]]],[11,"mapped","","",11,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",11,[[["self"]],["result",["parseerr"]]]],[11,"equivalent","","",11,[[["self"],["k"]],["bool"]]],[11,"equivalent","","",11,[[["self"],["k"]],["bool"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"to_string","","",12,[[["self"]],["string"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"equivalent","","",12,[[["self"],["k"]],["bool"]]],[11,"into_collection","","",12,[[["self"]],["smallvec"]]],[11,"mapped","","",12,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",12,[[["self"]],["result",["parseerr"]]]],[11,"equivalent","","",12,[[["self"],["k"]],["bool"]]],[11,"equivalent","","",12,[[["self"],["k"]],["bool"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"equivalent","","",13,[[["self"],["k"]],["bool"]]],[11,"into_collection","","",13,[[["self"]],["smallvec"]]],[11,"mapped","","",13,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",13,[[["self"]],["result",["parseerr"]]]],[11,"equivalent","","",13,[[["self"],["k"]],["bool"]]],[11,"equivalent","","",13,[[["self"],["k"]],["bool"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"equivalent","","",14,[[["self"],["k"]],["bool"]]],[11,"into_collection","","",14,[[["self"]],["smallvec"]]],[11,"mapped","","",14,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",14,[[["self"]],["result",["parseerr"]]]],[11,"equivalent","","",14,[[["self"],["k"]],["bool"]]],[11,"equivalent","","",14,[[["self"],["k"]],["bool"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"to_string","","",15,[[["self"]],["string"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"equivalent","","",15,[[["self"],["k"]],["bool"]]],[11,"into_collection","","",15,[[["self"]],["smallvec"]]],[11,"mapped","","",15,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",15,[[["self"]],["result",["parseerr"]]]],[11,"equivalent","","",15,[[["self"],["k"]],["bool"]]],[11,"equivalent","","",15,[[["self"],["k"]],["bool"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"equivalent","","",16,[[["self"],["k"]],["bool"]]],[11,"into_collection","","",16,[[["self"]],["smallvec"]]],[11,"mapped","","",16,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",16,[[["self"]],["result",["parseerr"]]]],[11,"equivalent","","",16,[[["self"],["k"]],["bool"]]],[11,"equivalent","","",16,[[["self"],["k"]],["bool"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"to_string","","",17,[[["self"]],["string"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"equivalent","","",17,[[["self"],["k"]],["bool"]]],[11,"into_collection","","",17,[[["self"]],["smallvec"]]],[11,"mapped","","",17,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",17,[[["self"]],["result",["parseerr"]]]],[11,"equivalent","","",17,[[["self"],["k"]],["bool"]]],[11,"equivalent","","",17,[[["self"],["k"]],["bool"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"equivalent","","",18,[[["self"],["k"]],["bool"]]],[11,"into_collection","","",18,[[["self"]],["smallvec"]]],[11,"mapped","","",18,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",18,[[["self"]],["result",["parseerr"]]]],[11,"equivalent","","",18,[[["self"],["k"]],["bool"]]],[11,"equivalent","","",18,[[["self"],["k"]],["bool"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"equivalent","","",19,[[["self"],["k"]],["bool"]]],[11,"into_collection","","",19,[[["self"]],["smallvec"]]],[11,"mapped","","",19,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",19,[[["self"]],["result",["parseerr"]]]],[11,"equivalent","","",19,[[["self"],["k"]],["bool"]]],[11,"equivalent","","",19,[[["self"],["k"]],["bool"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"equivalent","","",20,[[["self"],["k"]],["bool"]]],[11,"into_collection","","",20,[[["self"]],["smallvec"]]],[11,"mapped","","",20,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",20,[[["self"]],["result",["parseerr"]]]],[11,"equivalent","","",20,[[["self"],["k"]],["bool"]]],[11,"equivalent","","",20,[[["self"],["k"]],["bool"]]],[11,"from","compiler_lib::visitor","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"into_collection","","",21,[[["self"]],["smallvec"]]],[11,"mapped","","",21,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",21,[[["self"]],["result",["parseerr"]]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"to_string","","",22,[[["self"]],["string"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"equivalent","","",22,[[["self"],["k"]],["bool"]]],[11,"into_collection","","",22,[[["self"]],["smallvec"]]],[11,"mapped","","",22,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",22,[[["self"]],["result",["parseerr"]]]],[11,"equivalent","","",22,[[["self"],["k"]],["bool"]]],[11,"equivalent","","",22,[[["self"],["k"]],["bool"]]],[11,"from","compiler_lib","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"into_collection","","",24,[[["self"]],["smallvec"]]],[11,"mapped","","",24,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",24,[[["self"]],["result",["parseerr"]]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"into_collection","","",32,[[["self"]],["smallvec"]]],[11,"mapped","","",32,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",32,[[["self"]],["result",["parseerr"]]]],[11,"from","compiler_lib::backend::amd64","",25,[[["t"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"into_collection","","",25,[[["self"]],["smallvec"]]],[11,"mapped","","",25,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",25,[[["self"]],["result",["parseerr"]]]],[11,"from","compiler_lib::linter","",33,[[["t"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,N],[11,"to_string","","",33,[[["self"]],["string"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"as_fail","","",33,[[["self"]],["fail"]]],[11,"into_collection","","",33,[[["self"]],["smallvec"]]],[11,"mapped","","",33,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",33,[[["self"]],["result",["parseerr"]]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"into_collection","","",31,[[["self"]],["smallvec"]]],[11,"mapped","","",31,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",31,[[["self"]],["result",["parseerr"]]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"into_collection","","",34,[[["self"]],["smallvec"]]],[11,"mapped","","",34,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",34,[[["self"]],["result",["parseerr"]]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"into_collection","","",35,[[["self"]],["smallvec"]]],[11,"mapped","","",35,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",35,[[["self"]],["result",["parseerr"]]]],[11,"eq","compiler_lib::ref_eq","",0,[[["self"],["refeq"]],["bool"]]],[11,"eq","","",0,[[["self"],["refeq"]],["bool"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","compiler_lib","",24,[[["self"],["formatter"]],["result",["error"]]]],[11,"clone","","",24,[[["self"]],["outputspecification"]]],[11,"hash","compiler_lib::ref_eq","",0,N],[11,"hash","","",0,N],[11,"cmp","compiler_lib::ast","",8,[[["self"],["classmemberkinddiscriminants"]],["ordering"]]],[11,"eq","","",6,[[["self"],["classmember"]],["bool"]]],[11,"ne","","",6,[[["self"],["classmember"]],["bool"]]],[11,"eq","","",11,[[["self"],["basictype"]],["bool"]]],[11,"ne","","",11,[[["self"],["basictype"]],["bool"]]],[11,"eq","","",7,[[["self"],["classmemberkind"]],["bool"]]],[11,"ne","","",7,[[["self"],["classmemberkind"]],["bool"]]],[11,"eq","","",18,[[["self"],["binaryop"]],["bool"]]],[11,"eq","","",10,[[["self"],["type"]],["bool"]]],[11,"ne","","",10,[[["self"],["type"]],["bool"]]],[11,"eq","","",9,[[["self"],["parameter"]],["bool"]]],[11,"ne","","",9,[[["self"],["parameter"]],["bool"]]],[11,"eq","","",4,[[["self"],["program"]],["bool"]]],[11,"ne","","",4,[[["self"],["program"]],["bool"]]],[11,"eq","compiler_lib::visitor","",22,[[["self"],["nodekinddiscriminants"]],["bool"]]],[11,"eq","compiler_lib::ast","",3,[[["self"],["astdiscriminants"]],["bool"]]],[11,"eq","","",5,[[["self"],["classdeclaration"]],["bool"]]],[11,"ne","","",5,[[["self"],["classdeclaration"]],["bool"]]],[11,"eq","","",15,[[["self"],["stmtdiscriminants"]],["bool"]]],[11,"eq","","",20,[[["self"],["attribute"]],["bool"]]],[11,"ne","","",20,[[["self"],["attribute"]],["bool"]]],[11,"eq","","",16,[[["self"],["expr"]],["bool"]]],[11,"ne","","",16,[[["self"],["expr"]],["bool"]]],[11,"eq","","",13,[[["self"],["block"]],["bool"]]],[11,"ne","","",13,[[["self"],["block"]],["bool"]]],[11,"eq","","",17,[[["self"],["exprdiscriminants"]],["bool"]]],[11,"eq","","",14,[[["self"],["stmt"]],["bool"]]],[11,"ne","","",14,[[["self"],["stmt"]],["bool"]]],[11,"eq","","",8,[[["self"],["classmemberkinddiscriminants"]],["bool"]]],[11,"eq","","",19,[[["self"],["unaryop"]],["bool"]]],[11,"eq","","",12,[[["self"],["basictypediscriminants"]],["bool"]]],[11,"eq","","",2,[[["self"],["ast"]],["bool"]]],[11,"ne","","",2,[[["self"],["ast"]],["bool"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","compiler_lib::visitor","",22,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","compiler_lib::ast","",15,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","compiler_lib::visitor","",22,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","compiler_lib::ast","",13,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","compiler_lib::visitor","",21,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","compiler_lib::ast","",16,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result",["error"]]]],[11,"from","compiler_lib::visitor","",21,[[["spanned"]],["nodekind"]]],[11,"from","","",21,[[["spanned"]],["nodekind"]]],[11,"from","","",22,[[["nodekind"]],["nodekinddiscriminants"]]],[11,"from","","",21,[[["spanned"]],["nodekind"]]],[11,"from","compiler_lib::ast","",17,[[["expr"]],["exprdiscriminants"]]],[11,"from","","",15,[[["stmt"]],["stmtdiscriminants"]]],[11,"from","compiler_lib::visitor","",21,[[["spanned"]],["nodekind"]]],[11,"from","compiler_lib::ast","",3,[[["ast"]],["astdiscriminants"]]],[11,"from","","",15,[[["stmt"]],["stmtdiscriminants"]]],[11,"from","","",8,[[["classmemberkind"]],["classmemberkinddiscriminants"]]],[11,"from","","",17,[[["expr"]],["exprdiscriminants"]]],[11,"from","","",8,[[["classmemberkind"]],["classmemberkinddiscriminants"]]],[11,"from","","",3,[[["ast"]],["astdiscriminants"]]],[11,"from","","",12,[[["basictype"]],["basictypediscriminants"]]],[11,"from","","",12,[[["basictype"]],["basictypediscriminants"]]],[11,"from","compiler_lib::visitor","",21,[[["spanned"]],["nodekind"]]],[11,"from","","",21,[[["binaryop"]],["nodekind"]]],[11,"from","","",21,[[["spanned"]],["nodekind"]]],[11,"from","","",22,[[["nodekind"]],["nodekinddiscriminants"]]],[11,"from","","",21,[[["spanned"]],["nodekind"]]],[11,"from","","",21,[[["spanned"]],["nodekind"]]],[11,"from","","",21,[[["unaryop"]],["nodekind"]]],[11,"from","","",21,[[["spanned"]],["nodekind"]]],[11,"from","","",21,[[["spanned"]],["nodekind"]]],[11,"from","","",21,[[["ast"]],["nodekind"]]],[11,"clone","compiler_lib::ast","",19,[[["self"]],["unaryop"]]],[11,"clone","","",3,[[["self"]],["astdiscriminants"]]],[11,"clone","","",20,[[["self"]],["attribute"]]],[11,"clone","compiler_lib::visitor","",22,[[["self"]],["nodekinddiscriminants"]]],[11,"clone","compiler_lib::ast","",10,[[["self"]],["type"]]],[11,"clone","","",5,[[["self"]],["classdeclaration"]]],[11,"clone","","",17,[[["self"]],["exprdiscriminants"]]],[11,"clone","","",4,[[["self"]],["program"]]],[11,"clone","","",8,[[["self"]],["classmemberkinddiscriminants"]]],[11,"clone","","",9,[[["self"]],["parameter"]]],[11,"clone","","",15,[[["self"]],["stmtdiscriminants"]]],[11,"clone","","",14,[[["self"]],["stmt"]]],[11,"clone","","",7,[[["self"]],["classmemberkind"]]],[11,"clone","","",6,[[["self"]],["classmember"]]],[11,"clone","","",11,[[["self"]],["basictype"]]],[11,"clone","","",16,[[["self"]],["expr"]]],[11,"clone","","",13,[[["self"]],["block"]]],[11,"clone","","",12,[[["self"]],["basictypediscriminants"]]],[11,"clone","","",18,[[["self"]],["binaryop"]]],[11,"partial_cmp","","",8,[[["self"],["classmemberkinddiscriminants"]],["option",["ordering"]]]],[11,"hash","","",8,N],[11,"emit_asm","compiler_lib::backend::amd64","",25,[[["self"],["asmout"]],["result"]]],[11,"emit_asm","compiler_lib","This implementation of `emit_asm` may only be called once…",32,[[["self"],["asmout"]],["result"]]],[11,"struct_lint","compiler_lib::linter","",34,[[["self"],["lint"],["span"],["str"]]]],[11,"struct_lint","","",35,[[["self"],["lint"],["span"],["str"]]]],[11,"clone","","",33,[[["self"]],["unknownlint"]]],[11,"default","","",31,[[],["self"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"cause","","",33,[[["self"]],["option",["fail"]]]],[11,"backtrace","","",33,[[["self"]],["option",["backtrace"]]]],[11,"as_maybe_spanned","","",33,[[["self"]],["maybespanned",["display"]]]],[11,"new","compiler_lib::context","",1,[[["asciifile"],["box",["writecolor"]]],["context"]]],[11,"dummy","","",1,[[["asciifile"]],["context"]]],[11,"is_method","compiler_lib::ast","",7,[[["self"]],["bool"]]],[11,"method_params","","",7,[[["self"]],["option",["spanned"]]]],[11,"method_body","","",7,[[["self"]],["option",["spanned"]]]],[11,"for_each_child","compiler_lib::visitor","Visit the children of `self`, invoking `cb` on each. If…",21,[[["self"],["fnmut"]],["option"]]]],"paths":[[3,"RefEq"],[3,"Context"],[4,"AST"],[4,"ASTDiscriminants"],[3,"Program"],[3,"ClassDeclaration"],[3,"ClassMember"],[4,"ClassMemberKind"],[4,"ClassMemberKindDiscriminants"],[3,"Parameter"],[3,"Type"],[4,"BasicType"],[4,"BasicTypeDiscriminants"],[3,"Block"],[4,"Stmt"],[4,"StmtDiscriminants"],[4,"Expr"],[4,"ExprDiscriminants"],[4,"BinaryOp"],[4,"UnaryOp"],[4,"Attribute"],[4,"NodeKind"],[4,"NodeKindDiscriminants"],[8,"VisitResult"],[4,"OutputSpecification"],[3,"Backend"],[8,"AsmBackend"],[8,"LintPass"],[8,"AstLintPass"],[8,"SemanticLintPass"],[8,"LintContext"],[3,"Linter"],[3,"FirmContext"],[3,"UnknownLint"],[3,"EarlyContext"],[3,"LateContext"]]};
searchIndex["compiler_shared"]={"doc":"","items":[[0,"context","compiler_shared","All state shared by the lexer, parser and semantic…",N,N],[3,"Context","compiler_shared::context","",N,N],[12,"file","","",0,N],[12,"diagnostics","","",0,N],[5,"dummy_writer","","",N,N],[11,"new","","",0,[[["asciifile"],["box",["writecolor"]]],["self"]]],[11,"dummy","","",0,[[["asciifile"]],["self"]]],[0,"timing","compiler_shared","Measures time taken by single phases of the compiler.",N,N],[3,"Measurement","compiler_shared::timing","",N,N],[3,"MeasurementGuard","","",N,N],[3,"AsciiDisp","","",N,N],[12,"0","","",1,N],[3,"SingleMeasurement","","",N,N],[12,"label","","",2,N],[12,"indent","","",2,N],[12,"duration","","",2,N],[5,"print","","",N,[[]]],[6,"CompilerMeasurements","","",N,N],[11,"start","","",3,[[["str"]],["measurement"]]],[11,"stop","","",3,[[["self"]]]],[11,"guard","","",3,[[["str"]],["measurementguard"]]],[14,"timed_scope","compiler_shared","",N,N],[11,"from","compiler_shared::context","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","compiler_shared::timing","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"clone","","",3,[[["self"]],["measurement"]]],[11,"clone","","",2,[[["self"]],["singlemeasurement"]]],[11,"drop","","",4,[[["self"]]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"serialize","","",2,[[["self"],["__s"]],["result"]]],[11,"deserialize","","",2,[[["__d"]],["result"]]]],"paths":[[3,"Context"],[3,"AsciiDisp"],[3,"SingleMeasurement"],[3,"Measurement"],[3,"MeasurementGuard"]]};
searchIndex["cookie"]={"doc":"HTTP cookie parsing and cookie jar management.","items":[[3,"PrivateJar","cookie","A child cookie jar that provides authenticated encryption…",N,N],[3,"SignedJar","","A child cookie jar that authenticates its cookies.",N,N],[3,"Key","","A cryptographic master key for use with `Signed` and/or…",N,N],[3,"CookieBuilder","","Structure that follows the builder pattern for building…",N,N],[3,"CookieJar","","A collection of cookies that tracks its modifications.",N,N],[3,"Delta","","Iterator over the changes to a cookie jar.",N,N],[3,"Iter","","Iterator over all of the cookies in a jar.",N,N],[3,"Cookie","","Representation of an HTTP cookie.",N,N],[3,"EncodedCookie","","Wrapper around `Cookie` whose `Display` implementation…",N,N],[4,"ParseError","","Enum corresponding to a parsing error.",N,N],[13,"MissingPair","","The cookie did not contain a name/value pair.",0,N],[13,"EmptyName","","The cookie's name was empty.",0,N],[13,"Utf8Error","","Decoding the cookie's name or value resulted in invalid…",0,N],[4,"SameSite","","The `SameSite` cookie attribute.",N,N],[13,"Strict","","The \"Strict\" `SameSite` attribute.",1,N],[13,"Lax","","The \"Lax\" `SameSite` attribute.",1,N],[13,"None","","No `SameSite` attribute.",1,N],[11,"new","","Creates a new `CookieBuilder` instance from the given name…",2,[[["n"],["v"]],["cookiebuilder"]]],[11,"expires","","Sets the `expires` field in the cookie being built.",2,[[["self"],["tm"]],["cookiebuilder"]]],[11,"max_age","","Sets the `max_age` field in the cookie being built.",2,[[["self"],["duration"]],["cookiebuilder"]]],[11,"domain","","Sets the `domain` field in the cookie being built.",2,[[["self"],["d"]],["cookiebuilder"]]],[11,"path","","Sets the `path` field in the cookie being built.",2,[[["self"],["p"]],["cookiebuilder"]]],[11,"secure","","Sets the `secure` field in the cookie being built.",2,[[["self"],["bool"]],["cookiebuilder"]]],[11,"http_only","","Sets the `http_only` field in the cookie being built.",2,[[["self"],["bool"]],["cookiebuilder"]]],[11,"same_site","","Sets the `same_site` field in the cookie being built.",2,[[["self"],["samesite"]],["cookiebuilder"]]],[11,"permanent","","Makes the cookie being built 'permanent' by extending its…",2,[[["self"]],["cookiebuilder"]]],[11,"finish","","Finishes building and returns the built `Cookie`.",2,[[["self"]],["cookie"]]],[11,"as_str","","Returns a description of this error as a string",0,[[["self"]],["str"]]],[11,"new","","Creates an empty cookie jar.",3,[[],["cookiejar"]]],[11,"get","","Returns a reference to the `Cookie` inside this jar with…",3,[[["self"],["str"]],["option",["cookie"]]]],[11,"add_original","","Adds an \"original\" `cookie` to this jar. If an original…",3,[[["self"],["cookie"]]]],[11,"add","","Adds `cookie` to this jar. If a cookie with the same name…",3,[[["self"],["cookie"]]]],[11,"remove","","Removes `cookie` from this jar. If an original cookie with…",3,[[["self"],["cookie"]]]],[11,"force_remove","","Removes `cookie` from this jar completely. This method…",3,[[["self"],["cookie"]]]],[11,"clear","","Removes all cookies from this cookie jar.",3,[[["self"]]]],[11,"delta","","Returns an iterator over cookies that represent the…",3,[[["self"]],["delta"]]],[11,"iter","","Returns an iterator over all of the cookies present in…",3,[[["self"]],["iter"]]],[11,"private","","Returns a `PrivateJar` with `self` as its parent jar using…",3,[[["self"],["key"]],["privatejar"]]],[11,"signed","","Returns a `SignedJar` with `self` as its parent jar using…",3,[[["self"],["key"]],["signedjar"]]],[11,"is_strict","","Returns `true` if `self` is `SameSite::Strict` and `false`…",1,[[["self"]],["bool"]]],[11,"is_lax","","Returns `true` if `self` is `SameSite::Lax` and `false`…",1,[[["self"]],["bool"]]],[11,"is_none","","Returns `true` if `self` is `SameSite::None` and `false`…",1,[[["self"]],["bool"]]],[11,"get","","Returns a reference to the `Cookie` inside this jar with…",4,[[["self"],["str"]],["option",["cookie"]]]],[11,"add","","Adds `cookie` to the parent jar. The cookie's value is…",4,[[["self"],["cookie"]]]],[11,"add_original","","Adds an \"original\" `cookie` to parent jar. The cookie's…",4,[[["self"],["cookie"]]]],[11,"remove","","Removes `cookie` from the parent jar.",4,[[["self"],["cookie"]]]],[11,"get","","Returns a reference to the `Cookie` inside this jar with…",5,[[["self"],["str"]],["option",["cookie"]]]],[11,"add","","Adds `cookie` to the parent jar. The cookie's value is…",5,[[["self"],["cookie"]]]],[11,"add_original","","Adds an \"original\" `cookie` to this jar. The cookie's…",5,[[["self"],["cookie"]]]],[11,"remove","","Removes `cookie` from the parent jar.",5,[[["self"],["cookie"]]]],[11,"from_master","","Derives new signing/encryption keys from a master key.",6,N],[11,"generate","","Generates signing/encryption keys from a secure, random…",6,[[],["key"]]],[11,"try_generate","","Attempts to generate signing/encryption keys from a…",6,[[],["option",["key"]]]],[11,"signing","","Returns the raw bytes of a key suitable for signing cookies.",6,N],[11,"encryption","","Returns the raw bytes of a key suitable for encrypting…",6,N],[11,"new","","Creates a new `Cookie` with the given name and value.",7,[[["n"],["v"]],["cookie"]]],[11,"named","","Creates a new `Cookie` with the given name and an empty…",7,[[["n"]],["cookie"]]],[11,"build","","Creates a new `CookieBuilder` instance from the given key…",7,[[["n"],["v"]],["cookiebuilder"]]],[11,"parse","","Parses a `Cookie` from the given HTTP cookie header value…",7,[[["s"]],["result",["cookie","parseerror"]]]],[11,"parse_encoded","","Parses a `Cookie` from the given HTTP cookie header value…",7,[[["s"]],["result",["cookie","parseerror"]]]],[11,"encoded","","Wraps `self` in an `EncodedCookie`: a cost-free wrapper…",7,[[["self"]],["encodedcookie"]]],[11,"into_owned","","Converts `self` into a `Cookie` with a static lifetime.…",7,[[["self"]],["cookie"]]],[11,"name","","Returns the name of `self`.",7,[[["self"]],["str"]]],[11,"value","","Returns the value of `self`.",7,[[["self"]],["str"]]],[11,"name_value","","Returns the name and value of `self` as a tuple of `(name,…",7,N],[11,"http_only","","Returns whether this cookie was marked `HttpOnly` or not.…",7,[[["self"]],["option",["bool"]]]],[11,"secure","","Returns whether this cookie was marked `Secure` or not.…",7,[[["self"]],["option",["bool"]]]],[11,"same_site","","Returns the `SameSite` attribute of this cookie if one was…",7,[[["self"]],["option",["samesite"]]]],[11,"max_age","","Returns the specified max-age of the cookie if one was…",7,[[["self"]],["option",["duration"]]]],[11,"path","","Returns the `Path` of the cookie if one was specified.",7,[[["self"]],["option",["str"]]]],[11,"domain","","Returns the `Domain` of the cookie if one was specified.",7,[[["self"]],["option",["str"]]]],[11,"expires","","Returns the `Expires` time of the cookie if one was…",7,[[["self"]],["option",["tm"]]]],[11,"set_name","","Sets the name of `self` to `name`.",7,[[["self"],["n"]]]],[11,"set_value","","Sets the value of `self` to `value`.",7,[[["self"],["v"]]]],[11,"set_http_only","","Sets the value of `http_only` in `self` to `value`.",7,[[["self"],["bool"]]]],[11,"set_secure","","Sets the value of `secure` in `self` to `value`.",7,[[["self"],["bool"]]]],[11,"set_same_site","","Sets the value of `same_site` in `self` to `value`.",7,[[["self"],["samesite"]]]],[11,"set_max_age","","Sets the value of `max_age` in `self` to `value`.",7,[[["self"],["duration"]]]],[11,"set_path","","Sets the `path` of `self` to `path`.",7,[[["self"],["p"]]]],[11,"set_domain","","Sets the `domain` of `self` to `domain`.",7,[[["self"],["d"]]]],[11,"set_expires","","Sets the expires field of `self` to `time`.",7,[[["self"],["tm"]]]],[11,"make_permanent","","Makes `self` a \"permanent\" cookie by extending its…",7,[[["self"]]]],[11,"name_raw","","Returns the name of `self` as a string slice of the raw…",7,[[["self"]],["option",["str"]]]],[11,"value_raw","","Returns the value of `self` as a string slice of the raw…",7,[[["self"]],["option",["str"]]]],[11,"path_raw","","Returns the `Path` of `self` as a string slice of the raw…",7,[[["self"]],["option",["str"]]]],[11,"domain_raw","","Returns the `Domain` of `self` as a string slice of the…",7,[[["self"]],["option",["str"]]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into_iter","","",8,[[["self"]],["i"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into_iter","","",9,[[["self"]],["i"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_string","","",10,[[["self"]],["string"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"eq","","",0,[[["self"],["parseerror"]],["bool"]]],[11,"ne","","",0,[[["self"],["parseerror"]],["bool"]]],[11,"eq","","",1,[[["self"],["samesite"]],["bool"]]],[11,"eq","","",7,[[["self"],["cookie"]],["bool"]]],[11,"from","","",0,[[["utf8error"]],["parseerror"]]],[11,"clone","","",2,[[["self"]],["cookiebuilder"]]],[11,"clone","","",0,[[["self"]],["parseerror"]]],[11,"clone","","",3,[[["self"]],["cookiejar"]]],[11,"clone","","",1,[[["self"]],["samesite"]]],[11,"clone","","",6,[[["self"]],["key"]]],[11,"clone","","",7,[[["self"]],["cookie"]]],[11,"next","","",8,[[["self"]],["option",["cookie"]]]],[11,"next","","",9,[[["self"]],["option",["cookie"]]]],[11,"default","","",3,[[],["cookiejar"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","Formats the cookie `self` as a `Set-Cookie` header value.",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"from_str","","",7,[[["str"]],["result",["cookie","parseerror"]]]],[11,"hash","","",1,N],[11,"description","","",0,[[["self"]],["str"]]]],"paths":[[4,"ParseError"],[4,"SameSite"],[3,"CookieBuilder"],[3,"CookieJar"],[3,"PrivateJar"],[3,"SignedJar"],[3,"Key"],[3,"Cookie"],[3,"Delta"],[3,"Iter"],[3,"EncodedCookie"]]};
searchIndex["crossbeam_utils"]={"doc":"Utilities for concurrent programming.","items":[[3,"CachePadded","crossbeam_utils","Pads and aligns a value to the length of a cache line.",N,N],[0,"atomic","","Additional utilities for atomics.",N,N],[3,"AtomicCell","crossbeam_utils::atomic","A thread-safe mutable memory location.",N,N],[11,"new","","Creates a new atomic cell initialized with `val`.",0,[[["t"]],["atomiccell"]]],[11,"get_mut","","Returns a mutable reference to the inner value.",0,[[["self"]],["t"]]],[11,"into_inner","","Unwraps the atomic cell and returns its inner value.",0,[[["self"]],["t"]]],[11,"is_lock_free","","Returns `true` if operations on values of this type are…",0,[[],["bool"]]],[11,"store","","Stores `val` into the atomic cell.",0,[[["self"],["t"]]]],[11,"swap","","Stores `val` into the atomic cell and returns the previous…",0,[[["self"],["t"]],["t"]]],[11,"load","","Loads a value.",0,[[["self"]],["t"]]],[11,"compare_and_swap","","If the current value equals `current`, stores `new` into…",0,[[["self"],["t"],["t"]],["t"]]],[11,"compare_exchange","","If the current value equals `current`, stores `new` into…",0,[[["self"],["t"],["t"]],["result"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["self"],["u8"]],["u8"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["self"],["u8"]],["u8"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["self"],["u8"]],["u8"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["self"],["u8"]],["u8"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["self"],["u8"]],["u8"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["self"],["i8"]],["i8"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["self"],["i8"]],["i8"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["self"],["i8"]],["i8"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["self"],["i8"]],["i8"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["self"],["i8"]],["i8"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["self"],["u16"]],["u16"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["self"],["u16"]],["u16"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["self"],["u16"]],["u16"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["self"],["u16"]],["u16"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["self"],["u16"]],["u16"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["self"],["i16"]],["i16"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["self"],["i16"]],["i16"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["self"],["i16"]],["i16"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["self"],["i16"]],["i16"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["self"],["i16"]],["i16"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["self"],["u32"]],["u32"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["self"],["u32"]],["u32"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["self"],["u32"]],["u32"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["self"],["u32"]],["u32"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["self"],["u32"]],["u32"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["self"],["i32"]],["i32"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["self"],["i32"]],["i32"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["self"],["i32"]],["i32"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["self"],["i32"]],["i32"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["self"],["i32"]],["i32"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["self"],["u64"]],["u64"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["self"],["u64"]],["u64"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["self"],["u64"]],["u64"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["self"],["u64"]],["u64"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["self"],["u64"]],["u64"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["self"],["i64"]],["i64"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["self"],["i64"]],["i64"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["self"],["i64"]],["i64"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["self"],["i64"]],["i64"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["self"],["i64"]],["i64"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["self"],["usize"]],["usize"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["self"],["usize"]],["usize"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["self"],["usize"]],["usize"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["self"],["usize"]],["usize"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["self"],["usize"]],["usize"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["self"],["isize"]],["isize"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["self"],["isize"]],["isize"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["self"],["isize"]],["isize"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["self"],["isize"]],["isize"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["self"],["isize"]],["isize"]]],[11,"fetch_and","","Applies logical \"and\" to the current value and returns the…",0,[[["self"],["bool"]],["bool"]]],[11,"fetch_or","","Applies logical \"or\" to the current value and returns the…",0,[[["self"],["bool"]],["bool"]]],[11,"fetch_xor","","Applies logical \"xor\" to the current value and returns the…",0,[[["self"],["bool"]],["bool"]]],[8,"AtomicConsume","","Trait which allows reading from primitive atomic types…",N,N],[16,"Val","","Type returned by `load_consume`.",1,N],[10,"load_consume","","Loads a value from the atomic using a \"consume\" memory…",1,N],[11,"new","crossbeam_utils","Pads and aligns a value to the length of a cache line.",2,[[["t"]],["cachepadded"]]],[11,"into_inner","","Returns the value value.",2,[[["self"]],["t"]]],[0,"sync","","Synchronization tools.",N,N],[3,"Parker","crossbeam_utils::sync","A thread parking primitive.",N,N],[3,"Unparker","","Unparks a thread parked by the associated [`Parker`].",N,N],[11,"new","","Creates a new `Parker`.",3,[[],["parker"]]],[11,"park","","Blocks the current thread until the token is made available.",3,[[["self"]]]],[11,"park_timeout","","Blocks the current thread until the token is made…",3,[[["self"],["duration"]]]],[11,"unparker","","Returns a reference to an associated [`Unparker`].",3,[[["self"]],["unparker"]]],[11,"unpark","","Atomically makes the token available if it is not already.",4,[[["self"]]]],[0,"thread","crossbeam_utils","Threads that can borrow variables from the stack.",N,N],[3,"Scope","crossbeam_utils::thread","A scope for spawning threads.",N,N],[3,"ScopedThreadBuilder","","Scoped thread configuration. Provides detailed control…",N,N],[3,"ScopedJoinHandle","","A handle to a scoped thread",N,N],[5,"scope","","Creates a new `Scope` for scoped thread spawning.",N,[[["f"]],["result"]]],[11,"spawn","","Create a scoped thread.",5,[[["self"],["f"]],["scopedjoinhandle"]]],[11,"builder","","Generates the base configuration for spawning a scoped…",5,[[["self"]],["scopedthreadbuilder"]]],[11,"name","","Names the thread-to-be. Currently the name is used for…",6,[[["self"],["string"]],["scopedthreadbuilder"]]],[11,"stack_size","","Sets the size of the stack for the new thread.",6,[[["self"],["usize"]],["scopedthreadbuilder"]]],[11,"spawn","","Spawns a new thread, and returns a join handle for it.",6,[[["self"],["f"]],["result",["scopedjoinhandle"]]]],[11,"join","","Waits for the associated thread to finish.",7,[[["self"]],["result"]]],[11,"thread","","Gets the underlying [`std::thread::Thread`] handle.",7,[[["self"]],["thread"]]],[11,"from","crossbeam_utils","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","crossbeam_utils::atomic","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","crossbeam_utils::sync","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","crossbeam_utils::thread","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"eq","crossbeam_utils","",2,[[["self"],["cachepadded"]],["bool"]]],[11,"ne","","",2,[[["self"],["cachepadded"]],["bool"]]],[11,"from","","",2,[[["t"]],["self"]]],[11,"clone","","",2,[[["self"]],["cachepadded"]]],[11,"clone","crossbeam_utils::sync","",4,[[["self"]],["unparker"]]],[11,"default","crossbeam_utils::atomic","",0,[[],["atomiccell"]]],[11,"default","crossbeam_utils","",2,[[],["cachepadded"]]],[11,"fmt","crossbeam_utils::atomic","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","crossbeam_utils","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","crossbeam_utils::sync","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","crossbeam_utils::thread","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"deref","crossbeam_utils","",2,[[["self"]],["t"]]],[11,"deref_mut","","",2,[[["self"]],["t"]]],[11,"hash","","",2,N]],"paths":[[3,"AtomicCell"],[8,"AtomicConsume"],[3,"CachePadded"],[3,"Parker"],[3,"Unparker"],[3,"Scope"],[3,"ScopedThreadBuilder"],[3,"ScopedJoinHandle"]]};
searchIndex["debugging"]={"doc":"This is a browser-based graphical debugger for FIRM graphs.","items":[[3,"BreakpointFilters","debugging","",N,N],[3,"GuiThread","","",N,N],[3,"Breakpoint","","",N,N],[12,"label","","",0,N],[12,"file","","",0,N],[12,"line","","",0,N],[12,"column","","",0,N],[3,"CompiliationState","","",N,N],[3,"Debugger","","",N,N],[3,"DebuggerState","","",N,N],[3,"CORS","","",N,N],[4,"Filter","","",N,N],[13,"Location","","",1,N],[12,"file","debugging::Filter","",1,N],[12,"line","","",1,N],[13,"Label","debugging","",1,N],[12,"name","debugging::Filter","",1,N],[13,"Graph","debugging","",1,N],[12,"name","debugging::Filter","",1,N],[4,"MsgToCompiler","debugging","",N,N],[13,"Continue","","Stop Waiting at the breakpoint and continue compilation",2,N],[13,"GetCompilationState","","",2,N],[12,"sender","debugging::MsgToCompiler","",2,N],[13,"AddFilter","debugging","",2,N],[12,"filter","debugging::MsgToCompiler","",2,N],[4,"MsgToGui","debugging","",N,N],[13,"CompiliationState","","",3,N],[12,"state","debugging::MsgToGui","",3,N],[12,"already_sent","","",3,N],[5,"pause","debugging","",N,[[["breakpoint"],["hashmap",["string","graphstate"]]]]],[5,"breakpoint_continue","","",N,[[["state",["debuggerstate"]]],["result",["status"]]]],[5,"rocket_route_fn_breakpoint_continue","","Rocket code generated wrapping route function.",N,[[["request"],["data"]],["outcome"]]],[5,"add_filter","","",N,[[["state"],["filter"]]]],[5,"check_updates","","",N,[[["state"]]]],[5,"snapshot_at_index","","",N,[[["usize"],["state",["debuggerstate"]]],["result",["json","status"]]]],[5,"rocket_route_fn_snapshot_at_index","","Rocket code generated wrapping route function.",N,[[["request"],["data"]],["outcome"]]],[5,"breakpoint_list","","",N,[[["state",["debuggerstate"]]],["result",["json","status"]]]],[5,"rocket_route_fn_breakpoint_list","","Rocket code generated wrapping route function.",N,[[["request"],["data"]],["outcome"]]],[5,"breakpoint_filter_name","","",N,[[["state",["debuggerstate"]],["string"]],["result",["status"]]]],[5,"rocket_route_fn_breakpoint_filter_name","","Rocket code generated wrapping route function.",N,[[["request"],["data"]],["outcome"]]],[5,"breakpoint_filter_label","","",N,[[["state",["debuggerstate"]],["string"]],["result",["status"]]]],[5,"rocket_route_fn_breakpoint_filter_label","","Rocket code generated wrapping route function.",N,[[["request"],["data"]],["outcome"]]],[5,"breakpoint_filter_location","","",N,[[["state",["debuggerstate"]],["string"],["u32"]],["result",["status"]]]],[5,"rocket_route_fn_breakpoint_filter_location","","Rocket code generated wrapping route function.",N,[[["request"],["data"]],["outcome"]]],[5,"http_server","","",N,[[["syncsender",["msgtocompiler"]]]]],[0,"dot","","Converts FIRM or LIR graphs into dot graph description…",N,N],[3,"X11ColorIter","debugging::dot","",N,N],[3,"GraphState","","",N,N],[12,"name","","",4,N],[12,"dot_content","","",4,N],[3,"Label","","",N,N],[3,"NamedDot","","",N,N],[4,"Color","","",N,N],[13,"Hsv","","",5,N],[13,"Rgb","","",5,N],[13,"X11Color","","",5,N],[4,"X11Color","","",N,N],[13,"AliceBlue","","",6,N],[13,"AntiqueWhite","","",6,N],[13,"AntiqueWhite1","","",6,N],[13,"AntiqueWhite2","","",6,N],[13,"AntiqueWhite3","","",6,N],[13,"AntiqueWhite4","","",6,N],[13,"Aquamarine","","",6,N],[13,"Aquamarine1","","",6,N],[13,"Aquamarine2","","",6,N],[13,"Aquamarine3","","",6,N],[13,"Aquamarine4","","",6,N],[13,"Azure","","",6,N],[13,"Azure1","","",6,N],[13,"Azure2","","",6,N],[13,"Azure3","","",6,N],[13,"Azure4","","",6,N],[13,"Beige","","",6,N],[13,"Bisque","","",6,N],[13,"Bisque1","","",6,N],[13,"Bisque2","","",6,N],[13,"Bisque3","","",6,N],[13,"Bisque4","","",6,N],[13,"Black","","",6,N],[13,"BlanchedAlmond","","",6,N],[13,"Blue","","",6,N],[13,"Blue1","","",6,N],[13,"Blue2","","",6,N],[13,"Blue3","","",6,N],[13,"Blue4","","",6,N],[13,"BlueViolet","","",6,N],[13,"Brown","","",6,N],[13,"Brown1","","",6,N],[13,"Brown2","","",6,N],[13,"Brown3","","",6,N],[13,"Brown4","","",6,N],[13,"Burlywood","","",6,N],[13,"Burlywood1","","",6,N],[13,"Burlywood2","","",6,N],[13,"Burlywood3","","",6,N],[13,"Burlywood4","","",6,N],[13,"CadetBlue","","",6,N],[13,"CadetBlue1","","",6,N],[13,"CadetBlue2","","",6,N],[13,"CadetBlue3","","",6,N],[13,"CadetBlue4","","",6,N],[13,"Chartreuse","","",6,N],[13,"Chartreuse1","","",6,N],[13,"Chartreuse2","","",6,N],[13,"Chartreuse3","","",6,N],[13,"Chartreuse4","","",6,N],[13,"Chocolate","","",6,N],[13,"Chocolate1","","",6,N],[13,"Chocolate2","","",6,N],[13,"Chocolate3","","",6,N],[13,"Chocolate4","","",6,N],[13,"Coral","","",6,N],[13,"Coral1","","",6,N],[13,"Coral2","","",6,N],[13,"Coral3","","",6,N],[13,"Coral4","","",6,N],[13,"CornFlowerBlue","","",6,N],[13,"CornSilk","","",6,N],[13,"CornSilk1","","",6,N],[13,"CornSilk2","","",6,N],[13,"CornSilk3","","",6,N],[13,"CornSilk4","","",6,N],[13,"Crimson","","",6,N],[13,"Cyan","","",6,N],[13,"Cyan1","","",6,N],[13,"Cyan2","","",6,N],[13,"Cyan3","","",6,N],[13,"Cyan4","","",6,N],[13,"DarkGoldenrod","","",6,N],[13,"DarkGoldenrod1","","",6,N],[13,"DarkGoldenrod2","","",6,N],[13,"DarkGoldenrod3","","",6,N],[13,"DarkGoldenrod4","","",6,N],[13,"DarkGreen","","",6,N],[13,"Darkkhaki","","",6,N],[13,"DarkOliveGreen","","",6,N],[13,"DarkOliveGreen1","","",6,N],[13,"DarkOliveGreen2","","",6,N],[13,"DarkOliveGreen3","","",6,N],[13,"DarkOliveGreen4","","",6,N],[13,"DarkOrange","","",6,N],[13,"DarkOrange1","","",6,N],[13,"DarkOrange2","","",6,N],[13,"DarkOrange3","","",6,N],[13,"DarkOrange4","","",6,N],[13,"DarkOrchid","","",6,N],[13,"DarkOrchid1","","",6,N],[13,"DarkOrchid2","","",6,N],[13,"DarkOrchid3","","",6,N],[13,"DarkOrchid4","","",6,N],[13,"DarkSalmon","","",6,N],[13,"DarkSeaGreen","","",6,N],[13,"DarkSeaGreen1","","",6,N],[13,"DarkSeaGreen2","","",6,N],[13,"DarkSeaGreen3","","",6,N],[13,"DarkSeaGreen4","","",6,N],[13,"DarkSlateBlue","","",6,N],[13,"DarkSlateGray","","",6,N],[13,"DarkSlateGray1","","",6,N],[13,"DarkSlateGray2","","",6,N],[13,"DarkSlateGray3","","",6,N],[13,"DarkSlateGray4","","",6,N],[13,"DarkTurquoise","","",6,N],[13,"DarkViolet","","",6,N],[13,"DeepPink","","",6,N],[13,"DeepPink1","","",6,N],[13,"DeepPink2","","",6,N],[13,"DeepPink3","","",6,N],[13,"DeepPink4","","",6,N],[13,"DeepSkyBlue","","",6,N],[13,"DeepSkyBlue1","","",6,N],[13,"DeepSkyBlue2","","",6,N],[13,"DeepSkyBlue3","","",6,N],[13,"DeepSkyBlue4","","",6,N],[13,"DimGray","","",6,N],[13,"DodgerBlue","","",6,N],[13,"DodgerBlue1","","",6,N],[13,"DodgerBlue2","","",6,N],[13,"DodgerBlue3","","",6,N],[13,"DodgerBlue4","","",6,N],[13,"Firebrick","","",6,N],[13,"Firebrick1","","",6,N],[13,"Firebrick2","","",6,N],[13,"Firebrick3","","",6,N],[13,"Firebrick4","","",6,N],[13,"FloralWhite","","",6,N],[13,"ForestGreen","","",6,N],[13,"Gainsboro","","",6,N],[13,"GhostWhite","","",6,N],[13,"Gold","","",6,N],[13,"Gold1","","",6,N],[13,"Gold2","","",6,N],[13,"Gold3","","",6,N],[13,"Gold4","","",6,N],[13,"Goldenrod","","",6,N],[13,"Goldenrod1","","",6,N],[13,"Goldenrod2","","",6,N],[13,"Goldenrod3","","",6,N],[13,"Goldenrod4","","",6,N],[13,"Gray","","",6,N],[13,"Gray0","","",6,N],[13,"Gray1","","",6,N],[13,"Gray2","","",6,N],[13,"Gray3","","",6,N],[13,"Gray4","","",6,N],[13,"Gray5","","",6,N],[13,"Gray6","","",6,N],[13,"Gray7","","",6,N],[13,"Gray8","","",6,N],[13,"Gray9","","",6,N],[13,"Gray10","","",6,N],[13,"Gray11","","",6,N],[13,"Gray12","","",6,N],[13,"Gray13","","",6,N],[13,"Gray14","","",6,N],[13,"Gray15","","",6,N],[13,"Gray16","","",6,N],[13,"Gray17","","",6,N],[13,"Gray18","","",6,N],[13,"Gray19","","",6,N],[13,"Gray20","","",6,N],[13,"Gray21","","",6,N],[13,"Gray22","","",6,N],[13,"Gray23","","",6,N],[13,"Gray24","","",6,N],[13,"Gray25","","",6,N],[13,"Gray26","","",6,N],[13,"Gray27","","",6,N],[13,"Gray28","","",6,N],[13,"Gray29","","",6,N],[13,"Gray30","","",6,N],[13,"Gray31","","",6,N],[13,"Gray32","","",6,N],[13,"Gray33","","",6,N],[13,"Gray34","","",6,N],[13,"Gray35","","",6,N],[13,"Gray36","","",6,N],[13,"Gray37","","",6,N],[13,"Gray38","","",6,N],[13,"Gray39","","",6,N],[13,"Gray40","","",6,N],[13,"Gray41","","",6,N],[13,"Gray42","","",6,N],[13,"Gray43","","",6,N],[13,"Gray44","","",6,N],[13,"Gray45","","",6,N],[13,"Gray46","","",6,N],[13,"Gray47","","",6,N],[13,"Gray48","","",6,N],[13,"Gray49","","",6,N],[13,"Gray50","","",6,N],[13,"Gray51","","",6,N],[13,"Gray52","","",6,N],[13,"Gray53","","",6,N],[13,"Gray54","","",6,N],[13,"Gray55","","",6,N],[13,"Gray56","","",6,N],[13,"Gray57","","",6,N],[13,"Gray58","","",6,N],[13,"Gray59","","",6,N],[13,"Gray60","","",6,N],[13,"Gray61","","",6,N],[13,"Gray62","","",6,N],[13,"Gray63","","",6,N],[13,"Gray64","","",6,N],[13,"Gray65","","",6,N],[13,"Gray66","","",6,N],[13,"Gray67","","",6,N],[13,"Gray68","","",6,N],[13,"Gray69","","",6,N],[13,"Gray70","","",6,N],[13,"Gray71","","",6,N],[13,"Gray72","","",6,N],[13,"Gray73","","",6,N],[13,"Gray74","","",6,N],[13,"Gray75","","",6,N],[13,"Gray76","","",6,N],[13,"Gray77","","",6,N],[13,"Gray78","","",6,N],[13,"Gray79","","",6,N],[13,"Gray80","","",6,N],[13,"Gray81","","",6,N],[13,"Gray82","","",6,N],[13,"Gray83","","",6,N],[13,"Gray84","","",6,N],[13,"Gray85","","",6,N],[13,"Gray86","","",6,N],[13,"Gray87","","",6,N],[13,"Gray88","","",6,N],[13,"Gray89","","",6,N],[13,"Gray90","","",6,N],[13,"Gray91","","",6,N],[13,"Gray92","","",6,N],[13,"Gray93","","",6,N],[13,"Gray94","","",6,N],[13,"Gray95","","",6,N],[13,"Gray96","","",6,N],[13,"Gray97","","",6,N],[13,"Gray98","","",6,N],[13,"Gray99","","",6,N],[13,"Gray100","","",6,N],[13,"Green","","",6,N],[13,"Green1","","",6,N],[13,"Green2","","",6,N],[13,"Green3","","",6,N],[13,"Green4","","",6,N],[13,"GreenYellow","","",6,N],[13,"HoneyDew","","",6,N],[13,"HoneyDew1","","",6,N],[13,"HoneyDew2","","",6,N],[13,"HoneyDew3","","",6,N],[13,"HoneyDew4","","",6,N],[13,"HotPink","","",6,N],[13,"HotPink1","","",6,N],[13,"HotPink2","","",6,N],[13,"HotPink3","","",6,N],[13,"HotPink4","","",6,N],[13,"IndianRed","","",6,N],[13,"IndianRed1","","",6,N],[13,"IndianRed2","","",6,N],[13,"IndianRed3","","",6,N],[13,"IndianRed4","","",6,N],[13,"Indigo","","",6,N],[13,"Ivory","","",6,N],[13,"Ivory1","","",6,N],[13,"Ivory2","","",6,N],[13,"Ivory3","","",6,N],[13,"Ivory4","","",6,N],[13,"Khaki","","",6,N],[13,"Khaki1","","",6,N],[13,"Khaki2","","",6,N],[13,"Khaki3","","",6,N],[13,"Khaki4","","",6,N],[13,"Lavender","","",6,N],[13,"LavenderBlush","","",6,N],[13,"LavenderBlush1","","",6,N],[13,"LavenderBlush2","","",6,N],[13,"LavenderBlush3","","",6,N],[13,"LavenderBlush4","","",6,N],[13,"LawnGreen","","",6,N],[13,"LemonChiffon","","",6,N],[13,"LemonChiffon1","","",6,N],[13,"LemonChiffon2","","",6,N],[13,"LemonChiffon3","","",6,N],[13,"LemonChiffon4","","",6,N],[13,"LightBlue","","",6,N],[13,"LightBlue1","","",6,N],[13,"LightBlue2","","",6,N],[13,"LightBlue3","","",6,N],[13,"LightBlue4","","",6,N],[13,"LightCoral","","",6,N],[13,"LightCyan","","",6,N],[13,"LightCyan1","","",6,N],[13,"LightCyan2","","",6,N],[13,"LightCyan3","","",6,N],[13,"LightCyan4","","",6,N],[13,"LightGoldenrod","","",6,N],[13,"LightGoldenrod1","","",6,N],[13,"LightGoldenrod2","","",6,N],[13,"LightGoldenrod3","","",6,N],[13,"LightGoldenrod4","","",6,N],[13,"LightGoldenrodYellow","","",6,N],[13,"LightGray","","",6,N],[13,"LightPink","","",6,N],[13,"LightPink1","","",6,N],[13,"LightPink2","","",6,N],[13,"LightPink3","","",6,N],[13,"LightPink4","","",6,N],[13,"LightSalmon","","",6,N],[13,"LightSalmon1","","",6,N],[13,"LightSalmon2","","",6,N],[13,"LightSalmon3","","",6,N],[13,"LightSalmon4","","",6,N],[13,"LightSeaGreen","","",6,N],[13,"LightSkyBlue","","",6,N],[13,"LightSkyBlue1","","",6,N],[13,"LightSkyBlue2","","",6,N],[13,"LightSkyBlue3","","",6,N],[13,"LightSkyBlue4","","",6,N],[13,"LightSlateBlue","","",6,N],[13,"LightSlateGray","","",6,N],[13,"LightSteelBlue","","",6,N],[13,"LightSteelBlue1","","",6,N],[13,"LightSteelBlue2","","",6,N],[13,"LightSteelBlue3","","",6,N],[13,"LightSteelBlue4","","",6,N],[13,"LightYellow","","",6,N],[13,"LightYellow1","","",6,N],[13,"LightYellow2","","",6,N],[13,"LightYellow3","","",6,N],[13,"LightYellow4","","",6,N],[13,"LimeGreen","","",6,N],[13,"Linen","","",6,N],[13,"Magenta","","",6,N],[13,"Magenta1","","",6,N],[13,"Magenta2","","",6,N],[13,"Magenta3","","",6,N],[13,"Magenta4","","",6,N],[13,"Maroon","","",6,N],[13,"Maroon1","","",6,N],[13,"Maroon2","","",6,N],[13,"Maroon3","","",6,N],[13,"Maroon4","","",6,N],[13,"MediumAquamarine","","",6,N],[13,"MediumBlue","","",6,N],[13,"MediumOrchid","","",6,N],[13,"MediumOrchid1","","",6,N],[13,"MediumOrchid2","","",6,N],[13,"MediumOrchid3","","",6,N],[13,"MediumOrchid4","","",6,N],[13,"MediumPurple","","",6,N],[13,"MediumPurple1","","",6,N],[13,"MediumPurple2","","",6,N],[13,"MediumPurple3","","",6,N],[13,"MediumPurple4","","",6,N],[13,"MediumSeaGreen","","",6,N],[13,"MediumSlateBlue","","",6,N],[13,"MediumSpringGreen","","",6,N],[13,"MediumTurquoise","","",6,N],[13,"MediumVioletRed","","",6,N],[13,"MidnightBlue","","",6,N],[13,"MintCream","","",6,N],[13,"MistyRose","","",6,N],[13,"MistyRose1","","",6,N],[13,"MistyRose2","","",6,N],[13,"MistyRose3","","",6,N],[13,"MistyRose4","","",6,N],[13,"Moccasin","","",6,N],[13,"NavajoWhite","","",6,N],[13,"NavajoWhite1","","",6,N],[13,"NavajoWhite2","","",6,N],[13,"NavajoWhite3","","",6,N],[13,"NavajoWhite4","","",6,N],[13,"Navy","","",6,N],[13,"NavyBlue","","",6,N],[13,"OldLace","","",6,N],[13,"OliveDrab","","",6,N],[13,"OliveDrab1","","",6,N],[13,"OliveDrab2","","",6,N],[13,"OliveDrab3","","",6,N],[13,"OliveDrab4","","",6,N],[13,"Orange","","",6,N],[13,"Orange1","","",6,N],[13,"Orange2","","",6,N],[13,"Orange3","","",6,N],[13,"Orange4","","",6,N],[13,"OrangeRed","","",6,N],[13,"OrangeRed1","","",6,N],[13,"OrangeRed2","","",6,N],[13,"OrangeRed3","","",6,N],[13,"OrangeRed4","","",6,N],[13,"Orchid","","",6,N],[13,"Orchid1","","",6,N],[13,"Orchid2","","",6,N],[13,"Orchid3","","",6,N],[13,"Orchid4","","",6,N],[13,"PaleGoldenrod","","",6,N],[13,"PaleGreen","","",6,N],[13,"PaleGreen1","","",6,N],[13,"PaleGreen2","","",6,N],[13,"PaleGreen3","","",6,N],[13,"PaleGreen4","","",6,N],[13,"PaleTurquoise","","",6,N],[13,"PaleTurquoise1","","",6,N],[13,"PaleTurquoise2","","",6,N],[13,"PaleTurquoise3","","",6,N],[13,"PaleTurquoise4","","",6,N],[13,"PaleVioletRed","","",6,N],[13,"PaleVioletRed1","","",6,N],[13,"PaleVioletRed2","","",6,N],[13,"PaleVioletRed3","","",6,N],[13,"PaleVioletRed4","","",6,N],[13,"PapayaWhip","","",6,N],[13,"PeachPuff","","",6,N],[13,"PeachPuff1","","",6,N],[13,"PeachPuff2","","",6,N],[13,"PeachPuff3","","",6,N],[13,"PeachPuff4","","",6,N],[13,"Peru","","",6,N],[13,"Pink","","",6,N],[13,"Pink1","","",6,N],[13,"Pink2","","",6,N],[13,"Pink3","","",6,N],[13,"Pink4","","",6,N],[13,"Plum","","",6,N],[13,"Plum1","","",6,N],[13,"Plum2","","",6,N],[13,"Plum3","","",6,N],[13,"Plum4","","",6,N],[13,"PowderBlue","","",6,N],[13,"Purple","","",6,N],[13,"Purple1","","",6,N],[13,"Purple2","","",6,N],[13,"Purple3","","",6,N],[13,"Purple4","","",6,N],[13,"Red","","",6,N],[13,"Red1","","",6,N],[13,"Red2","","",6,N],[13,"Red3","","",6,N],[13,"Red4","","",6,N],[13,"RosyBrown","","",6,N],[13,"RosyBrown1","","",6,N],[13,"RosyBrown2","","",6,N],[13,"RosyBrown3","","",6,N],[13,"RosyBrown4","","",6,N],[13,"RoyalBlue","","",6,N],[13,"RoyalBlue1","","",6,N],[13,"RoyalBlue2","","",6,N],[13,"RoyalBlue3","","",6,N],[13,"RoyalBlue4","","",6,N],[13,"SaddleBrown","","",6,N],[13,"Salmon","","",6,N],[13,"Salmon1","","",6,N],[13,"Salmon2","","",6,N],[13,"Salmon3","","",6,N],[13,"Salmon4","","",6,N],[13,"SandyBrown","","",6,N],[13,"SeaGreen","","",6,N],[13,"SeaGreen1","","",6,N],[13,"SeaGreen2","","",6,N],[13,"SeaGreen3","","",6,N],[13,"SeaGreen4","","",6,N],[13,"SeaShell","","",6,N],[13,"SeaShell1","","",6,N],[13,"SeaShell2","","",6,N],[13,"SeaShell3","","",6,N],[13,"SeaShell4","","",6,N],[13,"Sienna","","",6,N],[13,"Sienna1","","",6,N],[13,"Sienna2","","",6,N],[13,"Sienna3","","",6,N],[13,"Sienna4","","",6,N],[13,"SkyBlue","","",6,N],[13,"SkyBlue1","","",6,N],[13,"SkyBlue2","","",6,N],[13,"SkyBlue3","","",6,N],[13,"SkyBlue4","","",6,N],[13,"SlateBlue","","",6,N],[13,"SlateBlue1","","",6,N],[13,"SlateBlue2","","",6,N],[13,"SlateBlue3","","",6,N],[13,"SlateBlue4","","",6,N],[13,"SlateGray","","",6,N],[13,"SlateGray1","","",6,N],[13,"SlateGray2","","",6,N],[13,"SlateGray3","","",6,N],[13,"SlateGray4","","",6,N],[13,"Snow","","",6,N],[13,"Snow1","","",6,N],[13,"Snow2","","",6,N],[13,"Snow3","","",6,N],[13,"Snow4","","",6,N],[13,"SpringGreen","","",6,N],[13,"SpringGreen1","","",6,N],[13,"SpringGreen2","","",6,N],[13,"SpringGreen3","","",6,N],[13,"SpringGreen4","","",6,N],[13,"SteelBlue","","",6,N],[13,"SteelBlue1","","",6,N],[13,"SteelBlue2","","",6,N],[13,"SteelBlue3","","",6,N],[13,"SteelBlue4","","",6,N],[13,"Tan","","",6,N],[13,"Tan1","","",6,N],[13,"Tan2","","",6,N],[13,"Tan3","","",6,N],[13,"Tan4","","",6,N],[13,"Thistle","","",6,N],[13,"Thistle1","","",6,N],[13,"Thistle2","","",6,N],[13,"Thistle3","","",6,N],[13,"Thistle4","","",6,N],[13,"Tomato","","",6,N],[13,"Tomato1","","",6,N],[13,"Tomato2","","",6,N],[13,"Tomato3","","",6,N],[13,"Tomato4","","",6,N],[13,"Transparent","","",6,N],[13,"Turquoise","","",6,N],[13,"Turquoise1","","",6,N],[13,"Turquoise2","","",6,N],[13,"Turquoise3","","",6,N],[13,"Turquoise4","","",6,N],[13,"Violet","","",6,N],[13,"VioletRed","","",6,N],[13,"VioletRed1","","",6,N],[13,"VioletRed2","","",6,N],[13,"VioletRed3","","",6,N],[13,"VioletRed4","","",6,N],[13,"Wheat","","",6,N],[13,"Wheat1","","",6,N],[13,"Wheat2","","",6,N],[13,"Wheat3","","",6,N],[13,"Wheat4","","",6,N],[13,"White","","",6,N],[13,"WhiteSmoke","","",6,N],[13,"Yellow","","",6,N],[13,"Yellow1","","",6,N],[13,"Yellow2","","",6,N],[13,"Yellow3","","",6,N],[13,"Yellow4","","",6,N],[13,"YellowGreen","","",6,N],[4,"Style","","",N,N],[13,"Dashed","","",7,N],[13,"Dotted","","",7,N],[13,"Solid","","",7,N],[13,"Bold","","",7,N],[13,"Invisible","","",7,N],[13,"Filled","","",7,N],[13,"Diagonals","","",7,N],[13,"Rounded","","",7,N],[4,"Shape","","",N,N],[13,"Box","","",8,N],[13,"Polygon","","",8,N],[13,"Ellipse","","",8,N],[13,"Circle","","",8,N],[13,"Point","","",8,N],[13,"Egg","","",8,N],[13,"Triangle","","",8,N],[13,"PlainText","","",8,N],[13,"Diamond","","",8,N],[13,"Trapezium","","",8,N],[13,"Parallelogram","","",8,N],[13,"House","","",8,N],[13,"Pentagon","","",8,N],[13,"Hexagon","","",8,N],[13,"Septagon","","",8,N],[13,"Octagon","","",8,N],[13,"DoubleCircle","","",8,N],[13,"DoubleOctagon","","",8,N],[13,"TripleOctagon","","",8,N],[13,"InvTriangle","","",8,N],[13,"InvTrapezium","","",8,N],[13,"InvHouse","","",8,N],[13,"MDiamond","","",8,N],[13,"MSquare","","",8,N],[13,"MCircle","","",8,N],[13,"Note","","",8,N],[13,"Tab","","",8,N],[13,"Folder","","",8,N],[13,"Box3D","","",8,N],[13,"Component","","",8,N],[13,"Record","","",8,N],[13,"MRecord","","",8,N],[5,"default_label","","",N,[[["node"]],["label"]]],[5,"dom_info_box","","",N,[[["node"]],["label"]]],[5,"escape_record_content","","",N,[[["str"]],["string"]]],[5,"dot_string","","",N,[[["str"]],["string"]]],[11,"to_dot_string","","",5,[[["self"]],["string"]]],[8,"GraphData","","",N,N],[10,"graph_data","","Transform the object into a map of unique function names…",9,[[["self"],["t"]],["hashmap",["string","graphstate"]]]],[8,"LabelMaker","","Abstraction over anything that can be transformed into…",N,N],[10,"label_for_node","","",10,[[["self"],["tnode"]],["label"]]],[8,"Dot","","",N,N],[10,"into_dot_format","","",11,[[["self"],["write"],["str"],["t"]]]],[11,"dump_as_dot_file","","",11,[[["self"],["pathbuf"],["str"],["t"]]]],[11,"into_dot_format_string","","",11,[[["self"],["str"],["t"]],["string"]]],[11,"with_name","","",11,[[["self"],["string"]],["nameddot"]]],[8,"Named","","",N,N],[10,"name","","",12,[[["self"]],["string"]]],[11,"from_text","","",13,[[["string"]],["label"]]],[11,"from_html","","",13,[[["string"]],["label"]]],[11,"style","","",13,[[["self"],["style"]],["self"]]],[11,"styles","","",13,[[["self"],["vec",["style"]]],["self"]]],[11,"add_style","","",13,[[["self"],["style"]],["self"]]],[11,"shape","","",13,[[["self"],["shape"]],["self"]]],[11,"fillcolor","","",13,[[["self"],["t"]],["self"]]],[11,"fontcolor","","",13,[[["self"],["t"]],["self"]]],[11,"peripheries","","Number of outlines. When filled one outline is hidden by…",13,[[["self"],["u32"]],["self"]]],[11,"skew","","",13,[[["self"],["f32"]],["self"]]],[11,"sides","","",13,[[["self"],["u32"]],["self"]]],[11,"text","","",13,[[["self"],["string"]],["self"]]],[11,"append","","",13,[[["self"],["string"]],["self"]]],[11,"html","","",13,[[["self"],["string"]],["self"]]],[11,"write_dot_format","","",13,N],[7,"static_rocket_route_info_for_breakpoint_continue","debugging","Rocket code generated static route info.",N,N],[7,"static_rocket_route_info_for_snapshot_at_index","","Rocket code generated static route info.",N,N],[7,"static_rocket_route_info_for_breakpoint_list","","Rocket code generated static route info.",N,N],[7,"static_rocket_route_info_for_breakpoint_filter_name","","Rocket code generated static route info.",N,N],[7,"static_rocket_route_info_for_breakpoint_filter_label","","Rocket code generated static route info.",N,N],[7,"static_rocket_route_info_for_breakpoint_filter_location","","Rocket code generated static route info.",N,N],[17,"_IMPL_SERIALIZE_FOR_Breakpoint","","",N,N],[17,"_IMPL_SERIALIZE_FOR_CompiliationState","","",N,N],[11,"new","","",14,[[],["self"]]],[11,"add","","",14,[[["self"],["filter"]],["self"]]],[11,"is_disabled","","",14,[[["self"],["breakpoint"],["hashmap"]],["bool"]]],[14,"breakpoint","","",N,N],[14,"rocket_uri_macro_breakpoint_continue","","Rocket code generated wrapping URI macro.",N,N],[14,"rocket_uri_macro_snapshot_at_index","","Rocket code generated wrapping URI macro.",N,N],[14,"rocket_uri_macro_breakpoint_list","","Rocket code generated wrapping URI macro.",N,N],[14,"rocket_uri_macro_breakpoint_filter_name","","Rocket code generated wrapping URI macro.",N,N],[14,"rocket_uri_macro_breakpoint_filter_label","","Rocket code generated wrapping URI macro.",N,N],[14,"rocket_uri_macro_breakpoint_filter_location","","Rocket code generated wrapping URI macro.",N,N],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"into_collection","","",14,[[["self"]],["smallvec"]]],[11,"mapped","","",14,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",14,[[["self"]],["result",["parseerr"]]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"into_collection","","",15,[[["self"]],["smallvec"]]],[11,"mapped","","",15,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",15,[[["self"]],["result",["parseerr"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into_collection","","",0,[[["self"]],["smallvec"]]],[11,"mapped","","",0,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",0,[[["self"]],["result",["parseerr"]]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"into_collection","","",16,[[["self"]],["smallvec"]]],[11,"mapped","","",16,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",16,[[["self"]],["result",["parseerr"]]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"into_collection","","",17,[[["self"]],["smallvec"]]],[11,"mapped","","",17,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",17,[[["self"]],["result",["parseerr"]]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"into_collection","","",18,[[["self"]],["smallvec"]]],[11,"mapped","","",18,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",18,[[["self"]],["result",["parseerr"]]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"into_collection","","",19,[[["self"]],["smallvec"]]],[11,"mapped","","",19,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",19,[[["self"]],["result",["parseerr"]]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"equivalent","","",1,[[["self"],["k"]],["bool"]]],[11,"into_collection","","",1,[[["self"]],["smallvec"]]],[11,"mapped","","",1,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",1,[[["self"]],["result",["parseerr"]]]],[11,"equivalent","","",1,[[["self"],["k"]],["bool"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into_collection","","",2,[[["self"]],["smallvec"]]],[11,"mapped","","",2,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",2,[[["self"]],["result",["parseerr"]]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into_collection","","",3,[[["self"]],["smallvec"]]],[11,"mapped","","",3,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",3,[[["self"]],["result",["parseerr"]]]],[11,"from","debugging::dot","",20,[[["t"]],["t"]]],[11,"into_iter","","",20,[[["self"]],["i"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"into_collection","","",20,[[["self"]],["smallvec"]]],[11,"mapped","","",20,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",20,[[["self"]],["result",["parseerr"]]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into_collection","","",4,[[["self"]],["smallvec"]]],[11,"mapped","","",4,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",4,[[["self"]],["result",["parseerr"]]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"into_collection","","",13,[[["self"]],["smallvec"]]],[11,"mapped","","",13,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",13,[[["self"]],["result",["parseerr"]]]],[11,"graph_data","","",21,[[["self"],["t"]],["hashmap",["string","graphstate","randomstate"]]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"into_collection","","",21,[[["self"]],["smallvec"]]],[11,"mapped","","",21,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",21,[[["self"]],["result",["parseerr"]]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into_collection","","",5,[[["self"]],["smallvec"]]],[11,"mapped","","",5,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",5,[[["self"]],["result",["parseerr"]]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into_collection","","",6,[[["self"]],["smallvec"]]],[11,"mapped","","",6,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",6,[[["self"]],["result",["parseerr"]]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into_collection","","",7,[[["self"]],["smallvec"]]],[11,"mapped","","",7,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",7,[[["self"]],["result",["parseerr"]]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into_collection","","",8,[[["self"]],["smallvec"]]],[11,"mapped","","",8,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",8,[[["self"]],["result",["parseerr"]]]],[11,"into_dot_format","","",21,[[["self"],["write"],["str"],["t"]]]],[11,"name","","",21,[[["self"]],["string"]]],[11,"eq","debugging","",1,[[["self"],["filter"]],["bool"]]],[11,"ne","","",1,[[["self"],["filter"]],["bool"]]],[11,"from","debugging::dot","",5,[[["usize"]],["self"]]],[11,"from","","",5,[[["x11color"]],["self"]]],[11,"clone","","",5,[[["self"]],["color"]]],[11,"clone","","",6,[[["self"]],["x11color"]]],[11,"clone","","",20,[[["self"]],["x11coloriter"]]],[11,"clone","","",4,[[["self"]],["graphstate"]]],[11,"clone","","",13,[[["self"]],["label"]]],[11,"clone","","",7,[[["self"]],["style"]]],[11,"clone","","",8,[[["self"]],["shape"]]],[11,"clone","debugging","",1,[[["self"]],["filter"]]],[11,"clone","","",0,[[["self"]],["breakpoint"]]],[11,"clone","","",16,[[["self"]],["compiliationstate"]]],[11,"len","debugging::dot","",20,[[["self"]],["usize"]]],[11,"next","","",20,[[["self"]],["option",["x11color"]]]],[11,"size_hint","","",20,N],[11,"default","","",13,[[],["label"]]],[11,"default","debugging","",14,[[],["self"]]],[11,"fmt","debugging::dot","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","debugging","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"hash","","",1,N],[11,"iter","debugging::dot","",6,[[],["x11coloriter"]]],[11,"serialize","","",4,[[["self"],["__s"]],["result"]]],[11,"serialize","debugging","",0,[[["self"],["__s"]],["result"]]],[11,"serialize","","",16,[[["self"],["__s"]],["result"]]],[11,"info","","",19,[[["self"]],["info"]]],[11,"on_response","","",19,[[["self"],["request"],["response"]]]]],"paths":[[3,"Breakpoint"],[4,"Filter"],[4,"MsgToCompiler"],[4,"MsgToGui"],[3,"GraphState"],[4,"Color"],[4,"X11Color"],[4,"Style"],[4,"Shape"],[8,"GraphData"],[8,"LabelMaker"],[8,"Dot"],[8,"Named"],[3,"Label"],[3,"BreakpointFilters"],[3,"GuiThread"],[3,"CompiliationState"],[3,"Debugger"],[3,"DebuggerState"],[3,"CORS"],[3,"X11ColorIter"],[3,"NamedDot"]]};
searchIndex["derive_more"]={"doc":"`derive_more` Rust has lots of builtin traits that are…","items":[],"paths":[]};
searchIndex["devise"]={"doc":"","items":[[0,"ext","devise","",N,N],[8,"PathExt","devise::ext","",N,N],[10,"is","","",0,N],[10,"is_local","","",0,N],[10,"is_global","","",0,N],[10,"generics","","",0,[[["self"]],["option",["punctuated"]]]],[8,"TypeExt","","",N,N],[10,"strip_lifetimes","","",1,N],[10,"with_stripped_lifetimes","","",1,[[["self"]],["type"]]],[4,"GenericKind","","",N,N],[13,"Lifetime","","",2,N],[13,"Type","","",2,N],[13,"Binding","","",2,N],[13,"Const","","",2,N],[13,"Constraint","","",2,N],[8,"GenericExt","","",N,N],[10,"kind","","",3,[[["self"]],["generickind"]]],[8,"Split2","","",N,N],[10,"split2","","",4,N],[8,"Split3","","",N,N],[10,"split3","","",5,N],[4,"MetaItem","devise","",N,N],[13,"Ident","","",6,N],[13,"Literal","","",6,N],[13,"KeyValue","","",6,N],[13,"List","","",6,N],[3,"Field","","",N,N],[12,"parent","","",7,N],[12,"field","","",7,N],[12,"index","","",7,N],[8,"FromMeta","","",N,N],[10,"from_meta","","",8,[[["metaitem"]],["result",["diagnostic"]]]],[11,"from_attr","","",8,[[["str"],["attribute"]],["result",["diagnostic"]]]],[11,"from_attrs","","",8,N],[11,"default","","",8,[[],["option"]]],[5,"default_variant_mapper","","",N,[[["derivegenerator"],["derived",["variant"]]],["result",["tokenstream","diagnostic"]]]],[3,"DataSupport","","",N,N],[6,"Variant","","",N,N],[3,"MetaItemList","","",N,N],[12,"ident","","",9,N],[12,"iter","","",9,N],[8,"ToTokens","devise::quote","Types that can be interpolated inside a [`quote!`]…",N,N],[10,"to_tokens","","Write `self` to the given `TokenStream`.",10,N],[11,"into_token_stream","","Convert `self` directly into a `TokenStream` object.",10,[[["self"]],["tokenstream"]]],[8,"TokenStreamExt","","TokenStream extension trait with methods for appending…",N,N],[10,"append","","",11,N],[10,"append_all","","",11,N],[10,"append_separated","","",11,N],[10,"append_terminated","","",11,N],[14,"quote_spanned","","Same as `quote!`, but applies a given span to all tokens…",N,N],[14,"quote","","The whole point.",N,N],[0,"token","devise::syn","Tokens representing Rust punctuation, keywords, and…",N,N],[8,"Token","devise::syn::token","Marker trait for types that represent single tokens.",N,N],[3,"Underscore","","`_`",N,N],[12,"spans","","",12,N],[3,"Abstract","","`abstract`",N,N],[12,"span","","",13,N],[3,"As","","`as`",N,N],[12,"span","","",14,N],[3,"Async","","`async`",N,N],[12,"span","","",15,N],[3,"Auto","","`auto`",N,N],[12,"span","","",16,N],[3,"Become","","`become`",N,N],[12,"span","","",17,N],[3,"Box","","`box`",N,N],[12,"span","","",18,N],[3,"Break","","`break`",N,N],[12,"span","","",19,N],[3,"Const","","`const`",N,N],[12,"span","","",20,N],[3,"Continue","","`continue`",N,N],[12,"span","","",21,N],[3,"Crate","","`crate`",N,N],[12,"span","","",22,N],[3,"Default","","`default`",N,N],[12,"span","","",23,N],[3,"Do","","`do`",N,N],[12,"span","","",24,N],[3,"Dyn","","`dyn`",N,N],[12,"span","","",25,N],[3,"Else","","`else`",N,N],[12,"span","","",26,N],[3,"Enum","","`enum`",N,N],[12,"span","","",27,N],[3,"Existential","","`existential`",N,N],[12,"span","","",28,N],[3,"Extern","","`extern`",N,N],[12,"span","","",29,N],[3,"Final","","`final`",N,N],[12,"span","","",30,N],[3,"Fn","","`fn`",N,N],[12,"span","","",31,N],[3,"For","","`for`",N,N],[12,"span","","",32,N],[3,"If","","`if`",N,N],[12,"span","","",33,N],[3,"Impl","","`impl`",N,N],[12,"span","","",34,N],[3,"In","","`in`",N,N],[12,"span","","",35,N],[3,"Let","","`let`",N,N],[12,"span","","",36,N],[3,"Loop","","`loop`",N,N],[12,"span","","",37,N],[3,"Macro","","`macro`",N,N],[12,"span","","",38,N],[3,"Match","","`match`",N,N],[12,"span","","",39,N],[3,"Mod","","`mod`",N,N],[12,"span","","",40,N],[3,"Move","","`move`",N,N],[12,"span","","",41,N],[3,"Mut","","`mut`",N,N],[12,"span","","",42,N],[3,"Override","","`override`",N,N],[12,"span","","",43,N],[3,"Priv","","`priv`",N,N],[12,"span","","",44,N],[3,"Pub","","`pub`",N,N],[12,"span","","",45,N],[3,"Ref","","`ref`",N,N],[12,"span","","",46,N],[3,"Return","","`return`",N,N],[12,"span","","",47,N],[3,"SelfType","","`Self`",N,N],[12,"span","","",48,N],[3,"SelfValue","","`self`",N,N],[12,"span","","",49,N],[3,"Static","","`static`",N,N],[12,"span","","",50,N],[3,"Struct","","`struct`",N,N],[12,"span","","",51,N],[3,"Super","","`super`",N,N],[12,"span","","",52,N],[3,"Trait","","`trait`",N,N],[12,"span","","",53,N],[3,"Try","","`try`",N,N],[12,"span","","",54,N],[3,"Type","","`type`",N,N],[12,"span","","",55,N],[3,"Typeof","","`typeof`",N,N],[12,"span","","",56,N],[3,"Union","","`union`",N,N],[12,"span","","",57,N],[3,"Unsafe","","`unsafe`",N,N],[12,"span","","",58,N],[3,"Unsized","","`unsized`",N,N],[12,"span","","",59,N],[3,"Use","","`use`",N,N],[12,"span","","",60,N],[3,"Virtual","","`virtual`",N,N],[12,"span","","",61,N],[3,"Where","","`where`",N,N],[12,"span","","",62,N],[3,"While","","`while`",N,N],[12,"span","","",63,N],[3,"Yield","","`yield`",N,N],[12,"span","","",64,N],[3,"Add","","`+`",N,N],[12,"spans","","",65,N],[3,"AddEq","","`+=`",N,N],[12,"spans","","",66,N],[3,"And","","`&`",N,N],[12,"spans","","",67,N],[3,"AndAnd","","`&&`",N,N],[12,"spans","","",68,N],[3,"AndEq","","`&=`",N,N],[12,"spans","","",69,N],[3,"At","","`@`",N,N],[12,"spans","","",70,N],[3,"Bang","","`!`",N,N],[12,"spans","","",71,N],[3,"Caret","","`^`",N,N],[12,"spans","","",72,N],[3,"CaretEq","","`^=`",N,N],[12,"spans","","",73,N],[3,"Colon","","`:`",N,N],[12,"spans","","",74,N],[3,"Colon2","","`::`",N,N],[12,"spans","","",75,N],[3,"Comma","","`,`",N,N],[12,"spans","","",76,N],[3,"Div","","`/`",N,N],[12,"spans","","",77,N],[3,"DivEq","","`/=`",N,N],[12,"spans","","",78,N],[3,"Dollar","","`$`",N,N],[12,"spans","","",79,N],[3,"Dot","","`.`",N,N],[12,"spans","","",80,N],[3,"Dot2","","`..`",N,N],[12,"spans","","",81,N],[3,"Dot3","","`...`",N,N],[12,"spans","","",82,N],[3,"DotDotEq","","`..=`",N,N],[12,"spans","","",83,N],[3,"Eq","","`=`",N,N],[12,"spans","","",84,N],[3,"EqEq","","`==`",N,N],[12,"spans","","",85,N],[3,"Ge","","`>=`",N,N],[12,"spans","","",86,N],[3,"Gt","","`>`",N,N],[12,"spans","","",87,N],[3,"Le","","`<=`",N,N],[12,"spans","","",88,N],[3,"Lt","","`<`",N,N],[12,"spans","","",89,N],[3,"MulEq","","`*=`",N,N],[12,"spans","","",90,N],[3,"Ne","","`!=`",N,N],[12,"spans","","",91,N],[3,"Or","","`|`",N,N],[12,"spans","","",92,N],[3,"OrEq","","`|=`",N,N],[12,"spans","","",93,N],[3,"OrOr","","`||`",N,N],[12,"spans","","",94,N],[3,"Pound","","`#`",N,N],[12,"spans","","",95,N],[3,"Question","","`?`",N,N],[12,"spans","","",96,N],[3,"RArrow","","`->`",N,N],[12,"spans","","",97,N],[3,"LArrow","","`<-`",N,N],[12,"spans","","",98,N],[3,"Rem","","`%`",N,N],[12,"spans","","",99,N],[3,"RemEq","","`%=`",N,N],[12,"spans","","",100,N],[3,"FatArrow","","`=>`",N,N],[12,"spans","","",101,N],[3,"Semi","","`;`",N,N],[12,"spans","","",102,N],[3,"Shl","","`<<`",N,N],[12,"spans","","",103,N],[3,"ShlEq","","`<<=`",N,N],[12,"spans","","",104,N],[3,"Shr","","`>>`",N,N],[12,"spans","","",105,N],[3,"ShrEq","","`>>=`",N,N],[12,"spans","","",106,N],[3,"Star","","`*`",N,N],[12,"spans","","",107,N],[3,"Sub","","`-`",N,N],[12,"spans","","",108,N],[3,"SubEq","","`-=`",N,N],[12,"spans","","",109,N],[3,"Tilde","","`~`",N,N],[12,"spans","","",110,N],[3,"Brace","","`{...}`",N,N],[12,"span","","",111,N],[3,"Bracket","","`[...]`",N,N],[12,"span","","",112,N],[3,"Paren","","`(...)`",N,N],[12,"span","","",113,N],[3,"Group","","None-delimited group",N,N],[12,"span","","",114,N],[0,"buffer","devise::syn","A stably addressed token buffer supporting efficient…",N,N],[3,"TokenBuffer","devise::syn::buffer","A buffer that can be efficiently traversed multiple times,…",N,N],[3,"Cursor","","A cheaply copyable cursor into a `TokenBuffer`.",N,N],[0,"ext","devise::syn","Extension traits to provide parsing methods on foreign…",N,N],[8,"IdentExt","devise::syn::ext","Additional parsing methods for `Ident`.",N,N],[10,"parse_any","","Parses any identifier including keywords.",115,[[["parsebuffer"]],["result",["error"]]]],[0,"punctuated","devise::syn","A punctuated sequence of syntax tree nodes separated by…",N,N],[3,"Punctuated","devise::syn::punctuated","A punctuated sequence of syntax tree nodes of type `T`…",N,N],[3,"Pairs","","An iterator over borrowed pairs of type `Pair<&T, &P>`.",N,N],[3,"PairsMut","","An iterator over mutably borrowed pairs of type `Pair<&mut…",N,N],[3,"IntoPairs","","An iterator over owned pairs of type `Pair<T, P>`.",N,N],[3,"IntoIter","","An iterator over owned values of type `T`.",N,N],[3,"Iter","","An iterator over borrowed values of type `&T`.",N,N],[3,"IterMut","","An iterator over mutably borrowed values of type `&mut T`.",N,N],[4,"Pair","","A single syntax tree node of type `T` followed by its…",N,N],[13,"Punctuated","","",116,N],[13,"End","","",116,N],[0,"spanned","devise::syn","A trait that can provide the `Span` of the complete…",N,N],[8,"Spanned","devise::syn::spanned","A trait that can provide the `Span` of the complete…",N,N],[10,"span","","Returns a `Span` covering the complete contents of this…",117,[[["self"]],["span"]]],[0,"parse","devise::syn","Parsing interface for parsing a token stream into a syntax…",N,N],[8,"Parse","devise::syn::parse","Parsing interface implemented by all types that can be…",N,N],[10,"parse","","",118,[[["parsebuffer"]],["result",["error"]]]],[6,"ParseStream","","Input to a Syn parser function.",N,N],[3,"ParseBuffer","","Cursor position within a buffered token stream.",N,N],[3,"StepCursor","","Cursor state associated with speculative parsing.",N,N],[8,"Parser","","Parser that can parse Rust tokens into a particular syntax…",N,N],[16,"Output","","",119,N],[10,"parse2","","Parse a proc-macro2 token stream into the chosen syntax…",119,[[["self"],["tokenstream"]],["result",["error"]]]],[11,"parse","","Parse tokens of source code into the chosen syntax tree…",119,[[["self"],["tokenstream"]],["result",["error"]]]],[11,"parse_str","","Parse a string of Rust code into the chosen syntax tree…",119,[[["self"],["str"]],["result",["error"]]]],[6,"Result","","The result of a Syn parser.",N,N],[3,"Error","","Error returned when a Syn parser cannot parse the input…",N,N],[3,"Lookahead1","","Support for checking the next token in a stream to decide…",N,N],[8,"Peek","","Types that can be parsed by looking at just one token.",N,N],[5,"parse","devise::syn","Parse tokens of source code into the chosen syntax tree…",N,[[["tokenstream"]],["result",["error"]]]],[5,"parse2","","Parse a proc-macro2 token stream into the chosen syntax…",N,[[["tokenstream"]],["result",["error"]]]],[5,"parse_str","","Parse a string of Rust code into the chosen syntax tree…",N,[[["str"]],["result",["error"]]]],[5,"parse_file","","Parse the content of a file of Rust code.",N,[[["str"]],["result",["file","error"]]]],[4,"Type","","The possible types that a Rust value could have.",N,N],[13,"Slice","","A dynamically sized slice type: `[T]`.",120,N],[13,"Array","","A fixed size array type: `[T; n]`.",120,N],[13,"Ptr","","A raw pointer type: `*const T` or `*mut T`.",120,N],[13,"Reference","","A reference type: `&'a T` or `&'a mut T`.",120,N],[13,"BareFn","","A bare function type: `fn(usize) -> bool`.",120,N],[13,"Never","","The never type: `!`.",120,N],[13,"Tuple","","A tuple type: `(A, B, C, String)`.",120,N],[13,"Path","","A path like `std::slice::Iter`, optionally qualified with…",120,N],[13,"TraitObject","","A trait object type `Bound1 + Bound2 + Bound3` where…",120,N],[13,"ImplTrait","","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a…",120,N],[13,"Paren","","A parenthesized type equivalent to the inner type.",120,N],[13,"Group","","A type contained within invisible delimiters.",120,N],[13,"Infer","","Indication that a type should be inferred by the compiler:…",120,N],[13,"Macro","","A macro in the type position.",120,N],[13,"Verbatim","","Tokens in type position not interpreted by Syn.",120,N],[3,"PatPath","","A path pattern like `Color::Red`, optionally qualified…",N,N],[12,"qself","","",121,N],[12,"path","","",121,N],[3,"ArgSelfRef","","Self captured by reference in a function signature:…",N,N],[12,"and_token","","",122,N],[12,"lifetime","","",122,N],[12,"mutability","","",122,N],[12,"self_token","","",122,N],[3,"ExprMatch","","A `match` expression: `match n { Some(n) => {}, None => {}…",N,N],[12,"attrs","","",123,N],[12,"match_token","","",123,N],[12,"expr","","",123,N],[12,"brace_token","","",123,N],[12,"arms","","",123,N],[3,"TypeImplTrait","","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a…",N,N],[12,"impl_token","","",124,N],[12,"bounds","","",124,N],[3,"ItemExternCrate","","An `extern crate` item: `extern crate serde`.",N,N],[12,"attrs","","",125,N],[12,"vis","","",125,N],[12,"extern_token","","",125,N],[12,"crate_token","","",125,N],[12,"ident","","",125,N],[12,"rename","","",125,N],[12,"semi_token","","",125,N],[3,"Arm","","One arm of a `match` expression: `0...10 => { return true;…",N,N],[12,"attrs","","",126,N],[12,"leading_vert","","",126,N],[12,"pats","","",126,N],[12,"guard","","",126,N],[12,"fat_arrow_token","","",126,N],[12,"body","","",126,N],[12,"comma","","",126,N],[3,"PatStruct","","A struct or struct variant pattern: `Variant { x, y, .. }`.",N,N],[12,"path","","",127,N],[12,"brace_token","","",127,N],[12,"fields","","",127,N],[12,"dot2_token","","",127,N],[3,"VisCrate","","A crate-level visibility: `crate`.",N,N],[12,"crate_token","","",128,N],[3,"LitBool","","A boolean literal: `true` or `false`.",N,N],[12,"value","","",129,N],[12,"span","","",129,N],[3,"ForeignItemVerbatim","","Tokens in an `extern` block not interpreted by Syn.",N,N],[12,"tts","","",130,N],[3,"ExprCast","","A cast expression: `foo as f64`.",N,N],[12,"attrs","","",131,N],[12,"expr","","",131,N],[12,"as_token","","",131,N],[12,"ty","","",131,N],[3,"DataUnion","","A tagged union input to a `proc_macro_derive` macro.",N,N],[12,"union_token","","",132,N],[12,"fields","","",132,N],[3,"TypeNever","","The never type: `!`.",N,N],[12,"bang_token","","",133,N],[3,"ItemImpl","","An impl block providing trait or associated items:…",N,N],[12,"attrs","","",134,N],[12,"defaultness","","",134,N],[12,"unsafety","","",134,N],[12,"impl_token","","",134,N],[12,"generics","","",134,N],[12,"trait_","","Trait this impl implements.",134,N],[12,"self_ty","","The Self type of the impl.",134,N],[12,"brace_token","","",134,N],[12,"items","","",134,N],[3,"FieldValue","","A field-value pair in a struct literal.",N,N],[12,"attrs","","Attributes tagged on the field.",135,N],[12,"member","","Name or index of the field.",135,N],[12,"colon_token","","The colon in `Struct { x: x }`. If written in shorthand…",135,N],[12,"expr","","Value of the field.",135,N],[4,"Visibility","","The visibility level of an item: inherited or `pub` or…",N,N],[13,"Public","","A public visibility level: `pub`.",136,N],[13,"Crate","","A crate-level visibility: `crate`.",136,N],[13,"Restricted","","A visibility level restricted to some path: `pub(self)` or…",136,N],[13,"Inherited","","An inherited visibility, which usually means private.",136,N],[3,"LitChar","","A character literal: `'a'`.",N,N],[3,"TypePtr","","A raw pointer type: `*const T` or `*mut T`.",N,N],[12,"star_token","","",137,N],[12,"const_token","","",137,N],[12,"mutability","","",137,N],[12,"elem","","",137,N],[3,"ExprTuple","","A tuple expression: `(a, b, c, d)`.",N,N],[12,"attrs","","",138,N],[12,"paren_token","","",138,N],[12,"elems","","",138,N],[3,"LitVerbatim","","A raw token literal not interpreted by Syn, possibly…",N,N],[12,"token","","",139,N],[3,"UseRename","","An renamed identifier imported by a `use` item: `HashMap…",N,N],[12,"ident","","",140,N],[12,"as_token","","",140,N],[12,"rename","","",140,N],[3,"ImplItemMethod","","A method within an impl block.",N,N],[12,"attrs","","",141,N],[12,"vis","","",141,N],[12,"defaultness","","",141,N],[12,"sig","","",141,N],[12,"block","","",141,N],[3,"ExprLoop","","Conditionless loop: `loop { ... }`.",N,N],[12,"attrs","","",142,N],[12,"label","","",142,N],[12,"loop_token","","",142,N],[12,"body","","",142,N],[14,"bracketed","","Parse a set of square brackets and expose their content to…",N,N],[4,"NestedMeta","","Element of a compile-time attribute list.",N,N],[13,"Meta","","A structured meta item, like the `Copy` in…",143,N],[13,"Literal","","A Rust literal, like the `\"new_name\"` in…",143,N],[3,"File","","A complete file of Rust source code.",N,N],[12,"shebang","","",144,N],[12,"attrs","","",144,N],[12,"items","","",144,N],[3,"Macro","","A macro invocation: `println!(\"{}\", mac)`.",N,N],[12,"path","","",145,N],[12,"bang_token","","",145,N],[12,"delimiter","","",145,N],[12,"tts","","",145,N],[4,"FnArg","","An argument in a function signature: the `n: usize` in `fn…",N,N],[13,"SelfRef","","Self captured by reference in a function signature:…",146,N],[13,"SelfValue","","Self captured by value in a function signature: `self` or…",146,N],[13,"Captured","","An explicitly typed pattern captured by a function…",146,N],[13,"Inferred","","A pattern whose type is inferred captured by a function…",146,N],[13,"Ignored","","A type not bound to any pattern in a function signature.",146,N],[3,"Index","","The index of an unnamed tuple struct field.",N,N],[12,"index","","",147,N],[12,"span","","",147,N],[14,"custom_keyword","","Define a type that supports parsing and printing a given…",N,N],[4,"Item","","Things that can appear directly inside of a module or scope.",N,N],[13,"ExternCrate","","An `extern crate` item: `extern crate serde`.",148,N],[13,"Use","","A use declaration: `use std::collections::HashMap`.",148,N],[13,"Static","","A static item: `static BIKE: Shed = Shed(42)`.",148,N],[13,"Const","","A constant item: `const MAX: u16 = 65535`.",148,N],[13,"Fn","","A free-standing function: `fn process(n: usize) ->…",148,N],[13,"Mod","","A module or module declaration: `mod m` or `mod m { ... }`.",148,N],[13,"ForeignMod","","A block of foreign items: `extern \"C\" { ... }`.",148,N],[13,"Type","","A type alias: `type Result<T> = std::result::Result<T,…",148,N],[13,"Existential","","An existential type: `existential type Iter: Iterator<Item…",148,N],[13,"Struct","","A struct definition: `struct Foo<A> { x: A }`.",148,N],[13,"Enum","","An enum definition: `enum Foo<A, B> { C<A>, D<B> }`.",148,N],[13,"Union","","A union definition: `union Foo<A, B> { x: A, y: B }`.",148,N],[13,"Trait","","A trait definition: `pub trait Iterator { ... }`.",148,N],[13,"TraitAlias","","A trait alias: `pub trait SharableIterator = Iterator +…",148,N],[13,"Impl","","An impl block providing trait or associated items:…",148,N],[13,"Macro","","A macro invocation, which includes `macro_rules!`…",148,N],[13,"Macro2","","A 2.0-style declarative macro introduced by the `macro`…",148,N],[13,"Verbatim","","Tokens forming an item not interpreted by Syn.",148,N],[3,"ExprWhile","","A while loop: `while expr { ... }`.",N,N],[12,"attrs","","",149,N],[12,"label","","",149,N],[12,"while_token","","",149,N],[12,"cond","","",149,N],[12,"body","","",149,N],[4,"Fields","","Data stored within an enum variant or struct.",N,N],[13,"Named","","Named fields of a struct or struct variant such as `Point…",150,N],[13,"Unnamed","","Unnamed fields of a tuple struct or tuple variant such as…",150,N],[13,"Unit","","Unit struct or unit variant such as `None`.",150,N],[4,"GenericArgument","","An individual generic argument, like `'a`, `T`, or `Item =…",N,N],[13,"Lifetime","","A lifetime argument.",151,N],[13,"Type","","A type argument.",151,N],[13,"Binding","","A binding (equality constraint) on an associated type: the…",151,N],[13,"Constraint","","An associated type bound: `Iterator<Item: Display>`.",151,N],[13,"Const","","A const expression. Must be inside of a block.",151,N],[4,"TraitItem","","An item declaration within the definition of a trait.",N,N],[13,"Const","","An associated constant within the definition of a trait.",152,N],[13,"Method","","A trait method within the definition of a trait.",152,N],[13,"Type","","An associated type within the definition of a trait.",152,N],[13,"Macro","","A macro invocation within the definition of a trait.",152,N],[13,"Verbatim","","Tokens within the definition of a trait not interpreted by…",152,N],[3,"TraitBound","","A trait used as a bound on a type parameter.",N,N],[12,"paren_token","","",153,N],[12,"modifier","","",153,N],[12,"lifetimes","","The `for<'a>` in `for<'a> Foo<&'a T>`",153,N],[12,"path","","The `Foo<&'a T>` in `for<'a> Foo<&'a T>`",153,N],[3,"ExprClosure","","A closure expression: `|a, b| a + b`.",N,N],[12,"attrs","","",154,N],[12,"asyncness","","",154,N],[12,"movability","","",154,N],[12,"capture","","",154,N],[12,"or1_token","","",154,N],[12,"inputs","","",154,N],[12,"or2_token","","",154,N],[12,"output","","",154,N],[12,"body","","",154,N],[3,"TypeParen","","A parenthesized type equivalent to the inner type.",N,N],[12,"paren_token","","",155,N],[12,"elem","","",155,N],[3,"ItemMacro","","A macro invocation, which includes `macro_rules!`…",N,N],[12,"attrs","","",156,N],[12,"ident","","The `example` in `macro_rules! example { ... }`.",156,N],[12,"mac","","",156,N],[12,"semi_token","","",156,N],[3,"PatTupleStruct","","A tuple struct or tuple variant pattern: `Variant(x, y,…",N,N],[12,"path","","",157,N],[12,"pat","","",157,N],[4,"TypeParamBound","","A trait or lifetime used as a bound on a type parameter.",N,N],[13,"Trait","","",158,N],[13,"Lifetime","","",158,N],[3,"ExprForLoop","","A for loop: `for pat in expr { ... }`.",N,N],[12,"attrs","","",159,N],[12,"label","","",159,N],[12,"for_token","","",159,N],[12,"pat","","",159,N],[12,"in_token","","",159,N],[12,"expr","","",159,N],[12,"body","","",159,N],[4,"UnOp","","A unary operator: `*`, `!`, `-`.",N,N],[13,"Deref","","The `*` operator for dereferencing",160,N],[13,"Not","","The `!` operator for logical inversion",160,N],[13,"Neg","","The `-` operator for negation",160,N],[3,"ItemStatic","","A static item: `static BIKE: Shed = Shed(42)`.",N,N],[12,"attrs","","",161,N],[12,"vis","","",161,N],[12,"static_token","","",161,N],[12,"mutability","","",161,N],[12,"ident","","",161,N],[12,"colon_token","","",161,N],[12,"ty","","",161,N],[12,"eq_token","","",161,N],[12,"expr","","",161,N],[12,"semi_token","","",161,N],[3,"ImplGenerics","","Returned by `Generics::split_for_impl`.",N,N],[4,"BareFnArgName","","Name of an argument in a function type: the `n` in `fn(n:…",N,N],[13,"Named","","Argument given a name.",162,N],[13,"Wild","","Argument not given a name, matched with `_`.",162,N],[3,"ImplItemType","","An associated type within an impl block.",N,N],[12,"attrs","","",163,N],[12,"vis","","",163,N],[12,"defaultness","","",163,N],[12,"type_token","","",163,N],[12,"ident","","",163,N],[12,"generics","","",163,N],[12,"eq_token","","",163,N],[12,"ty","","",163,N],[12,"semi_token","","",163,N],[3,"PatLit","","A literal pattern: `0`.",N,N],[12,"expr","","",164,N],[3,"ConstParam","","A const generic parameter: `const LENGTH: usize`.",N,N],[12,"attrs","","",165,N],[12,"const_token","","",165,N],[12,"ident","","",165,N],[12,"colon_token","","",165,N],[12,"ty","","",165,N],[12,"eq_token","","",165,N],[12,"default","","",165,N],[3,"ExprAsync","","An async block: `async { ... }`.",N,N],[12,"attrs","","",166,N],[12,"async_token","","",166,N],[12,"capture","","",166,N],[12,"block","","",166,N],[3,"TypeArray","","A fixed size array type: `[T; n]`.",N,N],[12,"bracket_token","","",167,N],[12,"elem","","",167,N],[12,"semi_token","","",167,N],[12,"len","","",167,N],[3,"ItemConst","","A constant item: `const MAX: u16 = 65535`.",N,N],[12,"attrs","","",168,N],[12,"vis","","",168,N],[12,"const_token","","",168,N],[12,"ident","","",168,N],[12,"colon_token","","",168,N],[12,"ty","","",168,N],[12,"eq_token","","",168,N],[12,"expr","","",168,N],[12,"semi_token","","",168,N],[3,"ExprYield","","A yield expression: `yield expr`.",N,N],[12,"attrs","","",169,N],[12,"yield_token","","",169,N],[12,"expr","","",169,N],[3,"PatRange","","A range pattern: `1..=2`.",N,N],[12,"lo","","",170,N],[12,"limits","","",170,N],[12,"hi","","",170,N],[3,"FieldsNamed","","Named fields of a struct or struct variant such as `Point…",N,N],[12,"brace_token","","",171,N],[12,"named","","",171,N],[4,"FloatSuffix","","The suffix on a floating point literal if any, like the…",N,N],[13,"F32","","",172,N],[13,"F64","","",172,N],[13,"None","","",172,N],[3,"ExprBox","","A box expression: `box f`.",N,N],[12,"attrs","","",173,N],[12,"box_token","","",173,N],[12,"expr","","",173,N],[3,"PathSegment","","A segment of a path together with any path arguments on…",N,N],[12,"ident","","",174,N],[12,"arguments","","",174,N],[3,"TraitItemType","","An associated type within the definition of a trait.",N,N],[12,"attrs","","",175,N],[12,"type_token","","",175,N],[12,"ident","","",175,N],[12,"generics","","",175,N],[12,"colon_token","","",175,N],[12,"bounds","","",175,N],[12,"default","","",175,N],[12,"semi_token","","",175,N],[3,"DeriveInput","","Data structure sent to a `proc_macro_derive` macro.",N,N],[12,"attrs","","Attributes tagged on the whole struct or enum.",176,N],[12,"vis","","Visibility of the struct or enum.",176,N],[12,"ident","","Name of the struct or enum.",176,N],[12,"generics","","Generics required to complete the definition.",176,N],[12,"data","","Data within the struct or enum.",176,N],[3,"WhereClause","","A `where` clause in a definition: `where T:…",N,N],[12,"where_token","","",177,N],[12,"predicates","","",177,N],[3,"ExprGroup","","An expression contained within invisible delimiters.",N,N],[12,"attrs","","",178,N],[12,"group_token","","",178,N],[12,"expr","","",178,N],[4,"GenericMethodArgument","","An individual generic argument to a method, like `T`.",N,N],[13,"Type","","A type argument.",179,N],[13,"Const","","A const expression. Must be inside of a block.",179,N],[3,"UseGroup","","A braced group of imports in a `use` item: `{A, B, C}`.",N,N],[12,"brace_token","","",180,N],[12,"items","","",180,N],[3,"ImplItemConst","","An associated constant within an impl block.",N,N],[12,"attrs","","",181,N],[12,"vis","","",181,N],[12,"defaultness","","",181,N],[12,"const_token","","",181,N],[12,"ident","","",181,N],[12,"colon_token","","",181,N],[12,"ty","","",181,N],[12,"eq_token","","",181,N],[12,"expr","","",181,N],[12,"semi_token","","",181,N],[3,"ExprIndex","","A square bracketed indexing expression: `vector[2]`.",N,N],[12,"attrs","","",182,N],[12,"expr","","",182,N],[12,"bracket_token","","",182,N],[12,"index","","",182,N],[3,"MethodTurbofish","","The `::<>` explicit type parameters passed to a method…",N,N],[12,"colon2_token","","",183,N],[12,"lt_token","","",183,N],[12,"args","","",183,N],[12,"gt_token","","",183,N],[0,"visit_mut","","Syntax tree traversal to mutate an exclusive borrow of a…",N,N],[8,"VisitMut","devise::syn::visit_mut","Syntax tree traversal to mutate an exclusive borrow of a…",N,N],[11,"visit_abi_mut","","",184,N],[11,"visit_angle_bracketed_generic_arguments_mut","","",184,N],[11,"visit_arg_captured_mut","","",184,N],[11,"visit_arg_self_mut","","",184,N],[11,"visit_arg_self_ref_mut","","",184,N],[11,"visit_arm_mut","","",184,N],[11,"visit_attr_style_mut","","",184,N],[11,"visit_attribute_mut","","",184,N],[11,"visit_bare_fn_arg_mut","","",184,N],[11,"visit_bare_fn_arg_name_mut","","",184,N],[11,"visit_bin_op_mut","","",184,N],[11,"visit_binding_mut","","",184,N],[11,"visit_block_mut","","",184,N],[11,"visit_bound_lifetimes_mut","","",184,N],[11,"visit_const_param_mut","","",184,N],[11,"visit_constraint_mut","","",184,N],[11,"visit_data_mut","","",184,N],[11,"visit_data_enum_mut","","",184,N],[11,"visit_data_struct_mut","","",184,N],[11,"visit_data_union_mut","","",184,N],[11,"visit_derive_input_mut","","",184,N],[11,"visit_expr_mut","","",184,N],[11,"visit_expr_array_mut","","",184,N],[11,"visit_expr_assign_mut","","",184,N],[11,"visit_expr_assign_op_mut","","",184,N],[11,"visit_expr_async_mut","","",184,N],[11,"visit_expr_binary_mut","","",184,N],[11,"visit_expr_block_mut","","",184,N],[11,"visit_expr_box_mut","","",184,N],[11,"visit_expr_break_mut","","",184,N],[11,"visit_expr_call_mut","","",184,N],[11,"visit_expr_cast_mut","","",184,N],[11,"visit_expr_closure_mut","","",184,N],[11,"visit_expr_continue_mut","","",184,N],[11,"visit_expr_field_mut","","",184,N],[11,"visit_expr_for_loop_mut","","",184,N],[11,"visit_expr_group_mut","","",184,N],[11,"visit_expr_if_mut","","",184,N],[11,"visit_expr_in_place_mut","","",184,N],[11,"visit_expr_index_mut","","",184,N],[11,"visit_expr_let_mut","","",184,N],[11,"visit_expr_lit_mut","","",184,N],[11,"visit_expr_loop_mut","","",184,N],[11,"visit_expr_macro_mut","","",184,N],[11,"visit_expr_match_mut","","",184,N],[11,"visit_expr_method_call_mut","","",184,N],[11,"visit_expr_paren_mut","","",184,N],[11,"visit_expr_path_mut","","",184,N],[11,"visit_expr_range_mut","","",184,N],[11,"visit_expr_reference_mut","","",184,N],[11,"visit_expr_repeat_mut","","",184,N],[11,"visit_expr_return_mut","","",184,N],[11,"visit_expr_struct_mut","","",184,N],[11,"visit_expr_try_mut","","",184,N],[11,"visit_expr_try_block_mut","","",184,N],[11,"visit_expr_tuple_mut","","",184,N],[11,"visit_expr_type_mut","","",184,N],[11,"visit_expr_unary_mut","","",184,N],[11,"visit_expr_unsafe_mut","","",184,N],[11,"visit_expr_verbatim_mut","","",184,N],[11,"visit_expr_while_mut","","",184,N],[11,"visit_expr_yield_mut","","",184,N],[11,"visit_field_mut","","",184,N],[11,"visit_field_pat_mut","","",184,N],[11,"visit_field_value_mut","","",184,N],[11,"visit_fields_mut","","",184,N],[11,"visit_fields_named_mut","","",184,N],[11,"visit_fields_unnamed_mut","","",184,N],[11,"visit_file_mut","","",184,N],[11,"visit_fn_arg_mut","","",184,N],[11,"visit_fn_decl_mut","","",184,N],[11,"visit_foreign_item_mut","","",184,N],[11,"visit_foreign_item_fn_mut","","",184,N],[11,"visit_foreign_item_macro_mut","","",184,N],[11,"visit_foreign_item_static_mut","","",184,N],[11,"visit_foreign_item_type_mut","","",184,N],[11,"visit_foreign_item_verbatim_mut","","",184,N],[11,"visit_generic_argument_mut","","",184,N],[11,"visit_generic_method_argument_mut","","",184,N],[11,"visit_generic_param_mut","","",184,N],[11,"visit_generics_mut","","",184,N],[11,"visit_ident_mut","","",184,N],[11,"visit_impl_item_mut","","",184,N],[11,"visit_impl_item_const_mut","","",184,N],[11,"visit_impl_item_existential_mut","","",184,N],[11,"visit_impl_item_macro_mut","","",184,N],[11,"visit_impl_item_method_mut","","",184,N],[11,"visit_impl_item_type_mut","","",184,N],[11,"visit_impl_item_verbatim_mut","","",184,N],[11,"visit_index_mut","","",184,N],[11,"visit_item_mut","","",184,N],[11,"visit_item_const_mut","","",184,N],[11,"visit_item_enum_mut","","",184,N],[11,"visit_item_existential_mut","","",184,N],[11,"visit_item_extern_crate_mut","","",184,N],[11,"visit_item_fn_mut","","",184,N],[11,"visit_item_foreign_mod_mut","","",184,N],[11,"visit_item_impl_mut","","",184,N],[11,"visit_item_macro_mut","","",184,N],[11,"visit_item_macro2_mut","","",184,N],[11,"visit_item_mod_mut","","",184,N],[11,"visit_item_static_mut","","",184,N],[11,"visit_item_struct_mut","","",184,N],[11,"visit_item_trait_mut","","",184,N],[11,"visit_item_trait_alias_mut","","",184,N],[11,"visit_item_type_mut","","",184,N],[11,"visit_item_union_mut","","",184,N],[11,"visit_item_use_mut","","",184,N],[11,"visit_item_verbatim_mut","","",184,N],[11,"visit_label_mut","","",184,N],[11,"visit_lifetime_mut","","",184,N],[11,"visit_lifetime_def_mut","","",184,N],[11,"visit_lit_mut","","",184,N],[11,"visit_lit_bool_mut","","",184,N],[11,"visit_lit_byte_mut","","",184,N],[11,"visit_lit_byte_str_mut","","",184,N],[11,"visit_lit_char_mut","","",184,N],[11,"visit_lit_float_mut","","",184,N],[11,"visit_lit_int_mut","","",184,N],[11,"visit_lit_str_mut","","",184,N],[11,"visit_lit_verbatim_mut","","",184,N],[11,"visit_local_mut","","",184,N],[11,"visit_macro_mut","","",184,N],[11,"visit_macro_delimiter_mut","","",184,N],[11,"visit_member_mut","","",184,N],[11,"visit_meta_mut","","",184,N],[11,"visit_meta_list_mut","","",184,N],[11,"visit_meta_name_value_mut","","",184,N],[11,"visit_method_sig_mut","","",184,N],[11,"visit_method_turbofish_mut","","",184,N],[11,"visit_nested_meta_mut","","",184,N],[11,"visit_parenthesized_generic_arguments_mut","","",184,N],[11,"visit_pat_mut","","",184,N],[11,"visit_pat_box_mut","","",184,N],[11,"visit_pat_ident_mut","","",184,N],[11,"visit_pat_lit_mut","","",184,N],[11,"visit_pat_macro_mut","","",184,N],[11,"visit_pat_path_mut","","",184,N],[11,"visit_pat_range_mut","","",184,N],[11,"visit_pat_ref_mut","","",184,N],[11,"visit_pat_slice_mut","","",184,N],[11,"visit_pat_struct_mut","","",184,N],[11,"visit_pat_tuple_mut","","",184,N],[11,"visit_pat_tuple_struct_mut","","",184,N],[11,"visit_pat_verbatim_mut","","",184,N],[11,"visit_pat_wild_mut","","",184,N],[11,"visit_path_mut","","",184,N],[11,"visit_path_arguments_mut","","",184,N],[11,"visit_path_segment_mut","","",184,N],[11,"visit_predicate_eq_mut","","",184,N],[11,"visit_predicate_lifetime_mut","","",184,N],[11,"visit_predicate_type_mut","","",184,N],[11,"visit_qself_mut","","",184,N],[11,"visit_range_limits_mut","","",184,N],[11,"visit_return_type_mut","","",184,N],[11,"visit_span_mut","","",184,N],[11,"visit_stmt_mut","","",184,N],[11,"visit_trait_bound_mut","","",184,N],[11,"visit_trait_bound_modifier_mut","","",184,N],[11,"visit_trait_item_mut","","",184,N],[11,"visit_trait_item_const_mut","","",184,N],[11,"visit_trait_item_macro_mut","","",184,N],[11,"visit_trait_item_method_mut","","",184,N],[11,"visit_trait_item_type_mut","","",184,N],[11,"visit_trait_item_verbatim_mut","","",184,N],[11,"visit_type_mut","","",184,N],[11,"visit_type_array_mut","","",184,N],[11,"visit_type_bare_fn_mut","","",184,N],[11,"visit_type_group_mut","","",184,N],[11,"visit_type_impl_trait_mut","","",184,N],[11,"visit_type_infer_mut","","",184,N],[11,"visit_type_macro_mut","","",184,N],[11,"visit_type_never_mut","","",184,N],[11,"visit_type_param_mut","","",184,N],[11,"visit_type_param_bound_mut","","",184,N],[11,"visit_type_paren_mut","","",184,N],[11,"visit_type_path_mut","","",184,N],[11,"visit_type_ptr_mut","","",184,N],[11,"visit_type_reference_mut","","",184,N],[11,"visit_type_slice_mut","","",184,N],[11,"visit_type_trait_object_mut","","",184,N],[11,"visit_type_tuple_mut","","",184,N],[11,"visit_type_verbatim_mut","","",184,N],[11,"visit_un_op_mut","","",184,N],[11,"visit_use_glob_mut","","",184,N],[11,"visit_use_group_mut","","",184,N],[11,"visit_use_name_mut","","",184,N],[11,"visit_use_path_mut","","",184,N],[11,"visit_use_rename_mut","","",184,N],[11,"visit_use_tree_mut","","",184,N],[11,"visit_variant_mut","","",184,N],[11,"visit_vis_crate_mut","","",184,N],[11,"visit_vis_public_mut","","",184,N],[11,"visit_vis_restricted_mut","","",184,N],[11,"visit_visibility_mut","","",184,N],[11,"visit_where_clause_mut","","",184,N],[11,"visit_where_predicate_mut","","",184,N],[5,"visit_abi_mut","","",N,N],[5,"visit_angle_bracketed_generic_arguments_mut","","",N,N],[5,"visit_arg_captured_mut","","",N,N],[5,"visit_arg_self_mut","","",N,N],[5,"visit_arg_self_ref_mut","","",N,N],[5,"visit_arm_mut","","",N,N],[5,"visit_attr_style_mut","","",N,N],[5,"visit_attribute_mut","","",N,N],[5,"visit_bare_fn_arg_mut","","",N,N],[5,"visit_bare_fn_arg_name_mut","","",N,N],[5,"visit_bin_op_mut","","",N,N],[5,"visit_binding_mut","","",N,N],[5,"visit_block_mut","","",N,N],[5,"visit_bound_lifetimes_mut","","",N,N],[5,"visit_const_param_mut","","",N,N],[5,"visit_constraint_mut","","",N,N],[5,"visit_data_mut","","",N,N],[5,"visit_data_enum_mut","","",N,N],[5,"visit_data_struct_mut","","",N,N],[5,"visit_data_union_mut","","",N,N],[5,"visit_derive_input_mut","","",N,N],[5,"visit_expr_mut","","",N,N],[5,"visit_expr_array_mut","","",N,N],[5,"visit_expr_assign_mut","","",N,N],[5,"visit_expr_assign_op_mut","","",N,N],[5,"visit_expr_async_mut","","",N,N],[5,"visit_expr_binary_mut","","",N,N],[5,"visit_expr_block_mut","","",N,N],[5,"visit_expr_box_mut","","",N,N],[5,"visit_expr_break_mut","","",N,N],[5,"visit_expr_call_mut","","",N,N],[5,"visit_expr_cast_mut","","",N,N],[5,"visit_expr_closure_mut","","",N,N],[5,"visit_expr_continue_mut","","",N,N],[5,"visit_expr_field_mut","","",N,N],[5,"visit_expr_for_loop_mut","","",N,N],[5,"visit_expr_group_mut","","",N,N],[5,"visit_expr_if_mut","","",N,N],[5,"visit_expr_in_place_mut","","",N,N],[5,"visit_expr_index_mut","","",N,N],[5,"visit_expr_let_mut","","",N,N],[5,"visit_expr_lit_mut","","",N,N],[5,"visit_expr_loop_mut","","",N,N],[5,"visit_expr_macro_mut","","",N,N],[5,"visit_expr_match_mut","","",N,N],[5,"visit_expr_method_call_mut","","",N,N],[5,"visit_expr_paren_mut","","",N,N],[5,"visit_expr_path_mut","","",N,N],[5,"visit_expr_range_mut","","",N,N],[5,"visit_expr_reference_mut","","",N,N],[5,"visit_expr_repeat_mut","","",N,N],[5,"visit_expr_return_mut","","",N,N],[5,"visit_expr_struct_mut","","",N,N],[5,"visit_expr_try_mut","","",N,N],[5,"visit_expr_try_block_mut","","",N,N],[5,"visit_expr_tuple_mut","","",N,N],[5,"visit_expr_type_mut","","",N,N],[5,"visit_expr_unary_mut","","",N,N],[5,"visit_expr_unsafe_mut","","",N,N],[5,"visit_expr_verbatim_mut","","",N,N],[5,"visit_expr_while_mut","","",N,N],[5,"visit_expr_yield_mut","","",N,N],[5,"visit_field_mut","","",N,N],[5,"visit_field_pat_mut","","",N,N],[5,"visit_field_value_mut","","",N,N],[5,"visit_fields_mut","","",N,N],[5,"visit_fields_named_mut","","",N,N],[5,"visit_fields_unnamed_mut","","",N,N],[5,"visit_file_mut","","",N,N],[5,"visit_fn_arg_mut","","",N,N],[5,"visit_fn_decl_mut","","",N,N],[5,"visit_foreign_item_mut","","",N,N],[5,"visit_foreign_item_fn_mut","","",N,N],[5,"visit_foreign_item_macro_mut","","",N,N],[5,"visit_foreign_item_static_mut","","",N,N],[5,"visit_foreign_item_type_mut","","",N,N],[5,"visit_foreign_item_verbatim_mut","","",N,N],[5,"visit_generic_argument_mut","","",N,N],[5,"visit_generic_method_argument_mut","","",N,N],[5,"visit_generic_param_mut","","",N,N],[5,"visit_generics_mut","","",N,N],[5,"visit_ident_mut","","",N,N],[5,"visit_impl_item_mut","","",N,N],[5,"visit_impl_item_const_mut","","",N,N],[5,"visit_impl_item_existential_mut","","",N,N],[5,"visit_impl_item_macro_mut","","",N,N],[5,"visit_impl_item_method_mut","","",N,N],[5,"visit_impl_item_type_mut","","",N,N],[5,"visit_impl_item_verbatim_mut","","",N,N],[5,"visit_index_mut","","",N,N],[5,"visit_item_mut","","",N,N],[5,"visit_item_const_mut","","",N,N],[5,"visit_item_enum_mut","","",N,N],[5,"visit_item_existential_mut","","",N,N],[5,"visit_item_extern_crate_mut","","",N,N],[5,"visit_item_fn_mut","","",N,N],[5,"visit_item_foreign_mod_mut","","",N,N],[5,"visit_item_impl_mut","","",N,N],[5,"visit_item_macro_mut","","",N,N],[5,"visit_item_macro2_mut","","",N,N],[5,"visit_item_mod_mut","","",N,N],[5,"visit_item_static_mut","","",N,N],[5,"visit_item_struct_mut","","",N,N],[5,"visit_item_trait_mut","","",N,N],[5,"visit_item_trait_alias_mut","","",N,N],[5,"visit_item_type_mut","","",N,N],[5,"visit_item_union_mut","","",N,N],[5,"visit_item_use_mut","","",N,N],[5,"visit_item_verbatim_mut","","",N,N],[5,"visit_label_mut","","",N,N],[5,"visit_lifetime_mut","","",N,N],[5,"visit_lifetime_def_mut","","",N,N],[5,"visit_lit_mut","","",N,N],[5,"visit_lit_bool_mut","","",N,N],[5,"visit_lit_byte_mut","","",N,N],[5,"visit_lit_byte_str_mut","","",N,N],[5,"visit_lit_char_mut","","",N,N],[5,"visit_lit_float_mut","","",N,N],[5,"visit_lit_int_mut","","",N,N],[5,"visit_lit_str_mut","","",N,N],[5,"visit_lit_verbatim_mut","","",N,N],[5,"visit_local_mut","","",N,N],[5,"visit_macro_mut","","",N,N],[5,"visit_macro_delimiter_mut","","",N,N],[5,"visit_member_mut","","",N,N],[5,"visit_meta_mut","","",N,N],[5,"visit_meta_list_mut","","",N,N],[5,"visit_meta_name_value_mut","","",N,N],[5,"visit_method_sig_mut","","",N,N],[5,"visit_method_turbofish_mut","","",N,N],[5,"visit_nested_meta_mut","","",N,N],[5,"visit_parenthesized_generic_arguments_mut","","",N,N],[5,"visit_pat_mut","","",N,N],[5,"visit_pat_box_mut","","",N,N],[5,"visit_pat_ident_mut","","",N,N],[5,"visit_pat_lit_mut","","",N,N],[5,"visit_pat_macro_mut","","",N,N],[5,"visit_pat_path_mut","","",N,N],[5,"visit_pat_range_mut","","",N,N],[5,"visit_pat_ref_mut","","",N,N],[5,"visit_pat_slice_mut","","",N,N],[5,"visit_pat_struct_mut","","",N,N],[5,"visit_pat_tuple_mut","","",N,N],[5,"visit_pat_tuple_struct_mut","","",N,N],[5,"visit_pat_verbatim_mut","","",N,N],[5,"visit_pat_wild_mut","","",N,N],[5,"visit_path_mut","","",N,N],[5,"visit_path_arguments_mut","","",N,N],[5,"visit_path_segment_mut","","",N,N],[5,"visit_predicate_eq_mut","","",N,N],[5,"visit_predicate_lifetime_mut","","",N,N],[5,"visit_predicate_type_mut","","",N,N],[5,"visit_qself_mut","","",N,N],[5,"visit_range_limits_mut","","",N,N],[5,"visit_return_type_mut","","",N,N],[5,"visit_span_mut","","",N,N],[5,"visit_stmt_mut","","",N,N],[5,"visit_trait_bound_mut","","",N,N],[5,"visit_trait_bound_modifier_mut","","",N,N],[5,"visit_trait_item_mut","","",N,N],[5,"visit_trait_item_const_mut","","",N,N],[5,"visit_trait_item_macro_mut","","",N,N],[5,"visit_trait_item_method_mut","","",N,N],[5,"visit_trait_item_type_mut","","",N,N],[5,"visit_trait_item_verbatim_mut","","",N,N],[5,"visit_type_mut","","",N,N],[5,"visit_type_array_mut","","",N,N],[5,"visit_type_bare_fn_mut","","",N,N],[5,"visit_type_group_mut","","",N,N],[5,"visit_type_impl_trait_mut","","",N,N],[5,"visit_type_infer_mut","","",N,N],[5,"visit_type_macro_mut","","",N,N],[5,"visit_type_never_mut","","",N,N],[5,"visit_type_param_mut","","",N,N],[5,"visit_type_param_bound_mut","","",N,N],[5,"visit_type_paren_mut","","",N,N],[5,"visit_type_path_mut","","",N,N],[5,"visit_type_ptr_mut","","",N,N],[5,"visit_type_reference_mut","","",N,N],[5,"visit_type_slice_mut","","",N,N],[5,"visit_type_trait_object_mut","","",N,N],[5,"visit_type_tuple_mut","","",N,N],[5,"visit_type_verbatim_mut","","",N,N],[5,"visit_un_op_mut","","",N,N],[5,"visit_use_glob_mut","","",N,N],[5,"visit_use_group_mut","","",N,N],[5,"visit_use_name_mut","","",N,N],[5,"visit_use_path_mut","","",N,N],[5,"visit_use_rename_mut","","",N,N],[5,"visit_use_tree_mut","","",N,N],[5,"visit_variant_mut","","",N,N],[5,"visit_vis_crate_mut","","",N,N],[5,"visit_vis_public_mut","","",N,N],[5,"visit_vis_restricted_mut","","",N,N],[5,"visit_visibility_mut","","",N,N],[5,"visit_where_clause_mut","","",N,N],[5,"visit_where_predicate_mut","","",N,N],[4,"Meta","devise::syn","Content of a compile-time structured attribute.",N,N],[13,"Word","","",185,N],[13,"List","","A structured list within an attribute, like `derive(Copy,…",185,N],[13,"NameValue","","A name-value pair within an attribute, like `feature =…",185,N],[3,"TypeTuple","","A tuple type: `(A, B, C, String)`.",N,N],[12,"paren_token","","",186,N],[12,"elems","","",186,N],[14,"Token","","A type-macro that expands to the name of the Rust type…",N,N],[4,"UseTree","","A suffix of an import tree in a `use` item: `Type as…",N,N],[13,"Path","","A path prefix of imports in a `use` item: `std::...`.",187,N],[13,"Name","","An identifier imported by a `use` item: `HashMap`.",187,N],[13,"Rename","","An renamed identifier imported by a `use` item: `HashMap…",187,N],[13,"Glob","","A glob import in a `use` item: `*`.",187,N],[13,"Group","","A braced group of imports in a `use` item: `{A, B, C}`.",187,N],[4,"GenericParam","","A generic type parameter, lifetime, or const generic: `T:…",N,N],[13,"Type","","A generic type parameter: `T: Into<String>`.",188,N],[13,"Lifetime","","A lifetime definition: `'a: 'b + 'c + 'd`.",188,N],[13,"Const","","A const generic parameter: `const LENGTH: usize`.",188,N],[3,"ExprBinary","","A binary operation: `a + b`, `a * b`.",N,N],[12,"attrs","","",189,N],[12,"left","","",189,N],[12,"op","","",189,N],[12,"right","","",189,N],[3,"ExprMacro","","A macro invocation expression: `format!(\"{}\", q)`.",N,N],[12,"attrs","","",190,N],[12,"mac","","",190,N],[3,"TypeBareFn","","A bare function type: `fn(usize) -> bool`.",N,N],[12,"lifetimes","","",191,N],[12,"unsafety","","",191,N],[12,"abi","","",191,N],[12,"fn_token","","",191,N],[12,"paren_token","","",191,N],[12,"inputs","","",191,N],[12,"variadic","","",191,N],[12,"output","","",191,N],[3,"ItemEnum","","An enum definition: `enum Foo<A, B> { C<A>, D<B> }`.",N,N],[12,"attrs","","",192,N],[12,"vis","","",192,N],[12,"enum_token","","",192,N],[12,"ident","","",192,N],[12,"generics","","",192,N],[12,"brace_token","","",192,N],[12,"variants","","",192,N],[3,"PatRef","","A reference pattern: `&mut (first, second)`.",N,N],[12,"and_token","","",193,N],[12,"mutability","","",193,N],[12,"pat","","",193,N],[3,"AngleBracketedGenericArguments","","Angle bracketed arguments of a path segment: the `<K, V>`…",N,N],[12,"colon2_token","","",194,N],[12,"lt_token","","",194,N],[12,"args","","",194,N],[12,"gt_token","","",194,N],[3,"ItemUse","","A use declaration: `use std::collections::HashMap`.",N,N],[12,"attrs","","",195,N],[12,"vis","","",195,N],[12,"use_token","","",195,N],[12,"leading_colon","","",195,N],[12,"tree","","",195,N],[12,"semi_token","","",195,N],[3,"PredicateEq","","An equality predicate in a `where` clause (unsupported).",N,N],[12,"lhs_ty","","",196,N],[12,"eq_token","","",196,N],[12,"rhs_ty","","",196,N],[3,"ExprBreak","","A `break`, with an optional label to break and an optional…",N,N],[12,"attrs","","",197,N],[12,"break_token","","",197,N],[12,"label","","",197,N],[12,"expr","","",197,N],[3,"ItemFn","","A free-standing function: `fn process(n: usize) ->…",N,N],[12,"attrs","","",198,N],[12,"vis","","",198,N],[12,"constness","","",198,N],[12,"unsafety","","",198,N],[12,"asyncness","","",198,N],[12,"abi","","",198,N],[12,"ident","","",198,N],[12,"decl","","",198,N],[12,"block","","",198,N],[3,"VisPublic","","A public visibility level: `pub`.",N,N],[12,"pub_token","","",199,N],[3,"QSelf","","The explicit Self type in a qualified path: the `T` in `<T…",N,N],[12,"lt_token","","",200,N],[12,"ty","","",200,N],[12,"position","","",200,N],[12,"as_token","","",200,N],[12,"gt_token","","",200,N],[3,"ItemMacro2","","A 2.0-style declarative macro introduced by the `macro`…",N,N],[12,"attrs","","",201,N],[12,"vis","","",201,N],[12,"macro_token","","",201,N],[12,"ident","","",201,N],[12,"paren_token","","",201,N],[12,"args","","",201,N],[12,"brace_token","","",201,N],[12,"body","","",201,N],[3,"ExprStruct","","A struct literal expression: `Point { x: 1, y: 1 }`.",N,N],[12,"attrs","","",202,N],[12,"path","","",202,N],[12,"brace_token","","",202,N],[12,"fields","","",202,N],[12,"dot2_token","","",202,N],[12,"rest","","",202,N],[3,"PatVerbatim","","Tokens in pattern position not interpreted by Syn.",N,N],[12,"tts","","",203,N],[3,"Attribute","","An attribute like `#[repr(transparent)]`.",N,N],[12,"pound_token","","",204,N],[12,"style","","",204,N],[12,"bracket_token","","",204,N],[12,"path","","",204,N],[12,"tts","","",204,N],[3,"ImplItemExistential","","An existential type within an impl block.",N,N],[12,"attrs","","",205,N],[12,"existential_token","","",205,N],[12,"type_token","","",205,N],[12,"ident","","",205,N],[12,"generics","","",205,N],[12,"colon_token","","",205,N],[12,"bounds","","",205,N],[12,"semi_token","","",205,N],[3,"ItemStruct","","A struct definition: `struct Foo<A> { x: A }`.",N,N],[12,"attrs","","",206,N],[12,"vis","","",206,N],[12,"struct_token","","",206,N],[12,"ident","","",206,N],[12,"generics","","",206,N],[12,"fields","","",206,N],[12,"semi_token","","",206,N],[4,"Pat","","A pattern in a local binding, function signature, match…",N,N],[13,"Wild","","A pattern that matches any value: `_`.",207,N],[13,"Ident","","A pattern that binds a new variable: `ref mut binding @…",207,N],[13,"Struct","","A struct or struct variant pattern: `Variant { x, y, .. }`.",207,N],[13,"TupleStruct","","A tuple struct or tuple variant pattern: `Variant(x, y,…",207,N],[13,"Path","","A path pattern like `Color::Red`, optionally qualified…",207,N],[13,"Tuple","","A tuple pattern: `(a, b)`.",207,N],[13,"Box","","A box pattern: `box v`.",207,N],[13,"Ref","","A reference pattern: `&mut (first, second)`.",207,N],[13,"Lit","","A literal pattern: `0`.",207,N],[13,"Range","","A range pattern: `1..=2`.",207,N],[13,"Slice","","A dynamically sized slice pattern: `[a, b, i.., y, z]`.",207,N],[13,"Macro","","A macro in expression position.",207,N],[13,"Verbatim","","Tokens in pattern position not interpreted by Syn.",207,N],[3,"MetaList","","A structured list within an attribute, like `derive(Copy,…",N,N],[12,"ident","","",208,N],[12,"paren_token","","",208,N],[12,"nested","","",208,N],[3,"ItemType","","A type alias: `type Result<T> = std::result::Result<T,…",N,N],[12,"attrs","","",209,N],[12,"vis","","",209,N],[12,"type_token","","",209,N],[12,"ident","","",209,N],[12,"generics","","",209,N],[12,"eq_token","","",209,N],[12,"ty","","",209,N],[12,"semi_token","","",209,N],[3,"Generics","","Lifetimes and type parameters attached to a declaration of…",N,N],[12,"lt_token","","",210,N],[12,"params","","",210,N],[12,"gt_token","","",210,N],[12,"where_clause","","",210,N],[4,"Stmt","","A statement, usually ending in a semicolon.",N,N],[13,"Local","","A local (let) binding.",211,N],[13,"Item","","An item definition.",211,N],[13,"Expr","","Expr without trailing semicolon.",211,N],[13,"Semi","","Expression with trailing semicolon.",211,N],[3,"ExprBlock","","A blocked scope: `{ ... }`.",N,N],[12,"attrs","","",212,N],[12,"label","","",212,N],[12,"block","","",212,N],[3,"ArgCaptured","","An explicitly typed pattern captured by a function…",N,N],[12,"pat","","",213,N],[12,"colon_token","","",213,N],[12,"ty","","",213,N],[3,"ExprVerbatim","","Tokens in expression position not interpreted by Syn.",N,N],[12,"tts","","",214,N],[3,"Binding","","A binding (equality constraint) on an associated type:…",N,N],[12,"ident","","",215,N],[12,"eq_token","","",215,N],[12,"ty","","",215,N],[3,"ItemVerbatim","","Tokens forming an item not interpreted by Syn.",N,N],[12,"tts","","",216,N],[3,"PredicateLifetime","","A lifetime predicate in a `where` clause: `'a: 'b + 'c`.",N,N],[12,"lifetime","","",217,N],[12,"colon_token","","",217,N],[12,"bounds","","",217,N],[3,"ExprCall","","A function call expression: `invoke(a, b)`.",N,N],[12,"attrs","","",218,N],[12,"func","","",218,N],[12,"paren_token","","",218,N],[12,"args","","",218,N],[3,"ExprMethodCall","","A method call expression: `x.foo::<T>(a, b)`.",N,N],[12,"attrs","","",219,N],[12,"receiver","","",219,N],[12,"dot_token","","",219,N],[12,"method","","",219,N],[12,"turbofish","","",219,N],[12,"paren_token","","",219,N],[12,"args","","",219,N],[3,"ParenthesizedGenericArguments","","Arguments of a function path segment: the `(A, B) -> C` in…",N,N],[12,"paren_token","","",220,N],[12,"inputs","","`(A, B)`",220,N],[12,"output","","`C`",220,N],[3,"TraitItemConst","","An associated constant within the definition of a trait.",N,N],[12,"attrs","","",221,N],[12,"const_token","","",221,N],[12,"ident","","",221,N],[12,"colon_token","","",221,N],[12,"ty","","",221,N],[12,"default","","",221,N],[12,"semi_token","","",221,N],[3,"ExprContinue","","A `continue`, with an optional label.",N,N],[12,"attrs","","",222,N],[12,"continue_token","","",222,N],[12,"label","","",222,N],[4,"ImplItem","","An item within an impl block.",N,N],[13,"Const","","An associated constant within an impl block.",223,N],[13,"Method","","A method within an impl block.",223,N],[13,"Type","","An associated type within an impl block.",223,N],[13,"Existential","","An existential type within an impl block.",223,N],[13,"Macro","","A macro invocation within an impl block.",223,N],[13,"Verbatim","","Tokens within an impl block not interpreted by Syn.",223,N],[3,"TraitItemVerbatim","","Tokens within the definition of a trait not interpreted by…",N,N],[12,"tts","","",224,N],[3,"PatWild","","A pattern that matches any value: `_`.",N,N],[12,"underscore_token","","",225,N],[3,"ExprIf","","An `if` expression with an optional `else` block: `if expr…",N,N],[12,"attrs","","",226,N],[12,"if_token","","",226,N],[12,"cond","","",226,N],[12,"then_branch","","",226,N],[12,"else_branch","","",226,N],[3,"TypeReference","","A reference type: `&'a T` or `&'a mut T`.",N,N],[12,"and_token","","",227,N],[12,"lifetime","","",227,N],[12,"mutability","","",227,N],[12,"elem","","",227,N],[3,"UseName","","An identifier imported by a `use` item: `HashMap`.",N,N],[12,"ident","","",228,N],[3,"ExprAssign","","An assignment expression: `a = compute()`.",N,N],[12,"attrs","","",229,N],[12,"left","","",229,N],[12,"eq_token","","",229,N],[12,"right","","",229,N],[3,"ExprLet","","A `let` guard: `let Some(x) = opt`.",N,N],[12,"attrs","","",230,N],[12,"let_token","","",230,N],[12,"pats","","",230,N],[12,"eq_token","","",230,N],[12,"expr","","",230,N],[4,"ReturnType","","Return type of a function signature.",N,N],[13,"Default","","Return type is not specified.",231,N],[13,"Type","","A particular type is returned.",231,N],[3,"ArgSelf","","Self captured by value in a function signature: `self` or…",N,N],[12,"mutability","","",232,N],[12,"self_token","","",232,N],[3,"PatMacro","","A macro in expression position.",N,N],[12,"mac","","",233,N],[3,"Constraint","","An associated type bound: `Iterator<Item: Display>`.",N,N],[12,"ident","","",234,N],[12,"colon_token","","",234,N],[12,"bounds","","",234,N],[3,"PredicateType","","A type predicate in a `where` clause: `for<'c> Foo<'c>:…",N,N],[12,"lifetimes","","Any lifetimes from a `for` binding",235,N],[12,"bounded_ty","","The type being bounded",235,N],[12,"colon_token","","",235,N],[12,"bounds","","Trait and lifetime bounds (`Clone+Send+'static`)",235,N],[4,"MacroDelimiter","","A grouping token that surrounds a macro body: `m!(...)` or…",N,N],[13,"Paren","","",236,N],[13,"Brace","","",236,N],[13,"Bracket","","",236,N],[3,"FnDecl","","Header of a function declaration, without including the…",N,N],[12,"fn_token","","",237,N],[12,"generics","","",237,N],[12,"paren_token","","",237,N],[12,"inputs","","",237,N],[12,"variadic","","",237,N],[12,"output","","",237,N],[3,"Path","","A path at which a named item is exported:…",N,N],[12,"leading_colon","","",238,N],[12,"segments","","",238,N],[3,"DataStruct","","A struct input to a `proc_macro_derive` macro.",N,N],[12,"struct_token","","",239,N],[12,"fields","","",239,N],[12,"semi_token","","",239,N],[3,"ItemForeignMod","","A block of foreign items: `extern \"C\" { ... }`.",N,N],[12,"attrs","","",240,N],[12,"abi","","",240,N],[12,"brace_token","","",240,N],[12,"items","","",240,N],[3,"TypePath","","A path like `std::slice::Iter`, optionally qualified with…",N,N],[12,"qself","","",241,N],[12,"path","","",241,N],[3,"ForeignItemMacro","","A macro invocation within an extern block.",N,N],[12,"attrs","","",242,N],[12,"mac","","",242,N],[12,"semi_token","","",242,N],[3,"UseGlob","","A glob import in a `use` item: `*`.",N,N],[12,"star_token","","",243,N],[3,"LitByte","","A byte literal: `b'f'`.",N,N],[3,"ExprTry","","A try-expression: `expr?`.",N,N],[12,"attrs","","",244,N],[12,"expr","","",244,N],[12,"question_token","","",244,N],[3,"TypeSlice","","A dynamically sized slice type: `[T]`.",N,N],[12,"bracket_token","","",245,N],[12,"elem","","",245,N],[3,"UsePath","","A path prefix of imports in a `use` item: `std::...`.",N,N],[12,"ident","","",246,N],[12,"colon2_token","","",246,N],[12,"tree","","",246,N],[3,"BoundLifetimes","","A set of bound lifetimes: `for<'a, 'b, 'c>`.",N,N],[12,"for_token","","",247,N],[12,"lt_token","","",247,N],[12,"lifetimes","","",247,N],[12,"gt_token","","",247,N],[3,"ExprLit","","A literal in place of an expression: `1`, `\"foo\"`.",N,N],[12,"attrs","","",248,N],[12,"lit","","",248,N],[3,"LitFloat","","A floating point literal: `1f64` or `1.0e10f64`.",N,N],[3,"Turbofish","","Returned by `TypeGenerics::as_turbofish`.",N,N],[3,"ExprType","","A type ascription expression: `foo: f64`.",N,N],[12,"attrs","","",249,N],[12,"expr","","",249,N],[12,"colon_token","","",249,N],[12,"ty","","",249,N],[3,"TypeVerbatim","","Tokens in type position not interpreted by Syn.",N,N],[12,"tts","","",250,N],[3,"ImplItemVerbatim","","Tokens within an impl block not interpreted by Syn.",N,N],[12,"tts","","",251,N],[3,"Field","","A field of a struct or enum variant.",N,N],[12,"attrs","","Attributes tagged on the field.",252,N],[12,"vis","","Visibility of the field.",252,N],[12,"ident","","Name of the field, if any.",252,N],[12,"colon_token","","",252,N],[12,"ty","","Type of the field.",252,N],[4,"Data","","The storage of a struct, enum or union data structure.",N,N],[13,"Struct","","A struct input to a `proc_macro_derive` macro.",253,N],[13,"Enum","","An enum input to a `proc_macro_derive` macro.",253,N],[13,"Union","","A tagged union input to a `proc_macro_derive` macro.",253,N],[0,"visit","","Syntax tree traversal to walk a shared borrow of a syntax…",N,N],[8,"Visit","devise::syn::visit","Syntax tree traversal to walk a shared borrow of a syntax…",N,N],[11,"visit_abi","","",254,N],[11,"visit_angle_bracketed_generic_arguments","","",254,N],[11,"visit_arg_captured","","",254,N],[11,"visit_arg_self","","",254,N],[11,"visit_arg_self_ref","","",254,N],[11,"visit_arm","","",254,N],[11,"visit_attr_style","","",254,N],[11,"visit_attribute","","",254,N],[11,"visit_bare_fn_arg","","",254,N],[11,"visit_bare_fn_arg_name","","",254,N],[11,"visit_bin_op","","",254,N],[11,"visit_binding","","",254,N],[11,"visit_block","","",254,N],[11,"visit_bound_lifetimes","","",254,N],[11,"visit_const_param","","",254,N],[11,"visit_constraint","","",254,N],[11,"visit_data","","",254,N],[11,"visit_data_enum","","",254,N],[11,"visit_data_struct","","",254,N],[11,"visit_data_union","","",254,N],[11,"visit_derive_input","","",254,N],[11,"visit_expr","","",254,N],[11,"visit_expr_array","","",254,N],[11,"visit_expr_assign","","",254,N],[11,"visit_expr_assign_op","","",254,N],[11,"visit_expr_async","","",254,N],[11,"visit_expr_binary","","",254,N],[11,"visit_expr_block","","",254,N],[11,"visit_expr_box","","",254,N],[11,"visit_expr_break","","",254,N],[11,"visit_expr_call","","",254,N],[11,"visit_expr_cast","","",254,N],[11,"visit_expr_closure","","",254,N],[11,"visit_expr_continue","","",254,N],[11,"visit_expr_field","","",254,N],[11,"visit_expr_for_loop","","",254,N],[11,"visit_expr_group","","",254,N],[11,"visit_expr_if","","",254,N],[11,"visit_expr_in_place","","",254,N],[11,"visit_expr_index","","",254,N],[11,"visit_expr_let","","",254,N],[11,"visit_expr_lit","","",254,N],[11,"visit_expr_loop","","",254,N],[11,"visit_expr_macro","","",254,N],[11,"visit_expr_match","","",254,N],[11,"visit_expr_method_call","","",254,N],[11,"visit_expr_paren","","",254,N],[11,"visit_expr_path","","",254,N],[11,"visit_expr_range","","",254,N],[11,"visit_expr_reference","","",254,N],[11,"visit_expr_repeat","","",254,N],[11,"visit_expr_return","","",254,N],[11,"visit_expr_struct","","",254,N],[11,"visit_expr_try","","",254,N],[11,"visit_expr_try_block","","",254,N],[11,"visit_expr_tuple","","",254,N],[11,"visit_expr_type","","",254,N],[11,"visit_expr_unary","","",254,N],[11,"visit_expr_unsafe","","",254,N],[11,"visit_expr_verbatim","","",254,N],[11,"visit_expr_while","","",254,N],[11,"visit_expr_yield","","",254,N],[11,"visit_field","","",254,N],[11,"visit_field_pat","","",254,N],[11,"visit_field_value","","",254,N],[11,"visit_fields","","",254,N],[11,"visit_fields_named","","",254,N],[11,"visit_fields_unnamed","","",254,N],[11,"visit_file","","",254,N],[11,"visit_fn_arg","","",254,N],[11,"visit_fn_decl","","",254,N],[11,"visit_foreign_item","","",254,N],[11,"visit_foreign_item_fn","","",254,N],[11,"visit_foreign_item_macro","","",254,N],[11,"visit_foreign_item_static","","",254,N],[11,"visit_foreign_item_type","","",254,N],[11,"visit_foreign_item_verbatim","","",254,N],[11,"visit_generic_argument","","",254,N],[11,"visit_generic_method_argument","","",254,N],[11,"visit_generic_param","","",254,N],[11,"visit_generics","","",254,N],[11,"visit_ident","","",254,N],[11,"visit_impl_item","","",254,N],[11,"visit_impl_item_const","","",254,N],[11,"visit_impl_item_existential","","",254,N],[11,"visit_impl_item_macro","","",254,N],[11,"visit_impl_item_method","","",254,N],[11,"visit_impl_item_type","","",254,N],[11,"visit_impl_item_verbatim","","",254,N],[11,"visit_index","","",254,N],[11,"visit_item","","",254,N],[11,"visit_item_const","","",254,N],[11,"visit_item_enum","","",254,N],[11,"visit_item_existential","","",254,N],[11,"visit_item_extern_crate","","",254,N],[11,"visit_item_fn","","",254,N],[11,"visit_item_foreign_mod","","",254,N],[11,"visit_item_impl","","",254,N],[11,"visit_item_macro","","",254,N],[11,"visit_item_macro2","","",254,N],[11,"visit_item_mod","","",254,N],[11,"visit_item_static","","",254,N],[11,"visit_item_struct","","",254,N],[11,"visit_item_trait","","",254,N],[11,"visit_item_trait_alias","","",254,N],[11,"visit_item_type","","",254,N],[11,"visit_item_union","","",254,N],[11,"visit_item_use","","",254,N],[11,"visit_item_verbatim","","",254,N],[11,"visit_label","","",254,N],[11,"visit_lifetime","","",254,N],[11,"visit_lifetime_def","","",254,N],[11,"visit_lit","","",254,N],[11,"visit_lit_bool","","",254,N],[11,"visit_lit_byte","","",254,N],[11,"visit_lit_byte_str","","",254,N],[11,"visit_lit_char","","",254,N],[11,"visit_lit_float","","",254,N],[11,"visit_lit_int","","",254,N],[11,"visit_lit_str","","",254,N],[11,"visit_lit_verbatim","","",254,N],[11,"visit_local","","",254,N],[11,"visit_macro","","",254,N],[11,"visit_macro_delimiter","","",254,N],[11,"visit_member","","",254,N],[11,"visit_meta","","",254,N],[11,"visit_meta_list","","",254,N],[11,"visit_meta_name_value","","",254,N],[11,"visit_method_sig","","",254,N],[11,"visit_method_turbofish","","",254,N],[11,"visit_nested_meta","","",254,N],[11,"visit_parenthesized_generic_arguments","","",254,N],[11,"visit_pat","","",254,N],[11,"visit_pat_box","","",254,N],[11,"visit_pat_ident","","",254,N],[11,"visit_pat_lit","","",254,N],[11,"visit_pat_macro","","",254,N],[11,"visit_pat_path","","",254,N],[11,"visit_pat_range","","",254,N],[11,"visit_pat_ref","","",254,N],[11,"visit_pat_slice","","",254,N],[11,"visit_pat_struct","","",254,N],[11,"visit_pat_tuple","","",254,N],[11,"visit_pat_tuple_struct","","",254,N],[11,"visit_pat_verbatim","","",254,N],[11,"visit_pat_wild","","",254,N],[11,"visit_path","","",254,N],[11,"visit_path_arguments","","",254,N],[11,"visit_path_segment","","",254,N],[11,"visit_predicate_eq","","",254,N],[11,"visit_predicate_lifetime","","",254,N],[11,"visit_predicate_type","","",254,N],[11,"visit_qself","","",254,N],[11,"visit_range_limits","","",254,N],[11,"visit_return_type","","",254,N],[11,"visit_span","","",254,N],[11,"visit_stmt","","",254,N],[11,"visit_trait_bound","","",254,N],[11,"visit_trait_bound_modifier","","",254,N],[11,"visit_trait_item","","",254,N],[11,"visit_trait_item_const","","",254,N],[11,"visit_trait_item_macro","","",254,N],[11,"visit_trait_item_method","","",254,N],[11,"visit_trait_item_type","","",254,N],[11,"visit_trait_item_verbatim","","",254,N],[11,"visit_type","","",254,N],[11,"visit_type_array","","",254,N],[11,"visit_type_bare_fn","","",254,N],[11,"visit_type_group","","",254,N],[11,"visit_type_impl_trait","","",254,N],[11,"visit_type_infer","","",254,N],[11,"visit_type_macro","","",254,N],[11,"visit_type_never","","",254,N],[11,"visit_type_param","","",254,N],[11,"visit_type_param_bound","","",254,N],[11,"visit_type_paren","","",254,N],[11,"visit_type_path","","",254,N],[11,"visit_type_ptr","","",254,N],[11,"visit_type_reference","","",254,N],[11,"visit_type_slice","","",254,N],[11,"visit_type_trait_object","","",254,N],[11,"visit_type_tuple","","",254,N],[11,"visit_type_verbatim","","",254,N],[11,"visit_un_op","","",254,N],[11,"visit_use_glob","","",254,N],[11,"visit_use_group","","",254,N],[11,"visit_use_name","","",254,N],[11,"visit_use_path","","",254,N],[11,"visit_use_rename","","",254,N],[11,"visit_use_tree","","",254,N],[11,"visit_variant","","",254,N],[11,"visit_vis_crate","","",254,N],[11,"visit_vis_public","","",254,N],[11,"visit_vis_restricted","","",254,N],[11,"visit_visibility","","",254,N],[11,"visit_where_clause","","",254,N],[11,"visit_where_predicate","","",254,N],[5,"visit_abi","","",N,N],[5,"visit_angle_bracketed_generic_arguments","","",N,N],[5,"visit_arg_captured","","",N,N],[5,"visit_arg_self","","",N,N],[5,"visit_arg_self_ref","","",N,N],[5,"visit_arm","","",N,N],[5,"visit_attr_style","","",N,N],[5,"visit_attribute","","",N,N],[5,"visit_bare_fn_arg","","",N,N],[5,"visit_bare_fn_arg_name","","",N,N],[5,"visit_bin_op","","",N,N],[5,"visit_binding","","",N,N],[5,"visit_block","","",N,N],[5,"visit_bound_lifetimes","","",N,N],[5,"visit_const_param","","",N,N],[5,"visit_constraint","","",N,N],[5,"visit_data","","",N,N],[5,"visit_data_enum","","",N,N],[5,"visit_data_struct","","",N,N],[5,"visit_data_union","","",N,N],[5,"visit_derive_input","","",N,N],[5,"visit_expr","","",N,N],[5,"visit_expr_array","","",N,N],[5,"visit_expr_assign","","",N,N],[5,"visit_expr_assign_op","","",N,N],[5,"visit_expr_async","","",N,N],[5,"visit_expr_binary","","",N,N],[5,"visit_expr_block","","",N,N],[5,"visit_expr_box","","",N,N],[5,"visit_expr_break","","",N,N],[5,"visit_expr_call","","",N,N],[5,"visit_expr_cast","","",N,N],[5,"visit_expr_closure","","",N,N],[5,"visit_expr_continue","","",N,N],[5,"visit_expr_field","","",N,N],[5,"visit_expr_for_loop","","",N,N],[5,"visit_expr_group","","",N,N],[5,"visit_expr_if","","",N,N],[5,"visit_expr_in_place","","",N,N],[5,"visit_expr_index","","",N,N],[5,"visit_expr_let","","",N,N],[5,"visit_expr_lit","","",N,N],[5,"visit_expr_loop","","",N,N],[5,"visit_expr_macro","","",N,N],[5,"visit_expr_match","","",N,N],[5,"visit_expr_method_call","","",N,N],[5,"visit_expr_paren","","",N,N],[5,"visit_expr_path","","",N,N],[5,"visit_expr_range","","",N,N],[5,"visit_expr_reference","","",N,N],[5,"visit_expr_repeat","","",N,N],[5,"visit_expr_return","","",N,N],[5,"visit_expr_struct","","",N,N],[5,"visit_expr_try","","",N,N],[5,"visit_expr_try_block","","",N,N],[5,"visit_expr_tuple","","",N,N],[5,"visit_expr_type","","",N,N],[5,"visit_expr_unary","","",N,N],[5,"visit_expr_unsafe","","",N,N],[5,"visit_expr_verbatim","","",N,N],[5,"visit_expr_while","","",N,N],[5,"visit_expr_yield","","",N,N],[5,"visit_field","","",N,N],[5,"visit_field_pat","","",N,N],[5,"visit_field_value","","",N,N],[5,"visit_fields","","",N,N],[5,"visit_fields_named","","",N,N],[5,"visit_fields_unnamed","","",N,N],[5,"visit_file","","",N,N],[5,"visit_fn_arg","","",N,N],[5,"visit_fn_decl","","",N,N],[5,"visit_foreign_item","","",N,N],[5,"visit_foreign_item_fn","","",N,N],[5,"visit_foreign_item_macro","","",N,N],[5,"visit_foreign_item_static","","",N,N],[5,"visit_foreign_item_type","","",N,N],[5,"visit_foreign_item_verbatim","","",N,N],[5,"visit_generic_argument","","",N,N],[5,"visit_generic_method_argument","","",N,N],[5,"visit_generic_param","","",N,N],[5,"visit_generics","","",N,N],[5,"visit_ident","","",N,N],[5,"visit_impl_item","","",N,N],[5,"visit_impl_item_const","","",N,N],[5,"visit_impl_item_existential","","",N,N],[5,"visit_impl_item_macro","","",N,N],[5,"visit_impl_item_method","","",N,N],[5,"visit_impl_item_type","","",N,N],[5,"visit_impl_item_verbatim","","",N,N],[5,"visit_index","","",N,N],[5,"visit_item","","",N,N],[5,"visit_item_const","","",N,N],[5,"visit_item_enum","","",N,N],[5,"visit_item_existential","","",N,N],[5,"visit_item_extern_crate","","",N,N],[5,"visit_item_fn","","",N,N],[5,"visit_item_foreign_mod","","",N,N],[5,"visit_item_impl","","",N,N],[5,"visit_item_macro","","",N,N],[5,"visit_item_macro2","","",N,N],[5,"visit_item_mod","","",N,N],[5,"visit_item_static","","",N,N],[5,"visit_item_struct","","",N,N],[5,"visit_item_trait","","",N,N],[5,"visit_item_trait_alias","","",N,N],[5,"visit_item_type","","",N,N],[5,"visit_item_union","","",N,N],[5,"visit_item_use","","",N,N],[5,"visit_item_verbatim","","",N,N],[5,"visit_label","","",N,N],[5,"visit_lifetime","","",N,N],[5,"visit_lifetime_def","","",N,N],[5,"visit_lit","","",N,N],[5,"visit_lit_bool","","",N,N],[5,"visit_lit_byte","","",N,N],[5,"visit_lit_byte_str","","",N,N],[5,"visit_lit_char","","",N,N],[5,"visit_lit_float","","",N,N],[5,"visit_lit_int","","",N,N],[5,"visit_lit_str","","",N,N],[5,"visit_lit_verbatim","","",N,N],[5,"visit_local","","",N,N],[5,"visit_macro","","",N,N],[5,"visit_macro_delimiter","","",N,N],[5,"visit_member","","",N,N],[5,"visit_meta","","",N,N],[5,"visit_meta_list","","",N,N],[5,"visit_meta_name_value","","",N,N],[5,"visit_method_sig","","",N,N],[5,"visit_method_turbofish","","",N,N],[5,"visit_nested_meta","","",N,N],[5,"visit_parenthesized_generic_arguments","","",N,N],[5,"visit_pat","","",N,N],[5,"visit_pat_box","","",N,N],[5,"visit_pat_ident","","",N,N],[5,"visit_pat_lit","","",N,N],[5,"visit_pat_macro","","",N,N],[5,"visit_pat_path","","",N,N],[5,"visit_pat_range","","",N,N],[5,"visit_pat_ref","","",N,N],[5,"visit_pat_slice","","",N,N],[5,"visit_pat_struct","","",N,N],[5,"visit_pat_tuple","","",N,N],[5,"visit_pat_tuple_struct","","",N,N],[5,"visit_pat_verbatim","","",N,N],[5,"visit_pat_wild","","",N,N],[5,"visit_path","","",N,N],[5,"visit_path_arguments","","",N,N],[5,"visit_path_segment","","",N,N],[5,"visit_predicate_eq","","",N,N],[5,"visit_predicate_lifetime","","",N,N],[5,"visit_predicate_type","","",N,N],[5,"visit_qself","","",N,N],[5,"visit_range_limits","","",N,N],[5,"visit_return_type","","",N,N],[5,"visit_span","","",N,N],[5,"visit_stmt","","",N,N],[5,"visit_trait_bound","","",N,N],[5,"visit_trait_bound_modifier","","",N,N],[5,"visit_trait_item","","",N,N],[5,"visit_trait_item_const","","",N,N],[5,"visit_trait_item_macro","","",N,N],[5,"visit_trait_item_method","","",N,N],[5,"visit_trait_item_type","","",N,N],[5,"visit_trait_item_verbatim","","",N,N],[5,"visit_type","","",N,N],[5,"visit_type_array","","",N,N],[5,"visit_type_bare_fn","","",N,N],[5,"visit_type_group","","",N,N],[5,"visit_type_impl_trait","","",N,N],[5,"visit_type_infer","","",N,N],[5,"visit_type_macro","","",N,N],[5,"visit_type_never","","",N,N],[5,"visit_type_param","","",N,N],[5,"visit_type_param_bound","","",N,N],[5,"visit_type_paren","","",N,N],[5,"visit_type_path","","",N,N],[5,"visit_type_ptr","","",N,N],[5,"visit_type_reference","","",N,N],[5,"visit_type_slice","","",N,N],[5,"visit_type_trait_object","","",N,N],[5,"visit_type_tuple","","",N,N],[5,"visit_type_verbatim","","",N,N],[5,"visit_un_op","","",N,N],[5,"visit_use_glob","","",N,N],[5,"visit_use_group","","",N,N],[5,"visit_use_name","","",N,N],[5,"visit_use_path","","",N,N],[5,"visit_use_rename","","",N,N],[5,"visit_use_tree","","",N,N],[5,"visit_variant","","",N,N],[5,"visit_vis_crate","","",N,N],[5,"visit_vis_public","","",N,N],[5,"visit_vis_restricted","","",N,N],[5,"visit_visibility","","",N,N],[5,"visit_where_clause","","",N,N],[5,"visit_where_predicate","","",N,N],[3,"MethodSig","devise::syn","A method's signature in a trait or implementation: `unsafe…",N,N],[12,"constness","","",255,N],[12,"unsafety","","",255,N],[12,"asyncness","","",255,N],[12,"abi","","",255,N],[12,"ident","","",255,N],[12,"decl","","",255,N],[3,"FieldsUnnamed","","Unnamed fields of a tuple struct or tuple variant such as…",N,N],[12,"paren_token","","",256,N],[12,"unnamed","","",256,N],[3,"ExprParen","","A parenthesized expression: `(a + b)`.",N,N],[12,"attrs","","",257,N],[12,"paren_token","","",257,N],[12,"expr","","",257,N],[3,"TypeInfer","","Indication that a type should be inferred by the compiler:…",N,N],[12,"underscore_token","","",258,N],[3,"TraitItemMacro","","A macro invocation within the definition of a trait.",N,N],[12,"attrs","","",259,N],[12,"mac","","",259,N],[12,"semi_token","","",259,N],[3,"PatTuple","","A tuple pattern: `(a, b)`.",N,N],[12,"paren_token","","",260,N],[12,"front","","",260,N],[12,"dot2_token","","",260,N],[12,"comma_token","","",260,N],[12,"back","","",260,N],[3,"ExprField","","Access of a named struct field (`obj.k`) or unnamed tuple…",N,N],[12,"attrs","","",261,N],[12,"base","","",261,N],[12,"dot_token","","",261,N],[12,"member","","",261,N],[3,"LitByteStr","","A byte string literal: `b\"foo\"`.",N,N],[4,"WherePredicate","","A single predicate in a `where` clause: `T:…",N,N],[13,"Type","","A type predicate in a `where` clause: `for<'c> Foo<'c>:…",262,N],[13,"Lifetime","","A lifetime predicate in a `where` clause: `'a: 'b + 'c`.",262,N],[13,"Eq","","An equality predicate in a `where` clause (unsupported).",262,N],[14,"braced","","Parse a set of curly braces and expose their content to…",N,N],[3,"ExprTryBlock","","A try block: `try { ... }`.",N,N],[12,"attrs","","",263,N],[12,"try_token","","",263,N],[12,"block","","",263,N],[3,"ExprReference","","A referencing operation: `&a` or `&mut a`.",N,N],[12,"attrs","","",264,N],[12,"and_token","","",264,N],[12,"mutability","","",264,N],[12,"expr","","",264,N],[3,"Label","","A lifetime labeling a `for`, `while`, or `loop`.",N,N],[12,"name","","",265,N],[12,"colon_token","","",265,N],[4,"Expr","","A Rust expression.",N,N],[13,"Box","","A box expression: `box f`.",266,N],[13,"InPlace","","A placement expression: `place <- value`.",266,N],[13,"Array","","A slice literal expression: `[a, b, c, d]`.",266,N],[13,"Call","","A function call expression: `invoke(a, b)`.",266,N],[13,"MethodCall","","A method call expression: `x.foo::<T>(a, b)`.",266,N],[13,"Tuple","","A tuple expression: `(a, b, c, d)`.",266,N],[13,"Binary","","A binary operation: `a + b`, `a * b`.",266,N],[13,"Unary","","A unary operation: `!x`, `*x`.",266,N],[13,"Lit","","A literal in place of an expression: `1`, `\"foo\"`.",266,N],[13,"Cast","","A cast expression: `foo as f64`.",266,N],[13,"Type","","A type ascription expression: `foo: f64`.",266,N],[13,"Let","","A `let` guard: `let Some(x) = opt`.",266,N],[13,"If","","An `if` expression with an optional `else` block: `if expr…",266,N],[13,"While","","A while loop: `while expr { ... }`.",266,N],[13,"ForLoop","","A for loop: `for pat in expr { ... }`.",266,N],[13,"Loop","","Conditionless loop: `loop { ... }`.",266,N],[13,"Match","","A `match` expression: `match n { Some(n) => {}, None => {}…",266,N],[13,"Closure","","A closure expression: `|a, b| a + b`.",266,N],[13,"Unsafe","","An unsafe block: `unsafe { ... }`.",266,N],[13,"Block","","A blocked scope: `{ ... }`.",266,N],[13,"Assign","","An assignment expression: `a = compute()`.",266,N],[13,"AssignOp","","A compound assignment expression: `counter += 1`.",266,N],[13,"Field","","Access of a named struct field (`obj.k`) or unnamed tuple…",266,N],[13,"Index","","A square bracketed indexing expression: `vector[2]`.",266,N],[13,"Range","","A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.",266,N],[13,"Path","","A path like `std::mem::replace` possibly containing…",266,N],[13,"Reference","","A referencing operation: `&a` or `&mut a`.",266,N],[13,"Break","","A `break`, with an optional label to break and an optional…",266,N],[13,"Continue","","A `continue`, with an optional label.",266,N],[13,"Return","","A `return`, with an optional value to be returned.",266,N],[13,"Macro","","A macro invocation expression: `format!(\"{}\", q)`.",266,N],[13,"Struct","","A struct literal expression: `Point { x: 1, y: 1 }`.",266,N],[13,"Repeat","","An array literal constructed from one repeated element:…",266,N],[13,"Paren","","A parenthesized expression: `(a + b)`.",266,N],[13,"Group","","An expression contained within invisible delimiters.",266,N],[13,"Try","","A try-expression: `expr?`.",266,N],[13,"Async","","An async block: `async { ... }`.",266,N],[13,"TryBlock","","A try block: `try { ... }`.",266,N],[13,"Yield","","A yield expression: `yield expr`.",266,N],[13,"Verbatim","","Tokens in expression position not interpreted by Syn.",266,N],[3,"LitInt","","An integer literal: `1` or `1u16`.",N,N],[3,"TypeGenerics","","Returned by `Generics::split_for_impl`.",N,N],[3,"ExprUnary","","A unary operation: `!x`, `*x`.",N,N],[12,"attrs","","",267,N],[12,"op","","",267,N],[12,"expr","","",267,N],[3,"ExprAssignOp","","A compound assignment expression: `counter += 1`.",N,N],[12,"attrs","","",268,N],[12,"left","","",268,N],[12,"op","","",268,N],[12,"right","","",268,N],[4,"StrStyle","","The style of a string literal, either plain quoted or a…",N,N],[13,"Cooked","","An ordinary string like `\"data\"`.",269,N],[13,"Raw","","A raw string like `r##\"data\"##`.",269,N],[14,"parse_quote","","Quasi-quotation macro that accepts input like the…",N,N],[3,"TypeGroup","","A type contained within invisible delimiters.",N,N],[12,"group_token","","",270,N],[12,"elem","","",270,N],[3,"Lifetime","","A Rust lifetime: `'a`.",N,N],[12,"apostrophe","","",271,N],[12,"ident","","",271,N],[3,"PatSlice","","A dynamically sized slice pattern: `[a, b, i.., y, z]`.",N,N],[12,"bracket_token","","",272,N],[12,"front","","",272,N],[12,"middle","","",272,N],[12,"dot2_token","","",272,N],[12,"comma_token","","",272,N],[12,"back","","",272,N],[4,"ForeignItem","","An item within an `extern` block.",N,N],[13,"Fn","","A foreign function in an `extern` block.",273,N],[13,"Static","","A foreign static item in an `extern` block: `static ext:…",273,N],[13,"Type","","A foreign type in an `extern` block: `type void`.",273,N],[13,"Macro","","A macro invocation within an extern block.",273,N],[13,"Verbatim","","Tokens in an `extern` block not interpreted by Syn.",273,N],[14,"parenthesized","","Parse a set of parentheses and expose their content to…",N,N],[3,"ExprPath","","A path like `std::mem::replace` possibly containing…",N,N],[12,"attrs","","",274,N],[12,"qself","","",274,N],[12,"path","","",274,N],[3,"TypeMacro","","A macro in the type position.",N,N],[12,"mac","","",275,N],[4,"PathArguments","","Angle bracketed or parenthesized arguments of a path…",N,N],[13,"None","","",276,N],[13,"AngleBracketed","","The `<'a, T>` in `std::slice::iter<'a, T>`.",276,N],[13,"Parenthesized","","The `(A, B) -> C` in `Fn(A, B) -> C`.",276,N],[3,"TraitItemMethod","","A trait method within the definition of a trait.",N,N],[12,"attrs","","",277,N],[12,"sig","","",277,N],[12,"default","","",277,N],[12,"semi_token","","",277,N],[4,"IntSuffix","","The suffix on an integer literal if any, like the `u8` in…",N,N],[13,"I8","","",278,N],[13,"I16","","",278,N],[13,"I32","","",278,N],[13,"I64","","",278,N],[13,"I128","","",278,N],[13,"Isize","","",278,N],[13,"U8","","",278,N],[13,"U16","","",278,N],[13,"U32","","",278,N],[13,"U64","","",278,N],[13,"U128","","",278,N],[13,"Usize","","",278,N],[13,"None","","",278,N],[14,"parse_macro_input","","Parse the input TokenStream of a macro, triggering a…",N,N],[4,"TraitBoundModifier","","A modifier on a trait bound, currently only used for the…",N,N],[13,"None","","",279,N],[13,"Maybe","","",279,N],[3,"ForeignItemStatic","","A foreign static item in an `extern` block: `static ext:…",N,N],[12,"attrs","","",280,N],[12,"vis","","",280,N],[12,"static_token","","",280,N],[12,"mutability","","",280,N],[12,"ident","","",280,N],[12,"colon_token","","",280,N],[12,"ty","","",280,N],[12,"semi_token","","",280,N],[3,"ExprRepeat","","An array literal constructed from one repeated element:…",N,N],[12,"attrs","","",281,N],[12,"bracket_token","","",281,N],[12,"expr","","",281,N],[12,"semi_token","","",281,N],[12,"len","","",281,N],[4,"BinOp","","A binary operator: `+`, `+=`, `&`.",N,N],[13,"Add","","The `+` operator (addition)",282,N],[13,"Sub","","The `-` operator (subtraction)",282,N],[13,"Mul","","The `*` operator (multiplication)",282,N],[13,"Div","","The `/` operator (division)",282,N],[13,"Rem","","The `%` operator (modulus)",282,N],[13,"And","","The `&&` operator (logical and)",282,N],[13,"Or","","The `||` operator (logical or)",282,N],[13,"BitXor","","The `^` operator (bitwise xor)",282,N],[13,"BitAnd","","The `&` operator (bitwise and)",282,N],[13,"BitOr","","The `|` operator (bitwise or)",282,N],[13,"Shl","","The `<<` operator (shift left)",282,N],[13,"Shr","","The `>>` operator (shift right)",282,N],[13,"Eq","","The `==` operator (equality)",282,N],[13,"Lt","","The `<` operator (less than)",282,N],[13,"Le","","The `<=` operator (less than or equal to)",282,N],[13,"Ne","","The `!=` operator (not equal to)",282,N],[13,"Ge","","The `>=` operator (greater than or equal to)",282,N],[13,"Gt","","The `>` operator (greater than)",282,N],[13,"AddEq","","The `+=` operator",282,N],[13,"SubEq","","The `-=` operator",282,N],[13,"MulEq","","The `*=` operator",282,N],[13,"DivEq","","The `/=` operator",282,N],[13,"RemEq","","The `%=` operator",282,N],[13,"BitXorEq","","The `^=` operator",282,N],[13,"BitAndEq","","The `&=` operator",282,N],[13,"BitOrEq","","The `|=` operator",282,N],[13,"ShlEq","","The `<<=` operator",282,N],[13,"ShrEq","","The `>>=` operator",282,N],[3,"ItemMod","","A module or module declaration: `mod m` or `mod m { ... }`.",N,N],[12,"attrs","","",283,N],[12,"vis","","",283,N],[12,"mod_token","","",283,N],[12,"ident","","",283,N],[12,"content","","",283,N],[12,"semi","","",283,N],[3,"Local","","A local `let` binding: `let x: u64 = s.parse()?`.",N,N],[12,"attrs","","",284,N],[12,"let_token","","",284,N],[12,"pats","","",284,N],[12,"ty","","",284,N],[12,"init","","",284,N],[12,"semi_token","","",284,N],[6,"AttributeArgs","","Conventional argument type associated with an invocation…",N,N],[3,"ExprArray","","A slice literal expression: `[a, b, c, d]`.",N,N],[12,"attrs","","",285,N],[12,"bracket_token","","",285,N],[12,"elems","","",285,N],[3,"LitStr","","A UTF-8 string literal: `\"foo\"`.",N,N],[3,"TypeTraitObject","","A trait object type `Bound1 + Bound2 + Bound3` where…",N,N],[12,"dyn_token","","",286,N],[12,"bounds","","",286,N],[3,"ExprUnsafe","","An unsafe block: `unsafe { ... }`.",N,N],[12,"attrs","","",287,N],[12,"unsafe_token","","",287,N],[12,"block","","",287,N],[3,"Abi","","The binary interface of a function: `extern \"C\"`.",N,N],[12,"extern_token","","",288,N],[12,"name","","",288,N],[3,"ImplItemMacro","","A macro invocation within an impl block.",N,N],[12,"attrs","","",289,N],[12,"mac","","",289,N],[12,"semi_token","","",289,N],[3,"ItemTrait","","A trait definition: `pub trait Iterator { ... }`.",N,N],[12,"attrs","","",290,N],[12,"vis","","",290,N],[12,"unsafety","","",290,N],[12,"auto_token","","",290,N],[12,"trait_token","","",290,N],[12,"ident","","",290,N],[12,"generics","","",290,N],[12,"colon_token","","",290,N],[12,"supertraits","","",290,N],[12,"brace_token","","",290,N],[12,"items","","",290,N],[3,"PatBox","","A box pattern: `box v`.",N,N],[12,"box_token","","",291,N],[12,"pat","","",291,N],[3,"MetaNameValue","","A name-value pair within an attribute, like `feature =…",N,N],[12,"ident","","",292,N],[12,"eq_token","","",292,N],[12,"lit","","",292,N],[3,"ItemUnion","","A union definition: `union Foo<A, B> { x: A, y: B }`.",N,N],[12,"attrs","","",293,N],[12,"vis","","",293,N],[12,"union_token","","",293,N],[12,"ident","","",293,N],[12,"generics","","",293,N],[12,"fields","","",293,N],[3,"LifetimeDef","","A lifetime definition: `'a: 'b + 'c + 'd`.",N,N],[12,"attrs","","",294,N],[12,"lifetime","","",294,N],[12,"colon_token","","",294,N],[12,"bounds","","",294,N],[3,"DataEnum","","An enum input to a `proc_macro_derive` macro.",N,N],[12,"enum_token","","",295,N],[12,"brace_token","","",295,N],[12,"variants","","",295,N],[3,"ForeignItemFn","","A foreign function in an `extern` block.",N,N],[12,"attrs","","",296,N],[12,"vis","","",296,N],[12,"ident","","",296,N],[12,"decl","","",296,N],[12,"semi_token","","",296,N],[3,"ExprRange","","A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.",N,N],[12,"attrs","","",297,N],[12,"from","","",297,N],[12,"limits","","",297,N],[12,"to","","",297,N],[3,"Block","","A braced block containing Rust statements.",N,N],[12,"brace_token","","",298,N],[12,"stmts","","Statements in a block",298,N],[3,"ItemExistential","","An existential type: `existential type Iter: Iterator<Item…",N,N],[12,"attrs","","",299,N],[12,"vis","","",299,N],[12,"existential_token","","",299,N],[12,"type_token","","",299,N],[12,"ident","","",299,N],[12,"generics","","",299,N],[12,"colon_token","","",299,N],[12,"bounds","","",299,N],[12,"semi_token","","",299,N],[4,"Member","","A struct or tuple struct field accessed in a struct…",N,N],[13,"Named","","A named field like `self.x`.",300,N],[13,"Unnamed","","An unnamed field like `self.0`.",300,N],[3,"Variant","","An enum variant.",N,N],[12,"attrs","","Attributes tagged on the variant.",301,N],[12,"ident","","Name of the variant.",301,N],[12,"fields","","Content stored in the variant.",301,N],[12,"discriminant","","Explicit discriminant: `Variant = 1`",301,N],[4,"Lit","","A Rust literal such as a string or integer or boolean.",N,N],[13,"Str","","A UTF-8 string literal: `\"foo\"`.",302,N],[13,"ByteStr","","A byte string literal: `b\"foo\"`.",302,N],[13,"Byte","","A byte literal: `b'f'`.",302,N],[13,"Char","","A character literal: `'a'`.",302,N],[13,"Int","","An integer literal: `1` or `1u16`.",302,N],[13,"Float","","A floating point literal: `1f64` or `1.0e10f64`.",302,N],[13,"Bool","","A boolean literal: `true` or `false`.",302,N],[13,"Verbatim","","A raw token literal not interpreted by Syn, possibly…",302,N],[3,"TypeParam","","A generic type parameter: `T: Into<String>`.",N,N],[12,"attrs","","",303,N],[12,"ident","","",303,N],[12,"colon_token","","",303,N],[12,"bounds","","",303,N],[12,"eq_token","","",303,N],[12,"default","","",303,N],[3,"ForeignItemType","","A foreign type in an `extern` block: `type void`.",N,N],[12,"attrs","","",304,N],[12,"vis","","",304,N],[12,"type_token","","",304,N],[12,"ident","","",304,N],[12,"semi_token","","",304,N],[3,"ExprReturn","","A `return`, with an optional value to be returned.",N,N],[12,"attrs","","",305,N],[12,"return_token","","",305,N],[12,"expr","","",305,N],[4,"AttrStyle","","Distinguishes between attributes that decorate an item and…",N,N],[13,"Outer","","",306,N],[13,"Inner","","",306,N],[3,"FieldPat","","A single field in a struct pattern.",N,N],[12,"attrs","","",307,N],[12,"member","","",307,N],[12,"colon_token","","",307,N],[12,"pat","","",307,N],[3,"VisRestricted","","A visibility level restricted to some path: `pub(self)` or…",N,N],[12,"pub_token","","",308,N],[12,"paren_token","","",308,N],[12,"in_token","","",308,N],[12,"path","","",308,N],[4,"RangeLimits","","Limit types of a range, inclusive or exclusive.",N,N],[13,"HalfOpen","","Inclusive at the beginning, exclusive at the end.",309,N],[13,"Closed","","Inclusive at the beginning and end.",309,N],[3,"ExprInPlace","","A placement expression: `place <- value`.",N,N],[12,"attrs","","",310,N],[12,"place","","",310,N],[12,"arrow_token","","",310,N],[12,"value","","",310,N],[3,"BareFnArg","","An argument in a function type: the `usize` in `fn(usize)…",N,N],[12,"name","","",311,N],[12,"ty","","",311,N],[3,"ItemTraitAlias","","A trait alias: `pub trait SharableIterator = Iterator +…",N,N],[12,"attrs","","",312,N],[12,"vis","","",312,N],[12,"trait_token","","",312,N],[12,"ident","","",312,N],[12,"generics","","",312,N],[12,"eq_token","","",312,N],[12,"bounds","","",312,N],[12,"semi_token","","",312,N],[3,"PatIdent","","A pattern that binds a new variable: `ref mut binding @…",N,N],[12,"by_ref","","",313,N],[12,"mutability","","",313,N],[12,"ident","","",313,N],[12,"subpat","","",313,N],[6,"MapResult","devise","",N,N],[5,"default_struct_mapper","","",N,[[["derivegenerator"],["derived",["datastruct"]]],["result",["tokenstream","diagnostic"]]]],[3,"Derived","","",N,N],[12,"derive_input","","",314,N],[12,"value","","",314,N],[3,"Fields","","",N,N],[3,"DeriveGenerator","","",N,N],[12,"input","","",315,N],[12,"trait_impl","","",315,N],[12,"trait_path","","",315,N],[3,"GenericSupport","","",N,N],[5,"default_field_mapper","","",N,[[["derivegenerator"],["field"]],["result",["tokenstream","diagnostic"]]]],[5,"default_fields_mapper","","",N,[[["derivegenerator"],["fields"]],["result",["tokenstream","diagnostic"]]]],[6,"Struct","","",N,N],[6,"Result","","",N,N],[5,"default_enum_mapper","","",N,[[["derivegenerator"],["derived",["dataenum"]]],["result",["tokenstream","diagnostic"]]]],[5,"null_enum_mapper","","",N,[[["derivegenerator"],["derived",["dataenum"]]],["result",["tokenstream","diagnostic"]]]],[8,"Spanned","","",N,N],[10,"span","","",316,[[["self"]],["span"]]],[4,"FieldParent","","",N,N],[13,"Variant","","",317,N],[13,"Struct","","",317,N],[13,"Union","","",317,N],[3,"SpanWrapped","","",N,N],[12,"span","","",318,N],[12,"full_span","","",318,N],[12,"value","","",318,N],[6,"Enum","","",N,N],[11,"from","devise::ext","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","devise","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"span","","",6,[[["self"]],["span"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",319,[[["t"]],["t"]]],[11,"into","","",319,[[["self"]],["u"]]],[11,"to_owned","","",319,[[["self"]],["t"]]],[11,"clone_into","","",319,N],[11,"try_from","","",319,[[["u"]],["result"]]],[11,"borrow","","",319,[[["self"]],["t"]]],[11,"borrow_mut","","",319,[[["self"]],["t"]]],[11,"try_into","","",319,[[["self"]],["result"]]],[11,"get_type_id","","",319,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"span","","",9,[[["self"]],["span"]]],[11,"from","devise::syn::token","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"span","","",12,[[["self"]],["span"]]],[11,"peek","","",12,[[["cursor"]],["bool"]]],[11,"display","","",12,[[],["str"]]],[11,"span","","",12,[[["self"]],["span"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"span","","",13,[[["self"]],["span"]]],[11,"peek","","",13,[[["cursor"]],["bool"]]],[11,"display","","",13,[[],["str"]]],[11,"span","","",13,[[["self"]],["span"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"span","","",14,[[["self"]],["span"]]],[11,"peek","","",14,[[["cursor"]],["bool"]]],[11,"display","","",14,[[],["str"]]],[11,"span","","",14,[[["self"]],["span"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"span","","",15,[[["self"]],["span"]]],[11,"peek","","",15,[[["cursor"]],["bool"]]],[11,"display","","",15,[[],["str"]]],[11,"span","","",15,[[["self"]],["span"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"span","","",16,[[["self"]],["span"]]],[11,"peek","","",16,[[["cursor"]],["bool"]]],[11,"display","","",16,[[],["str"]]],[11,"span","","",16,[[["self"]],["span"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"span","","",17,[[["self"]],["span"]]],[11,"peek","","",17,[[["cursor"]],["bool"]]],[11,"display","","",17,[[],["str"]]],[11,"span","","",17,[[["self"]],["span"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"span","","",18,[[["self"]],["span"]]],[11,"peek","","",18,[[["cursor"]],["bool"]]],[11,"display","","",18,[[],["str"]]],[11,"span","","",18,[[["self"]],["span"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"span","","",19,[[["self"]],["span"]]],[11,"peek","","",19,[[["cursor"]],["bool"]]],[11,"display","","",19,[[],["str"]]],[11,"span","","",19,[[["self"]],["span"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"span","","",20,[[["self"]],["span"]]],[11,"peek","","",20,[[["cursor"]],["bool"]]],[11,"display","","",20,[[],["str"]]],[11,"span","","",20,[[["self"]],["span"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"span","","",21,[[["self"]],["span"]]],[11,"peek","","",21,[[["cursor"]],["bool"]]],[11,"display","","",21,[[],["str"]]],[11,"span","","",21,[[["self"]],["span"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"span","","",22,[[["self"]],["span"]]],[11,"peek","","",22,[[["cursor"]],["bool"]]],[11,"display","","",22,[[],["str"]]],[11,"span","","",22,[[["self"]],["span"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"span","","",23,[[["self"]],["span"]]],[11,"peek","","",23,[[["cursor"]],["bool"]]],[11,"display","","",23,[[],["str"]]],[11,"span","","",23,[[["self"]],["span"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"span","","",24,[[["self"]],["span"]]],[11,"peek","","",24,[[["cursor"]],["bool"]]],[11,"display","","",24,[[],["str"]]],[11,"span","","",24,[[["self"]],["span"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"span","","",25,[[["self"]],["span"]]],[11,"peek","","",25,[[["cursor"]],["bool"]]],[11,"display","","",25,[[],["str"]]],[11,"span","","",25,[[["self"]],["span"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"span","","",26,[[["self"]],["span"]]],[11,"peek","","",26,[[["cursor"]],["bool"]]],[11,"display","","",26,[[],["str"]]],[11,"span","","",26,[[["self"]],["span"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,N],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"span","","",27,[[["self"]],["span"]]],[11,"peek","","",27,[[["cursor"]],["bool"]]],[11,"display","","",27,[[],["str"]]],[11,"span","","",27,[[["self"]],["span"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,N],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"span","","",28,[[["self"]],["span"]]],[11,"peek","","",28,[[["cursor"]],["bool"]]],[11,"display","","",28,[[],["str"]]],[11,"span","","",28,[[["self"]],["span"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,N],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"span","","",29,[[["self"]],["span"]]],[11,"peek","","",29,[[["cursor"]],["bool"]]],[11,"display","","",29,[[],["str"]]],[11,"span","","",29,[[["self"]],["span"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,N],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"span","","",30,[[["self"]],["span"]]],[11,"peek","","",30,[[["cursor"]],["bool"]]],[11,"display","","",30,[[],["str"]]],[11,"span","","",30,[[["self"]],["span"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,N],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"span","","",31,[[["self"]],["span"]]],[11,"peek","","",31,[[["cursor"]],["bool"]]],[11,"display","","",31,[[],["str"]]],[11,"span","","",31,[[["self"]],["span"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,N],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"span","","",32,[[["self"]],["span"]]],[11,"peek","","",32,[[["cursor"]],["bool"]]],[11,"display","","",32,[[],["str"]]],[11,"span","","",32,[[["self"]],["span"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,N],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"span","","",33,[[["self"]],["span"]]],[11,"peek","","",33,[[["cursor"]],["bool"]]],[11,"display","","",33,[[],["str"]]],[11,"span","","",33,[[["self"]],["span"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,N],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"span","","",34,[[["self"]],["span"]]],[11,"peek","","",34,[[["cursor"]],["bool"]]],[11,"display","","",34,[[],["str"]]],[11,"span","","",34,[[["self"]],["span"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,N],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"span","","",35,[[["self"]],["span"]]],[11,"peek","","",35,[[["cursor"]],["bool"]]],[11,"display","","",35,[[],["str"]]],[11,"span","","",35,[[["self"]],["span"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,N],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"span","","",36,[[["self"]],["span"]]],[11,"peek","","",36,[[["cursor"]],["bool"]]],[11,"display","","",36,[[],["str"]]],[11,"span","","",36,[[["self"]],["span"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,N],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"span","","",37,[[["self"]],["span"]]],[11,"peek","","",37,[[["cursor"]],["bool"]]],[11,"display","","",37,[[],["str"]]],[11,"span","","",37,[[["self"]],["span"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,N],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"span","","",38,[[["self"]],["span"]]],[11,"peek","","",38,[[["cursor"]],["bool"]]],[11,"display","","",38,[[],["str"]]],[11,"span","","",38,[[["self"]],["span"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,N],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"span","","",39,[[["self"]],["span"]]],[11,"peek","","",39,[[["cursor"]],["bool"]]],[11,"display","","",39,[[],["str"]]],[11,"span","","",39,[[["self"]],["span"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,N],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"span","","",40,[[["self"]],["span"]]],[11,"peek","","",40,[[["cursor"]],["bool"]]],[11,"display","","",40,[[],["str"]]],[11,"span","","",40,[[["self"]],["span"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,N],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"span","","",41,[[["self"]],["span"]]],[11,"peek","","",41,[[["cursor"]],["bool"]]],[11,"display","","",41,[[],["str"]]],[11,"span","","",41,[[["self"]],["span"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,N],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"span","","",42,[[["self"]],["span"]]],[11,"peek","","",42,[[["cursor"]],["bool"]]],[11,"display","","",42,[[],["str"]]],[11,"span","","",42,[[["self"]],["span"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"span","","",43,[[["self"]],["span"]]],[11,"peek","","",43,[[["cursor"]],["bool"]]],[11,"display","","",43,[[],["str"]]],[11,"span","","",43,[[["self"]],["span"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,N],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"span","","",44,[[["self"]],["span"]]],[11,"peek","","",44,[[["cursor"]],["bool"]]],[11,"display","","",44,[[],["str"]]],[11,"span","","",44,[[["self"]],["span"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,N],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"span","","",45,[[["self"]],["span"]]],[11,"peek","","",45,[[["cursor"]],["bool"]]],[11,"display","","",45,[[],["str"]]],[11,"span","","",45,[[["self"]],["span"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,N],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"span","","",46,[[["self"]],["span"]]],[11,"peek","","",46,[[["cursor"]],["bool"]]],[11,"display","","",46,[[],["str"]]],[11,"span","","",46,[[["self"]],["span"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,N],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"span","","",47,[[["self"]],["span"]]],[11,"peek","","",47,[[["cursor"]],["bool"]]],[11,"display","","",47,[[],["str"]]],[11,"span","","",47,[[["self"]],["span"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,N],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"span","","",48,[[["self"]],["span"]]],[11,"peek","","",48,[[["cursor"]],["bool"]]],[11,"display","","",48,[[],["str"]]],[11,"span","","",48,[[["self"]],["span"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,N],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"span","","",49,[[["self"]],["span"]]],[11,"peek","","",49,[[["cursor"]],["bool"]]],[11,"display","","",49,[[],["str"]]],[11,"span","","",49,[[["self"]],["span"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,N],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"span","","",50,[[["self"]],["span"]]],[11,"peek","","",50,[[["cursor"]],["bool"]]],[11,"display","","",50,[[],["str"]]],[11,"span","","",50,[[["self"]],["span"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,N],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"span","","",51,[[["self"]],["span"]]],[11,"peek","","",51,[[["cursor"]],["bool"]]],[11,"display","","",51,[[],["str"]]],[11,"span","","",51,[[["self"]],["span"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,N],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"span","","",52,[[["self"]],["span"]]],[11,"peek","","",52,[[["cursor"]],["bool"]]],[11,"display","","",52,[[],["str"]]],[11,"span","","",52,[[["self"]],["span"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,N],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"span","","",53,[[["self"]],["span"]]],[11,"peek","","",53,[[["cursor"]],["bool"]]],[11,"display","","",53,[[],["str"]]],[11,"span","","",53,[[["self"]],["span"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,N],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"span","","",54,[[["self"]],["span"]]],[11,"peek","","",54,[[["cursor"]],["bool"]]],[11,"display","","",54,[[],["str"]]],[11,"span","","",54,[[["self"]],["span"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,N],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"span","","",55,[[["self"]],["span"]]],[11,"peek","","",55,[[["cursor"]],["bool"]]],[11,"display","","",55,[[],["str"]]],[11,"span","","",55,[[["self"]],["span"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,N],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"span","","",56,[[["self"]],["span"]]],[11,"peek","","",56,[[["cursor"]],["bool"]]],[11,"display","","",56,[[],["str"]]],[11,"span","","",56,[[["self"]],["span"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,N],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"span","","",57,[[["self"]],["span"]]],[11,"peek","","",57,[[["cursor"]],["bool"]]],[11,"display","","",57,[[],["str"]]],[11,"span","","",57,[[["self"]],["span"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,N],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"span","","",58,[[["self"]],["span"]]],[11,"peek","","",58,[[["cursor"]],["bool"]]],[11,"display","","",58,[[],["str"]]],[11,"span","","",58,[[["self"]],["span"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,N],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"span","","",59,[[["self"]],["span"]]],[11,"peek","","",59,[[["cursor"]],["bool"]]],[11,"display","","",59,[[],["str"]]],[11,"span","","",59,[[["self"]],["span"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,N],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"span","","",60,[[["self"]],["span"]]],[11,"peek","","",60,[[["cursor"]],["bool"]]],[11,"display","","",60,[[],["str"]]],[11,"span","","",60,[[["self"]],["span"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,N],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"span","","",61,[[["self"]],["span"]]],[11,"peek","","",61,[[["cursor"]],["bool"]]],[11,"display","","",61,[[],["str"]]],[11,"span","","",61,[[["self"]],["span"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[["self"]],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,N],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"span","","",62,[[["self"]],["span"]]],[11,"peek","","",62,[[["cursor"]],["bool"]]],[11,"display","","",62,[[],["str"]]],[11,"span","","",62,[[["self"]],["span"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[["self"]],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,N],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"span","","",63,[[["self"]],["span"]]],[11,"peek","","",63,[[["cursor"]],["bool"]]],[11,"display","","",63,[[],["str"]]],[11,"span","","",63,[[["self"]],["span"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[["self"]],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,N],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"span","","",64,[[["self"]],["span"]]],[11,"peek","","",64,[[["cursor"]],["bool"]]],[11,"display","","",64,[[],["str"]]],[11,"span","","",64,[[["self"]],["span"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[["self"]],["u"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,N],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"span","","",65,[[["self"]],["span"]]],[11,"peek","","",65,[[["cursor"]],["bool"]]],[11,"display","","",65,[[],["str"]]],[11,"span","","",65,[[["self"]],["span"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[["self"]],["u"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,N],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"span","","",66,[[["self"]],["span"]]],[11,"peek","","",66,[[["cursor"]],["bool"]]],[11,"display","","",66,[[],["str"]]],[11,"span","","",66,[[["self"]],["span"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[["self"]],["u"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,N],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"span","","",67,[[["self"]],["span"]]],[11,"peek","","",67,[[["cursor"]],["bool"]]],[11,"display","","",67,[[],["str"]]],[11,"span","","",67,[[["self"]],["span"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[["self"]],["u"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,N],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"try_into","","",68,[[["self"]],["result"]]],[11,"get_type_id","","",68,[[["self"]],["typeid"]]],[11,"span","","",68,[[["self"]],["span"]]],[11,"peek","","",68,[[["cursor"]],["bool"]]],[11,"display","","",68,[[],["str"]]],[11,"span","","",68,[[["self"]],["span"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[["self"]],["u"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,N],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"try_into","","",69,[[["self"]],["result"]]],[11,"get_type_id","","",69,[[["self"]],["typeid"]]],[11,"span","","",69,[[["self"]],["span"]]],[11,"peek","","",69,[[["cursor"]],["bool"]]],[11,"display","","",69,[[],["str"]]],[11,"span","","",69,[[["self"]],["span"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[["self"]],["u"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,N],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"try_into","","",70,[[["self"]],["result"]]],[11,"get_type_id","","",70,[[["self"]],["typeid"]]],[11,"span","","",70,[[["self"]],["span"]]],[11,"peek","","",70,[[["cursor"]],["bool"]]],[11,"display","","",70,[[],["str"]]],[11,"span","","",70,[[["self"]],["span"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[["self"]],["u"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,N],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"try_into","","",71,[[["self"]],["result"]]],[11,"get_type_id","","",71,[[["self"]],["typeid"]]],[11,"span","","",71,[[["self"]],["span"]]],[11,"peek","","",71,[[["cursor"]],["bool"]]],[11,"display","","",71,[[],["str"]]],[11,"span","","",71,[[["self"]],["span"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[["self"]],["u"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,N],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"try_into","","",72,[[["self"]],["result"]]],[11,"get_type_id","","",72,[[["self"]],["typeid"]]],[11,"span","","",72,[[["self"]],["span"]]],[11,"peek","","",72,[[["cursor"]],["bool"]]],[11,"display","","",72,[[],["str"]]],[11,"span","","",72,[[["self"]],["span"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[["self"]],["u"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,N],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"try_into","","",73,[[["self"]],["result"]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"span","","",73,[[["self"]],["span"]]],[11,"peek","","",73,[[["cursor"]],["bool"]]],[11,"display","","",73,[[],["str"]]],[11,"span","","",73,[[["self"]],["span"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[["self"]],["u"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,N],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"try_into","","",74,[[["self"]],["result"]]],[11,"get_type_id","","",74,[[["self"]],["typeid"]]],[11,"span","","",74,[[["self"]],["span"]]],[11,"peek","","",74,[[["cursor"]],["bool"]]],[11,"display","","",74,[[],["str"]]],[11,"span","","",74,[[["self"]],["span"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[["self"]],["u"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,N],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"try_into","","",75,[[["self"]],["result"]]],[11,"get_type_id","","",75,[[["self"]],["typeid"]]],[11,"span","","",75,[[["self"]],["span"]]],[11,"peek","","",75,[[["cursor"]],["bool"]]],[11,"display","","",75,[[],["str"]]],[11,"span","","",75,[[["self"]],["span"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[["self"]],["u"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,N],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"try_into","","",76,[[["self"]],["result"]]],[11,"get_type_id","","",76,[[["self"]],["typeid"]]],[11,"span","","",76,[[["self"]],["span"]]],[11,"peek","","",76,[[["cursor"]],["bool"]]],[11,"display","","",76,[[],["str"]]],[11,"span","","",76,[[["self"]],["span"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[["self"]],["u"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,N],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"try_into","","",77,[[["self"]],["result"]]],[11,"get_type_id","","",77,[[["self"]],["typeid"]]],[11,"span","","",77,[[["self"]],["span"]]],[11,"peek","","",77,[[["cursor"]],["bool"]]],[11,"display","","",77,[[],["str"]]],[11,"span","","",77,[[["self"]],["span"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[["self"]],["u"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,N],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"try_into","","",78,[[["self"]],["result"]]],[11,"get_type_id","","",78,[[["self"]],["typeid"]]],[11,"span","","",78,[[["self"]],["span"]]],[11,"peek","","",78,[[["cursor"]],["bool"]]],[11,"display","","",78,[[],["str"]]],[11,"span","","",78,[[["self"]],["span"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[["self"]],["u"]]],[11,"to_owned","","",79,[[["self"]],["t"]]],[11,"clone_into","","",79,N],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"try_into","","",79,[[["self"]],["result"]]],[11,"get_type_id","","",79,[[["self"]],["typeid"]]],[11,"span","","",79,[[["self"]],["span"]]],[11,"peek","","",79,[[["cursor"]],["bool"]]],[11,"display","","",79,[[],["str"]]],[11,"span","","",79,[[["self"]],["span"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[["self"]],["u"]]],[11,"to_owned","","",80,[[["self"]],["t"]]],[11,"clone_into","","",80,N],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"try_into","","",80,[[["self"]],["result"]]],[11,"get_type_id","","",80,[[["self"]],["typeid"]]],[11,"span","","",80,[[["self"]],["span"]]],[11,"peek","","",80,[[["cursor"]],["bool"]]],[11,"display","","",80,[[],["str"]]],[11,"span","","",80,[[["self"]],["span"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[["self"]],["u"]]],[11,"to_owned","","",81,[[["self"]],["t"]]],[11,"clone_into","","",81,N],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"try_into","","",81,[[["self"]],["result"]]],[11,"get_type_id","","",81,[[["self"]],["typeid"]]],[11,"span","","",81,[[["self"]],["span"]]],[11,"peek","","",81,[[["cursor"]],["bool"]]],[11,"display","","",81,[[],["str"]]],[11,"span","","",81,[[["self"]],["span"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[["self"]],["u"]]],[11,"to_owned","","",82,[[["self"]],["t"]]],[11,"clone_into","","",82,N],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"try_into","","",82,[[["self"]],["result"]]],[11,"get_type_id","","",82,[[["self"]],["typeid"]]],[11,"span","","",82,[[["self"]],["span"]]],[11,"peek","","",82,[[["cursor"]],["bool"]]],[11,"display","","",82,[[],["str"]]],[11,"span","","",82,[[["self"]],["span"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[["self"]],["u"]]],[11,"to_owned","","",83,[[["self"]],["t"]]],[11,"clone_into","","",83,N],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"try_into","","",83,[[["self"]],["result"]]],[11,"get_type_id","","",83,[[["self"]],["typeid"]]],[11,"span","","",83,[[["self"]],["span"]]],[11,"peek","","",83,[[["cursor"]],["bool"]]],[11,"display","","",83,[[],["str"]]],[11,"span","","",83,[[["self"]],["span"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[["self"]],["u"]]],[11,"to_owned","","",84,[[["self"]],["t"]]],[11,"clone_into","","",84,N],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"try_into","","",84,[[["self"]],["result"]]],[11,"get_type_id","","",84,[[["self"]],["typeid"]]],[11,"span","","",84,[[["self"]],["span"]]],[11,"peek","","",84,[[["cursor"]],["bool"]]],[11,"display","","",84,[[],["str"]]],[11,"span","","",84,[[["self"]],["span"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[["self"]],["u"]]],[11,"to_owned","","",85,[[["self"]],["t"]]],[11,"clone_into","","",85,N],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"try_into","","",85,[[["self"]],["result"]]],[11,"get_type_id","","",85,[[["self"]],["typeid"]]],[11,"span","","",85,[[["self"]],["span"]]],[11,"peek","","",85,[[["cursor"]],["bool"]]],[11,"display","","",85,[[],["str"]]],[11,"span","","",85,[[["self"]],["span"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[["self"]],["u"]]],[11,"to_owned","","",86,[[["self"]],["t"]]],[11,"clone_into","","",86,N],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"try_into","","",86,[[["self"]],["result"]]],[11,"get_type_id","","",86,[[["self"]],["typeid"]]],[11,"span","","",86,[[["self"]],["span"]]],[11,"peek","","",86,[[["cursor"]],["bool"]]],[11,"display","","",86,[[],["str"]]],[11,"span","","",86,[[["self"]],["span"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[["self"]],["u"]]],[11,"to_owned","","",87,[[["self"]],["t"]]],[11,"clone_into","","",87,N],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"try_into","","",87,[[["self"]],["result"]]],[11,"get_type_id","","",87,[[["self"]],["typeid"]]],[11,"span","","",87,[[["self"]],["span"]]],[11,"peek","","",87,[[["cursor"]],["bool"]]],[11,"display","","",87,[[],["str"]]],[11,"span","","",87,[[["self"]],["span"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"into","","",88,[[["self"]],["u"]]],[11,"to_owned","","",88,[[["self"]],["t"]]],[11,"clone_into","","",88,N],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"try_into","","",88,[[["self"]],["result"]]],[11,"get_type_id","","",88,[[["self"]],["typeid"]]],[11,"span","","",88,[[["self"]],["span"]]],[11,"peek","","",88,[[["cursor"]],["bool"]]],[11,"display","","",88,[[],["str"]]],[11,"span","","",88,[[["self"]],["span"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"into","","",89,[[["self"]],["u"]]],[11,"to_owned","","",89,[[["self"]],["t"]]],[11,"clone_into","","",89,N],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"try_into","","",89,[[["self"]],["result"]]],[11,"get_type_id","","",89,[[["self"]],["typeid"]]],[11,"span","","",89,[[["self"]],["span"]]],[11,"peek","","",89,[[["cursor"]],["bool"]]],[11,"display","","",89,[[],["str"]]],[11,"span","","",89,[[["self"]],["span"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[["self"]],["u"]]],[11,"to_owned","","",90,[[["self"]],["t"]]],[11,"clone_into","","",90,N],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"try_into","","",90,[[["self"]],["result"]]],[11,"get_type_id","","",90,[[["self"]],["typeid"]]],[11,"span","","",90,[[["self"]],["span"]]],[11,"peek","","",90,[[["cursor"]],["bool"]]],[11,"display","","",90,[[],["str"]]],[11,"span","","",90,[[["self"]],["span"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"into","","",91,[[["self"]],["u"]]],[11,"to_owned","","",91,[[["self"]],["t"]]],[11,"clone_into","","",91,N],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"try_into","","",91,[[["self"]],["result"]]],[11,"get_type_id","","",91,[[["self"]],["typeid"]]],[11,"span","","",91,[[["self"]],["span"]]],[11,"peek","","",91,[[["cursor"]],["bool"]]],[11,"display","","",91,[[],["str"]]],[11,"span","","",91,[[["self"]],["span"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"into","","",92,[[["self"]],["u"]]],[11,"to_owned","","",92,[[["self"]],["t"]]],[11,"clone_into","","",92,N],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"try_into","","",92,[[["self"]],["result"]]],[11,"get_type_id","","",92,[[["self"]],["typeid"]]],[11,"span","","",92,[[["self"]],["span"]]],[11,"peek","","",92,[[["cursor"]],["bool"]]],[11,"display","","",92,[[],["str"]]],[11,"span","","",92,[[["self"]],["span"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"into","","",93,[[["self"]],["u"]]],[11,"to_owned","","",93,[[["self"]],["t"]]],[11,"clone_into","","",93,N],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"try_into","","",93,[[["self"]],["result"]]],[11,"get_type_id","","",93,[[["self"]],["typeid"]]],[11,"span","","",93,[[["self"]],["span"]]],[11,"peek","","",93,[[["cursor"]],["bool"]]],[11,"display","","",93,[[],["str"]]],[11,"span","","",93,[[["self"]],["span"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"into","","",94,[[["self"]],["u"]]],[11,"to_owned","","",94,[[["self"]],["t"]]],[11,"clone_into","","",94,N],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"try_into","","",94,[[["self"]],["result"]]],[11,"get_type_id","","",94,[[["self"]],["typeid"]]],[11,"span","","",94,[[["self"]],["span"]]],[11,"peek","","",94,[[["cursor"]],["bool"]]],[11,"display","","",94,[[],["str"]]],[11,"span","","",94,[[["self"]],["span"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"into","","",95,[[["self"]],["u"]]],[11,"to_owned","","",95,[[["self"]],["t"]]],[11,"clone_into","","",95,N],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"try_into","","",95,[[["self"]],["result"]]],[11,"get_type_id","","",95,[[["self"]],["typeid"]]],[11,"span","","",95,[[["self"]],["span"]]],[11,"peek","","",95,[[["cursor"]],["bool"]]],[11,"display","","",95,[[],["str"]]],[11,"span","","",95,[[["self"]],["span"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"into","","",96,[[["self"]],["u"]]],[11,"to_owned","","",96,[[["self"]],["t"]]],[11,"clone_into","","",96,N],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"try_into","","",96,[[["self"]],["result"]]],[11,"get_type_id","","",96,[[["self"]],["typeid"]]],[11,"span","","",96,[[["self"]],["span"]]],[11,"peek","","",96,[[["cursor"]],["bool"]]],[11,"display","","",96,[[],["str"]]],[11,"span","","",96,[[["self"]],["span"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"into","","",97,[[["self"]],["u"]]],[11,"to_owned","","",97,[[["self"]],["t"]]],[11,"clone_into","","",97,N],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"try_into","","",97,[[["self"]],["result"]]],[11,"get_type_id","","",97,[[["self"]],["typeid"]]],[11,"span","","",97,[[["self"]],["span"]]],[11,"peek","","",97,[[["cursor"]],["bool"]]],[11,"display","","",97,[[],["str"]]],[11,"span","","",97,[[["self"]],["span"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"into","","",98,[[["self"]],["u"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,N],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"try_into","","",98,[[["self"]],["result"]]],[11,"get_type_id","","",98,[[["self"]],["typeid"]]],[11,"span","","",98,[[["self"]],["span"]]],[11,"peek","","",98,[[["cursor"]],["bool"]]],[11,"display","","",98,[[],["str"]]],[11,"span","","",98,[[["self"]],["span"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"into","","",99,[[["self"]],["u"]]],[11,"to_owned","","",99,[[["self"]],["t"]]],[11,"clone_into","","",99,N],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"try_into","","",99,[[["self"]],["result"]]],[11,"get_type_id","","",99,[[["self"]],["typeid"]]],[11,"span","","",99,[[["self"]],["span"]]],[11,"peek","","",99,[[["cursor"]],["bool"]]],[11,"display","","",99,[[],["str"]]],[11,"span","","",99,[[["self"]],["span"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"into","","",100,[[["self"]],["u"]]],[11,"to_owned","","",100,[[["self"]],["t"]]],[11,"clone_into","","",100,N],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"try_into","","",100,[[["self"]],["result"]]],[11,"get_type_id","","",100,[[["self"]],["typeid"]]],[11,"span","","",100,[[["self"]],["span"]]],[11,"peek","","",100,[[["cursor"]],["bool"]]],[11,"display","","",100,[[],["str"]]],[11,"span","","",100,[[["self"]],["span"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"into","","",101,[[["self"]],["u"]]],[11,"to_owned","","",101,[[["self"]],["t"]]],[11,"clone_into","","",101,N],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"try_into","","",101,[[["self"]],["result"]]],[11,"get_type_id","","",101,[[["self"]],["typeid"]]],[11,"span","","",101,[[["self"]],["span"]]],[11,"peek","","",101,[[["cursor"]],["bool"]]],[11,"display","","",101,[[],["str"]]],[11,"span","","",101,[[["self"]],["span"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"into","","",102,[[["self"]],["u"]]],[11,"to_owned","","",102,[[["self"]],["t"]]],[11,"clone_into","","",102,N],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"try_into","","",102,[[["self"]],["result"]]],[11,"get_type_id","","",102,[[["self"]],["typeid"]]],[11,"span","","",102,[[["self"]],["span"]]],[11,"peek","","",102,[[["cursor"]],["bool"]]],[11,"display","","",102,[[],["str"]]],[11,"span","","",102,[[["self"]],["span"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"into","","",103,[[["self"]],["u"]]],[11,"to_owned","","",103,[[["self"]],["t"]]],[11,"clone_into","","",103,N],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"try_into","","",103,[[["self"]],["result"]]],[11,"get_type_id","","",103,[[["self"]],["typeid"]]],[11,"span","","",103,[[["self"]],["span"]]],[11,"peek","","",103,[[["cursor"]],["bool"]]],[11,"display","","",103,[[],["str"]]],[11,"span","","",103,[[["self"]],["span"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"into","","",104,[[["self"]],["u"]]],[11,"to_owned","","",104,[[["self"]],["t"]]],[11,"clone_into","","",104,N],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"try_into","","",104,[[["self"]],["result"]]],[11,"get_type_id","","",104,[[["self"]],["typeid"]]],[11,"span","","",104,[[["self"]],["span"]]],[11,"peek","","",104,[[["cursor"]],["bool"]]],[11,"display","","",104,[[],["str"]]],[11,"span","","",104,[[["self"]],["span"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"into","","",105,[[["self"]],["u"]]],[11,"to_owned","","",105,[[["self"]],["t"]]],[11,"clone_into","","",105,N],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"try_into","","",105,[[["self"]],["result"]]],[11,"get_type_id","","",105,[[["self"]],["typeid"]]],[11,"span","","",105,[[["self"]],["span"]]],[11,"peek","","",105,[[["cursor"]],["bool"]]],[11,"display","","",105,[[],["str"]]],[11,"span","","",105,[[["self"]],["span"]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"into","","",106,[[["self"]],["u"]]],[11,"to_owned","","",106,[[["self"]],["t"]]],[11,"clone_into","","",106,N],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"try_into","","",106,[[["self"]],["result"]]],[11,"get_type_id","","",106,[[["self"]],["typeid"]]],[11,"span","","",106,[[["self"]],["span"]]],[11,"peek","","",106,[[["cursor"]],["bool"]]],[11,"display","","",106,[[],["str"]]],[11,"span","","",106,[[["self"]],["span"]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"into","","",107,[[["self"]],["u"]]],[11,"to_owned","","",107,[[["self"]],["t"]]],[11,"clone_into","","",107,N],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"try_into","","",107,[[["self"]],["result"]]],[11,"get_type_id","","",107,[[["self"]],["typeid"]]],[11,"span","","",107,[[["self"]],["span"]]],[11,"peek","","",107,[[["cursor"]],["bool"]]],[11,"display","","",107,[[],["str"]]],[11,"span","","",107,[[["self"]],["span"]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"into","","",108,[[["self"]],["u"]]],[11,"to_owned","","",108,[[["self"]],["t"]]],[11,"clone_into","","",108,N],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"try_into","","",108,[[["self"]],["result"]]],[11,"get_type_id","","",108,[[["self"]],["typeid"]]],[11,"span","","",108,[[["self"]],["span"]]],[11,"peek","","",108,[[["cursor"]],["bool"]]],[11,"display","","",108,[[],["str"]]],[11,"span","","",108,[[["self"]],["span"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"into","","",109,[[["self"]],["u"]]],[11,"to_owned","","",109,[[["self"]],["t"]]],[11,"clone_into","","",109,N],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"try_into","","",109,[[["self"]],["result"]]],[11,"get_type_id","","",109,[[["self"]],["typeid"]]],[11,"span","","",109,[[["self"]],["span"]]],[11,"peek","","",109,[[["cursor"]],["bool"]]],[11,"display","","",109,[[],["str"]]],[11,"span","","",109,[[["self"]],["span"]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"into","","",110,[[["self"]],["u"]]],[11,"to_owned","","",110,[[["self"]],["t"]]],[11,"clone_into","","",110,N],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"try_into","","",110,[[["self"]],["result"]]],[11,"get_type_id","","",110,[[["self"]],["typeid"]]],[11,"span","","",110,[[["self"]],["span"]]],[11,"peek","","",110,[[["cursor"]],["bool"]]],[11,"display","","",110,[[],["str"]]],[11,"span","","",110,[[["self"]],["span"]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"into","","",111,[[["self"]],["u"]]],[11,"to_owned","","",111,[[["self"]],["t"]]],[11,"clone_into","","",111,N],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"try_into","","",111,[[["self"]],["result"]]],[11,"get_type_id","","",111,[[["self"]],["typeid"]]],[11,"peek","","",111,[[["cursor"]],["bool"]]],[11,"display","","",111,[[],["str"]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"into","","",112,[[["self"]],["u"]]],[11,"to_owned","","",112,[[["self"]],["t"]]],[11,"clone_into","","",112,N],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"try_into","","",112,[[["self"]],["result"]]],[11,"get_type_id","","",112,[[["self"]],["typeid"]]],[11,"peek","","",112,[[["cursor"]],["bool"]]],[11,"display","","",112,[[],["str"]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"into","","",113,[[["self"]],["u"]]],[11,"to_owned","","",113,[[["self"]],["t"]]],[11,"clone_into","","",113,N],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"try_into","","",113,[[["self"]],["result"]]],[11,"get_type_id","","",113,[[["self"]],["typeid"]]],[11,"peek","","",113,[[["cursor"]],["bool"]]],[11,"display","","",113,[[],["str"]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"into","","",114,[[["self"]],["u"]]],[11,"to_owned","","",114,[[["self"]],["t"]]],[11,"clone_into","","",114,N],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"try_into","","",114,[[["self"]],["result"]]],[11,"get_type_id","","",114,[[["self"]],["typeid"]]],[11,"peek","","",114,[[["cursor"]],["bool"]]],[11,"display","","",114,[[],["str"]]],[11,"from","devise::syn::buffer","",320,[[["t"]],["t"]]],[11,"into","","",320,[[["self"]],["u"]]],[11,"try_from","","",320,[[["u"]],["result"]]],[11,"borrow","","",320,[[["self"]],["t"]]],[11,"borrow_mut","","",320,[[["self"]],["t"]]],[11,"try_into","","",320,[[["self"]],["result"]]],[11,"get_type_id","","",320,[[["self"]],["typeid"]]],[11,"from","","",321,[[["t"]],["t"]]],[11,"into","","",321,[[["self"]],["u"]]],[11,"to_owned","","",321,[[["self"]],["t"]]],[11,"clone_into","","",321,N],[11,"try_from","","",321,[[["u"]],["result"]]],[11,"borrow","","",321,[[["self"]],["t"]]],[11,"borrow_mut","","",321,[[["self"]],["t"]]],[11,"try_into","","",321,[[["self"]],["result"]]],[11,"get_type_id","","",321,[[["self"]],["typeid"]]],[11,"from","devise::syn::punctuated","",322,[[["t"]],["t"]]],[11,"into_iter","","",322,[[["self"]],["i"]]],[11,"into","","",322,[[["self"]],["u"]]],[11,"to_owned","","",322,[[["self"]],["t"]]],[11,"clone_into","","",322,N],[11,"try_from","","",322,[[["u"]],["result"]]],[11,"borrow","","",322,[[["self"]],["t"]]],[11,"borrow_mut","","",322,[[["self"]],["t"]]],[11,"try_into","","",322,[[["self"]],["result"]]],[11,"get_type_id","","",322,[[["self"]],["typeid"]]],[11,"span","","",322,[[["self"]],["span"]]],[11,"span","","",322,[[["self"]],["span"]]],[11,"from","","",323,[[["t"]],["t"]]],[11,"into_iter","","",323,[[["self"]],["i"]]],[11,"into","","",323,[[["self"]],["u"]]],[11,"try_from","","",323,[[["u"]],["result"]]],[11,"borrow","","",323,[[["self"]],["t"]]],[11,"borrow_mut","","",323,[[["self"]],["t"]]],[11,"try_into","","",323,[[["self"]],["result"]]],[11,"get_type_id","","",323,[[["self"]],["typeid"]]],[11,"from","","",324,[[["t"]],["t"]]],[11,"into_iter","","",324,[[["self"]],["i"]]],[11,"into","","",324,[[["self"]],["u"]]],[11,"try_from","","",324,[[["u"]],["result"]]],[11,"borrow","","",324,[[["self"]],["t"]]],[11,"borrow_mut","","",324,[[["self"]],["t"]]],[11,"try_into","","",324,[[["self"]],["result"]]],[11,"get_type_id","","",324,[[["self"]],["typeid"]]],[11,"from","","",325,[[["t"]],["t"]]],[11,"into_iter","","",325,[[["self"]],["i"]]],[11,"into","","",325,[[["self"]],["u"]]],[11,"try_from","","",325,[[["u"]],["result"]]],[11,"borrow","","",325,[[["self"]],["t"]]],[11,"borrow_mut","","",325,[[["self"]],["t"]]],[11,"try_into","","",325,[[["self"]],["result"]]],[11,"get_type_id","","",325,[[["self"]],["typeid"]]],[11,"from","","",326,[[["t"]],["t"]]],[11,"into_iter","","",326,[[["self"]],["i"]]],[11,"into","","",326,[[["self"]],["u"]]],[11,"try_from","","",326,[[["u"]],["result"]]],[11,"borrow","","",326,[[["self"]],["t"]]],[11,"borrow_mut","","",326,[[["self"]],["t"]]],[11,"try_into","","",326,[[["self"]],["result"]]],[11,"get_type_id","","",326,[[["self"]],["typeid"]]],[11,"split2","","",326,N],[11,"split3","","",326,N],[11,"from","","",327,[[["t"]],["t"]]],[11,"into_iter","","",327,[[["self"]],["i"]]],[11,"into","","",327,[[["self"]],["u"]]],[11,"try_from","","",327,[[["u"]],["result"]]],[11,"borrow","","",327,[[["self"]],["t"]]],[11,"borrow_mut","","",327,[[["self"]],["t"]]],[11,"try_into","","",327,[[["self"]],["result"]]],[11,"get_type_id","","",327,[[["self"]],["typeid"]]],[11,"from","","",328,[[["t"]],["t"]]],[11,"into_iter","","",328,[[["self"]],["i"]]],[11,"into","","",328,[[["self"]],["u"]]],[11,"try_from","","",328,[[["u"]],["result"]]],[11,"borrow","","",328,[[["self"]],["t"]]],[11,"borrow_mut","","",328,[[["self"]],["t"]]],[11,"try_into","","",328,[[["self"]],["result"]]],[11,"get_type_id","","",328,[[["self"]],["typeid"]]],[11,"from","","",116,[[["t"]],["t"]]],[11,"into","","",116,[[["self"]],["u"]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"try_into","","",116,[[["self"]],["result"]]],[11,"get_type_id","","",116,[[["self"]],["typeid"]]],[11,"span","","",116,[[["self"]],["span"]]],[11,"span","","",116,[[["self"]],["span"]]],[11,"from","devise::syn::parse","",329,[[["t"]],["t"]]],[11,"into","","",329,[[["self"]],["u"]]],[11,"to_string","","",329,[[["self"]],["string"]]],[11,"try_from","","",329,[[["u"]],["result"]]],[11,"borrow","","",329,[[["self"]],["t"]]],[11,"borrow_mut","","",329,[[["self"]],["t"]]],[11,"try_into","","",329,[[["self"]],["result"]]],[11,"get_type_id","","",329,[[["self"]],["typeid"]]],[11,"from","","",330,[[["t"]],["t"]]],[11,"into","","",330,[[["self"]],["u"]]],[11,"to_owned","","",330,[[["self"]],["t"]]],[11,"clone_into","","",330,N],[11,"try_from","","",330,[[["u"]],["result"]]],[11,"borrow","","",330,[[["self"]],["t"]]],[11,"borrow_mut","","",330,[[["self"]],["t"]]],[11,"try_into","","",330,[[["self"]],["result"]]],[11,"get_type_id","","",330,[[["self"]],["typeid"]]],[11,"from","","",331,[[["t"]],["t"]]],[11,"into","","",331,[[["self"]],["u"]]],[11,"to_owned","","",331,[[["self"]],["t"]]],[11,"clone_into","","",331,N],[11,"to_string","","",331,[[["self"]],["string"]]],[11,"try_from","","",331,[[["u"]],["result"]]],[11,"borrow","","",331,[[["self"]],["t"]]],[11,"borrow_mut","","",331,[[["self"]],["t"]]],[11,"try_into","","",331,[[["self"]],["result"]]],[11,"get_type_id","","",331,[[["self"]],["typeid"]]],[11,"from","","",332,[[["t"]],["t"]]],[11,"into","","",332,[[["self"]],["u"]]],[11,"try_from","","",332,[[["u"]],["result"]]],[11,"borrow","","",332,[[["self"]],["t"]]],[11,"borrow_mut","","",332,[[["self"]],["t"]]],[11,"try_into","","",332,[[["self"]],["result"]]],[11,"get_type_id","","",332,[[["self"]],["typeid"]]],[11,"from","devise::syn","",120,[[["t"]],["t"]]],[11,"into","","",120,[[["self"]],["u"]]],[11,"to_owned","","",120,[[["self"]],["t"]]],[11,"clone_into","","",120,N],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"try_into","","",120,[[["self"]],["result"]]],[11,"get_type_id","","",120,[[["self"]],["typeid"]]],[11,"span","","",120,[[["self"]],["span"]]],[11,"span","","",120,[[["self"]],["span"]]],[11,"from","","",121,[[["t"]],["t"]]],[11,"into","","",121,[[["self"]],["u"]]],[11,"to_owned","","",121,[[["self"]],["t"]]],[11,"clone_into","","",121,N],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"try_into","","",121,[[["self"]],["result"]]],[11,"get_type_id","","",121,[[["self"]],["typeid"]]],[11,"span","","",121,[[["self"]],["span"]]],[11,"span","","",121,[[["self"]],["span"]]],[11,"from","","",122,[[["t"]],["t"]]],[11,"into","","",122,[[["self"]],["u"]]],[11,"to_owned","","",122,[[["self"]],["t"]]],[11,"clone_into","","",122,N],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"try_into","","",122,[[["self"]],["result"]]],[11,"get_type_id","","",122,[[["self"]],["typeid"]]],[11,"span","","",122,[[["self"]],["span"]]],[11,"span","","",122,[[["self"]],["span"]]],[11,"from","","",123,[[["t"]],["t"]]],[11,"into","","",123,[[["self"]],["u"]]],[11,"to_owned","","",123,[[["self"]],["t"]]],[11,"clone_into","","",123,N],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"try_into","","",123,[[["self"]],["result"]]],[11,"get_type_id","","",123,[[["self"]],["typeid"]]],[11,"span","","",123,[[["self"]],["span"]]],[11,"span","","",123,[[["self"]],["span"]]],[11,"from","","",124,[[["t"]],["t"]]],[11,"into","","",124,[[["self"]],["u"]]],[11,"to_owned","","",124,[[["self"]],["t"]]],[11,"clone_into","","",124,N],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"try_into","","",124,[[["self"]],["result"]]],[11,"get_type_id","","",124,[[["self"]],["typeid"]]],[11,"span","","",124,[[["self"]],["span"]]],[11,"span","","",124,[[["self"]],["span"]]],[11,"from","","",125,[[["t"]],["t"]]],[11,"into","","",125,[[["self"]],["u"]]],[11,"to_owned","","",125,[[["self"]],["t"]]],[11,"clone_into","","",125,N],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"try_into","","",125,[[["self"]],["result"]]],[11,"get_type_id","","",125,[[["self"]],["typeid"]]],[11,"span","","",125,[[["self"]],["span"]]],[11,"span","","",125,[[["self"]],["span"]]],[11,"from","","",126,[[["t"]],["t"]]],[11,"into","","",126,[[["self"]],["u"]]],[11,"to_owned","","",126,[[["self"]],["t"]]],[11,"clone_into","","",126,N],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"try_into","","",126,[[["self"]],["result"]]],[11,"get_type_id","","",126,[[["self"]],["typeid"]]],[11,"span","","",126,[[["self"]],["span"]]],[11,"span","","",126,[[["self"]],["span"]]],[11,"from","","",127,[[["t"]],["t"]]],[11,"into","","",127,[[["self"]],["u"]]],[11,"to_owned","","",127,[[["self"]],["t"]]],[11,"clone_into","","",127,N],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"try_into","","",127,[[["self"]],["result"]]],[11,"get_type_id","","",127,[[["self"]],["typeid"]]],[11,"span","","",127,[[["self"]],["span"]]],[11,"span","","",127,[[["self"]],["span"]]],[11,"from","","",128,[[["t"]],["t"]]],[11,"into","","",128,[[["self"]],["u"]]],[11,"to_owned","","",128,[[["self"]],["t"]]],[11,"clone_into","","",128,N],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"try_into","","",128,[[["self"]],["result"]]],[11,"get_type_id","","",128,[[["self"]],["typeid"]]],[11,"span","","",128,[[["self"]],["span"]]],[11,"span","","",128,[[["self"]],["span"]]],[11,"from","","",129,[[["t"]],["t"]]],[11,"into","","",129,[[["self"]],["u"]]],[11,"to_owned","","",129,[[["self"]],["t"]]],[11,"clone_into","","",129,N],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"try_into","","",129,[[["self"]],["result"]]],[11,"get_type_id","","",129,[[["self"]],["typeid"]]],[11,"span","","",129,[[["self"]],["span"]]],[11,"peek","","",129,[[["cursor"]],["bool"]]],[11,"display","","",129,[[],["str"]]],[11,"span","","",129,[[["self"]],["span"]]],[11,"from","","",130,[[["t"]],["t"]]],[11,"into","","",130,[[["self"]],["u"]]],[11,"to_owned","","",130,[[["self"]],["t"]]],[11,"clone_into","","",130,N],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"try_into","","",130,[[["self"]],["result"]]],[11,"get_type_id","","",130,[[["self"]],["typeid"]]],[11,"span","","",130,[[["self"]],["span"]]],[11,"span","","",130,[[["self"]],["span"]]],[11,"from","","",131,[[["t"]],["t"]]],[11,"into","","",131,[[["self"]],["u"]]],[11,"to_owned","","",131,[[["self"]],["t"]]],[11,"clone_into","","",131,N],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"try_into","","",131,[[["self"]],["result"]]],[11,"get_type_id","","",131,[[["self"]],["typeid"]]],[11,"span","","",131,[[["self"]],["span"]]],[11,"span","","",131,[[["self"]],["span"]]],[11,"from","","",132,[[["t"]],["t"]]],[11,"into","","",132,[[["self"]],["u"]]],[11,"to_owned","","",132,[[["self"]],["t"]]],[11,"clone_into","","",132,N],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"try_into","","",132,[[["self"]],["result"]]],[11,"get_type_id","","",132,[[["self"]],["typeid"]]],[11,"from","","",133,[[["t"]],["t"]]],[11,"into","","",133,[[["self"]],["u"]]],[11,"to_owned","","",133,[[["self"]],["t"]]],[11,"clone_into","","",133,N],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"try_into","","",133,[[["self"]],["result"]]],[11,"get_type_id","","",133,[[["self"]],["typeid"]]],[11,"span","","",133,[[["self"]],["span"]]],[11,"span","","",133,[[["self"]],["span"]]],[11,"from","","",134,[[["t"]],["t"]]],[11,"into","","",134,[[["self"]],["u"]]],[11,"to_owned","","",134,[[["self"]],["t"]]],[11,"clone_into","","",134,N],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"try_into","","",134,[[["self"]],["result"]]],[11,"get_type_id","","",134,[[["self"]],["typeid"]]],[11,"span","","",134,[[["self"]],["span"]]],[11,"span","","",134,[[["self"]],["span"]]],[11,"from","","",135,[[["t"]],["t"]]],[11,"into","","",135,[[["self"]],["u"]]],[11,"to_owned","","",135,[[["self"]],["t"]]],[11,"clone_into","","",135,N],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"try_into","","",135,[[["self"]],["result"]]],[11,"get_type_id","","",135,[[["self"]],["typeid"]]],[11,"span","","",135,[[["self"]],["span"]]],[11,"span","","",135,[[["self"]],["span"]]],[11,"from","","",136,[[["t"]],["t"]]],[11,"into","","",136,[[["self"]],["u"]]],[11,"to_owned","","",136,[[["self"]],["t"]]],[11,"clone_into","","",136,N],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"try_into","","",136,[[["self"]],["result"]]],[11,"get_type_id","","",136,[[["self"]],["typeid"]]],[11,"span","","",136,[[["self"]],["span"]]],[11,"span","","",136,[[["self"]],["span"]]],[11,"from","","",333,[[["t"]],["t"]]],[11,"into","","",333,[[["self"]],["u"]]],[11,"to_owned","","",333,[[["self"]],["t"]]],[11,"clone_into","","",333,N],[11,"try_from","","",333,[[["u"]],["result"]]],[11,"borrow","","",333,[[["self"]],["t"]]],[11,"borrow_mut","","",333,[[["self"]],["t"]]],[11,"try_into","","",333,[[["self"]],["result"]]],[11,"get_type_id","","",333,[[["self"]],["typeid"]]],[11,"span","","",333,[[["self"]],["span"]]],[11,"peek","","",333,[[["cursor"]],["bool"]]],[11,"display","","",333,[[],["str"]]],[11,"span","","",333,[[["self"]],["span"]]],[11,"from","","",137,[[["t"]],["t"]]],[11,"into","","",137,[[["self"]],["u"]]],[11,"to_owned","","",137,[[["self"]],["t"]]],[11,"clone_into","","",137,N],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"try_into","","",137,[[["self"]],["result"]]],[11,"get_type_id","","",137,[[["self"]],["typeid"]]],[11,"span","","",137,[[["self"]],["span"]]],[11,"span","","",137,[[["self"]],["span"]]],[11,"from","","",138,[[["t"]],["t"]]],[11,"into","","",138,[[["self"]],["u"]]],[11,"to_owned","","",138,[[["self"]],["t"]]],[11,"clone_into","","",138,N],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"try_into","","",138,[[["self"]],["result"]]],[11,"get_type_id","","",138,[[["self"]],["typeid"]]],[11,"span","","",138,[[["self"]],["span"]]],[11,"span","","",138,[[["self"]],["span"]]],[11,"from","","",139,[[["t"]],["t"]]],[11,"into","","",139,[[["self"]],["u"]]],[11,"to_owned","","",139,[[["self"]],["t"]]],[11,"clone_into","","",139,N],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"try_into","","",139,[[["self"]],["result"]]],[11,"get_type_id","","",139,[[["self"]],["typeid"]]],[11,"span","","",139,[[["self"]],["span"]]],[11,"span","","",139,[[["self"]],["span"]]],[11,"from","","",140,[[["t"]],["t"]]],[11,"into","","",140,[[["self"]],["u"]]],[11,"to_owned","","",140,[[["self"]],["t"]]],[11,"clone_into","","",140,N],[11,"try_from","","",140,[[["u"]],["result"]]],[11,"borrow","","",140,[[["self"]],["t"]]],[11,"borrow_mut","","",140,[[["self"]],["t"]]],[11,"try_into","","",140,[[["self"]],["result"]]],[11,"get_type_id","","",140,[[["self"]],["typeid"]]],[11,"span","","",140,[[["self"]],["span"]]],[11,"span","","",140,[[["self"]],["span"]]],[11,"from","","",141,[[["t"]],["t"]]],[11,"into","","",141,[[["self"]],["u"]]],[11,"to_owned","","",141,[[["self"]],["t"]]],[11,"clone_into","","",141,N],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"try_into","","",141,[[["self"]],["result"]]],[11,"get_type_id","","",141,[[["self"]],["typeid"]]],[11,"span","","",141,[[["self"]],["span"]]],[11,"span","","",141,[[["self"]],["span"]]],[11,"from","","",142,[[["t"]],["t"]]],[11,"into","","",142,[[["self"]],["u"]]],[11,"to_owned","","",142,[[["self"]],["t"]]],[11,"clone_into","","",142,N],[11,"try_from","","",142,[[["u"]],["result"]]],[11,"borrow","","",142,[[["self"]],["t"]]],[11,"borrow_mut","","",142,[[["self"]],["t"]]],[11,"try_into","","",142,[[["self"]],["result"]]],[11,"get_type_id","","",142,[[["self"]],["typeid"]]],[11,"span","","",142,[[["self"]],["span"]]],[11,"span","","",142,[[["self"]],["span"]]],[11,"from","","",143,[[["t"]],["t"]]],[11,"into","","",143,[[["self"]],["u"]]],[11,"to_owned","","",143,[[["self"]],["t"]]],[11,"clone_into","","",143,N],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"try_into","","",143,[[["self"]],["result"]]],[11,"get_type_id","","",143,[[["self"]],["typeid"]]],[11,"span","","",143,[[["self"]],["span"]]],[11,"span","","",143,[[["self"]],["span"]]],[11,"from","","",144,[[["t"]],["t"]]],[11,"into","","",144,[[["self"]],["u"]]],[11,"to_owned","","",144,[[["self"]],["t"]]],[11,"clone_into","","",144,N],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"try_into","","",144,[[["self"]],["result"]]],[11,"get_type_id","","",144,[[["self"]],["typeid"]]],[11,"span","","",144,[[["self"]],["span"]]],[11,"span","","",144,[[["self"]],["span"]]],[11,"from","","",145,[[["t"]],["t"]]],[11,"into","","",145,[[["self"]],["u"]]],[11,"to_owned","","",145,[[["self"]],["t"]]],[11,"clone_into","","",145,N],[11,"try_from","","",145,[[["u"]],["result"]]],[11,"borrow","","",145,[[["self"]],["t"]]],[11,"borrow_mut","","",145,[[["self"]],["t"]]],[11,"try_into","","",145,[[["self"]],["result"]]],[11,"get_type_id","","",145,[[["self"]],["typeid"]]],[11,"span","","",145,[[["self"]],["span"]]],[11,"span","","",145,[[["self"]],["span"]]],[11,"from","","",146,[[["t"]],["t"]]],[11,"into","","",146,[[["self"]],["u"]]],[11,"to_owned","","",146,[[["self"]],["t"]]],[11,"clone_into","","",146,N],[11,"try_from","","",146,[[["u"]],["result"]]],[11,"borrow","","",146,[[["self"]],["t"]]],[11,"borrow_mut","","",146,[[["self"]],["t"]]],[11,"try_into","","",146,[[["self"]],["result"]]],[11,"get_type_id","","",146,[[["self"]],["typeid"]]],[11,"span","","",146,[[["self"]],["span"]]],[11,"span","","",146,[[["self"]],["span"]]],[11,"from","","",147,[[["t"]],["t"]]],[11,"into","","",147,[[["self"]],["u"]]],[11,"to_owned","","",147,[[["self"]],["t"]]],[11,"clone_into","","",147,N],[11,"try_from","","",147,[[["u"]],["result"]]],[11,"borrow","","",147,[[["self"]],["t"]]],[11,"borrow_mut","","",147,[[["self"]],["t"]]],[11,"try_into","","",147,[[["self"]],["result"]]],[11,"get_type_id","","",147,[[["self"]],["typeid"]]],[11,"span","","",147,[[["self"]],["span"]]],[11,"span","","",147,[[["self"]],["span"]]],[11,"from","","",148,[[["t"]],["t"]]],[11,"into","","",148,[[["self"]],["u"]]],[11,"to_owned","","",148,[[["self"]],["t"]]],[11,"clone_into","","",148,N],[11,"try_from","","",148,[[["u"]],["result"]]],[11,"borrow","","",148,[[["self"]],["t"]]],[11,"borrow_mut","","",148,[[["self"]],["t"]]],[11,"try_into","","",148,[[["self"]],["result"]]],[11,"get_type_id","","",148,[[["self"]],["typeid"]]],[11,"span","","",148,[[["self"]],["span"]]],[11,"span","","",148,[[["self"]],["span"]]],[11,"from","","",149,[[["t"]],["t"]]],[11,"into","","",149,[[["self"]],["u"]]],[11,"to_owned","","",149,[[["self"]],["t"]]],[11,"clone_into","","",149,N],[11,"try_from","","",149,[[["u"]],["result"]]],[11,"borrow","","",149,[[["self"]],["t"]]],[11,"borrow_mut","","",149,[[["self"]],["t"]]],[11,"try_into","","",149,[[["self"]],["result"]]],[11,"get_type_id","","",149,[[["self"]],["typeid"]]],[11,"span","","",149,[[["self"]],["span"]]],[11,"span","","",149,[[["self"]],["span"]]],[11,"from","","",150,[[["t"]],["t"]]],[11,"into","","",150,[[["self"]],["u"]]],[11,"to_owned","","",150,[[["self"]],["t"]]],[11,"clone_into","","",150,N],[11,"try_from","","",150,[[["u"]],["result"]]],[11,"borrow","","",150,[[["self"]],["t"]]],[11,"borrow_mut","","",150,[[["self"]],["t"]]],[11,"try_into","","",150,[[["self"]],["result"]]],[11,"get_type_id","","",150,[[["self"]],["typeid"]]],[11,"span","","",150,[[["self"]],["span"]]],[11,"span","","",150,[[["self"]],["span"]]],[11,"from","","",151,[[["t"]],["t"]]],[11,"into","","",151,[[["self"]],["u"]]],[11,"to_owned","","",151,[[["self"]],["t"]]],[11,"clone_into","","",151,N],[11,"try_from","","",151,[[["u"]],["result"]]],[11,"borrow","","",151,[[["self"]],["t"]]],[11,"borrow_mut","","",151,[[["self"]],["t"]]],[11,"try_into","","",151,[[["self"]],["result"]]],[11,"get_type_id","","",151,[[["self"]],["typeid"]]],[11,"span","","",151,[[["self"]],["span"]]],[11,"span","","",151,[[["self"]],["span"]]],[11,"from","","",152,[[["t"]],["t"]]],[11,"into","","",152,[[["self"]],["u"]]],[11,"to_owned","","",152,[[["self"]],["t"]]],[11,"clone_into","","",152,N],[11,"try_from","","",152,[[["u"]],["result"]]],[11,"borrow","","",152,[[["self"]],["t"]]],[11,"borrow_mut","","",152,[[["self"]],["t"]]],[11,"try_into","","",152,[[["self"]],["result"]]],[11,"get_type_id","","",152,[[["self"]],["typeid"]]],[11,"span","","",152,[[["self"]],["span"]]],[11,"span","","",152,[[["self"]],["span"]]],[11,"from","","",153,[[["t"]],["t"]]],[11,"into","","",153,[[["self"]],["u"]]],[11,"to_owned","","",153,[[["self"]],["t"]]],[11,"clone_into","","",153,N],[11,"try_from","","",153,[[["u"]],["result"]]],[11,"borrow","","",153,[[["self"]],["t"]]],[11,"borrow_mut","","",153,[[["self"]],["t"]]],[11,"try_into","","",153,[[["self"]],["result"]]],[11,"get_type_id","","",153,[[["self"]],["typeid"]]],[11,"span","","",153,[[["self"]],["span"]]],[11,"span","","",153,[[["self"]],["span"]]],[11,"from","","",154,[[["t"]],["t"]]],[11,"into","","",154,[[["self"]],["u"]]],[11,"to_owned","","",154,[[["self"]],["t"]]],[11,"clone_into","","",154,N],[11,"try_from","","",154,[[["u"]],["result"]]],[11,"borrow","","",154,[[["self"]],["t"]]],[11,"borrow_mut","","",154,[[["self"]],["t"]]],[11,"try_into","","",154,[[["self"]],["result"]]],[11,"get_type_id","","",154,[[["self"]],["typeid"]]],[11,"span","","",154,[[["self"]],["span"]]],[11,"span","","",154,[[["self"]],["span"]]],[11,"from","","",155,[[["t"]],["t"]]],[11,"into","","",155,[[["self"]],["u"]]],[11,"to_owned","","",155,[[["self"]],["t"]]],[11,"clone_into","","",155,N],[11,"try_from","","",155,[[["u"]],["result"]]],[11,"borrow","","",155,[[["self"]],["t"]]],[11,"borrow_mut","","",155,[[["self"]],["t"]]],[11,"try_into","","",155,[[["self"]],["result"]]],[11,"get_type_id","","",155,[[["self"]],["typeid"]]],[11,"span","","",155,[[["self"]],["span"]]],[11,"span","","",155,[[["self"]],["span"]]],[11,"from","","",156,[[["t"]],["t"]]],[11,"into","","",156,[[["self"]],["u"]]],[11,"to_owned","","",156,[[["self"]],["t"]]],[11,"clone_into","","",156,N],[11,"try_from","","",156,[[["u"]],["result"]]],[11,"borrow","","",156,[[["self"]],["t"]]],[11,"borrow_mut","","",156,[[["self"]],["t"]]],[11,"try_into","","",156,[[["self"]],["result"]]],[11,"get_type_id","","",156,[[["self"]],["typeid"]]],[11,"span","","",156,[[["self"]],["span"]]],[11,"span","","",156,[[["self"]],["span"]]],[11,"from","","",157,[[["t"]],["t"]]],[11,"into","","",157,[[["self"]],["u"]]],[11,"to_owned","","",157,[[["self"]],["t"]]],[11,"clone_into","","",157,N],[11,"try_from","","",157,[[["u"]],["result"]]],[11,"borrow","","",157,[[["self"]],["t"]]],[11,"borrow_mut","","",157,[[["self"]],["t"]]],[11,"try_into","","",157,[[["self"]],["result"]]],[11,"get_type_id","","",157,[[["self"]],["typeid"]]],[11,"span","","",157,[[["self"]],["span"]]],[11,"span","","",157,[[["self"]],["span"]]],[11,"from","","",158,[[["t"]],["t"]]],[11,"into","","",158,[[["self"]],["u"]]],[11,"to_owned","","",158,[[["self"]],["t"]]],[11,"clone_into","","",158,N],[11,"try_from","","",158,[[["u"]],["result"]]],[11,"borrow","","",158,[[["self"]],["t"]]],[11,"borrow_mut","","",158,[[["self"]],["t"]]],[11,"try_into","","",158,[[["self"]],["result"]]],[11,"get_type_id","","",158,[[["self"]],["typeid"]]],[11,"span","","",158,[[["self"]],["span"]]],[11,"span","","",158,[[["self"]],["span"]]],[11,"from","","",159,[[["t"]],["t"]]],[11,"into","","",159,[[["self"]],["u"]]],[11,"to_owned","","",159,[[["self"]],["t"]]],[11,"clone_into","","",159,N],[11,"try_from","","",159,[[["u"]],["result"]]],[11,"borrow","","",159,[[["self"]],["t"]]],[11,"borrow_mut","","",159,[[["self"]],["t"]]],[11,"try_into","","",159,[[["self"]],["result"]]],[11,"get_type_id","","",159,[[["self"]],["typeid"]]],[11,"span","","",159,[[["self"]],["span"]]],[11,"span","","",159,[[["self"]],["span"]]],[11,"from","","",160,[[["t"]],["t"]]],[11,"into","","",160,[[["self"]],["u"]]],[11,"to_owned","","",160,[[["self"]],["t"]]],[11,"clone_into","","",160,N],[11,"try_from","","",160,[[["u"]],["result"]]],[11,"borrow","","",160,[[["self"]],["t"]]],[11,"borrow_mut","","",160,[[["self"]],["t"]]],[11,"try_into","","",160,[[["self"]],["result"]]],[11,"get_type_id","","",160,[[["self"]],["typeid"]]],[11,"span","","",160,[[["self"]],["span"]]],[11,"span","","",160,[[["self"]],["span"]]],[11,"from","","",161,[[["t"]],["t"]]],[11,"into","","",161,[[["self"]],["u"]]],[11,"to_owned","","",161,[[["self"]],["t"]]],[11,"clone_into","","",161,N],[11,"try_from","","",161,[[["u"]],["result"]]],[11,"borrow","","",161,[[["self"]],["t"]]],[11,"borrow_mut","","",161,[[["self"]],["t"]]],[11,"try_into","","",161,[[["self"]],["result"]]],[11,"get_type_id","","",161,[[["self"]],["typeid"]]],[11,"span","","",161,[[["self"]],["span"]]],[11,"span","","",161,[[["self"]],["span"]]],[11,"from","","",334,[[["t"]],["t"]]],[11,"into","","",334,[[["self"]],["u"]]],[11,"to_owned","","",334,[[["self"]],["t"]]],[11,"clone_into","","",334,N],[11,"try_from","","",334,[[["u"]],["result"]]],[11,"borrow","","",334,[[["self"]],["t"]]],[11,"borrow_mut","","",334,[[["self"]],["t"]]],[11,"try_into","","",334,[[["self"]],["result"]]],[11,"get_type_id","","",334,[[["self"]],["typeid"]]],[11,"span","","",334,[[["self"]],["span"]]],[11,"span","","",334,[[["self"]],["span"]]],[11,"from","","",162,[[["t"]],["t"]]],[11,"into","","",162,[[["self"]],["u"]]],[11,"to_owned","","",162,[[["self"]],["t"]]],[11,"clone_into","","",162,N],[11,"try_from","","",162,[[["u"]],["result"]]],[11,"borrow","","",162,[[["self"]],["t"]]],[11,"borrow_mut","","",162,[[["self"]],["t"]]],[11,"try_into","","",162,[[["self"]],["result"]]],[11,"get_type_id","","",162,[[["self"]],["typeid"]]],[11,"span","","",162,[[["self"]],["span"]]],[11,"span","","",162,[[["self"]],["span"]]],[11,"from","","",163,[[["t"]],["t"]]],[11,"into","","",163,[[["self"]],["u"]]],[11,"to_owned","","",163,[[["self"]],["t"]]],[11,"clone_into","","",163,N],[11,"try_from","","",163,[[["u"]],["result"]]],[11,"borrow","","",163,[[["self"]],["t"]]],[11,"borrow_mut","","",163,[[["self"]],["t"]]],[11,"try_into","","",163,[[["self"]],["result"]]],[11,"get_type_id","","",163,[[["self"]],["typeid"]]],[11,"span","","",163,[[["self"]],["span"]]],[11,"span","","",163,[[["self"]],["span"]]],[11,"from","","",164,[[["t"]],["t"]]],[11,"into","","",164,[[["self"]],["u"]]],[11,"to_owned","","",164,[[["self"]],["t"]]],[11,"clone_into","","",164,N],[11,"try_from","","",164,[[["u"]],["result"]]],[11,"borrow","","",164,[[["self"]],["t"]]],[11,"borrow_mut","","",164,[[["self"]],["t"]]],[11,"try_into","","",164,[[["self"]],["result"]]],[11,"get_type_id","","",164,[[["self"]],["typeid"]]],[11,"span","","",164,[[["self"]],["span"]]],[11,"span","","",164,[[["self"]],["span"]]],[11,"from","","",165,[[["t"]],["t"]]],[11,"into","","",165,[[["self"]],["u"]]],[11,"to_owned","","",165,[[["self"]],["t"]]],[11,"clone_into","","",165,N],[11,"try_from","","",165,[[["u"]],["result"]]],[11,"borrow","","",165,[[["self"]],["t"]]],[11,"borrow_mut","","",165,[[["self"]],["t"]]],[11,"try_into","","",165,[[["self"]],["result"]]],[11,"get_type_id","","",165,[[["self"]],["typeid"]]],[11,"span","","",165,[[["self"]],["span"]]],[11,"span","","",165,[[["self"]],["span"]]],[11,"from","","",166,[[["t"]],["t"]]],[11,"into","","",166,[[["self"]],["u"]]],[11,"to_owned","","",166,[[["self"]],["t"]]],[11,"clone_into","","",166,N],[11,"try_from","","",166,[[["u"]],["result"]]],[11,"borrow","","",166,[[["self"]],["t"]]],[11,"borrow_mut","","",166,[[["self"]],["t"]]],[11,"try_into","","",166,[[["self"]],["result"]]],[11,"get_type_id","","",166,[[["self"]],["typeid"]]],[11,"span","","",166,[[["self"]],["span"]]],[11,"span","","",166,[[["self"]],["span"]]],[11,"from","","",167,[[["t"]],["t"]]],[11,"into","","",167,[[["self"]],["u"]]],[11,"to_owned","","",167,[[["self"]],["t"]]],[11,"clone_into","","",167,N],[11,"try_from","","",167,[[["u"]],["result"]]],[11,"borrow","","",167,[[["self"]],["t"]]],[11,"borrow_mut","","",167,[[["self"]],["t"]]],[11,"try_into","","",167,[[["self"]],["result"]]],[11,"get_type_id","","",167,[[["self"]],["typeid"]]],[11,"span","","",167,[[["self"]],["span"]]],[11,"span","","",167,[[["self"]],["span"]]],[11,"from","","",168,[[["t"]],["t"]]],[11,"into","","",168,[[["self"]],["u"]]],[11,"to_owned","","",168,[[["self"]],["t"]]],[11,"clone_into","","",168,N],[11,"try_from","","",168,[[["u"]],["result"]]],[11,"borrow","","",168,[[["self"]],["t"]]],[11,"borrow_mut","","",168,[[["self"]],["t"]]],[11,"try_into","","",168,[[["self"]],["result"]]],[11,"get_type_id","","",168,[[["self"]],["typeid"]]],[11,"span","","",168,[[["self"]],["span"]]],[11,"span","","",168,[[["self"]],["span"]]],[11,"from","","",169,[[["t"]],["t"]]],[11,"into","","",169,[[["self"]],["u"]]],[11,"to_owned","","",169,[[["self"]],["t"]]],[11,"clone_into","","",169,N],[11,"try_from","","",169,[[["u"]],["result"]]],[11,"borrow","","",169,[[["self"]],["t"]]],[11,"borrow_mut","","",169,[[["self"]],["t"]]],[11,"try_into","","",169,[[["self"]],["result"]]],[11,"get_type_id","","",169,[[["self"]],["typeid"]]],[11,"span","","",169,[[["self"]],["span"]]],[11,"span","","",169,[[["self"]],["span"]]],[11,"from","","",170,[[["t"]],["t"]]],[11,"into","","",170,[[["self"]],["u"]]],[11,"to_owned","","",170,[[["self"]],["t"]]],[11,"clone_into","","",170,N],[11,"try_from","","",170,[[["u"]],["result"]]],[11,"borrow","","",170,[[["self"]],["t"]]],[11,"borrow_mut","","",170,[[["self"]],["t"]]],[11,"try_into","","",170,[[["self"]],["result"]]],[11,"get_type_id","","",170,[[["self"]],["typeid"]]],[11,"span","","",170,[[["self"]],["span"]]],[11,"span","","",170,[[["self"]],["span"]]],[11,"from","","",171,[[["t"]],["t"]]],[11,"into","","",171,[[["self"]],["u"]]],[11,"to_owned","","",171,[[["self"]],["t"]]],[11,"clone_into","","",171,N],[11,"try_from","","",171,[[["u"]],["result"]]],[11,"borrow","","",171,[[["self"]],["t"]]],[11,"borrow_mut","","",171,[[["self"]],["t"]]],[11,"try_into","","",171,[[["self"]],["result"]]],[11,"get_type_id","","",171,[[["self"]],["typeid"]]],[11,"span","","",171,[[["self"]],["span"]]],[11,"span","","",171,[[["self"]],["span"]]],[11,"from","","",172,[[["t"]],["t"]]],[11,"into","","",172,[[["self"]],["u"]]],[11,"to_owned","","",172,[[["self"]],["t"]]],[11,"clone_into","","",172,N],[11,"try_from","","",172,[[["u"]],["result"]]],[11,"borrow","","",172,[[["self"]],["t"]]],[11,"borrow_mut","","",172,[[["self"]],["t"]]],[11,"try_into","","",172,[[["self"]],["result"]]],[11,"get_type_id","","",172,[[["self"]],["typeid"]]],[11,"from","","",173,[[["t"]],["t"]]],[11,"into","","",173,[[["self"]],["u"]]],[11,"to_owned","","",173,[[["self"]],["t"]]],[11,"clone_into","","",173,N],[11,"try_from","","",173,[[["u"]],["result"]]],[11,"borrow","","",173,[[["self"]],["t"]]],[11,"borrow_mut","","",173,[[["self"]],["t"]]],[11,"try_into","","",173,[[["self"]],["result"]]],[11,"get_type_id","","",173,[[["self"]],["typeid"]]],[11,"span","","",173,[[["self"]],["span"]]],[11,"span","","",173,[[["self"]],["span"]]],[11,"from","","",174,[[["t"]],["t"]]],[11,"into","","",174,[[["self"]],["u"]]],[11,"to_owned","","",174,[[["self"]],["t"]]],[11,"clone_into","","",174,N],[11,"try_from","","",174,[[["u"]],["result"]]],[11,"borrow","","",174,[[["self"]],["t"]]],[11,"borrow_mut","","",174,[[["self"]],["t"]]],[11,"try_into","","",174,[[["self"]],["result"]]],[11,"get_type_id","","",174,[[["self"]],["typeid"]]],[11,"span","","",174,[[["self"]],["span"]]],[11,"span","","",174,[[["self"]],["span"]]],[11,"from","","",175,[[["t"]],["t"]]],[11,"into","","",175,[[["self"]],["u"]]],[11,"to_owned","","",175,[[["self"]],["t"]]],[11,"clone_into","","",175,N],[11,"try_from","","",175,[[["u"]],["result"]]],[11,"borrow","","",175,[[["self"]],["t"]]],[11,"borrow_mut","","",175,[[["self"]],["t"]]],[11,"try_into","","",175,[[["self"]],["result"]]],[11,"get_type_id","","",175,[[["self"]],["typeid"]]],[11,"span","","",175,[[["self"]],["span"]]],[11,"span","","",175,[[["self"]],["span"]]],[11,"from","","",176,[[["t"]],["t"]]],[11,"into","","",176,[[["self"]],["u"]]],[11,"to_owned","","",176,[[["self"]],["t"]]],[11,"clone_into","","",176,N],[11,"try_from","","",176,[[["u"]],["result"]]],[11,"borrow","","",176,[[["self"]],["t"]]],[11,"borrow_mut","","",176,[[["self"]],["t"]]],[11,"try_into","","",176,[[["self"]],["result"]]],[11,"get_type_id","","",176,[[["self"]],["typeid"]]],[11,"span","","",176,[[["self"]],["span"]]],[11,"span","","",176,[[["self"]],["span"]]],[11,"from","","",177,[[["t"]],["t"]]],[11,"into","","",177,[[["self"]],["u"]]],[11,"to_owned","","",177,[[["self"]],["t"]]],[11,"clone_into","","",177,N],[11,"try_from","","",177,[[["u"]],["result"]]],[11,"borrow","","",177,[[["self"]],["t"]]],[11,"borrow_mut","","",177,[[["self"]],["t"]]],[11,"try_into","","",177,[[["self"]],["result"]]],[11,"get_type_id","","",177,[[["self"]],["typeid"]]],[11,"span","","",177,[[["self"]],["span"]]],[11,"span","","",177,[[["self"]],["span"]]],[11,"from","","",178,[[["t"]],["t"]]],[11,"into","","",178,[[["self"]],["u"]]],[11,"to_owned","","",178,[[["self"]],["t"]]],[11,"clone_into","","",178,N],[11,"try_from","","",178,[[["u"]],["result"]]],[11,"borrow","","",178,[[["self"]],["t"]]],[11,"borrow_mut","","",178,[[["self"]],["t"]]],[11,"try_into","","",178,[[["self"]],["result"]]],[11,"get_type_id","","",178,[[["self"]],["typeid"]]],[11,"span","","",178,[[["self"]],["span"]]],[11,"span","","",178,[[["self"]],["span"]]],[11,"from","","",179,[[["t"]],["t"]]],[11,"into","","",179,[[["self"]],["u"]]],[11,"to_owned","","",179,[[["self"]],["t"]]],[11,"clone_into","","",179,N],[11,"try_from","","",179,[[["u"]],["result"]]],[11,"borrow","","",179,[[["self"]],["t"]]],[11,"borrow_mut","","",179,[[["self"]],["t"]]],[11,"try_into","","",179,[[["self"]],["result"]]],[11,"get_type_id","","",179,[[["self"]],["typeid"]]],[11,"span","","",179,[[["self"]],["span"]]],[11,"span","","",179,[[["self"]],["span"]]],[11,"from","","",180,[[["t"]],["t"]]],[11,"into","","",180,[[["self"]],["u"]]],[11,"to_owned","","",180,[[["self"]],["t"]]],[11,"clone_into","","",180,N],[11,"try_from","","",180,[[["u"]],["result"]]],[11,"borrow","","",180,[[["self"]],["t"]]],[11,"borrow_mut","","",180,[[["self"]],["t"]]],[11,"try_into","","",180,[[["self"]],["result"]]],[11,"get_type_id","","",180,[[["self"]],["typeid"]]],[11,"span","","",180,[[["self"]],["span"]]],[11,"span","","",180,[[["self"]],["span"]]],[11,"from","","",181,[[["t"]],["t"]]],[11,"into","","",181,[[["self"]],["u"]]],[11,"to_owned","","",181,[[["self"]],["t"]]],[11,"clone_into","","",181,N],[11,"try_from","","",181,[[["u"]],["result"]]],[11,"borrow","","",181,[[["self"]],["t"]]],[11,"borrow_mut","","",181,[[["self"]],["t"]]],[11,"try_into","","",181,[[["self"]],["result"]]],[11,"get_type_id","","",181,[[["self"]],["typeid"]]],[11,"span","","",181,[[["self"]],["span"]]],[11,"span","","",181,[[["self"]],["span"]]],[11,"from","","",182,[[["t"]],["t"]]],[11,"into","","",182,[[["self"]],["u"]]],[11,"to_owned","","",182,[[["self"]],["t"]]],[11,"clone_into","","",182,N],[11,"try_from","","",182,[[["u"]],["result"]]],[11,"borrow","","",182,[[["self"]],["t"]]],[11,"borrow_mut","","",182,[[["self"]],["t"]]],[11,"try_into","","",182,[[["self"]],["result"]]],[11,"get_type_id","","",182,[[["self"]],["typeid"]]],[11,"span","","",182,[[["self"]],["span"]]],[11,"span","","",182,[[["self"]],["span"]]],[11,"from","","",183,[[["t"]],["t"]]],[11,"into","","",183,[[["self"]],["u"]]],[11,"to_owned","","",183,[[["self"]],["t"]]],[11,"clone_into","","",183,N],[11,"try_from","","",183,[[["u"]],["result"]]],[11,"borrow","","",183,[[["self"]],["t"]]],[11,"borrow_mut","","",183,[[["self"]],["t"]]],[11,"try_into","","",183,[[["self"]],["result"]]],[11,"get_type_id","","",183,[[["self"]],["typeid"]]],[11,"span","","",183,[[["self"]],["span"]]],[11,"span","","",183,[[["self"]],["span"]]],[11,"from","","",185,[[["t"]],["t"]]],[11,"into","","",185,[[["self"]],["u"]]],[11,"to_owned","","",185,[[["self"]],["t"]]],[11,"clone_into","","",185,N],[11,"try_from","","",185,[[["u"]],["result"]]],[11,"borrow","","",185,[[["self"]],["t"]]],[11,"borrow_mut","","",185,[[["self"]],["t"]]],[11,"try_into","","",185,[[["self"]],["result"]]],[11,"get_type_id","","",185,[[["self"]],["typeid"]]],[11,"span","","",185,[[["self"]],["span"]]],[11,"span","","",185,[[["self"]],["span"]]],[11,"from","","",186,[[["t"]],["t"]]],[11,"into","","",186,[[["self"]],["u"]]],[11,"to_owned","","",186,[[["self"]],["t"]]],[11,"clone_into","","",186,N],[11,"try_from","","",186,[[["u"]],["result"]]],[11,"borrow","","",186,[[["self"]],["t"]]],[11,"borrow_mut","","",186,[[["self"]],["t"]]],[11,"try_into","","",186,[[["self"]],["result"]]],[11,"get_type_id","","",186,[[["self"]],["typeid"]]],[11,"span","","",186,[[["self"]],["span"]]],[11,"span","","",186,[[["self"]],["span"]]],[11,"from","","",187,[[["t"]],["t"]]],[11,"into","","",187,[[["self"]],["u"]]],[11,"to_owned","","",187,[[["self"]],["t"]]],[11,"clone_into","","",187,N],[11,"try_from","","",187,[[["u"]],["result"]]],[11,"borrow","","",187,[[["self"]],["t"]]],[11,"borrow_mut","","",187,[[["self"]],["t"]]],[11,"try_into","","",187,[[["self"]],["result"]]],[11,"get_type_id","","",187,[[["self"]],["typeid"]]],[11,"span","","",187,[[["self"]],["span"]]],[11,"span","","",187,[[["self"]],["span"]]],[11,"from","","",188,[[["t"]],["t"]]],[11,"into","","",188,[[["self"]],["u"]]],[11,"to_owned","","",188,[[["self"]],["t"]]],[11,"clone_into","","",188,N],[11,"try_from","","",188,[[["u"]],["result"]]],[11,"borrow","","",188,[[["self"]],["t"]]],[11,"borrow_mut","","",188,[[["self"]],["t"]]],[11,"try_into","","",188,[[["self"]],["result"]]],[11,"get_type_id","","",188,[[["self"]],["typeid"]]],[11,"span","","",188,[[["self"]],["span"]]],[11,"span","","",188,[[["self"]],["span"]]],[11,"from","","",189,[[["t"]],["t"]]],[11,"into","","",189,[[["self"]],["u"]]],[11,"to_owned","","",189,[[["self"]],["t"]]],[11,"clone_into","","",189,N],[11,"try_from","","",189,[[["u"]],["result"]]],[11,"borrow","","",189,[[["self"]],["t"]]],[11,"borrow_mut","","",189,[[["self"]],["t"]]],[11,"try_into","","",189,[[["self"]],["result"]]],[11,"get_type_id","","",189,[[["self"]],["typeid"]]],[11,"span","","",189,[[["self"]],["span"]]],[11,"span","","",189,[[["self"]],["span"]]],[11,"from","","",190,[[["t"]],["t"]]],[11,"into","","",190,[[["self"]],["u"]]],[11,"to_owned","","",190,[[["self"]],["t"]]],[11,"clone_into","","",190,N],[11,"try_from","","",190,[[["u"]],["result"]]],[11,"borrow","","",190,[[["self"]],["t"]]],[11,"borrow_mut","","",190,[[["self"]],["t"]]],[11,"try_into","","",190,[[["self"]],["result"]]],[11,"get_type_id","","",190,[[["self"]],["typeid"]]],[11,"span","","",190,[[["self"]],["span"]]],[11,"span","","",190,[[["self"]],["span"]]],[11,"from","","",191,[[["t"]],["t"]]],[11,"into","","",191,[[["self"]],["u"]]],[11,"to_owned","","",191,[[["self"]],["t"]]],[11,"clone_into","","",191,N],[11,"try_from","","",191,[[["u"]],["result"]]],[11,"borrow","","",191,[[["self"]],["t"]]],[11,"borrow_mut","","",191,[[["self"]],["t"]]],[11,"try_into","","",191,[[["self"]],["result"]]],[11,"get_type_id","","",191,[[["self"]],["typeid"]]],[11,"span","","",191,[[["self"]],["span"]]],[11,"span","","",191,[[["self"]],["span"]]],[11,"from","","",192,[[["t"]],["t"]]],[11,"into","","",192,[[["self"]],["u"]]],[11,"to_owned","","",192,[[["self"]],["t"]]],[11,"clone_into","","",192,N],[11,"try_from","","",192,[[["u"]],["result"]]],[11,"borrow","","",192,[[["self"]],["t"]]],[11,"borrow_mut","","",192,[[["self"]],["t"]]],[11,"try_into","","",192,[[["self"]],["result"]]],[11,"get_type_id","","",192,[[["self"]],["typeid"]]],[11,"span","","",192,[[["self"]],["span"]]],[11,"span","","",192,[[["self"]],["span"]]],[11,"from","","",193,[[["t"]],["t"]]],[11,"into","","",193,[[["self"]],["u"]]],[11,"to_owned","","",193,[[["self"]],["t"]]],[11,"clone_into","","",193,N],[11,"try_from","","",193,[[["u"]],["result"]]],[11,"borrow","","",193,[[["self"]],["t"]]],[11,"borrow_mut","","",193,[[["self"]],["t"]]],[11,"try_into","","",193,[[["self"]],["result"]]],[11,"get_type_id","","",193,[[["self"]],["typeid"]]],[11,"span","","",193,[[["self"]],["span"]]],[11,"span","","",193,[[["self"]],["span"]]],[11,"from","","",194,[[["t"]],["t"]]],[11,"into","","",194,[[["self"]],["u"]]],[11,"to_owned","","",194,[[["self"]],["t"]]],[11,"clone_into","","",194,N],[11,"try_from","","",194,[[["u"]],["result"]]],[11,"borrow","","",194,[[["self"]],["t"]]],[11,"borrow_mut","","",194,[[["self"]],["t"]]],[11,"try_into","","",194,[[["self"]],["result"]]],[11,"get_type_id","","",194,[[["self"]],["typeid"]]],[11,"span","","",194,[[["self"]],["span"]]],[11,"span","","",194,[[["self"]],["span"]]],[11,"from","","",195,[[["t"]],["t"]]],[11,"into","","",195,[[["self"]],["u"]]],[11,"to_owned","","",195,[[["self"]],["t"]]],[11,"clone_into","","",195,N],[11,"try_from","","",195,[[["u"]],["result"]]],[11,"borrow","","",195,[[["self"]],["t"]]],[11,"borrow_mut","","",195,[[["self"]],["t"]]],[11,"try_into","","",195,[[["self"]],["result"]]],[11,"get_type_id","","",195,[[["self"]],["typeid"]]],[11,"span","","",195,[[["self"]],["span"]]],[11,"span","","",195,[[["self"]],["span"]]],[11,"from","","",196,[[["t"]],["t"]]],[11,"into","","",196,[[["self"]],["u"]]],[11,"to_owned","","",196,[[["self"]],["t"]]],[11,"clone_into","","",196,N],[11,"try_from","","",196,[[["u"]],["result"]]],[11,"borrow","","",196,[[["self"]],["t"]]],[11,"borrow_mut","","",196,[[["self"]],["t"]]],[11,"try_into","","",196,[[["self"]],["result"]]],[11,"get_type_id","","",196,[[["self"]],["typeid"]]],[11,"span","","",196,[[["self"]],["span"]]],[11,"span","","",196,[[["self"]],["span"]]],[11,"from","","",197,[[["t"]],["t"]]],[11,"into","","",197,[[["self"]],["u"]]],[11,"to_owned","","",197,[[["self"]],["t"]]],[11,"clone_into","","",197,N],[11,"try_from","","",197,[[["u"]],["result"]]],[11,"borrow","","",197,[[["self"]],["t"]]],[11,"borrow_mut","","",197,[[["self"]],["t"]]],[11,"try_into","","",197,[[["self"]],["result"]]],[11,"get_type_id","","",197,[[["self"]],["typeid"]]],[11,"span","","",197,[[["self"]],["span"]]],[11,"span","","",197,[[["self"]],["span"]]],[11,"from","","",198,[[["t"]],["t"]]],[11,"into","","",198,[[["self"]],["u"]]],[11,"to_owned","","",198,[[["self"]],["t"]]],[11,"clone_into","","",198,N],[11,"try_from","","",198,[[["u"]],["result"]]],[11,"borrow","","",198,[[["self"]],["t"]]],[11,"borrow_mut","","",198,[[["self"]],["t"]]],[11,"try_into","","",198,[[["self"]],["result"]]],[11,"get_type_id","","",198,[[["self"]],["typeid"]]],[11,"span","","",198,[[["self"]],["span"]]],[11,"span","","",198,[[["self"]],["span"]]],[11,"from","","",199,[[["t"]],["t"]]],[11,"into","","",199,[[["self"]],["u"]]],[11,"to_owned","","",199,[[["self"]],["t"]]],[11,"clone_into","","",199,N],[11,"try_from","","",199,[[["u"]],["result"]]],[11,"borrow","","",199,[[["self"]],["t"]]],[11,"borrow_mut","","",199,[[["self"]],["t"]]],[11,"try_into","","",199,[[["self"]],["result"]]],[11,"get_type_id","","",199,[[["self"]],["typeid"]]],[11,"span","","",199,[[["self"]],["span"]]],[11,"span","","",199,[[["self"]],["span"]]],[11,"from","","",200,[[["t"]],["t"]]],[11,"into","","",200,[[["self"]],["u"]]],[11,"to_owned","","",200,[[["self"]],["t"]]],[11,"clone_into","","",200,N],[11,"try_from","","",200,[[["u"]],["result"]]],[11,"borrow","","",200,[[["self"]],["t"]]],[11,"borrow_mut","","",200,[[["self"]],["t"]]],[11,"try_into","","",200,[[["self"]],["result"]]],[11,"get_type_id","","",200,[[["self"]],["typeid"]]],[11,"from","","",201,[[["t"]],["t"]]],[11,"into","","",201,[[["self"]],["u"]]],[11,"to_owned","","",201,[[["self"]],["t"]]],[11,"clone_into","","",201,N],[11,"try_from","","",201,[[["u"]],["result"]]],[11,"borrow","","",201,[[["self"]],["t"]]],[11,"borrow_mut","","",201,[[["self"]],["t"]]],[11,"try_into","","",201,[[["self"]],["result"]]],[11,"get_type_id","","",201,[[["self"]],["typeid"]]],[11,"span","","",201,[[["self"]],["span"]]],[11,"span","","",201,[[["self"]],["span"]]],[11,"from","","",202,[[["t"]],["t"]]],[11,"into","","",202,[[["self"]],["u"]]],[11,"to_owned","","",202,[[["self"]],["t"]]],[11,"clone_into","","",202,N],[11,"try_from","","",202,[[["u"]],["result"]]],[11,"borrow","","",202,[[["self"]],["t"]]],[11,"borrow_mut","","",202,[[["self"]],["t"]]],[11,"try_into","","",202,[[["self"]],["result"]]],[11,"get_type_id","","",202,[[["self"]],["typeid"]]],[11,"span","","",202,[[["self"]],["span"]]],[11,"span","","",202,[[["self"]],["span"]]],[11,"from","","",203,[[["t"]],["t"]]],[11,"into","","",203,[[["self"]],["u"]]],[11,"to_owned","","",203,[[["self"]],["t"]]],[11,"clone_into","","",203,N],[11,"try_from","","",203,[[["u"]],["result"]]],[11,"borrow","","",203,[[["self"]],["t"]]],[11,"borrow_mut","","",203,[[["self"]],["t"]]],[11,"try_into","","",203,[[["self"]],["result"]]],[11,"get_type_id","","",203,[[["self"]],["typeid"]]],[11,"span","","",203,[[["self"]],["span"]]],[11,"span","","",203,[[["self"]],["span"]]],[11,"from","","",204,[[["t"]],["t"]]],[11,"into","","",204,[[["self"]],["u"]]],[11,"to_owned","","",204,[[["self"]],["t"]]],[11,"clone_into","","",204,N],[11,"try_from","","",204,[[["u"]],["result"]]],[11,"borrow","","",204,[[["self"]],["t"]]],[11,"borrow_mut","","",204,[[["self"]],["t"]]],[11,"try_into","","",204,[[["self"]],["result"]]],[11,"get_type_id","","",204,[[["self"]],["typeid"]]],[11,"span","","",204,[[["self"]],["span"]]],[11,"span","","",204,[[["self"]],["span"]]],[11,"from","","",205,[[["t"]],["t"]]],[11,"into","","",205,[[["self"]],["u"]]],[11,"to_owned","","",205,[[["self"]],["t"]]],[11,"clone_into","","",205,N],[11,"try_from","","",205,[[["u"]],["result"]]],[11,"borrow","","",205,[[["self"]],["t"]]],[11,"borrow_mut","","",205,[[["self"]],["t"]]],[11,"try_into","","",205,[[["self"]],["result"]]],[11,"get_type_id","","",205,[[["self"]],["typeid"]]],[11,"span","","",205,[[["self"]],["span"]]],[11,"span","","",205,[[["self"]],["span"]]],[11,"from","","",206,[[["t"]],["t"]]],[11,"into","","",206,[[["self"]],["u"]]],[11,"to_owned","","",206,[[["self"]],["t"]]],[11,"clone_into","","",206,N],[11,"try_from","","",206,[[["u"]],["result"]]],[11,"borrow","","",206,[[["self"]],["t"]]],[11,"borrow_mut","","",206,[[["self"]],["t"]]],[11,"try_into","","",206,[[["self"]],["result"]]],[11,"get_type_id","","",206,[[["self"]],["typeid"]]],[11,"span","","",206,[[["self"]],["span"]]],[11,"span","","",206,[[["self"]],["span"]]],[11,"from","","",207,[[["t"]],["t"]]],[11,"into","","",207,[[["self"]],["u"]]],[11,"to_owned","","",207,[[["self"]],["t"]]],[11,"clone_into","","",207,N],[11,"try_from","","",207,[[["u"]],["result"]]],[11,"borrow","","",207,[[["self"]],["t"]]],[11,"borrow_mut","","",207,[[["self"]],["t"]]],[11,"try_into","","",207,[[["self"]],["result"]]],[11,"get_type_id","","",207,[[["self"]],["typeid"]]],[11,"span","","",207,[[["self"]],["span"]]],[11,"span","","",207,[[["self"]],["span"]]],[11,"from","","",208,[[["t"]],["t"]]],[11,"into","","",208,[[["self"]],["u"]]],[11,"to_owned","","",208,[[["self"]],["t"]]],[11,"clone_into","","",208,N],[11,"try_from","","",208,[[["u"]],["result"]]],[11,"borrow","","",208,[[["self"]],["t"]]],[11,"borrow_mut","","",208,[[["self"]],["t"]]],[11,"try_into","","",208,[[["self"]],["result"]]],[11,"get_type_id","","",208,[[["self"]],["typeid"]]],[11,"span","","",208,[[["self"]],["span"]]],[11,"span","","",208,[[["self"]],["span"]]],[11,"from","","",209,[[["t"]],["t"]]],[11,"into","","",209,[[["self"]],["u"]]],[11,"to_owned","","",209,[[["self"]],["t"]]],[11,"clone_into","","",209,N],[11,"try_from","","",209,[[["u"]],["result"]]],[11,"borrow","","",209,[[["self"]],["t"]]],[11,"borrow_mut","","",209,[[["self"]],["t"]]],[11,"try_into","","",209,[[["self"]],["result"]]],[11,"get_type_id","","",209,[[["self"]],["typeid"]]],[11,"span","","",209,[[["self"]],["span"]]],[11,"span","","",209,[[["self"]],["span"]]],[11,"from","","",210,[[["t"]],["t"]]],[11,"into","","",210,[[["self"]],["u"]]],[11,"to_owned","","",210,[[["self"]],["t"]]],[11,"clone_into","","",210,N],[11,"try_from","","",210,[[["u"]],["result"]]],[11,"borrow","","",210,[[["self"]],["t"]]],[11,"borrow_mut","","",210,[[["self"]],["t"]]],[11,"try_into","","",210,[[["self"]],["result"]]],[11,"get_type_id","","",210,[[["self"]],["typeid"]]],[11,"span","","",210,[[["self"]],["span"]]],[11,"span","","",210,[[["self"]],["span"]]],[11,"from","","",211,[[["t"]],["t"]]],[11,"into","","",211,[[["self"]],["u"]]],[11,"to_owned","","",211,[[["self"]],["t"]]],[11,"clone_into","","",211,N],[11,"try_from","","",211,[[["u"]],["result"]]],[11,"borrow","","",211,[[["self"]],["t"]]],[11,"borrow_mut","","",211,[[["self"]],["t"]]],[11,"try_into","","",211,[[["self"]],["result"]]],[11,"get_type_id","","",211,[[["self"]],["typeid"]]],[11,"span","","",211,[[["self"]],["span"]]],[11,"span","","",211,[[["self"]],["span"]]],[11,"from","","",212,[[["t"]],["t"]]],[11,"into","","",212,[[["self"]],["u"]]],[11,"to_owned","","",212,[[["self"]],["t"]]],[11,"clone_into","","",212,N],[11,"try_from","","",212,[[["u"]],["result"]]],[11,"borrow","","",212,[[["self"]],["t"]]],[11,"borrow_mut","","",212,[[["self"]],["t"]]],[11,"try_into","","",212,[[["self"]],["result"]]],[11,"get_type_id","","",212,[[["self"]],["typeid"]]],[11,"span","","",212,[[["self"]],["span"]]],[11,"span","","",212,[[["self"]],["span"]]],[11,"from","","",213,[[["t"]],["t"]]],[11,"into","","",213,[[["self"]],["u"]]],[11,"to_owned","","",213,[[["self"]],["t"]]],[11,"clone_into","","",213,N],[11,"try_from","","",213,[[["u"]],["result"]]],[11,"borrow","","",213,[[["self"]],["t"]]],[11,"borrow_mut","","",213,[[["self"]],["t"]]],[11,"try_into","","",213,[[["self"]],["result"]]],[11,"get_type_id","","",213,[[["self"]],["typeid"]]],[11,"span","","",213,[[["self"]],["span"]]],[11,"span","","",213,[[["self"]],["span"]]],[11,"from","","",214,[[["t"]],["t"]]],[11,"into","","",214,[[["self"]],["u"]]],[11,"to_owned","","",214,[[["self"]],["t"]]],[11,"clone_into","","",214,N],[11,"try_from","","",214,[[["u"]],["result"]]],[11,"borrow","","",214,[[["self"]],["t"]]],[11,"borrow_mut","","",214,[[["self"]],["t"]]],[11,"try_into","","",214,[[["self"]],["result"]]],[11,"get_type_id","","",214,[[["self"]],["typeid"]]],[11,"span","","",214,[[["self"]],["span"]]],[11,"span","","",214,[[["self"]],["span"]]],[11,"from","","",215,[[["t"]],["t"]]],[11,"into","","",215,[[["self"]],["u"]]],[11,"to_owned","","",215,[[["self"]],["t"]]],[11,"clone_into","","",215,N],[11,"try_from","","",215,[[["u"]],["result"]]],[11,"borrow","","",215,[[["self"]],["t"]]],[11,"borrow_mut","","",215,[[["self"]],["t"]]],[11,"try_into","","",215,[[["self"]],["result"]]],[11,"get_type_id","","",215,[[["self"]],["typeid"]]],[11,"span","","",215,[[["self"]],["span"]]],[11,"span","","",215,[[["self"]],["span"]]],[11,"from","","",216,[[["t"]],["t"]]],[11,"into","","",216,[[["self"]],["u"]]],[11,"to_owned","","",216,[[["self"]],["t"]]],[11,"clone_into","","",216,N],[11,"try_from","","",216,[[["u"]],["result"]]],[11,"borrow","","",216,[[["self"]],["t"]]],[11,"borrow_mut","","",216,[[["self"]],["t"]]],[11,"try_into","","",216,[[["self"]],["result"]]],[11,"get_type_id","","",216,[[["self"]],["typeid"]]],[11,"span","","",216,[[["self"]],["span"]]],[11,"span","","",216,[[["self"]],["span"]]],[11,"from","","",217,[[["t"]],["t"]]],[11,"into","","",217,[[["self"]],["u"]]],[11,"to_owned","","",217,[[["self"]],["t"]]],[11,"clone_into","","",217,N],[11,"try_from","","",217,[[["u"]],["result"]]],[11,"borrow","","",217,[[["self"]],["t"]]],[11,"borrow_mut","","",217,[[["self"]],["t"]]],[11,"try_into","","",217,[[["self"]],["result"]]],[11,"get_type_id","","",217,[[["self"]],["typeid"]]],[11,"span","","",217,[[["self"]],["span"]]],[11,"span","","",217,[[["self"]],["span"]]],[11,"from","","",218,[[["t"]],["t"]]],[11,"into","","",218,[[["self"]],["u"]]],[11,"to_owned","","",218,[[["self"]],["t"]]],[11,"clone_into","","",218,N],[11,"try_from","","",218,[[["u"]],["result"]]],[11,"borrow","","",218,[[["self"]],["t"]]],[11,"borrow_mut","","",218,[[["self"]],["t"]]],[11,"try_into","","",218,[[["self"]],["result"]]],[11,"get_type_id","","",218,[[["self"]],["typeid"]]],[11,"span","","",218,[[["self"]],["span"]]],[11,"span","","",218,[[["self"]],["span"]]],[11,"from","","",219,[[["t"]],["t"]]],[11,"into","","",219,[[["self"]],["u"]]],[11,"to_owned","","",219,[[["self"]],["t"]]],[11,"clone_into","","",219,N],[11,"try_from","","",219,[[["u"]],["result"]]],[11,"borrow","","",219,[[["self"]],["t"]]],[11,"borrow_mut","","",219,[[["self"]],["t"]]],[11,"try_into","","",219,[[["self"]],["result"]]],[11,"get_type_id","","",219,[[["self"]],["typeid"]]],[11,"span","","",219,[[["self"]],["span"]]],[11,"span","","",219,[[["self"]],["span"]]],[11,"from","","",220,[[["t"]],["t"]]],[11,"into","","",220,[[["self"]],["u"]]],[11,"to_owned","","",220,[[["self"]],["t"]]],[11,"clone_into","","",220,N],[11,"try_from","","",220,[[["u"]],["result"]]],[11,"borrow","","",220,[[["self"]],["t"]]],[11,"borrow_mut","","",220,[[["self"]],["t"]]],[11,"try_into","","",220,[[["self"]],["result"]]],[11,"get_type_id","","",220,[[["self"]],["typeid"]]],[11,"span","","",220,[[["self"]],["span"]]],[11,"span","","",220,[[["self"]],["span"]]],[11,"from","","",221,[[["t"]],["t"]]],[11,"into","","",221,[[["self"]],["u"]]],[11,"to_owned","","",221,[[["self"]],["t"]]],[11,"clone_into","","",221,N],[11,"try_from","","",221,[[["u"]],["result"]]],[11,"borrow","","",221,[[["self"]],["t"]]],[11,"borrow_mut","","",221,[[["self"]],["t"]]],[11,"try_into","","",221,[[["self"]],["result"]]],[11,"get_type_id","","",221,[[["self"]],["typeid"]]],[11,"span","","",221,[[["self"]],["span"]]],[11,"span","","",221,[[["self"]],["span"]]],[11,"from","","",222,[[["t"]],["t"]]],[11,"into","","",222,[[["self"]],["u"]]],[11,"to_owned","","",222,[[["self"]],["t"]]],[11,"clone_into","","",222,N],[11,"try_from","","",222,[[["u"]],["result"]]],[11,"borrow","","",222,[[["self"]],["t"]]],[11,"borrow_mut","","",222,[[["self"]],["t"]]],[11,"try_into","","",222,[[["self"]],["result"]]],[11,"get_type_id","","",222,[[["self"]],["typeid"]]],[11,"span","","",222,[[["self"]],["span"]]],[11,"span","","",222,[[["self"]],["span"]]],[11,"from","","",223,[[["t"]],["t"]]],[11,"into","","",223,[[["self"]],["u"]]],[11,"to_owned","","",223,[[["self"]],["t"]]],[11,"clone_into","","",223,N],[11,"try_from","","",223,[[["u"]],["result"]]],[11,"borrow","","",223,[[["self"]],["t"]]],[11,"borrow_mut","","",223,[[["self"]],["t"]]],[11,"try_into","","",223,[[["self"]],["result"]]],[11,"get_type_id","","",223,[[["self"]],["typeid"]]],[11,"span","","",223,[[["self"]],["span"]]],[11,"span","","",223,[[["self"]],["span"]]],[11,"from","","",224,[[["t"]],["t"]]],[11,"into","","",224,[[["self"]],["u"]]],[11,"to_owned","","",224,[[["self"]],["t"]]],[11,"clone_into","","",224,N],[11,"try_from","","",224,[[["u"]],["result"]]],[11,"borrow","","",224,[[["self"]],["t"]]],[11,"borrow_mut","","",224,[[["self"]],["t"]]],[11,"try_into","","",224,[[["self"]],["result"]]],[11,"get_type_id","","",224,[[["self"]],["typeid"]]],[11,"span","","",224,[[["self"]],["span"]]],[11,"span","","",224,[[["self"]],["span"]]],[11,"from","","",225,[[["t"]],["t"]]],[11,"into","","",225,[[["self"]],["u"]]],[11,"to_owned","","",225,[[["self"]],["t"]]],[11,"clone_into","","",225,N],[11,"try_from","","",225,[[["u"]],["result"]]],[11,"borrow","","",225,[[["self"]],["t"]]],[11,"borrow_mut","","",225,[[["self"]],["t"]]],[11,"try_into","","",225,[[["self"]],["result"]]],[11,"get_type_id","","",225,[[["self"]],["typeid"]]],[11,"span","","",225,[[["self"]],["span"]]],[11,"span","","",225,[[["self"]],["span"]]],[11,"from","","",226,[[["t"]],["t"]]],[11,"into","","",226,[[["self"]],["u"]]],[11,"to_owned","","",226,[[["self"]],["t"]]],[11,"clone_into","","",226,N],[11,"try_from","","",226,[[["u"]],["result"]]],[11,"borrow","","",226,[[["self"]],["t"]]],[11,"borrow_mut","","",226,[[["self"]],["t"]]],[11,"try_into","","",226,[[["self"]],["result"]]],[11,"get_type_id","","",226,[[["self"]],["typeid"]]],[11,"span","","",226,[[["self"]],["span"]]],[11,"span","","",226,[[["self"]],["span"]]],[11,"from","","",227,[[["t"]],["t"]]],[11,"into","","",227,[[["self"]],["u"]]],[11,"to_owned","","",227,[[["self"]],["t"]]],[11,"clone_into","","",227,N],[11,"try_from","","",227,[[["u"]],["result"]]],[11,"borrow","","",227,[[["self"]],["t"]]],[11,"borrow_mut","","",227,[[["self"]],["t"]]],[11,"try_into","","",227,[[["self"]],["result"]]],[11,"get_type_id","","",227,[[["self"]],["typeid"]]],[11,"span","","",227,[[["self"]],["span"]]],[11,"span","","",227,[[["self"]],["span"]]],[11,"from","","",228,[[["t"]],["t"]]],[11,"into","","",228,[[["self"]],["u"]]],[11,"to_owned","","",228,[[["self"]],["t"]]],[11,"clone_into","","",228,N],[11,"try_from","","",228,[[["u"]],["result"]]],[11,"borrow","","",228,[[["self"]],["t"]]],[11,"borrow_mut","","",228,[[["self"]],["t"]]],[11,"try_into","","",228,[[["self"]],["result"]]],[11,"get_type_id","","",228,[[["self"]],["typeid"]]],[11,"span","","",228,[[["self"]],["span"]]],[11,"span","","",228,[[["self"]],["span"]]],[11,"from","","",229,[[["t"]],["t"]]],[11,"into","","",229,[[["self"]],["u"]]],[11,"to_owned","","",229,[[["self"]],["t"]]],[11,"clone_into","","",229,N],[11,"try_from","","",229,[[["u"]],["result"]]],[11,"borrow","","",229,[[["self"]],["t"]]],[11,"borrow_mut","","",229,[[["self"]],["t"]]],[11,"try_into","","",229,[[["self"]],["result"]]],[11,"get_type_id","","",229,[[["self"]],["typeid"]]],[11,"span","","",229,[[["self"]],["span"]]],[11,"span","","",229,[[["self"]],["span"]]],[11,"from","","",230,[[["t"]],["t"]]],[11,"into","","",230,[[["self"]],["u"]]],[11,"to_owned","","",230,[[["self"]],["t"]]],[11,"clone_into","","",230,N],[11,"try_from","","",230,[[["u"]],["result"]]],[11,"borrow","","",230,[[["self"]],["t"]]],[11,"borrow_mut","","",230,[[["self"]],["t"]]],[11,"try_into","","",230,[[["self"]],["result"]]],[11,"get_type_id","","",230,[[["self"]],["typeid"]]],[11,"span","","",230,[[["self"]],["span"]]],[11,"span","","",230,[[["self"]],["span"]]],[11,"from","","",231,[[["t"]],["t"]]],[11,"into","","",231,[[["self"]],["u"]]],[11,"to_owned","","",231,[[["self"]],["t"]]],[11,"clone_into","","",231,N],[11,"try_from","","",231,[[["u"]],["result"]]],[11,"borrow","","",231,[[["self"]],["t"]]],[11,"borrow_mut","","",231,[[["self"]],["t"]]],[11,"try_into","","",231,[[["self"]],["result"]]],[11,"get_type_id","","",231,[[["self"]],["typeid"]]],[11,"span","","",231,[[["self"]],["span"]]],[11,"span","","",231,[[["self"]],["span"]]],[11,"from","","",232,[[["t"]],["t"]]],[11,"into","","",232,[[["self"]],["u"]]],[11,"to_owned","","",232,[[["self"]],["t"]]],[11,"clone_into","","",232,N],[11,"try_from","","",232,[[["u"]],["result"]]],[11,"borrow","","",232,[[["self"]],["t"]]],[11,"borrow_mut","","",232,[[["self"]],["t"]]],[11,"try_into","","",232,[[["self"]],["result"]]],[11,"get_type_id","","",232,[[["self"]],["typeid"]]],[11,"span","","",232,[[["self"]],["span"]]],[11,"span","","",232,[[["self"]],["span"]]],[11,"from","","",233,[[["t"]],["t"]]],[11,"into","","",233,[[["self"]],["u"]]],[11,"to_owned","","",233,[[["self"]],["t"]]],[11,"clone_into","","",233,N],[11,"try_from","","",233,[[["u"]],["result"]]],[11,"borrow","","",233,[[["self"]],["t"]]],[11,"borrow_mut","","",233,[[["self"]],["t"]]],[11,"try_into","","",233,[[["self"]],["result"]]],[11,"get_type_id","","",233,[[["self"]],["typeid"]]],[11,"span","","",233,[[["self"]],["span"]]],[11,"span","","",233,[[["self"]],["span"]]],[11,"from","","",234,[[["t"]],["t"]]],[11,"into","","",234,[[["self"]],["u"]]],[11,"to_owned","","",234,[[["self"]],["t"]]],[11,"clone_into","","",234,N],[11,"try_from","","",234,[[["u"]],["result"]]],[11,"borrow","","",234,[[["self"]],["t"]]],[11,"borrow_mut","","",234,[[["self"]],["t"]]],[11,"try_into","","",234,[[["self"]],["result"]]],[11,"get_type_id","","",234,[[["self"]],["typeid"]]],[11,"span","","",234,[[["self"]],["span"]]],[11,"span","","",234,[[["self"]],["span"]]],[11,"from","","",235,[[["t"]],["t"]]],[11,"into","","",235,[[["self"]],["u"]]],[11,"to_owned","","",235,[[["self"]],["t"]]],[11,"clone_into","","",235,N],[11,"try_from","","",235,[[["u"]],["result"]]],[11,"borrow","","",235,[[["self"]],["t"]]],[11,"borrow_mut","","",235,[[["self"]],["t"]]],[11,"try_into","","",235,[[["self"]],["result"]]],[11,"get_type_id","","",235,[[["self"]],["typeid"]]],[11,"span","","",235,[[["self"]],["span"]]],[11,"span","","",235,[[["self"]],["span"]]],[11,"from","","",236,[[["t"]],["t"]]],[11,"into","","",236,[[["self"]],["u"]]],[11,"to_owned","","",236,[[["self"]],["t"]]],[11,"clone_into","","",236,N],[11,"try_from","","",236,[[["u"]],["result"]]],[11,"borrow","","",236,[[["self"]],["t"]]],[11,"borrow_mut","","",236,[[["self"]],["t"]]],[11,"try_into","","",236,[[["self"]],["result"]]],[11,"get_type_id","","",236,[[["self"]],["typeid"]]],[11,"from","","",237,[[["t"]],["t"]]],[11,"into","","",237,[[["self"]],["u"]]],[11,"to_owned","","",237,[[["self"]],["t"]]],[11,"clone_into","","",237,N],[11,"try_from","","",237,[[["u"]],["result"]]],[11,"borrow","","",237,[[["self"]],["t"]]],[11,"borrow_mut","","",237,[[["self"]],["t"]]],[11,"try_into","","",237,[[["self"]],["result"]]],[11,"get_type_id","","",237,[[["self"]],["typeid"]]],[11,"from","","",238,[[["t"]],["t"]]],[11,"into","","",238,[[["self"]],["u"]]],[11,"to_owned","","",238,[[["self"]],["t"]]],[11,"clone_into","","",238,N],[11,"try_from","","",238,[[["u"]],["result"]]],[11,"borrow","","",238,[[["self"]],["t"]]],[11,"borrow_mut","","",238,[[["self"]],["t"]]],[11,"try_into","","",238,[[["self"]],["result"]]],[11,"get_type_id","","",238,[[["self"]],["typeid"]]],[11,"span","","",238,[[["self"]],["span"]]],[11,"span","","",238,[[["self"]],["span"]]],[11,"from","","",239,[[["t"]],["t"]]],[11,"into","","",239,[[["self"]],["u"]]],[11,"to_owned","","",239,[[["self"]],["t"]]],[11,"clone_into","","",239,N],[11,"try_from","","",239,[[["u"]],["result"]]],[11,"borrow","","",239,[[["self"]],["t"]]],[11,"borrow_mut","","",239,[[["self"]],["t"]]],[11,"try_into","","",239,[[["self"]],["result"]]],[11,"get_type_id","","",239,[[["self"]],["typeid"]]],[11,"from","","",240,[[["t"]],["t"]]],[11,"into","","",240,[[["self"]],["u"]]],[11,"to_owned","","",240,[[["self"]],["t"]]],[11,"clone_into","","",240,N],[11,"try_from","","",240,[[["u"]],["result"]]],[11,"borrow","","",240,[[["self"]],["t"]]],[11,"borrow_mut","","",240,[[["self"]],["t"]]],[11,"try_into","","",240,[[["self"]],["result"]]],[11,"get_type_id","","",240,[[["self"]],["typeid"]]],[11,"span","","",240,[[["self"]],["span"]]],[11,"span","","",240,[[["self"]],["span"]]],[11,"from","","",241,[[["t"]],["t"]]],[11,"into","","",241,[[["self"]],["u"]]],[11,"to_owned","","",241,[[["self"]],["t"]]],[11,"clone_into","","",241,N],[11,"try_from","","",241,[[["u"]],["result"]]],[11,"borrow","","",241,[[["self"]],["t"]]],[11,"borrow_mut","","",241,[[["self"]],["t"]]],[11,"try_into","","",241,[[["self"]],["result"]]],[11,"get_type_id","","",241,[[["self"]],["typeid"]]],[11,"span","","",241,[[["self"]],["span"]]],[11,"span","","",241,[[["self"]],["span"]]],[11,"from","","",242,[[["t"]],["t"]]],[11,"into","","",242,[[["self"]],["u"]]],[11,"to_owned","","",242,[[["self"]],["t"]]],[11,"clone_into","","",242,N],[11,"try_from","","",242,[[["u"]],["result"]]],[11,"borrow","","",242,[[["self"]],["t"]]],[11,"borrow_mut","","",242,[[["self"]],["t"]]],[11,"try_into","","",242,[[["self"]],["result"]]],[11,"get_type_id","","",242,[[["self"]],["typeid"]]],[11,"span","","",242,[[["self"]],["span"]]],[11,"span","","",242,[[["self"]],["span"]]],[11,"from","","",243,[[["t"]],["t"]]],[11,"into","","",243,[[["self"]],["u"]]],[11,"to_owned","","",243,[[["self"]],["t"]]],[11,"clone_into","","",243,N],[11,"try_from","","",243,[[["u"]],["result"]]],[11,"borrow","","",243,[[["self"]],["t"]]],[11,"borrow_mut","","",243,[[["self"]],["t"]]],[11,"try_into","","",243,[[["self"]],["result"]]],[11,"get_type_id","","",243,[[["self"]],["typeid"]]],[11,"span","","",243,[[["self"]],["span"]]],[11,"span","","",243,[[["self"]],["span"]]],[11,"from","","",335,[[["t"]],["t"]]],[11,"into","","",335,[[["self"]],["u"]]],[11,"to_owned","","",335,[[["self"]],["t"]]],[11,"clone_into","","",335,N],[11,"try_from","","",335,[[["u"]],["result"]]],[11,"borrow","","",335,[[["self"]],["t"]]],[11,"borrow_mut","","",335,[[["self"]],["t"]]],[11,"try_into","","",335,[[["self"]],["result"]]],[11,"get_type_id","","",335,[[["self"]],["typeid"]]],[11,"span","","",335,[[["self"]],["span"]]],[11,"peek","","",335,[[["cursor"]],["bool"]]],[11,"display","","",335,[[],["str"]]],[11,"span","","",335,[[["self"]],["span"]]],[11,"from","","",244,[[["t"]],["t"]]],[11,"into","","",244,[[["self"]],["u"]]],[11,"to_owned","","",244,[[["self"]],["t"]]],[11,"clone_into","","",244,N],[11,"try_from","","",244,[[["u"]],["result"]]],[11,"borrow","","",244,[[["self"]],["t"]]],[11,"borrow_mut","","",244,[[["self"]],["t"]]],[11,"try_into","","",244,[[["self"]],["result"]]],[11,"get_type_id","","",244,[[["self"]],["typeid"]]],[11,"span","","",244,[[["self"]],["span"]]],[11,"span","","",244,[[["self"]],["span"]]],[11,"from","","",245,[[["t"]],["t"]]],[11,"into","","",245,[[["self"]],["u"]]],[11,"to_owned","","",245,[[["self"]],["t"]]],[11,"clone_into","","",245,N],[11,"try_from","","",245,[[["u"]],["result"]]],[11,"borrow","","",245,[[["self"]],["t"]]],[11,"borrow_mut","","",245,[[["self"]],["t"]]],[11,"try_into","","",245,[[["self"]],["result"]]],[11,"get_type_id","","",245,[[["self"]],["typeid"]]],[11,"span","","",245,[[["self"]],["span"]]],[11,"span","","",245,[[["self"]],["span"]]],[11,"from","","",246,[[["t"]],["t"]]],[11,"into","","",246,[[["self"]],["u"]]],[11,"to_owned","","",246,[[["self"]],["t"]]],[11,"clone_into","","",246,N],[11,"try_from","","",246,[[["u"]],["result"]]],[11,"borrow","","",246,[[["self"]],["t"]]],[11,"borrow_mut","","",246,[[["self"]],["t"]]],[11,"try_into","","",246,[[["self"]],["result"]]],[11,"get_type_id","","",246,[[["self"]],["typeid"]]],[11,"span","","",246,[[["self"]],["span"]]],[11,"span","","",246,[[["self"]],["span"]]],[11,"from","","",247,[[["t"]],["t"]]],[11,"into","","",247,[[["self"]],["u"]]],[11,"to_owned","","",247,[[["self"]],["t"]]],[11,"clone_into","","",247,N],[11,"try_from","","",247,[[["u"]],["result"]]],[11,"borrow","","",247,[[["self"]],["t"]]],[11,"borrow_mut","","",247,[[["self"]],["t"]]],[11,"try_into","","",247,[[["self"]],["result"]]],[11,"get_type_id","","",247,[[["self"]],["typeid"]]],[11,"span","","",247,[[["self"]],["span"]]],[11,"span","","",247,[[["self"]],["span"]]],[11,"from","","",248,[[["t"]],["t"]]],[11,"into","","",248,[[["self"]],["u"]]],[11,"to_owned","","",248,[[["self"]],["t"]]],[11,"clone_into","","",248,N],[11,"try_from","","",248,[[["u"]],["result"]]],[11,"borrow","","",248,[[["self"]],["t"]]],[11,"borrow_mut","","",248,[[["self"]],["t"]]],[11,"try_into","","",248,[[["self"]],["result"]]],[11,"get_type_id","","",248,[[["self"]],["typeid"]]],[11,"span","","",248,[[["self"]],["span"]]],[11,"span","","",248,[[["self"]],["span"]]],[11,"from","","",336,[[["t"]],["t"]]],[11,"into","","",336,[[["self"]],["u"]]],[11,"to_owned","","",336,[[["self"]],["t"]]],[11,"clone_into","","",336,N],[11,"try_from","","",336,[[["u"]],["result"]]],[11,"borrow","","",336,[[["self"]],["t"]]],[11,"borrow_mut","","",336,[[["self"]],["t"]]],[11,"try_into","","",336,[[["self"]],["result"]]],[11,"get_type_id","","",336,[[["self"]],["typeid"]]],[11,"span","","",336,[[["self"]],["span"]]],[11,"peek","","",336,[[["cursor"]],["bool"]]],[11,"display","","",336,[[],["str"]]],[11,"span","","",336,[[["self"]],["span"]]],[11,"from","","",337,[[["t"]],["t"]]],[11,"into","","",337,[[["self"]],["u"]]],[11,"to_owned","","",337,[[["self"]],["t"]]],[11,"clone_into","","",337,N],[11,"try_from","","",337,[[["u"]],["result"]]],[11,"borrow","","",337,[[["self"]],["t"]]],[11,"borrow_mut","","",337,[[["self"]],["t"]]],[11,"try_into","","",337,[[["self"]],["result"]]],[11,"get_type_id","","",337,[[["self"]],["typeid"]]],[11,"span","","",337,[[["self"]],["span"]]],[11,"span","","",337,[[["self"]],["span"]]],[11,"from","","",249,[[["t"]],["t"]]],[11,"into","","",249,[[["self"]],["u"]]],[11,"to_owned","","",249,[[["self"]],["t"]]],[11,"clone_into","","",249,N],[11,"try_from","","",249,[[["u"]],["result"]]],[11,"borrow","","",249,[[["self"]],["t"]]],[11,"borrow_mut","","",249,[[["self"]],["t"]]],[11,"try_into","","",249,[[["self"]],["result"]]],[11,"get_type_id","","",249,[[["self"]],["typeid"]]],[11,"span","","",249,[[["self"]],["span"]]],[11,"span","","",249,[[["self"]],["span"]]],[11,"from","","",250,[[["t"]],["t"]]],[11,"into","","",250,[[["self"]],["u"]]],[11,"to_owned","","",250,[[["self"]],["t"]]],[11,"clone_into","","",250,N],[11,"try_from","","",250,[[["u"]],["result"]]],[11,"borrow","","",250,[[["self"]],["t"]]],[11,"borrow_mut","","",250,[[["self"]],["t"]]],[11,"try_into","","",250,[[["self"]],["result"]]],[11,"get_type_id","","",250,[[["self"]],["typeid"]]],[11,"span","","",250,[[["self"]],["span"]]],[11,"span","","",250,[[["self"]],["span"]]],[11,"from","","",251,[[["t"]],["t"]]],[11,"into","","",251,[[["self"]],["u"]]],[11,"to_owned","","",251,[[["self"]],["t"]]],[11,"clone_into","","",251,N],[11,"try_from","","",251,[[["u"]],["result"]]],[11,"borrow","","",251,[[["self"]],["t"]]],[11,"borrow_mut","","",251,[[["self"]],["t"]]],[11,"try_into","","",251,[[["self"]],["result"]]],[11,"get_type_id","","",251,[[["self"]],["typeid"]]],[11,"span","","",251,[[["self"]],["span"]]],[11,"span","","",251,[[["self"]],["span"]]],[11,"from","","",252,[[["t"]],["t"]]],[11,"into","","",252,[[["self"]],["u"]]],[11,"to_owned","","",252,[[["self"]],["t"]]],[11,"clone_into","","",252,N],[11,"try_from","","",252,[[["u"]],["result"]]],[11,"borrow","","",252,[[["self"]],["t"]]],[11,"borrow_mut","","",252,[[["self"]],["t"]]],[11,"try_into","","",252,[[["self"]],["result"]]],[11,"get_type_id","","",252,[[["self"]],["typeid"]]],[11,"span","","",252,[[["self"]],["span"]]],[11,"span","","",252,[[["self"]],["span"]]],[11,"from","","",253,[[["t"]],["t"]]],[11,"into","","",253,[[["self"]],["u"]]],[11,"to_owned","","",253,[[["self"]],["t"]]],[11,"clone_into","","",253,N],[11,"try_from","","",253,[[["u"]],["result"]]],[11,"borrow","","",253,[[["self"]],["t"]]],[11,"borrow_mut","","",253,[[["self"]],["t"]]],[11,"try_into","","",253,[[["self"]],["result"]]],[11,"get_type_id","","",253,[[["self"]],["typeid"]]],[11,"from","","",255,[[["t"]],["t"]]],[11,"into","","",255,[[["self"]],["u"]]],[11,"to_owned","","",255,[[["self"]],["t"]]],[11,"clone_into","","",255,N],[11,"try_from","","",255,[[["u"]],["result"]]],[11,"borrow","","",255,[[["self"]],["t"]]],[11,"borrow_mut","","",255,[[["self"]],["t"]]],[11,"try_into","","",255,[[["self"]],["result"]]],[11,"get_type_id","","",255,[[["self"]],["typeid"]]],[11,"span","","",255,[[["self"]],["span"]]],[11,"span","","",255,[[["self"]],["span"]]],[11,"from","","",256,[[["t"]],["t"]]],[11,"into","","",256,[[["self"]],["u"]]],[11,"to_owned","","",256,[[["self"]],["t"]]],[11,"clone_into","","",256,N],[11,"try_from","","",256,[[["u"]],["result"]]],[11,"borrow","","",256,[[["self"]],["t"]]],[11,"borrow_mut","","",256,[[["self"]],["t"]]],[11,"try_into","","",256,[[["self"]],["result"]]],[11,"get_type_id","","",256,[[["self"]],["typeid"]]],[11,"span","","",256,[[["self"]],["span"]]],[11,"span","","",256,[[["self"]],["span"]]],[11,"from","","",257,[[["t"]],["t"]]],[11,"into","","",257,[[["self"]],["u"]]],[11,"to_owned","","",257,[[["self"]],["t"]]],[11,"clone_into","","",257,N],[11,"try_from","","",257,[[["u"]],["result"]]],[11,"borrow","","",257,[[["self"]],["t"]]],[11,"borrow_mut","","",257,[[["self"]],["t"]]],[11,"try_into","","",257,[[["self"]],["result"]]],[11,"get_type_id","","",257,[[["self"]],["typeid"]]],[11,"span","","",257,[[["self"]],["span"]]],[11,"span","","",257,[[["self"]],["span"]]],[11,"from","","",258,[[["t"]],["t"]]],[11,"into","","",258,[[["self"]],["u"]]],[11,"to_owned","","",258,[[["self"]],["t"]]],[11,"clone_into","","",258,N],[11,"try_from","","",258,[[["u"]],["result"]]],[11,"borrow","","",258,[[["self"]],["t"]]],[11,"borrow_mut","","",258,[[["self"]],["t"]]],[11,"try_into","","",258,[[["self"]],["result"]]],[11,"get_type_id","","",258,[[["self"]],["typeid"]]],[11,"span","","",258,[[["self"]],["span"]]],[11,"span","","",258,[[["self"]],["span"]]],[11,"from","","",259,[[["t"]],["t"]]],[11,"into","","",259,[[["self"]],["u"]]],[11,"to_owned","","",259,[[["self"]],["t"]]],[11,"clone_into","","",259,N],[11,"try_from","","",259,[[["u"]],["result"]]],[11,"borrow","","",259,[[["self"]],["t"]]],[11,"borrow_mut","","",259,[[["self"]],["t"]]],[11,"try_into","","",259,[[["self"]],["result"]]],[11,"get_type_id","","",259,[[["self"]],["typeid"]]],[11,"span","","",259,[[["self"]],["span"]]],[11,"span","","",259,[[["self"]],["span"]]],[11,"from","","",260,[[["t"]],["t"]]],[11,"into","","",260,[[["self"]],["u"]]],[11,"to_owned","","",260,[[["self"]],["t"]]],[11,"clone_into","","",260,N],[11,"try_from","","",260,[[["u"]],["result"]]],[11,"borrow","","",260,[[["self"]],["t"]]],[11,"borrow_mut","","",260,[[["self"]],["t"]]],[11,"try_into","","",260,[[["self"]],["result"]]],[11,"get_type_id","","",260,[[["self"]],["typeid"]]],[11,"span","","",260,[[["self"]],["span"]]],[11,"span","","",260,[[["self"]],["span"]]],[11,"from","","",261,[[["t"]],["t"]]],[11,"into","","",261,[[["self"]],["u"]]],[11,"to_owned","","",261,[[["self"]],["t"]]],[11,"clone_into","","",261,N],[11,"try_from","","",261,[[["u"]],["result"]]],[11,"borrow","","",261,[[["self"]],["t"]]],[11,"borrow_mut","","",261,[[["self"]],["t"]]],[11,"try_into","","",261,[[["self"]],["result"]]],[11,"get_type_id","","",261,[[["self"]],["typeid"]]],[11,"span","","",261,[[["self"]],["span"]]],[11,"span","","",261,[[["self"]],["span"]]],[11,"from","","",338,[[["t"]],["t"]]],[11,"into","","",338,[[["self"]],["u"]]],[11,"to_owned","","",338,[[["self"]],["t"]]],[11,"clone_into","","",338,N],[11,"try_from","","",338,[[["u"]],["result"]]],[11,"borrow","","",338,[[["self"]],["t"]]],[11,"borrow_mut","","",338,[[["self"]],["t"]]],[11,"try_into","","",338,[[["self"]],["result"]]],[11,"get_type_id","","",338,[[["self"]],["typeid"]]],[11,"span","","",338,[[["self"]],["span"]]],[11,"peek","","",338,[[["cursor"]],["bool"]]],[11,"display","","",338,[[],["str"]]],[11,"span","","",338,[[["self"]],["span"]]],[11,"from","","",262,[[["t"]],["t"]]],[11,"into","","",262,[[["self"]],["u"]]],[11,"to_owned","","",262,[[["self"]],["t"]]],[11,"clone_into","","",262,N],[11,"try_from","","",262,[[["u"]],["result"]]],[11,"borrow","","",262,[[["self"]],["t"]]],[11,"borrow_mut","","",262,[[["self"]],["t"]]],[11,"try_into","","",262,[[["self"]],["result"]]],[11,"get_type_id","","",262,[[["self"]],["typeid"]]],[11,"span","","",262,[[["self"]],["span"]]],[11,"span","","",262,[[["self"]],["span"]]],[11,"from","","",263,[[["t"]],["t"]]],[11,"into","","",263,[[["self"]],["u"]]],[11,"to_owned","","",263,[[["self"]],["t"]]],[11,"clone_into","","",263,N],[11,"try_from","","",263,[[["u"]],["result"]]],[11,"borrow","","",263,[[["self"]],["t"]]],[11,"borrow_mut","","",263,[[["self"]],["t"]]],[11,"try_into","","",263,[[["self"]],["result"]]],[11,"get_type_id","","",263,[[["self"]],["typeid"]]],[11,"span","","",263,[[["self"]],["span"]]],[11,"span","","",263,[[["self"]],["span"]]],[11,"from","","",264,[[["t"]],["t"]]],[11,"into","","",264,[[["self"]],["u"]]],[11,"to_owned","","",264,[[["self"]],["t"]]],[11,"clone_into","","",264,N],[11,"try_from","","",264,[[["u"]],["result"]]],[11,"borrow","","",264,[[["self"]],["t"]]],[11,"borrow_mut","","",264,[[["self"]],["t"]]],[11,"try_into","","",264,[[["self"]],["result"]]],[11,"get_type_id","","",264,[[["self"]],["typeid"]]],[11,"span","","",264,[[["self"]],["span"]]],[11,"span","","",264,[[["self"]],["span"]]],[11,"from","","",265,[[["t"]],["t"]]],[11,"into","","",265,[[["self"]],["u"]]],[11,"to_owned","","",265,[[["self"]],["t"]]],[11,"clone_into","","",265,N],[11,"try_from","","",265,[[["u"]],["result"]]],[11,"borrow","","",265,[[["self"]],["t"]]],[11,"borrow_mut","","",265,[[["self"]],["t"]]],[11,"try_into","","",265,[[["self"]],["result"]]],[11,"get_type_id","","",265,[[["self"]],["typeid"]]],[11,"span","","",265,[[["self"]],["span"]]],[11,"span","","",265,[[["self"]],["span"]]],[11,"from","","",266,[[["t"]],["t"]]],[11,"into","","",266,[[["self"]],["u"]]],[11,"to_owned","","",266,[[["self"]],["t"]]],[11,"clone_into","","",266,N],[11,"try_from","","",266,[[["u"]],["result"]]],[11,"borrow","","",266,[[["self"]],["t"]]],[11,"borrow_mut","","",266,[[["self"]],["t"]]],[11,"try_into","","",266,[[["self"]],["result"]]],[11,"get_type_id","","",266,[[["self"]],["typeid"]]],[11,"span","","",266,[[["self"]],["span"]]],[11,"span","","",266,[[["self"]],["span"]]],[11,"from","","",339,[[["t"]],["t"]]],[11,"into","","",339,[[["self"]],["u"]]],[11,"to_owned","","",339,[[["self"]],["t"]]],[11,"clone_into","","",339,N],[11,"try_from","","",339,[[["u"]],["result"]]],[11,"borrow","","",339,[[["self"]],["t"]]],[11,"borrow_mut","","",339,[[["self"]],["t"]]],[11,"try_into","","",339,[[["self"]],["result"]]],[11,"get_type_id","","",339,[[["self"]],["typeid"]]],[11,"span","","",339,[[["self"]],["span"]]],[11,"peek","","",339,[[["cursor"]],["bool"]]],[11,"display","","",339,[[],["str"]]],[11,"span","","",339,[[["self"]],["span"]]],[11,"from","","",340,[[["t"]],["t"]]],[11,"into","","",340,[[["self"]],["u"]]],[11,"to_owned","","",340,[[["self"]],["t"]]],[11,"clone_into","","",340,N],[11,"try_from","","",340,[[["u"]],["result"]]],[11,"borrow","","",340,[[["self"]],["t"]]],[11,"borrow_mut","","",340,[[["self"]],["t"]]],[11,"try_into","","",340,[[["self"]],["result"]]],[11,"get_type_id","","",340,[[["self"]],["typeid"]]],[11,"span","","",340,[[["self"]],["span"]]],[11,"span","","",340,[[["self"]],["span"]]],[11,"from","","",267,[[["t"]],["t"]]],[11,"into","","",267,[[["self"]],["u"]]],[11,"to_owned","","",267,[[["self"]],["t"]]],[11,"clone_into","","",267,N],[11,"try_from","","",267,[[["u"]],["result"]]],[11,"borrow","","",267,[[["self"]],["t"]]],[11,"borrow_mut","","",267,[[["self"]],["t"]]],[11,"try_into","","",267,[[["self"]],["result"]]],[11,"get_type_id","","",267,[[["self"]],["typeid"]]],[11,"span","","",267,[[["self"]],["span"]]],[11,"span","","",267,[[["self"]],["span"]]],[11,"from","","",268,[[["t"]],["t"]]],[11,"into","","",268,[[["self"]],["u"]]],[11,"to_owned","","",268,[[["self"]],["t"]]],[11,"clone_into","","",268,N],[11,"try_from","","",268,[[["u"]],["result"]]],[11,"borrow","","",268,[[["self"]],["t"]]],[11,"borrow_mut","","",268,[[["self"]],["t"]]],[11,"try_into","","",268,[[["self"]],["result"]]],[11,"get_type_id","","",268,[[["self"]],["typeid"]]],[11,"span","","",268,[[["self"]],["span"]]],[11,"span","","",268,[[["self"]],["span"]]],[11,"from","","",269,[[["t"]],["t"]]],[11,"into","","",269,[[["self"]],["u"]]],[11,"to_owned","","",269,[[["self"]],["t"]]],[11,"clone_into","","",269,N],[11,"try_from","","",269,[[["u"]],["result"]]],[11,"borrow","","",269,[[["self"]],["t"]]],[11,"borrow_mut","","",269,[[["self"]],["t"]]],[11,"try_into","","",269,[[["self"]],["result"]]],[11,"get_type_id","","",269,[[["self"]],["typeid"]]],[11,"from","","",270,[[["t"]],["t"]]],[11,"into","","",270,[[["self"]],["u"]]],[11,"to_owned","","",270,[[["self"]],["t"]]],[11,"clone_into","","",270,N],[11,"try_from","","",270,[[["u"]],["result"]]],[11,"borrow","","",270,[[["self"]],["t"]]],[11,"borrow_mut","","",270,[[["self"]],["t"]]],[11,"try_into","","",270,[[["self"]],["result"]]],[11,"get_type_id","","",270,[[["self"]],["typeid"]]],[11,"span","","",270,[[["self"]],["span"]]],[11,"span","","",270,[[["self"]],["span"]]],[11,"from","","",271,[[["t"]],["t"]]],[11,"into","","",271,[[["self"]],["u"]]],[11,"to_owned","","",271,[[["self"]],["t"]]],[11,"clone_into","","",271,N],[11,"to_string","","",271,[[["self"]],["string"]]],[11,"try_from","","",271,[[["u"]],["result"]]],[11,"borrow","","",271,[[["self"]],["t"]]],[11,"borrow_mut","","",271,[[["self"]],["t"]]],[11,"try_into","","",271,[[["self"]],["result"]]],[11,"get_type_id","","",271,[[["self"]],["typeid"]]],[11,"span","","",271,[[["self"]],["span"]]],[11,"peek","","",271,[[["cursor"]],["bool"]]],[11,"display","","",271,[[],["str"]]],[11,"span","","",271,[[["self"]],["span"]]],[11,"from","","",272,[[["t"]],["t"]]],[11,"into","","",272,[[["self"]],["u"]]],[11,"to_owned","","",272,[[["self"]],["t"]]],[11,"clone_into","","",272,N],[11,"try_from","","",272,[[["u"]],["result"]]],[11,"borrow","","",272,[[["self"]],["t"]]],[11,"borrow_mut","","",272,[[["self"]],["t"]]],[11,"try_into","","",272,[[["self"]],["result"]]],[11,"get_type_id","","",272,[[["self"]],["typeid"]]],[11,"span","","",272,[[["self"]],["span"]]],[11,"span","","",272,[[["self"]],["span"]]],[11,"from","","",273,[[["t"]],["t"]]],[11,"into","","",273,[[["self"]],["u"]]],[11,"to_owned","","",273,[[["self"]],["t"]]],[11,"clone_into","","",273,N],[11,"try_from","","",273,[[["u"]],["result"]]],[11,"borrow","","",273,[[["self"]],["t"]]],[11,"borrow_mut","","",273,[[["self"]],["t"]]],[11,"try_into","","",273,[[["self"]],["result"]]],[11,"get_type_id","","",273,[[["self"]],["typeid"]]],[11,"span","","",273,[[["self"]],["span"]]],[11,"span","","",273,[[["self"]],["span"]]],[11,"from","","",274,[[["t"]],["t"]]],[11,"into","","",274,[[["self"]],["u"]]],[11,"to_owned","","",274,[[["self"]],["t"]]],[11,"clone_into","","",274,N],[11,"try_from","","",274,[[["u"]],["result"]]],[11,"borrow","","",274,[[["self"]],["t"]]],[11,"borrow_mut","","",274,[[["self"]],["t"]]],[11,"try_into","","",274,[[["self"]],["result"]]],[11,"get_type_id","","",274,[[["self"]],["typeid"]]],[11,"span","","",274,[[["self"]],["span"]]],[11,"span","","",274,[[["self"]],["span"]]],[11,"from","","",275,[[["t"]],["t"]]],[11,"into","","",275,[[["self"]],["u"]]],[11,"to_owned","","",275,[[["self"]],["t"]]],[11,"clone_into","","",275,N],[11,"try_from","","",275,[[["u"]],["result"]]],[11,"borrow","","",275,[[["self"]],["t"]]],[11,"borrow_mut","","",275,[[["self"]],["t"]]],[11,"try_into","","",275,[[["self"]],["result"]]],[11,"get_type_id","","",275,[[["self"]],["typeid"]]],[11,"span","","",275,[[["self"]],["span"]]],[11,"span","","",275,[[["self"]],["span"]]],[11,"from","","",276,[[["t"]],["t"]]],[11,"into","","",276,[[["self"]],["u"]]],[11,"to_owned","","",276,[[["self"]],["t"]]],[11,"clone_into","","",276,N],[11,"try_from","","",276,[[["u"]],["result"]]],[11,"borrow","","",276,[[["self"]],["t"]]],[11,"borrow_mut","","",276,[[["self"]],["t"]]],[11,"try_into","","",276,[[["self"]],["result"]]],[11,"get_type_id","","",276,[[["self"]],["typeid"]]],[11,"span","","",276,[[["self"]],["span"]]],[11,"span","","",276,[[["self"]],["span"]]],[11,"from","","",277,[[["t"]],["t"]]],[11,"into","","",277,[[["self"]],["u"]]],[11,"to_owned","","",277,[[["self"]],["t"]]],[11,"clone_into","","",277,N],[11,"try_from","","",277,[[["u"]],["result"]]],[11,"borrow","","",277,[[["self"]],["t"]]],[11,"borrow_mut","","",277,[[["self"]],["t"]]],[11,"try_into","","",277,[[["self"]],["result"]]],[11,"get_type_id","","",277,[[["self"]],["typeid"]]],[11,"span","","",277,[[["self"]],["span"]]],[11,"span","","",277,[[["self"]],["span"]]],[11,"from","","",278,[[["t"]],["t"]]],[11,"into","","",278,[[["self"]],["u"]]],[11,"to_owned","","",278,[[["self"]],["t"]]],[11,"clone_into","","",278,N],[11,"try_from","","",278,[[["u"]],["result"]]],[11,"borrow","","",278,[[["self"]],["t"]]],[11,"borrow_mut","","",278,[[["self"]],["t"]]],[11,"try_into","","",278,[[["self"]],["result"]]],[11,"get_type_id","","",278,[[["self"]],["typeid"]]],[11,"from","","",279,[[["t"]],["t"]]],[11,"into","","",279,[[["self"]],["u"]]],[11,"to_owned","","",279,[[["self"]],["t"]]],[11,"clone_into","","",279,N],[11,"try_from","","",279,[[["u"]],["result"]]],[11,"borrow","","",279,[[["self"]],["t"]]],[11,"borrow_mut","","",279,[[["self"]],["t"]]],[11,"try_into","","",279,[[["self"]],["result"]]],[11,"get_type_id","","",279,[[["self"]],["typeid"]]],[11,"span","","",279,[[["self"]],["span"]]],[11,"span","","",279,[[["self"]],["span"]]],[11,"from","","",280,[[["t"]],["t"]]],[11,"into","","",280,[[["self"]],["u"]]],[11,"to_owned","","",280,[[["self"]],["t"]]],[11,"clone_into","","",280,N],[11,"try_from","","",280,[[["u"]],["result"]]],[11,"borrow","","",280,[[["self"]],["t"]]],[11,"borrow_mut","","",280,[[["self"]],["t"]]],[11,"try_into","","",280,[[["self"]],["result"]]],[11,"get_type_id","","",280,[[["self"]],["typeid"]]],[11,"span","","",280,[[["self"]],["span"]]],[11,"span","","",280,[[["self"]],["span"]]],[11,"from","","",281,[[["t"]],["t"]]],[11,"into","","",281,[[["self"]],["u"]]],[11,"to_owned","","",281,[[["self"]],["t"]]],[11,"clone_into","","",281,N],[11,"try_from","","",281,[[["u"]],["result"]]],[11,"borrow","","",281,[[["self"]],["t"]]],[11,"borrow_mut","","",281,[[["self"]],["t"]]],[11,"try_into","","",281,[[["self"]],["result"]]],[11,"get_type_id","","",281,[[["self"]],["typeid"]]],[11,"span","","",281,[[["self"]],["span"]]],[11,"span","","",281,[[["self"]],["span"]]],[11,"from","","",282,[[["t"]],["t"]]],[11,"into","","",282,[[["self"]],["u"]]],[11,"to_owned","","",282,[[["self"]],["t"]]],[11,"clone_into","","",282,N],[11,"try_from","","",282,[[["u"]],["result"]]],[11,"borrow","","",282,[[["self"]],["t"]]],[11,"borrow_mut","","",282,[[["self"]],["t"]]],[11,"try_into","","",282,[[["self"]],["result"]]],[11,"get_type_id","","",282,[[["self"]],["typeid"]]],[11,"span","","",282,[[["self"]],["span"]]],[11,"span","","",282,[[["self"]],["span"]]],[11,"from","","",283,[[["t"]],["t"]]],[11,"into","","",283,[[["self"]],["u"]]],[11,"to_owned","","",283,[[["self"]],["t"]]],[11,"clone_into","","",283,N],[11,"try_from","","",283,[[["u"]],["result"]]],[11,"borrow","","",283,[[["self"]],["t"]]],[11,"borrow_mut","","",283,[[["self"]],["t"]]],[11,"try_into","","",283,[[["self"]],["result"]]],[11,"get_type_id","","",283,[[["self"]],["typeid"]]],[11,"span","","",283,[[["self"]],["span"]]],[11,"span","","",283,[[["self"]],["span"]]],[11,"from","","",284,[[["t"]],["t"]]],[11,"into","","",284,[[["self"]],["u"]]],[11,"to_owned","","",284,[[["self"]],["t"]]],[11,"clone_into","","",284,N],[11,"try_from","","",284,[[["u"]],["result"]]],[11,"borrow","","",284,[[["self"]],["t"]]],[11,"borrow_mut","","",284,[[["self"]],["t"]]],[11,"try_into","","",284,[[["self"]],["result"]]],[11,"get_type_id","","",284,[[["self"]],["typeid"]]],[11,"span","","",284,[[["self"]],["span"]]],[11,"span","","",284,[[["self"]],["span"]]],[11,"from","","",285,[[["t"]],["t"]]],[11,"into","","",285,[[["self"]],["u"]]],[11,"to_owned","","",285,[[["self"]],["t"]]],[11,"clone_into","","",285,N],[11,"try_from","","",285,[[["u"]],["result"]]],[11,"borrow","","",285,[[["self"]],["t"]]],[11,"borrow_mut","","",285,[[["self"]],["t"]]],[11,"try_into","","",285,[[["self"]],["result"]]],[11,"get_type_id","","",285,[[["self"]],["typeid"]]],[11,"span","","",285,[[["self"]],["span"]]],[11,"span","","",285,[[["self"]],["span"]]],[11,"from","","",341,[[["t"]],["t"]]],[11,"into","","",341,[[["self"]],["u"]]],[11,"to_owned","","",341,[[["self"]],["t"]]],[11,"clone_into","","",341,N],[11,"try_from","","",341,[[["u"]],["result"]]],[11,"borrow","","",341,[[["self"]],["t"]]],[11,"borrow_mut","","",341,[[["self"]],["t"]]],[11,"try_into","","",341,[[["self"]],["result"]]],[11,"get_type_id","","",341,[[["self"]],["typeid"]]],[11,"span","","",341,[[["self"]],["span"]]],[11,"peek","","",341,[[["cursor"]],["bool"]]],[11,"display","","",341,[[],["str"]]],[11,"span","","",341,[[["self"]],["span"]]],[11,"from","","",286,[[["t"]],["t"]]],[11,"into","","",286,[[["self"]],["u"]]],[11,"to_owned","","",286,[[["self"]],["t"]]],[11,"clone_into","","",286,N],[11,"try_from","","",286,[[["u"]],["result"]]],[11,"borrow","","",286,[[["self"]],["t"]]],[11,"borrow_mut","","",286,[[["self"]],["t"]]],[11,"try_into","","",286,[[["self"]],["result"]]],[11,"get_type_id","","",286,[[["self"]],["typeid"]]],[11,"span","","",286,[[["self"]],["span"]]],[11,"span","","",286,[[["self"]],["span"]]],[11,"from","","",287,[[["t"]],["t"]]],[11,"into","","",287,[[["self"]],["u"]]],[11,"to_owned","","",287,[[["self"]],["t"]]],[11,"clone_into","","",287,N],[11,"try_from","","",287,[[["u"]],["result"]]],[11,"borrow","","",287,[[["self"]],["t"]]],[11,"borrow_mut","","",287,[[["self"]],["t"]]],[11,"try_into","","",287,[[["self"]],["result"]]],[11,"get_type_id","","",287,[[["self"]],["typeid"]]],[11,"span","","",287,[[["self"]],["span"]]],[11,"span","","",287,[[["self"]],["span"]]],[11,"from","","",288,[[["t"]],["t"]]],[11,"into","","",288,[[["self"]],["u"]]],[11,"to_owned","","",288,[[["self"]],["t"]]],[11,"clone_into","","",288,N],[11,"try_from","","",288,[[["u"]],["result"]]],[11,"borrow","","",288,[[["self"]],["t"]]],[11,"borrow_mut","","",288,[[["self"]],["t"]]],[11,"try_into","","",288,[[["self"]],["result"]]],[11,"get_type_id","","",288,[[["self"]],["typeid"]]],[11,"span","","",288,[[["self"]],["span"]]],[11,"span","","",288,[[["self"]],["span"]]],[11,"from","","",289,[[["t"]],["t"]]],[11,"into","","",289,[[["self"]],["u"]]],[11,"to_owned","","",289,[[["self"]],["t"]]],[11,"clone_into","","",289,N],[11,"try_from","","",289,[[["u"]],["result"]]],[11,"borrow","","",289,[[["self"]],["t"]]],[11,"borrow_mut","","",289,[[["self"]],["t"]]],[11,"try_into","","",289,[[["self"]],["result"]]],[11,"get_type_id","","",289,[[["self"]],["typeid"]]],[11,"span","","",289,[[["self"]],["span"]]],[11,"span","","",289,[[["self"]],["span"]]],[11,"from","","",290,[[["t"]],["t"]]],[11,"into","","",290,[[["self"]],["u"]]],[11,"to_owned","","",290,[[["self"]],["t"]]],[11,"clone_into","","",290,N],[11,"try_from","","",290,[[["u"]],["result"]]],[11,"borrow","","",290,[[["self"]],["t"]]],[11,"borrow_mut","","",290,[[["self"]],["t"]]],[11,"try_into","","",290,[[["self"]],["result"]]],[11,"get_type_id","","",290,[[["self"]],["typeid"]]],[11,"span","","",290,[[["self"]],["span"]]],[11,"span","","",290,[[["self"]],["span"]]],[11,"from","","",291,[[["t"]],["t"]]],[11,"into","","",291,[[["self"]],["u"]]],[11,"to_owned","","",291,[[["self"]],["t"]]],[11,"clone_into","","",291,N],[11,"try_from","","",291,[[["u"]],["result"]]],[11,"borrow","","",291,[[["self"]],["t"]]],[11,"borrow_mut","","",291,[[["self"]],["t"]]],[11,"try_into","","",291,[[["self"]],["result"]]],[11,"get_type_id","","",291,[[["self"]],["typeid"]]],[11,"span","","",291,[[["self"]],["span"]]],[11,"span","","",291,[[["self"]],["span"]]],[11,"from","","",292,[[["t"]],["t"]]],[11,"into","","",292,[[["self"]],["u"]]],[11,"to_owned","","",292,[[["self"]],["t"]]],[11,"clone_into","","",292,N],[11,"try_from","","",292,[[["u"]],["result"]]],[11,"borrow","","",292,[[["self"]],["t"]]],[11,"borrow_mut","","",292,[[["self"]],["t"]]],[11,"try_into","","",292,[[["self"]],["result"]]],[11,"get_type_id","","",292,[[["self"]],["typeid"]]],[11,"span","","",292,[[["self"]],["span"]]],[11,"span","","",292,[[["self"]],["span"]]],[11,"from","","",293,[[["t"]],["t"]]],[11,"into","","",293,[[["self"]],["u"]]],[11,"to_owned","","",293,[[["self"]],["t"]]],[11,"clone_into","","",293,N],[11,"try_from","","",293,[[["u"]],["result"]]],[11,"borrow","","",293,[[["self"]],["t"]]],[11,"borrow_mut","","",293,[[["self"]],["t"]]],[11,"try_into","","",293,[[["self"]],["result"]]],[11,"get_type_id","","",293,[[["self"]],["typeid"]]],[11,"span","","",293,[[["self"]],["span"]]],[11,"span","","",293,[[["self"]],["span"]]],[11,"from","","",294,[[["t"]],["t"]]],[11,"into","","",294,[[["self"]],["u"]]],[11,"to_owned","","",294,[[["self"]],["t"]]],[11,"clone_into","","",294,N],[11,"try_from","","",294,[[["u"]],["result"]]],[11,"borrow","","",294,[[["self"]],["t"]]],[11,"borrow_mut","","",294,[[["self"]],["t"]]],[11,"try_into","","",294,[[["self"]],["result"]]],[11,"get_type_id","","",294,[[["self"]],["typeid"]]],[11,"span","","",294,[[["self"]],["span"]]],[11,"span","","",294,[[["self"]],["span"]]],[11,"from","","",295,[[["t"]],["t"]]],[11,"into","","",295,[[["self"]],["u"]]],[11,"to_owned","","",295,[[["self"]],["t"]]],[11,"clone_into","","",295,N],[11,"try_from","","",295,[[["u"]],["result"]]],[11,"borrow","","",295,[[["self"]],["t"]]],[11,"borrow_mut","","",295,[[["self"]],["t"]]],[11,"try_into","","",295,[[["self"]],["result"]]],[11,"get_type_id","","",295,[[["self"]],["typeid"]]],[11,"from","","",296,[[["t"]],["t"]]],[11,"into","","",296,[[["self"]],["u"]]],[11,"to_owned","","",296,[[["self"]],["t"]]],[11,"clone_into","","",296,N],[11,"try_from","","",296,[[["u"]],["result"]]],[11,"borrow","","",296,[[["self"]],["t"]]],[11,"borrow_mut","","",296,[[["self"]],["t"]]],[11,"try_into","","",296,[[["self"]],["result"]]],[11,"get_type_id","","",296,[[["self"]],["typeid"]]],[11,"span","","",296,[[["self"]],["span"]]],[11,"span","","",296,[[["self"]],["span"]]],[11,"from","","",297,[[["t"]],["t"]]],[11,"into","","",297,[[["self"]],["u"]]],[11,"to_owned","","",297,[[["self"]],["t"]]],[11,"clone_into","","",297,N],[11,"try_from","","",297,[[["u"]],["result"]]],[11,"borrow","","",297,[[["self"]],["t"]]],[11,"borrow_mut","","",297,[[["self"]],["t"]]],[11,"try_into","","",297,[[["self"]],["result"]]],[11,"get_type_id","","",297,[[["self"]],["typeid"]]],[11,"span","","",297,[[["self"]],["span"]]],[11,"span","","",297,[[["self"]],["span"]]],[11,"from","","",298,[[["t"]],["t"]]],[11,"into","","",298,[[["self"]],["u"]]],[11,"to_owned","","",298,[[["self"]],["t"]]],[11,"clone_into","","",298,N],[11,"try_from","","",298,[[["u"]],["result"]]],[11,"borrow","","",298,[[["self"]],["t"]]],[11,"borrow_mut","","",298,[[["self"]],["t"]]],[11,"try_into","","",298,[[["self"]],["result"]]],[11,"get_type_id","","",298,[[["self"]],["typeid"]]],[11,"span","","",298,[[["self"]],["span"]]],[11,"span","","",298,[[["self"]],["span"]]],[11,"from","","",299,[[["t"]],["t"]]],[11,"into","","",299,[[["self"]],["u"]]],[11,"to_owned","","",299,[[["self"]],["t"]]],[11,"clone_into","","",299,N],[11,"try_from","","",299,[[["u"]],["result"]]],[11,"borrow","","",299,[[["self"]],["t"]]],[11,"borrow_mut","","",299,[[["self"]],["t"]]],[11,"try_into","","",299,[[["self"]],["result"]]],[11,"get_type_id","","",299,[[["self"]],["typeid"]]],[11,"span","","",299,[[["self"]],["span"]]],[11,"span","","",299,[[["self"]],["span"]]],[11,"from","","",300,[[["t"]],["t"]]],[11,"into","","",300,[[["self"]],["u"]]],[11,"to_owned","","",300,[[["self"]],["t"]]],[11,"clone_into","","",300,N],[11,"try_from","","",300,[[["u"]],["result"]]],[11,"borrow","","",300,[[["self"]],["t"]]],[11,"borrow_mut","","",300,[[["self"]],["t"]]],[11,"try_into","","",300,[[["self"]],["result"]]],[11,"get_type_id","","",300,[[["self"]],["typeid"]]],[11,"span","","",300,[[["self"]],["span"]]],[11,"span","","",300,[[["self"]],["span"]]],[11,"from","","",301,[[["t"]],["t"]]],[11,"into","","",301,[[["self"]],["u"]]],[11,"to_owned","","",301,[[["self"]],["t"]]],[11,"clone_into","","",301,N],[11,"try_from","","",301,[[["u"]],["result"]]],[11,"borrow","","",301,[[["self"]],["t"]]],[11,"borrow_mut","","",301,[[["self"]],["t"]]],[11,"try_into","","",301,[[["self"]],["result"]]],[11,"get_type_id","","",301,[[["self"]],["typeid"]]],[11,"span","","",301,[[["self"]],["span"]]],[11,"span","","",301,[[["self"]],["span"]]],[11,"from","","",302,[[["t"]],["t"]]],[11,"into","","",302,[[["self"]],["u"]]],[11,"to_owned","","",302,[[["self"]],["t"]]],[11,"clone_into","","",302,N],[11,"try_from","","",302,[[["u"]],["result"]]],[11,"borrow","","",302,[[["self"]],["t"]]],[11,"borrow_mut","","",302,[[["self"]],["t"]]],[11,"try_into","","",302,[[["self"]],["result"]]],[11,"get_type_id","","",302,[[["self"]],["typeid"]]],[11,"span","","",302,[[["self"]],["span"]]],[11,"peek","","",302,[[["cursor"]],["bool"]]],[11,"display","","",302,[[],["str"]]],[11,"span","","",302,[[["self"]],["span"]]],[11,"from","","",303,[[["t"]],["t"]]],[11,"into","","",303,[[["self"]],["u"]]],[11,"to_owned","","",303,[[["self"]],["t"]]],[11,"clone_into","","",303,N],[11,"try_from","","",303,[[["u"]],["result"]]],[11,"borrow","","",303,[[["self"]],["t"]]],[11,"borrow_mut","","",303,[[["self"]],["t"]]],[11,"try_into","","",303,[[["self"]],["result"]]],[11,"get_type_id","","",303,[[["self"]],["typeid"]]],[11,"span","","",303,[[["self"]],["span"]]],[11,"span","","",303,[[["self"]],["span"]]],[11,"from","","",304,[[["t"]],["t"]]],[11,"into","","",304,[[["self"]],["u"]]],[11,"to_owned","","",304,[[["self"]],["t"]]],[11,"clone_into","","",304,N],[11,"try_from","","",304,[[["u"]],["result"]]],[11,"borrow","","",304,[[["self"]],["t"]]],[11,"borrow_mut","","",304,[[["self"]],["t"]]],[11,"try_into","","",304,[[["self"]],["result"]]],[11,"get_type_id","","",304,[[["self"]],["typeid"]]],[11,"span","","",304,[[["self"]],["span"]]],[11,"span","","",304,[[["self"]],["span"]]],[11,"from","","",305,[[["t"]],["t"]]],[11,"into","","",305,[[["self"]],["u"]]],[11,"to_owned","","",305,[[["self"]],["t"]]],[11,"clone_into","","",305,N],[11,"try_from","","",305,[[["u"]],["result"]]],[11,"borrow","","",305,[[["self"]],["t"]]],[11,"borrow_mut","","",305,[[["self"]],["t"]]],[11,"try_into","","",305,[[["self"]],["result"]]],[11,"get_type_id","","",305,[[["self"]],["typeid"]]],[11,"span","","",305,[[["self"]],["span"]]],[11,"span","","",305,[[["self"]],["span"]]],[11,"from","","",306,[[["t"]],["t"]]],[11,"into","","",306,[[["self"]],["u"]]],[11,"to_owned","","",306,[[["self"]],["t"]]],[11,"clone_into","","",306,N],[11,"try_from","","",306,[[["u"]],["result"]]],[11,"borrow","","",306,[[["self"]],["t"]]],[11,"borrow_mut","","",306,[[["self"]],["t"]]],[11,"try_into","","",306,[[["self"]],["result"]]],[11,"get_type_id","","",306,[[["self"]],["typeid"]]],[11,"from","","",307,[[["t"]],["t"]]],[11,"into","","",307,[[["self"]],["u"]]],[11,"to_owned","","",307,[[["self"]],["t"]]],[11,"clone_into","","",307,N],[11,"try_from","","",307,[[["u"]],["result"]]],[11,"borrow","","",307,[[["self"]],["t"]]],[11,"borrow_mut","","",307,[[["self"]],["t"]]],[11,"try_into","","",307,[[["self"]],["result"]]],[11,"get_type_id","","",307,[[["self"]],["typeid"]]],[11,"span","","",307,[[["self"]],["span"]]],[11,"span","","",307,[[["self"]],["span"]]],[11,"from","","",308,[[["t"]],["t"]]],[11,"into","","",308,[[["self"]],["u"]]],[11,"to_owned","","",308,[[["self"]],["t"]]],[11,"clone_into","","",308,N],[11,"try_from","","",308,[[["u"]],["result"]]],[11,"borrow","","",308,[[["self"]],["t"]]],[11,"borrow_mut","","",308,[[["self"]],["t"]]],[11,"try_into","","",308,[[["self"]],["result"]]],[11,"get_type_id","","",308,[[["self"]],["typeid"]]],[11,"span","","",308,[[["self"]],["span"]]],[11,"span","","",308,[[["self"]],["span"]]],[11,"from","","",309,[[["t"]],["t"]]],[11,"into","","",309,[[["self"]],["u"]]],[11,"to_owned","","",309,[[["self"]],["t"]]],[11,"clone_into","","",309,N],[11,"try_from","","",309,[[["u"]],["result"]]],[11,"borrow","","",309,[[["self"]],["t"]]],[11,"borrow_mut","","",309,[[["self"]],["t"]]],[11,"try_into","","",309,[[["self"]],["result"]]],[11,"get_type_id","","",309,[[["self"]],["typeid"]]],[11,"from","","",310,[[["t"]],["t"]]],[11,"into","","",310,[[["self"]],["u"]]],[11,"to_owned","","",310,[[["self"]],["t"]]],[11,"clone_into","","",310,N],[11,"try_from","","",310,[[["u"]],["result"]]],[11,"borrow","","",310,[[["self"]],["t"]]],[11,"borrow_mut","","",310,[[["self"]],["t"]]],[11,"try_into","","",310,[[["self"]],["result"]]],[11,"get_type_id","","",310,[[["self"]],["typeid"]]],[11,"span","","",310,[[["self"]],["span"]]],[11,"span","","",310,[[["self"]],["span"]]],[11,"from","","",311,[[["t"]],["t"]]],[11,"into","","",311,[[["self"]],["u"]]],[11,"to_owned","","",311,[[["self"]],["t"]]],[11,"clone_into","","",311,N],[11,"try_from","","",311,[[["u"]],["result"]]],[11,"borrow","","",311,[[["self"]],["t"]]],[11,"borrow_mut","","",311,[[["self"]],["t"]]],[11,"try_into","","",311,[[["self"]],["result"]]],[11,"get_type_id","","",311,[[["self"]],["typeid"]]],[11,"span","","",311,[[["self"]],["span"]]],[11,"span","","",311,[[["self"]],["span"]]],[11,"from","","",312,[[["t"]],["t"]]],[11,"into","","",312,[[["self"]],["u"]]],[11,"to_owned","","",312,[[["self"]],["t"]]],[11,"clone_into","","",312,N],[11,"try_from","","",312,[[["u"]],["result"]]],[11,"borrow","","",312,[[["self"]],["t"]]],[11,"borrow_mut","","",312,[[["self"]],["t"]]],[11,"try_into","","",312,[[["self"]],["result"]]],[11,"get_type_id","","",312,[[["self"]],["typeid"]]],[11,"span","","",312,[[["self"]],["span"]]],[11,"span","","",312,[[["self"]],["span"]]],[11,"from","","",313,[[["t"]],["t"]]],[11,"into","","",313,[[["self"]],["u"]]],[11,"to_owned","","",313,[[["self"]],["t"]]],[11,"clone_into","","",313,N],[11,"try_from","","",313,[[["u"]],["result"]]],[11,"borrow","","",313,[[["self"]],["t"]]],[11,"borrow_mut","","",313,[[["self"]],["t"]]],[11,"try_into","","",313,[[["self"]],["result"]]],[11,"get_type_id","","",313,[[["self"]],["typeid"]]],[11,"span","","",313,[[["self"]],["span"]]],[11,"span","","",313,[[["self"]],["span"]]],[11,"from","devise","",314,[[["t"]],["t"]]],[11,"into","","",314,[[["self"]],["u"]]],[11,"to_owned","","",314,[[["self"]],["t"]]],[11,"clone_into","","",314,N],[11,"try_from","","",314,[[["u"]],["result"]]],[11,"borrow","","",314,[[["self"]],["t"]]],[11,"borrow_mut","","",314,[[["self"]],["t"]]],[11,"try_into","","",314,[[["self"]],["result"]]],[11,"get_type_id","","",314,[[["self"]],["typeid"]]],[11,"span","","",314,[[["self"]],["span"]]],[11,"span","","",314,[[["self"]],["span"]]],[11,"from","","",342,[[["t"]],["t"]]],[11,"into","","",342,[[["self"]],["u"]]],[11,"to_owned","","",342,[[["self"]],["t"]]],[11,"clone_into","","",342,N],[11,"try_from","","",342,[[["u"]],["result"]]],[11,"borrow","","",342,[[["self"]],["t"]]],[11,"borrow_mut","","",342,[[["self"]],["t"]]],[11,"try_into","","",342,[[["self"]],["result"]]],[11,"get_type_id","","",342,[[["self"]],["typeid"]]],[11,"span","","",342,[[["self"]],["span"]]],[11,"from","","",315,[[["t"]],["t"]]],[11,"into","","",315,[[["self"]],["u"]]],[11,"try_from","","",315,[[["u"]],["result"]]],[11,"borrow","","",315,[[["self"]],["t"]]],[11,"borrow_mut","","",315,[[["self"]],["t"]]],[11,"try_into","","",315,[[["self"]],["result"]]],[11,"get_type_id","","",315,[[["self"]],["typeid"]]],[11,"from","","",343,[[["t"]],["t"]]],[11,"into","","",343,[[["self"]],["u"]]],[11,"to_owned","","",343,[[["self"]],["t"]]],[11,"clone_into","","",343,N],[11,"try_from","","",343,[[["u"]],["result"]]],[11,"borrow","","",343,[[["self"]],["t"]]],[11,"borrow_mut","","",343,[[["self"]],["t"]]],[11,"try_into","","",343,[[["self"]],["result"]]],[11,"get_type_id","","",343,[[["self"]],["typeid"]]],[11,"from","","",317,[[["t"]],["t"]]],[11,"into","","",317,[[["self"]],["u"]]],[11,"to_owned","","",317,[[["self"]],["t"]]],[11,"clone_into","","",317,N],[11,"try_from","","",317,[[["u"]],["result"]]],[11,"borrow","","",317,[[["self"]],["t"]]],[11,"borrow_mut","","",317,[[["self"]],["t"]]],[11,"try_into","","",317,[[["self"]],["result"]]],[11,"get_type_id","","",317,[[["self"]],["typeid"]]],[11,"from","","",318,[[["t"]],["t"]]],[11,"into","","",318,[[["self"]],["u"]]],[11,"to_owned","","",318,[[["self"]],["t"]]],[11,"clone_into","","",318,N],[11,"try_from","","",318,[[["u"]],["result"]]],[11,"borrow","","",318,[[["self"]],["t"]]],[11,"borrow_mut","","",318,[[["self"]],["t"]]],[11,"try_into","","",318,[[["self"]],["result"]]],[11,"get_type_id","","",318,[[["self"]],["typeid"]]],[11,"span","","",318,[[["self"]],["span"]]],[11,"span","","",318,[[["self"]],["span"]]],[11,"hash","","",319,N],[11,"hash","","",343,N],[11,"fmt","","",343,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",319,[[["self"],["formatter"]],["result",["error"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",343,[[["self"],["genericsupport"]],["genericsupport"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",319,[[["self"],["datasupport"]],["datasupport"]]],[11,"cmp","","",319,[[["self"],["datasupport"]],["ordering"]]],[11,"cmp","","",343,[[["self"],["genericsupport"]],["ordering"]]],[11,"bitor_assign","","Adds the set of flags.",343,N],[11,"bitor_assign","","Adds the set of flags.",319,N],[11,"eq","","",319,[[["self"],["datasupport"]],["bool"]]],[11,"ne","","",319,[[["self"],["datasupport"]],["bool"]]],[11,"eq","devise::ext","",2,[[["self"],["generickind"]],["bool"]]],[11,"eq","devise","",343,[[["self"],["genericsupport"]],["bool"]]],[11,"ne","","",343,[[["self"],["genericsupport"]],["bool"]]],[11,"bitor","","Returns the union of the two sets of flags.",343,[[["self"],["genericsupport"]],["genericsupport"]]],[11,"bitor","","Returns the union of the two sets of flags.",319,[[["self"],["datasupport"]],["datasupport"]]],[11,"kind","devise::syn","",151,[[["self"]],["generickind"]]],[11,"kind","","",188,[[["self"]],["generickind"]]],[11,"span","devise","",9,[[["self"]],["span"]]],[11,"span","","",342,[[["self"]],["span"]]],[11,"span","","",6,[[["self"]],["span"]]],[11,"strip_lifetimes","devise::syn","",120,N],[11,"with_stripped_lifetimes","","",120,[[["self"]],["type"]]],[11,"fmt","devise","",318,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",342,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",343,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",317,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",319,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",314,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",343,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",319,[[["self"],["formatter"]],["result",["error"]]]],[11,"not","","Returns the complement of this set of flags.",319,[[["self"]],["datasupport"]]],[11,"not","","Returns the complement of this set of flags.",343,[[["self"]],["genericsupport"]]],[11,"bitxor_assign","","Toggles the set of flags.",343,N],[11,"bitxor_assign","","Toggles the set of flags.",319,N],[11,"clone","","",317,[[["self"]],["fieldparent"]]],[11,"clone","","",7,[[["self"]],["field"]]],[11,"clone","devise::ext","",2,[[["self"]],["generickind"]]],[11,"clone","devise","",342,[[["self"]],["fields"]]],[11,"clone","","",314,[[["self"]],["derived"]]],[11,"clone","","",6,[[["self"]],["metaitem"]]],[11,"clone","","",9,[[["self"]],["metaitemlist"]]],[11,"clone","","",318,[[["self"]],["spanwrapped"]]],[11,"clone","","",343,[[["self"]],["genericsupport"]]],[11,"clone","","",319,[[["self"]],["datasupport"]]],[11,"partial_cmp","","",343,[[["self"],["genericsupport"]],["option",["ordering"]]]],[11,"lt","","",343,[[["self"],["genericsupport"]],["bool"]]],[11,"le","","",343,[[["self"],["genericsupport"]],["bool"]]],[11,"gt","","",343,[[["self"],["genericsupport"]],["bool"]]],[11,"ge","","",343,[[["self"],["genericsupport"]],["bool"]]],[11,"partial_cmp","","",319,[[["self"],["datasupport"]],["option",["ordering"]]]],[11,"lt","","",319,[[["self"],["datasupport"]],["bool"]]],[11,"le","","",319,[[["self"],["datasupport"]],["bool"]]],[11,"gt","","",319,[[["self"],["datasupport"]],["bool"]]],[11,"ge","","",319,[[["self"],["datasupport"]],["bool"]]],[11,"from_iter","","",319,[[["t"]],["datasupport"]]],[11,"from_iter","","",343,[[["t"]],["genericsupport"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",343,N],[11,"bitand_assign","","Disables all flags disabled in the set.",319,N],[11,"sub","","Returns the set difference of the two sets of flags.",343,[[["self"],["genericsupport"]],["genericsupport"]]],[11,"sub","","Returns the set difference of the two sets of flags.",319,[[["self"],["datasupport"]],["datasupport"]]],[11,"to_tokens","","",318,N],[11,"to_tokens","","",314,N],[11,"deref","","",314,[[["self"]],["t"]]],[11,"deref","","",318,[[["self"]],["t"]]],[11,"deref","","",7,N],[11,"bitxor","","Returns the left flags, but with all the right flags…",343,[[["self"],["genericsupport"]],["genericsupport"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",319,[[["self"],["datasupport"]],["datasupport"]]],[11,"from","","",6,[[["meta"]],["metaitem"]]],[11,"from","","",6,[[["nestedmeta"]],["metaitem"]]],[11,"fmt","","",343,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",319,[[["self"],["formatter"]],["result",["error"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",343,N],[11,"sub_assign","","Disables all flags enabled in the set.",319,N],[11,"extend","","",343,N],[11,"extend","","",319,N],[11,"fmt","","",319,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",343,[[["self"],["formatter"]],["result",["error"]]]],[11,"is","devise::syn","",238,N],[11,"is_local","","",238,N],[11,"is_global","","",238,N],[11,"generics","","",238,[[["self"]],["option",["punctuated"]]]],[11,"from_meta","devise","",318,[[["metaitem"]],["result",["spanwrapped","diagnostic"]]]],[11,"cmp","devise::syn","",271,[[["self"],["lifetime"]],["ordering"]]],[11,"to_tokens","","",307,N],[11,"to_tokens","","",144,N],[11,"to_tokens","devise::syn::token","",63,N],[11,"to_tokens","devise::syn","",243,N],[11,"to_tokens","","",210,N],[11,"to_tokens","devise::syn::token","",61,N],[11,"to_tokens","devise::syn","",180,N],[11,"to_tokens","","",137,N],[11,"to_tokens","","",233,N],[11,"to_tokens","","",299,N],[11,"to_tokens","","",143,N],[11,"to_tokens","devise::syn::token","",76,N],[11,"to_tokens","devise::syn","",207,N],[11,"to_tokens","","",157,N],[11,"to_tokens","","",169,N],[11,"to_tokens","devise::syn::token","",95,N],[11,"to_tokens","","",52,N],[11,"to_tokens","devise::syn","",294,N],[11,"to_tokens","","",341,N],[11,"to_tokens","","",155,N],[11,"to_tokens","devise::syn::token","",14,N],[11,"to_tokens","","",56,N],[11,"to_tokens","devise::syn","",272,N],[11,"to_tokens","devise::syn::token","",19,N],[11,"to_tokens","devise::syn","",244,N],[11,"to_tokens","devise::syn::token","",32,N],[11,"to_tokens","devise::syn","",138,N],[11,"to_tokens","devise::syn::token","",70,N],[11,"to_tokens","devise::syn","",290,N],[11,"to_tokens","","",168,N],[11,"to_tokens","devise::syn::token","",87,N],[11,"to_tokens","devise::syn","",225,N],[11,"to_tokens","","",305,N],[11,"to_tokens","","",230,N],[11,"to_tokens","devise::syn::token","",51,N],[11,"to_tokens","devise::syn","",159,N],[11,"to_tokens","devise::syn::token","",44,N],[11,"to_tokens","devise::syn","",288,N],[11,"to_tokens","devise::syn::token","",66,N],[11,"to_tokens","devise::syn","",268,N],[11,"to_tokens","devise::syn::token","",18,N],[11,"to_tokens","devise::syn","",146,N],[11,"to_tokens","devise::syn::token","",77,N],[11,"to_tokens","devise::syn","",203,N],[11,"to_tokens","","",219,N],[11,"to_tokens","","",175,N],[11,"to_tokens","","",231,N],[11,"to_tokens","","",194,N],[11,"to_tokens","devise::syn::token","",41,N],[11,"to_tokens","devise::syn","",121,N],[11,"to_tokens","","",298,N],[11,"to_tokens","devise::syn::token","",80,N],[11,"to_tokens","devise::syn","",291,N],[11,"to_tokens","","",147,N],[11,"to_tokens","devise::syn::token","",45,N],[11,"to_tokens","devise::syn","",273,N],[11,"to_tokens","devise::syn::token","",40,N],[11,"to_tokens","devise::syn","",337,N],[11,"to_tokens","devise::syn::token","",74,N],[11,"to_tokens","devise::syn","",339,N],[11,"to_tokens","","",213,N],[11,"to_tokens","","",156,N],[11,"to_tokens","","",152,N],[11,"to_tokens","","",211,N],[11,"to_tokens","devise::syn::token","",50,N],[11,"to_tokens","","",46,N],[11,"to_tokens","","",69,N],[11,"to_tokens","devise::syn::punctuated","",116,N],[11,"to_tokens","devise::syn","",187,N],[11,"to_tokens","","",174,N],[11,"to_tokens","","",250,N],[11,"to_tokens","devise::syn::token","",33,N],[11,"to_tokens","devise::syn","",178,N],[11,"to_tokens","devise::syn::token","",13,N],[11,"to_tokens","devise::syn","",302,N],[11,"to_tokens","","",292,N],[11,"to_tokens","devise::syn::token","",24,N],[11,"to_tokens","devise::syn","",261,N],[11,"to_tokens","devise::syn::token","",108,N],[11,"to_tokens","devise::syn","",245,N],[11,"to_tokens","","",215,N],[11,"to_tokens","devise::syn::token","",22,N],[11,"to_tokens","devise::syn","",334,N],[11,"to_tokens","","",136,N],[11,"to_tokens","","",277,N],[11,"to_tokens","devise::syn::token","",96,N],[11,"to_tokens","","",68,N],[11,"to_tokens","","",42,N],[11,"to_tokens","","",28,N],[11,"to_tokens","devise::syn","",247,N],[11,"to_tokens","devise::syn::token","",84,N],[11,"to_tokens","devise::syn","",340,N],[11,"to_tokens","","",222,N],[11,"to_tokens","","",262,N],[11,"to_tokens","","",199,N],[11,"to_tokens","devise::syn::token","",99,N],[11,"to_tokens","devise::syn","",133,N],[11,"to_tokens","devise::syn::token","",55,N],[11,"to_tokens","devise::syn","",202,N],[11,"to_tokens","devise::syn::token","",105,N],[11,"to_tokens","devise::syn","",311,N],[11,"to_tokens","devise::syn::token","",72,N],[11,"to_tokens","","",83,N],[11,"to_tokens","devise::syn","",179,N],[11,"to_tokens","","",221,N],[11,"to_tokens","","",122,N],[11,"to_tokens","devise::syn::token","",25,N],[11,"to_tokens","devise::syn","",126,N],[11,"to_tokens","","",310,N],[11,"to_tokens","","",228,N],[11,"to_tokens","devise::syn::token","",43,N],[11,"to_tokens","devise::syn","",197,N],[11,"to_tokens","","",188,N],[11,"to_tokens","","",335,N],[11,"to_tokens","devise::syn::token","",106,N],[11,"to_tokens","devise::syn","",265,N],[11,"to_tokens","devise::syn::token","",101,N],[11,"to_tokens","","",20,N],[11,"to_tokens","devise::syn","",264,N],[11,"to_tokens","","",255,N],[11,"to_tokens","","",282,N],[11,"to_tokens","","",246,N],[11,"to_tokens","","",129,N],[11,"to_tokens","","",216,N],[11,"to_tokens","","",285,N],[11,"to_tokens","","",284,N],[11,"to_tokens","","",227,N],[11,"to_tokens","","",161,N],[11,"to_tokens","","",229,N],[11,"to_tokens","","",151,N],[11,"to_tokens","devise::syn::token","",75,N],[11,"to_tokens","","",93,N],[11,"to_tokens","devise::syn","",300,N],[11,"to_tokens","","",276,N],[11,"to_tokens","","",206,N],[11,"to_tokens","devise::syn::token","",64,N],[11,"to_tokens","devise::syn","",193,N],[11,"to_tokens","","",165,N],[11,"to_tokens","","",170,N],[11,"to_tokens","devise::syn::token","",37,N],[11,"to_tokens","","",78,N],[11,"to_tokens","devise::syn","",125,N],[11,"to_tokens","devise::syn::token","",110,N],[11,"to_tokens","devise::syn","",214,N],[11,"to_tokens","","",171,N],[11,"to_tokens","devise::syn::token","",65,N],[11,"to_tokens","","",97,N],[11,"to_tokens","devise::syn","",149,N],[11,"to_tokens","devise::syn::token","",48,N],[11,"to_tokens","devise::syn","",338,N],[11,"to_tokens","","",196,N],[11,"to_tokens","devise::syn::token","",98,N],[11,"to_tokens","devise::syn","",167,N],[11,"to_tokens","devise::syn::token","",107,N],[11,"to_tokens","","",53,N],[11,"to_tokens","","",67,N],[11,"to_tokens","devise::syn","",162,N],[11,"to_tokens","","",160,N],[11,"to_tokens","","",153,N],[11,"to_tokens","devise::syn::token","",73,N],[11,"to_tokens","devise::syn","",248,N],[11,"to_tokens","devise::syn::token","",36,N],[11,"to_tokens","devise::syn","",260,N],[11,"to_tokens","","",209,N],[11,"to_tokens","devise::syn::token","",17,N],[11,"to_tokens","devise::syn","",158,N],[11,"to_tokens","","",166,N],[11,"to_tokens","devise::syn::token","",88,N],[11,"to_tokens","devise::syn","",234,N],[11,"to_tokens","devise::syn::token","",16,N],[11,"to_tokens","devise::syn","",220,N],[11,"to_tokens","","",218,N],[11,"to_tokens","devise::syn::token","",47,N],[11,"to_tokens","","",29,N],[11,"to_tokens","devise::syn","",150,N],[11,"to_tokens","","",293,N],[11,"to_tokens","","",163,N],[11,"to_tokens","devise::syn::token","",54,N],[11,"to_tokens","devise::syn","",127,N],[11,"to_tokens","devise::syn::token","",91,N],[11,"to_tokens","devise::syn","",223,N],[11,"to_tokens","","",154,N],[11,"to_tokens","","",280,N],[11,"to_tokens","","",242,N],[11,"to_tokens","","",204,N],[11,"to_tokens","","",208,N],[11,"to_tokens","","",140,N],[11,"to_tokens","","",130,N],[11,"to_tokens","","",135,N],[11,"to_tokens","","",124,N],[11,"to_tokens","devise::syn::token","",27,N],[11,"to_tokens","devise::syn","",270,N],[11,"to_tokens","","",286,N],[11,"to_tokens","","",296,N],[11,"to_tokens","","",336,N],[11,"to_tokens","","",186,N],[11,"to_tokens","","",274,N],[11,"to_tokens","devise::syn::token","",23,N],[11,"to_tokens","","",82,N],[11,"to_tokens","","",92,N],[11,"to_tokens","","",90,N],[11,"to_tokens","devise::syn","",232,N],[11,"to_tokens","","",308,N],[11,"to_tokens","","",173,N],[11,"to_tokens","","",238,N],[11,"to_tokens","devise::syn::token","",34,N],[11,"to_tokens","devise::syn","",257,N],[11,"to_tokens","devise::syn::token","",49,N],[11,"to_tokens","devise::syn","",145,N],[11,"to_tokens","","",271,N],[11,"to_tokens","","",139,N],[11,"to_tokens","devise::syn::token","",38,N],[11,"to_tokens","devise::syn","",287,N],[11,"to_tokens","","",224,N],[11,"to_tokens","devise::syn::token","",100,N],[11,"to_tokens","devise::syn","",177,N],[11,"to_tokens","","",226,N],[11,"to_tokens","devise::syn::token","",109,N],[11,"to_tokens","devise::syn","",263,N],[11,"to_tokens","","",259,N],[11,"to_tokens","","",217,N],[11,"to_tokens","devise::syn::token","",85,N],[11,"to_tokens","","",59,N],[11,"to_tokens","","",103,N],[11,"to_tokens","devise::syn","",333,N],[11,"to_tokens","","",191,N],[11,"to_tokens","","",283,N],[11,"to_tokens","devise::syn::token","",81,N],[11,"to_tokens","","",26,N],[11,"to_tokens","","",12,N],[11,"to_tokens","devise::syn","",198,N],[11,"to_tokens","","",303,N],[11,"to_tokens","","",297,N],[11,"to_tokens","","",148,N],[11,"to_tokens","","",312,N],[11,"to_tokens","devise::syn::token","",21,N],[11,"to_tokens","","",102,N],[11,"to_tokens","devise::syn","",190,N],[11,"to_tokens","","",251,N],[11,"to_tokens","devise::syn::token","",31,N],[11,"to_tokens","devise::syn","",181,N],[11,"to_tokens","","",123,N],[11,"to_tokens","","",120,N],[11,"to_tokens","","",241,N],[11,"to_tokens","","",176,N],[11,"to_tokens","","",212,N],[11,"to_tokens","","",235,N],[11,"to_tokens","devise::syn::punctuated","",322,N],[11,"to_tokens","devise::syn::token","",104,N],[11,"to_tokens","","",15,N],[11,"to_tokens","devise::syn","",182,N],[11,"to_tokens","","",249,N],[11,"to_tokens","","",164,N],[11,"to_tokens","","",281,N],[11,"to_tokens","devise::syn::token","",94,N],[11,"to_tokens","devise::syn","",279,N],[11,"to_tokens","","",131,N],[11,"to_tokens","","",266,N],[11,"to_tokens","devise::syn::token","",39,N],[11,"to_tokens","","",79,N],[11,"to_tokens","","",62,N],[11,"to_tokens","devise::syn","",275,N],[11,"to_tokens","","",128,N],[11,"to_tokens","","",258,N],[11,"to_tokens","","",252,N],[11,"to_tokens","","",183,N],[11,"to_tokens","","",205,N],[11,"to_tokens","","",189,N],[11,"to_tokens","","",304,N],[11,"to_tokens","devise::syn::token","",57,N],[11,"to_tokens","","",71,N],[11,"to_tokens","devise::syn","",141,N],[11,"to_tokens","","",201,N],[11,"to_tokens","devise::syn::token","",60,N],[11,"to_tokens","devise::syn","",256,N],[11,"to_tokens","devise::syn::token","",35,N],[11,"to_tokens","devise::syn","",313,N],[11,"to_tokens","devise::syn::token","",89,N],[11,"to_tokens","devise::syn","",134,N],[11,"to_tokens","","",289,N],[11,"to_tokens","devise::syn::token","",30,N],[11,"to_tokens","devise::syn","",195,N],[11,"to_tokens","","",267,N],[11,"to_tokens","devise::syn::token","",86,N],[11,"to_tokens","devise::syn","",301,N],[11,"to_tokens","","",185,N],[11,"to_tokens","","",142,N],[11,"to_tokens","devise::syn::token","",58,N],[11,"to_tokens","devise::syn","",240,N],[11,"to_tokens","","",192,N],[11,"eq","","",244,[[["self"],["exprtry"]],["bool"]]],[11,"ne","","",244,[[["self"],["exprtry"]],["bool"]]],[11,"eq","","",139,[[["self"],["litverbatim"]],["bool"]]],[11,"eq","","",265,[[["self"],["label"]],["bool"]]],[11,"ne","","",265,[[["self"],["label"]],["bool"]]],[11,"eq","","",300,[[["self"],["member"]],["bool"]]],[11,"ne","","",300,[[["self"],["member"]],["bool"]]],[11,"eq","devise::syn::token","",114,[[["self"],["group"]],["bool"]]],[11,"eq","devise::syn","",134,[[["self"],["itemimpl"]],["bool"]]],[11,"ne","","",134,[[["self"],["itemimpl"]],["bool"]]],[11,"eq","","",128,[[["self"],["viscrate"]],["bool"]]],[11,"ne","","",128,[[["self"],["viscrate"]],["bool"]]],[11,"eq","devise::syn::token","",62,[[["self"],["where"]],["bool"]]],[11,"eq","devise::syn","",150,[[["self"],["fields"]],["bool"]]],[11,"ne","","",150,[[["self"],["fields"]],["bool"]]],[11,"eq","devise::syn::token","",112,[[["self"],["bracket"]],["bool"]]],[11,"eq","devise::syn","",274,[[["self"],["exprpath"]],["bool"]]],[11,"ne","","",274,[[["self"],["exprpath"]],["bool"]]],[11,"eq","","",138,[[["self"],["exprtuple"]],["bool"]]],[11,"ne","","",138,[[["self"],["exprtuple"]],["bool"]]],[11,"eq","devise::syn::token","",94,[[["self"],["oror"]],["bool"]]],[11,"eq","","",80,[[["self"],["dot"]],["bool"]]],[11,"eq","devise::syn","",192,[[["self"],["itemenum"]],["bool"]]],[11,"ne","","",192,[[["self"],["itemenum"]],["bool"]]],[11,"eq","","",229,[[["self"],["exprassign"]],["bool"]]],[11,"ne","","",229,[[["self"],["exprassign"]],["bool"]]],[11,"eq","","",298,[[["self"],["block"]],["bool"]]],[11,"ne","","",298,[[["self"],["block"]],["bool"]]],[11,"eq","","",164,[[["self"],["patlit"]],["bool"]]],[11,"ne","","",164,[[["self"],["patlit"]],["bool"]]],[11,"eq","devise::syn::token","",60,[[["self"],["use"]],["bool"]]],[11,"eq","devise::syn","",199,[[["self"],["vispublic"]],["bool"]]],[11,"ne","","",199,[[["self"],["vispublic"]],["bool"]]],[11,"eq","","",287,[[["self"],["exprunsafe"]],["bool"]]],[11,"ne","","",287,[[["self"],["exprunsafe"]],["bool"]]],[11,"eq","","",340,[[["self"],["typegenerics"]],["bool"]]],[11,"ne","","",340,[[["self"],["typegenerics"]],["bool"]]],[11,"eq","","",338,[[["self"],["litbytestr"]],["bool"]]],[11,"eq","","",185,[[["self"],["meta"]],["bool"]]],[11,"ne","","",185,[[["self"],["meta"]],["bool"]]],[11,"eq","devise::syn::token","",54,[[["self"],["try"]],["bool"]]],[11,"eq","","",113,[[["self"],["paren"]],["bool"]]],[11,"eq","devise::syn","",230,[[["self"],["exprlet"]],["bool"]]],[11,"ne","","",230,[[["self"],["exprlet"]],["bool"]]],[11,"eq","","",279,[[["self"],["traitboundmodifier"]],["bool"]]],[11,"ne","","",279,[[["self"],["traitboundmodifier"]],["bool"]]],[11,"eq","devise::syn::token","",29,[[["self"],["extern"]],["bool"]]],[11,"eq","","",15,[[["self"],["async"]],["bool"]]],[11,"eq","devise::syn","",166,[[["self"],["exprasync"]],["bool"]]],[11,"ne","","",166,[[["self"],["exprasync"]],["bool"]]],[11,"eq","","",249,[[["self"],["exprtype"]],["bool"]]],[11,"ne","","",249,[[["self"],["exprtype"]],["bool"]]],[11,"eq","","",341,[[["self"],["litstr"]],["bool"]]],[11,"eq","","",256,[[["self"],["fieldsunnamed"]],["bool"]]],[11,"ne","","",256,[[["self"],["fieldsunnamed"]],["bool"]]],[11,"eq","devise::syn::token","",52,[[["self"],["super"]],["bool"]]],[11,"eq","devise::syn","",227,[[["self"],["typereference"]],["bool"]]],[11,"ne","","",227,[[["self"],["typereference"]],["bool"]]],[11,"eq","","",210,[[["self"],["generics"]],["bool"]]],[11,"ne","","",210,[[["self"],["generics"]],["bool"]]],[11,"eq","devise::syn::token","",37,[[["self"],["loop"]],["bool"]]],[11,"eq","","",22,[[["self"],["crate"]],["bool"]]],[11,"eq","","",91,[[["self"],["ne"]],["bool"]]],[11,"eq","devise::syn","",177,[[["self"],["whereclause"]],["bool"]]],[11,"ne","","",177,[[["self"],["whereclause"]],["bool"]]],[11,"eq","","",125,[[["self"],["itemexterncrate"]],["bool"]]],[11,"ne","","",125,[[["self"],["itemexterncrate"]],["bool"]]],[11,"eq","","",286,[[["self"],["typetraitobject"]],["bool"]]],[11,"ne","","",286,[[["self"],["typetraitobject"]],["bool"]]],[11,"eq","","",257,[[["self"],["exprparen"]],["bool"]]],[11,"ne","","",257,[[["self"],["exprparen"]],["bool"]]],[11,"eq","","",273,[[["self"],["foreignitem"]],["bool"]]],[11,"ne","","",273,[[["self"],["foreignitem"]],["bool"]]],[11,"eq","devise::syn::token","",39,[[["self"],["match"]],["bool"]]],[11,"eq","devise::syn","",133,[[["self"],["typenever"]],["bool"]]],[11,"ne","","",133,[[["self"],["typenever"]],["bool"]]],[11,"eq","","",124,[[["self"],["typeimpltrait"]],["bool"]]],[11,"ne","","",124,[[["self"],["typeimpltrait"]],["bool"]]],[11,"eq","","",263,[[["self"],["exprtryblock"]],["bool"]]],[11,"ne","","",263,[[["self"],["exprtryblock"]],["bool"]]],[11,"eq","devise::syn::token","",28,[[["self"],["existential"]],["bool"]]],[11,"eq","devise::syn","",140,[[["self"],["userename"]],["bool"]]],[11,"ne","","",140,[[["self"],["userename"]],["bool"]]],[11,"eq","","",206,[[["self"],["itemstruct"]],["bool"]]],[11,"ne","","",206,[[["self"],["itemstruct"]],["bool"]]],[11,"eq","","",271,[[["self"],["lifetime"]],["bool"]]],[11,"eq","","",141,[[["self"],["implitemmethod"]],["bool"]]],[11,"ne","","",141,[[["self"],["implitemmethod"]],["bool"]]],[11,"eq","","",167,[[["self"],["typearray"]],["bool"]]],[11,"ne","","",167,[[["self"],["typearray"]],["bool"]]],[11,"eq","","",337,[[["self"],["turbofish"]],["bool"]]],[11,"ne","","",337,[[["self"],["turbofish"]],["bool"]]],[11,"eq","devise::syn::token","",19,[[["self"],["break"]],["bool"]]],[11,"eq","devise::syn","",335,[[["self"],["litbyte"]],["bool"]]],[11,"eq","devise::syn::token","",65,[[["self"],["add"]],["bool"]]],[11,"eq","","",85,[[["self"],["eqeq"]],["bool"]]],[11,"eq","devise::syn","",278,[[["self"],["intsuffix"]],["bool"]]],[11,"eq","","",212,[[["self"],["exprblock"]],["bool"]]],[11,"ne","","",212,[[["self"],["exprblock"]],["bool"]]],[11,"eq","","",302,[[["self"],["lit"]],["bool"]]],[11,"ne","","",302,[[["self"],["lit"]],["bool"]]],[11,"eq","","",130,[[["self"],["foreignitemverbatim"]],["bool"]]],[11,"eq","devise::syn::token","",18,[[["self"],["box"]],["bool"]]],[11,"eq","devise::syn","",250,[[["self"],["typeverbatim"]],["bool"]]],[11,"eq","devise::syn::token","",83,[[["self"],["dotdoteq"]],["bool"]]],[11,"eq","devise::syn","",284,[[["self"],["local"]],["bool"]]],[11,"ne","","",284,[[["self"],["local"]],["bool"]]],[11,"eq","","",175,[[["self"],["traititemtype"]],["bool"]]],[11,"ne","","",175,[[["self"],["traititemtype"]],["bool"]]],[11,"eq","devise::syn::token","",58,[[["self"],["unsafe"]],["bool"]]],[11,"eq","","",38,[[["self"],["macro"]],["bool"]]],[11,"eq","devise::syn","",155,[[["self"],["typeparen"]],["bool"]]],[11,"ne","","",155,[[["self"],["typeparen"]],["bool"]]],[11,"eq","","",217,[[["self"],["predicatelifetime"]],["bool"]]],[11,"ne","","",217,[[["self"],["predicatelifetime"]],["bool"]]],[11,"eq","","",307,[[["self"],["fieldpat"]],["bool"]]],[11,"ne","","",307,[[["self"],["fieldpat"]],["bool"]]],[11,"eq","","",144,[[["self"],["file"]],["bool"]]],[11,"ne","","",144,[[["self"],["file"]],["bool"]]],[11,"eq","devise::syn::token","",56,[[["self"],["typeof"]],["bool"]]],[11,"eq","","",81,[[["self"],["dot2"]],["bool"]]],[11,"eq","","",93,[[["self"],["oreq"]],["bool"]]],[11,"eq","devise::syn","",121,[[["self"],["patpath"]],["bool"]]],[11,"ne","","",121,[[["self"],["patpath"]],["bool"]]],[11,"eq","","",174,[[["self"],["pathsegment"]],["bool"]]],[11,"ne","","",174,[[["self"],["pathsegment"]],["bool"]]],[11,"eq","","",168,[[["self"],["itemconst"]],["bool"]]],[11,"ne","","",168,[[["self"],["itemconst"]],["bool"]]],[11,"eq","devise::syn::token","",76,[[["self"],["comma"]],["bool"]]],[11,"eq","devise::syn","",248,[[["self"],["exprlit"]],["bool"]]],[11,"ne","","",248,[[["self"],["exprlit"]],["bool"]]],[11,"eq","devise::syn::token","",109,[[["self"],["subeq"]],["bool"]]],[11,"eq","devise::syn","",149,[[["self"],["exprwhile"]],["bool"]]],[11,"ne","","",149,[[["self"],["exprwhile"]],["bool"]]],[11,"eq","","",182,[[["self"],["exprindex"]],["bool"]]],[11,"ne","","",182,[[["self"],["exprindex"]],["bool"]]],[11,"eq","devise::syn::token","",25,[[["self"],["dyn"]],["bool"]]],[11,"eq","devise::syn","",178,[[["self"],["exprgroup"]],["bool"]]],[11,"ne","","",178,[[["self"],["exprgroup"]],["bool"]]],[11,"eq","","",268,[[["self"],["exprassignop"]],["bool"]]],[11,"ne","","",268,[[["self"],["exprassignop"]],["bool"]]],[11,"eq","devise::syn::token","",21,[[["self"],["continue"]],["bool"]]],[11,"eq","devise::syn","",218,[[["self"],["exprcall"]],["bool"]]],[11,"ne","","",218,[[["self"],["exprcall"]],["bool"]]],[11,"eq","","",191,[[["self"],["typebarefn"]],["bool"]]],[11,"ne","","",191,[[["self"],["typebarefn"]],["bool"]]],[11,"eq","","",233,[[["self"],["patmacro"]],["bool"]]],[11,"ne","","",233,[[["self"],["patmacro"]],["bool"]]],[11,"eq","devise::syn::token","",43,[[["self"],["override"]],["bool"]]],[11,"eq","devise::syn","",306,[[["self"],["attrstyle"]],["bool"]]],[11,"ne","","",306,[[["self"],["attrstyle"]],["bool"]]],[11,"eq","","",172,[[["self"],["floatsuffix"]],["bool"]]],[11,"eq","","",120,[[["self"],["type"]],["bool"]]],[11,"ne","","",120,[[["self"],["type"]],["bool"]]],[11,"eq","devise::syn::token","",57,[[["self"],["union"]],["bool"]]],[11,"eq","devise::syn","",290,[[["self"],["itemtrait"]],["bool"]]],[11,"ne","","",290,[[["self"],["itemtrait"]],["bool"]]],[11,"eq","devise::syn::token","",55,[[["self"],["type"]],["bool"]]],[11,"eq","","",16,[[["self"],["auto"]],["bool"]]],[11,"eq","","",84,[[["self"],["eq"]],["bool"]]],[11,"eq","devise::syn","",291,[[["self"],["patbox"]],["bool"]]],[11,"ne","","",291,[[["self"],["patbox"]],["bool"]]],[11,"eq","devise::syn::token","",70,[[["self"],["at"]],["bool"]]],[11,"eq","","",41,[[["self"],["move"]],["bool"]]],[11,"eq","devise::syn","",195,[[["self"],["itemuse"]],["bool"]]],[11,"ne","","",195,[[["self"],["itemuse"]],["bool"]]],[11,"eq","","",295,[[["self"],["dataenum"]],["bool"]]],[11,"ne","","",295,[[["self"],["dataenum"]],["bool"]]],[11,"eq","","",310,[[["self"],["exprinplace"]],["bool"]]],[11,"ne","","",310,[[["self"],["exprinplace"]],["bool"]]],[11,"eq","devise::syn::token","",13,[[["self"],["abstract"]],["bool"]]],[11,"eq","devise::syn","",187,[[["self"],["usetree"]],["bool"]]],[11,"ne","","",187,[[["self"],["usetree"]],["bool"]]],[11,"eq","","",255,[[["self"],["methodsig"]],["bool"]]],[11,"ne","","",255,[[["self"],["methodsig"]],["bool"]]],[11,"eq","","",270,[[["self"],["typegroup"]],["bool"]]],[11,"ne","","",270,[[["self"],["typegroup"]],["bool"]]],[11,"eq","","",196,[[["self"],["predicateeq"]],["bool"]]],[11,"ne","","",196,[[["self"],["predicateeq"]],["bool"]]],[11,"eq","devise::syn::token","",51,[[["self"],["struct"]],["bool"]]],[11,"eq","devise::syn","",197,[[["self"],["exprbreak"]],["bool"]]],[11,"ne","","",197,[[["self"],["exprbreak"]],["bool"]]],[11,"eq","","",243,[[["self"],["useglob"]],["bool"]]],[11,"ne","","",243,[[["self"],["useglob"]],["bool"]]],[11,"eq","devise::syn::token","",103,[[["self"],["shl"]],["bool"]]],[11,"eq","devise::syn","",312,[[["self"],["itemtraitalias"]],["bool"]]],[11,"ne","","",312,[[["self"],["itemtraitalias"]],["bool"]]],[11,"eq","devise::syn::token","",45,[[["self"],["pub"]],["bool"]]],[11,"eq","devise::syn","",223,[[["self"],["implitem"]],["bool"]]],[11,"ne","","",223,[[["self"],["implitem"]],["bool"]]],[11,"eq","","",294,[[["self"],["lifetimedef"]],["bool"]]],[11,"ne","","",294,[[["self"],["lifetimedef"]],["bool"]]],[11,"eq","devise::syn::token","",92,[[["self"],["or"]],["bool"]]],[11,"eq","devise::syn","",224,[[["self"],["traititemverbatim"]],["bool"]]],[11,"eq","devise::syn::token","",75,[[["self"],["colon2"]],["bool"]]],[11,"eq","","",74,[[["self"],["colon"]],["bool"]]],[11,"eq","devise::syn","",228,[[["self"],["usename"]],["bool"]]],[11,"ne","","",228,[[["self"],["usename"]],["bool"]]],[11,"eq","","",299,[[["self"],["itemexistential"]],["bool"]]],[11,"ne","","",299,[[["self"],["itemexistential"]],["bool"]]],[11,"eq","","",282,[[["self"],["binop"]],["bool"]]],[11,"ne","","",282,[[["self"],["binop"]],["bool"]]],[11,"eq","","",336,[[["self"],["litfloat"]],["bool"]]],[11,"eq","","",204,[[["self"],["attribute"]],["bool"]]],[11,"eq","","",171,[[["self"],["fieldsnamed"]],["bool"]]],[11,"ne","","",171,[[["self"],["fieldsnamed"]],["bool"]]],[11,"eq","devise::syn::token","",66,[[["self"],["addeq"]],["bool"]]],[11,"eq","devise::syn","",203,[[["self"],["patverbatim"]],["bool"]]],[11,"eq","","",258,[[["self"],["typeinfer"]],["bool"]]],[11,"ne","","",258,[[["self"],["typeinfer"]],["bool"]]],[11,"eq","devise::syn::token","",48,[[["self"],["selftype"]],["bool"]]],[11,"eq","","",106,[[["self"],["shreq"]],["bool"]]],[11,"eq","devise::syn","",190,[[["self"],["exprmacro"]],["bool"]]],[11,"ne","","",190,[[["self"],["exprmacro"]],["bool"]]],[11,"eq","devise::syn::token","",108,[[["self"],["sub"]],["bool"]]],[11,"eq","devise::syn::punctuated","",322,[[["self"],["punctuated"]],["bool"]]],[11,"ne","","",322,[[["self"],["punctuated"]],["bool"]]],[11,"eq","devise::syn","",225,[[["self"],["patwild"]],["bool"]]],[11,"ne","","",225,[[["self"],["patwild"]],["bool"]]],[11,"eq","","",304,[[["self"],["foreignitemtype"]],["bool"]]],[11,"ne","","",304,[[["self"],["foreignitemtype"]],["bool"]]],[11,"eq","","",237,[[["self"],["fndecl"]],["bool"]]],[11,"ne","","",237,[[["self"],["fndecl"]],["bool"]]],[11,"eq","","",264,[[["self"],["exprreference"]],["bool"]]],[11,"ne","","",264,[[["self"],["exprreference"]],["bool"]]],[11,"eq","","",266,[[["self"],["expr"]],["bool"]]],[11,"ne","","",266,[[["self"],["expr"]],["bool"]]],[11,"eq","","",131,[[["self"],["exprcast"]],["bool"]]],[11,"ne","","",131,[[["self"],["exprcast"]],["bool"]]],[11,"eq","","",293,[[["self"],["itemunion"]],["bool"]]],[11,"ne","","",293,[[["self"],["itemunion"]],["bool"]]],[11,"eq","","",215,[[["self"],["binding"]],["bool"]]],[11,"ne","","",215,[[["self"],["binding"]],["bool"]]],[11,"eq","devise::syn::token","",20,[[["self"],["const"]],["bool"]]],[11,"eq","","",73,[[["self"],["careteq"]],["bool"]]],[11,"eq","devise::syn","",188,[[["self"],["genericparam"]],["bool"]]],[11,"ne","","",188,[[["self"],["genericparam"]],["bool"]]],[11,"eq","devise::syn::token","",36,[[["self"],["let"]],["bool"]]],[11,"eq","","",64,[[["self"],["yield"]],["bool"]]],[11,"eq","devise::syn","",179,[[["self"],["genericmethodargument"]],["bool"]]],[11,"ne","","",179,[[["self"],["genericmethodargument"]],["bool"]]],[11,"eq","","",148,[[["self"],["item"]],["bool"]]],[11,"ne","","",148,[[["self"],["item"]],["bool"]]],[11,"eq","","",183,[[["self"],["methodturbofish"]],["bool"]]],[11,"ne","","",183,[[["self"],["methodturbofish"]],["bool"]]],[11,"eq","","",154,[[["self"],["exprclosure"]],["bool"]]],[11,"ne","","",154,[[["self"],["exprclosure"]],["bool"]]],[11,"eq","","",240,[[["self"],["itemforeignmod"]],["bool"]]],[11,"ne","","",240,[[["self"],["itemforeignmod"]],["bool"]]],[11,"eq","devise::syn::token","",49,[[["self"],["selfvalue"]],["bool"]]],[11,"eq","devise::syn","",334,[[["self"],["implgenerics"]],["bool"]]],[11,"ne","","",334,[[["self"],["implgenerics"]],["bool"]]],[11,"eq","devise::syn::token","",63,[[["self"],["while"]],["bool"]]],[11,"eq","devise::syn","",296,[[["self"],["foreignitemfn"]],["bool"]]],[11,"ne","","",296,[[["self"],["foreignitemfn"]],["bool"]]],[11,"eq","","",280,[[["self"],["foreignitemstatic"]],["bool"]]],[11,"ne","","",280,[[["self"],["foreignitemstatic"]],["bool"]]],[11,"eq","","",333,[[["self"],["litchar"]],["bool"]]],[11,"eq","devise::syn::token","",101,[[["self"],["fatarrow"]],["bool"]]],[11,"eq","devise::syn","",247,[[["self"],["boundlifetimes"]],["bool"]]],[11,"ne","","",247,[[["self"],["boundlifetimes"]],["bool"]]],[11,"eq","","",301,[[["self"],["variant"]],["bool"]]],[11,"ne","","",301,[[["self"],["variant"]],["bool"]]],[11,"eq","devise::syn::token","",100,[[["self"],["remeq"]],["bool"]]],[11,"eq","devise::syn","",260,[[["self"],["pattuple"]],["bool"]]],[11,"ne","","",260,[[["self"],["pattuple"]],["bool"]]],[11,"eq","","",259,[[["self"],["traititemmacro"]],["bool"]]],[11,"ne","","",259,[[["self"],["traititemmacro"]],["bool"]]],[11,"eq","","",232,[[["self"],["argself"]],["bool"]]],[11,"ne","","",232,[[["self"],["argself"]],["bool"]]],[11,"eq","devise::syn::token","",31,[[["self"],["fn"]],["bool"]]],[11,"eq","","",72,[[["self"],["caret"]],["bool"]]],[11,"eq","","",23,[[["self"],["default"]],["bool"]]],[11,"eq","devise::syn","",145,[[["self"],["macro"]],["bool"]]],[11,"eq","devise::syn::token","",40,[[["self"],["mod"]],["bool"]]],[11,"eq","devise::syn","",198,[[["self"],["itemfn"]],["bool"]]],[11,"ne","","",198,[[["self"],["itemfn"]],["bool"]]],[11,"eq","","",152,[[["self"],["traititem"]],["bool"]]],[11,"ne","","",152,[[["self"],["traititem"]],["bool"]]],[11,"eq","","",241,[[["self"],["typepath"]],["bool"]]],[11,"ne","","",241,[[["self"],["typepath"]],["bool"]]],[11,"eq","","",283,[[["self"],["itemmod"]],["bool"]]],[11,"ne","","",283,[[["self"],["itemmod"]],["bool"]]],[11,"eq","devise::syn::token","",44,[[["self"],["priv"]],["bool"]]],[11,"eq","devise::syn","",127,[[["self"],["patstruct"]],["bool"]]],[11,"ne","","",127,[[["self"],["patstruct"]],["bool"]]],[11,"eq","","",289,[[["self"],["implitemmacro"]],["bool"]]],[11,"ne","","",289,[[["self"],["implitemmacro"]],["bool"]]],[11,"eq","devise::syn::token","",27,[[["self"],["enum"]],["bool"]]],[11,"eq","devise::syn","",143,[[["self"],["nestedmeta"]],["bool"]]],[11,"ne","","",143,[[["self"],["nestedmeta"]],["bool"]]],[11,"eq","","",234,[[["self"],["constraint"]],["bool"]]],[11,"ne","","",234,[[["self"],["constraint"]],["bool"]]],[11,"eq","","",153,[[["self"],["traitbound"]],["bool"]]],[11,"ne","","",153,[[["self"],["traitbound"]],["bool"]]],[11,"eq","","",239,[[["self"],["datastruct"]],["bool"]]],[11,"ne","","",239,[[["self"],["datastruct"]],["bool"]]],[11,"eq","devise::syn::token","",79,[[["self"],["dollar"]],["bool"]]],[11,"eq","","",12,[[["self"],["underscore"]],["bool"]]],[11,"eq","devise::syn","",165,[[["self"],["constparam"]],["bool"]]],[11,"ne","","",165,[[["self"],["constparam"]],["bool"]]],[11,"eq","","",221,[[["self"],["traititemconst"]],["bool"]]],[11,"ne","","",221,[[["self"],["traititemconst"]],["bool"]]],[11,"eq","","",288,[[["self"],["abi"]],["bool"]]],[11,"ne","","",288,[[["self"],["abi"]],["bool"]]],[11,"eq","","",181,[[["self"],["implitemconst"]],["bool"]]],[11,"ne","","",181,[[["self"],["implitemconst"]],["bool"]]],[11,"eq","","",276,[[["self"],["patharguments"]],["bool"]]],[11,"ne","","",276,[[["self"],["patharguments"]],["bool"]]],[11,"eq","","",200,[[["self"],["qself"]],["bool"]]],[11,"ne","","",200,[[["self"],["qself"]],["bool"]]],[11,"eq","","",169,[[["self"],["expryield"]],["bool"]]],[11,"ne","","",169,[[["self"],["expryield"]],["bool"]]],[11,"eq","devise::syn::token","",34,[[["self"],["impl"]],["bool"]]],[11,"eq","devise::syn","",126,[[["self"],["arm"]],["bool"]]],[11,"ne","","",126,[[["self"],["arm"]],["bool"]]],[11,"eq","","",137,[[["self"],["typeptr"]],["bool"]]],[11,"ne","","",137,[[["self"],["typeptr"]],["bool"]]],[11,"eq","devise::syn::token","",30,[[["self"],["final"]],["bool"]]],[11,"eq","","",53,[[["self"],["trait"]],["bool"]]],[11,"eq","devise::syn","",339,[[["self"],["litint"]],["bool"]]],[11,"eq","devise::syn::token","",90,[[["self"],["muleq"]],["bool"]]],[11,"eq","","",105,[[["self"],["shr"]],["bool"]]],[11,"eq","devise::syn","",162,[[["self"],["barefnargname"]],["bool"]]],[11,"ne","","",162,[[["self"],["barefnargname"]],["bool"]]],[11,"eq","devise::syn::token","",95,[[["self"],["pound"]],["bool"]]],[11,"eq","","",110,[[["self"],["tilde"]],["bool"]]],[11,"eq","devise::syn","",173,[[["self"],["exprbox"]],["bool"]]],[11,"ne","","",173,[[["self"],["exprbox"]],["bool"]]],[11,"eq","devise::syn::token","",46,[[["self"],["ref"]],["bool"]]],[11,"eq","","",47,[[["self"],["return"]],["bool"]]],[11,"eq","devise::syn","",147,[[["self"],["index"]],["bool"]]],[11,"eq","","",123,[[["self"],["exprmatch"]],["bool"]]],[11,"ne","","",123,[[["self"],["exprmatch"]],["bool"]]],[11,"eq","","",157,[[["self"],["pattuplestruct"]],["bool"]]],[11,"ne","","",157,[[["self"],["pattuplestruct"]],["bool"]]],[11,"eq","","",275,[[["self"],["typemacro"]],["bool"]]],[11,"ne","","",275,[[["self"],["typemacro"]],["bool"]]],[11,"eq","devise::syn::token","",82,[[["self"],["dot3"]],["bool"]]],[11,"eq","","",98,[[["self"],["larrow"]],["bool"]]],[11,"eq","devise::syn","",242,[[["self"],["foreignitemmacro"]],["bool"]]],[11,"ne","","",242,[[["self"],["foreignitemmacro"]],["bool"]]],[11,"eq","","",158,[[["self"],["typeparambound"]],["bool"]]],[11,"ne","","",158,[[["self"],["typeparambound"]],["bool"]]],[11,"eq","","",251,[[["self"],["implitemverbatim"]],["bool"]]],[11,"eq","","",309,[[["self"],["rangelimits"]],["bool"]]],[11,"ne","","",309,[[["self"],["rangelimits"]],["bool"]]],[11,"eq","","",201,[[["self"],["itemmacro2"]],["bool"]]],[11,"eq","","",216,[[["self"],["itemverbatim"]],["bool"]]],[11,"eq","devise::syn::token","",78,[[["self"],["diveq"]],["bool"]]],[11,"eq","","",42,[[["self"],["mut"]],["bool"]]],[11,"eq","","",96,[[["self"],["question"]],["bool"]]],[11,"eq","devise::syn","",272,[[["self"],["patslice"]],["bool"]]],[11,"ne","","",272,[[["self"],["patslice"]],["bool"]]],[11,"eq","devise::syn::token","",88,[[["self"],["le"]],["bool"]]],[11,"eq","devise::syn","",222,[[["self"],["exprcontinue"]],["bool"]]],[11,"ne","","",222,[[["self"],["exprcontinue"]],["bool"]]],[11,"eq","devise::syn::token","",104,[[["self"],["shleq"]],["bool"]]],[11,"eq","devise::syn","",180,[[["self"],["usegroup"]],["bool"]]],[11,"ne","","",180,[[["self"],["usegroup"]],["bool"]]],[11,"eq","","",142,[[["self"],["exprloop"]],["bool"]]],[11,"ne","","",142,[[["self"],["exprloop"]],["bool"]]],[11,"eq","","",246,[[["self"],["usepath"]],["bool"]]],[11,"ne","","",246,[[["self"],["usepath"]],["bool"]]],[11,"eq","","",305,[[["self"],["exprreturn"]],["bool"]]],[11,"ne","","",305,[[["self"],["exprreturn"]],["bool"]]],[11,"eq","","",122,[[["self"],["argselfref"]],["bool"]]],[11,"ne","","",122,[[["self"],["argselfref"]],["bool"]]],[11,"eq","","",303,[[["self"],["typeparam"]],["bool"]]],[11,"ne","","",303,[[["self"],["typeparam"]],["bool"]]],[11,"eq","","",207,[[["self"],["pat"]],["bool"]]],[11,"ne","","",207,[[["self"],["pat"]],["bool"]]],[11,"eq","","",277,[[["self"],["traititemmethod"]],["bool"]]],[11,"ne","","",277,[[["self"],["traititemmethod"]],["bool"]]],[11,"eq","","",205,[[["self"],["implitemexistential"]],["bool"]]],[11,"ne","","",205,[[["self"],["implitemexistential"]],["bool"]]],[11,"eq","","",186,[[["self"],["typetuple"]],["bool"]]],[11,"ne","","",186,[[["self"],["typetuple"]],["bool"]]],[11,"eq","","",189,[[["self"],["exprbinary"]],["bool"]]],[11,"ne","","",189,[[["self"],["exprbinary"]],["bool"]]],[11,"eq","","",151,[[["self"],["genericargument"]],["bool"]]],[11,"ne","","",151,[[["self"],["genericargument"]],["bool"]]],[11,"eq","","",220,[[["self"],["parenthesizedgenericarguments"]],["bool"]]],[11,"ne","","",220,[[["self"],["parenthesizedgenericarguments"]],["bool"]]],[11,"eq","","",292,[[["self"],["metanamevalue"]],["bool"]]],[11,"ne","","",292,[[["self"],["metanamevalue"]],["bool"]]],[11,"eq","devise::syn::token","",32,[[["self"],["for"]],["bool"]]],[11,"eq","","",35,[[["self"],["in"]],["bool"]]],[11,"eq","","",17,[[["self"],["become"]],["bool"]]],[11,"eq","devise::syn","",208,[[["self"],["metalist"]],["bool"]]],[11,"ne","","",208,[[["self"],["metalist"]],["bool"]]],[11,"eq","","",297,[[["self"],["exprrange"]],["bool"]]],[11,"ne","","",297,[[["self"],["exprrange"]],["bool"]]],[11,"eq","devise::syn::token","",67,[[["self"],["and"]],["bool"]]],[11,"eq","devise::syn","",281,[[["self"],["exprrepeat"]],["bool"]]],[11,"ne","","",281,[[["self"],["exprrepeat"]],["bool"]]],[11,"eq","","",213,[[["self"],["argcaptured"]],["bool"]]],[11,"ne","","",213,[[["self"],["argcaptured"]],["bool"]]],[11,"eq","","",194,[[["self"],["anglebracketedgenericarguments"]],["bool"]]],[11,"ne","","",194,[[["self"],["anglebracketedgenericarguments"]],["bool"]]],[11,"eq","","",219,[[["self"],["exprmethodcall"]],["bool"]]],[11,"ne","","",219,[[["self"],["exprmethodcall"]],["bool"]]],[11,"eq","","",253,[[["self"],["data"]],["bool"]]],[11,"ne","","",253,[[["self"],["data"]],["bool"]]],[11,"eq","devise::syn::token","",61,[[["self"],["virtual"]],["bool"]]],[11,"eq","devise::syn","",170,[[["self"],["patrange"]],["bool"]]],[11,"ne","","",170,[[["self"],["patrange"]],["bool"]]],[11,"eq","","",161,[[["self"],["itemstatic"]],["bool"]]],[11,"ne","","",161,[[["self"],["itemstatic"]],["bool"]]],[11,"eq","","",159,[[["self"],["exprforloop"]],["bool"]]],[11,"ne","","",159,[[["self"],["exprforloop"]],["bool"]]],[11,"eq","","",285,[[["self"],["exprarray"]],["bool"]]],[11,"ne","","",285,[[["self"],["exprarray"]],["bool"]]],[11,"eq","devise::syn::token","",107,[[["self"],["star"]],["bool"]]],[11,"eq","devise::syn","",311,[[["self"],["barefnarg"]],["bool"]]],[11,"ne","","",311,[[["self"],["barefnarg"]],["bool"]]],[11,"eq","devise::syn::token","",99,[[["self"],["rem"]],["bool"]]],[11,"eq","devise::syn","",209,[[["self"],["itemtype"]],["bool"]]],[11,"ne","","",209,[[["self"],["itemtype"]],["bool"]]],[11,"eq","devise::syn::token","",87,[[["self"],["gt"]],["bool"]]],[11,"eq","devise::syn","",132,[[["self"],["dataunion"]],["bool"]]],[11,"ne","","",132,[[["self"],["dataunion"]],["bool"]]],[11,"eq","devise::syn::token","",86,[[["self"],["ge"]],["bool"]]],[11,"eq","devise::syn","",226,[[["self"],["exprif"]],["bool"]]],[11,"ne","","",226,[[["self"],["exprif"]],["bool"]]],[11,"eq","devise::syn::token","",50,[[["self"],["static"]],["bool"]]],[11,"eq","","",77,[[["self"],["div"]],["bool"]]],[11,"eq","devise::syn","",267,[[["self"],["exprunary"]],["bool"]]],[11,"ne","","",267,[[["self"],["exprunary"]],["bool"]]],[11,"eq","","",214,[[["self"],["exprverbatim"]],["bool"]]],[11,"eq","devise::syn::token","",111,[[["self"],["brace"]],["bool"]]],[11,"eq","devise::syn","",163,[[["self"],["implitemtype"]],["bool"]]],[11,"ne","","",163,[[["self"],["implitemtype"]],["bool"]]],[11,"eq","devise::syn::token","",102,[[["self"],["semi"]],["bool"]]],[11,"eq","devise::syn","",308,[[["self"],["visrestricted"]],["bool"]]],[11,"ne","","",308,[[["self"],["visrestricted"]],["bool"]]],[11,"eq","devise::syn::token","",33,[[["self"],["if"]],["bool"]]],[11,"eq","devise::syn","",129,[[["self"],["litbool"]],["bool"]]],[11,"eq","","",269,[[["self"],["strstyle"]],["bool"]]],[11,"ne","","",269,[[["self"],["strstyle"]],["bool"]]],[11,"eq","","",231,[[["self"],["returntype"]],["bool"]]],[11,"ne","","",231,[[["self"],["returntype"]],["bool"]]],[11,"eq","","",262,[[["self"],["wherepredicate"]],["bool"]]],[11,"ne","","",262,[[["self"],["wherepredicate"]],["bool"]]],[11,"eq","devise::syn::token","",89,[[["self"],["lt"]],["bool"]]],[11,"eq","","",71,[[["self"],["bang"]],["bool"]]],[11,"eq","","",69,[[["self"],["andeq"]],["bool"]]],[11,"eq","","",14,[[["self"],["as"]],["bool"]]],[11,"eq","devise::syn","",193,[[["self"],["patref"]],["bool"]]],[11,"ne","","",193,[[["self"],["patref"]],["bool"]]],[11,"eq","","",202,[[["self"],["exprstruct"]],["bool"]]],[11,"ne","","",202,[[["self"],["exprstruct"]],["bool"]]],[11,"eq","","",245,[[["self"],["typeslice"]],["bool"]]],[11,"ne","","",245,[[["self"],["typeslice"]],["bool"]]],[11,"eq","devise::syn::token","",26,[[["self"],["else"]],["bool"]]],[11,"eq","devise::syn","",235,[[["self"],["predicatetype"]],["bool"]]],[11,"ne","","",235,[[["self"],["predicatetype"]],["bool"]]],[11,"eq","","",238,[[["self"],["path"]],["bool"]]],[11,"ne","","",238,[[["self"],["path"]],["bool"]]],[11,"eq","","",313,[[["self"],["patident"]],["bool"]]],[11,"ne","","",313,[[["self"],["patident"]],["bool"]]],[11,"eq","devise::syn::token","",97,[[["self"],["rarrow"]],["bool"]]],[11,"eq","devise::syn","",135,[[["self"],["fieldvalue"]],["bool"]]],[11,"ne","","",135,[[["self"],["fieldvalue"]],["bool"]]],[11,"eq","","",136,[[["self"],["visibility"]],["bool"]]],[11,"ne","","",136,[[["self"],["visibility"]],["bool"]]],[11,"eq","","",252,[[["self"],["field"]],["bool"]]],[11,"ne","","",252,[[["self"],["field"]],["bool"]]],[11,"eq","","",261,[[["self"],["exprfield"]],["bool"]]],[11,"ne","","",261,[[["self"],["exprfield"]],["bool"]]],[11,"eq","","",156,[[["self"],["itemmacro"]],["bool"]]],[11,"ne","","",156,[[["self"],["itemmacro"]],["bool"]]],[11,"eq","","",160,[[["self"],["unop"]],["bool"]]],[11,"ne","","",160,[[["self"],["unop"]],["bool"]]],[11,"eq","","",176,[[["self"],["deriveinput"]],["bool"]]],[11,"ne","","",176,[[["self"],["deriveinput"]],["bool"]]],[11,"eq","devise::syn::token","",68,[[["self"],["andand"]],["bool"]]],[11,"eq","devise::syn","",211,[[["self"],["stmt"]],["bool"]]],[11,"ne","","",211,[[["self"],["stmt"]],["bool"]]],[11,"eq","devise::syn::token","",24,[[["self"],["do"]],["bool"]]],[11,"eq","devise::syn","",236,[[["self"],["macrodelimiter"]],["bool"]]],[11,"ne","","",236,[[["self"],["macrodelimiter"]],["bool"]]],[11,"eq","","",146,[[["self"],["fnarg"]],["bool"]]],[11,"ne","","",146,[[["self"],["fnarg"]],["bool"]]],[11,"eq","devise::syn::buffer","",321,[[["self"],["cursor"]],["bool"]]],[11,"ne","","",321,[[["self"],["cursor"]],["bool"]]],[11,"eq","devise::syn::token","",59,[[["self"],["unsized"]],["bool"]]],[11,"into_iter","devise::syn::punctuated","",322,N],[11,"fmt","devise::syn","",271,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn::parse","",331,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",329,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn","",144,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn::token","",28,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn","",313,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn::token","",52,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn","",185,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",293,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",230,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn::token","",12,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn","",266,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn::token","",49,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",109,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn","",133,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn::token","",35,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn","",250,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn::token","",92,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn","",198,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn::token","",47,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn","",125,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",217,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",258,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",282,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn::token","",17,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn","",141,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",224,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",140,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",220,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn::token","",34,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn","",179,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",307,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn::token","",64,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn","",208,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",150,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",246,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",340,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",121,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn::token","",75,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn","",338,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn::token","",15,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn","",286,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",242,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",195,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",174,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn::token","",48,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn","",301,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn::token","",105,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",111,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn","",165,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",197,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",299,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",192,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",187,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn::token","",62,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn","",153,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",336,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",129,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",163,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn::token","",41,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn","",190,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",132,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",259,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",126,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn::token","",55,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn","",277,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",196,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn::token","",42,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn","",241,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",228,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",291,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",236,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",158,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",281,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",268,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",123,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn::token","",69,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",83,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",99,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn","",279,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",248,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn::token","",36,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn","",175,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",130,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",284,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",264,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",214,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",260,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn::token","",67,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn","",178,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",128,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn::token","",84,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn","",124,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",289,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",337,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",310,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",233,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn::token","",76,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",73,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn","",304,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn::token","",66,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn","",173,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn::token","",44,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn","",306,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn::token","",85,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn","",231,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn::token","",114,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn","",294,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn::token","",93,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",95,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn::parse","",331,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn","",156,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",244,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",204,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn::token","",37,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn","",216,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",209,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",333,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn::token","",50,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",61,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn","",335,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",256,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn::token","",90,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn","",219,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn::token","",113,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",98,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn","",269,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",203,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",297,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",240,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",172,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn::token","",72,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn","",274,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",199,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",262,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",263,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn::token","",27,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn","",142,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",171,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn::token","",18,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",74,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn","",191,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",252,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn::parse","",329,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn::token","",71,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn","",222,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",127,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",275,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",154,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",311,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",201,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn::token","",78,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn","",188,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn::token","",70,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn","",211,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn::token","",112,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",87,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn","",255,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",194,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",137,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",280,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn::token","",65,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn","",166,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn::token","",103,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn","",139,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",164,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",278,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn::token","",96,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn","",157,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn::token","",80,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn::punctuated","",322,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn","",273,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",334,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",145,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn::token","",19,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",107,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn","",308,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",177,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",239,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",223,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn::token","",16,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",81,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn","",189,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",167,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",287,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",261,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",298,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",283,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",229,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn::token","",25,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",108,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",77,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn","",135,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",288,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",276,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",186,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn::token","",53,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",104,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",82,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",57,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn","",249,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",272,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn::token","",94,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn","",146,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",295,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn::token","",86,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",101,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn","",181,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",169,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn::token","",59,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",56,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",58,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn","",267,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",161,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",271,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",265,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",339,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn::token","",33,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",102,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn","",207,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",193,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn::token","",24,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn","",227,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",292,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",206,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",341,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",182,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",162,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",213,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",218,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",160,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",138,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",120,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",134,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",215,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",210,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",232,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",237,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",303,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",305,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn::token","",13,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn","",257,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",225,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",205,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn::token","",46,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn","",309,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",221,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",152,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",176,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",149,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",235,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn::token","",22,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn","",131,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn::token","",97,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn","",243,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",234,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",148,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",151,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",302,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",202,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",170,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn::token","",30,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn","",300,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",245,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",168,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn::token","",79,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn","",155,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",226,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn::token","",63,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn","",143,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn::token","",54,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn","",270,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",251,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn::token","",88,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn","",147,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn::token","",89,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",110,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn","",285,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn::token","",29,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn","",180,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",200,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn::token","",68,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn","",312,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn::token","",106,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn","",122,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",296,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn::token","",21,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn","",238,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",136,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn::token","",32,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",91,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn","",183,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn::token","",100,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",60,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","devise::syn","",253,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",290,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",247,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",159,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",212,[[["self"],["formatter"]],["result",["error"]]]],[11,"clone","","",312,[[["self"]],["itemtraitalias"]]],[11,"clone","devise::syn::token","",26,[[["self"]],["else"]]],[11,"clone","","",105,[[["self"]],["shr"]]],[11,"clone","devise::syn","",336,[[["self"]],["litfloat"]]],[11,"clone","","",242,[[["self"]],["foreignitemmacro"]]],[11,"clone","","",171,[[["self"]],["fieldsnamed"]]],[11,"clone","devise::syn::token","",38,[[["self"]],["macro"]]],[11,"clone","devise::syn","",162,[[["self"]],["barefnargname"]]],[11,"clone","devise::syn::token","",67,[[["self"]],["and"]]],[11,"clone","","",69,[[["self"]],["andeq"]]],[11,"clone","","",25,[[["self"]],["dyn"]]],[11,"clone","","",58,[[["self"]],["unsafe"]]],[11,"clone","devise::syn","",276,[[["self"]],["patharguments"]]],[11,"clone","devise::syn::token","",113,[[["self"]],["paren"]]],[11,"clone","devise::syn","",258,[[["self"]],["typeinfer"]]],[11,"clone","","",296,[[["self"]],["foreignitemfn"]]],[11,"clone","devise::syn::token","",50,[[["self"]],["static"]]],[11,"clone","","",99,[[["self"]],["rem"]]],[11,"clone","","",29,[[["self"]],["extern"]]],[11,"clone","","",47,[[["self"]],["return"]]],[11,"clone","","",56,[[["self"]],["typeof"]]],[11,"clone","devise::syn","",159,[[["self"]],["exprforloop"]]],[11,"clone","","",240,[[["self"]],["itemforeignmod"]]],[11,"clone","","",144,[[["self"]],["file"]]],[11,"clone","devise::syn::token","",68,[[["self"]],["andand"]]],[11,"clone","devise::syn","",218,[[["self"]],["exprcall"]]],[11,"clone","","",206,[[["self"]],["itemstruct"]]],[11,"clone","","",164,[[["self"]],["patlit"]]],[11,"clone","","",203,[[["self"]],["patverbatim"]]],[11,"clone","devise::syn::token","",15,[[["self"]],["async"]]],[11,"clone","","",103,[[["self"]],["shl"]]],[11,"clone","devise::syn","",123,[[["self"]],["exprmatch"]]],[11,"clone","devise::syn::token","",73,[[["self"]],["careteq"]]],[11,"clone","devise::syn","",252,[[["self"]],["field"]]],[11,"clone","","",261,[[["self"]],["exprfield"]]],[11,"clone","","",222,[[["self"]],["exprcontinue"]]],[11,"clone","","",179,[[["self"]],["genericmethodargument"]]],[11,"clone","","",187,[[["self"]],["usetree"]]],[11,"clone","","",270,[[["self"]],["typegroup"]]],[11,"clone","","",313,[[["self"]],["patident"]]],[11,"clone","","",308,[[["self"]],["visrestricted"]]],[11,"clone","","",220,[[["self"]],["parenthesizedgenericarguments"]]],[11,"clone","devise::syn::token","",57,[[["self"]],["union"]]],[11,"clone","devise::syn","",195,[[["self"]],["itemuse"]]],[11,"clone","devise::syn::token","",16,[[["self"]],["auto"]]],[11,"clone","devise::syn","",272,[[["self"]],["patslice"]]],[11,"clone","devise::syn::token","",60,[[["self"]],["use"]]],[11,"clone","devise::syn","",244,[[["self"]],["exprtry"]]],[11,"clone","","",234,[[["self"]],["constraint"]]],[11,"clone","","",121,[[["self"]],["patpath"]]],[11,"clone","","",277,[[["self"]],["traititemmethod"]]],[11,"clone","","",127,[[["self"]],["patstruct"]]],[11,"clone","devise::syn::token","",78,[[["self"]],["diveq"]]],[11,"clone","","",28,[[["self"]],["existential"]]],[11,"clone","devise::syn","",129,[[["self"]],["litbool"]]],[11,"clone","devise::syn::token","",95,[[["self"]],["pound"]]],[11,"clone","","",51,[[["self"]],["struct"]]],[11,"clone","","",114,[[["self"]],["group"]]],[11,"clone","devise::syn","",147,[[["self"]],["index"]]],[11,"clone","","",140,[[["self"]],["userename"]]],[11,"clone","","",334,[[["self"]],["implgenerics"]]],[11,"clone","devise::syn::token","",88,[[["self"]],["le"]]],[11,"clone","","",112,[[["self"]],["bracket"]]],[11,"clone","devise::syn","",233,[[["self"]],["patmacro"]]],[11,"clone","","",243,[[["self"]],["useglob"]]],[11,"clone","","",229,[[["self"]],["exprassign"]]],[11,"clone","devise::syn::parse","",330,[[["self"]],["stepcursor"]]],[11,"clone","devise::syn","",269,[[["self"]],["strstyle"]]],[11,"clone","","",273,[[["self"]],["foreignitem"]]],[11,"clone","devise::syn::token","",63,[[["self"]],["while"]]],[11,"clone","devise::syn","",143,[[["self"]],["nestedmeta"]]],[11,"clone","","",232,[[["self"]],["argself"]]],[11,"clone","","",217,[[["self"]],["predicatelifetime"]]],[11,"clone","","",307,[[["self"]],["fieldpat"]]],[11,"clone","","",141,[[["self"]],["implitemmethod"]]],[11,"clone","","",219,[[["self"]],["exprmethodcall"]]],[11,"clone","","",284,[[["self"]],["local"]]],[11,"clone","","",295,[[["self"]],["dataenum"]]],[11,"clone","devise::syn::token","",39,[[["self"]],["match"]]],[11,"clone","devise::syn","",286,[[["self"]],["typetraitobject"]]],[11,"clone","","",248,[[["self"]],["exprlit"]]],[11,"clone","","",241,[[["self"]],["typepath"]]],[11,"clone","","",193,[[["self"]],["patref"]]],[11,"clone","","",292,[[["self"]],["metanamevalue"]]],[11,"clone","","",263,[[["self"]],["exprtryblock"]]],[11,"clone","devise::syn::buffer","",321,[[["self"]],["cursor"]]],[11,"clone","devise::syn","",148,[[["self"]],["item"]]],[11,"clone","devise::syn::token","",35,[[["self"]],["in"]]],[11,"clone","","",46,[[["self"]],["ref"]]],[11,"clone","","",54,[[["self"]],["try"]]],[11,"clone","devise::syn","",257,[[["self"]],["exprparen"]]],[11,"clone","devise::syn::token","",107,[[["self"]],["star"]]],[11,"clone","","",100,[[["self"]],["remeq"]]],[11,"clone","devise::syn","",289,[[["self"]],["implitemmacro"]]],[11,"clone","devise::syn::token","",21,[[["self"]],["continue"]]],[11,"clone","devise::syn","",271,[[["self"]],["lifetime"]]],[11,"clone","","",137,[[["self"]],["typeptr"]]],[11,"clone","devise::syn::token","",12,[[["self"]],["underscore"]]],[11,"clone","","",19,[[["self"]],["break"]]],[11,"clone","devise::syn","",264,[[["self"]],["exprreference"]]],[11,"clone","","",186,[[["self"]],["typetuple"]]],[11,"clone","devise::syn::token","",23,[[["self"]],["default"]]],[11,"clone","devise::syn","",146,[[["self"]],["fnarg"]]],[11,"clone","","",192,[[["self"]],["itemenum"]]],[11,"clone","devise::syn::token","",109,[[["self"]],["subeq"]]],[11,"clone","devise::syn","",274,[[["self"]],["exprpath"]]],[11,"clone","","",291,[[["self"]],["patbox"]]],[11,"clone","devise::syn::token","",110,[[["self"]],["tilde"]]],[11,"clone","","",84,[[["self"]],["eq"]]],[11,"clone","devise::syn","",249,[[["self"]],["exprtype"]]],[11,"clone","","",303,[[["self"]],["typeparam"]]],[11,"clone","devise::syn::token","",98,[[["self"]],["larrow"]]],[11,"clone","devise::syn","",339,[[["self"]],["litint"]]],[11,"clone","","",262,[[["self"]],["wherepredicate"]]],[11,"clone","","",150,[[["self"]],["fields"]]],[11,"clone","","",245,[[["self"]],["typeslice"]]],[11,"clone","","",145,[[["self"]],["macro"]]],[11,"clone","","",228,[[["self"]],["usename"]]],[11,"clone","","",190,[[["self"]],["exprmacro"]]],[11,"clone","","",196,[[["self"]],["predicateeq"]]],[11,"clone","","",191,[[["self"]],["typebarefn"]]],[11,"clone","","",172,[[["self"]],["floatsuffix"]]],[11,"clone","","",310,[[["self"]],["exprinplace"]]],[11,"clone","","",175,[[["self"]],["traititemtype"]]],[11,"clone","devise::syn::parse","",331,[[["self"]],["error"]]],[11,"clone","devise::syn","",299,[[["self"]],["itemexistential"]]],[11,"clone","","",237,[[["self"]],["fndecl"]]],[11,"clone","","",204,[[["self"]],["attribute"]]],[11,"clone","","",293,[[["self"]],["itemunion"]]],[11,"clone","","",120,[[["self"]],["type"]]],[11,"clone","","",265,[[["self"]],["label"]]],[11,"clone","","",306,[[["self"]],["attrstyle"]]],[11,"clone","devise::syn::token","",75,[[["self"]],["colon2"]]],[11,"clone","devise::syn","",260,[[["self"]],["pattuple"]]],[11,"clone","","",138,[[["self"]],["exprtuple"]]],[11,"clone","","",177,[[["self"]],["whereclause"]]],[11,"clone","","",197,[[["self"]],["exprbreak"]]],[11,"clone","","",158,[[["self"]],["typeparambound"]]],[11,"clone","devise::syn::token","",97,[[["self"]],["rarrow"]]],[11,"clone","devise::syn","",208,[[["self"]],["metalist"]]],[11,"clone","","",309,[[["self"]],["rangelimits"]]],[11,"clone","","",300,[[["self"]],["member"]]],[11,"clone","","",268,[[["self"]],["exprassignop"]]],[11,"clone","","",225,[[["self"]],["patwild"]]],[11,"clone","","",149,[[["self"]],["exprwhile"]]],[11,"clone","","",152,[[["self"]],["traititem"]]],[11,"clone","devise::syn::punctuated","",322,[[["self"]],["punctuated"]]],[11,"clone","devise::syn","",183,[[["self"]],["methodturbofish"]]],[11,"clone","","",207,[[["self"]],["pat"]]],[11,"clone","","",200,[[["self"]],["qself"]]],[11,"clone","devise::syn::token","",32,[[["self"]],["for"]]],[11,"clone","devise::syn","",136,[[["self"]],["visibility"]]],[11,"clone","","",287,[[["self"]],["exprunsafe"]]],[11,"clone","devise::syn::token","",79,[[["self"]],["dollar"]]],[11,"clone","devise::syn","",255,[[["self"]],["methodsig"]]],[11,"clone","","",226,[[["self"]],["exprif"]]],[11,"clone","devise::syn::token","",43,[[["self"]],["override"]]],[11,"clone","devise::syn","",124,[[["self"]],["typeimpltrait"]]],[11,"clone","","",165,[[["self"]],["constparam"]]],[11,"clone","","",290,[[["self"]],["itemtrait"]]],[11,"clone","","",216,[[["self"]],["itemverbatim"]]],[11,"clone","devise::syn::token","",74,[[["self"]],["colon"]]],[11,"clone","","",61,[[["self"]],["virtual"]]],[11,"clone","","",37,[[["self"]],["loop"]]],[11,"clone","","",31,[[["self"]],["fn"]]],[11,"clone","devise::syn","",302,[[["self"]],["lit"]]],[11,"clone","","",189,[[["self"]],["exprbinary"]]],[11,"clone","devise::syn::token","",59,[[["self"]],["unsized"]]],[11,"clone","devise::syn","",282,[[["self"]],["binop"]]],[11,"clone","","",161,[[["self"]],["itemstatic"]]],[11,"clone","","",215,[[["self"]],["binding"]]],[11,"clone","","",340,[[["self"]],["typegenerics"]]],[11,"clone","devise::syn::token","",104,[[["self"]],["shleq"]]],[11,"clone","devise::syn","",223,[[["self"]],["implitem"]]],[11,"clone","","",126,[[["self"]],["arm"]]],[11,"clone","devise::syn::token","",66,[[["self"]],["addeq"]]],[11,"clone","","",33,[[["self"]],["if"]]],[11,"clone","devise::syn","",250,[[["self"]],["typeverbatim"]]],[11,"clone","","",298,[[["self"]],["block"]]],[11,"clone","devise::syn::token","",49,[[["self"]],["selfvalue"]]],[11,"clone","","",82,[[["self"]],["dot3"]]],[11,"clone","devise::syn","",182,[[["self"]],["exprindex"]]],[11,"clone","","",132,[[["self"]],["dataunion"]]],[11,"clone","","",279,[[["self"]],["traitboundmodifier"]]],[11,"clone","devise::syn::token","",86,[[["self"]],["ge"]]],[11,"clone","devise::syn","",311,[[["self"]],["barefnarg"]]],[11,"clone","devise::syn::token","",76,[[["self"]],["comma"]]],[11,"clone","","",30,[[["self"]],["final"]]],[11,"clone","devise::syn","",239,[[["self"]],["datastruct"]]],[11,"clone","","",156,[[["self"]],["itemmacro"]]],[11,"clone","devise::syn::token","",64,[[["self"]],["yield"]]],[11,"clone","devise::syn","",167,[[["self"]],["typearray"]]],[11,"clone","","",294,[[["self"]],["lifetimedef"]]],[11,"clone","","",173,[[["self"]],["exprbox"]]],[11,"clone","","",134,[[["self"]],["itemimpl"]]],[11,"clone","devise::syn::token","",62,[[["self"]],["where"]]],[11,"clone","devise::syn","",221,[[["self"]],["traititemconst"]]],[11,"clone","","",278,[[["self"]],["intsuffix"]]],[11,"clone","","",214,[[["self"]],["exprverbatim"]]],[11,"clone","devise::syn::token","",87,[[["self"]],["gt"]]],[11,"clone","","",48,[[["self"]],["selftype"]]],[11,"clone","devise::syn","",238,[[["self"]],["path"]]],[11,"clone","","",281,[[["self"]],["exprrepeat"]]],[11,"clone","devise::syn::token","",44,[[["self"]],["priv"]]],[11,"clone","devise::syn","",185,[[["self"]],["meta"]]],[11,"clone","","",266,[[["self"]],["expr"]]],[11,"clone","devise::syn::token","",70,[[["self"]],["at"]]],[11,"clone","","",20,[[["self"]],["const"]]],[11,"clone","devise::syn","",176,[[["self"]],["deriveinput"]]],[11,"clone","devise::syn::token","",65,[[["self"]],["add"]]],[11,"clone","","",18,[[["self"]],["box"]]],[11,"clone","","",24,[[["self"]],["do"]]],[11,"clone","devise::syn","",231,[[["self"]],["returntype"]]],[11,"clone","","",230,[[["self"]],["exprlet"]]],[11,"clone","","",169,[[["self"]],["expryield"]]],[11,"clone","","",337,[[["self"]],["turbofish"]]],[11,"clone","","",247,[[["self"]],["boundlifetimes"]]],[11,"clone","","",154,[[["self"]],["exprclosure"]]],[11,"clone","","",142,[[["self"]],["exprloop"]]],[11,"clone","","",130,[[["self"]],["foreignitemverbatim"]]],[11,"clone","devise::syn::token","",93,[[["self"]],["oreq"]]],[11,"clone","","",96,[[["self"]],["question"]]],[11,"clone","devise::syn","",288,[[["self"]],["abi"]]],[11,"clone","","",180,[[["self"]],["usegroup"]]],[11,"clone","devise::syn::token","",42,[[["self"]],["mut"]]],[11,"clone","devise::syn","",170,[[["self"]],["patrange"]]],[11,"clone","","",335,[[["self"]],["litbyte"]]],[11,"clone","","",224,[[["self"]],["traititemverbatim"]]],[11,"clone","","",341,[[["self"]],["litstr"]]],[11,"clone","","",211,[[["self"]],["stmt"]]],[11,"clone","devise::syn::token","",34,[[["self"]],["impl"]]],[11,"clone","devise::syn","",212,[[["self"]],["exprblock"]]],[11,"clone","","",210,[[["self"]],["generics"]]],[11,"clone","","",205,[[["self"]],["implitemexistential"]]],[11,"clone","","",251,[[["self"]],["implitemverbatim"]]],[11,"clone","","",259,[[["self"]],["traititemmacro"]]],[11,"clone","","",139,[[["self"]],["litverbatim"]]],[11,"clone","devise::syn::token","",80,[[["self"]],["dot"]]],[11,"clone","devise::syn","",236,[[["self"]],["macrodelimiter"]]],[11,"clone","","",253,[[["self"]],["data"]]],[11,"clone","","",198,[[["self"]],["itemfn"]]],[11,"clone","devise::syn::token","",106,[[["self"]],["shreq"]]],[11,"clone","devise::syn","",235,[[["self"]],["predicatetype"]]],[11,"clone","","",267,[[["self"]],["exprunary"]]],[11,"clone","","",128,[[["self"]],["viscrate"]]],[11,"clone","","",280,[[["self"]],["foreignitemstatic"]]],[11,"clone","devise::syn::token","",22,[[["self"]],["crate"]]],[11,"clone","","",13,[[["self"]],["abstract"]]],[11,"clone","devise::syn","",181,[[["self"]],["implitemconst"]]],[11,"clone","","",199,[[["self"]],["vispublic"]]],[11,"clone","","",283,[[["self"]],["itemmod"]]],[11,"clone","","",178,[[["self"]],["exprgroup"]]],[11,"clone","devise::syn::token","",27,[[["self"]],["enum"]]],[11,"clone","devise::syn","",133,[[["self"]],["typenever"]]],[11,"clone","devise::syn::token","",85,[[["self"]],["eqeq"]]],[11,"clone","devise::syn","",166,[[["self"]],["exprasync"]]],[11,"clone","","",227,[[["self"]],["typereference"]]],[11,"clone","","",201,[[["self"]],["itemmacro2"]]],[11,"clone","","",246,[[["self"]],["usepath"]]],[11,"clone","","",163,[[["self"]],["implitemtype"]]],[11,"clone","","",338,[[["self"]],["litbytestr"]]],[11,"clone","","",213,[[["self"]],["argcaptured"]]],[11,"clone","devise::syn::token","",55,[[["self"]],["type"]]],[11,"clone","","",108,[[["self"]],["sub"]]],[11,"clone","devise::syn","",202,[[["self"]],["exprstruct"]]],[11,"clone","","",297,[[["self"]],["exprrange"]]],[11,"clone","","",209,[[["self"]],["itemtype"]]],[11,"clone","","",304,[[["self"]],["foreignitemtype"]]],[11,"clone","devise::syn::token","",91,[[["self"]],["ne"]]],[11,"clone","","",83,[[["self"]],["dotdoteq"]]],[11,"clone","devise::syn","",256,[[["self"]],["fieldsunnamed"]]],[11,"clone","devise::syn::token","",90,[[["self"]],["muleq"]]],[11,"clone","","",14,[[["self"]],["as"]]],[11,"clone","devise::syn","",131,[[["self"]],["exprcast"]]],[11,"clone","","",160,[[["self"]],["unop"]]],[11,"clone","","",157,[[["self"]],["pattuplestruct"]]],[11,"clone","devise::syn::token","",41,[[["self"]],["move"]]],[11,"clone","","",111,[[["self"]],["brace"]]],[11,"clone","","",102,[[["self"]],["semi"]]],[11,"clone","devise::syn","",285,[[["self"]],["exprarray"]]],[11,"clone","","",122,[[["self"]],["argselfref"]]],[11,"clone","","",275,[[["self"]],["typemacro"]]],[11,"clone","devise::syn::token","",36,[[["self"]],["let"]]],[11,"clone","devise::syn","",305,[[["self"]],["exprreturn"]]],[11,"clone","","",135,[[["self"]],["fieldvalue"]]],[11,"clone","devise::syn::token","",17,[[["self"]],["become"]]],[11,"clone","devise::syn","",168,[[["self"]],["itemconst"]]],[11,"clone","devise::syn::token","",77,[[["self"]],["div"]]],[11,"clone","","",72,[[["self"]],["caret"]]],[11,"clone","","",92,[[["self"]],["or"]]],[11,"clone","devise::syn","",188,[[["self"]],["genericparam"]]],[11,"clone","","",301,[[["self"]],["variant"]]],[11,"clone","","",151,[[["self"]],["genericargument"]]],[11,"clone","","",153,[[["self"]],["traitbound"]]],[11,"clone","devise::syn::token","",52,[[["self"]],["super"]]],[11,"clone","","",81,[[["self"]],["dot2"]]],[11,"clone","","",71,[[["self"]],["bang"]]],[11,"clone","devise::syn","",194,[[["self"]],["anglebracketedgenericarguments"]]],[11,"clone","","",155,[[["self"]],["typeparen"]]],[11,"clone","devise::syn::token","",89,[[["self"]],["lt"]]],[11,"clone","","",40,[[["self"]],["mod"]]],[11,"clone","devise::syn","",174,[[["self"]],["pathsegment"]]],[11,"clone","devise::syn::token","",101,[[["self"]],["fatarrow"]]],[11,"clone","devise::syn","",333,[[["self"]],["litchar"]]],[11,"clone","devise::syn::token","",94,[[["self"]],["oror"]]],[11,"clone","devise::syn","",125,[[["self"]],["itemexterncrate"]]],[11,"clone","devise::syn::token","",45,[[["self"]],["pub"]]],[11,"clone","","",53,[[["self"]],["trait"]]],[11,"partial_cmp","devise::syn","",271,[[["self"],["lifetime"]],["option",["ordering"]]]],[11,"from_iter","devise::syn::punctuated","",322,[[["i"]],["punctuated"]]],[11,"from_iter","","",322,[[["i"]],["punctuated"]]],[11,"next","","",323,[[["self"]],["option"]]],[11,"next","","",326,[[["self"]],["option"]]],[11,"next","","",324,[[["self"]],["option"]]],[11,"next","","",325,[[["self"]],["option"]]],[11,"next","","",327,[[["self"]],["option"]]],[11,"next","","",328,[[["self"]],["option"]]],[11,"drop","devise::syn::parse","",329,N],[11,"default","devise::syn::token","",56,[[],["typeof"]]],[11,"default","","",64,[[],["yield"]]],[11,"default","","",88,[[],["le"]]],[11,"default","","",102,[[],["semi"]]],[11,"default","","",104,[[],["shleq"]]],[11,"default","","",30,[[],["final"]]],[11,"default","","",44,[[],["priv"]]],[11,"default","","",76,[[],["comma"]]],[11,"default","","",80,[[],["dot"]]],[11,"default","","",37,[[],["loop"]]],[11,"default","","",18,[[],["box"]]],[11,"default","","",78,[[],["diveq"]]],[11,"default","","",68,[[],["andand"]]],[11,"default","","",75,[[],["colon2"]]],[11,"default","","",42,[[],["mut"]]],[11,"default","","",72,[[],["caret"]]],[11,"default","","",65,[[],["add"]]],[11,"default","","",74,[[],["colon"]]],[11,"default","","",112,[[],["bracket"]]],[11,"default","","",40,[[],["mod"]]],[11,"default","","",71,[[],["bang"]]],[11,"default","","",34,[[],["impl"]]],[11,"default","","",22,[[],["crate"]]],[11,"default","","",89,[[],["lt"]]],[11,"default","","",20,[[],["const"]]],[11,"default","devise::syn","",276,[[],["patharguments"]]],[11,"default","devise::syn::token","",54,[[],["try"]]],[11,"default","","",61,[[],["virtual"]]],[11,"default","","",26,[[],["else"]]],[11,"default","","",48,[[],["selftype"]]],[11,"default","","",82,[[],["dot3"]]],[11,"default","","",106,[[],["shreq"]]],[11,"default","","",95,[[],["pound"]]],[11,"default","","",85,[[],["eqeq"]]],[11,"default","","",38,[[],["macro"]]],[11,"default","","",84,[[],["eq"]]],[11,"default","","",19,[[],["break"]]],[11,"default","","",93,[[],["oreq"]]],[11,"default","","",70,[[],["at"]]],[11,"default","","",52,[[],["super"]]],[11,"default","","",99,[[],["rem"]]],[11,"default","","",14,[[],["as"]]],[11,"default","","",13,[[],["abstract"]]],[11,"default","","",101,[[],["fatarrow"]]],[11,"default","","",55,[[],["type"]]],[11,"default","","",51,[[],["struct"]]],[11,"default","","",35,[[],["in"]]],[11,"default","","",113,[[],["paren"]]],[11,"default","","",67,[[],["and"]]],[11,"default","devise::syn","",210,[[],["generics"]]],[11,"default","devise::syn::token","",90,[[],["muleq"]]],[11,"default","","",41,[[],["move"]]],[11,"default","","",100,[[],["remeq"]]],[11,"default","","",43,[[],["override"]]],[11,"default","","",25,[[],["dyn"]]],[11,"default","","",15,[[],["async"]]],[11,"default","","",28,[[],["existential"]]],[11,"default","","",36,[[],["let"]]],[11,"default","","",105,[[],["shr"]]],[11,"default","","",33,[[],["if"]]],[11,"default","","",12,[[],["underscore"]]],[11,"default","","",21,[[],["continue"]]],[11,"default","","",24,[[],["do"]]],[11,"default","","",92,[[],["or"]]],[11,"default","","",53,[[],["trait"]]],[11,"default","","",103,[[],["shl"]]],[11,"default","","",107,[[],["star"]]],[11,"default","","",47,[[],["return"]]],[11,"default","","",98,[[],["larrow"]]],[11,"default","","",79,[[],["dollar"]]],[11,"default","","",45,[[],["pub"]]],[11,"default","","",58,[[],["unsafe"]]],[11,"default","","",94,[[],["oror"]]],[11,"default","devise::syn","",247,[[],["boundlifetimes"]]],[11,"default","devise::syn::token","",59,[[],["unsized"]]],[11,"default","","",83,[[],["dotdoteq"]]],[11,"default","","",29,[[],["extern"]]],[11,"default","","",87,[[],["gt"]]],[11,"default","","",60,[[],["use"]]],[11,"default","","",23,[[],["default"]]],[11,"default","","",16,[[],["auto"]]],[11,"default","","",31,[[],["fn"]]],[11,"default","","",77,[[],["div"]]],[11,"default","","",86,[[],["ge"]]],[11,"default","","",110,[[],["tilde"]]],[11,"default","","",96,[[],["question"]]],[11,"default","","",57,[[],["union"]]],[11,"default","","",97,[[],["rarrow"]]],[11,"default","","",108,[[],["sub"]]],[11,"default","","",49,[[],["selfvalue"]]],[11,"default","","",111,[[],["brace"]]],[11,"default","","",32,[[],["for"]]],[11,"default","","",73,[[],["careteq"]]],[11,"default","devise::syn::punctuated","",322,[[],["punctuated"]]],[11,"default","devise::syn::token","",114,[[],["group"]]],[11,"default","","",46,[[],["ref"]]],[11,"default","","",62,[[],["where"]]],[11,"default","","",27,[[],["enum"]]],[11,"default","","",66,[[],["addeq"]]],[11,"default","","",63,[[],["while"]]],[11,"default","","",39,[[],["match"]]],[11,"default","","",69,[[],["andeq"]]],[11,"default","","",17,[[],["become"]]],[11,"default","","",109,[[],["subeq"]]],[11,"default","","",50,[[],["static"]]],[11,"default","","",91,[[],["ne"]]],[11,"default","","",81,[[],["dot2"]]],[11,"index","devise::syn::punctuated","",322,N],[11,"len","","",326,[[["self"]],["usize"]]],[11,"len","","",327,[[["self"]],["usize"]]],[11,"len","","",328,[[["self"]],["usize"]]],[11,"len","","",325,[[["self"]],["usize"]]],[11,"len","","",323,[[["self"]],["usize"]]],[11,"len","","",324,[[["self"]],["usize"]]],[11,"description","devise::syn::parse","",331,[[["self"]],["str"]]],[11,"index_mut","devise::syn::punctuated","",322,N],[11,"deref","devise::syn::parse","",330,N],[11,"from","devise::syn","",148,[[["itemconst"]],["item"]]],[11,"from","","",148,[[["itemstruct"]],["item"]]],[11,"from","","",253,[[["datastruct"]],["data"]]],[11,"from","","",207,[[["patslice"]],["pat"]]],[11,"from","","",266,[[["exprmatch"]],["expr"]]],[11,"from","","",266,[[["exprparen"]],["expr"]]],[11,"from","","",207,[[["patlit"]],["pat"]]],[11,"from","","",148,[[["itemstatic"]],["item"]]],[11,"from","","",187,[[["usename"]],["usetree"]]],[11,"from","","",266,[[["exprindex"]],["expr"]]],[11,"from","","",143,[[["meta"]],["nestedmeta"]]],[11,"from","","",273,[[["foreignitemtype"]],["foreignitem"]]],[11,"from","","",266,[[["exprwhile"]],["expr"]]],[11,"from","","",148,[[["itemtrait"]],["item"]]],[11,"from","","",148,[[["itemimpl"]],["item"]]],[11,"from","","",120,[[["typemacro"]],["type"]]],[11,"from","","",136,[[["viscrate"]],["visibility"]]],[11,"from","","",152,[[["traititemconst"]],["traititem"]]],[11,"from","","",120,[[["typeparen"]],["type"]]],[11,"from","","",223,[[["implitemverbatim"]],["implitem"]]],[11,"from","","",207,[[["patrange"]],["pat"]]],[11,"from","","",266,[[["exprbinary"]],["expr"]]],[11,"from","","",266,[[["exprstruct"]],["expr"]]],[11,"from","","",185,[[["metalist"]],["meta"]]],[11,"from","","",302,[[["litbyte"]],["lit"]]],[11,"from","","",302,[[["litint"]],["lit"]]],[11,"from","","",148,[[["itemtype"]],["item"]]],[11,"from","","",302,[[["litbytestr"]],["lit"]]],[11,"from","","",266,[[["exprmethodcall"]],["expr"]]],[11,"from","","",266,[[["exprcast"]],["expr"]]],[11,"from","","",148,[[["itemforeignmod"]],["item"]]],[11,"from","","",146,[[["type"]],["fnarg"]]],[11,"from","","",185,[[["ident"]],["meta"]]],[11,"from","","",158,[[["lifetime"]],["typeparambound"]]],[11,"from","","",120,[[["typenever"]],["type"]]],[11,"from","","",266,[[["exprtryblock"]],["expr"]]],[11,"from","","",273,[[["foreignitemverbatim"]],["foreignitem"]]],[11,"from","","",266,[[["exprclosure"]],["expr"]]],[11,"from","","",223,[[["implitemmacro"]],["implitem"]]],[11,"from","","",143,[[["lit"]],["nestedmeta"]]],[11,"from","","",150,[[["fieldsunnamed"]],["fields"]]],[11,"from","","",266,[[["exprlit"]],["expr"]]],[11,"from","","",207,[[["pattuplestruct"]],["pat"]]],[11,"from","","",188,[[["typeparam"]],["genericparam"]]],[11,"from","","",302,[[["litbool"]],["lit"]]],[11,"from","","",148,[[["itemfn"]],["item"]]],[11,"from","","",152,[[["traititemmacro"]],["traititem"]]],[11,"from","","",266,[[["exprpath"]],["expr"]]],[11,"from","","",207,[[["patref"]],["pat"]]],[11,"from","","",188,[[["constparam"]],["genericparam"]]],[11,"from","","",120,[[["typeptr"]],["type"]]],[11,"from","","",266,[[["exprverbatim"]],["expr"]]],[11,"from","","",148,[[["itemtraitalias"]],["item"]]],[11,"from","","",187,[[["useglob"]],["usetree"]]],[11,"from","","",150,[[["fieldsnamed"]],["fields"]]],[11,"from","","",207,[[["patverbatim"]],["pat"]]],[11,"from","","",266,[[["exprlet"]],["expr"]]],[11,"from","","",266,[[["exprassignop"]],["expr"]]],[11,"from","","",266,[[["exprreturn"]],["expr"]]],[11,"from","","",266,[[["exprmacro"]],["expr"]]],[11,"from","","",266,[[["exprcall"]],["expr"]]],[11,"from","","",266,[[["expryield"]],["expr"]]],[11,"from","","",147,[[["usize"]],["index"]]],[11,"from","","",266,[[["exprfield"]],["expr"]]],[11,"from","","",148,[[["deriveinput"]],["item"]]],[11,"from","","",223,[[["implitemmethod"]],["implitem"]]],[11,"from","","",148,[[["itemunion"]],["item"]]],[11,"from","","",238,[[["t"]],["path"]]],[11,"from","","",266,[[["exprif"]],["expr"]]],[11,"from","","",302,[[["litverbatim"]],["lit"]]],[11,"from","","",273,[[["foreignitemfn"]],["foreignitem"]]],[11,"from","","",185,[[["metanamevalue"]],["meta"]]],[11,"from","","",207,[[["patbox"]],["pat"]]],[11,"from","","",266,[[["exprforloop"]],["expr"]]],[11,"from","","",146,[[["argselfref"]],["fnarg"]]],[11,"from","","",136,[[["visrestricted"]],["visibility"]]],[11,"from","","",148,[[["itemuse"]],["item"]]],[11,"from","","",146,[[["pat"]],["fnarg"]]],[11,"from","","",207,[[["pattuple"]],["pat"]]],[11,"from","","",152,[[["traititemverbatim"]],["traititem"]]],[11,"from","","",266,[[["exprbox"]],["expr"]]],[11,"from","","",120,[[["typereference"]],["type"]]],[11,"from","","",302,[[["litchar"]],["lit"]]],[11,"from","","",120,[[["typetraitobject"]],["type"]]],[11,"from","","",273,[[["foreignitemmacro"]],["foreignitem"]]],[11,"from","","",253,[[["dataenum"]],["data"]]],[11,"from","","",207,[[["patmacro"]],["pat"]]],[11,"from","","",266,[[["exprtry"]],["expr"]]],[11,"from","","",266,[[["exprblock"]],["expr"]]],[11,"from","","",207,[[["patwild"]],["pat"]]],[11,"from","","",266,[[["exprloop"]],["expr"]]],[11,"from","","",174,[[["t"]],["pathsegment"]]],[11,"from","","",120,[[["typepath"]],["type"]]],[11,"from","","",146,[[["argcaptured"]],["fnarg"]]],[11,"from","","",266,[[["exprarray"]],["expr"]]],[11,"from","","",148,[[["itemenum"]],["item"]]],[11,"from","","",266,[[["exprunary"]],["expr"]]],[11,"from","","",266,[[["exprbreak"]],["expr"]]],[11,"from","","",152,[[["traititemtype"]],["traititem"]]],[11,"from","","",158,[[["traitbound"]],["typeparambound"]]],[11,"from","","",266,[[["exprinplace"]],["expr"]]],[11,"from","","",266,[[["exprtuple"]],["expr"]]],[11,"from","","",302,[[["litstr"]],["lit"]]],[11,"from","","",266,[[["exprreference"]],["expr"]]],[11,"from","","",146,[[["argself"]],["fnarg"]]],[11,"from","","",262,[[["predicateeq"]],["wherepredicate"]]],[11,"from","","",262,[[["predicatelifetime"]],["wherepredicate"]]],[11,"from","","",266,[[["exprassign"]],["expr"]]],[11,"from","","",187,[[["usegroup"]],["usetree"]]],[11,"from","","",148,[[["itemmacro"]],["item"]]],[11,"from","","",223,[[["implitemconst"]],["implitem"]]],[11,"from","","",187,[[["usepath"]],["usetree"]]],[11,"from","","",148,[[["itemverbatim"]],["item"]]],[11,"from","","",266,[[["exprasync"]],["expr"]]],[11,"from","","",148,[[["itemmacro2"]],["item"]]],[11,"from","","",152,[[["traititemmethod"]],["traititem"]]],[11,"from","","",266,[[["exprunsafe"]],["expr"]]],[11,"from","","",120,[[["typearray"]],["type"]]],[11,"from","","",207,[[["patpath"]],["pat"]]],[11,"from","","",223,[[["implitemexistential"]],["implitem"]]],[11,"from","","",273,[[["foreignitemstatic"]],["foreignitem"]]],[11,"from","","",120,[[["typeslice"]],["type"]]],[11,"from","","",187,[[["userename"]],["usetree"]]],[11,"from","","",303,[[["ident"]],["typeparam"]]],[11,"from","","",207,[[["patstruct"]],["pat"]]],[11,"from","","",148,[[["itemexterncrate"]],["item"]]],[11,"from","","",266,[[["exprrepeat"]],["expr"]]],[11,"from","","",188,[[["lifetimedef"]],["genericparam"]]],[11,"from","","",120,[[["typeverbatim"]],["type"]]],[11,"from","","",207,[[["patident"]],["pat"]]],[11,"from","","",148,[[["itemmod"]],["item"]]],[11,"from","","",148,[[["itemexistential"]],["item"]]],[11,"from","","",302,[[["litfloat"]],["lit"]]],[11,"from","","",120,[[["typegroup"]],["type"]]],[11,"from","","",120,[[["typeinfer"]],["type"]]],[11,"from","","",120,[[["typetuple"]],["type"]]],[11,"from","","",120,[[["typeimpltrait"]],["type"]]],[11,"from","","",266,[[["exprrange"]],["expr"]]],[11,"from","","",136,[[["vispublic"]],["visibility"]]],[11,"from","","",266,[[["exprcontinue"]],["expr"]]],[11,"from","","",120,[[["typebarefn"]],["type"]]],[11,"from","","",266,[[["exprtype"]],["expr"]]],[11,"from","","",262,[[["predicatetype"]],["wherepredicate"]]],[11,"from","","",223,[[["implitemtype"]],["implitem"]]],[11,"from","devise::syn::parse","",331,[[["lexerror"]],["error"]]],[11,"from","devise::syn","",266,[[["exprgroup"]],["expr"]]],[11,"from","","",253,[[["dataunion"]],["data"]]],[11,"parse","","",181,[[["parsebuffer"]],["result",["implitemconst","error"]]]],[11,"parse","devise::syn::token","",85,[[["parsebuffer"]],["result",["eqeq","error"]]]],[11,"parse","","",100,[[["parsebuffer"]],["result",["remeq","error"]]]],[11,"parse","","",94,[[["parsebuffer"]],["result",["oror","error"]]]],[11,"parse","","",80,[[["parsebuffer"]],["result",["dot","error"]]]],[11,"parse","","",49,[[["parsebuffer"]],["result",["selfvalue","error"]]]],[11,"parse","devise::syn","",270,[[["parsebuffer"]],["result",["typegroup","error"]]]],[11,"parse","","",206,[[["parsebuffer"]],["result",["itemstruct","error"]]]],[11,"parse","devise::syn::token","",93,[[["parsebuffer"]],["result",["oreq","error"]]]],[11,"parse","","",66,[[["parsebuffer"]],["result",["addeq","error"]]]],[11,"parse","devise::syn","",155,[[["parsebuffer"]],["result",["typeparen","error"]]]],[11,"parse","","",277,[[["parsebuffer"]],["result",["traititemmethod","error"]]]],[11,"parse","","",245,[[["parsebuffer"]],["result",["typeslice","error"]]]],[11,"parse","devise::syn::token","",21,[[["parsebuffer"]],["result",["continue","error"]]]],[11,"parse","devise::syn","",227,[[["parsebuffer"]],["result",["typereference","error"]]]],[11,"parse","devise::syn::token","",74,[[["parsebuffer"]],["result",["colon","error"]]]],[11,"parse","","",50,[[["parsebuffer"]],["result",["static","error"]]]],[11,"parse","devise::syn","",210,[[["parsebuffer"]],["result",["generics","error"]]]],[11,"parse","","",292,[[["parsebuffer"]],["result",["metanamevalue","error"]]]],[11,"parse","devise::syn::token","",82,[[["parsebuffer"]],["result",["dot3","error"]]]],[11,"parse","devise::syn","",191,[[["parsebuffer"]],["result",["typebarefn","error"]]]],[11,"parse","","",207,[[["parsebuffer"]],["result",["pat","error"]]]],[11,"parse","devise::syn::token","",18,[[["parsebuffer"]],["result",["box","error"]]]],[11,"parse","","",102,[[["parsebuffer"]],["result",["semi","error"]]]],[11,"parse","devise::syn","",312,[[["parsebuffer"]],["result",["itemtraitalias","error"]]]],[11,"parse","","",302,[[["parsebuffer"]],["result",["lit","error"]]]],[11,"parse","","",176,[[["parsebuffer"]],["result",["deriveinput","error"]]]],[11,"parse","","",208,[[["parsebuffer"]],["result",["metalist","error"]]]],[11,"parse","","",240,[[["parsebuffer"]],["result",["itemforeignmod","error"]]]],[11,"parse","devise::syn::token","",98,[[["parsebuffer"]],["result",["larrow","error"]]]],[11,"parse","devise::syn","",298,[[["parsebuffer"]],["result",["block","error"]]]],[11,"parse","","",205,[[["parsebuffer"]],["result",["implitemexistential","error"]]]],[11,"parse","devise::syn::token","",16,[[["parsebuffer"]],["result",["auto","error"]]]],[11,"parse","devise::syn","",215,[[["parsebuffer"]],["result",["binding","error"]]]],[11,"parse","","",234,[[["parsebuffer"]],["result",["constraint","error"]]]],[11,"parse","devise::syn::token","",60,[[["parsebuffer"]],["result",["use","error"]]]],[11,"parse","devise::syn","",124,[[["parsebuffer"]],["result",["typeimpltrait","error"]]]],[11,"parse","devise::syn::token","",23,[[["parsebuffer"]],["result",["default","error"]]]],[11,"parse","devise::syn","",265,[[["parsebuffer"]],["result",["label","error"]]]],[11,"parse","","",221,[[["parsebuffer"]],["result",["traititemconst","error"]]]],[11,"parse","","",209,[[["parsebuffer"]],["result",["itemtype","error"]]]],[11,"parse","devise::syn::token","",28,[[["parsebuffer"]],["result",["existential","error"]]]],[11,"parse","devise::syn","",286,[[["parsebuffer"]],["result",["typetraitobject","error"]]]],[11,"parse","devise::syn::token","",109,[[["parsebuffer"]],["result",["subeq","error"]]]],[11,"parse","devise::syn","",168,[[["parsebuffer"]],["result",["itemconst","error"]]]],[11,"parse","","",238,[[["parsebuffer"]],["result",["path","error"]]]],[11,"parse","","",311,[[["parsebuffer"]],["result",["barefnarg","error"]]]],[11,"parse","","",271,[[["parsebuffer"]],["result",["lifetime","error"]]]],[11,"parse","","",188,[[["parsebuffer"]],["result",["genericparam","error"]]]],[11,"parse","","",156,[[["parsebuffer"]],["result",["itemmacro","error"]]]],[11,"parse","devise::syn::token","",96,[[["parsebuffer"]],["result",["question","error"]]]],[11,"parse","devise::syn","",145,[[["parsebuffer"]],["result",["macro","error"]]]],[11,"parse","devise::syn::token","",20,[[["parsebuffer"]],["result",["const","error"]]]],[11,"parse","devise::syn","",290,[[["parsebuffer"]],["result",["itemtrait","error"]]]],[11,"parse","","",223,[[["parsebuffer"]],["result",["implitem","error"]]]],[11,"parse","","",167,[[["parsebuffer"]],["result",["typearray","error"]]]],[11,"parse","","",299,[[["parsebuffer"]],["result",["itemexistential","error"]]]],[11,"parse","","",294,[[["parsebuffer"]],["result",["lifetimedef","error"]]]],[11,"parse","devise::syn::token","",87,[[["parsebuffer"]],["result",["gt","error"]]]],[11,"parse","","",47,[[["parsebuffer"]],["result",["return","error"]]]],[11,"parse","","",25,[[["parsebuffer"]],["result",["dyn","error"]]]],[11,"parse","","",24,[[["parsebuffer"]],["result",["do","error"]]]],[11,"parse","","",101,[[["parsebuffer"]],["result",["fatarrow","error"]]]],[11,"parse","","",84,[[["parsebuffer"]],["result",["eq","error"]]]],[11,"parse","devise::syn","",126,[[["parsebuffer"]],["result",["arm","error"]]]],[11,"parse","devise::syn::token","",59,[[["parsebuffer"]],["result",["unsized","error"]]]],[11,"parse","devise::syn","",279,[[["parsebuffer"]],["result",["traitboundmodifier","error"]]]],[11,"parse","devise::syn::token","",95,[[["parsebuffer"]],["result",["pound","error"]]]],[11,"parse","devise::syn","",129,[[["parsebuffer"]],["result",["litbool","error"]]]],[11,"parse","","",231,[[["parsebuffer"]],["result",["returntype","error"]]]],[11,"parse","","",137,[[["parsebuffer"]],["result",["typeptr","error"]]]],[11,"parse","devise::syn::token","",46,[[["parsebuffer"]],["result",["ref","error"]]]],[11,"parse","","",22,[[["parsebuffer"]],["result",["crate","error"]]]],[11,"parse","devise::syn","",259,[[["parsebuffer"]],["result",["traititemmacro","error"]]]],[11,"parse","devise::syn::token","",62,[[["parsebuffer"]],["result",["where","error"]]]],[11,"parse","","",86,[[["parsebuffer"]],["result",["ge","error"]]]],[11,"parse","","",42,[[["parsebuffer"]],["result",["mut","error"]]]],[11,"parse","","",41,[[["parsebuffer"]],["result",["move","error"]]]],[11,"parse","devise::syn","",147,[[["parsebuffer"]],["result",["index","error"]]]],[11,"parse","devise::syn::token","",58,[[["parsebuffer"]],["result",["unsafe","error"]]]],[11,"parse","","",36,[[["parsebuffer"]],["result",["let","error"]]]],[11,"parse","","",44,[[["parsebuffer"]],["result",["priv","error"]]]],[11,"parse","devise::syn","",165,[[["parsebuffer"]],["result",["constparam","error"]]]],[11,"parse","","",175,[[["parsebuffer"]],["result",["traititemtype","error"]]]],[11,"parse","devise::syn::token","",35,[[["parsebuffer"]],["result",["in","error"]]]],[11,"parse","","",27,[[["parsebuffer"]],["result",["enum","error"]]]],[11,"parse","devise::syn","",192,[[["parsebuffer"]],["result",["itemenum","error"]]]],[11,"parse","devise::syn::token","",89,[[["parsebuffer"]],["result",["lt","error"]]]],[11,"parse","","",15,[[["parsebuffer"]],["result",["async","error"]]]],[11,"parse","","",48,[[["parsebuffer"]],["result",["selftype","error"]]]],[11,"parse","devise::syn","",144,[[["parsebuffer"]],["result",["file","error"]]]],[11,"parse","","",136,[[["parsebuffer"]],["result",["visibility","error"]]]],[11,"parse","devise::syn::token","",51,[[["parsebuffer"]],["result",["struct","error"]]]],[11,"parse","devise::syn","",282,[[["parsebuffer"]],["result",["binop","error"]]]],[11,"parse","","",125,[[["parsebuffer"]],["result",["itemexterncrate","error"]]]],[11,"parse","","",174,[[["parsebuffer"]],["result",["pathsegment","error"]]]],[11,"parse","devise::syn::token","",12,[[["parsebuffer"]],["result",["underscore","error"]]]],[11,"parse","","",107,[[["parsebuffer"]],["result",["star","error"]]]],[11,"parse","","",92,[[["parsebuffer"]],["result",["or","error"]]]],[11,"parse","devise::syn","",211,[[["parsebuffer"]],["result",["stmt","error"]]]],[11,"parse","devise::syn::token","",52,[[["parsebuffer"]],["result",["super","error"]]]],[11,"parse","devise::syn","",195,[[["parsebuffer"]],["result",["itemuse","error"]]]],[11,"parse","","",273,[[["parsebuffer"]],["result",["foreignitem","error"]]]],[11,"parse","devise::syn::token","",26,[[["parsebuffer"]],["result",["else","error"]]]],[11,"parse","","",70,[[["parsebuffer"]],["result",["at","error"]]]],[11,"parse","devise::syn","",301,[[["parsebuffer"]],["result",["variant","error"]]]],[11,"parse","devise::syn::token","",77,[[["parsebuffer"]],["result",["div","error"]]]],[11,"parse","","",30,[[["parsebuffer"]],["result",["final","error"]]]],[11,"parse","devise::syn","",135,[[["parsebuffer"]],["result",["fieldvalue","error"]]]],[11,"parse","","",293,[[["parsebuffer"]],["result",["itemunion","error"]]]],[11,"parse","devise::syn::token","",75,[[["parsebuffer"]],["result",["colon2","error"]]]],[11,"parse","","",69,[[["parsebuffer"]],["result",["andeq","error"]]]],[11,"parse","","",53,[[["parsebuffer"]],["result",["trait","error"]]]],[11,"parse","","",103,[[["parsebuffer"]],["result",["shl","error"]]]],[11,"parse","devise::syn","",274,[[["parsebuffer"]],["result",["exprpath","error"]]]],[11,"parse","","",288,[[["parsebuffer"]],["result",["abi","error"]]]],[11,"parse","devise::syn::token","",19,[[["parsebuffer"]],["result",["break","error"]]]],[11,"parse","devise::syn","",280,[[["parsebuffer"]],["result",["foreignitemstatic","error"]]]],[11,"parse","","",134,[[["parsebuffer"]],["result",["itemimpl","error"]]]],[11,"parse","","",185,[[["parsebuffer"]],["result",["meta","error"]]]],[11,"parse","","",133,[[["parsebuffer"]],["result",["typenever","error"]]]],[11,"parse","","",194,[[["parsebuffer"]],["result",["anglebracketedgenericarguments","error"]]]],[11,"parse","","",338,[[["parsebuffer"]],["result",["litbytestr","error"]]]],[11,"parse","devise::syn::token","",45,[[["parsebuffer"]],["result",["pub","error"]]]],[11,"parse","devise::syn","",258,[[["parsebuffer"]],["result",["typeinfer","error"]]]],[11,"parse","","",141,[[["parsebuffer"]],["result",["implitemmethod","error"]]]],[11,"parse","","",303,[[["parsebuffer"]],["result",["typeparam","error"]]]],[11,"parse","","",275,[[["parsebuffer"]],["result",["typemacro","error"]]]],[11,"parse","","",151,[[["parsebuffer"]],["result",["genericargument","error"]]]],[11,"parse","devise::syn::token","",79,[[["parsebuffer"]],["result",["dollar","error"]]]],[11,"parse","","",105,[[["parsebuffer"]],["result",["shr","error"]]]],[11,"parse","devise::syn","",247,[[["parsebuffer"]],["result",["boundlifetimes","error"]]]],[11,"parse","devise::syn::token","",29,[[["parsebuffer"]],["result",["extern","error"]]]],[11,"parse","devise::syn","",177,[[["parsebuffer"]],["result",["whereclause","error"]]]],[11,"parse","","",242,[[["parsebuffer"]],["result",["foreignitemmacro","error"]]]],[11,"parse","","",163,[[["parsebuffer"]],["result",["implitemtype","error"]]]],[11,"parse","devise::syn::token","",64,[[["parsebuffer"]],["result",["yield","error"]]]],[11,"parse","devise::syn","",309,[[["parsebuffer"]],["result",["rangelimits","error"]]]],[11,"parse","devise::syn::token","",14,[[["parsebuffer"]],["result",["as","error"]]]],[11,"parse","","",72,[[["parsebuffer"]],["result",["caret","error"]]]],[11,"parse","","",57,[[["parsebuffer"]],["result",["union","error"]]]],[11,"parse","","",83,[[["parsebuffer"]],["result",["dotdoteq","error"]]]],[11,"parse","devise::syn","",304,[[["parsebuffer"]],["result",["foreignitemtype","error"]]]],[11,"parse","","",146,[[["parsebuffer"]],["result",["fnarg","error"]]]],[11,"parse","","",148,[[["parsebuffer"]],["result",["item","error"]]]],[11,"parse","","",256,[[["parsebuffer"]],["result",["fieldsunnamed","error"]]]],[11,"parse","devise::syn::token","",61,[[["parsebuffer"]],["result",["virtual","error"]]]],[11,"parse","","",65,[[["parsebuffer"]],["result",["add","error"]]]],[11,"parse","devise::syn","",153,[[["parsebuffer"]],["result",["traitbound","error"]]]],[11,"parse","devise::syn::token","",31,[[["parsebuffer"]],["result",["fn","error"]]]],[11,"parse","devise::syn","",333,[[["parsebuffer"]],["result",["litchar","error"]]]],[11,"parse","devise::syn::token","",88,[[["parsebuffer"]],["result",["le","error"]]]],[11,"parse","","",55,[[["parsebuffer"]],["result",["type","error"]]]],[11,"parse","devise::syn","",241,[[["parsebuffer"]],["result",["typepath","error"]]]],[11,"parse","","",300,[[["parsebuffer"]],["result",["member","error"]]]],[11,"parse","devise::syn::token","",43,[[["parsebuffer"]],["result",["override","error"]]]],[11,"parse","","",34,[[["parsebuffer"]],["result",["impl","error"]]]],[11,"parse","","",108,[[["parsebuffer"]],["result",["sub","error"]]]],[11,"parse","devise::syn","",171,[[["parsebuffer"]],["result",["fieldsnamed","error"]]]],[11,"parse","devise::syn::token","",38,[[["parsebuffer"]],["result",["macro","error"]]]],[11,"parse","","",33,[[["parsebuffer"]],["result",["if","error"]]]],[11,"parse","","",110,[[["parsebuffer"]],["result",["tilde","error"]]]],[11,"parse","devise::syn","",220,[[["parsebuffer"]],["result",["parenthesizedgenericarguments","error"]]]],[11,"parse","devise::syn::token","",76,[[["parsebuffer"]],["result",["comma","error"]]]],[11,"parse","","",68,[[["parsebuffer"]],["result",["andand","error"]]]],[11,"parse","","",54,[[["parsebuffer"]],["result",["try","error"]]]],[11,"parse","devise::syn","",341,[[["parsebuffer"]],["result",["litstr","error"]]]],[11,"parse","","",160,[[["parsebuffer"]],["result",["unop","error"]]]],[11,"parse","","",201,[[["parsebuffer"]],["result",["itemmacro2","error"]]]],[11,"parse","devise::syn::token","",37,[[["parsebuffer"]],["result",["loop","error"]]]],[11,"parse","","",104,[[["parsebuffer"]],["result",["shleq","error"]]]],[11,"parse","devise::syn","",266,[[["parsebuffer"]],["result",["expr","error"]]]],[11,"parse","","",143,[[["parsebuffer"]],["result",["nestedmeta","error"]]]],[11,"parse","","",120,[[["parsebuffer"]],["result",["type","error"]]]],[11,"parse","","",152,[[["parsebuffer"]],["result",["traititem","error"]]]],[11,"parse","devise::syn::token","",91,[[["parsebuffer"]],["result",["ne","error"]]]],[11,"parse","","",99,[[["parsebuffer"]],["result",["rem","error"]]]],[11,"parse","devise::syn","",262,[[["parsebuffer"]],["result",["wherepredicate","error"]]]],[11,"parse","","",289,[[["parsebuffer"]],["result",["implitemmacro","error"]]]],[11,"parse","","",198,[[["parsebuffer"]],["result",["itemfn","error"]]]],[11,"parse","devise::syn::token","",97,[[["parsebuffer"]],["result",["rarrow","error"]]]],[11,"parse","devise::syn","",283,[[["parsebuffer"]],["result",["itemmod","error"]]]],[11,"parse","","",339,[[["parsebuffer"]],["result",["litint","error"]]]],[11,"parse","devise::syn::token","",73,[[["parsebuffer"]],["result",["careteq","error"]]]],[11,"parse","","",106,[[["parsebuffer"]],["result",["shreq","error"]]]],[11,"parse","","",67,[[["parsebuffer"]],["result",["and","error"]]]],[11,"parse","","",13,[[["parsebuffer"]],["result",["abstract","error"]]]],[11,"parse","","",71,[[["parsebuffer"]],["result",["bang","error"]]]],[11,"parse","","",32,[[["parsebuffer"]],["result",["for","error"]]]],[11,"parse","devise::syn","",336,[[["parsebuffer"]],["result",["litfloat","error"]]]],[11,"parse","devise::syn::token","",56,[[["parsebuffer"]],["result",["typeof","error"]]]],[11,"parse","","",63,[[["parsebuffer"]],["result",["while","error"]]]],[11,"parse","","",40,[[["parsebuffer"]],["result",["mod","error"]]]],[11,"parse","","",90,[[["parsebuffer"]],["result",["muleq","error"]]]],[11,"parse","devise::syn","",296,[[["parsebuffer"]],["result",["foreignitemfn","error"]]]],[11,"parse","devise::syn::token","",17,[[["parsebuffer"]],["result",["become","error"]]]],[11,"parse","devise::syn","",161,[[["parsebuffer"]],["result",["itemstatic","error"]]]],[11,"parse","","",186,[[["parsebuffer"]],["result",["typetuple","error"]]]],[11,"parse","","",162,[[["parsebuffer"]],["result",["barefnargname","error"]]]],[11,"parse","devise::syn::token","",81,[[["parsebuffer"]],["result",["dot2","error"]]]],[11,"parse","devise::syn","",158,[[["parsebuffer"]],["result",["typeparambound","error"]]]],[11,"parse","devise::syn::token","",39,[[["parsebuffer"]],["result",["match","error"]]]],[11,"parse","devise::syn","",335,[[["parsebuffer"]],["result",["litbyte","error"]]]],[11,"parse","devise::syn::token","",78,[[["parsebuffer"]],["result",["diveq","error"]]]],[11,"extend","devise::syn::punctuated","",322,N],[11,"extend","","",322,N],[11,"peek","devise::syn::token","",58,[[["cursor"]],["bool"]]],[11,"display","","",58,[[],["str"]]],[11,"peek","devise::syn","",338,[[["cursor"]],["bool"]]],[11,"display","","",338,[[],["str"]]],[11,"peek","devise::syn::token","",91,[[["cursor"]],["bool"]]],[11,"display","","",91,[[],["str"]]],[11,"peek","","",63,[[["cursor"]],["bool"]]],[11,"display","","",63,[[],["str"]]],[11,"peek","","",92,[[["cursor"]],["bool"]]],[11,"display","","",92,[[],["str"]]],[11,"peek","","",13,[[["cursor"]],["bool"]]],[11,"display","","",13,[[],["str"]]],[11,"peek","","",104,[[["cursor"]],["bool"]]],[11,"display","","",104,[[],["str"]]],[11,"peek","devise::syn","",341,[[["cursor"]],["bool"]]],[11,"display","","",341,[[],["str"]]],[11,"peek","devise::syn::token","",35,[[["cursor"]],["bool"]]],[11,"display","","",35,[[],["str"]]],[11,"peek","","",16,[[["cursor"]],["bool"]]],[11,"display","","",16,[[],["str"]]],[11,"peek","devise::syn","",302,[[["cursor"]],["bool"]]],[11,"display","","",302,[[],["str"]]],[11,"peek","devise::syn::token","",98,[[["cursor"]],["bool"]]],[11,"display","","",98,[[],["str"]]],[11,"peek","","",46,[[["cursor"]],["bool"]]],[11,"display","","",46,[[],["str"]]],[11,"peek","","",90,[[["cursor"]],["bool"]]],[11,"display","","",90,[[],["str"]]],[11,"peek","","",41,[[["cursor"]],["bool"]]],[11,"display","","",41,[[],["str"]]],[11,"peek","","",76,[[["cursor"]],["bool"]]],[11,"display","","",76,[[],["str"]]],[11,"peek","","",45,[[["cursor"]],["bool"]]],[11,"display","","",45,[[],["str"]]],[11,"peek","","",57,[[["cursor"]],["bool"]]],[11,"display","","",57,[[],["str"]]],[11,"peek","devise::syn","",271,[[["cursor"]],["bool"]]],[11,"display","","",271,[[],["str"]]],[11,"peek","devise::syn::token","",68,[[["cursor"]],["bool"]]],[11,"display","","",68,[[],["str"]]],[11,"peek","","",32,[[["cursor"]],["bool"]]],[11,"display","","",32,[[],["str"]]],[11,"peek","","",87,[[["cursor"]],["bool"]]],[11,"display","","",87,[[],["str"]]],[11,"peek","","",84,[[["cursor"]],["bool"]]],[11,"display","","",84,[[],["str"]]],[11,"peek","","",48,[[["cursor"]],["bool"]]],[11,"display","","",48,[[],["str"]]],[11,"peek","devise::syn","",333,[[["cursor"]],["bool"]]],[11,"display","","",333,[[],["str"]]],[11,"peek","devise::syn::token","",96,[[["cursor"]],["bool"]]],[11,"display","","",96,[[],["str"]]],[11,"peek","","",108,[[["cursor"]],["bool"]]],[11,"display","","",108,[[],["str"]]],[11,"peek","devise::syn","",335,[[["cursor"]],["bool"]]],[11,"display","","",335,[[],["str"]]],[11,"peek","devise::syn::token","",64,[[["cursor"]],["bool"]]],[11,"display","","",64,[[],["str"]]],[11,"peek","","",103,[[["cursor"]],["bool"]]],[11,"display","","",103,[[],["str"]]],[11,"peek","","",74,[[["cursor"]],["bool"]]],[11,"display","","",74,[[],["str"]]],[11,"peek","","",49,[[["cursor"]],["bool"]]],[11,"display","","",49,[[],["str"]]],[11,"peek","","",79,[[["cursor"]],["bool"]]],[11,"display","","",79,[[],["str"]]],[11,"peek","","",29,[[["cursor"]],["bool"]]],[11,"display","","",29,[[],["str"]]],[11,"peek","","",72,[[["cursor"]],["bool"]]],[11,"display","","",72,[[],["str"]]],[11,"peek","","",93,[[["cursor"]],["bool"]]],[11,"display","","",93,[[],["str"]]],[11,"peek","devise::syn","",129,[[["cursor"]],["bool"]]],[11,"display","","",129,[[],["str"]]],[11,"peek","devise::syn::token","",23,[[["cursor"]],["bool"]]],[11,"display","","",23,[[],["str"]]],[11,"peek","","",113,[[["cursor"]],["bool"]]],[11,"display","","",113,[[],["str"]]],[11,"peek","","",25,[[["cursor"]],["bool"]]],[11,"display","","",25,[[],["str"]]],[11,"peek","","",30,[[["cursor"]],["bool"]]],[11,"display","","",30,[[],["str"]]],[11,"peek","","",60,[[["cursor"]],["bool"]]],[11,"display","","",60,[[],["str"]]],[11,"peek","","",18,[[["cursor"]],["bool"]]],[11,"display","","",18,[[],["str"]]],[11,"peek","","",54,[[["cursor"]],["bool"]]],[11,"display","","",54,[[],["str"]]],[11,"peek","","",12,[[["cursor"]],["bool"]]],[11,"display","","",12,[[],["str"]]],[11,"peek","","",33,[[["cursor"]],["bool"]]],[11,"display","","",33,[[],["str"]]],[11,"peek","","",59,[[["cursor"]],["bool"]]],[11,"display","","",59,[[],["str"]]],[11,"peek","","",86,[[["cursor"]],["bool"]]],[11,"display","","",86,[[],["str"]]],[11,"peek","","",51,[[["cursor"]],["bool"]]],[11,"display","","",51,[[],["str"]]],[11,"peek","","",26,[[["cursor"]],["bool"]]],[11,"display","","",26,[[],["str"]]],[11,"peek","","",109,[[["cursor"]],["bool"]]],[11,"display","","",109,[[],["str"]]],[11,"peek","","",24,[[["cursor"]],["bool"]]],[11,"display","","",24,[[],["str"]]],[11,"peek","","",70,[[["cursor"]],["bool"]]],[11,"display","","",70,[[],["str"]]],[11,"peek","devise::syn","",339,[[["cursor"]],["bool"]]],[11,"display","","",339,[[],["str"]]],[11,"peek","devise::syn::token","",40,[[["cursor"]],["bool"]]],[11,"display","","",40,[[],["str"]]],[11,"peek","","",101,[[["cursor"]],["bool"]]],[11,"display","","",101,[[],["str"]]],[11,"peek","","",20,[[["cursor"]],["bool"]]],[11,"display","","",20,[[],["str"]]],[11,"peek","","",83,[[["cursor"]],["bool"]]],[11,"display","","",83,[[],["str"]]],[11,"peek","","",50,[[["cursor"]],["bool"]]],[11,"display","","",50,[[],["str"]]],[11,"peek","","",39,[[["cursor"]],["bool"]]],[11,"display","","",39,[[],["str"]]],[11,"peek","","",37,[[["cursor"]],["bool"]]],[11,"display","","",37,[[],["str"]]],[11,"peek","","",42,[[["cursor"]],["bool"]]],[11,"display","","",42,[[],["str"]]],[11,"peek","devise::syn","",336,[[["cursor"]],["bool"]]],[11,"display","","",336,[[],["str"]]],[11,"peek","devise::syn::token","",22,[[["cursor"]],["bool"]]],[11,"display","","",22,[[],["str"]]],[11,"peek","","",38,[[["cursor"]],["bool"]]],[11,"display","","",38,[[],["str"]]],[11,"peek","","",15,[[["cursor"]],["bool"]]],[11,"display","","",15,[[],["str"]]],[11,"peek","","",61,[[["cursor"]],["bool"]]],[11,"display","","",61,[[],["str"]]],[11,"peek","","",82,[[["cursor"]],["bool"]]],[11,"display","","",82,[[],["str"]]],[11,"peek","","",27,[[["cursor"]],["bool"]]],[11,"display","","",27,[[],["str"]]],[11,"peek","","",105,[[["cursor"]],["bool"]]],[11,"display","","",105,[[],["str"]]],[11,"peek","","",102,[[["cursor"]],["bool"]]],[11,"display","","",102,[[],["str"]]],[11,"peek","","",17,[[["cursor"]],["bool"]]],[11,"display","","",17,[[],["str"]]],[11,"peek","","",89,[[["cursor"]],["bool"]]],[11,"display","","",89,[[],["str"]]],[11,"peek","","",53,[[["cursor"]],["bool"]]],[11,"display","","",53,[[],["str"]]],[11,"peek","","",77,[[["cursor"]],["bool"]]],[11,"display","","",77,[[],["str"]]],[11,"peek","","",88,[[["cursor"]],["bool"]]],[11,"display","","",88,[[],["str"]]],[11,"peek","","",80,[[["cursor"]],["bool"]]],[11,"display","","",80,[[],["str"]]],[11,"peek","","",55,[[["cursor"]],["bool"]]],[11,"display","","",55,[[],["str"]]],[11,"peek","","",36,[[["cursor"]],["bool"]]],[11,"display","","",36,[[],["str"]]],[11,"peek","","",28,[[["cursor"]],["bool"]]],[11,"display","","",28,[[],["str"]]],[11,"peek","","",62,[[["cursor"]],["bool"]]],[11,"display","","",62,[[],["str"]]],[11,"peek","","",94,[[["cursor"]],["bool"]]],[11,"display","","",94,[[],["str"]]],[11,"peek","","",95,[[["cursor"]],["bool"]]],[11,"display","","",95,[[],["str"]]],[11,"peek","","",112,[[["cursor"]],["bool"]]],[11,"display","","",112,[[],["str"]]],[11,"peek","","",97,[[["cursor"]],["bool"]]],[11,"display","","",97,[[],["str"]]],[11,"peek","","",47,[[["cursor"]],["bool"]]],[11,"display","","",47,[[],["str"]]],[11,"peek","","",43,[[["cursor"]],["bool"]]],[11,"display","","",43,[[],["str"]]],[11,"peek","","",99,[[["cursor"]],["bool"]]],[11,"display","","",99,[[],["str"]]],[11,"peek","","",73,[[["cursor"]],["bool"]]],[11,"display","","",73,[[],["str"]]],[11,"peek","","",111,[[["cursor"]],["bool"]]],[11,"display","","",111,[[],["str"]]],[11,"peek","","",31,[[["cursor"]],["bool"]]],[11,"display","","",31,[[],["str"]]],[11,"peek","","",67,[[["cursor"]],["bool"]]],[11,"display","","",67,[[],["str"]]],[11,"peek","","",71,[[["cursor"]],["bool"]]],[11,"display","","",71,[[],["str"]]],[11,"peek","","",81,[[["cursor"]],["bool"]]],[11,"display","","",81,[[],["str"]]],[11,"peek","","",66,[[["cursor"]],["bool"]]],[11,"display","","",66,[[],["str"]]],[11,"peek","","",114,[[["cursor"]],["bool"]]],[11,"display","","",114,[[],["str"]]],[11,"peek","","",110,[[["cursor"]],["bool"]]],[11,"display","","",110,[[],["str"]]],[11,"peek","","",100,[[["cursor"]],["bool"]]],[11,"display","","",100,[[],["str"]]],[11,"peek","","",52,[[["cursor"]],["bool"]]],[11,"display","","",52,[[],["str"]]],[11,"peek","","",75,[[["cursor"]],["bool"]]],[11,"display","","",75,[[],["str"]]],[11,"peek","","",34,[[["cursor"]],["bool"]]],[11,"display","","",34,[[],["str"]]],[11,"peek","","",107,[[["cursor"]],["bool"]]],[11,"display","","",107,[[],["str"]]],[11,"peek","","",14,[[["cursor"]],["bool"]]],[11,"display","","",14,[[],["str"]]],[11,"peek","","",65,[[["cursor"]],["bool"]]],[11,"display","","",65,[[],["str"]]],[11,"peek","","",19,[[["cursor"]],["bool"]]],[11,"display","","",19,[[],["str"]]],[11,"peek","","",78,[[["cursor"]],["bool"]]],[11,"display","","",78,[[],["str"]]],[11,"peek","","",44,[[["cursor"]],["bool"]]],[11,"display","","",44,[[],["str"]]],[11,"peek","","",21,[[["cursor"]],["bool"]]],[11,"display","","",21,[[],["str"]]],[11,"peek","","",106,[[["cursor"]],["bool"]]],[11,"display","","",106,[[],["str"]]],[11,"peek","","",69,[[["cursor"]],["bool"]]],[11,"display","","",69,[[],["str"]]],[11,"peek","","",56,[[["cursor"]],["bool"]]],[11,"display","","",56,[[],["str"]]],[11,"peek","","",85,[[["cursor"]],["bool"]]],[11,"display","","",85,[[],["str"]]],[11,"hash","devise::syn","",246,N],[11,"hash","","",160,N],[11,"hash","","",210,N],[11,"hash","","",302,N],[11,"hash","devise::syn::token","",34,N],[11,"hash","","",13,N],[11,"hash","devise::syn","",161,N],[11,"hash","","",198,N],[11,"hash","devise::syn::token","",95,N],[11,"hash","","",111,N],[11,"hash","","",99,N],[11,"hash","devise::syn","",159,N],[11,"hash","","",136,N],[11,"hash","","",186,N],[11,"hash","","",294,N],[11,"hash","","",164,N],[11,"hash","","",230,N],[11,"hash","","",124,N],[11,"hash","","",231,N],[11,"hash","devise::syn::token","",94,N],[11,"hash","devise::syn","",272,N],[11,"hash","","",285,N],[11,"hash","devise::syn::token","",103,N],[11,"hash","devise::syn","",275,N],[11,"hash","","",339,N],[11,"hash","devise::syn::token","",101,N],[11,"hash","","",53,N],[11,"hash","","",62,N],[11,"hash","devise::syn","",288,N],[11,"hash","","",301,N],[11,"hash","","",181,N],[11,"hash","devise::syn::token","",108,N],[11,"hash","devise::syn","",125,N],[11,"hash","","",341,N],[11,"hash","devise::syn::token","",113,N],[11,"hash","","",72,N],[11,"hash","devise::syn","",313,N],[11,"hash","","",167,N],[11,"hash","devise::syn::token","",97,N],[11,"hash","devise::syn","",241,N],[11,"hash","","",187,N],[11,"hash","devise::syn::token","",47,N],[11,"hash","","",29,N],[11,"hash","devise::syn","",205,N],[11,"hash","","",129,N],[11,"hash","devise::syn::token","",89,N],[11,"hash","devise::syn","",287,N],[11,"hash","","",309,N],[11,"hash","","",218,N],[11,"hash","","",162,N],[11,"hash","","",266,N],[11,"hash","","",182,N],[11,"hash","devise::syn::token","",90,N],[11,"hash","devise::syn","",228,N],[11,"hash","devise::syn::token","",87,N],[11,"hash","","",17,N],[11,"hash","devise::syn","",258,N],[11,"hash","","",289,N],[11,"hash","","",308,N],[11,"hash","devise::syn::token","",23,N],[11,"hash","devise::syn","",203,N],[11,"hash","","",295,N],[11,"hash","","",307,N],[11,"hash","devise::syn::token","",66,N],[11,"hash","","",37,N],[11,"hash","devise::syn","",201,N],[11,"hash","devise::syn::token","",50,N],[11,"hash","devise::syn","",155,N],[11,"hash","","",170,N],[11,"hash","devise::syn::token","",105,N],[11,"hash","","",30,N],[11,"hash","devise::syn","",337,N],[11,"hash","","",138,N],[11,"hash","devise::syn::token","",57,N],[11,"hash","","",45,N],[11,"hash","devise::syn","",248,N],[11,"hash","","",141,N],[11,"hash","devise::syn::token","",12,N],[11,"hash","devise::syn","",277,N],[11,"hash","","",247,N],[11,"hash","devise::syn::token","",35,N],[11,"hash","","",84,N],[11,"hash","devise::syn","",199,N],[11,"hash","devise::syn::token","",38,N],[11,"hash","","",19,N],[11,"hash","devise::syn","",340,N],[11,"hash","","",149,N],[11,"hash","devise::syn::token","",71,N],[11,"hash","devise::syn","",220,N],[11,"hash","","",134,N],[11,"hash","","",172,N],[11,"hash","","",120,N],[11,"hash","","",148,N],[11,"hash","","",188,N],[11,"hash","devise::syn::token","",49,N],[11,"hash","devise::syn","",190,N],[11,"hash","","",176,N],[11,"hash","","",336,N],[11,"hash","","",338,N],[11,"hash","","",127,N],[11,"hash","","",156,N],[11,"hash","devise::syn::token","",26,N],[11,"hash","devise::syn","",262,N],[11,"hash","","",169,N],[11,"hash","","",263,N],[11,"hash","","",269,N],[11,"hash","","",208,N],[11,"hash","","",173,N],[11,"hash","","",278,N],[11,"hash","","",179,N],[11,"hash","devise::syn::token","",60,N],[11,"hash","devise::syn","",260,N],[11,"hash","","",253,N],[11,"hash","","",252,N],[11,"hash","","",165,N],[11,"hash","","",292,N],[11,"hash","devise::syn::token","",73,N],[11,"hash","","",22,N],[11,"hash","","",18,N],[11,"hash","","",74,N],[11,"hash","devise::syn","",245,N],[11,"hash","","",163,N],[11,"hash","","",264,N],[11,"hash","devise::syn::token","",55,N],[11,"hash","devise::syn","",157,N],[11,"hash","","",235,N],[11,"hash","","",281,N],[11,"hash","","",130,N],[11,"hash","devise::syn::token","",75,N],[11,"hash","devise::syn","",211,N],[11,"hash","devise::syn::token","",80,N],[11,"hash","devise::syn","",232,N],[11,"hash","","",271,N],[11,"hash","","",185,N],[11,"hash","","",224,N],[11,"hash","","",221,N],[11,"hash","","",284,N],[11,"hash","","",180,N],[11,"hash","","",305,N],[11,"hash","","",133,N],[11,"hash","devise::syn::token","",102,N],[11,"hash","devise::syn","",298,N],[11,"hash","devise::syn::token","",69,N],[11,"hash","devise::syn","",267,N],[11,"hash","","",300,N],[11,"hash","devise::syn::token","",36,N],[11,"hash","devise::syn","",334,N],[11,"hash","","",234,N],[11,"hash","","",229,N],[11,"hash","","",132,N],[11,"hash","devise::syn::token","",51,N],[11,"hash","devise::syn","",237,N],[11,"hash","","",296,N],[11,"hash","","",145,N],[11,"hash","","",174,N],[11,"hash","devise::syn::token","",78,N],[11,"hash","devise::syn","",214,N],[11,"hash","","",146,N],[11,"hash","devise::syn::token","",63,N],[11,"hash","devise::syn","",265,N],[11,"hash","devise::syn::token","",56,N],[11,"hash","devise::syn","",333,N],[11,"hash","","",168,N],[11,"hash","","",171,N],[11,"hash","","",192,N],[11,"hash","devise::syn::token","",61,N],[11,"hash","","",106,N],[11,"hash","","",27,N],[11,"hash","devise::syn","",293,N],[11,"hash","devise::syn::token","",15,N],[11,"hash","devise::syn","",222,N],[11,"hash","","",131,N],[11,"hash","devise::syn::punctuated","",322,N],[11,"hash","devise::syn","",240,N],[11,"hash","","",304,N],[11,"hash","devise::syn::token","",52,N],[11,"hash","","",64,N],[11,"hash","devise::syn","",250,N],[11,"hash","","",175,N],[11,"hash","","",153,N],[11,"hash","devise::syn::token","",70,N],[11,"hash","devise::syn","",256,N],[11,"hash","","",128,N],[11,"hash","devise::syn::token","",86,N],[11,"hash","devise::syn","",154,N],[11,"hash","devise::syn::token","",33,N],[11,"hash","","",41,N],[11,"hash","devise::syn","",207,N],[11,"hash","","",312,N],[11,"hash","","",121,N],[11,"hash","devise::syn::token","",42,N],[11,"hash","devise::syn","",202,N],[11,"hash","devise::syn::token","",88,N],[11,"hash","devise::syn","",335,N],[11,"hash","","",151,N],[11,"hash","","",280,N],[11,"hash","","",268,N],[11,"hash","devise::syn::token","",68,N],[11,"hash","devise::syn","",147,N],[11,"hash","","",209,N],[11,"hash","devise::syn::token","",81,N],[11,"hash","devise::syn","",279,N],[11,"hash","","",274,N],[11,"hash","","",238,N],[11,"hash","","",126,N],[11,"hash","devise::syn::token","",65,N],[11,"hash","","",21,N],[11,"hash","","",46,N],[11,"hash","devise::syn","",191,N],[11,"hash","","",135,N],[11,"hash","","",233,N],[11,"hash","","",311,N],[11,"hash","","",137,N],[11,"hash","","",286,N],[11,"hash","devise::syn::token","",25,N],[11,"hash","devise::syn","",236,N],[11,"hash","","",261,N],[11,"hash","","",244,N],[11,"hash","devise::syn::token","",67,N],[11,"hash","devise::syn","",144,N],[11,"hash","devise::syn::token","",43,N],[11,"hash","devise::syn","",200,N],[11,"hash","","",166,N],[11,"hash","devise::syn::token","",31,N],[11,"hash","devise::syn","",189,N],[11,"hash","","",139,N],[11,"hash","","",303,N],[11,"hash","","",204,N],[11,"hash","","",183,N],[11,"hash","devise::syn::token","",44,N],[11,"hash","devise::syn","",193,N],[11,"hash","devise::syn::token","",109,N],[11,"hash","devise::syn","",306,N],[11,"hash","devise::syn::token","",14,N],[11,"hash","devise::syn","",242,N],[11,"hash","","",226,N],[11,"hash","devise::syn::token","",114,N],[11,"hash","","",96,N],[11,"hash","devise::syn","",206,N],[11,"hash","devise::syn::token","",40,N],[11,"hash","","",58,N],[11,"hash","devise::syn","",243,N],[11,"hash","","",142,N],[11,"hash","devise::syn::token","",85,N],[11,"hash","","",79,N],[11,"hash","devise::syn","",282,N],[11,"hash","devise::syn::token","",54,N],[11,"hash","","",48,N],[11,"hash","","",77,N],[11,"hash","devise::syn","",259,N],[11,"hash","","",152,N],[11,"hash","","",123,N],[11,"hash","","",290,N],[11,"hash","","",219,N],[11,"hash","","",217,N],[11,"hash","devise::syn::token","",82,N],[11,"hash","","",16,N],[11,"hash","devise::syn","",251,N],[11,"hash","","",215,N],[11,"hash","","",178,N],[11,"hash","","",225,N],[11,"hash","","",177,N],[11,"hash","","",223,N],[11,"hash","","",239,N],[11,"hash","","",195,N],[11,"hash","","",158,N],[11,"hash","","",270,N],[11,"hash","","",291,N],[11,"hash","","",197,N],[11,"hash","devise::syn::token","",32,N],[11,"hash","devise::syn","",213,N],[11,"hash","","",255,N],[11,"hash","devise::syn::token","",24,N],[11,"hash","","",39,N],[11,"hash","","",93,N],[11,"hash","","",91,N],[11,"hash","","",92,N],[11,"hash","","",28,N],[11,"hash","","",100,N],[11,"hash","devise::syn","",310,N],[11,"hash","","",196,N],[11,"hash","","",257,N],[11,"hash","","",297,N],[11,"hash","devise::syn::token","",59,N],[11,"hash","devise::syn","",140,N],[11,"hash","","",143,N],[11,"hash","devise::syn::token","",112,N],[11,"hash","devise::syn","",299,N],[11,"hash","","",273,N],[11,"hash","devise::syn::token","",107,N],[11,"hash","","",83,N],[11,"hash","devise::syn","",194,N],[11,"hash","","",212,N],[11,"hash","","",150,N],[11,"hash","devise::syn::token","",20,N],[11,"hash","devise::syn","",283,N],[11,"hash","devise::syn::token","",98,N],[11,"hash","","",76,N],[11,"hash","devise::syn","",227,N],[11,"hash","","",122,N],[11,"hash","devise::syn::token","",110,N],[11,"hash","","",104,N],[11,"hash","devise::syn","",276,N],[11,"hash","","",249,N],[11,"hash","","",216,N],[11,"name","devise","",6,[[["self"]],["option",["ident"]]]],[11,"description","","",6,[[["self"]],["str"]]],[11,"is_bare","","",6,[[["self"]],["bool"]]],[11,"lit","","",6,[[["self"]],["result",["lit","diagnostic"]]]],[11,"value_span","","",6,[[["self"]],["span"]]],[11,"match_ident","","",7,[[["self"]],["ident"]]],[11,"accessor","","",7,[[["self"]],["tokenstream"]]],[18,"None","","",319,N],[18,"TupleStruct","","",319,N],[18,"NamedStruct","","",319,N],[18,"Struct","","",319,N],[18,"Enum","","",319,N],[18,"Union","","",319,N],[18,"All","","",319,N],[11,"empty","","Returns an empty set of flags.",319,[[],["datasupport"]]],[11,"all","","Returns the set containing all flags.",319,[[],["datasupport"]]],[11,"bits","","Returns the raw value of the flags currently stored.",319,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",319,[[["u32"]],["option",["datasupport"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",319,[[["u32"]],["datasupport"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",319,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",319,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",319,[[["self"],["datasupport"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",319,[[["self"],["datasupport"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",319,N],[11,"remove","","Removes the specified flags in-place.",319,N],[11,"toggle","","Toggles the specified flags in-place.",319,N],[11,"set","","Inserts or removes the specified flags depending on the…",319,N],[11,"iter","","",9,N],[11,"surround","devise::syn::token","",111,N],[11,"surround","","",112,N],[11,"surround","","",113,N],[11,"surround","","",114,N],[11,"new","devise::syn::buffer","Creates a `TokenBuffer` containing all the tokens from the…",320,[[["tokenstream"]],["tokenbuffer"]]],[11,"new2","","Creates a `TokenBuffer` containing all the tokens from the…",320,[[["tokenstream"]],["tokenbuffer"]]],[11,"begin","","Creates a cursor referencing the first token in the buffer…",320,[[["self"]],["cursor"]]],[11,"empty","","Creates a cursor referencing a static empty TokenStream.",321,[[],["cursor"]]],[11,"eof","","Checks whether the cursor is currently pointing at the end…",321,[[["self"]],["bool"]]],[11,"group","","If the cursor is pointing at a `Group` with the given…",321,[[["self"],["delimiter"]],["option"]]],[11,"ident","","If the cursor is pointing at a `Ident`, returns it along…",321,[[["self"]],["option"]]],[11,"punct","","If the cursor is pointing at an `Punct`, returns it along…",321,[[["self"]],["option"]]],[11,"literal","","If the cursor is pointing at a `Literal`, return it along…",321,[[["self"]],["option"]]],[11,"lifetime","","If the cursor is pointing at a `Lifetime`, returns it…",321,[[["self"]],["option"]]],[11,"token_stream","","Copies all remaining tokens visible from this cursor into…",321,[[["self"]],["tokenstream"]]],[11,"token_tree","","If the cursor is pointing at a `TokenTree`, returns it…",321,[[["self"]],["option"]]],[11,"span","","Returns the `Span` of the current token, or…",321,[[["self"]],["span"]]],[11,"new","devise::syn::punctuated","Creates an empty punctuated sequence.",322,[[],["punctuated"]]],[11,"is_empty","","Determines whether this punctuated sequence is empty,…",322,[[["self"]],["bool"]]],[11,"len","","Returns the number of syntax tree nodes in this punctuated…",322,[[["self"]],["usize"]]],[11,"first","","Borrows the first punctuated pair in this sequence.",322,[[["self"]],["option",["pair"]]]],[11,"last","","Borrows the last punctuated pair in this sequence.",322,[[["self"]],["option",["pair"]]]],[11,"last_mut","","Mutably borrows the last punctuated pair in this sequence.",322,[[["self"]],["option",["pair"]]]],[11,"iter","","Returns an iterator over borrowed syntax tree nodes of…",322,[[["self"]],["iter"]]],[11,"iter_mut","","Returns an iterator over mutably borrowed syntax tree…",322,[[["self"]],["itermut"]]],[11,"pairs","","Returns an iterator over the contents of this sequence as…",322,[[["self"]],["pairs"]]],[11,"pairs_mut","","Returns an iterator over the contents of this sequence as…",322,[[["self"]],["pairsmut"]]],[11,"into_pairs","","Returns an iterator over the contents of this sequence as…",322,[[["self"]],["intopairs"]]],[11,"push_value","","Appends a syntax tree node onto the end of this punctuated…",322,N],[11,"push_punct","","Appends a trailing punctuation onto the end of this…",322,N],[11,"pop","","Removes the last punctuated pair from this sequence, or…",322,[[["self"]],["option",["pair"]]]],[11,"trailing_punct","","Determines whether this punctuated sequence ends with a…",322,[[["self"]],["bool"]]],[11,"empty_or_trailing","","Returns true if either this `Punctuated` is empty, or it…",322,[[["self"]],["bool"]]],[11,"push","","Appends a syntax tree node onto the end of this punctuated…",322,N],[11,"insert","","Inserts an element at position `index`.",322,N],[11,"parse_terminated","","Parses zero or more occurrences of `T` separated by…",322,[[["parsebuffer"]],["result",["punctuated","error"]]]],[11,"parse_terminated_with","","Parses zero or more occurrences of `T` using the given…",322,N],[11,"parse_separated_nonempty","","Parses one or more occurrences of `T` separated by…",322,[[["parsebuffer"]],["result",["punctuated","error"]]]],[11,"parse_separated_nonempty_with","","Parses one or more occurrences of `T` using the given…",322,N],[11,"into_value","","Extracts the syntax tree node from this punctuated pair,…",116,[[["self"]],["t"]]],[11,"value","","Borrows the syntax tree node from this punctuated pair.",116,[[["self"]],["t"]]],[11,"value_mut","","Mutably borrows the syntax tree node from this punctuated…",116,[[["self"]],["t"]]],[11,"punct","","Borrows the punctuation from this punctuated pair, unless…",116,[[["self"]],["option"]]],[11,"new","","Creates a punctuated pair out of a syntax tree node and an…",116,[[["t"],["option"]],["pair"]]],[11,"into_tuple","","Produces this punctuated pair as a tuple of syntax tree…",116,N],[11,"parse","devise::syn::parse","Parses a syntax tree node of type `T`, advancing the…",329,[[["self"]],["result",["error"]]]],[11,"call","","Calls the given parser function to parse a syntax tree…",329,N],[11,"peek","","Looks at the next token in the parse stream to determine…",329,[[["self"],["t"]],["bool"]]],[11,"peek2","","Looks at the second-next token in the parse stream.",329,[[["self"],["t"]],["bool"]]],[11,"peek3","","Looks at the third-next token in the parse stream.",329,[[["self"],["t"]],["bool"]]],[11,"parse_terminated","","Parses zero or more occurrences of `T` separated by…",329,N],[11,"is_empty","","Returns whether there are tokens remaining in this stream.",329,[[["self"]],["bool"]]],[11,"lookahead1","","Constructs a helper for peeking at the next token in this…",329,[[["self"]],["lookahead1"]]],[11,"fork","","Forks a parse stream so that parsing tokens out of either…",329,[[["self"]],["parsebuffer"]]],[11,"error","","Triggers an error at the current position of the parse…",329,[[["self"],["t"]],["error"]]],[11,"step","","Speculatively parses tokens from this parse stream,…",329,[[["self"],["f"]],["result",["error"]]]],[11,"cursor","","Provides low-level access to the token representation…",329,[[["self"]],["cursor"]]],[11,"error","","Triggers an error at the current position of the parse…",330,[[["self"],["t"]],["error"]]],[11,"new","","Usually the [`ParseStream::error`] method will be used…",331,[[["span"],["t"]],["error"]]],[11,"new_spanned","","Creates an error with the specified message spanning the…",331,[[["t"],["u"]],["error"]]],[11,"span","","The source location of the error.",331,[[["self"]],["span"]]],[11,"to_compile_error","","Render the error as an invocation of [`compile_error!`].",331,[[["self"]],["tokenstream"]]],[11,"peek","","Looks at the next token in the parse stream to determine…",332,[[["self"],["t"]],["bool"]]],[11,"error","","Triggers an error at the current position of the parse…",332,[[["self"]],["error"]]],[11,"without_plus","devise::syn","In some positions, types may not contain the `+`…",120,[[["parsebuffer"]],["result",["type","error"]]]],[11,"new","","",333,[[["char"],["span"]],["litchar"]]],[11,"value","","",333,[[["self"]],["char"]]],[11,"span","","",333,[[["self"]],["span"]]],[11,"set_span","","",333,N],[11,"span","","",139,[[["self"]],["span"]]],[11,"set_span","","",139,N],[11,"iter","","Get an iterator over the borrowed [`Field`] items in this…",150,[[["self"]],["iter",["field"]]]],[11,"iter_mut","","Get an iterator over the mutably borrowed [`Field`] items…",150,[[["self"]],["itermut",["field"]]]],[11,"name","","Returns the identifier that begins this structured meta…",185,[[["self"]],["ident"]]],[11,"parse_meta","","Parses the tokens after the path as a `Meta` if possible.",204,[[["self"]],["result",["meta","error"]]]],[11,"parse_outer","","Parses zero or more outer attributes from the stream.",204,[[["parsebuffer"]],["result",["vec","error"]]]],[11,"parse_inner","","Parses zero or more inner attributes from the stream.",204,[[["parsebuffer"]],["result",["vec","error"]]]],[11,"type_params","","Returns an Iterator<Item = &TypeParam> over the type…",210,[[["self"]],["typeparams"]]],[11,"type_params_mut","","Returns an Iterator<Item = &mut TypeParam> over the type…",210,[[["self"]],["typeparamsmut"]]],[11,"lifetimes","","Returns an Iterator<Item = &LifetimeDef> over the lifetime…",210,[[["self"]],["lifetimes"]]],[11,"lifetimes_mut","","Returns an Iterator<Item = &mut LifetimeDef> over the…",210,[[["self"]],["lifetimesmut"]]],[11,"const_params","","Returns an Iterator<Item = &ConstParam> over the constant…",210,[[["self"]],["constparams"]]],[11,"const_params_mut","","Returns an Iterator<Item = &mut ConstParam> over the…",210,[[["self"]],["constparamsmut"]]],[11,"make_where_clause","","Initializes an empty `where`-clause if there is not one…",210,[[["self"]],["whereclause"]]],[11,"split_for_impl","","Split a type's generics into the pieces required for…",210,N],[11,"without_plus","","",231,[[["parsebuffer"]],["result",["returntype","error"]]]],[11,"parse","","",231,[[["parsebuffer"],["bool"]],["result",["returntype","error"]]]],[11,"parse_mod_style","","Parse a `Path` containing no path arguments on any of its…",238,[[["parsebuffer"]],["result",["path","error"]]]],[11,"is_ident","","Determines whether this is a path of length 1 equal to the…",238,[[["self"],["i"]],["bool"]]],[11,"new","","",335,[[["u8"],["span"]],["litbyte"]]],[11,"value","","",335,[[["self"]],["u8"]]],[11,"span","","",335,[[["self"]],["span"]]],[11,"set_span","","",335,N],[11,"new","","",336,[[["f64"],["floatsuffix"],["span"]],["litfloat"]]],[11,"value","","",336,[[["self"]],["f64"]]],[11,"suffix","","",336,[[["self"]],["floatsuffix"]]],[11,"span","","",336,[[["self"]],["span"]]],[11,"set_span","","",336,N],[11,"parse_named","","Parses a named (braced struct) field.",252,[[["parsebuffer"]],["result",["field","error"]]]],[11,"parse_unnamed","","Parses an unnamed (tuple struct) field.",252,[[["parsebuffer"]],["result",["field","error"]]]],[11,"new","","",338,N],[11,"value","","",338,[[["self"]],["vec",["u8"]]]],[11,"span","","",338,[[["self"]],["span"]]],[11,"set_span","","",338,N],[11,"new","","",339,[[["u64"],["intsuffix"],["span"]],["litint"]]],[11,"value","","",339,[[["self"]],["u64"]]],[11,"suffix","","",339,[[["self"]],["intsuffix"]]],[11,"span","","",339,[[["self"]],["span"]]],[11,"set_span","","",339,N],[11,"as_turbofish","","Turn a type's generics like `<X, Y>` into a turbofish like…",340,[[["self"]],["turbofish"]]],[11,"new","","Panics",271,[[["str"],["span"]],["lifetime"]]],[11,"is_empty","","",276,[[["self"]],["bool"]]],[11,"new","","",341,[[["str"],["span"]],["litstr"]]],[11,"value","","",341,[[["self"]],["string"]]],[11,"parse","","Parse a syntax tree node from the content of this string…",341,[[["self"]],["result",["error"]]]],[11,"span","","",341,[[["self"]],["span"]]],[11,"set_span","","",341,N],[11,"without_plus","","",286,[[["parsebuffer"]],["result",["typetraitobject","error"]]]],[11,"parse","","",286,[[["parsebuffer"],["bool"]],["result",["typetraitobject","error"]]]],[11,"new","","",294,[[["lifetime"]],["lifetimedef"]]],[11,"parse_within","","Parse the body of a block as zero or more statements,…",298,[[["parsebuffer"]],["result",["vec","error"]]]],[11,"new","","Interpret a Syn literal from a proc-macro2 literal.",302,[[["literal"]],["lit"]]],[11,"from","devise","",314,[[["deriveinput"],["t"]],["derived"]]],[11,"builder","","",314,[[["self"],["f"]],["tokenstream"]]],[11,"fields","","",314,[[["self"]],["fields"]]],[11,"variants","","",314,N],[11,"fields","","",314,[[["self"]],["fields"]]],[11,"iter","","",342,N],[11,"is_empty","","",342,[[["self"]],["bool"]]],[11,"count","","",342,[[["self"]],["usize"]]],[11,"parent_attrs","","",342,N],[11,"are_named","","",342,[[["self"]],["bool"]]],[11,"are_unnamed","","",342,[[["self"]],["bool"]]],[11,"are_unit","","",342,[[["self"]],["bool"]]],[11,"match_tokens","","",342,[[["self"]],["tokenstream"]]],[11,"build_for","","",315,[[["tokenstream"],["tokenstream"]],["derivegenerator"]]],[11,"generic_support","","",315,[[["self"],["genericsupport"]],["derivegenerator"]]],[11,"data_support","","",315,[[["self"],["datasupport"]],["derivegenerator"]]],[11,"map_type_generic","","",315,[[["self"],["f"]],["derivegenerator"]]],[11,"replace_generic","","",315,[[["self"],["usize"],["usize"]],["derivegenerator"]]],[11,"validate_enum","","",315,[[["self"],["f"]],["derivegenerator"]]],[11,"validate_struct","","",315,[[["self"],["f"]],["derivegenerator"]]],[11,"validate_generics","","",315,[[["self"],["f"]],["derivegenerator"]]],[11,"validate_fields","","",315,[[["self"],["f"]],["derivegenerator"]]],[11,"function","","",315,[[["self"],["f"]],["derivegenerator"]]],[11,"map_struct","","",315,[[["self"],["f"]],["derivegenerator"]]],[11,"try_map_struct","","",315,[[["self"],["f"]],["derivegenerator"]]],[11,"struct_mapper","","",315,[[["self"]],["box"]]],[11,"map_enum","","",315,[[["self"],["f"]],["derivegenerator"]]],[11,"try_map_enum","","",315,[[["self"],["f"]],["derivegenerator"]]],[11,"enum_mapper","","",315,[[["self"]],["box"]]],[11,"map_variant","","",315,[[["self"],["f"]],["derivegenerator"]]],[11,"try_map_variant","","",315,[[["self"],["f"]],["derivegenerator"]]],[11,"variant_mapper","","",315,[[["self"]],["box"]]],[11,"map_fields","","",315,[[["self"],["f"]],["derivegenerator"]]],[11,"try_map_fields","","",315,[[["self"],["f"]],["derivegenerator"]]],[11,"fields_mapper","","",315,[[["self"]],["box"]]],[11,"map_field","","",315,[[["self"],["f"]],["derivegenerator"]]],[11,"try_map_field","","",315,[[["self"],["f"]],["derivegenerator"]]],[11,"field_mapper","","",315,[[["self"]],["box"]]],[11,"debug","","",315,[[["self"]],["derivegenerator"]]],[11,"to_tokens","","",315,[[["self"]],["tokenstream"]]],[18,"None","","",343,N],[18,"Type","","",343,N],[18,"Lifetime","","",343,N],[18,"Const","","",343,N],[18,"All","","",343,N],[11,"empty","","Returns an empty set of flags.",343,[[],["genericsupport"]]],[11,"all","","Returns the set containing all flags.",343,[[],["genericsupport"]]],[11,"bits","","Returns the raw value of the flags currently stored.",343,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",343,[[["u32"]],["option",["genericsupport"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",343,[[["u32"]],["genericsupport"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",343,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",343,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",343,[[["self"],["genericsupport"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",343,[[["self"],["genericsupport"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",343,N],[11,"remove","","Removes the specified flags in-place.",343,N],[11,"toggle","","Toggles the specified flags in-place.",343,N],[11,"set","","Inserts or removes the specified flags depending on the…",343,N],[11,"input","","",317,[[["self"]],["deriveinput"]]],[11,"fields","","",317,[[["self"]],["fields"]]],[11,"attrs","","",317,N]],"paths":[[8,"PathExt"],[8,"TypeExt"],[4,"GenericKind"],[8,"GenericExt"],[8,"Split2"],[8,"Split3"],[4,"MetaItem"],[3,"Field"],[8,"FromMeta"],[3,"MetaItemList"],[8,"ToTokens"],[8,"TokenStreamExt"],[3,"Underscore"],[3,"Abstract"],[3,"As"],[3,"Async"],[3,"Auto"],[3,"Become"],[3,"Box"],[3,"Break"],[3,"Const"],[3,"Continue"],[3,"Crate"],[3,"Default"],[3,"Do"],[3,"Dyn"],[3,"Else"],[3,"Enum"],[3,"Existential"],[3,"Extern"],[3,"Final"],[3,"Fn"],[3,"For"],[3,"If"],[3,"Impl"],[3,"In"],[3,"Let"],[3,"Loop"],[3,"Macro"],[3,"Match"],[3,"Mod"],[3,"Move"],[3,"Mut"],[3,"Override"],[3,"Priv"],[3,"Pub"],[3,"Ref"],[3,"Return"],[3,"SelfType"],[3,"SelfValue"],[3,"Static"],[3,"Struct"],[3,"Super"],[3,"Trait"],[3,"Try"],[3,"Type"],[3,"Typeof"],[3,"Union"],[3,"Unsafe"],[3,"Unsized"],[3,"Use"],[3,"Virtual"],[3,"Where"],[3,"While"],[3,"Yield"],[3,"Add"],[3,"AddEq"],[3,"And"],[3,"AndAnd"],[3,"AndEq"],[3,"At"],[3,"Bang"],[3,"Caret"],[3,"CaretEq"],[3,"Colon"],[3,"Colon2"],[3,"Comma"],[3,"Div"],[3,"DivEq"],[3,"Dollar"],[3,"Dot"],[3,"Dot2"],[3,"Dot3"],[3,"DotDotEq"],[3,"Eq"],[3,"EqEq"],[3,"Ge"],[3,"Gt"],[3,"Le"],[3,"Lt"],[3,"MulEq"],[3,"Ne"],[3,"Or"],[3,"OrEq"],[3,"OrOr"],[3,"Pound"],[3,"Question"],[3,"RArrow"],[3,"LArrow"],[3,"Rem"],[3,"RemEq"],[3,"FatArrow"],[3,"Semi"],[3,"Shl"],[3,"ShlEq"],[3,"Shr"],[3,"ShrEq"],[3,"Star"],[3,"Sub"],[3,"SubEq"],[3,"Tilde"],[3,"Brace"],[3,"Bracket"],[3,"Paren"],[3,"Group"],[8,"IdentExt"],[4,"Pair"],[8,"Spanned"],[8,"Parse"],[8,"Parser"],[4,"Type"],[3,"PatPath"],[3,"ArgSelfRef"],[3,"ExprMatch"],[3,"TypeImplTrait"],[3,"ItemExternCrate"],[3,"Arm"],[3,"PatStruct"],[3,"VisCrate"],[3,"LitBool"],[3,"ForeignItemVerbatim"],[3,"ExprCast"],[3,"DataUnion"],[3,"TypeNever"],[3,"ItemImpl"],[3,"FieldValue"],[4,"Visibility"],[3,"TypePtr"],[3,"ExprTuple"],[3,"LitVerbatim"],[3,"UseRename"],[3,"ImplItemMethod"],[3,"ExprLoop"],[4,"NestedMeta"],[3,"File"],[3,"Macro"],[4,"FnArg"],[3,"Index"],[4,"Item"],[3,"ExprWhile"],[4,"Fields"],[4,"GenericArgument"],[4,"TraitItem"],[3,"TraitBound"],[3,"ExprClosure"],[3,"TypeParen"],[3,"ItemMacro"],[3,"PatTupleStruct"],[4,"TypeParamBound"],[3,"ExprForLoop"],[4,"UnOp"],[3,"ItemStatic"],[4,"BareFnArgName"],[3,"ImplItemType"],[3,"PatLit"],[3,"ConstParam"],[3,"ExprAsync"],[3,"TypeArray"],[3,"ItemConst"],[3,"ExprYield"],[3,"PatRange"],[3,"FieldsNamed"],[4,"FloatSuffix"],[3,"ExprBox"],[3,"PathSegment"],[3,"TraitItemType"],[3,"DeriveInput"],[3,"WhereClause"],[3,"ExprGroup"],[4,"GenericMethodArgument"],[3,"UseGroup"],[3,"ImplItemConst"],[3,"ExprIndex"],[3,"MethodTurbofish"],[8,"VisitMut"],[4,"Meta"],[3,"TypeTuple"],[4,"UseTree"],[4,"GenericParam"],[3,"ExprBinary"],[3,"ExprMacro"],[3,"TypeBareFn"],[3,"ItemEnum"],[3,"PatRef"],[3,"AngleBracketedGenericArguments"],[3,"ItemUse"],[3,"PredicateEq"],[3,"ExprBreak"],[3,"ItemFn"],[3,"VisPublic"],[3,"QSelf"],[3,"ItemMacro2"],[3,"ExprStruct"],[3,"PatVerbatim"],[3,"Attribute"],[3,"ImplItemExistential"],[3,"ItemStruct"],[4,"Pat"],[3,"MetaList"],[3,"ItemType"],[3,"Generics"],[4,"Stmt"],[3,"ExprBlock"],[3,"ArgCaptured"],[3,"ExprVerbatim"],[3,"Binding"],[3,"ItemVerbatim"],[3,"PredicateLifetime"],[3,"ExprCall"],[3,"ExprMethodCall"],[3,"ParenthesizedGenericArguments"],[3,"TraitItemConst"],[3,"ExprContinue"],[4,"ImplItem"],[3,"TraitItemVerbatim"],[3,"PatWild"],[3,"ExprIf"],[3,"TypeReference"],[3,"UseName"],[3,"ExprAssign"],[3,"ExprLet"],[4,"ReturnType"],[3,"ArgSelf"],[3,"PatMacro"],[3,"Constraint"],[3,"PredicateType"],[4,"MacroDelimiter"],[3,"FnDecl"],[3,"Path"],[3,"DataStruct"],[3,"ItemForeignMod"],[3,"TypePath"],[3,"ForeignItemMacro"],[3,"UseGlob"],[3,"ExprTry"],[3,"TypeSlice"],[3,"UsePath"],[3,"BoundLifetimes"],[3,"ExprLit"],[3,"ExprType"],[3,"TypeVerbatim"],[3,"ImplItemVerbatim"],[3,"Field"],[4,"Data"],[8,"Visit"],[3,"MethodSig"],[3,"FieldsUnnamed"],[3,"ExprParen"],[3,"TypeInfer"],[3,"TraitItemMacro"],[3,"PatTuple"],[3,"ExprField"],[4,"WherePredicate"],[3,"ExprTryBlock"],[3,"ExprReference"],[3,"Label"],[4,"Expr"],[3,"ExprUnary"],[3,"ExprAssignOp"],[4,"StrStyle"],[3,"TypeGroup"],[3,"Lifetime"],[3,"PatSlice"],[4,"ForeignItem"],[3,"ExprPath"],[3,"TypeMacro"],[4,"PathArguments"],[3,"TraitItemMethod"],[4,"IntSuffix"],[4,"TraitBoundModifier"],[3,"ForeignItemStatic"],[3,"ExprRepeat"],[4,"BinOp"],[3,"ItemMod"],[3,"Local"],[3,"ExprArray"],[3,"TypeTraitObject"],[3,"ExprUnsafe"],[3,"Abi"],[3,"ImplItemMacro"],[3,"ItemTrait"],[3,"PatBox"],[3,"MetaNameValue"],[3,"ItemUnion"],[3,"LifetimeDef"],[3,"DataEnum"],[3,"ForeignItemFn"],[3,"ExprRange"],[3,"Block"],[3,"ItemExistential"],[4,"Member"],[3,"Variant"],[4,"Lit"],[3,"TypeParam"],[3,"ForeignItemType"],[3,"ExprReturn"],[4,"AttrStyle"],[3,"FieldPat"],[3,"VisRestricted"],[4,"RangeLimits"],[3,"ExprInPlace"],[3,"BareFnArg"],[3,"ItemTraitAlias"],[3,"PatIdent"],[3,"Derived"],[3,"DeriveGenerator"],[8,"Spanned"],[4,"FieldParent"],[3,"SpanWrapped"],[3,"DataSupport"],[3,"TokenBuffer"],[3,"Cursor"],[3,"Punctuated"],[3,"Pairs"],[3,"PairsMut"],[3,"IntoPairs"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"ParseBuffer"],[3,"StepCursor"],[3,"Error"],[3,"Lookahead1"],[3,"LitChar"],[3,"ImplGenerics"],[3,"LitByte"],[3,"LitFloat"],[3,"Turbofish"],[3,"LitByteStr"],[3,"LitInt"],[3,"TypeGenerics"],[3,"LitStr"],[3,"Fields"],[3,"GenericSupport"]]};
searchIndex["devise_codegen"]={"doc":"","items":[[24,"FromMeta","devise_codegen","",N,N]],"paths":[]};
searchIndex["devise_core"]={"doc":"","items":[[3,"Fields","devise_core","",N,N],[3,"Field","","",N,N],[12,"parent","","",0,N],[12,"field","","",0,N],[12,"index","","",0,N],[3,"GenericSupport","","",N,N],[3,"DataSupport","","",N,N],[3,"DeriveGenerator","","",N,N],[12,"input","","",1,N],[12,"trait_impl","","",1,N],[12,"trait_path","","",1,N],[3,"MetaItemList","","",N,N],[12,"ident","","",2,N],[12,"iter","","",2,N],[3,"SpanWrapped","","",N,N],[12,"span","","",3,N],[12,"full_span","","",3,N],[12,"value","","",3,N],[3,"Derived","","",N,N],[12,"derive_input","","",4,N],[12,"value","","",4,N],[4,"FieldParent","","",N,N],[13,"Variant","","",5,N],[13,"Struct","","",5,N],[13,"Union","","",5,N],[4,"MetaItem","","",N,N],[13,"Ident","","",6,N],[13,"Literal","","",6,N],[13,"KeyValue","","",6,N],[13,"List","","",6,N],[5,"default_enum_mapper","","",N,[[["derivegenerator"],["enum"]],["mapresult"]]],[5,"null_enum_mapper","","",N,[[["derivegenerator"],["enum"]],["mapresult"]]],[5,"default_struct_mapper","","",N,[[["derivegenerator"],["struct"]],["mapresult"]]],[5,"default_variant_mapper","","",N,[[["derivegenerator"],["variant"]],["mapresult"]]],[5,"default_field_mapper","","",N,[[["derivegenerator"],["field"]],["mapresult"]]],[5,"default_fields_mapper","","",N,[[["derivegenerator"],["fields"]],["mapresult"]]],[11,"input","","",5,[[["self"]],["deriveinput"]]],[11,"fields","","",5,[[["self"]],["fields"]]],[11,"attrs","","",5,N],[11,"iter","","",7,N],[11,"is_empty","","",7,[[["self"]],["bool"]]],[11,"count","","",7,[[["self"]],["usize"]]],[11,"parent_attrs","","",7,N],[11,"are_named","","",7,[[["self"]],["bool"]]],[11,"are_unnamed","","",7,[[["self"]],["bool"]]],[11,"are_unit","","",7,[[["self"]],["bool"]]],[11,"match_tokens","","",7,[[["self"]],["tokenstream2"]]],[11,"match_ident","","",0,[[["self"]],["ident"]]],[11,"accessor","","",0,[[["self"]],["tokenstream2"]]],[11,"build_for","","",1,[[["tokenstream"],["tokenstream2"]],["derivegenerator"]]],[11,"generic_support","","",1,[[["self"],["genericsupport"]],["self"]]],[11,"data_support","","",1,[[["self"],["datasupport"]],["self"]]],[11,"map_type_generic","","",1,[[["self"],["f"]],["self"]]],[11,"replace_generic","","",1,[[["self"],["usize"],["usize"]],["self"]]],[11,"validate_enum","","",1,[[["self"],["f"]],["self"]]],[11,"validate_struct","","",1,[[["self"],["f"]],["self"]]],[11,"validate_generics","","",1,[[["self"],["f"]],["self"]]],[11,"validate_fields","","",1,[[["self"],["f"]],["self"]]],[11,"function","","",1,[[["self"],["f"]],["self"]]],[11,"map_struct","","",1,[[["self"],["f"]],["self"]]],[11,"try_map_struct","","",1,[[["self"],["f"]],["self"]]],[11,"struct_mapper","","",1,[[["self"]],["box"]]],[11,"map_enum","","",1,[[["self"],["f"]],["self"]]],[11,"try_map_enum","","",1,[[["self"],["f"]],["self"]]],[11,"enum_mapper","","",1,[[["self"]],["box"]]],[11,"map_variant","","",1,[[["self"],["f"]],["self"]]],[11,"try_map_variant","","",1,[[["self"],["f"]],["self"]]],[11,"variant_mapper","","",1,[[["self"]],["box"]]],[11,"map_fields","","",1,[[["self"],["f"]],["self"]]],[11,"try_map_fields","","",1,[[["self"],["f"]],["self"]]],[11,"fields_mapper","","",1,[[["self"]],["box"]]],[11,"map_field","","",1,[[["self"],["f"]],["self"]]],[11,"try_map_field","","",1,[[["self"],["f"]],["self"]]],[11,"field_mapper","","",1,[[["self"]],["box"]]],[11,"debug","","",1,[[["self"]],["self"]]],[11,"to_tokens","","",1,[[["self"]],["tokenstream"]]],[18,"None","","",8,N],[18,"Type","","",8,N],[18,"Lifetime","","",8,N],[18,"Const","","",8,N],[18,"All","","",8,N],[11,"empty","","Returns an empty set of flags.",8,[[],["genericsupport"]]],[11,"all","","Returns the set containing all flags.",8,[[],["genericsupport"]]],[11,"bits","","Returns the raw value of the flags currently stored.",8,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",8,[[["u32"]],["option",["genericsupport"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",8,[[["u32"]],["genericsupport"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",8,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",8,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",8,[[["self"],["genericsupport"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",8,[[["self"],["genericsupport"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",8,[[["self"],["genericsupport"]]]],[11,"remove","","Removes the specified flags in-place.",8,[[["self"],["genericsupport"]]]],[11,"toggle","","Toggles the specified flags in-place.",8,[[["self"],["genericsupport"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",8,[[["self"],["genericsupport"],["bool"]]]],[18,"None","","",9,N],[18,"TupleStruct","","",9,N],[18,"NamedStruct","","",9,N],[18,"Struct","","",9,N],[18,"Enum","","",9,N],[18,"Union","","",9,N],[18,"All","","",9,N],[11,"empty","","Returns an empty set of flags.",9,[[],["datasupport"]]],[11,"all","","Returns the set containing all flags.",9,[[],["datasupport"]]],[11,"bits","","Returns the raw value of the flags currently stored.",9,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",9,[[["u32"]],["option",["datasupport"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",9,[[["u32"]],["datasupport"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",9,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",9,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",9,[[["self"],["datasupport"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",9,[[["self"],["datasupport"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",9,[[["self"],["datasupport"]]]],[11,"remove","","Removes the specified flags in-place.",9,[[["self"],["datasupport"]]]],[11,"toggle","","Toggles the specified flags in-place.",9,[[["self"],["datasupport"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",9,[[["self"],["datasupport"],["bool"]]]],[11,"from","","",4,[[["deriveinput"],["t"]],["self"]]],[11,"iter","","",2,N],[11,"name","","",6,[[["self"]],["option",["ident"]]]],[11,"description","","",6,[[["self"]],["str"]]],[11,"is_bare","","",6,[[["self"]],["bool"]]],[11,"lit","","",6,[[["self"]],["result",["lit"]]]],[11,"value_span","","",6,[[["self"]],["span"]]],[0,"ext","","",N,N],[4,"GenericKind","devise_core::ext","",N,N],[13,"Lifetime","","",10,N],[13,"Type","","",10,N],[13,"Binding","","",10,N],[13,"Const","","",10,N],[13,"Constraint","","",10,N],[8,"PathExt","","",N,N],[10,"is","","",11,N],[10,"is_local","","",11,N],[10,"is_global","","",11,N],[10,"generics","","",11,[[["self"]],["option",["punctuated"]]]],[8,"TypeExt","","",N,N],[10,"strip_lifetimes","","",12,[[["self"]]]],[10,"with_stripped_lifetimes","","",12,[[["self"]],["type"]]],[8,"GenericExt","","",N,N],[10,"kind","","",13,[[["self"]],["generickind"]]],[8,"Split2","","",N,N],[10,"split2","","",14,N],[8,"Split3","","",N,N],[10,"split3","","",15,N],[6,"Result","devise_core","",N,N],[6,"MapResult","","",N,N],[6,"Variant","","",N,N],[6,"Struct","","",N,N],[6,"Enum","","",N,N],[8,"Spanned","","",N,N],[10,"span","","",16,[[["self"]],["span"]]],[8,"FromMeta","","",N,N],[10,"from_meta","","",17,[[["metaitem"]],["result"]]],[11,"from_attr","","",17,[[["str"],["attribute"]],["result"]]],[11,"from_attrs","","",17,N],[11,"default","","",17,[[],["option"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"span","","",3,[[["self"]],["span"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"span","","",4,[[["self"]],["span"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","devise_core::ext","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"span","devise_core","",7,[[["self"]],["span"]]],[11,"span","","",2,[[["self"]],["span"]]],[11,"span","","",6,[[["self"]],["span"]]],[11,"from_meta","","",3,[[["metaitem"]],["result"]]],[11,"cmp","","",8,[[["self"],["genericsupport"]],["ordering"]]],[11,"cmp","","",9,[[["self"],["datasupport"]],["ordering"]]],[11,"eq","","",8,[[["self"],["genericsupport"]],["bool"]]],[11,"ne","","",8,[[["self"],["genericsupport"]],["bool"]]],[11,"eq","","",9,[[["self"],["datasupport"]],["bool"]]],[11,"ne","","",9,[[["self"],["datasupport"]],["bool"]]],[11,"eq","devise_core::ext","",10,[[["self"],["generickind"]],["bool"]]],[11,"from","devise_core","",6,[[["meta"]],["metaitem"]]],[11,"from","","",6,[[["nestedmeta"]],["metaitem"]]],[11,"clone","","",5,[[["self"]],["fieldparent"]]],[11,"clone","","",7,[[["self"]],["fields"]]],[11,"clone","","",0,[[["self"]],["field"]]],[11,"clone","","",8,[[["self"]],["genericsupport"]]],[11,"clone","","",9,[[["self"]],["datasupport"]]],[11,"clone","","",4,[[["self"]],["derived"]]],[11,"clone","","",6,[[["self"]],["metaitem"]]],[11,"clone","","",2,[[["self"]],["metaitemlist"]]],[11,"clone","","",3,[[["self"]],["spanwrapped"]]],[11,"clone","devise_core::ext","",10,[[["self"]],["generickind"]]],[11,"extend","devise_core","",8,[[["self"],["t"]]]],[11,"extend","","",9,[[["self"],["t"]]]],[11,"partial_cmp","","",8,[[["self"],["genericsupport"]],["option",["ordering"]]]],[11,"lt","","",8,[[["self"],["genericsupport"]],["bool"]]],[11,"le","","",8,[[["self"],["genericsupport"]],["bool"]]],[11,"gt","","",8,[[["self"],["genericsupport"]],["bool"]]],[11,"ge","","",8,[[["self"],["genericsupport"]],["bool"]]],[11,"partial_cmp","","",9,[[["self"],["datasupport"]],["option",["ordering"]]]],[11,"lt","","",9,[[["self"],["datasupport"]],["bool"]]],[11,"le","","",9,[[["self"],["datasupport"]],["bool"]]],[11,"gt","","",9,[[["self"],["datasupport"]],["bool"]]],[11,"ge","","",9,[[["self"],["datasupport"]],["bool"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"sub","","Returns the set difference of the two sets of flags.",8,[[["self"],["genericsupport"]],["genericsupport"]]],[11,"sub","","Returns the set difference of the two sets of flags.",9,[[["self"],["datasupport"]],["datasupport"]]],[11,"sub_assign","","Disables all flags enabled in the set.",8,[[["self"],["genericsupport"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",9,[[["self"],["datasupport"]]]],[11,"not","","Returns the complement of this set of flags.",8,[[["self"]],["genericsupport"]]],[11,"not","","Returns the complement of this set of flags.",9,[[["self"]],["datasupport"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",8,[[["self"],["genericsupport"]],["genericsupport"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",9,[[["self"],["datasupport"]],["datasupport"]]],[11,"bitor","","Returns the union of the two sets of flags.",8,[[["self"],["genericsupport"]],["genericsupport"]]],[11,"bitor","","Returns the union of the two sets of flags.",9,[[["self"],["datasupport"]],["datasupport"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",8,[[["self"],["genericsupport"]],["genericsupport"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",9,[[["self"],["datasupport"]],["datasupport"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",8,[[["self"],["genericsupport"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",9,[[["self"],["datasupport"]]]],[11,"bitor_assign","","Adds the set of flags.",8,[[["self"],["genericsupport"]]]],[11,"bitor_assign","","Adds the set of flags.",9,[[["self"],["datasupport"]]]],[11,"bitxor_assign","","Toggles the set of flags.",8,[[["self"],["genericsupport"]]]],[11,"bitxor_assign","","Toggles the set of flags.",9,[[["self"],["datasupport"]]]],[11,"deref","","",0,N],[11,"deref","","",4,[[["self"]],["t"]]],[11,"deref","","",3,[[["self"]],["t"]]],[11,"hash","","",8,N],[11,"hash","","",9,N],[11,"from_iter","","",8,[[["t"]],["genericsupport"]]],[11,"from_iter","","",9,[[["t"]],["datasupport"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"to_tokens","","",4,[[["self"],["tokenstream2"]]]],[11,"to_tokens","","",3,[[["self"],["tokenstream"]]]],[11,"builder","","",18,[[["self"],["f"]],["tokenstream2"]]],[11,"fields","","",18,[[["self"]],["fields"]]],[11,"variants","","",19,N],[11,"fields","","",20,[[["self"]],["fields"]]],[11,"from_attr","","",17,[[["str"],["attribute"]],["result"]]],[11,"from_attrs","","",17,N],[11,"default","","",17,[[],["option"]]]],"paths":[[3,"Field"],[3,"DeriveGenerator"],[3,"MetaItemList"],[3,"SpanWrapped"],[3,"Derived"],[4,"FieldParent"],[4,"MetaItem"],[3,"Fields"],[3,"GenericSupport"],[3,"DataSupport"],[4,"GenericKind"],[8,"PathExt"],[8,"TypeExt"],[8,"GenericExt"],[8,"Split2"],[8,"Split3"],[8,"Spanned"],[8,"FromMeta"],[6,"Variant"],[6,"Enum"],[6,"Struct"]]};
searchIndex["diagnostics"]={"doc":"The diagnostics object controls the output of warnings and…","items":[[3,"Diagnostics","diagnostics","Instead of writing errors, warnings and lints generated in…",N,N],[3,"Message","","",N,N],[12,"level","","",0,N],[12,"kind","","",0,N],[4,"MessageLevel","","",N,N],[13,"Error","","",1,N],[13,"Warning","","",1,N],[13,"Info","","",1,N],[13,"Allow","","",1,N],[5,"u8_to_printable_representation","","",N,[[["u8"]],["string"]]],[5,"pad_left","","",N,[[["str"],["usize"]],["string"]]],[5,"pad_left_with_char","","",N,[[["str"],["usize"],["char"]],["string"]]],[0,"lint","","",N,N],[3,"Lint","diagnostics::lint","",N,N],[12,"name","","",2,N],[12,"level","","",2,N],[12,"desc","","",2,N],[3,"LintId","","",N,N],[6,"LintArray","","",N,N],[11,"of","","",3,[[["lint"]],["self"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[8,"Printable","diagnostics","This abstraction allows us to call the diagnostics API…",N,N],[10,"as_maybe_spanned","","",4,[[["self"]],["maybespanned",["display"]]]],[11,"new","","",5,[[["box",["writecolor"]]],["self"]]],[11,"errored","","True when an error message was emitted, false if only…",5,[[["self"]],["bool"]]],[11,"count","","",5,[[["self"],["messagelevel"]],["usize"]]],[11,"write_statistics","","",5,[[["self"]]]],[11,"emit","","Generate an error or a warning that is printed to the…",5,[[["self"],["messagelevel"],["maybespanned",["display"]]]]],[11,"warning","","",5,[[["self"],["t"]]]],[11,"error","","",5,[[["self"],["t"]]]],[11,"info","","",5,[[["self"],["t"]]]],[11,"from_string","","",1,[[["str"]],["option"]]],[11,"write","","",0,[[["self"],["writecolor"]],["result",["error"]]]],[14,"declare_lint","","",N,N],[14,"lint_array","","Declare a static `LintArray` and return it as an expression.",N,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","diagnostics::lint","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"eq","","",3,[[["self"],["self"]],["bool"]]],[11,"eq","diagnostics","",1,[[["self"],["messagelevel"]],["bool"]]],[11,"clone","diagnostics::lint","",2,[[["self"]],["lint"]]],[11,"clone","","",3,[[["self"]],["lintid"]]],[11,"clone","diagnostics","",1,[[["self"]],["messagelevel"]]],[11,"fmt","diagnostics::lint","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","diagnostics","",1,[[["self"],["formatter"]],["result"]]],[11,"hash","diagnostics::lint","",3,[[["self"],["h"]]]],[11,"hash","diagnostics","",1,N]],"paths":[[3,"Message"],[4,"MessageLevel"],[3,"Lint"],[3,"LintId"],[8,"Printable"],[3,"Diagnostics"]]};
searchIndex["difference"]={"doc":"Functions to find the difference between two texts…","items":[[3,"Changeset","difference","The information about a full changeset",N,N],[12,"diffs","","An ordered vector of `Difference` objects, coresponding to…",0,N],[12,"split","","The split used when creating the `Changeset` Common splits…",0,N],[12,"distance","","The edit distance of the `Changeset`",0,N],[4,"Difference","","Defines the contents of a changeset Changesets will be…",N,N],[13,"Same","","Sequences that are the same",1,N],[13,"Add","","Sequences that are an addition (don't appear in the first…",1,N],[13,"Rem","","Sequences that are a removal (don't appear in the second…",1,N],[5,"diff","","This function is deprecated, please use `Changeset::new`…",N,N],[5,"print_diff","","This function is deprecated, `Changeset` now implements…",N,[[["str"],["str"],["str"]]]],[11,"new","","Calculates the edit distance and the changeset for two…",0,[[["str"],["str"],["str"]],["changeset"]]],[14,"assert_diff","","Assert the difference between two strings. Works like…",N,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"eq","","",1,[[["self"],["difference"]],["bool"]]],[11,"ne","","",1,[[["self"],["difference"]],["bool"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]]],"paths":[[3,"Changeset"],[4,"Difference"]]};
searchIndex["dtoa"]={"doc":"","items":[[5,"write","dtoa","",N,[[["w"],["v"]],["result",["usize"]]]],[8,"Floating","","",N,N],[10,"write","","",0,[[["self"],["w"]],["result",["usize"]]]],[14,"diyfp","","",N,N],[14,"dtoa","","",N,N]],"paths":[[8,"Floating"]]};
searchIndex["either"]={"doc":"The enum [`Either`] with variants `Left` and `Right` is a…","items":[[4,"Either","either","The enum `Either` with variants `Left` and `Right` is a…",N,N],[13,"Left","","A value of type `L`.",0,N],[13,"Right","","A value of type `R`.",0,N],[11,"is_left","","Return true if the value is the `Left` variant.",0,[[["self"]],["bool"]]],[11,"is_right","","Return true if the value is the `Right` variant.",0,[[["self"]],["bool"]]],[11,"left","","Convert the left side of `Either<L, R>` to an `Option<L>`.",0,[[["self"]],["option"]]],[11,"right","","Convert the right side of `Either<L, R>` to an `Option<R>`.",0,[[["self"]],["option"]]],[11,"as_ref","","Convert `&Either<L, R>` to `Either<&L, &R>`.",0,[[["self"]],["either"]]],[11,"as_mut","","Convert `&mut Either<L, R>` to `Either<&mut L, &mut R>`.",0,[[["self"]],["either"]]],[11,"flip","","Convert `Either<L, R>` to `Either<R, L>`.",0,[[["self"]],["either"]]],[11,"map_left","","Apply the function `f` on the value in the `Left` variant…",0,[[["self"],["f"]],["either"]]],[11,"map_right","","Apply the function `f` on the value in the `Right` variant…",0,[[["self"],["f"]],["either"]]],[11,"either","","Apply one of two functions depending on contents, unifying…",0,[[["self"],["f"],["g"]],["t"]]],[11,"either_with","","Like `either`, but provide some context to whichever of…",0,[[["self"],["ctx"],["f"],["g"]],["t"]]],[11,"left_and_then","","Apply the function `f` on the value in the `Left` variant…",0,[[["self"],["f"]],["either"]]],[11,"right_and_then","","Apply the function `f` on the value in the `Right` variant…",0,[[["self"],["f"]],["either"]]],[11,"into_iter","","Convert the inner value to an iterator.",0,[[["self"]],["either"]]],[11,"factor_first","","Factor out a homogeneous type from an either of pairs.",0,N],[11,"factor_second","","Factor out a homogeneous type from an either of pairs.",0,N],[11,"into_inner","","Extract the value of an either over two equivalent types.",0,[[["self"]],["t"]]],[14,"try_left","","Macro for unwrapping the left side of an `Either`, which…",N,N],[14,"try_right","","Dual to `try_left!`, see its documentation for more…",N,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into_iter","","",0,[[["self"]],["i"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"eq","","",0,[[["self"],["either"]],["bool"]]],[11,"ne","","",0,[[["self"],["either"]],["bool"]]],[11,"cmp","","",0,[[["self"],["either"]],["ordering"]]],[11,"partial_cmp","","",0,[[["self"],["either"]],["option",["ordering"]]]],[11,"lt","","",0,[[["self"],["either"]],["bool"]]],[11,"le","","",0,[[["self"],["either"]],["bool"]]],[11,"gt","","",0,[[["self"],["either"]],["bool"]]],[11,"ge","","",0,[[["self"],["either"]],["bool"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"deref","","",0,N],[11,"deref_mut","","",0,N],[11,"hash","","",0,N],[11,"next_back","","",0,[[["self"]],["option"]]],[11,"extend","","",0,[[["self"],["t"]]]],[11,"next","","",0,[[["self"]],["option"]]],[11,"size_hint","","",0,N],[11,"fold","","",0,[[["self"],["acc"],["g"]],["acc"]]],[11,"count","","",0,[[["self"]],["usize"]]],[11,"last","","",0,[[["self"]],["option"]]],[11,"nth","","",0,[[["self"],["usize"]],["option"]]],[11,"collect","","",0,[[["self"]],["b"]]],[11,"all","","",0,[[["self"],["f"]],["bool"]]],[11,"from","","",0,[[["result"]],["self"]]],[11,"clone","","",0,[[["self"]],["either"]]],[11,"as_ref","","",0,[[["self"]],["target"]]],[11,"into","","",0,[[["self"]],["result"]]],[11,"as_mut","","",0,[[["self"]],["target"]]]],"paths":[[4,"Either"]]};
searchIndex["env_logger"]={"doc":"A simple logger configured via environment variables which…","items":[[3,"Env","env_logger","Set of environment variables to configure from.",N,N],[3,"Logger","","The env logger.",N,N],[3,"Builder","","`Builder` acts as builder for initializing a `Logger`.",N,N],[4,"Target","","Log target, either `stdout` or `stderr`.",N,N],[13,"Stdout","","Logs will be sent to standard output.",0,N],[13,"Stderr","","Logs will be sent to standard error.",0,N],[4,"WriteStyle","","Whether or not to print styles to the target.",N,N],[13,"Auto","","Try to print styles, but don't force the issue.",1,N],[13,"Always","","Try very hard to print styles.",1,N],[13,"Never","","Never print styles.",1,N],[5,"try_init","","Attempts to initialize the global logger with an env logger.",N,[[],["result",["setloggererror"]]]],[5,"init","","Initializes the global logger with an env logger.",N,[[]]],[5,"try_init_from_env","","Attempts to initialize the global logger with an env…",N,[[["e"]],["result",["setloggererror"]]]],[5,"init_from_env","","Initializes the global logger with an env logger from the…",N,[[["e"]]]],[0,"filter","","Filtering for log records.",N,N],[3,"Filter","env_logger::filter","A log filter.",N,N],[3,"Builder","","A builder for a log filter.",N,N],[11,"filter","","Returns the maximum `LevelFilter` that this filter…",2,[[["self"]],["levelfilter"]]],[11,"matches","","Checks if this record matches the configured filter.",2,[[["self"],["record"]],["bool"]]],[11,"enabled","","Determines if a log message with the specified metadata…",2,[[["self"],["metadata"]],["bool"]]],[11,"new","","Initializes the filter builder with defaults.",3,[[],["builder"]]],[11,"from_env","","Initializes the filter builder from an environment.",3,[[["str"]],["builder"]]],[11,"filter_module","","Adds a directive to the filter for a specific module.",3,[[["self"],["str"],["levelfilter"]],["self"]]],[11,"filter_level","","Adds a directive to the filter for all modules.",3,[[["self"],["levelfilter"]],["self"]]],[11,"filter","","Adds a directive to the filter.",3,[[["self"],["option",["str"]],["levelfilter"]],["self"]]],[11,"parse","","Parses the directives string.",3,[[["self"],["str"]],["self"]]],[11,"build","","Build a log filter.",3,[[["self"]],["filter"]]],[0,"fmt","env_logger","Formatting for log records.",N,N],[3,"Timestamp","env_logger::fmt","An [RFC3339] formatted timestamp.",N,N],[3,"PreciseTimestamp","","An [RFC3339] formatted timestamp with nanos.",N,N],[3,"Style","","A set of styles to apply to the terminal output.",N,N],[3,"StyledValue","","A value that can be printed using the given styles.",N,N],[3,"Formatter","","A formatter to write logs into.",N,N],[4,"Color","","The set of available colors for the terminal…",N,N],[13,"Black","","",4,N],[13,"Blue","","",4,N],[13,"Green","","",4,N],[13,"Red","","",4,N],[13,"Cyan","","",4,N],[13,"Magenta","","",4,N],[13,"Yellow","","",4,N],[13,"White","","",4,N],[13,"Ansi256","","",4,N],[13,"Rgb","","",4,N],[4,"Target","","Log target, either `stdout` or `stderr`.",N,N],[13,"Stdout","","Logs will be sent to standard output.",0,N],[13,"Stderr","","Logs will be sent to standard error.",0,N],[4,"WriteStyle","","Whether or not to print styles to the target.",N,N],[13,"Auto","","Try to print styles, but don't force the issue.",1,N],[13,"Always","","Try very hard to print styles.",1,N],[13,"Never","","Never print styles.",1,N],[11,"style","","Begin a new [`Style`].",5,[[["self"]],["style"]]],[11,"default_level_style","","Get the default [`Style`] for the given level.",5,[[["self"],["level"]],["style"]]],[11,"default_styled_level","","Get a printable [`Style`] for the given level.",5,[[["self"],["level"]],["styledvalue",["level"]]]],[11,"set_color","","Set the text color.",6,[[["self"],["color"]],["style"]]],[11,"set_bold","","Set the text weight.",6,[[["self"],["bool"]],["style"]]],[11,"set_intense","","Set the text intensity.",6,[[["self"],["bool"]],["style"]]],[11,"set_bg","","Set the background color.",6,[[["self"],["color"]],["style"]]],[11,"value","","Wrap a value in the style.",6,[[["self"],["t"]],["styledvalue"]]],[11,"timestamp","","Get a [`Timestamp`] for the current date and time in UTC.",5,[[["self"]],["timestamp"]]],[11,"precise_timestamp","","Get a [`PreciseTimestamp`] for the current date and time…",5,[[["self"]],["precisetimestamp"]]],[17,"DEFAULT_FILTER_ENV","env_logger","The default name for the environment variable to read…",N,N],[17,"DEFAULT_WRITE_STYLE_ENV","","The default name for the environment variable to read…",N,N],[11,"new","","Initializes the log builder with defaults.",7,[[],["builder"]]],[11,"from_env","","Initializes the log builder from the environment.",7,[[["e"]],["self"]]],[11,"from_default_env","","Initializes the log builder from the environment using…",7,[[],["self"]]],[11,"format","","Sets the format function for formatting the log output.",7,[[["self"],["f"]],["self"]]],[11,"default_format","","Use the default format.",7,[[["self"]],["self"]]],[11,"default_format_level","","Whether or not to write the level in the default format.",7,[[["self"],["bool"]],["self"]]],[11,"default_format_module_path","","Whether or not to write the module path in the default…",7,[[["self"],["bool"]],["self"]]],[11,"default_format_timestamp","","Whether or not to write the timestamp in the default format.",7,[[["self"],["bool"]],["self"]]],[11,"default_format_timestamp_nanos","","Whether or not to write the timestamp with nanos.",7,[[["self"],["bool"]],["self"]]],[11,"filter_module","","Adds a directive to the filter for a specific module.",7,[[["self"],["str"],["levelfilter"]],["self"]]],[11,"filter_level","","Adds a directive to the filter for all modules.",7,[[["self"],["levelfilter"]],["self"]]],[11,"filter","","Adds filters to the logger.",7,[[["self"],["option",["str"]],["levelfilter"]],["self"]]],[11,"parse","","Parses the directives string in the same form as the…",7,[[["self"],["str"]],["self"]]],[11,"target","","Sets the target for the log output.",7,[[["self"],["target"]],["self"]]],[11,"write_style","","Sets whether or not styles will be written.",7,[[["self"],["writestyle"]],["self"]]],[11,"parse_write_style","","Parses whether or not to write styles in the same form as…",7,[[["self"],["str"]],["self"]]],[11,"try_init","","Initializes the global logger with the built env logger.",7,[[["self"]],["result",["setloggererror"]]]],[11,"init","","Initializes the global logger with the built env logger.",7,[[["self"]]]],[11,"build","","Build an env logger.",7,[[["self"]],["logger"]]],[11,"from_env","","Creates the logger from the environment.",8,[[["e"]],["self"]]],[11,"from_default_env","","Creates the logger from the environment using default…",8,[[],["self"]]],[11,"filter","","Returns the maximum `LevelFilter` that this env logger…",8,[[["self"]],["levelfilter"]]],[11,"matches","","Checks if this record matches the configured filter.",8,[[["self"],["record"]],["bool"]]],[11,"new","","Get a default set of environment variables.",9,[[],["self"]]],[11,"filter","","Specify an environment variable to read the filter from.",9,[[["self"],["e"]],["self"]]],[11,"filter_or","","Specify an environment variable to read the filter from.",9,[[["self"],["e"],["v"]],["self"]]],[11,"default_filter_or","","Use the default environment variable to read the filter…",9,[[["self"],["v"]],["self"]]],[11,"write_style","","Specify an environment variable to read the style from.",9,[[["self"],["e"]],["self"]]],[11,"write_style_or","","Specify an environment variable to read the style from.",9,[[["self"],["e"],["v"]],["self"]]],[11,"default_write_style_or","","Use the default environment variable to read the style from.",9,[[["self"],["v"]],["self"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","env_logger::filter","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","env_logger::fmt","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_string","","",10,[[["self"]],["string"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_string","","",11,[[["self"]],["string"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_string","","",12,[[["self"]],["string"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"eq","","",4,[[["self"],["color"]],["bool"]]],[11,"ne","","",4,[[["self"],["color"]],["bool"]]],[11,"eq","env_logger","",0,[[["self"],["target"]],["bool"]]],[11,"eq","","",1,[[["self"],["writestyle"]],["bool"]]],[11,"from","","",9,[[["t"]],["self"]]],[11,"clone","env_logger::fmt","",6,[[["self"]],["style"]]],[11,"clone","","",4,[[["self"]],["color"]]],[11,"clone","env_logger","",0,[[["self"]],["target"]]],[11,"clone","","",1,[[["self"]],["writestyle"]]],[11,"default","env_logger::filter","",3,[[],["self"]]],[11,"default","env_logger","",0,[[],["self"]]],[11,"default","","",1,[[],["self"]]],[11,"default","","",7,[[],["builder"]]],[11,"default","","",9,[[],["self"]]],[11,"fmt","env_logger::fmt","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","env_logger::filter","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","env_logger::fmt","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","env_logger","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","env_logger::fmt","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","env_logger","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"hash","","",0,N],[11,"hash","","",1,N],[11,"fmt","env_logger::fmt","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"write","","",5,N],[11,"flush","","",5,[[["self"]],["result"]]],[11,"enabled","env_logger","",8,[[["self"],["metadata"]],["bool"]]],[11,"log","","",8,[[["self"],["record"]]]],[11,"flush","","",8,[[["self"]]]]],"paths":[[4,"Target"],[4,"WriteStyle"],[3,"Filter"],[3,"Builder"],[4,"Color"],[3,"Formatter"],[3,"Style"],[3,"Builder"],[3,"Logger"],[3,"Env"],[3,"Timestamp"],[3,"PreciseTimestamp"],[3,"StyledValue"]]};
searchIndex["failure"]={"doc":"An experimental new error-handling library. Guide-style…","items":[[3,"Backtrace","failure","A `Backtrace`.",N,N],[3,"Compat","","A compatibility wrapper around an error type from this…",N,N],[3,"Context","","An error with context around it.",N,N],[3,"SyncFailure","","Wrapper for `std` errors to make them `Sync`.",N,N],[3,"Error","","The `Error` type, which can contain any failure.",N,N],[3,"Causes","","A iterator over the causes of a `Fail`",N,N],[5,"err_msg","","Constructs a `Fail` type from a string.",N,[[["d"]],["error"]]],[11,"new","","Constructs a new backtrace. This will only create a real…",0,[[],["backtrace"]]],[11,"into_inner","","Unwraps this into the inner error.",1,[[["self"]],["e"]]],[11,"get_ref","","Gets a reference to the inner error.",1,[[["self"]],["e"]]],[11,"new","","Creates a new context without an underlying error message.",2,[[["d"]],["context"]]],[11,"get_context","","Returns a reference to the context provided with this error.",2,[[["self"]],["d"]]],[11,"map","","Maps `Context<D>` to `Context<T>` by applying a function…",2,[[["self"],["f"]],["context"]]],[11,"new","","Wraps a non-`Sync` `Error` in order to make it implement…",3,[[["e"]],["self"]]],[11,"from_boxed_compat","","Creates an `Error` from `Box<std::error::Error>`.",4,[[["box",["stderror"]]],["error"]]],[11,"as_fail","","Return a reference to the underlying failure that this…",4,[[["self"]],["fail"]]],[11,"cause","","Returns a reference to the underlying cause of this…",4,[[["self"]],["fail"]]],[11,"backtrace","","Gets a reference to the `Backtrace` for this `Error`.",4,[[["self"]],["backtrace"]]],[11,"context","","Provides context for this `Error`.",4,[[["self"],["d"]],["context"]]],[11,"compat","","Wraps `Error` in a compatibility type.",4,[[["self"]],["compat",["error"]]]],[11,"downcast","","Attempts to downcast this `Error` to a particular `Fail`…",4,[[["self"]],["result",["error"]]]],[11,"find_root_cause","","Returns the \"root cause\" of this error - the last value in…",4,[[["self"]],["fail"]]],[11,"iter_causes","","Returns a iterator over the causes of this error with the…",4,[[["self"]],["causes"]]],[11,"iter_chain","","Returns a iterator over all fails up the chain from the…",4,[[["self"]],["causes"]]],[11,"downcast_ref","","Attempts to downcast this `Error` to a particular `Fail`…",4,[[["self"]],["option"]]],[11,"downcast_mut","","Attempts to downcast this `Error` to a particular `Fail`…",4,[[["self"]],["option"]]],[11,"root_cause","","Deprecated alias to `find_root_cause`.",4,[[["self"]],["fail"]]],[11,"causes","","Deprecated alias to `iter_causes`.",4,[[["self"]],["causes"]]],[6,"Fallible","","A common result with an `Error`.",N,N],[8,"AsFail","","The `AsFail` trait",N,N],[10,"as_fail","","Converts a reference to `Self` into a dynamic trait object…",5,[[["self"]],["fail"]]],[8,"ResultExt","","Extension methods for `Result`.",N,N],[10,"compat","","Wraps the error in `Compat` to make it compatible with…",6,[[["self"]],["result",["compat"]]]],[10,"context","","Wraps the error type in a context type.",6,[[["self"],["d"]],["result",["context"]]]],[10,"with_context","","Wraps the error type in a context type generated by…",6,[[["self"],["f"]],["result",["context"]]]],[8,"Fail","","The `Fail` trait.",N,N],[11,"cause","","Returns a reference to the underlying cause of this…",7,[[["self"]],["option",["fail"]]]],[11,"backtrace","","Returns a reference to the `Backtrace` carried by this…",7,[[["self"]],["option",["backtrace"]]]],[11,"context","","Provides context for this failure.",7,[[["self"],["d"]],["context"]]],[11,"compat","","Wraps this failure in a compatibility wrapper that…",7,[[["self"]],["compat"]]],[11,"downcast_ref","","Attempts to downcast this failure to a concrete type by…",7,[[["self"]],["option"]]],[11,"downcast_mut","","Attempts to downcast this failure to a concrete type by…",7,[[["self"]],["option"]]],[11,"find_root_cause","","Returns the \"root cause\" of this `Fail` - the last value…",7,[[["self"]],["fail"]]],[11,"iter_causes","","Returns a iterator over the causes of this `Fail` with the…",7,[[["self"]],["causes"]]],[11,"iter_chain","","Returns a iterator over all fails up the chain from the…",7,[[["self"]],["causes"]]],[11,"root_cause","","Deprecated alias to `find_root_cause`.",7,[[["self"]],["fail"]]],[11,"causes","","Deprecated alias to `iter_chain`.",7,[[["self"]],["causes"]]],[14,"bail","","Exits a function early with an `Error`.",N,N],[14,"ensure","","Exits a function early with an `Error` if the condition is…",N,N],[14,"format_err","","Constructs an `Error` using the standard string…",N,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into_iter","","",8,[[["self"]],["i"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"as_fail","","",7,[[["self"]],["fail"]]],[11,"as_fail","","",4,[[["self"]],["fail"]]],[11,"cause","","",2,[[["self"]],["option",["fail"]]]],[11,"backtrace","","",2,[[["self"]],["option",["backtrace"]]]],[11,"eq","","",1,[[["self"],["compat"]],["bool"]]],[11,"ne","","",1,[[["self"],["compat"]],["bool"]]],[11,"from","","",2,[[["d"]],["context"]]],[11,"from","","",4,[[["f"]],["error"]]],[11,"clone","","",1,[[["self"]],["compat"]]],[11,"next","","",8,[[["self"]],["option",["fail"]]]],[11,"as_ref","","",4,[[["self"]],["fail"]]],[11,"default","","",0,[[],["backtrace"]]],[11,"default","","",1,[[],["compat"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"hash","","",1,N],[11,"description","","",1,[[["self"]],["str"]]]],"paths":[[3,"Backtrace"],[3,"Compat"],[3,"Context"],[3,"SyncFailure"],[3,"Error"],[8,"AsFail"],[8,"ResultExt"],[8,"Fail"],[3,"Causes"]]};
searchIndex["failure_derive"]={"doc":"","items":[[24,"Fail","failure_derive","",N,N]],"paths":[]};
searchIndex["filetime"]={"doc":"Timestamps for files in Rust","items":[[3,"FileTime","filetime","A helper structure to represent a timestamp for a file.",N,N],[5,"set_file_times","","Set the last access and modification times for a file on…",N,[[["p"],["filetime"],["filetime"]],["result"]]],[5,"set_symlink_file_times","","Set the last access and modification times for a file on…",N,[[["p"],["filetime"],["filetime"]],["result"]]],[11,"zero","","Creates a new timestamp representing a 0 time.",0,[[],["filetime"]]],[11,"from_unix_time","","Creates a new instance of `FileTime` with a number of…",0,[[["i64"],["u32"]],["filetime"]]],[11,"from_last_modification_time","","Creates a new timestamp from the last modification time…",0,[[["metadata"]],["filetime"]]],[11,"from_last_access_time","","Creates a new timestamp from the last access time listed…",0,[[["metadata"]],["filetime"]]],[11,"from_creation_time","","Creates a new timestamp from the creation time listed in…",0,[[["metadata"]],["option",["filetime"]]]],[11,"from_system_time","","Creates a new timestamp from the given SystemTime.",0,[[["systemtime"]],["filetime"]]],[11,"seconds","","Returns the whole number of seconds represented by this…",0,[[["self"]],["i64"]]],[11,"unix_seconds","","Returns the whole number of seconds represented by this…",0,[[["self"]],["i64"]]],[11,"nanoseconds","","Returns the nanosecond precision of this timestamp.",0,[[["self"]],["u32"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"cmp","","",0,[[["self"],["filetime"]],["ordering"]]],[11,"eq","","",0,[[["self"],["filetime"]],["bool"]]],[11,"ne","","",0,[[["self"],["filetime"]],["bool"]]],[11,"from","","",0,[[["systemtime"]],["filetime"]]],[11,"clone","","",0,[[["self"]],["filetime"]]],[11,"partial_cmp","","",0,[[["self"],["filetime"]],["option",["ordering"]]]],[11,"lt","","",0,[[["self"],["filetime"]],["bool"]]],[11,"le","","",0,[[["self"],["filetime"]],["bool"]]],[11,"gt","","",0,[[["self"],["filetime"]],["bool"]]],[11,"ge","","",0,[[["self"],["filetime"]],["bool"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"hash","","",0,N]],"paths":[[3,"FileTime"]]};
searchIndex["firm_construction"]={"doc":"Lowers the output of the semantic analysis phase (AST,…","items":[[0,"ast","firm_construction","",N,N],[4,"AST","firm_construction::ast","",N,N],[13,"Empty","","",0,N],[13,"Program","","",0,N],[4,"ASTDiscriminants","","Auto-generated discriminant enum variants",N,N],[13,"Empty","","",1,N],[13,"Program","","",1,N],[3,"Program","","This is the top-level AST node. It stores all class…",N,N],[12,"classes","","",2,N],[12,"attrs","","",2,N],[3,"ClassDeclaration","","This AST node stores the Class declaration, which consists…",N,N],[12,"name","","",3,N],[12,"members","","",3,N],[12,"attrs","","",3,N],[3,"ClassMember","","This AST node describes a class member. Variants of class…",N,N],[12,"kind","","",4,N],[12,"name","","",4,N],[12,"attrs","","",4,N],[6,"ParameterList","","",N,N],[4,"ClassMemberKind","","A class member is either one of * `Field(type)`: a…",N,N],[13,"Field","","",5,N],[13,"Method","","",5,N],[13,"MainMethod","","",5,N],[4,"ClassMemberKindDiscriminants","","Auto-generated discriminant enum variants",N,N],[13,"Field","","",6,N],[13,"Method","","",6,N],[13,"MainMethod","","",6,N],[3,"Parameter","","This AST node represents a method parameter. A parameter…",N,N],[12,"ty","","",7,N],[12,"name","","",7,N],[3,"Type","","A `Type<'t>` is basically a `BasicType<'t>`. Optional it…",N,N],[12,"basic","","",8,N],[12,"array_depth","","Depth of the array type (number of `[]`) i.e. this means…",8,N],[4,"BasicType","","A `BasicType<'t>` is either one of * `Int`: a 32-bit…",N,N],[13,"Int","","",9,N],[13,"Boolean","","",9,N],[13,"Void","","",9,N],[13,"Custom","","",9,N],[13,"MainParam","","",9,N],[4,"BasicTypeDiscriminants","","Auto-generated discriminant enum variants",N,N],[13,"Int","","",10,N],[13,"Boolean","","",10,N],[13,"Void","","",10,N],[13,"Custom","","",10,N],[13,"MainParam","","",10,N],[3,"Block","","A `Block` in the AST is basically just a vector of…",N,N],[12,"statements","","",11,N],[4,"Stmt","","A statement can have one of the kinds: * `Block`: A block…",N,N],[13,"Block","","",12,N],[13,"Empty","","",12,N],[13,"If","","",12,N],[13,"While","","",12,N],[13,"Expression","","",12,N],[13,"Return","","",12,N],[13,"LocalVariableDeclaration","","",12,N],[4,"StmtDiscriminants","","Auto-generated discriminant enum variants",N,N],[13,"Block","","",13,N],[13,"Empty","","",13,N],[13,"If","","",13,N],[13,"While","","",13,N],[13,"Expression","","",13,N],[13,"Return","","",13,N],[13,"LocalVariableDeclaration","","",13,N],[4,"Expr","","An expression is either one of * `Assignment`: an…",N,N],[13,"Binary","","",14,N],[13,"Unary","","",14,N],[13,"MethodInvocation","","",14,N],[13,"FieldAccess","","",14,N],[13,"ArrayAccess","","",14,N],[13,"Null","","",14,N],[13,"Boolean","","",14,N],[13,"Int","","",14,N],[13,"NegInt","","",14,N],[13,"Var","","",14,N],[13,"ThisMethodInvocation","","",14,N],[13,"This","","",14,N],[13,"NewObject","","",14,N],[13,"NewArray","","",14,N],[4,"ExprDiscriminants","","Auto-generated discriminant enum variants",N,N],[13,"Binary","","",15,N],[13,"Unary","","",15,N],[13,"MethodInvocation","","",15,N],[13,"FieldAccess","","",15,N],[13,"ArrayAccess","","",15,N],[13,"Null","","",15,N],[13,"Boolean","","",15,N],[13,"Int","","",15,N],[13,"NegInt","","",15,N],[13,"Var","","",15,N],[13,"ThisMethodInvocation","","",15,N],[13,"This","","",15,N],[13,"NewObject","","",15,N],[13,"NewArray","","",15,N],[4,"BinaryOp","","Binary operations like comparisons (`==`, `!=`, `<=`,…",N,N],[13,"Assign","","",16,N],[13,"Equals","","",16,N],[13,"NotEquals","","",16,N],[13,"LessThan","","",16,N],[13,"GreaterThan","","",16,N],[13,"LessEquals","","",16,N],[13,"GreaterEquals","","",16,N],[13,"LogicalOr","","",16,N],[13,"LogicalAnd","","",16,N],[13,"Add","","",16,N],[13,"Sub","","",16,N],[13,"Mul","","",16,N],[13,"Div","","",16,N],[13,"Mod","","",16,N],[4,"UnaryOp","","One of the unary operations `!` and `-`",N,N],[13,"Not","","",17,N],[13,"Neg","","",17,N],[6,"ArgumentList","","",N,N],[4,"Attribute","","Attributes can be given to a program with `ignore…",N,N],[13,"LintLevel","","",18,N],[13,"Inline","","",18,N],[0,"ref_eq","firm_construction","",N,N],[3,"RefEq","firm_construction::ref_eq","",N,N],[12,"0","","",19,N],[3,"Options","firm_construction","Enable or disable behaviour during the lowering phase",N,N],[12,"dump_firm_graph","","",20,N],[12,"dump_class_layouts","","",20,N],[4,"FirmError","","",N,N],[13,"EmitAsmFailure","","",21,N],[12,"path","firm_construction::FirmError","",21,N],[0,"firm_program","firm_construction","",N,N],[3,"FirmProgram","firm_construction::firm_program","",N,N],[12,"classes","","",22,N],[12,"fields","","",22,N],[12,"methods","","",22,N],[12,"entities","","",22,N],[12,"runtime","","",22,N],[3,"FirmClass","","",N,N],[12,"def","","",23,N],[12,"entity","","",23,N],[3,"FirmField","","",N,N],[12,"owning_class","","",24,N],[12,"def","","",24,N],[12,"entity","","",24,N],[3,"FirmMethod","","",N,N],[12,"owning_class","","",25,N],[12,"body","","",25,N],[12,"def","","",25,N],[12,"entity","","",25,N],[12,"graph","","",25,N],[4,"FirmEntity","","",N,N],[13,"Method","","",26,N],[13,"Class","","",26,N],[13,"Field","","",26,N],[6,"FirmClassP","","",N,N],[6,"FirmFieldP","","",N,N],[6,"FirmMethodP","","",N,N],[11,"new","","",22,[[["typesystem"],["rc",["runtime"]]],["firmprogram"]]],[11,"field","","",22,[[["self"],["rc",["classfielddef"]]],["result",["firmfieldp"]]]],[11,"method","","",22,[[["self"],["rc",["classmethoddef"]]],["result",["firmmethodp"]]]],[11,"class","","",22,[[["self"],["rc",["classdef"]]],["result",["firmclassp"]]]],[11,"by_entity","","",22,[[["self"],["entity"]],["option",["firmentity"]]]],[11,"method_by_entity","","",22,[[["self"],["entity"]],["option",["firmmethodp"]]]],[0,"method_body_generator","firm_construction","",N,N],[3,"MethodBodyGenerator","firm_construction::method_body_generator","",N,N],[12,"spans","","",27,N],[11,"get_const_bool","","",27,[[["self"],["bool"]]]],[11,"gen_method","","",27,[[["self"],["spanned"]]]],[0,"program_generator","firm_construction","",N,N],[3,"Spans","firm_construction::program_generator","This struct is only for debugging.",N,N],[3,"ProgramGenerator","","",N,N],[11,"new","","",28,[[],["spans"]]],[11,"lookup_span","","",28,N],[11,"span_str","","",28,N],[11,"add_span","","",28,[[["node"],["span"]]]],[11,"add_spans","","",28,[[["hashmap"]]]],[11,"new","","",29,[[["rc",["runtime"]],["typesystem"],["typeanalysis"],["stringtable"]],["self"]]],[11,"generate","","",29,[[["self"]],["firmprogram"]]],[0,"runtime","firm_construction","",N,N],[3,"Mjrt","firm_construction::runtime","The runtime library implemented by this compiler in crate…",N,N],[3,"Runtime","","",N,N],[12,"lib","","",30,N],[12,"system_out_println","","",30,N],[12,"system_out_write","","",30,N],[12,"system_out_flush","","",30,N],[12,"system_in_read","","",30,N],[12,"new","","",30,N],[12,"dumpstack","","",30,N],[12,"null_usage","","",30,N],[12,"array_out_of_bounds","","",30,N],[12,"div_by_zero","","",30,N],[4,"RuntimeFunction","","",N,N],[13,"SystemOutPrintln","","",31,N],[13,"SystemOutWrite","","",31,N],[13,"SystemOutFlush","","",31,N],[13,"SystemInRead","","",31,N],[13,"New","","",31,N],[13,"Dumpstack","","",31,N],[13,"NullUsage","","",31,N],[13,"ArrayOutOfBounds","","",31,N],[13,"DivByZero","","",31,N],[4,"RuntimeFunctionDiscriminants","","Auto-generated discriminant enum variants",N,N],[13,"SystemOutPrintln","","",32,N],[13,"SystemOutWrite","","",32,N],[13,"SystemOutFlush","","",32,N],[13,"SystemInRead","","",32,N],[13,"New","","",32,N],[13,"Dumpstack","","",32,N],[13,"NullUsage","","",32,N],[13,"ArrayOutOfBounds","","",32,N],[13,"DivByZero","","",32,N],[8,"RTLib","","",N,N],[10,"ld_name","","",33,[[["self"],["runtimefunction"]],["str"]]],[10,"mj_main_name","","",33,[[["self"]],["str"]]],[11,"new","","",30,[[["box",["rtlib"]]],["runtime"]]],[11,"from","firm_construction::ast","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"to_string","","",10,[[["self"]],["string"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"to_string","","",13,[[["self"]],["string"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"to_string","","",15,[[["self"]],["string"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"from","firm_construction::ref_eq","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"from","firm_construction","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"to_string","","",21,[[["self"]],["string"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"as_fail","","",21,[[["self"]],["fail"]]],[11,"from","firm_construction::firm_program","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"from","firm_construction::method_body_generator","",27,[[["t"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"from","firm_construction::program_generator","",28,[[["t"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"from","firm_construction::runtime","",34,[[["t"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,N],[11,"to_string","","",32,[[["self"]],["string"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"cmp","firm_construction::ast","",6,[[["self"],["classmemberkinddiscriminants"]],["ordering"]]],[11,"eq","","",4,[[["self"],["classmember"]],["bool"]]],[11,"ne","","",4,[[["self"],["classmember"]],["bool"]]],[11,"eq","","",9,[[["self"],["basictype"]],["bool"]]],[11,"ne","","",9,[[["self"],["basictype"]],["bool"]]],[11,"eq","","",5,[[["self"],["classmemberkind"]],["bool"]]],[11,"ne","","",5,[[["self"],["classmemberkind"]],["bool"]]],[11,"eq","","",16,[[["self"],["binaryop"]],["bool"]]],[11,"eq","","",8,[[["self"],["type"]],["bool"]]],[11,"ne","","",8,[[["self"],["type"]],["bool"]]],[11,"eq","","",7,[[["self"],["parameter"]],["bool"]]],[11,"ne","","",7,[[["self"],["parameter"]],["bool"]]],[11,"eq","","",2,[[["self"],["program"]],["bool"]]],[11,"ne","","",2,[[["self"],["program"]],["bool"]]],[11,"eq","","",1,[[["self"],["astdiscriminants"]],["bool"]]],[11,"eq","","",3,[[["self"],["classdeclaration"]],["bool"]]],[11,"ne","","",3,[[["self"],["classdeclaration"]],["bool"]]],[11,"eq","","",13,[[["self"],["stmtdiscriminants"]],["bool"]]],[11,"eq","","",18,[[["self"],["attribute"]],["bool"]]],[11,"ne","","",18,[[["self"],["attribute"]],["bool"]]],[11,"eq","","",14,[[["self"],["expr"]],["bool"]]],[11,"ne","","",14,[[["self"],["expr"]],["bool"]]],[11,"eq","","",11,[[["self"],["block"]],["bool"]]],[11,"ne","","",11,[[["self"],["block"]],["bool"]]],[11,"eq","","",15,[[["self"],["exprdiscriminants"]],["bool"]]],[11,"eq","","",12,[[["self"],["stmt"]],["bool"]]],[11,"ne","","",12,[[["self"],["stmt"]],["bool"]]],[11,"eq","","",6,[[["self"],["classmemberkinddiscriminants"]],["bool"]]],[11,"eq","","",17,[[["self"],["unaryop"]],["bool"]]],[11,"eq","","",10,[[["self"],["basictypediscriminants"]],["bool"]]],[11,"eq","","",0,[[["self"],["ast"]],["bool"]]],[11,"ne","","",0,[[["self"],["ast"]],["bool"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result",["error"]]]],[11,"from","","",15,[[["expr"]],["exprdiscriminants"]]],[11,"from","","",13,[[["stmt"]],["stmtdiscriminants"]]],[11,"from","","",1,[[["ast"]],["astdiscriminants"]]],[11,"from","","",13,[[["stmt"]],["stmtdiscriminants"]]],[11,"from","","",6,[[["classmemberkind"]],["classmemberkinddiscriminants"]]],[11,"from","","",15,[[["expr"]],["exprdiscriminants"]]],[11,"from","","",6,[[["classmemberkind"]],["classmemberkinddiscriminants"]]],[11,"from","","",1,[[["ast"]],["astdiscriminants"]]],[11,"from","","",10,[[["basictype"]],["basictypediscriminants"]]],[11,"from","","",10,[[["basictype"]],["basictypediscriminants"]]],[11,"clone","","",17,[[["self"]],["unaryop"]]],[11,"clone","","",1,[[["self"]],["astdiscriminants"]]],[11,"clone","","",18,[[["self"]],["attribute"]]],[11,"clone","","",8,[[["self"]],["type"]]],[11,"clone","","",3,[[["self"]],["classdeclaration"]]],[11,"clone","","",15,[[["self"]],["exprdiscriminants"]]],[11,"clone","","",2,[[["self"]],["program"]]],[11,"clone","","",6,[[["self"]],["classmemberkinddiscriminants"]]],[11,"clone","","",7,[[["self"]],["parameter"]]],[11,"clone","","",13,[[["self"]],["stmtdiscriminants"]]],[11,"clone","","",12,[[["self"]],["stmt"]]],[11,"clone","","",5,[[["self"]],["classmemberkind"]]],[11,"clone","","",4,[[["self"]],["classmember"]]],[11,"clone","","",9,[[["self"]],["basictype"]]],[11,"clone","","",14,[[["self"]],["expr"]]],[11,"clone","","",11,[[["self"]],["block"]]],[11,"clone","","",10,[[["self"]],["basictypediscriminants"]]],[11,"clone","","",16,[[["self"]],["binaryop"]]],[11,"partial_cmp","","",6,[[["self"],["classmemberkinddiscriminants"]],["option",["ordering"]]]],[11,"hash","","",6,N],[11,"eq","firm_construction::ref_eq","",19,[[["self"],["refeq"]],["bool"]]],[11,"eq","","",19,[[["self"],["refeq"]],["bool"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result",["error"]]]],[11,"hash","","",19,N],[11,"hash","","",19,N],[11,"ld_name","firm_construction::runtime","",34,[[["self"],["runtimefunction"]],["str"]]],[11,"mj_main_name","","",34,[[["self"]],["str"]]],[11,"eq","","",32,[[["self"],["runtimefunctiondiscriminants"]],["bool"]]],[11,"from","","",32,[[["runtimefunction"]],["runtimefunctiondiscriminants"]]],[11,"from","","",32,[[["runtimefunction"]],["runtimefunctiondiscriminants"]]],[11,"from","","",31,[[["builtinmethodbody"]],["runtimefunction"]]],[11,"clone","firm_construction::firm_program","",26,[[["self"]],["self"]]],[11,"clone","firm_construction::runtime","",32,[[["self"]],["runtimefunctiondiscriminants"]]],[11,"clone","firm_construction","",20,[[["self"]],["options"]]],[11,"default","firm_construction::program_generator","",28,[[],["spans"]]],[11,"default","firm_construction","",20,[[],["options"]]],[11,"fmt","firm_construction::runtime","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","firm_construction","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","firm_construction::runtime","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","firm_construction","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"cause","","",21,[[["self"]],["option",["fail"]]]],[11,"backtrace","","",21,[[["self"]],["option",["backtrace"]]]],[11,"is_method","firm_construction::ast","",5,[[["self"]],["bool"]]],[11,"method_params","","",5,[[["self"]],["option",["spanned"]]]],[11,"method_body","","",5,[[["self"]],["option",["spanned"]]]]],"paths":[[4,"AST"],[4,"ASTDiscriminants"],[3,"Program"],[3,"ClassDeclaration"],[3,"ClassMember"],[4,"ClassMemberKind"],[4,"ClassMemberKindDiscriminants"],[3,"Parameter"],[3,"Type"],[4,"BasicType"],[4,"BasicTypeDiscriminants"],[3,"Block"],[4,"Stmt"],[4,"StmtDiscriminants"],[4,"Expr"],[4,"ExprDiscriminants"],[4,"BinaryOp"],[4,"UnaryOp"],[4,"Attribute"],[3,"RefEq"],[3,"Options"],[4,"FirmError"],[3,"FirmProgram"],[3,"FirmClass"],[3,"FirmField"],[3,"FirmMethod"],[4,"FirmEntity"],[3,"MethodBodyGenerator"],[3,"Spans"],[3,"ProgramGenerator"],[3,"Runtime"],[4,"RuntimeFunction"],[4,"RuntimeFunctionDiscriminants"],[8,"RTLib"],[3,"Mjrt"]]};
searchIndex["fixedbitset"]={"doc":"`FixedBitSet` is a simple fixed size set of bits.","items":[[3,"FixedBitSet","fixedbitset","`FixedBitSet` is a simple fixed size set of bits that each…",N,N],[3,"Difference","","An iterator producing elements in the difference of two…",N,N],[3,"Intersection","","An iterator producing elements in the intersection of two…",N,N],[3,"Union","","An iterator producing elements in the union of two sets.",N,N],[3,"Ones","","An  iterator producing the indices of the set bit in a set.",N,N],[8,"IndexRange","","IndexRange is implemented by Rust's built-in range types,…",N,N],[11,"start","","Start index (inclusive)",0,[[["self"]],["option"]]],[11,"end","","End index (exclusive)",0,[[["self"]],["option"]]],[11,"with_capacity","","Create a new FixedBitSet with a specific number of bits,…",1,[[["usize"]],["self"]]],[11,"grow","","Grow capacity to bits, all new bits initialized to zero",1,[[["self"],["usize"]]]],[11,"len","","Return the length of the `FixedBitSet` in bits.",1,[[["self"]],["usize"]]],[11,"contains","","Return true if the bit is enabled in the FixedBitSet,…",1,[[["self"],["usize"]],["bool"]]],[11,"clear","","Clear all bits.",1,[[["self"]]]],[11,"insert","","Enable `bit`.",1,[[["self"],["usize"]]]],[11,"put","","Enable `bit`, and return its previous value.",1,[[["self"],["usize"]],["bool"]]],[11,"set","","Panics if bit is out of bounds.",1,[[["self"],["usize"],["bool"]]]],[11,"copy_bit","","Copies boolean value from specified bit to the specified…",1,[[["self"],["usize"],["usize"]]]],[11,"count_ones","","Count the number of set bits in the given bit range.",1,[[["self"],["t"]],["usize"]]],[11,"set_range","","Sets every bit in the given range to the given state…",1,[[["self"],["t"],["bool"]]]],[11,"insert_range","","Enables every bit in the given range.",1,[[["self"],["t"]]]],[11,"as_slice","","View the bitset as a slice of `u32` blocks",1,N],[11,"as_mut_slice","","View the bitset as a mutable slice of `u32` blocks.…",1,N],[11,"ones","","Iterates over all enabled bits.",1,[[["self"]],["ones"]]],[11,"intersection","","Returns a lazy iterator over the intersection of two…",1,[[["self"],["fixedbitset"]],["intersection"]]],[11,"union","","Returns a lazy iterator over the union of two…",1,[[["self"],["fixedbitset"]],["union"]]],[11,"difference","","Returns a lazy iterator over the difference of two…",1,[[["self"],["fixedbitset"]],["difference"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into_iter","","",2,[[["self"]],["i"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into_iter","","",3,[[["self"]],["i"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into_iter","","",4,[[["self"]],["i"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into_iter","","",5,[[["self"]],["i"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"cmp","","",1,[[["self"],["fixedbitset"]],["ordering"]]],[11,"eq","","",1,[[["self"],["fixedbitset"]],["bool"]]],[11,"ne","","",1,[[["self"],["fixedbitset"]],["bool"]]],[11,"clone","","",1,[[["self"]],["self"]]],[11,"extend","","",1,[[["self"],["i"]]]],[11,"partial_cmp","","",1,[[["self"],["fixedbitset"]],["option",["ordering"]]]],[11,"lt","","",1,[[["self"],["fixedbitset"]],["bool"]]],[11,"le","","",1,[[["self"],["fixedbitset"]],["bool"]]],[11,"gt","","",1,[[["self"],["fixedbitset"]],["bool"]]],[11,"ge","","",1,[[["self"],["fixedbitset"]],["bool"]]],[11,"next","","",2,[[["self"]],["option"]]],[11,"next","","",3,[[["self"]],["option"]]],[11,"next","","",4,[[["self"]],["option"]]],[11,"next","","",5,[[["self"]],["option"]]],[11,"default","","",1,[[],["fixedbitset"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"index","","",1,[[["self"],["usize"]],["bool"]]],[11,"hash","","",1,N],[11,"from_iter","","",1,[[["i"]],["self"]]],[11,"start","","Start index (inclusive)",0,[[["self"]],["option"]]],[11,"end","","End index (exclusive)",0,[[["self"]],["option"]]]],"paths":[[8,"IndexRange"],[3,"FixedBitSet"],[3,"Difference"],[3,"Intersection"],[3,"Union"],[3,"Ones"]]};
searchIndex["futures"]={"doc":"Zero-cost Futures in Rust","items":[[4,"Async","futures","Return type of future, indicating whether a value is ready…",N,N],[13,"Ready","","Represents that a value is immediately ready.",0,N],[13,"NotReady","","Represents that a value is not ready yet, but may be so…",0,N],[4,"AsyncSink","","The result of an asynchronous attempt to send a value to a…",N,N],[13,"Ready","","The `start_send` attempt succeeded, so the sending process…",1,N],[13,"NotReady","","The `start_send` attempt failed due to the sink being…",1,N],[11,"map","","Change the success value of this `Async` with the closure…",0,[[["self"],["f"]],["async"]]],[11,"is_ready","","Returns whether this is `Async::Ready`",0,[[["self"]],["bool"]]],[11,"is_not_ready","","Returns whether this is `Async::NotReady`",0,[[["self"]],["bool"]]],[11,"map","","Change the NotReady value of this `AsyncSink` with the…",1,[[["self"],["f"]],["asyncsink"]]],[11,"is_ready","","Returns whether this is `AsyncSink::Ready`",1,[[["self"]],["bool"]]],[11,"is_not_ready","","Returns whether this is `AsyncSink::NotReady`",1,[[["self"]],["bool"]]],[0,"future","","Futures",N,N],[3,"Empty","futures::future","A future which is never resolved.",N,N],[3,"Lazy","","A future which defers creation of the actual future until…",N,N],[3,"PollFn","","A future which adapts a function returning `Poll`.",N,N],[3,"FutureResult","","A future representing a value that is immediately ready.",N,N],[3,"LoopFn","","A future implementing a tail-recursive loop.",N,N],[3,"AndThen","","Future for the `and_then` combinator, chaining a…",N,N],[3,"Flatten","","Future for the `flatten` combinator, flattening a…",N,N],[3,"FlattenStream","","Future for the `flatten_stream` combinator, flattening a…",N,N],[3,"Fuse","","A future which \"fuses\" a future once it's been resolved.",N,N],[3,"IntoStream","","Future that forwards one element from the underlying…",N,N],[3,"Join","","Future for the `join` combinator, waiting for two futures…",N,N],[3,"Join3","","Future for the `join3` combinator, waiting for three…",N,N],[3,"Join4","","Future for the `join4` combinator, waiting for four…",N,N],[3,"Join5","","Future for the `join5` combinator, waiting for five…",N,N],[3,"Map","","Future for the `map` combinator, changing the type of a…",N,N],[3,"MapErr","","Future for the `map_err` combinator, changing the error…",N,N],[3,"FromErr","","Future for the `from_err` combinator, changing the error…",N,N],[3,"OrElse","","Future for the `or_else` combinator, chaining a…",N,N],[3,"Select","","Future for the `select` combinator, waiting for one of two…",N,N],[3,"SelectNext","","Future yielded as the second result in a `Select` future.",N,N],[3,"Select2","","Future for the `select2` combinator, waiting for one of…",N,N],[3,"Then","","Future for the `then` combinator, chaining computations on…",N,N],[3,"Inspect","","Do something with the item of a future, passing it on.",N,N],[3,"CatchUnwind","","Future for the `catch_unwind` combinator.",N,N],[3,"JoinAll","","A future which takes a list of futures and resolves with a…",N,N],[3,"SelectAll","","Future for the `select_all` combinator, waiting for one of…",N,N],[3,"SelectOk","","Future for the `select_ok` combinator, waiting for one of…",N,N],[3,"Shared","","A future that is cloneable and can be polled in multiple…",N,N],[3,"SharedItem","","A wrapped item of the original future that is cloneable…",N,N],[3,"SharedError","","A wrapped error of the original future that is cloneable…",N,N],[3,"ExecuteError","","Errors returned from the `Spawn::spawn` function.",N,N],[4,"Loop","","The status of a `loop_fn` loop.",N,N],[13,"Break","","Indicates that the loop has completed with output `T`.",2,N],[13,"Continue","","Indicates that the loop function should be called again…",2,N],[4,"Either","","Combines two different futures yielding the same item and…",N,N],[13,"A","","First branch of the type",3,N],[13,"B","","Second branch of the type",3,N],[4,"ExecuteErrorKind","","Kinds of errors that can be returned from the…",N,N],[13,"Shutdown","","This executor has shut down and will no longer accept new…",4,N],[13,"NoCapacity","","This executor has no more capacity to run more futures.…",4,N],[5,"empty","","Creates a future which never resolves, representing a…",N,[[],["empty"]]],[5,"lazy","","Creates a new future which will eventually be the same as…",N,[[["f"]],["lazy"]]],[5,"poll_fn","","Creates a new future wrapping around a function returning…",N,[[["f"]],["pollfn"]]],[5,"result","","Creates a new \"leaf future\" which will resolve with the…",N,[[["result"]],["futureresult"]]],[5,"ok","","Creates a \"leaf future\" from an immediate value of a…",N,[[["t"]],["futureresult"]]],[5,"err","","Creates a \"leaf future\" from an immediate value of a…",N,[[["e"]],["futureresult"]]],[5,"loop_fn","","Creates a new future implementing a tail-recursive loop.",N,[[["s"],["f"]],["loopfn"]]],[5,"join_all","","Creates a future which represents a collection of the…",N,[[["i"]],["joinall"]]],[5,"select_all","","Creates a new future which will select over a list of…",N,[[["i"]],["selectall"]]],[5,"select_ok","","Creates a new future which will select the first…",N,[[["i"]],["selectok"]]],[11,"is_done","","Returns whether the underlying future has finished or not.",5,[[["self"]],["bool"]]],[11,"split","","Splits out the homogeneous type from an either of tuples.",3,N],[11,"peek","","If any clone of this `Shared` has completed execution,…",6,[[["self"]],["option",["result"]]]],[8,"Future","","Trait for types which are a placeholder of a value that…",N,N],[16,"Item","","The type of value that this future will resolved with if…",7,N],[16,"Error","","The type of error that this future will resolve with if it…",7,N],[10,"poll","","Query this future to see if its value has become…",7,[[["self"]],["poll"]]],[11,"wait","","Block the current thread until this future is resolved.",7,[[["self"]],["result"]]],[11,"map","","Map this future's result to a different type, returning a…",7,[[["self"],["f"]],["map"]]],[11,"map_err","","Map this future's error to a different error, returning a…",7,[[["self"],["f"]],["maperr"]]],[11,"from_err","","Map this future's error to any error implementing `From`…",7,[[["self"]],["fromerr"]]],[11,"then","","Chain on a computation for when a future finished, passing…",7,[[["self"],["f"]],["then"]]],[11,"and_then","","Execute another future after this one has resolved…",7,[[["self"],["f"]],["andthen"]]],[11,"or_else","","Execute another future if this one resolves with an error.",7,[[["self"],["f"]],["orelse"]]],[11,"select","","Waits for either one of two futures to complete.",7,[[["self"],["b"]],["select"]]],[11,"select2","","Waits for either one of two differently-typed futures to…",7,[[["self"],["b"]],["select2"]]],[11,"join","","Joins the result of two futures, waiting for them both to…",7,[[["self"],["b"]],["join"]]],[11,"join3","","Same as `join`, but with more futures.",7,[[["self"],["b"],["c"]],["join3"]]],[11,"join4","","Same as `join`, but with more futures.",7,[[["self"],["b"],["c"],["d"]],["join4"]]],[11,"join5","","Same as `join`, but with more futures.",7,[[["self"],["b"],["c"],["d"],["e"]],["join5"]]],[11,"into_stream","","Convert this future into a single element stream.",7,[[["self"]],["intostream"]]],[11,"flatten","","Flatten the execution of this future when the successful…",7,[[["self"]],["flatten"]]],[11,"flatten_stream","","Flatten the execution of this future when the successful…",7,[[["self"]],["flattenstream"]]],[11,"fuse","","Fuse a future such that `poll` will never again be called…",7,[[["self"]],["fuse"]]],[11,"inspect","","Do something with the item of a future, passing it on.",7,[[["self"],["f"]],["inspect"]]],[11,"catch_unwind","","Catches unwinding panics while polling the future.",7,[[["self"]],["catchunwind"]]],[11,"shared","","Create a cloneable handle to this future where all handles…",7,[[["self"]],["shared"]]],[8,"IntoFuture","","Class of types which can be converted into a future.",N,N],[16,"Future","","The future that this type can be converted into.",8,N],[16,"Item","","The item that the future may resolve with.",8,N],[16,"Error","","The error that the future may resolve with.",8,N],[10,"into_future","","Consumes this object and produces a future.",8,N],[8,"FutureFrom","","Asynchronous conversion from a type `T`.",N,N],[16,"Future","","The future for the conversion.",9,N],[16,"Error","","Possible errors during conversion.",9,N],[10,"future_from","","Consume the given value, beginning the conversion.",9,N],[8,"Executor","","A trait for types which can spawn fresh futures.",N,N],[10,"execute","","Spawns a future to run on this `Executor`, typically in…",10,[[["self"],["f"]],["result",["executeerror"]]]],[11,"new","","Create a new `ExecuteError`",11,[[["executeerrorkind"],["f"]],["executeerror"]]],[11,"kind","","Returns the associated reason for the error",11,[[["self"]],["executeerrorkind"]]],[11,"into_future","","Consumes self and returns the original future that was…",11,[[["self"]],["f"]]],[0,"stream","futures","Asynchronous streams",N,N],[3,"Iter","futures::stream","A stream which is just a shim over an underlying instance…",N,N],[3,"IterStream","","A stream which is just a shim over an underlying instance…",N,N],[3,"IterOk","","A stream which is just a shim over an underlying instance…",N,N],[3,"IterResult","","A stream which is just a shim over an underlying instance…",N,N],[3,"Repeat","","Stream that produces the same element repeatedly.",N,N],[3,"AndThen","","A stream combinator which chains a computation onto values…",N,N],[3,"Chain","","An adapter for chaining the output of two streams.",N,N],[3,"Concat","","A stream combinator to concatenate the results of a stream…",N,N],[3,"Concat2","","A stream combinator to concatenate the results of a stream…",N,N],[3,"Empty","","A stream which contains no elements.",N,N],[3,"Filter","","A stream combinator used to filter the results of a stream…",N,N],[3,"FilterMap","","A combinator used to filter the results of a stream and…",N,N],[3,"Flatten","","A combinator used to flatten a stream-of-streams into one…",N,N],[3,"Fold","","A future used to collect all the results of a stream into…",N,N],[3,"ForEach","","A stream combinator which executes a unit closure over…",N,N],[3,"FromErr","","A stream combinator to change the error type of a stream.",N,N],[3,"Fuse","","A stream which \"fuse\"s a stream once it's terminated.",N,N],[3,"StreamFuture","","A combinator used to temporarily convert a stream into a…",N,N],[3,"Inspect","","Do something with the items of a stream, passing it on.",N,N],[3,"InspectErr","","Do something with the error of a stream, passing it on.",N,N],[3,"Map","","A stream combinator which will change the type of a stream…",N,N],[3,"MapErr","","A stream combinator which will change the error type of a…",N,N],[3,"Merge","","An adapter for merging the output of two streams.",N,N],[3,"Once","","A stream which emits single element and then EOF.",N,N],[3,"OrElse","","A stream combinator which chains a computation onto errors…",N,N],[3,"Peekable","","A `Stream` that implements a `peek` method.",N,N],[3,"PollFn","","A stream which adapts a function returning `Poll`.",N,N],[3,"Select","","An adapter for merging the output of two streams.",N,N],[3,"Skip","","A stream combinator which skips a number of elements…",N,N],[3,"SkipWhile","","A stream combinator which skips elements of a stream while…",N,N],[3,"Take","","A stream combinator which returns a maximum number of…",N,N],[3,"TakeWhile","","A stream combinator which takes elements from a stream…",N,N],[3,"Then","","A stream combinator which chains a computation onto each…",N,N],[3,"Unfold","","A stream which creates futures, polls them and return…",N,N],[3,"Zip","","An adapter for merging the output of two streams.",N,N],[3,"Forward","","Future for the `Stream::forward` combinator, which sends a…",N,N],[3,"Buffered","","An adaptor for a stream of futures to execute the futures…",N,N],[3,"BufferUnordered","","An adaptor for a stream of futures to execute the futures…",N,N],[3,"CatchUnwind","","Stream for the `catch_unwind` combinator.",N,N],[3,"Chunks","","An adaptor that chunks up elements in a vector.",N,N],[3,"Collect","","A future which collects all of the values of a stream into…",N,N],[3,"Wait","","A stream combinator which converts an asynchronous stream…",N,N],[3,"SplitStream","","A `Stream` part of the split pair",N,N],[3,"SplitSink","","A `Sink` part of the split pair",N,N],[3,"ReuniteError","","Error indicating a `SplitSink<S>` and `SplitStream<S>`…",N,N],[12,"0","","",12,N],[12,"1","","",12,N],[3,"FuturesOrdered","","An unbounded queue of futures.",N,N],[4,"MergedItem","","An item returned from a merge stream, which represents an…",N,N],[13,"First","","An item from the first stream",13,N],[13,"Second","","An item from the second stream",13,N],[13,"Both","","Items from both streams",13,N],[5,"iter","","Converts an `Iterator` over `Result`s into a `Stream`…",N,[[["j"]],["iter"]]],[5,"iter_ok","","Converts an `Iterator` into a `Stream` which is always…",N,[[["i"]],["iterok"]]],[5,"iter_result","","Converts an `Iterator` over `Result`s into a `Stream`…",N,[[["j"]],["iterresult"]]],[5,"repeat","","Create a stream which produces the same item repeatedly.",N,[[["t"]],["repeat"]]],[5,"empty","","Creates a stream which contains no elements.",N,[[],["empty"]]],[5,"once","","Creates a stream of single element",N,[[["result"]],["once"]]],[5,"poll_fn","","Creates a new stream wrapping around a function returning…",N,[[["f"]],["pollfn"]]],[5,"unfold","","Creates a `Stream` from a seed and a closure returning a…",N,[[["t"],["f"]],["unfold"]]],[5,"futures_ordered","","Converts a list of futures into a `Stream` of results from…",N,[[["i"]],["futuresordered"]]],[5,"futures_unordered","","Converts a list of futures into a `Stream` of results from…",N,[[["i"]],["futuresunordered"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",14,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",14,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",14,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",15,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",15,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",15,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",16,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",16,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",16,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",17,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",17,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",17,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",18,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",18,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",18,[[["self"]],["s"]]],[11,"is_done","","Returns whether the underlying stream has finished or not.",19,[[["self"]],["bool"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",19,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",19,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",19,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",20,[[["self"]],["option"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",20,[[["self"]],["option"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",20,[[["self"]],["option"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",21,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",21,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",21,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",22,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",22,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",22,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",23,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",23,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",23,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",24,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",24,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",24,[[["self"]],["s"]]],[11,"peek","","Peek retrieves a reference to the next item in the stream.",25,[[["self"]],["poll",["option"]]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",26,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",26,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",26,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",27,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",27,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",27,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",28,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",28,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",28,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",29,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",29,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",29,[[["self"]],["s"]]],[11,"sink_ref","","Get a shared reference to the inner sink. If this…",30,[[["self"]],["option"]]],[11,"sink_mut","","Get a mutable reference to the inner sink. If this…",30,[[["self"]],["option"]]],[11,"stream_ref","","Get a shared reference to the inner stream. If this…",30,[[["self"]],["option"]]],[11,"stream_mut","","Get a mutable reference to the inner stream. If this…",30,[[["self"]],["option"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",31,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",31,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",31,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",32,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",32,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",32,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",33,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",33,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",33,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",34,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",34,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",34,[[["self"]],["s"]]],[11,"reunite","","Attempts to put the two \"halves\" of a split `Stream +…",35,[[["self"],["splitsink"]],["result",["reuniteerror"]]]],[11,"reunite","","Attempts to put the two \"halves\" of a split `Stream +…",36,[[["self"],["splitstream"]],["result",["reuniteerror"]]]],[0,"futures_unordered","","An unbounded set of futures.",N,N],[3,"FuturesUnordered","futures::stream::futures_unordered","An unbounded set of futures.",N,N],[3,"IterMut","","Mutable iterator over all futures in the unordered set.",N,N],[11,"new","","Constructs a new, empty `FuturesUnordered`",37,[[],["futuresunordered"]]],[11,"len","","Returns the number of futures contained in the set.",37,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if the set contains no futures",37,[[["self"]],["bool"]]],[11,"push","","Push a future into the set.",37,[[["self"],["t"]]]],[11,"iter_mut","","Returns an iterator that allows modifying each future in…",37,[[["self"]],["itermut"]]],[11,"new","futures::stream","Constructs a new, empty `FuturesOrdered`",38,[[],["futuresordered"]]],[11,"len","","Returns the number of futures contained in the queue.",38,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if the queue contains no futures",38,[[["self"]],["bool"]]],[11,"push","","Push a future into the queue.",38,[[["self"],["t"]]]],[8,"Stream","","A stream of values, not all of which may have been…",N,N],[16,"Item","","The type of item this stream will yield on success.",39,N],[16,"Error","","The type of error this stream may generate.",39,N],[10,"poll","","Attempt to pull out the next value of this stream,…",39,[[["self"]],["poll",["option"]]]],[11,"wait","","Creates an iterator which blocks the current thread until…",39,[[["self"]],["wait"]]],[11,"into_future","","Converts this stream into a `Future`.",39,[[["self"]],["streamfuture"]]],[11,"map","","Converts a stream of type `T` to a stream of type `U`.",39,[[["self"],["f"]],["map"]]],[11,"map_err","","Converts a stream of error type `T` to a stream of error…",39,[[["self"],["f"]],["maperr"]]],[11,"filter","","Filters the values produced by this stream according to…",39,[[["self"],["f"]],["filter"]]],[11,"filter_map","","Filters the values produced by this stream while…",39,[[["self"],["f"]],["filtermap"]]],[11,"then","","Chain on a computation for when a value is ready, passing…",39,[[["self"],["f"]],["then"]]],[11,"and_then","","Chain on a computation for when a value is ready, passing…",39,[[["self"],["f"]],["andthen"]]],[11,"or_else","","Chain on a computation for when an error happens, passing…",39,[[["self"],["f"]],["orelse"]]],[11,"collect","","Collect all of the values of this stream into a vector,…",39,[[["self"]],["collect"]]],[11,"concat2","","Concatenate all results of a stream into a single…",39,[[["self"]],["concat2"]]],[11,"concat","","Concatenate all results of a stream into a single…",39,[[["self"]],["concat"]]],[11,"fold","","Execute an accumulating computation over a stream,…",39,[[["self"],["t"],["f"]],["fold"]]],[11,"flatten","","Flattens a stream of streams into just one continuous…",39,[[["self"]],["flatten"]]],[11,"skip_while","","Skip elements on this stream while the predicate provided…",39,[[["self"],["p"]],["skipwhile"]]],[11,"take_while","","Take elements from this stream while the predicate…",39,[[["self"],["p"]],["takewhile"]]],[11,"for_each","","Runs this stream to completion, executing the provided…",39,[[["self"],["f"]],["foreach"]]],[11,"from_err","","Map this stream's error to any error implementing `From`…",39,[[["self"]],["fromerr"]]],[11,"take","","Creates a new stream of at most `amt` items of the…",39,[[["self"],["u64"]],["take"]]],[11,"skip","","Creates a new stream which skips `amt` items of the…",39,[[["self"],["u64"]],["skip"]]],[11,"fuse","","Fuse a stream such that `poll` will never again be called…",39,[[["self"]],["fuse"]]],[11,"by_ref","","Borrows a stream, rather than consuming it.",39,[[["self"]],["self"]]],[11,"catch_unwind","","Catches unwinding panics while polling the stream.",39,[[["self"]],["catchunwind"]]],[11,"buffered","","An adaptor for creating a buffered list of pending futures.",39,[[["self"],["usize"]],["buffered"]]],[11,"buffer_unordered","","An adaptor for creating a buffered list of pending futures…",39,[[["self"],["usize"]],["bufferunordered"]]],[11,"merge","","An adapter for merging the output of two streams.",39,[[["self"],["s"]],["merge"]]],[11,"zip","","An adapter for zipping two streams together.",39,[[["self"],["s"]],["zip"]]],[11,"chain","","Adapter for chaining two stream.",39,[[["self"],["s"]],["chain"]]],[11,"peekable","","Creates a new stream which exposes a `peek` method.",39,[[["self"]],["peekable"]]],[11,"chunks","","An adaptor for chunking up items of the stream inside a…",39,[[["self"],["usize"]],["chunks"]]],[11,"select","","Creates a stream that selects the next element from either…",39,[[["self"],["s"]],["select"]]],[11,"forward","","A future that completes after the given stream has been…",39,[[["self"],["s"]],["forward"]]],[11,"split","","Splits this `Stream + Sink` object into separate `Stream`…",39,N],[11,"inspect","","Do something with each item of this stream, afterwards…",39,[[["self"],["f"]],["inspect"]]],[11,"inspect_err","","Do something with the error of this stream, afterwards…",39,[[["self"],["f"]],["inspecterr"]]],[0,"sink","futures","Asynchronous sinks",N,N],[3,"Buffer","futures::sink","Sink for the `Sink::buffer` combinator, which buffers up…",N,N],[3,"Wait","","A sink combinator which converts an asynchronous sink to a…",N,N],[3,"With","","Sink for the `Sink::with` combinator, chaining a…",N,N],[3,"WithFlatMap","","Sink for the `Sink::with_flat_map` combinator, chaining a…",N,N],[3,"Flush","","Future for the `Sink::flush` combinator, which polls the…",N,N],[3,"Send","","Future for the `Sink::send` combinator, which sends a…",N,N],[3,"SendAll","","Future for the `Sink::send_all` combinator, which sends a…",N,N],[3,"SinkMapErr","","Sink for the `Sink::sink_map_err` combinator.",N,N],[3,"SinkFromErr","","A sink combinator to change the error type of a sink.",N,N],[3,"Fanout","","Sink that clones incoming items and forwards them to two…",N,N],[11,"get_ref","","Get a shared reference to the inner sink.",40,[[["self"]],["s"]]],[11,"get_mut","","Get a mutable reference to the inner sink.",40,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",40,[[["self"]],["s"]]],[11,"get_ref","","Get a shared reference to the inner sink.",41,[[["self"]],["s"]]],[11,"get_mut","","Get a mutable reference to the inner sink.",41,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",41,[[["self"]],["s"]]],[11,"get_ref","","Get a shared reference to the inner sink.",42,[[["self"]],["s"]]],[11,"get_mut","","Get a mutable reference to the inner sink.",42,[[["self"]],["s"]]],[11,"into_inner","","Consume the `Flush` and return the inner sink.",42,[[["self"]],["s"]]],[11,"get_ref","","Get a shared reference to the inner sink.",43,[[["self"]],["s"]]],[11,"get_mut","","Get a mutable reference to the inner sink.",43,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",43,[[["self"]],["s"]]],[11,"get_ref","","Get a shared reference to the inner sink.",44,[[["self"]],["s"]]],[11,"get_mut","","Get a mutable reference to the inner sink.",44,[[["self"]],["s"]]],[11,"get_ref","","Get a shared reference to the inner sink.",45,[[["self"]],["s"]]],[11,"get_mut","","Get a mutable reference to the inner sink.",45,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",45,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying sinks.",46,N],[11,"get_ref","","Get a shared reference to the inner sink.",47,[[["self"]],["s"]]],[11,"get_mut","","Get a mutable reference to the inner sink.",47,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",47,[[["self"]],["s"]]],[11,"send","","Sends a value to this sink, blocking the current thread…",48,N],[11,"flush","","Flushes any buffered data in this sink, blocking the…",48,[[["self"]],["result"]]],[11,"close","","Close this sink, blocking the current thread until it's…",48,[[["self"]],["result"]]],[6,"BoxSink","","A type alias for `Box<Sink + Send>`",N,N],[8,"Sink","","A `Sink` is a value into which other values can be sent,…",N,N],[16,"SinkItem","","The type of value that the sink accepts.",49,N],[16,"SinkError","","The type of value produced by the sink when an error occurs.",49,N],[10,"start_send","","Begin the process of sending a value to the sink.",49,N],[10,"poll_complete","","Flush all output from this sink, if necessary.",49,[[["self"]],["poll"]]],[11,"close","","A method to indicate that no more values will ever be…",49,[[["self"]],["poll"]]],[11,"wait","","Creates a new object which will produce a synchronous sink.",49,[[["self"]],["wait"]]],[11,"with","","Composes a function in front of the sink.",49,[[["self"],["f"]],["with"]]],[11,"with_flat_map","","Composes a function in front of the sink.",49,[[["self"],["f"]],["withflatmap"]]],[11,"sink_map_err","","Transforms the error returned by the sink.",49,[[["self"],["f"]],["sinkmaperr"]]],[11,"sink_from_err","","Map this sink's error to any error implementing `From` for…",49,[[["self"]],["sinkfromerr"]]],[11,"buffer","","Adds a fixed-size buffer to the current sink.",49,[[["self"],["usize"]],["buffer"]]],[11,"fanout","","Fanout items to multiple sinks.",49,[[["self"],["s"]],["fanout"]]],[11,"flush","","A future that completes when the sink has finished…",49,[[["self"]],["flush"]]],[11,"send","","A future that completes after the given item has been…",49,N],[11,"send_all","","A future that completes after the given stream has been…",49,[[["self"],["s"]],["sendall"]]],[0,"task","futures","Tasks used to drive a future computation",N,N],[3,"Task","futures::task","A handle to a \"task\", which represents a single…",N,N],[3,"AtomicTask","","A synchronization primitive for task notification.",N,N],[3,"LocalKey","","A key for task-local data stored in a future's task.",N,N],[3,"UnparkEvent","","A set insertion to trigger upon `unpark`.",N,N],[5,"current","","Returns a handle to the current task to call `notify` at a…",N,[[],["task"]]],[5,"init","","Initialize the `futures` task system.",N,N],[5,"with_unpark_event","","For the duration of the given callback, add an \"unpark…",N,[[["unparkevent"],["f"]],["r"]]],[8,"EventSet","","A concurrent set which allows for the insertion of `usize`…",N,N],[10,"insert","","Insert the given ID into the set",50,[[["self"],["usize"]]]],[0,"executor","futures","Executors",N,N],[3,"Spawn","futures::executor","Representation of a spawned future/stream.",N,N],[3,"NotifyHandle","","A `NotifyHandle` is the core value through which…",N,N],[5,"spawn","","Spawns a future or stream, returning it and the new task…",N,[[["t"]],["spawn"]]],[5,"with_notify","","Sets the `NotifyHandle` of the current task for the…",N,[[["t"],["usize"],["f"]],["r"]]],[8,"Notify","","A trait which represents a sink of notifications that a…",N,N],[10,"notify","","Indicates that an associated future and/or task are ready…",51,[[["self"],["usize"]]]],[11,"clone_id","","This function is called whenever a new copy of `id` is…",51,[[["self"],["usize"]],["usize"]]],[11,"drop_id","","All instances of `Task` store an `id` that they're going…",51,[[["self"],["usize"]]]],[8,"UnsafeNotify","","An unsafe trait for implementing custom forms of memory…",N,N],[10,"clone_raw","","Creates a new `NotifyHandle` from this instance of…",52,[[["self"]],["notifyhandle"]]],[10,"drop_raw","","Drops this instance of `UnsafeNotify`, deallocating…",52,[[["self"]]]],[0,"sync","futures","Future-aware synchronization",N,N],[3,"BiLock","futures::sync","A type of futures-powered synchronization primitive which…",N,N],[3,"BiLockGuard","","Returned RAII guard from the `poll_lock` method.",N,N],[3,"BiLockAcquire","","Future returned by `BiLock::lock` which will resolve when…",N,N],[3,"BiLockAcquired","","Resolved value of the `BiLockAcquire<T>` future.",N,N],[0,"oneshot","","A one-shot, futures-aware channel",N,N],[3,"Receiver","futures::sync::oneshot","A future representing the completion of a computation…",N,N],[3,"Sender","","Represents the completion half of a oneshot through which…",N,N],[3,"Canceled","","Error returned from a `Receiver<T>` whenever the…",N,N],[3,"SpawnHandle","","Handle returned from the `spawn` function.",N,N],[3,"Execute","","Type of future which `Execute` instances below must be…",N,N],[5,"channel","","Creates a new futures-aware, one-shot channel.",N,N],[5,"spawn","","Spawns a `future` onto the instance of `Executor`…",N,[[["f"],["e"]],["spawnhandle"]]],[5,"spawn_fn","","Spawns a function `f` onto the `Spawn` instance provided…",N,[[["f"],["e"]],["spawnhandle"]]],[11,"send","","Completes this oneshot with a successful result.",53,[[["self"],["t"]],["result"]]],[11,"poll_cancel","","Polls this `Sender` half to detect whether the `Receiver`…",53,[[["self"]],["poll"]]],[11,"is_canceled","","Tests to see whether this `Sender`'s corresponding…",53,[[["self"]],["bool"]]],[11,"close","","Gracefully close this receiver, preventing sending any…",54,[[["self"]]]],[11,"try_recv","","Attempts to receive a message outside of the context of a…",54,[[["self"]],["result",["option","canceled"]]]],[11,"forget","","Drop this future without canceling the underlying future.",55,[[["self"]]]],[0,"mpsc","futures::sync","A multi-producer, single-consumer, futures-aware, FIFO…",N,N],[3,"Sender","futures::sync::mpsc","The transmission end of a channel which is used to send…",N,N],[3,"UnboundedSender","","The transmission end of a channel which is used to send…",N,N],[3,"Receiver","","The receiving end of a channel which implements the…",N,N],[3,"UnboundedReceiver","","The receiving end of a channel which implements the…",N,N],[3,"SendError","","Error type for sending, used when the receiving end of a…",N,N],[3,"TrySendError","","Error type returned from `try_send`",N,N],[3,"SpawnHandle","","Handle returned from the `spawn` function.",N,N],[3,"Execute","","Type of future which `Executor` instances must be able to…",N,N],[5,"channel","","Creates an in-memory channel implementation of the…",N,N],[5,"unbounded","","Creates an in-memory channel implementation of the…",N,N],[5,"spawn","","Spawns a `stream` onto the instance of `Executor`…",N,[[["s"],["e"],["usize"]],["spawnhandle"]]],[5,"spawn_unbounded","","Spawns a `stream` onto the instance of `Executor`…",N,[[["s"],["e"]],["spawnhandle"]]],[11,"into_inner","","Returns the message that was attempted to be sent but…",56,[[["self"]],["t"]]],[11,"is_full","","Returns true if this error is a result of the channel…",57,[[["self"]],["bool"]]],[11,"is_disconnected","","Returns true if this error is a result of the receiver…",57,[[["self"]],["bool"]]],[11,"into_inner","","Returns the message that was attempted to be sent but…",57,[[["self"]],["t"]]],[11,"try_send","","Attempts to send a message on this `Sender<T>` without…",58,[[["self"],["t"]],["result",["trysenderror"]]]],[11,"poll_ready","","Polls the channel to determine if there is guaranteed to…",58,[[["self"]],["poll",["senderror"]]]],[11,"is_closed","","Returns whether this channel is closed without needing a…",58,[[["self"]],["bool"]]],[11,"is_closed","","Returns whether this channel is closed without needing a…",59,[[["self"]],["bool"]]],[11,"unbounded_send","","Sends the provided message along this channel.",59,[[["self"],["t"]],["result",["senderror"]]]],[11,"close","","Closes the receiving half",60,[[["self"]]]],[11,"close","","Closes the receiving half",61,[[["self"]]]],[11,"new","futures::sync","Creates a new `BiLock` protecting the provided data.",62,N],[11,"poll_lock","","Attempt to acquire this lock, returning `NotReady` if it…",62,[[["self"]],["async",["bilockguard"]]]],[11,"lock","","Perform a \"blocking lock\" of this lock, consuming this…",62,[[["self"]],["bilockacquire"]]],[11,"reunite","","Attempts to put the two \"halves\" of a `BiLock<T>` back…",62,[[["self"],["self"]],["result",["reuniteerror"]]]],[11,"unlock","","Recovers the original `BiLock<T>`, unlocking this lock.",63,[[["self"]],["bilock"]]],[0,"unsync","futures","Future-aware single-threaded synchronization",N,N],[0,"mpsc","futures::unsync","A multi-producer, single-consumer, futures-aware, FIFO…",N,N],[3,"Sender","futures::unsync::mpsc","The transmission end of a channel.",N,N],[3,"Receiver","","The receiving end of a channel which implements the…",N,N],[3,"UnboundedSender","","The transmission end of an unbounded channel.",N,N],[3,"UnboundedReceiver","","The receiving end of an unbounded channel.",N,N],[3,"SendError","","Error type for sending, used when the receiving end of a…",N,N],[3,"SpawnHandle","","Handle returned from the `spawn` function.",N,N],[3,"Execute","","Type of future which `Executor` instances must be able to…",N,N],[5,"channel","","Creates a bounded in-memory channel with buffered storage.",N,N],[5,"unbounded","","Creates an unbounded in-memory channel with buffered…",N,N],[5,"spawn","","Spawns a `stream` onto the instance of `Executor`…",N,[[["s"],["e"],["usize"]],["spawnhandle"]]],[5,"spawn_unbounded","","Spawns a `stream` onto the instance of `Executor`…",N,[[["s"],["e"]],["spawnhandle"]]],[11,"close","","Closes the receiving half",64,[[["self"]]]],[11,"unbounded_send","","Sends the provided message along this channel.",65,[[["self"],["t"]],["result",["senderror"]]]],[11,"close","","Closes the receiving half",66,[[["self"]]]],[11,"into_inner","","Returns the message that was attempted to be sent but…",67,[[["self"]],["t"]]],[0,"oneshot","futures::unsync","A one-shot, futures-aware channel",N,N],[3,"Sender","futures::unsync::oneshot","Represents the completion half of a oneshot through which…",N,N],[3,"Receiver","","A future representing the completion of a computation…",N,N],[3,"SpawnHandle","","Handle returned from the `spawn` function.",N,N],[3,"Execute","","Type of future which `Spawn` instances below must be able…",N,N],[5,"channel","","Creates a new futures-aware, one-shot channel.",N,N],[5,"spawn","","Spawns a `future` onto the instance of `Executor`…",N,[[["f"],["e"]],["spawnhandle"]]],[5,"spawn_fn","","Spawns a function `f` onto the `Spawn` instance provided…",N,[[["f"],["e"]],["spawnhandle"]]],[11,"send","","Completes this oneshot with a successful result.",68,[[["self"],["t"]],["result"]]],[11,"poll_cancel","","Polls this `Sender` half to detect whether the `Receiver`…",68,[[["self"]],["poll"]]],[11,"is_canceled","","Tests to see whether this `Sender`'s corresponding…",68,[[["self"]],["bool"]]],[11,"close","","Gracefully close this receiver, preventing sending any…",69,[[["self"]]]],[11,"forget","","Drop this future without canceling the underlying future.",70,[[["self"]]]],[0,"prelude","futures","A \"prelude\" for crates using the `futures` crate.",N,N],[6,"Poll","","Return type of the `Future::poll` method, indicates…",N,N],[6,"StartSend","","Return type of the `Sink::start_send` method, indicating…",N,N],[14,"try_ready","","A macro for extracting the successful type of a `Poll<T,…",N,N],[14,"task_local","","A macro to create a `static` of type `LocalKey`",N,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"into_future","futures::future","",71,[[["self"]],["f"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"try_into","","",71,[[["self"]],["result"]]],[11,"into","","",71,[[["self"]],["u"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"get_type_id","","",71,[[["self"]],["typeid"]]],[11,"into_future","","",72,[[["self"]],["f"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"try_into","","",72,[[["self"]],["result"]]],[11,"into","","",72,[[["self"]],["u"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"get_type_id","","",72,[[["self"]],["typeid"]]],[11,"into_future","","",73,[[["self"]],["f"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"try_into","","",73,[[["self"]],["result"]]],[11,"into","","",73,[[["self"]],["u"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"into_future","","",74,[[["self"]],["f"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"try_into","","",74,[[["self"]],["result"]]],[11,"into","","",74,[[["self"]],["u"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"get_type_id","","",74,[[["self"]],["typeid"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,N],[11,"into_future","","",75,[[["self"]],["f"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"try_into","","",75,[[["self"]],["result"]]],[11,"into","","",75,[[["self"]],["u"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"get_type_id","","",75,[[["self"]],["typeid"]]],[11,"into_future","","",76,[[["self"]],["f"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"try_into","","",76,[[["self"]],["result"]]],[11,"into","","",76,[[["self"]],["u"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"get_type_id","","",76,[[["self"]],["typeid"]]],[11,"into_future","","",77,[[["self"]],["f"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"try_into","","",77,[[["self"]],["result"]]],[11,"into","","",77,[[["self"]],["u"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"get_type_id","","",77,[[["self"]],["typeid"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"try_into","","",78,[[["self"]],["result"]]],[11,"into","","",78,[[["self"]],["u"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"get_type_id","","",78,[[["self"]],["typeid"]]],[11,"into_future","","",5,[[["self"]],["f"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"try_into","","",79,[[["self"]],["result"]]],[11,"into","","",79,[[["self"]],["u"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"get_type_id","","",79,[[["self"]],["typeid"]]],[11,"into_future","","",80,[[["self"]],["f"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"try_into","","",80,[[["self"]],["result"]]],[11,"into","","",80,[[["self"]],["u"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"get_type_id","","",80,[[["self"]],["typeid"]]],[11,"into_future","","",81,[[["self"]],["f"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"try_into","","",81,[[["self"]],["result"]]],[11,"into","","",81,[[["self"]],["u"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"get_type_id","","",81,[[["self"]],["typeid"]]],[11,"into_future","","",82,[[["self"]],["f"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"try_into","","",82,[[["self"]],["result"]]],[11,"into","","",82,[[["self"]],["u"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"get_type_id","","",82,[[["self"]],["typeid"]]],[11,"into_future","","",83,[[["self"]],["f"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"try_into","","",83,[[["self"]],["result"]]],[11,"into","","",83,[[["self"]],["u"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"get_type_id","","",83,[[["self"]],["typeid"]]],[11,"into_future","","",84,[[["self"]],["f"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"try_into","","",84,[[["self"]],["result"]]],[11,"into","","",84,[[["self"]],["u"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"get_type_id","","",84,[[["self"]],["typeid"]]],[11,"into_future","","",85,[[["self"]],["f"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"try_into","","",85,[[["self"]],["result"]]],[11,"into","","",85,[[["self"]],["u"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"get_type_id","","",85,[[["self"]],["typeid"]]],[11,"into_future","","",86,[[["self"]],["f"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"try_into","","",86,[[["self"]],["result"]]],[11,"into","","",86,[[["self"]],["u"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"get_type_id","","",86,[[["self"]],["typeid"]]],[11,"into_future","","",87,[[["self"]],["f"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"try_into","","",87,[[["self"]],["result"]]],[11,"into","","",87,[[["self"]],["u"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"get_type_id","","",87,[[["self"]],["typeid"]]],[11,"into_future","","",88,[[["self"]],["f"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"try_into","","",88,[[["self"]],["result"]]],[11,"into","","",88,[[["self"]],["u"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"get_type_id","","",88,[[["self"]],["typeid"]]],[11,"into_future","","",89,[[["self"]],["f"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"try_into","","",89,[[["self"]],["result"]]],[11,"into","","",89,[[["self"]],["u"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"get_type_id","","",89,[[["self"]],["typeid"]]],[11,"into_future","","",90,[[["self"]],["f"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"try_into","","",90,[[["self"]],["result"]]],[11,"into","","",90,[[["self"]],["u"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"get_type_id","","",90,[[["self"]],["typeid"]]],[11,"into_future","","",91,[[["self"]],["f"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"try_into","","",91,[[["self"]],["result"]]],[11,"into","","",91,[[["self"]],["u"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"get_type_id","","",91,[[["self"]],["typeid"]]],[11,"into_future","","",92,[[["self"]],["f"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"try_into","","",92,[[["self"]],["result"]]],[11,"into","","",92,[[["self"]],["u"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"get_type_id","","",92,[[["self"]],["typeid"]]],[11,"into_future","","",93,[[["self"]],["f"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"try_into","","",93,[[["self"]],["result"]]],[11,"into","","",93,[[["self"]],["u"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"get_type_id","","",93,[[["self"]],["typeid"]]],[11,"into_future","","",94,[[["self"]],["f"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"try_into","","",94,[[["self"]],["result"]]],[11,"into","","",94,[[["self"]],["u"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"get_type_id","","",94,[[["self"]],["typeid"]]],[11,"into_future","","",95,[[["self"]],["f"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"try_into","","",95,[[["self"]],["result"]]],[11,"into","","",95,[[["self"]],["u"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"get_type_id","","",95,[[["self"]],["typeid"]]],[11,"into_future","","",96,[[["self"]],["f"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"try_into","","",96,[[["self"]],["result"]]],[11,"into","","",96,[[["self"]],["u"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"get_type_id","","",96,[[["self"]],["typeid"]]],[11,"into_future","","",6,[[["self"]],["f"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"try_into","","",97,[[["self"]],["result"]]],[11,"into","","",97,[[["self"]],["u"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"get_type_id","","",97,[[["self"]],["typeid"]]],[11,"to_owned","","",97,[[["self"]],["t"]]],[11,"clone_into","","",97,N],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"try_into","","",98,[[["self"]],["result"]]],[11,"into","","",98,[[["self"]],["u"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"get_type_id","","",98,[[["self"]],["typeid"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,N],[11,"to_string","","",98,[[["self"]],["string"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into_future","","",3,[[["self"]],["f"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","futures::stream","",99,[[["u"]],["result"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"try_into","","",99,[[["self"]],["result"]]],[11,"into","","",99,[[["self"]],["u"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"get_type_id","","",99,[[["self"]],["typeid"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"try_into","","",100,[[["self"]],["result"]]],[11,"into","","",100,[[["self"]],["u"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"get_type_id","","",100,[[["self"]],["typeid"]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"try_into","","",101,[[["self"]],["result"]]],[11,"into","","",101,[[["self"]],["u"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"get_type_id","","",101,[[["self"]],["typeid"]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"try_into","","",102,[[["self"]],["result"]]],[11,"into","","",102,[[["self"]],["u"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"get_type_id","","",102,[[["self"]],["typeid"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"try_into","","",103,[[["self"]],["result"]]],[11,"into","","",103,[[["self"]],["u"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"get_type_id","","",103,[[["self"]],["typeid"]]],[11,"into_future","","",104,[[["self"]],["f"]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"try_into","","",104,[[["self"]],["result"]]],[11,"into","","",104,[[["self"]],["u"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"get_type_id","","",104,[[["self"]],["typeid"]]],[11,"into_future","","",105,[[["self"]],["f"]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"try_into","","",105,[[["self"]],["result"]]],[11,"into","","",105,[[["self"]],["u"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"get_type_id","","",105,[[["self"]],["typeid"]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"try_into","","",106,[[["self"]],["result"]]],[11,"into","","",106,[[["self"]],["u"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"get_type_id","","",106,[[["self"]],["typeid"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"into_future","","",107,[[["self"]],["f"]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"try_into","","",107,[[["self"]],["result"]]],[11,"into","","",107,[[["self"]],["u"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"get_type_id","","",107,[[["self"]],["typeid"]]],[11,"into_future","","",108,[[["self"]],["f"]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"try_into","","",108,[[["self"]],["result"]]],[11,"into","","",108,[[["self"]],["u"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"get_type_id","","",108,[[["self"]],["typeid"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"into_future","","",20,[[["self"]],["f"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"try_into","","",109,[[["self"]],["result"]]],[11,"into","","",109,[[["self"]],["u"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"get_type_id","","",109,[[["self"]],["typeid"]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"try_into","","",110,[[["self"]],["result"]]],[11,"into","","",110,[[["self"]],["u"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"get_type_id","","",110,[[["self"]],["typeid"]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"try_into","","",111,[[["self"]],["result"]]],[11,"into","","",111,[[["self"]],["u"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"get_type_id","","",111,[[["self"]],["typeid"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"try_into","","",112,[[["self"]],["result"]]],[11,"into","","",112,[[["self"]],["u"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"get_type_id","","",112,[[["self"]],["typeid"]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"try_into","","",113,[[["self"]],["result"]]],[11,"into","","",113,[[["self"]],["u"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"get_type_id","","",113,[[["self"]],["typeid"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"try_into","","",114,[[["self"]],["result"]]],[11,"into","","",114,[[["self"]],["u"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"get_type_id","","",114,[[["self"]],["typeid"]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"from","","",115,[[["t"]],["t"]]],[11,"try_into","","",115,[[["self"]],["result"]]],[11,"into","","",115,[[["self"]],["u"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"get_type_id","","",115,[[["self"]],["typeid"]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"from","","",116,[[["t"]],["t"]]],[11,"try_into","","",116,[[["self"]],["result"]]],[11,"into","","",116,[[["self"]],["u"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"get_type_id","","",116,[[["self"]],["typeid"]]],[11,"into_future","","",30,[[["self"]],["f"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"try_into","","",117,[[["self"]],["result"]]],[11,"into","","",117,[[["self"]],["u"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"get_type_id","","",117,[[["self"]],["typeid"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"into_future","","",118,[[["self"]],["f"]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"from","","",118,[[["t"]],["t"]]],[11,"try_into","","",118,[[["self"]],["result"]]],[11,"into","","",118,[[["self"]],["u"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"get_type_id","","",118,[[["self"]],["typeid"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"into_iter","","",34,[[["self"]],["i"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"to_string","","",12,[[["self"]],["string"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"try_from","futures::stream::futures_unordered","",37,[[["u"]],["result"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"into_iter","","",119,[[["self"]],["i"]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"try_into","","",119,[[["self"]],["result"]]],[11,"into","","",119,[[["self"]],["u"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"get_type_id","","",119,[[["self"]],["typeid"]]],[11,"try_from","futures::sink","",47,[[["u"]],["result"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,N],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"into_future","","",42,[[["self"]],["f"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"into_future","","",44,[[["self"]],["f"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"into_future","","",120,[[["self"]],["f"]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"from","","",120,[[["t"]],["t"]]],[11,"try_into","","",120,[[["self"]],["result"]]],[11,"into","","",120,[[["self"]],["u"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"get_type_id","","",120,[[["self"]],["typeid"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,N],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"try_from","futures::task","",121,[[["u"]],["result"]]],[11,"from","","",121,[[["t"]],["t"]]],[11,"try_into","","",121,[[["self"]],["result"]]],[11,"into","","",121,[[["self"]],["u"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"get_type_id","","",121,[[["self"]],["typeid"]]],[11,"to_owned","","",121,[[["self"]],["t"]]],[11,"clone_into","","",121,N],[11,"try_from","futures::executor","",122,[[["u"]],["result"]]],[11,"from","","",122,[[["t"]],["t"]]],[11,"try_into","","",122,[[["self"]],["result"]]],[11,"into","","",122,[[["self"]],["u"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"get_type_id","","",122,[[["self"]],["typeid"]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"from","","",123,[[["t"]],["t"]]],[11,"try_into","","",123,[[["self"]],["result"]]],[11,"into","","",123,[[["self"]],["u"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"get_type_id","","",123,[[["self"]],["typeid"]]],[11,"to_owned","","",123,[[["self"]],["t"]]],[11,"clone_into","","",123,N],[11,"try_from","futures::task","",124,[[["u"]],["result"]]],[11,"from","","",124,[[["t"]],["t"]]],[11,"try_into","","",124,[[["self"]],["result"]]],[11,"into","","",124,[[["self"]],["u"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"get_type_id","","",124,[[["self"]],["typeid"]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"from","","",125,[[["t"]],["t"]]],[11,"try_into","","",125,[[["self"]],["result"]]],[11,"into","","",125,[[["self"]],["u"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"get_type_id","","",125,[[["self"]],["typeid"]]],[11,"to_owned","","",125,[[["self"]],["t"]]],[11,"clone_into","","",125,N],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"from","","",126,[[["t"]],["t"]]],[11,"try_into","","",126,[[["self"]],["result"]]],[11,"into","","",126,[[["self"]],["u"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"get_type_id","","",126,[[["self"]],["typeid"]]],[11,"try_from","futures::sync","",62,[[["u"]],["result"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"into","","",62,[[["self"]],["u"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"from","","",127,[[["t"]],["t"]]],[11,"try_into","","",127,[[["self"]],["result"]]],[11,"into","","",127,[[["self"]],["u"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"get_type_id","","",127,[[["self"]],["typeid"]]],[11,"into_future","","",128,[[["self"]],["f"]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"from","","",128,[[["t"]],["t"]]],[11,"try_into","","",128,[[["self"]],["result"]]],[11,"into","","",128,[[["self"]],["u"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"get_type_id","","",128,[[["self"]],["typeid"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"into","","",63,[[["self"]],["u"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"into_future","futures::sync::oneshot","",54,[[["self"]],["f"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"from","","",129,[[["t"]],["t"]]],[11,"try_into","","",129,[[["self"]],["result"]]],[11,"into","","",129,[[["self"]],["u"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"get_type_id","","",129,[[["self"]],["typeid"]]],[11,"to_owned","","",129,[[["self"]],["t"]]],[11,"clone_into","","",129,N],[11,"to_string","","",129,[[["self"]],["string"]]],[11,"into_future","","",55,[[["self"]],["f"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"into_future","","",130,[[["self"]],["f"]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"from","","",130,[[["t"]],["t"]]],[11,"try_into","","",130,[[["self"]],["result"]]],[11,"into","","",130,[[["self"]],["u"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"get_type_id","","",130,[[["self"]],["typeid"]]],[11,"try_from","futures::sync::mpsc","",58,[[["u"]],["result"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,N],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,N],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,N],[11,"to_string","","",56,[[["self"]],["string"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,N],[11,"to_string","","",57,[[["self"]],["string"]]],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"from","","",131,[[["t"]],["t"]]],[11,"try_into","","",131,[[["self"]],["result"]]],[11,"into","","",131,[[["self"]],["u"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"get_type_id","","",131,[[["self"]],["typeid"]]],[11,"into_future","","",132,[[["self"]],["f"]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"from","","",132,[[["t"]],["t"]]],[11,"try_into","","",132,[[["self"]],["result"]]],[11,"into","","",132,[[["self"]],["u"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"get_type_id","","",132,[[["self"]],["typeid"]]],[11,"try_from","futures::unsync::mpsc","",133,[[["u"]],["result"]]],[11,"from","","",133,[[["t"]],["t"]]],[11,"try_into","","",133,[[["self"]],["result"]]],[11,"into","","",133,[[["self"]],["u"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"get_type_id","","",133,[[["self"]],["typeid"]]],[11,"to_owned","","",133,[[["self"]],["t"]]],[11,"clone_into","","",133,N],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"into","","",64,[[["self"]],["u"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"into","","",65,[[["self"]],["u"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,N],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"into","","",66,[[["self"]],["u"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"into","","",67,[[["self"]],["u"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"to_string","","",67,[[["self"]],["string"]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"from","","",134,[[["t"]],["t"]]],[11,"try_into","","",134,[[["self"]],["result"]]],[11,"into","","",134,[[["self"]],["u"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"get_type_id","","",134,[[["self"]],["typeid"]]],[11,"into_future","","",135,[[["self"]],["f"]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"from","","",135,[[["t"]],["t"]]],[11,"try_into","","",135,[[["self"]],["result"]]],[11,"into","","",135,[[["self"]],["u"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"get_type_id","","",135,[[["self"]],["typeid"]]],[11,"try_from","futures::unsync::oneshot","",68,[[["u"]],["result"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"try_into","","",68,[[["self"]],["result"]]],[11,"into","","",68,[[["self"]],["u"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"get_type_id","","",68,[[["self"]],["typeid"]]],[11,"into_future","","",69,[[["self"]],["f"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"try_into","","",69,[[["self"]],["result"]]],[11,"into","","",69,[[["self"]],["u"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"get_type_id","","",69,[[["self"]],["typeid"]]],[11,"into_future","","",70,[[["self"]],["f"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"try_into","","",70,[[["self"]],["result"]]],[11,"into","","",70,[[["self"]],["u"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"get_type_id","","",70,[[["self"]],["typeid"]]],[11,"into_future","","",136,[[["self"]],["f"]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"from","","",136,[[["t"]],["t"]]],[11,"try_into","","",136,[[["self"]],["result"]]],[11,"into","","",136,[[["self"]],["u"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"get_type_id","","",136,[[["self"]],["typeid"]]],[11,"poll","futures::future","",71,[[["self"]],["poll"]]],[11,"poll","","",72,[[["self"]],["poll"]]],[11,"poll","","",73,[[["self"]],["poll"]]],[11,"poll","","",74,[[["self"]],["poll"]]],[11,"poll","","",75,[[["self"]],["poll"]]],[11,"poll","","",76,[[["self"]],["poll"]]],[11,"poll","","",77,[[["self"]],["poll"]]],[11,"poll","","",5,[[["self"]],["poll"]]],[11,"poll","","",80,[[["self"]],["poll"]]],[11,"poll","","",81,[[["self"]],["poll"]]],[11,"poll","","",82,[[["self"]],["poll"]]],[11,"poll","","",83,[[["self"]],["poll"]]],[11,"poll","","",84,[[["self"]],["poll"]]],[11,"poll","","",85,[[["self"]],["poll"]]],[11,"poll","","",86,[[["self"]],["poll"]]],[11,"poll","","",87,[[["self"]],["poll"]]],[11,"poll","","",88,[[["self"]],["poll"]]],[11,"poll","","",89,[[["self"]],["poll"]]],[11,"poll","","",90,[[["self"]],["poll"]]],[11,"poll","","",91,[[["self"]],["poll"]]],[11,"poll","","",3,[[["self"]],["poll"]]],[11,"poll","","",92,[[["self"]],["poll"]]],[11,"poll","","",93,[[["self"]],["poll"]]],[11,"poll","","",94,[[["self"]],["poll"]]],[11,"poll","","",95,[[["self"]],["poll"]]],[11,"poll","","",96,[[["self"]],["poll"]]],[11,"poll","","",6,[[["self"]],["poll"]]],[11,"poll","futures::stream","",105,[[["self"]],["poll"]]],[11,"poll","","",104,[[["self"]],["poll"]]],[11,"poll","","",107,[[["self"]],["poll"]]],[11,"poll","","",108,[[["self"]],["poll"]]],[11,"poll","","",20,[[["self"]],["poll"]]],[11,"poll","","",30,[[["self"]],["poll"]]],[11,"poll","","",118,[[["self"]],["poll",["vec"]]]],[11,"poll","futures::sink","",42,[[["self"]],["poll"]]],[11,"poll","","",44,[[["self"]],["poll"]]],[11,"poll","","",120,[[["self"]],["poll"]]],[11,"poll","futures::sync::oneshot","",54,[[["self"]],["poll",["canceled"]]]],[11,"poll","","",55,[[["self"]],["poll"]]],[11,"poll","","",130,[[["self"]],["poll"]]],[11,"poll","futures::sync::mpsc","",132,[[["self"]],["poll"]]],[11,"poll","futures::sync","",128,[[["self"]],["poll",["bilockacquired"]]]],[11,"poll","futures::unsync::mpsc","",135,[[["self"]],["poll"]]],[11,"poll","futures::unsync::oneshot","",69,[[["self"]],["poll"]]],[11,"poll","","",70,[[["self"]],["poll"]]],[11,"poll","","",136,[[["self"]],["poll"]]],[11,"poll","futures::future","",78,[[["self"]],["poll",["option"]]]],[11,"poll","","",79,[[["self"]],["poll",["option"]]]],[11,"poll","futures::stream","",99,[[["self"]],["poll",["option"]]]],[11,"poll","","",100,[[["self"]],["poll",["option"]]]],[11,"poll","","",101,[[["self"]],["poll",["option"]]]],[11,"poll","","",102,[[["self"]],["poll",["option"]]]],[11,"poll","","",14,[[["self"]],["poll",["option"]]]],[11,"poll","","",103,[[["self"]],["poll",["option"]]]],[11,"poll","","",106,[[["self"]],["poll",["option"]]]],[11,"poll","","",15,[[["self"]],["poll",["option"]]]],[11,"poll","","",16,[[["self"]],["poll",["option"]]]],[11,"poll","","",17,[[["self"]],["poll",["option"]]]],[11,"poll","","",18,[[["self"]],["poll",["option"]]]],[11,"poll","","",19,[[["self"]],["poll",["option"]]]],[11,"poll","","",21,[[["self"]],["poll",["option"]]]],[11,"poll","","",22,[[["self"]],["poll",["option"]]]],[11,"poll","","",23,[[["self"]],["poll",["option"]]]],[11,"poll","","",24,[[["self"]],["poll",["option"]]]],[11,"poll","","",109,[[["self"]],["poll",["option"]]]],[11,"poll","","",110,[[["self"]],["poll",["option"]]]],[11,"poll","","",111,[[["self"]],["poll",["option"]]]],[11,"poll","","",25,[[["self"]],["poll",["option"]]]],[11,"poll","","",112,[[["self"]],["poll",["option"]]]],[11,"poll","","",113,[[["self"]],["poll",["option"]]]],[11,"poll","","",26,[[["self"]],["poll",["option"]]]],[11,"poll","","",27,[[["self"]],["poll",["option"]]]],[11,"poll","","",28,[[["self"]],["poll",["option"]]]],[11,"poll","","",29,[[["self"]],["poll",["option"]]]],[11,"poll","","",114,[[["self"]],["poll",["option"]]]],[11,"poll","","",115,[[["self"]],["poll",["option"]]]],[11,"poll","","",116,[[["self"]],["poll",["option"]]]],[11,"poll","","",31,[[["self"]],["poll",["option"]]]],[11,"poll","","",32,[[["self"]],["poll",["option"]]]],[11,"poll","","",117,[[["self"]],["poll",["option"]]]],[11,"poll","","",33,[[["self"]],["poll",["option"]]]],[11,"poll","","",35,[[["self"]],["poll",["option"]]]],[11,"poll","futures::stream::futures_unordered","",37,[[["self"]],["poll",["option"]]]],[11,"poll","futures::stream","",38,[[["self"]],["poll",["option"]]]],[11,"poll","futures::sink","",40,[[["self"]],["poll",["option"]]]],[11,"poll","","",41,[[["self"]],["poll",["option"]]]],[11,"poll","","",43,[[["self"]],["poll",["option"]]]],[11,"poll","","",45,[[["self"]],["poll",["option"]]]],[11,"poll","","",47,[[["self"]],["poll",["option"]]]],[11,"poll","futures::sync::mpsc","",60,[[["self"]],["poll",["option"]]]],[11,"poll","","",61,[[["self"]],["poll",["option"]]]],[11,"poll","","",131,[[["self"]],["poll",["option"]]]],[11,"poll","futures::unsync::mpsc","",64,[[["self"]],["poll",["option"]]]],[11,"poll","","",66,[[["self"]],["poll",["option"]]]],[11,"poll","","",134,[[["self"]],["poll",["option"]]]],[11,"start_send","futures::stream","",14,N],[11,"poll_complete","","",14,[[["self"]],["poll"]]],[11,"close","","",14,[[["self"]],["poll"]]],[11,"start_send","","",15,N],[11,"poll_complete","","",15,[[["self"]],["poll"]]],[11,"close","","",15,[[["self"]],["poll"]]],[11,"start_send","","",16,N],[11,"poll_complete","","",16,[[["self"]],["poll"]]],[11,"close","","",16,[[["self"]],["poll"]]],[11,"start_send","","",17,N],[11,"poll_complete","","",17,[[["self"]],["poll"]]],[11,"close","","",17,[[["self"]],["poll"]]],[11,"start_send","","",18,N],[11,"poll_complete","","",18,[[["self"]],["poll"]]],[11,"close","","",18,[[["self"]],["poll"]]],[11,"start_send","","",19,N],[11,"poll_complete","","",19,[[["self"]],["poll"]]],[11,"close","","",19,[[["self"]],["poll"]]],[11,"start_send","","",21,N],[11,"poll_complete","","",21,[[["self"]],["poll"]]],[11,"close","","",21,[[["self"]],["poll"]]],[11,"start_send","","",22,N],[11,"poll_complete","","",22,[[["self"]],["poll"]]],[11,"close","","",22,[[["self"]],["poll"]]],[11,"start_send","","",23,N],[11,"poll_complete","","",23,[[["self"]],["poll"]]],[11,"close","","",23,[[["self"]],["poll"]]],[11,"start_send","","",24,N],[11,"poll_complete","","",24,[[["self"]],["poll"]]],[11,"close","","",24,[[["self"]],["poll"]]],[11,"start_send","","",111,N],[11,"poll_complete","","",111,[[["self"]],["poll"]]],[11,"close","","",111,[[["self"]],["poll"]]],[11,"start_send","","",25,N],[11,"poll_complete","","",25,[[["self"]],["poll"]]],[11,"close","","",25,[[["self"]],["poll"]]],[11,"start_send","","",26,N],[11,"poll_complete","","",26,[[["self"]],["poll"]]],[11,"close","","",26,[[["self"]],["poll"]]],[11,"start_send","","",27,N],[11,"poll_complete","","",27,[[["self"]],["poll"]]],[11,"close","","",27,[[["self"]],["poll"]]],[11,"start_send","","",28,N],[11,"poll_complete","","",28,[[["self"]],["poll"]]],[11,"close","","",28,[[["self"]],["poll"]]],[11,"start_send","","",29,N],[11,"poll_complete","","",29,[[["self"]],["poll"]]],[11,"close","","",29,[[["self"]],["poll"]]],[11,"start_send","","",114,N],[11,"poll_complete","","",114,[[["self"]],["poll"]]],[11,"close","","",114,[[["self"]],["poll"]]],[11,"start_send","","",31,N],[11,"poll_complete","","",31,[[["self"]],["poll"]]],[11,"close","","",31,[[["self"]],["poll"]]],[11,"start_send","","",32,N],[11,"poll_complete","","",32,[[["self"]],["poll"]]],[11,"close","","",32,[[["self"]],["poll"]]],[11,"start_send","","",33,N],[11,"poll_complete","","",33,[[["self"]],["poll"]]],[11,"close","","",33,[[["self"]],["poll"]]],[11,"start_send","","",36,N],[11,"poll_complete","","",36,[[["self"]],["poll"]]],[11,"close","","",36,[[["self"]],["poll"]]],[11,"start_send","futures::sink","",40,N],[11,"poll_complete","","",40,[[["self"]],["poll"]]],[11,"close","","",40,[[["self"]],["poll"]]],[11,"start_send","","",41,N],[11,"poll_complete","","",41,[[["self"]],["poll"]]],[11,"close","","",41,[[["self"]],["poll"]]],[11,"start_send","","",43,N],[11,"poll_complete","","",43,[[["self"]],["poll"]]],[11,"close","","",43,[[["self"]],["poll"]]],[11,"start_send","","",45,N],[11,"poll_complete","","",45,[[["self"]],["poll"]]],[11,"close","","",45,[[["self"]],["poll"]]],[11,"start_send","","",46,N],[11,"poll_complete","","",46,[[["self"]],["poll"]]],[11,"close","","",46,[[["self"]],["poll"]]],[11,"start_send","","",47,N],[11,"poll_complete","","",47,[[["self"]],["poll"]]],[11,"close","","",47,[[["self"]],["poll"]]],[11,"start_send","futures::sync::mpsc","",58,[[["self"],["t"]],["startsend",["senderror"]]]],[11,"poll_complete","","",58,[[["self"]],["poll",["senderror"]]]],[11,"close","","",58,[[["self"]],["poll",["senderror"]]]],[11,"start_send","","",59,[[["self"],["t"]],["startsend",["senderror"]]]],[11,"poll_complete","","",59,[[["self"]],["poll",["senderror"]]]],[11,"close","","",59,[[["self"]],["poll",["senderror"]]]],[11,"start_send","futures::unsync::mpsc","",133,[[["self"],["t"]],["startsend",["senderror"]]]],[11,"poll_complete","","",133,[[["self"]],["poll",["senderror"]]]],[11,"close","","",133,[[["self"]],["poll",["senderror"]]]],[11,"start_send","","",65,[[["self"],["t"]],["startsend",["senderror"]]]],[11,"poll_complete","","",65,[[["self"]],["poll",["senderror"]]]],[11,"close","","",65,[[["self"]],["poll",["senderror"]]]],[11,"eq","futures","",0,[[["self"],["async"]],["bool"]]],[11,"ne","","",0,[[["self"],["async"]],["bool"]]],[11,"eq","","",1,[[["self"],["asyncsink"]],["bool"]]],[11,"ne","","",1,[[["self"],["asyncsink"]],["bool"]]],[11,"eq","futures::future","",4,[[["self"],["executeerrorkind"]],["bool"]]],[11,"eq","futures::sync::oneshot","",129,[[["self"],["canceled"]],["bool"]]],[11,"eq","futures::sync::mpsc","",56,[[["self"],["senderror"]],["bool"]]],[11,"ne","","",56,[[["self"],["senderror"]],["bool"]]],[11,"eq","","",57,[[["self"],["trysenderror"]],["bool"]]],[11,"ne","","",57,[[["self"],["trysenderror"]],["bool"]]],[11,"fmt","futures::future","",98,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::stream","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::sync::oneshot","",129,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::sync::mpsc","",56,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",57,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::unsync::mpsc","",67,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::future","",71,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",72,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",73,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",74,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",75,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",76,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",77,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",78,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",79,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",80,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",81,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",82,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",83,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",84,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",85,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",86,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",87,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",88,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",89,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",90,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",91,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",92,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",93,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",94,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",95,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",96,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",97,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",98,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::stream","",99,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",100,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",101,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",102,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",103,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",105,[[["self"],["formatter"]],["fmtresult"]]],[11,"fmt","","",104,[[["self"],["formatter"]],["fmtresult"]]],[11,"fmt","","",106,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",107,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",108,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",109,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",110,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",111,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",112,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",113,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",114,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",115,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",116,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",117,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",118,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::stream::futures_unordered","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",119,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::stream","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::sink","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",120,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["fmtresult"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::task","",124,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",126,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",125,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",121,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::executor","",122,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",123,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::sync::oneshot","",54,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",53,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",129,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",55,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",130,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::sync::mpsc","",58,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",59,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",60,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",61,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",56,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",57,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",131,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",132,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::sync","",62,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",127,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",128,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",63,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::unsync::mpsc","",133,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",64,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",65,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",66,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",67,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",134,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",135,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::unsync::oneshot","",68,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",69,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",70,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",136,[[["self"],["formatter"]],["result"]]],[11,"deref","futures::future","",97,[[["self"]],["t"]]],[11,"deref","","",98,[[["self"]],["e"]]],[11,"deref","futures::sync","",127,[[["self"]],["t"]]],[11,"deref","","",63,[[["self"]],["t"]]],[11,"deref_mut","","",127,[[["self"]],["t"]]],[11,"deref_mut","","",63,[[["self"]],["t"]]],[11,"drop","futures::future","",6,[[["self"]]]],[11,"drop","futures::stream::futures_unordered","",37,[[["self"]]]],[11,"drop","futures::executor","",123,[[["self"]]]],[11,"drop","futures::sync::oneshot","",53,[[["self"]]]],[11,"drop","","",54,[[["self"]]]],[11,"drop","","",55,[[["self"]]]],[11,"drop","","",130,[[["self"]]]],[11,"drop","futures::sync::mpsc","",58,[[["self"]]]],[11,"drop","","",60,[[["self"]]]],[11,"drop","futures::sync","",127,[[["self"]]]],[11,"drop","","",63,[[["self"]]]],[11,"drop","futures::unsync::mpsc","",133,[[["self"]]]],[11,"drop","","",64,[[["self"]]]],[11,"drop","futures::unsync::oneshot","",68,[[["self"]]]],[11,"drop","","",69,[[["self"]]]],[11,"from_iter","futures::stream::futures_unordered","",37,[[["t"]],["self"]]],[11,"from_iter","futures::stream","",38,[[["t"]],["self"]]],[11,"next","","",34,[[["self"]],["option"]]],[11,"next","futures::stream::futures_unordered","",119,[[["self"]],["option"]]],[11,"size_hint","","",119,N],[11,"from","futures","",0,[[["t"]],["async"]]],[11,"from","futures::future","",74,[[["result"]],["self"]]],[11,"from","futures::executor","",123,[[["arc"]],["notifyhandle"]]],[11,"from","","",123,[[["t"]],["notifyhandle"]]],[11,"clone","futures","",0,[[["self"]],["async"]]],[11,"clone","","",1,[[["self"]],["asyncsink"]]],[11,"clone","futures::future","",74,[[["self"]],["futureresult"]]],[11,"clone","","",6,[[["self"]],["self"]]],[11,"clone","","",97,[[["self"]],["shareditem"]]],[11,"clone","","",98,[[["self"]],["sharederror"]]],[11,"clone","","",4,[[["self"]],["executeerrorkind"]]],[11,"clone","futures::sink","",40,[[["self"]],["with"]]],[11,"clone","","",43,[[["self"]],["sinkfromerr"]]],[11,"clone","","",45,[[["self"]],["sinkmaperr"]]],[11,"clone","futures::task","",125,[[["self"]],["unparkevent"]]],[11,"clone","","",121,[[["self"]],["task"]]],[11,"clone","futures::executor","",123,[[["self"]],["self"]]],[11,"clone","futures::sync::oneshot","",129,[[["self"]],["canceled"]]],[11,"clone","futures::sync::mpsc","",56,[[["self"]],["senderror"]]],[11,"clone","","",57,[[["self"]],["trysenderror"]]],[11,"clone","","",59,[[["self"]],["unboundedsender"]]],[11,"clone","","",58,[[["self"]],["sender"]]],[11,"clone","futures::unsync::mpsc","",133,[[["self"]],["self"]]],[11,"clone","","",65,[[["self"]],["self"]]],[11,"default","futures::task","",124,[[],["self"]]],[11,"description","futures::future","",98,[[["self"]],["str"]]],[11,"cause","","",98,[[["self"]],["option",["error"]]]],[11,"description","futures::stream","",12,[[["self"]],["str"]]],[11,"description","futures::sync::oneshot","",129,[[["self"]],["str"]]],[11,"description","futures::sync::mpsc","",56,[[["self"]],["str"]]],[11,"description","","",57,[[["self"]],["str"]]],[11,"description","futures::unsync::mpsc","",67,[[["self"]],["str"]]],[11,"new","futures::task","Create an `AtomicTask` initialized with the given `Task`",124,[[],["atomictask"]]],[11,"register","","Registers the current task to be notified on calls to…",124,[[["self"]]]],[11,"register_task","","Registers the provided task to be notified on calls to…",124,[[["self"],["task"]]]],[11,"notify","","Notifies the task that last called `register`.",124,[[["self"]]]],[11,"with","","Access this task-local key, running the provided closure…",126,[[["self"],["f"]],["r"]]],[11,"wait_future","futures::executor","Waits for the internal future to complete, blocking this…",122,[[["self"]],["result"]]],[11,"wait_stream","","Like `wait_future`, except only waits for the next element…",122,[[["self"]],["option",["result"]]]],[11,"wait_send","","Blocks the current thread until it's able to send `value`…",122,N],[11,"wait_flush","","Blocks the current thread until it's able to flush this…",122,[[["self"]],["result"]]],[11,"wait_close","","Blocks the current thread until it's able to close this…",122,[[["self"]],["result"]]],[11,"new","futures::task","Construct an unpark event that will insert `id` into `set`…",125,[[["arc",["eventset"]],["usize"]],["unparkevent"]]],[11,"clone_id","futures::executor","This function is called whenever a new copy of `id` is…",51,[[["self"],["usize"]],["usize"]]],[11,"drop_id","","All instances of `Task` store an `id` that they're going…",51,[[["self"],["usize"]]]],[11,"notify","futures::task","Indicate that the task should attempt to poll its future…",121,[[["self"]]]],[11,"is_current","","Returns `true` when called from within the context of the…",121,[[["self"]],["bool"]]],[11,"will_notify_current","","This function is intended as a performance optimization…",121,[[["self"]],["bool"]]],[11,"get_ref","futures::executor","Get a shared reference to the object the Spawn is wrapping.",122,[[["self"]],["t"]]],[11,"get_mut","","Get a mutable reference to the object the Spawn is wrapping.",122,[[["self"]],["t"]]],[11,"into_inner","","Consume the Spawn, returning its inner object",122,[[["self"]],["t"]]],[11,"poll_fn_notify","","Calls the provided closure, scheduling notifications to be…",122,[[["self"],["n"],["usize"],["f"]],["r"]]],[11,"poll_future_notify","","Polls the internal future, scheduling notifications to be…",122,[[["self"],["n"],["usize"]],["poll"]]],[11,"poll_stream_notify","","Like `poll_future_notify`, except polls the underlying…",122,[[["self"],["n"],["usize"]],["poll",["option"]]]],[11,"start_send_notify","","Invokes the underlying `start_send` method with this task…",122,N],[11,"poll_flush_notify","","Invokes the underlying `poll_complete` method with this…",122,[[["self"],["n"],["usize"]],["poll"]]],[11,"close_notify","","Invokes the underlying `close` method with this task in…",122,[[["self"],["n"],["usize"]],["poll"]]],[11,"new","","Constructs a new `NotifyHandle` directly.",123,N],[11,"notify","","Invokes the underlying instance of `Notify` with the…",123,[[["self"],["usize"]]]]],"paths":[[4,"Async"],[4,"AsyncSink"],[4,"Loop"],[4,"Either"],[4,"ExecuteErrorKind"],[3,"Fuse"],[3,"Shared"],[8,"Future"],[8,"IntoFuture"],[8,"FutureFrom"],[8,"Executor"],[3,"ExecuteError"],[3,"ReuniteError"],[4,"MergedItem"],[3,"AndThen"],[3,"Filter"],[3,"FilterMap"],[3,"Flatten"],[3,"FromErr"],[3,"Fuse"],[3,"StreamFuture"],[3,"Inspect"],[3,"InspectErr"],[3,"Map"],[3,"MapErr"],[3,"Peekable"],[3,"Skip"],[3,"SkipWhile"],[3,"Take"],[3,"TakeWhile"],[3,"Forward"],[3,"Buffered"],[3,"BufferUnordered"],[3,"Chunks"],[3,"Wait"],[3,"SplitStream"],[3,"SplitSink"],[3,"FuturesUnordered"],[3,"FuturesOrdered"],[8,"Stream"],[3,"With"],[3,"WithFlatMap"],[3,"Flush"],[3,"SinkFromErr"],[3,"Send"],[3,"SinkMapErr"],[3,"Fanout"],[3,"Buffer"],[3,"Wait"],[8,"Sink"],[8,"EventSet"],[8,"Notify"],[8,"UnsafeNotify"],[3,"Sender"],[3,"Receiver"],[3,"SpawnHandle"],[3,"SendError"],[3,"TrySendError"],[3,"Sender"],[3,"UnboundedSender"],[3,"Receiver"],[3,"UnboundedReceiver"],[3,"BiLock"],[3,"BiLockAcquired"],[3,"Receiver"],[3,"UnboundedSender"],[3,"UnboundedReceiver"],[3,"SendError"],[3,"Sender"],[3,"Receiver"],[3,"SpawnHandle"],[3,"Empty"],[3,"Lazy"],[3,"PollFn"],[3,"FutureResult"],[3,"LoopFn"],[3,"AndThen"],[3,"Flatten"],[3,"FlattenStream"],[3,"IntoStream"],[3,"Join"],[3,"Join3"],[3,"Join4"],[3,"Join5"],[3,"Map"],[3,"MapErr"],[3,"FromErr"],[3,"OrElse"],[3,"Select"],[3,"SelectNext"],[3,"Select2"],[3,"Then"],[3,"Inspect"],[3,"CatchUnwind"],[3,"JoinAll"],[3,"SelectAll"],[3,"SelectOk"],[3,"SharedItem"],[3,"SharedError"],[3,"Iter"],[3,"IterOk"],[3,"IterResult"],[3,"Repeat"],[3,"Chain"],[3,"Concat"],[3,"Concat2"],[3,"Empty"],[3,"Fold"],[3,"ForEach"],[3,"Merge"],[3,"Once"],[3,"OrElse"],[3,"PollFn"],[3,"Select"],[3,"Then"],[3,"Unfold"],[3,"Zip"],[3,"CatchUnwind"],[3,"Collect"],[3,"IterMut"],[3,"SendAll"],[3,"Task"],[3,"Spawn"],[3,"NotifyHandle"],[3,"AtomicTask"],[3,"UnparkEvent"],[3,"LocalKey"],[3,"BiLockGuard"],[3,"BiLockAcquire"],[3,"Canceled"],[3,"Execute"],[3,"SpawnHandle"],[3,"Execute"],[3,"Sender"],[3,"SpawnHandle"],[3,"Execute"],[3,"Execute"]]};
searchIndex["gcollections"]={"doc":"Wrappers of the standard collection library for generic…","items":[[0,"macros","gcollections","",N,N],[0,"kind","","We distinguish between ground and non-ground types. A…",N,N],[8,"GroundType","gcollections::kind","",N,N],[8,"Collection","","",N,N],[16,"Item","","",0,N],[8,"AssociativeCollection","","",N,N],[16,"Location","","",1,N],[8,"IntervalKind","","",N,N],[8,"SequenceKind","","",N,N],[0,"ops","gcollections","",N,N],[0,"associative","gcollections::ops","",N,N],[8,"Alloc","gcollections::ops::associative","",N,N],[10,"alloc","","",2,N],[8,"Replace","","Returns the value previously at location `loc`.",N,N],[10,"replace","","",3,N],[0,"bounded","gcollections::ops","",N,N],[8,"Bounded","gcollections::ops::bounded","",N,N],[10,"lower","","",4,N],[10,"upper","","",4,N],[8,"ShrinkLeft","","",N,N],[10,"shrink_left","","",5,N],[8,"ShrinkRight","","",N,N],[10,"shrink_right","","",6,N],[8,"StrictShrinkLeft","","",N,N],[10,"strict_shrink_left","","",7,N],[8,"StrictShrinkRight","","",N,N],[10,"strict_shrink_right","","",8,N],[0,"cardinality","gcollections::ops","",N,N],[8,"Cardinality","gcollections::ops::cardinality","",N,N],[16,"Size","","",9,N],[10,"size","","",9,N],[8,"IsSingleton","","",N,N],[10,"is_singleton","","",10,[[["self"]],["bool"]]],[8,"IsEmpty","","",N,N],[10,"is_empty","","",11,[[["self"]],["bool"]]],[0,"constructor","gcollections::ops","",N,N],[8,"Empty","gcollections::ops::constructor","",N,N],[10,"empty","","",12,[[],["self"]]],[8,"Singleton","","",N,N],[10,"singleton","","",13,N],[0,"multiset","gcollections::ops","",N,N],[8,"Insert","gcollections::ops::multiset","",N,N],[10,"insert","","",14,N],[8,"Extract","","",N,N],[10,"extract","","",15,[[["self"]],["option"]]],[8,"Multiset","","",N,N],[0,"sequence","gcollections::ops","",N,N],[0,"ordering","gcollections::ops::sequence","",N,N],[3,"Back","gcollections::ops::sequence::ordering","",N,N],[3,"Front","","",N,N],[8,"Push","gcollections::ops::sequence","",N,N],[10,"push","","",16,N],[8,"Pop","","",N,N],[10,"pop","","",17,[[["self"]],["option"]]],[8,"Sequence","","",N,N],[0,"set","gcollections::ops","",N,N],[8,"Intersection","gcollections::ops::set","",N,N],[16,"Output","","",18,N],[10,"intersection","","",18,N],[8,"Union","","",N,N],[16,"Output","","",19,N],[10,"union","","",19,N],[8,"Difference","","",N,N],[16,"Output","","",20,N],[10,"difference","","",20,N],[8,"SymmetricDifference","","",N,N],[16,"Output","","",21,N],[10,"symmetric_difference","","",21,N],[8,"Complement","","",N,N],[10,"complement","","",22,[[["self"]],["self"]]],[8,"Contains","","",N,N],[10,"contains","","",23,N],[8,"Disjoint","","",N,N],[10,"is_disjoint","","",24,[[["self"],["rhs"]],["bool"]]],[8,"Subset","","",N,N],[10,"is_subset","","",25,[[["self"],["rhs"]],["bool"]]],[8,"ProperSubset","","",N,N],[10,"is_proper_subset","","",26,[[["self"],["rhs"]],["bool"]]],[8,"Overlap","","",N,N],[10,"overlap","","",27,[[["self"],["rhs"]],["bool"]]],[0,"lattice","gcollections::ops","",N,N],[0,"test","gcollections::ops::lattice","",N,N],[3,"LatticeTester","gcollections::ops::lattice::test","",N,N],[11,"new","","",28,[[["usize"],["vec"],["vec"],["vec",["skleene"]],["vec"],["vec"]],["self"]]],[11,"test_all","","",28,[[["self"]]]],[11,"test_entailment","","",28,[[["self"],["t"],["t"],["skleene"]]]],[11,"test_join","","",28,[[["self"],["t"],["t"],["t"]]]],[11,"test_meet","","",28,[[["self"],["t"],["t"],["t"]]]],[8,"Join","gcollections::ops::lattice","",N,N],[10,"join","","",29,[[["self"],["self"]],["self"]]],[8,"Meet","","",N,N],[10,"meet","","",30,[[["self"],["self"]],["self"]]],[8,"Entailment","","",N,N],[10,"entail","","",31,[[["self"],["self"]],["skleene"]]],[8,"StrictEntailment","","",N,N],[10,"strict_entail","","Must be similar to `a.entail(&b) && a != b`.",32,[[["self"],["self"]],["skleene"]]],[8,"Top","","",N,N],[10,"top","","",33,[[],["self"]]],[8,"Bot","","",N,N],[10,"bot","","",34,[[],["self"]]],[8,"Lattice","","",N,N],[8,"BoundedLattice","","",N,N],[0,"wrappers","gcollections","",N,N],[0,"bit_set","gcollections::wrappers","",N,N],[3,"BitSet","gcollections::wrappers::bit_set","",N,N],[11,"wrap","","",35,[[["stdbitset"]],["bitset"]]],[0,"btree_set","gcollections::wrappers","",N,N],[3,"BTreeSet","gcollections::wrappers::btree_set","",N,N],[11,"wrap","","",36,[[["stdbtreeset"]],["btreeset"]]],[0,"hash_set","gcollections::wrappers","",N,N],[3,"HashSet","gcollections::wrappers::hash_set","",N,N],[11,"wrap","","",37,[[["stdhashset"]],["hashset"]]],[0,"optional","gcollections::wrappers","",N,N],[3,"Optional","gcollections::wrappers::optional","",N,N],[11,"wrap","","",38,[[["option"]],["optional"]]],[11,"unwrap","","",38,[[["self"]],["option"]]],[0,"primitives","gcollections::wrappers","",N,N],[0,"vector","","",N,N],[3,"Vector","gcollections::wrappers::vector","",N,N],[6,"VectorStack","","",N,N],[11,"wrap","","",39,[[["vec"]],["vector"]]],[0,"vector_deque","gcollections::wrappers","",N,N],[3,"VectorDeque","gcollections::wrappers::vector_deque","",N,N],[6,"DequeFrontStack","","",N,N],[6,"DequeBackStack","","",N,N],[6,"DequeFrontBackQueue","","",N,N],[6,"DequeBackFrontQueue","","",N,N],[11,"wrap","","",40,[[["vecdeque"]],["vectordeque"]]],[0,"queue","gcollections","",N,N],[3,"Queue","gcollections::queue","",N,N],[11,"wrap","","",41,[[["s"]],["self"]]],[0,"stack","gcollections","",N,N],[3,"Stack","gcollections::stack","",N,N],[11,"wrap","","",42,[[["s"]],["self"]]],[14,"forward_val_val_binop","gcollections","",N,N],[14,"forward_ref_val_binop","","",N,N],[14,"forward_val_ref_binop","","",N,N],[14,"forward_all_binop","","",N,N],[11,"from","gcollections::ops::sequence::ordering","",43,[[["t"]],["t"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"from","gcollections::ops::lattice::test","",28,[[["t"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"from","gcollections::wrappers::bit_set","",35,[[["t"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"from","gcollections::wrappers::btree_set","",36,[[["t"]],["t"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"from","gcollections::wrappers::hash_set","",37,[[["t"]],["t"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"is_singleton","gcollections::wrappers::optional","",38,[[["self"]],["bool"]]],[11,"is_empty","","",38,[[["self"]],["bool"]]],[11,"singleton","","",38,N],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,N],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"is_singleton","gcollections::wrappers::vector","",39,[[["self"]],["bool"]]],[11,"is_empty","","",39,[[["self"]],["bool"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"is_singleton","gcollections::wrappers::vector_deque","",40,[[["self"]],["bool"]]],[11,"is_empty","","",40,[[["self"]],["bool"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"is_singleton","gcollections::queue","",41,[[["self"]],["bool"]]],[11,"is_empty","","",41,[[["self"]],["bool"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"is_singleton","gcollections::stack","",42,[[["self"]],["bool"]]],[11,"is_empty","","",42,[[["self"]],["bool"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"size","gcollections::wrappers::optional","",38,[[["self"]],["usize"]]],[11,"size","gcollections::wrappers::vector","",39,[[["self"]],["usize"]]],[11,"size","gcollections::wrappers::vector_deque","",40,[[["self"]],["usize"]]],[11,"size","gcollections::queue","",41,N],[11,"size","gcollections::stack","",42,N],[11,"empty","gcollections::wrappers::optional","",38,[[],["optional"]]],[11,"empty","gcollections::wrappers::vector","",39,[[],["vector"]]],[11,"empty","gcollections::wrappers::vector_deque","",40,[[],["vectordeque"]]],[11,"empty","gcollections::queue","",41,[[],["self"]]],[11,"empty","gcollections::stack","",42,[[],["self"]]],[11,"singleton","gcollections::wrappers::optional","",38,[[["t"]],["optional"]]],[11,"insert","gcollections::queue","",41,N],[11,"insert","gcollections::stack","",42,N],[11,"extract","gcollections::queue","",41,[[["self"]],["option"]]],[11,"extract","gcollections::stack","",42,[[["self"]],["option"]]],[11,"push","gcollections::wrappers::vector","",39,[[["self"],["t"]]]],[11,"push","gcollections::wrappers::vector_deque","",40,[[["self"],["t"]]]],[11,"push","","",40,[[["self"],["t"]]]],[11,"pop","gcollections::wrappers::vector","",39,[[["self"]],["option"]]],[11,"pop","gcollections::wrappers::vector_deque","",40,[[["self"]],["option"]]],[11,"pop","","",40,[[["self"]],["option"]]],[11,"intersection","gcollections::wrappers::bit_set","",35,[[["self"],["bitset"]],["bitset"]]],[11,"intersection","gcollections::wrappers::btree_set","",36,[[["self"],["btreeset"]],["btreeset"]]],[11,"intersection","gcollections::wrappers::hash_set","",37,[[["self"],["hashset"]],["hashset"]]],[11,"intersection","gcollections::wrappers::optional","",38,N],[11,"intersection","","",38,N],[11,"union","gcollections::wrappers::bit_set","",35,[[["self"],["bitset"]],["bitset"]]],[11,"union","gcollections::wrappers::btree_set","",36,[[["self"],["btreeset"]],["btreeset"]]],[11,"union","gcollections::wrappers::hash_set","",37,[[["self"],["hashset"]],["hashset"]]],[11,"difference","gcollections::wrappers::bit_set","",35,[[["self"],["bitset"]],["bitset"]]],[11,"difference","gcollections::wrappers::btree_set","",36,[[["self"],["btreeset"]],["btreeset"]]],[11,"difference","gcollections::wrappers::hash_set","",37,[[["self"],["hashset"]],["hashset"]]],[11,"difference","gcollections::wrappers::optional","",38,N],[11,"difference","","",38,N],[11,"symmetric_difference","gcollections::wrappers::bit_set","",35,[[["self"],["bitset"]],["bitset"]]],[11,"symmetric_difference","gcollections::wrappers::btree_set","",36,[[["self"],["btreeset"]],["btreeset"]]],[11,"symmetric_difference","gcollections::wrappers::hash_set","",37,[[["self"],["hashset"]],["hashset"]]],[11,"contains","gcollections::wrappers::bit_set","",35,N],[11,"contains","gcollections::wrappers::btree_set","",36,[[["self"],["t"]],["bool"]]],[11,"contains","gcollections::wrappers::hash_set","",37,[[["self"],["t"]],["bool"]]],[11,"contains","gcollections::wrappers::optional","",38,[[["self"],["t"]],["bool"]]],[11,"is_disjoint","","",38,[[["self"],["optional"]],["bool"]]],[11,"is_disjoint","","",38,[[["self"],["u"]],["bool"]]],[11,"is_subset","","",38,[[["self"],["optional"]],["bool"]]],[11,"is_proper_subset","","",38,[[["self"],["optional"]],["bool"]]],[11,"overlap","","",38,[[["self"],["optional"]],["bool"]]],[11,"overlap","","",38,[[["self"],["u"]],["bool"]]],[11,"cmp","","",38,[[["self"],["optional"]],["ordering"]]],[11,"eq","","",38,[[["self"],["optional"]],["bool"]]],[11,"ne","","",38,[[["self"],["optional"]],["bool"]]],[11,"clone","","",38,[[["self"]],["optional"]]],[11,"partial_cmp","","",38,[[["self"],["optional"]],["option",["ordering"]]]],[11,"lt","","",38,[[["self"],["optional"]],["bool"]]],[11,"le","","",38,[[["self"],["optional"]],["bool"]]],[11,"gt","","",38,[[["self"],["optional"]],["bool"]]],[11,"ge","","",38,[[["self"],["optional"]],["bool"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"add","","",38,N],[11,"add","","",38,N],[11,"sub","","",38,N],[11,"sub","","",38,N],[11,"mul","","",38,N],[11,"mul","","",38,N],[11,"deref","gcollections::wrappers::bit_set","",35,[[["self"]],["stdbitset"]]],[11,"deref","gcollections::wrappers::btree_set","",36,[[["self"]],["stdbtreeset"]]],[11,"deref","gcollections::wrappers::hash_set","",37,[[["self"]],["stdhashset"]]],[11,"deref","gcollections::wrappers::optional","",38,[[["self"]],["option"]]],[11,"deref","gcollections::wrappers::vector","",39,[[["self"]],["vec"]]],[11,"deref","gcollections::wrappers::vector_deque","",40,[[["self"]],["vecdeque"]]],[11,"deref","gcollections::queue","",41,[[["self"]],["s"]]],[11,"deref","gcollections::stack","",42,[[["self"]],["s"]]],[11,"deref_mut","gcollections::wrappers::bit_set","",35,[[["self"]],["stdbitset"]]],[11,"deref_mut","gcollections::wrappers::btree_set","",36,[[["self"]],["stdbtreeset"]]],[11,"deref_mut","gcollections::wrappers::hash_set","",37,[[["self"]],["stdhashset"]]],[11,"deref_mut","gcollections::wrappers::optional","",38,[[["self"]],["option"]]],[11,"deref_mut","gcollections::wrappers::vector","",39,[[["self"]],["vec"]]],[11,"deref_mut","gcollections::wrappers::vector_deque","",40,[[["self"]],["vecdeque"]]],[11,"deref_mut","gcollections::queue","",41,[[["self"]],["s"]]],[11,"deref_mut","gcollections::stack","",42,[[["self"]],["s"]]]],"paths":[[8,"Collection"],[8,"AssociativeCollection"],[8,"Alloc"],[8,"Replace"],[8,"Bounded"],[8,"ShrinkLeft"],[8,"ShrinkRight"],[8,"StrictShrinkLeft"],[8,"StrictShrinkRight"],[8,"Cardinality"],[8,"IsSingleton"],[8,"IsEmpty"],[8,"Empty"],[8,"Singleton"],[8,"Insert"],[8,"Extract"],[8,"Push"],[8,"Pop"],[8,"Intersection"],[8,"Union"],[8,"Difference"],[8,"SymmetricDifference"],[8,"Complement"],[8,"Contains"],[8,"Disjoint"],[8,"Subset"],[8,"ProperSubset"],[8,"Overlap"],[3,"LatticeTester"],[8,"Join"],[8,"Meet"],[8,"Entailment"],[8,"StrictEntailment"],[8,"Top"],[8,"Bot"],[3,"BitSet"],[3,"BTreeSet"],[3,"HashSet"],[3,"Optional"],[3,"Vector"],[3,"VectorDeque"],[3,"Queue"],[3,"Stack"],[3,"Back"],[3,"Front"]]};
searchIndex["heck"]={"doc":"heck is a case conversion library.","items":[[8,"CamelCase","heck","This trait defines a camel case conversion.",N,N],[10,"to_camel_case","","Convert this type to camel case.",0,N],[8,"KebabCase","","This trait defines a kebab case conversion.",N,N],[10,"to_kebab_case","","Convert this type to kebab case.",1,N],[8,"MixedCase","","This trait defines a mixed case conversion.",N,N],[10,"to_mixed_case","","Convert this type to mixed case.",2,N],[8,"ShoutySnakeCase","","This trait defines a shouty snake case conversion.",N,N],[10,"to_shouty_snake_case","","Convert this type to shouty snake case.",3,N],[8,"ShoutySnekCase","","Oh heck, ShoutySnekCase is an alias for ShoutySnakeCase.…",N,N],[10,"TO_SHOUTY_SNEK_CASE","","CONVERT THIS TYPE TO SNEK CASE.",4,N],[8,"SnakeCase","","This trait defines a camel case conversion.",N,N],[10,"to_snake_case","","Convert this type to snake case.",5,N],[8,"SnekCase","","Oh heck, SnekCase is an alias for SnakeCase. See SnakeCase…",N,N],[10,"to_snek_case","","Convert this type to snek case.",6,N],[8,"TitleCase","","This trait defines a title case conversion.",N,N],[10,"to_title_case","","Convert this type to title case.",7,N]],"paths":[[8,"CamelCase"],[8,"KebabCase"],[8,"MixedCase"],[8,"ShoutySnakeCase"],[8,"ShoutySnekCase"],[8,"SnakeCase"],[8,"SnekCase"],[8,"TitleCase"]]};
searchIndex["httparse"]={"doc":"httparse","items":[[3,"InvalidChunkSize","httparse","An error in parsing a chunk size.",N,N],[3,"Request","","A parsed Request.",N,N],[12,"method","","The request method, such as `GET`.",0,N],[12,"path","","The request path, such as `/about-us`.",0,N],[12,"version","","The request version, such as `HTTP/1.1`.",0,N],[12,"headers","","The request headers.",0,N],[3,"Response","","A parsed Response.",N,N],[12,"version","","The response version, such as `HTTP/1.1`.",1,N],[12,"code","","The response code, such as `200`.",1,N],[12,"reason","","The response reason-phrase, such as `OK`.",1,N],[12,"headers","","The response headers.",1,N],[3,"Header","","Represents a parsed header.",N,N],[12,"name","","The name portion of a header.",2,N],[12,"value","","The value portion of a header.",2,N],[4,"Error","","An error in parsing.",N,N],[13,"HeaderName","","Invalid byte in header name.",3,N],[13,"HeaderValue","","Invalid byte in header value.",3,N],[13,"NewLine","","Invalid byte in new line.",3,N],[13,"Status","","Invalid byte in Response status.",3,N],[13,"Token","","Invalid byte where token is required.",3,N],[13,"TooManyHeaders","","Parsed more headers than provided buffer can contain.",3,N],[13,"Version","","Invalid byte in HTTP version.",3,N],[4,"Status","","The result of a successful parse pass.",N,N],[13,"Complete","","The completed result.",4,N],[13,"Partial","","A partial result.",4,N],[5,"parse_headers","","Parse a buffer of bytes as headers.",N,N],[5,"parse_chunk_size","","Parse a buffer of bytes as a chunk size.",N,N],[6,"Result","","A Result of any parsing action.",N,N],[17,"EMPTY_HEADER","","An empty header, useful for constructing a `Header` array…",N,N],[11,"is_complete","","Convenience method to check if status is complete.",4,[[["self"]],["bool"]]],[11,"is_partial","","Convenience method to check if status is partial.",4,[[["self"]],["bool"]]],[11,"unwrap","","Convenience method to unwrap a Complete value. Panics if…",4,[[["self"]],["t"]]],[11,"new","","Creates a new Request, using a slice of headers you…",0,N],[11,"parse","","Try to parse a buffer of bytes into the Request.",0,N],[11,"new","","Creates a new `Response` using a slice of `Header`s you…",1,N],[11,"parse","","Try to parse a buffer of bytes into this `Response`.",1,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"eq","","",3,[[["self"],["error"]],["bool"]]],[11,"eq","","",5,[[["self"],["invalidchunksize"]],["bool"]]],[11,"eq","","",4,[[["self"],["status"]],["bool"]]],[11,"ne","","",4,[[["self"],["status"]],["bool"]]],[11,"eq","","",0,[[["self"],["request"]],["bool"]]],[11,"ne","","",0,[[["self"],["request"]],["bool"]]],[11,"eq","","",1,[[["self"],["response"]],["bool"]]],[11,"ne","","",1,[[["self"],["response"]],["bool"]]],[11,"eq","","",2,[[["self"],["header"]],["bool"]]],[11,"ne","","",2,[[["self"],["header"]],["bool"]]],[11,"clone","","",3,[[["self"]],["error"]]],[11,"clone","","",4,[[["self"]],["status"]]],[11,"clone","","",2,[[["self"]],["header"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"description","","",3,[[["self"]],["str"]]]],"paths":[[3,"Request"],[3,"Response"],[3,"Header"],[4,"Error"],[4,"Status"],[3,"InvalidChunkSize"]]};
searchIndex["humantime"]={"doc":"Human-friendly time parser and formatter","items":[[3,"FormattedDuration","humantime","A wrapper type that allows you to Display a Duration",N,N],[3,"Duration","","A wrapper for duration that has `FromStr` implementation",N,N],[3,"Timestamp","","A wrapper for SystemTime that has `FromStr` implementation",N,N],[3,"Rfc3339Timestamp","","A wrapper type that allows you to Display a SystemTime",N,N],[4,"DurationError","","Error parsing human-friendly duration",N,N],[13,"InvalidCharacter","","Invalid character during parsing",0,N],[13,"NumberExpected","","Non-numeric value where number is expected",0,N],[13,"UnknownUnit","","Unit in the number is not one of allowed units",0,N],[13,"NumberOverflow","","The numeric value is too large",0,N],[13,"Empty","","The value was an empty string (or consists only whitespace)",0,N],[4,"TimestampError","","Error parsing datetime (timestamp)",N,N],[13,"OutOfRange","","Numeric component is out of range",1,N],[13,"InvalidDigit","","Bad character where digit is expected",1,N],[13,"InvalidFormat","","Other formatting errors",1,N],[5,"parse_duration","","Parse duration object `1hour 12min 5s`",N,[[["str"]],["result",["duration","error"]]]],[5,"format_duration","","Formats duration into a human-readable string",N,[[["duration"]],["formattedduration"]]],[5,"parse_rfc3339","","Parse RFC3339 timestamp `2018-02-14T00:28:07Z`",N,[[["str"]],["result",["systemtime","error"]]]],[5,"parse_rfc3339_weak","","Parse RFC3339-like timestamp `2018-02-14 00:28:07`",N,[[["str"]],["result",["systemtime","error"]]]],[5,"format_rfc3339","","Format an RFC3339 timestamp `2018-02-14T00:28:07Z`",N,[[["systemtime"]],["rfc3339timestamp"]]],[5,"format_rfc3339_seconds","","Format an RFC3339 timestamp `2018-02-14T00:28:07Z`",N,[[["systemtime"]],["rfc3339timestamp"]]],[5,"format_rfc3339_nanos","","Format an RFC3339 timestamp `2018-02-14T00:28:07.000000000Z`",N,[[["systemtime"]],["rfc3339timestamp"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"eq","","",0,[[["self"],["error"]],["bool"]]],[11,"ne","","",0,[[["self"],["error"]],["bool"]]],[11,"eq","","",3,[[["self"],["duration"]],["bool"]]],[11,"ne","","",3,[[["self"],["duration"]],["bool"]]],[11,"eq","","",4,[[["self"],["timestamp"]],["bool"]]],[11,"ne","","",4,[[["self"],["timestamp"]],["bool"]]],[11,"eq","","",1,[[["self"],["error"]],["bool"]]],[11,"from","","",3,[[["stdduration"]],["duration"]]],[11,"from","","",4,[[["systemtime"]],["timestamp"]]],[11,"clone","","",0,[[["self"]],["error"]]],[11,"clone","","",2,[[["self"]],["formattedduration"]]],[11,"clone","","",3,[[["self"]],["duration"]]],[11,"clone","","",4,[[["self"]],["timestamp"]]],[11,"clone","","",1,[[["self"]],["error"]]],[11,"clone","","",5,[[["self"]],["rfc3339timestamp"]]],[11,"into","","",3,[[["self"]],["stdduration"]]],[11,"into","","",4,[[["self"]],["systemtime"]]],[11,"as_ref","","",3,[[["self"]],["stdduration"]]],[11,"as_ref","","",4,[[["self"]],["systemtime"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"from_str","","",3,[[["str"]],["result",["duration"]]]],[11,"from_str","","",4,[[["str"]],["result",["timestamp"]]]],[11,"deref","","",3,[[["self"]],["stdduration"]]],[11,"deref","","",4,[[["self"]],["systemtime"]]],[11,"hash","","",3,N],[11,"description","","",0,[[["self"]],["str"]]],[11,"cause","","",0,[[["self"]],["option",["error"]]]],[11,"description","","",1,[[["self"]],["str"]]],[11,"cause","","",1,[[["self"]],["option",["error"]]]]],"paths":[[4,"DurationError"],[4,"TimestampError"],[3,"FormattedDuration"],[3,"Duration"],[3,"Timestamp"],[3,"Rfc3339Timestamp"]]};
searchIndex["hyper"]={"doc":"Hyper","items":[[3,"Url","hyper","A parsed URL record.",N,N],[3,"LanguageTag","","A language tag as described in BCP47.",N,N],[12,"language","","Language subtags are used to indicate the language,…",0,N],[12,"extlangs","","Extended language subtags are used to identify certain…",0,N],[12,"script","","Script subtags are used to indicate the script or writing…",0,N],[12,"region","","Region subtags are used to indicate linguistic variations…",0,N],[12,"variants","","Variant subtags are used to indicate additional,…",0,N],[12,"extensions","","Extensions provide a mechanism for extending language tags…",0,N],[12,"privateuse","","Private use subtags are used to indicate distinctions in…",0,N],[0,"client","","HTTP Client",N,N],[3,"Client","hyper::client","A Client to use additional features with Requests.",N,N],[3,"RequestBuilder","","Options for an individual Request.",N,N],[3,"ProxyConfig","","Proxy server configuration with a custom connector and TLS…",N,N],[4,"Body","","An enum of possible body types for a Request.",N,N],[13,"ChunkedBody","","A Reader does not necessarily know it's size, so it is…",1,N],[13,"SizedBody","","For Readers that can know their size, like a `File`.",1,N],[13,"BufBody","","A String has a size, and uses Content-Length.",1,N],[4,"RedirectPolicy","","Behavior regarding how to handle redirects within a Client.",N,N],[13,"FollowNone","","Don't follow any redirects.",2,N],[13,"FollowAll","","Follow all redirects.",2,N],[13,"FollowIf","","Follow a redirect if the contained function returns true.",2,N],[0,"pool","","Client Connection Pooling",N,N],[3,"Pool","hyper::client::pool","The `NetworkConnector` that behaves as a connection pool…",N,N],[3,"Config","","Config options for the `Pool`.",N,N],[12,"max_idle","","The maximum idle connections per host.",3,N],[3,"PooledStream","","A Stream that will try to be returned to the Pool when…",N,N],[11,"new","","Creates a `Pool` with a `DefaultConnector`.",4,[[["config"]],["pool",["defaultconnector"]]]],[11,"with_connector","","Creates a `Pool` with a specified `NetworkConnector`.",4,[[["config"],["c"]],["pool"]]],[11,"set_idle_timeout","","Set a duration for how long an idle connection is still…",4,[[["self"],["option",["duration"]]]]],[11,"set_stale_check","","",4,[[["self"],["f"]]]],[11,"clear_idle","","Clear all idle connections from the Pool, closing them.",4,[[["self"]]]],[11,"into_inner","","Take the wrapped stream out of the pool completely.",5,[[["self"]],["s"]]],[11,"get_ref","","Gets a borrowed reference to the underlying stream.",5,[[["self"]],["s"]]],[0,"request","hyper::client","Client Requests",N,N],[3,"Request","hyper::client::request","A client request to a remote server. The W type tracks the…",N,N],[12,"url","","The target URI for this request.",6,N],[12,"version","","The HTTP version of this request.",6,N],[11,"headers","","Read the Request headers.",6,[[["self"]],["headers"]]],[11,"method","","Read the Request method.",6,[[["self"]],["method"]]],[11,"set_write_timeout","","Set the write timeout.",6,[[["self"],["option",["duration"]]],["result"]]],[11,"set_read_timeout","","Set the read timeout.",6,[[["self"],["option",["duration"]]],["result"]]],[11,"with_message","","Create a new `Request<Fresh>` that will use the given…",6,[[["method"],["url"],["box",["httpmessage"]]],["result",["request"]]]],[11,"new","","Create a new client request.",6,[[["method"],["url"]],["result",["request"]]]],[11,"with_connector","","Create a new client request with a specific underlying…",6,[[["method"],["url"],["c"]],["result",["request"]]]],[11,"start","","Consume a Fresh Request, writing the headers and method,…",6,[[["self"]],["result",["request"]]]],[11,"headers_mut","","Get a mutable reference to the Request headers.",6,[[["self"]],["headers"]]],[11,"send","","Completes writing the request, and returns a response to…",6,[[["self"]],["result",["response"]]]],[0,"response","hyper::client","Client Responses",N,N],[3,"Response","hyper::client::response","A response for a client request to a remote server.",N,N],[12,"status","","The status from the server.",7,N],[12,"headers","","The headers from the server.",7,N],[12,"version","","The HTTP version of this response from the server.",7,N],[12,"url","","The final URL of this response.",7,N],[11,"new","","Creates a new response from a server.",7,[[["url"],["box",["networkstream"]]],["result",["response"]]]],[11,"with_message","","Creates a new response received from the server on the…",7,[[["url"],["box",["httpmessage"]]],["result",["response"]]]],[11,"status_raw","","Get the raw status code and reason.",7,[[["self"]],["rawstatus"]]],[11,"get_ref","","Gets a borrowed reference to the underlying `HttpMessage`.",7,[[["self"]],["httpmessage"]]],[8,"IntoUrl","hyper::client","A helper trait to convert common objects into a Url.",N,N],[10,"into_url","","Consumes the object, trying to return a Url.",8,[[["self"]],["result",["url","urlerror"]]]],[11,"new","","Create a new Client.",9,[[],["client"]]],[11,"with_pool_config","","Create a new Client with a configured Pool Config.",9,[[["config"]],["client"]]],[11,"with_http_proxy","","Create a Client with an HTTP proxy to a (host, port).",9,[[["h"],["u16"]],["client"]]],[11,"with_proxy_config","","Create a Client using a proxy with a custom connector and…",9,[[["proxyconfig"]],["client"]]],[11,"with_connector","","Create a new client with a specific connector.",9,[[["c"]],["client"]]],[11,"with_protocol","","Create a new client with a specific `Protocol`.",9,[[["p"]],["client"]]],[11,"set_redirect_policy","","Set the RedirectPolicy.",9,[[["self"],["redirectpolicy"]]]],[11,"set_read_timeout","","Set the read timeout value for all requests.",9,[[["self"],["option",["duration"]]]]],[11,"set_write_timeout","","Set the write timeout value for all requests.",9,[[["self"],["option",["duration"]]]]],[11,"get","","Build a Get request.",9,[[["self"],["u"]],["requestbuilder"]]],[11,"head","","Build a Head request.",9,[[["self"],["u"]],["requestbuilder"]]],[11,"patch","","Build a Patch request.",9,[[["self"],["u"]],["requestbuilder"]]],[11,"post","","Build a Post request.",9,[[["self"],["u"]],["requestbuilder"]]],[11,"put","","Build a Put request.",9,[[["self"],["u"]],["requestbuilder"]]],[11,"delete","","Build a Delete request.",9,[[["self"],["u"]],["requestbuilder"]]],[11,"request","","Build a new request using this Client.",9,[[["self"],["method"],["u"]],["requestbuilder"]]],[11,"body","","Set a request body to be sent.",10,[[["self"],["b"]],["requestbuilder"]]],[11,"headers","","Add additional headers to the request.",10,[[["self"],["headers"]],["requestbuilder"]]],[11,"header","","Add an individual new header to the request.",10,[[["self"],["h"]],["requestbuilder"]]],[11,"send","","Execute this request and receive a Response back.",10,[[["self"]],["result",["response"]]]],[11,"new","","Create a new `ProxyConfig`.",11,[[["str"],["h"],["u16"],["c"],["s"]],["proxyconfig"]]],[11,"set_pool_config","","Change the `pool::Config` for the proxy.",11,[[["self"],["option",["config"]]]]],[0,"error","hyper","Error and Result module.",N,N],[4,"ParseError","hyper::error","Errors that can occur during parsing.",N,N],[13,"EmptyHost","","",12,N],[13,"IdnaError","","",12,N],[13,"InvalidPort","","",12,N],[13,"InvalidIpv4Address","","",12,N],[13,"InvalidIpv6Address","","",12,N],[13,"InvalidDomainCharacter","","",12,N],[13,"RelativeUrlWithoutBase","","",12,N],[13,"RelativeUrlWithCannotBeABaseBase","","",12,N],[13,"SetHostOnCannotBeABaseUrl","","",12,N],[13,"Overflow","","",12,N],[4,"Error","","A set of errors that can occur parsing HTTP streams.",N,N],[13,"Method","","An invalid `Method`, such as `GE,T`.",13,N],[13,"Uri","","An invalid `RequestUri`, such as `exam ple.domain`.",13,N],[13,"Version","","An invalid `HttpVersion`, such as `HTP/1.1`",13,N],[13,"Header","","An invalid `Header`.",13,N],[13,"TooLarge","","A message head is too large to be reasonable.",13,N],[13,"Status","","An invalid `Status`, such as `1337 ELITE`.",13,N],[13,"Io","","An `io::Error` that occurred while trying to read or write…",13,N],[13,"Ssl","","An error from a SSL library.",13,N],[13,"Utf8","","Parsing a field as string failed",13,N],[6,"Result","","Result type often returned from methods that can have…",N,N],[0,"method","hyper","The HTTP request method",N,N],[4,"Method","hyper::method","The Request Method (VERB)",N,N],[13,"Options","","OPTIONS",14,N],[13,"Get","","GET",14,N],[13,"Post","","POST",14,N],[13,"Put","","PUT",14,N],[13,"Delete","","DELETE",14,N],[13,"Head","","HEAD",14,N],[13,"Trace","","TRACE",14,N],[13,"Connect","","CONNECT",14,N],[13,"Patch","","PATCH",14,N],[13,"Extension","","Method extensions. An example would be `let m =…",14,N],[11,"safe","","Whether a method is considered \"safe\", meaning the request…",14,[[["self"]],["bool"]]],[11,"idempotent","","Whether a method is considered \"idempotent\", meaning the…",14,[[["self"]],["bool"]]],[0,"header","hyper","Headers container, and common header fields.",N,N],[3,"EntityTag","hyper::header","An entity tag, defined in RFC7232",N,N],[12,"weak","","Weakness indicator for the tag",15,N],[3,"HttpDate","","A `time::Time` with HTTP formatting and parsing",N,N],[12,"0","","",16,N],[3,"Quality","","Represents a quality used in quality values.",N,N],[12,"0","","",17,N],[3,"QualityItem","","Represents an item with a quality value as defined in…",N,N],[12,"item","","The actual contents of the field.",18,N],[12,"quality","","The quality (client or server preference) for the value.",18,N],[3,"Accept","","`Accept` header, defined in RFC7231",N,N],[12,"0","","",19,N],[3,"AccessControlAllowCredentials","","`Access-Control-Allow-Credentials` header, part of CORS",N,N],[3,"AccessControlAllowHeaders","","`Access-Control-Allow-Headers` header, part of CORS",N,N],[12,"0","","",20,N],[3,"AccessControlAllowMethods","","`Access-Control-Allow-Methods` header, part of CORS",N,N],[12,"0","","",21,N],[3,"AccessControlExposeHeaders","","`Access-Control-Expose-Headers` header, part of CORS",N,N],[12,"0","","",22,N],[3,"AccessControlMaxAge","","`Access-Control-Max-Age` header, part of CORS",N,N],[12,"0","","",23,N],[3,"AccessControlRequestHeaders","","`Access-Control-Request-Headers` header, part of CORS",N,N],[12,"0","","",24,N],[3,"AccessControlRequestMethod","","`Access-Control-Request-Method` header, part of CORS",N,N],[12,"0","","",25,N],[3,"AcceptCharset","","`Accept-Charset` header, defined in RFC7231",N,N],[12,"0","","",26,N],[3,"AcceptEncoding","","`Accept-Encoding` header, defined in RFC7231",N,N],[12,"0","","",27,N],[3,"AcceptLanguage","","`Accept-Language` header, defined in RFC7231",N,N],[12,"0","","",28,N],[3,"AcceptRanges","","`Accept-Ranges` header, defined in RFC7233",N,N],[12,"0","","",29,N],[3,"Allow","","`Allow` header, defined in RFC7231",N,N],[12,"0","","",30,N],[3,"Authorization","","`Authorization` header, defined in RFC7235",N,N],[12,"0","","",31,N],[3,"Basic","","Credential holder for Basic Authentication",N,N],[12,"username","","The username as a possibly empty string",32,N],[12,"password","","The password. `None` if the `:` delimiter character was…",32,N],[3,"Bearer","","Token holder for Bearer Authentication, most often seen…",N,N],[12,"token","","Actual bearer token as a string",33,N],[3,"CacheControl","","`Cache-Control` header, defined in RFC7234",N,N],[12,"0","","",34,N],[3,"Connection","","`Connection` header, defined in RFC7230",N,N],[12,"0","","",35,N],[3,"ContentDisposition","","A `Content-Disposition` header, (re)defined in RFC6266",N,N],[12,"disposition","","The disposition",36,N],[12,"parameters","","Disposition parameters",36,N],[3,"ContentLength","","`Content-Length` header, defined in RFC7230",N,N],[12,"0","","",37,N],[3,"ContentEncoding","","`Content-Encoding` header, defined in RFC7231",N,N],[12,"0","","",38,N],[3,"ContentLanguage","","`Content-Language` header, defined in RFC7231",N,N],[12,"0","","",39,N],[3,"ContentRange","","`Content-Range` header, defined in RFC7233",N,N],[12,"0","","",40,N],[3,"ContentType","","`Content-Type` header, defined in RFC7231",N,N],[12,"0","","",41,N],[3,"Cookie","","`Cookie` header, defined in RFC6265",N,N],[12,"0","","",42,N],[3,"Date","","`Date` header, defined in RFC7231",N,N],[12,"0","","",43,N],[3,"ETag","","`ETag` header, defined in RFC7232",N,N],[12,"0","","",44,N],[3,"Expires","","`Expires` header, defined in RFC7234",N,N],[12,"0","","",45,N],[3,"From","","`From` header, defined in RFC7231",N,N],[12,"0","","",46,N],[3,"Host","","The `Host` header.",N,N],[12,"hostname","","The hostname, such a example.domain.",47,N],[12,"port","","An optional port number.",47,N],[3,"IfModifiedSince","","`If-Modified-Since` header, defined in RFC7232",N,N],[12,"0","","",48,N],[3,"IfUnmodifiedSince","","`If-Unmodified-Since` header, defined in RFC7232",N,N],[12,"0","","",49,N],[3,"LastModified","","`Last-Modified` header, defined in RFC7232",N,N],[12,"0","","",50,N],[3,"Location","","`Location` header, defined in RFC7231",N,N],[12,"0","","",51,N],[3,"Origin","","The `Origin` header.",N,N],[12,"scheme","","The scheme, such as http or https",52,N],[12,"host","","The host, such as Host{hostname: \"hyper.rs\".to_owned(),…",52,N],[3,"Prefer","","`Prefer` header, defined in RFC7240",N,N],[12,"0","","",53,N],[3,"PreferenceApplied","","`Preference-Applied` header, defined in RFC7240",N,N],[12,"0","","",54,N],[3,"Referer","","`Referer` header, defined in RFC7231",N,N],[12,"0","","",55,N],[3,"Server","","`Server` header, defined in RFC7231",N,N],[12,"0","","",56,N],[3,"SetCookie","","`Set-Cookie` header, defined RFC6265",N,N],[12,"0","","",57,N],[3,"StrictTransportSecurity","","`StrictTransportSecurity` header, defined in RFC6797",N,N],[12,"include_subdomains","","Signals the UA that the HSTS Policy applies to this HSTS…",58,N],[12,"max_age","","Specifies the number of seconds, after the reception of…",58,N],[3,"TransferEncoding","","`Transfer-Encoding` header, defined in RFC7230",N,N],[12,"0","","",59,N],[3,"Upgrade","","`Upgrade` header, defined in RFC7230",N,N],[12,"0","","",60,N],[3,"Protocol","","Protocols that appear in the `Upgrade` header field",N,N],[12,"name","","The protocol identifier",61,N],[12,"version","","The optional version of the protocol, often in the format…",61,N],[3,"UserAgent","","`User-Agent` header, defined in RFC7231",N,N],[12,"0","","",62,N],[3,"Link","","The `Link` header, defined in RFC5988",N,N],[3,"LinkValue","","A single `link-value` of a `Link` header, based on: RFC5988",N,N],[3,"Headers","","A map of header fields on requests and responses.",N,N],[3,"HeadersItems","","An `Iterator` over the fields in a `Headers` map.",N,N],[3,"HeaderView","","Returned with the `HeadersItems` iterator.",N,N],[3,"HeaderFormatter","","A wrapper around any Header with a Display impl that calls…",N,N],[12,"0","","",63,N],[4,"Charset","","A Mime charset.",N,N],[13,"Us_Ascii","","US ASCII",64,N],[13,"Iso_8859_1","","ISO-8859-1",64,N],[13,"Iso_8859_2","","ISO-8859-2",64,N],[13,"Iso_8859_3","","ISO-8859-3",64,N],[13,"Iso_8859_4","","ISO-8859-4",64,N],[13,"Iso_8859_5","","ISO-8859-5",64,N],[13,"Iso_8859_6","","ISO-8859-6",64,N],[13,"Iso_8859_7","","ISO-8859-7",64,N],[13,"Iso_8859_8","","ISO-8859-8",64,N],[13,"Iso_8859_9","","ISO-8859-9",64,N],[13,"Iso_8859_10","","ISO-8859-10",64,N],[13,"Shift_Jis","","Shift_JIS",64,N],[13,"Euc_Jp","","EUC-JP",64,N],[13,"Iso_2022_Kr","","ISO-2022-KR",64,N],[13,"Euc_Kr","","EUC-KR",64,N],[13,"Iso_2022_Jp","","ISO-2022-JP",64,N],[13,"Iso_2022_Jp_2","","ISO-2022-JP-2",64,N],[13,"Iso_8859_6_E","","ISO-8859-6-E",64,N],[13,"Iso_8859_6_I","","ISO-8859-6-I",64,N],[13,"Iso_8859_8_E","","ISO-8859-8-E",64,N],[13,"Iso_8859_8_I","","ISO-8859-8-I",64,N],[13,"Gb2312","","GB2312",64,N],[13,"Big5","","Big5",64,N],[13,"Koi8_R","","KOI8-R",64,N],[13,"Ext","","An arbitrary charset specified as a string",64,N],[4,"Encoding","","A value to represent an encoding used in…",N,N],[13,"Chunked","","The `chunked` encoding.",65,N],[13,"Gzip","","The `gzip` encoding.",65,N],[13,"Deflate","","The `deflate` encoding.",65,N],[13,"Compress","","The `compress` encoding.",65,N],[13,"Identity","","The `identity` encoding.",65,N],[13,"EncodingExt","","Some other encoding that is less common, can be any String.",65,N],[4,"AccessControlAllowOrigin","","The `Access-Control-Allow-Origin` response header, part of…",N,N],[13,"Any","","Allow all origins",66,N],[13,"Null","","A hidden origin",66,N],[13,"Value","","Allow one particular origin",66,N],[4,"RangeUnit","","Range Units, described in RFC7233",N,N],[13,"Bytes","","Indicating byte-range requests are supported.",67,N],[13,"None","","Reserved as keyword, indicating no ranges are supported.",67,N],[13,"Unregistered","","The given range unit is not registered at IANA.",67,N],[4,"CacheDirective","","`CacheControl` contains a list of these directives.",N,N],[13,"NoCache","","\"no-cache\"",68,N],[13,"NoStore","","\"no-store\"",68,N],[13,"NoTransform","","\"no-transform\"",68,N],[13,"OnlyIfCached","","\"only-if-cached\"",68,N],[13,"MaxAge","","\"max-age=delta\"",68,N],[13,"MaxStale","","\"max-stale=delta\"",68,N],[13,"MinFresh","","\"min-fresh=delta\"",68,N],[13,"MustRevalidate","","\"must-revalidate\"",68,N],[13,"Public","","\"public\"",68,N],[13,"Private","","\"private\"",68,N],[13,"ProxyRevalidate","","\"proxy-revalidate\"",68,N],[13,"SMaxAge","","\"s-maxage=delta\"",68,N],[13,"Extension","","Extension directives. Optionally include an argument.",68,N],[4,"ConnectionOption","","Values that can be in the `Connection` header.",N,N],[13,"KeepAlive","","The `keep-alive` connection value.",69,N],[13,"Close","","The `close` connection value.",69,N],[13,"ConnectionHeader","","Values in the Connection header that are supposed to be…",69,N],[4,"DispositionType","","The implied disposition of the content of the HTTP body",N,N],[13,"Inline","","Inline implies default processing",70,N],[13,"Attachment","","Attachment implies that the recipient should prompt the…",70,N],[13,"Ext","","Extension type. Should be handled by recipients the same…",70,N],[4,"DispositionParam","","A parameter to the disposition type",N,N],[13,"Filename","","A Filename consisting of a Charset, an optional…",71,N],[13,"Ext","","Extension type consisting of token and value. Recipients…",71,N],[4,"ContentRangeSpec","","Content-Range, described in RFC7233",N,N],[13,"Bytes","","Byte range",72,N],[12,"range","hyper::header::ContentRangeSpec","First and last bytes of the range, omitted if request…",72,N],[12,"instance_length","","Total length of the instance, can be omitted if unknown",72,N],[13,"Unregistered","hyper::header","Custom range, with unit not registered at IANA",72,N],[12,"unit","hyper::header::ContentRangeSpec","other-range-unit",72,N],[12,"resp","","other-range-resp",72,N],[4,"Expect","hyper::header","The `Expect` header.",N,N],[13,"Continue","","The value `100-continue`.",73,N],[4,"IfMatch","","`If-Match` header, defined in RFC7232",N,N],[13,"Any","","Any value is a match",74,N],[13,"Items","","Only the listed items are a match",74,N],[4,"IfNoneMatch","","`If-None-Match` header, defined in RFC7232",N,N],[13,"Any","","Any value is a match",75,N],[13,"Items","","Only the listed items are a match",75,N],[4,"IfRange","","`If-Range` header, defined in RFC7233",N,N],[13,"EntityTag","","The entity-tag the client has of the resource",76,N],[13,"Date","","The date when the client retrieved the resource",76,N],[4,"Pragma","","The `Pragma` header defined by HTTP/1.0.",N,N],[13,"NoCache","","Corresponds to the `no-cache` value.",77,N],[13,"Ext","","Every value other than `no-cache`.",77,N],[4,"Preference","","Prefer contains a list of these preferences.",N,N],[13,"RespondAsync","","\"respond-async\"",78,N],[13,"ReturnRepresentation","","\"return=representation\"",78,N],[13,"ReturnMinimal","","\"return=minimal\"",78,N],[13,"HandlingStrict","","\"handling=strict\"",78,N],[13,"HandlingLeniant","","\"handling=leniant\"",78,N],[13,"Wait","","\"wait=delta\"",78,N],[13,"Extension","","Extension preferences. Always has a value, if none is…",78,N],[4,"Range","","`Range` header, defined in RFC7233",N,N],[13,"Bytes","","Byte range",79,N],[13,"Unregistered","","Custom range, with unit not registered at IANA…",79,N],[4,"ByteRangeSpec","","Each `Range::Bytes` header can contain one or more…",N,N],[13,"FromTo","","Get all bytes between x and y (\"x-y\")",80,N],[13,"AllFrom","","Get all bytes starting from x (\"x-\")",80,N],[13,"Last","","Get last x bytes (\"-x\")",80,N],[4,"ReferrerPolicy","","`Referrer-Policy` header, part of Referrer Policy",N,N],[13,"NoReferrer","","`no-referrer`",81,N],[13,"NoReferrerWhenDowngrade","","`no-referrer-when-downgrade`",81,N],[13,"SameOrigin","","`same-origin`",81,N],[13,"Origin","","`origin`",81,N],[13,"OriginWhenCrossOrigin","","`origin-when-cross-origin`",81,N],[13,"UnsafeUrl","","`unsafe-url`",81,N],[13,"StrictOrigin","","`strict-origin`",81,N],[13,"StrictOriginWhenCrossOrigin","","`strict-origin-when-cross-origin`",81,N],[4,"ProtocolName","","A protocol name used to identify a spefic protocol. Names…",N,N],[13,"Http","","`HTTP` value, Hypertext Transfer Protocol",82,N],[13,"Tls","","`TLS` value, Transport Layer Security RFC2817",82,N],[13,"WebSocket","","`WebSocket` value, matched case insensitively,Web Socket…",82,N],[13,"H2c","","`h2c` value, HTTP/2 over cleartext TCP",82,N],[13,"Unregistered","","Any other protocol name not known to hyper",82,N],[4,"Vary","","`Vary` header, defined in RFC7231",N,N],[13,"Any","","Any value is a match",83,N],[13,"Items","","Only the listed items are a match",83,N],[4,"RelationType","","A Link Relation Type Enum based on: RFC5988",N,N],[13,"Alternate","","alternate.",84,N],[13,"Appendix","","appendix.",84,N],[13,"Bookmark","","bookmark.",84,N],[13,"Chapter","","chapter.",84,N],[13,"Contents","","contents.",84,N],[13,"Copyright","","copyright.",84,N],[13,"Current","","current.",84,N],[13,"DescribedBy","","describedby.",84,N],[13,"Edit","","edit.",84,N],[13,"EditMedia","","edit-media.",84,N],[13,"Enclosure","","enclosure.",84,N],[13,"First","","first.",84,N],[13,"Glossary","","glossary.",84,N],[13,"Help","","help.",84,N],[13,"Hub","","hub.",84,N],[13,"Index","","index.",84,N],[13,"Last","","last.",84,N],[13,"LatestVersion","","latest-version.",84,N],[13,"License","","license.",84,N],[13,"Next","","next.",84,N],[13,"NextArchive","","next-archive.",84,N],[13,"Payment","","payment.",84,N],[13,"Prev","","prev.",84,N],[13,"PredecessorVersion","","predecessor-version.",84,N],[13,"Previous","","previous.",84,N],[13,"PrevArchive","","prev-archive.",84,N],[13,"Related","","related.",84,N],[13,"Replies","","replies.",84,N],[13,"Section","","section.",84,N],[13,"RelationTypeSelf","","self.",84,N],[13,"Service","","service.",84,N],[13,"Start","","start.",84,N],[13,"Stylesheet","","stylesheet.",84,N],[13,"Subsection","","subsection.",84,N],[13,"SuccessorVersion","","successor-version.",84,N],[13,"Up","","up.",84,N],[13,"VersionHistory","","versionHistory.",84,N],[13,"Via","","via.",84,N],[13,"WorkingCopy","","working-copy.",84,N],[13,"WorkingCopyOf","","working-copy-of.",84,N],[13,"ExtRelType","","ext-rel-type.",84,N],[4,"MediaDesc","","A Media Descriptors Enum based on:…",N,N],[13,"Screen","","screen.",85,N],[13,"Tty","","tty.",85,N],[13,"Tv","","tv.",85,N],[13,"Projection","","projection.",85,N],[13,"Handheld","","handheld.",85,N],[13,"Print","","print.",85,N],[13,"Braille","","braille.",85,N],[13,"Aural","","aural.",85,N],[13,"All","","all.",85,N],[13,"Extension","","Unrecognized media descriptor extension.",85,N],[5,"qitem","","Convinience function to wrap a value in a `QualityItem`…",N,[[["t"]],["qualityitem"]]],[5,"q","","Convenience function to create a `Quality` from a float.",N,[[["f32"]],["quality"]]],[11,"star","","A constructor to easily create `Accept: */*`.",19,[[],["accept"]]],[11,"json","","A constructor to easily create `Accept: application/json`.",19,[[],["accept"]]],[11,"text","","A constructor to easily create `Accept: text/*`.",19,[[],["accept"]]],[11,"image","","A constructor to easily create `Accept: image/*`.",19,[[],["accept"]]],[11,"close","","A constructor to easily create a `Connection: close` header.",35,[[],["connection"]]],[11,"keep_alive","","A constructor to easily create a `Connection: keep-alive`…",35,[[],["connection"]]],[11,"json","","A constructor to easily create a `Content-Type:…",41,[[],["contenttype"]]],[11,"plaintext","","A constructor to easily create a `Content-Type:…",41,[[],["contenttype"]]],[11,"html","","A constructor to easily create a `Content-Type: text/html;…",41,[[],["contenttype"]]],[11,"form_url_encoded","","A constructor to easily create a `Content-Type:…",41,[[],["contenttype"]]],[11,"jpeg","","A constructor to easily create a `Content-Type:…",41,[[],["contenttype"]]],[11,"png","","A constructor to easily create a `Content-Type: image/png`…",41,[[],["contenttype"]]],[11,"new","","Creates a new `Origin` header.",52,[[["s"],["h"],["option",["u16"]]],["origin"]]],[11,"bytes","","Get the most common byte range header (\"bytes=from-to\")",79,[[["u64"],["u64"]],["range"]]],[11,"bytes_multi","","Get byte range header with multiple subranges…",79,[[["vec"]],["range"]]],[11,"including_subdomains","","Create an STS header that includes subdomains",58,[[["u64"]],["stricttransportsecurity"]]],[11,"excluding_subdomains","","Create an STS header that excludes subdomains",58,[[["u64"]],["stricttransportsecurity"]]],[11,"new","","Creates a new Protocol with the given name and version",61,[[["protocolname"],["option",["string"]]],["protocol"]]],[11,"new","","Create `Link` from a `Vec<LinkValue>`.",86,[[["vec",["linkvalue"]]],["link"]]],[11,"values","","Get the `Link` header's `LinkValue`s.",86,N],[11,"push_value","","Add a `LinkValue` instance to the `Link` header's values.",86,[[["self"],["linkvalue"]]]],[11,"new","","Create `LinkValue` from URI-Reference.",87,[[["t"]],["linkvalue"]]],[11,"link","","Get the `LinkValue`'s value.",87,[[["self"]],["str"]]],[11,"rel","","Get the `LinkValue`'s `rel` parameter(s).",87,[[["self"]],["option"]]],[11,"anchor","","Get the `LinkValue`'s `anchor` parameter.",87,[[["self"]],["option",["str"]]]],[11,"rev","","Get the `LinkValue`'s `rev` parameter(s).",87,[[["self"]],["option"]]],[11,"href_lang","","Get the `LinkValue`'s `hreflang` parameter(s).",87,[[["self"]],["option"]]],[11,"media_desc","","Get the `LinkValue`'s `media` parameter(s).",87,[[["self"]],["option"]]],[11,"title","","Get the `LinkValue`'s `title` parameter.",87,[[["self"]],["option",["str"]]]],[11,"title_star","","Get the `LinkValue`'s `title*` parameter.",87,[[["self"]],["option",["str"]]]],[11,"media_type","","Get the `LinkValue`'s `type` parameter.",87,[[["self"]],["option",["mime"]]]],[11,"push_rel","","Add a `RelationType` to the `LinkValue`'s `rel` parameter.",87,[[["self"],["relationtype"]],["linkvalue"]]],[11,"set_anchor","","Set `LinkValue`'s `anchor` parameter.",87,[[["self"],["t"]],["linkvalue"]]],[11,"push_rev","","Add a `RelationType` to the `LinkValue`'s `rev` parameter.",87,[[["self"],["relationtype"]],["linkvalue"]]],[11,"push_href_lang","","Add a `LanguageTag` to the `LinkValue`'s `hreflang`…",87,[[["self"],["languagetag"]],["linkvalue"]]],[11,"push_media_desc","","Add a `MediaDesc` to the `LinkValue`'s `media_desc`…",87,[[["self"],["mediadesc"]],["linkvalue"]]],[11,"set_title","","Set `LinkValue`'s `title` parameter.",87,[[["self"],["t"]],["linkvalue"]]],[11,"set_title_star","","Set `LinkValue`'s `title*` parameter.",87,[[["self"],["t"]],["linkvalue"]]],[11,"set_media_type","","Set `LinkValue`'s `type` parameter.",87,[[["self"],["mime"]],["linkvalue"]]],[11,"new","","Constructs a new EntityTag. # Panics If the tag contains…",15,[[["bool"],["string"]],["entitytag"]]],[11,"weak","","Constructs a new weak EntityTag. # Panics If the tag…",15,[[["string"]],["entitytag"]]],[11,"strong","","Constructs a new strong EntityTag. # Panics If the tag…",15,[[["string"]],["entitytag"]]],[11,"tag","","Get the tag.",15,[[["self"]],["str"]]],[11,"set_tag","","Set the tag. # Panics If the tag contains invalid…",15,[[["self"],["string"]]]],[11,"strong_eq","","For strong comparison two entity-tags are equivalent if…",15,[[["self"],["entitytag"]],["bool"]]],[11,"weak_eq","","For weak comparison two entity-tags are equivalent if…",15,[[["self"],["entitytag"]],["bool"]]],[11,"strong_ne","","The inverse of `EntityTag.strong_eq()`.",15,[[["self"],["entitytag"]],["bool"]]],[11,"weak_ne","","The inverse of `EntityTag.weak_eq()`.",15,[[["self"],["entitytag"]],["bool"]]],[11,"new","","Creates a new `QualityItem` from an item and a quality.…",18,[[["t"],["quality"]],["qualityitem"]]],[0,"parsing","","Utility functions for Header implementations.",N,N],[3,"ExtendedValue","hyper::header::parsing","An extended header parameter value (i.e., tagged with a…",N,N],[12,"charset","","The character set that is used to encode the `value` to a…",88,N],[12,"language_tag","","The human language details of the `value`, if available.",88,N],[12,"value","","The parameter value, as expressed in octets.",88,N],[3,"HTTP_VALUE","","This encode set is used for HTTP header values and is…",N,N],[5,"from_one_raw_str","","Reads a single raw string when parsing a header.",N,N],[5,"from_raw_str","","Reads a raw string into a value.",N,N],[5,"from_comma_delimited","","Reads a comma-delimited raw header into a Vec.",N,N],[5,"fmt_comma_delimited","","Format an array into a comma-delimited string.",N,N],[5,"parse_extended_value","","Parses extended header parameter values (`ext-value`), as…",N,[[["str"]],["result",["extendedvalue"]]]],[8,"Scheme","hyper::header","An Authorization scheme to be used in the header.",N,N],[10,"scheme","","An optional Scheme name.",89,[[],["option",["str"]]]],[10,"fmt_scheme","","Format the Scheme data into a header value.",89,[[["self"],["formatter"]],["result"]]],[8,"Header","","A trait for any object that will represent a header field…",N,N],[10,"header_name","","Returns the name of the header field this belongs to.",90,[[],["str"]]],[10,"parse_header","","Parse a header from a raw stream of bytes.",90,N],[8,"HeaderFormat","","A trait for any object that will represent a header field…",N,N],[10,"fmt_header","","Format a header to be output into a TcpStream.",91,[[["self"],["formatter"]],["result"]]],[8,"HeaderClone","","Internal implementation detail.",N,N],[11,"new","","Creates a new, empty headers map.",92,[[],["headers"]]],[11,"set","","Set a header field to the corresponding value.",92,[[["self"],["h"]]]],[11,"get_raw","","Access the raw value of a header.",92,[[["self"],["str"]],["option"]]],[11,"set_raw","","Set the raw value of a header, bypassing any typed headers.",92,[[["self"],["k"],["vec",["vec"]]]]],[11,"append_raw","","Append a value to raw value of this header.",92,[[["self"],["k"],["vec",["u8"]]]]],[11,"remove_raw","","Remove a header set by set_raw",92,[[["self"],["str"]]]],[11,"get","","Get a reference to the header field's value, if it exists.",92,[[["self"]],["option"]]],[11,"get_mut","","Get a mutable reference to the header field's value, if it…",92,[[["self"]],["option"]]],[11,"has","","Returns a boolean of whether a certain header is in the map.",92,[[["self"]],["bool"]]],[11,"remove","","Removes a header from the map, if one existed. Returns…",92,[[["self"]],["bool"]]],[11,"iter","","Returns an iterator over the header fields.",92,[[["self"]],["headersitems"]]],[11,"len","","Returns the number of headers in the map.",92,[[["self"]],["usize"]]],[11,"clear","","Remove all headers from the map.",92,[[["self"]]]],[11,"is","","Check if a HeaderView is a certain Header.",93,[[["self"]],["bool"]]],[11,"name","","Get the Header name as a slice.",93,[[["self"]],["str"]]],[11,"value","","Cast the value to a certain Header type.",93,[[["self"]],["option"]]],[11,"value_string","","Get just the header value as a String.",93,[[["self"]],["string"]]],[0,"http","hyper","Pieces pertaining to the HTTP message protocol.",N,N],[3,"RawStatus","hyper::http","The raw status code and reason-phrase.",N,N],[12,"0","","",94,N],[12,"1","","",94,N],[5,"should_keep_alive","","Checks if a connection should be kept alive.",N,[[["httpversion"],["headers"]],["bool"]]],[0,"h1","","Adapts the HTTP/1.1 implementation into the `HttpMessage`…",N,N],[3,"Http11Message","hyper::http::h1","An implementation of the `HttpMessage` trait for HTTP/1.1.",N,N],[3,"Http11Protocol","","The `Protocol` implementation provides HTTP/1.1 messages.",N,N],[3,"EndError","","",N,N],[3,"Incoming","","An Incoming Message head. Includes request/status line,…",N,N],[12,"version","","HTTP version of the message.",95,N],[12,"subject","","Subject (request line or status line) of Incoming message.",95,N],[12,"headers","","Headers of the Incoming message.",95,N],[4,"HttpReader","","Readers to handle different Transfer-Encodings.",N,N],[13,"SizedReader","","A Reader used when a Content-Length header is passed with…",96,N],[13,"ChunkedReader","","A Reader used when Transfer-Encoding is `chunked`.",96,N],[13,"EofReader","","A Reader used for responses that don't indicate a length…",96,N],[13,"EmptyReader","","A Reader used for messages that should never have a body.",96,N],[4,"HttpWriter","","Writers to handle different Transfer-Encodings.",N,N],[13,"ThroughWriter","","A no-op Writer, used initially before Transfer-Encoding is…",97,N],[13,"ChunkedWriter","","A Writer for when Transfer-Encoding includes `chunked`.",97,N],[13,"SizedWriter","","A Writer for when Content-Length is set.",97,N],[13,"EmptyWriter","","A writer that should not write any body.",97,N],[5,"parse_request","","Parses a request into an Incoming message head.",N,[[["bufreader"]],["result",["incoming"]]]],[5,"parse_response","","Parses a response into an Incoming message head.",N,[[["bufreader"]],["result",["incoming"]]]],[17,"CR","","The `\\r` byte.",N,N],[17,"LF","","The `\\n` byte.",N,N],[17,"LINE_ENDING","","The bytes `\\r\\n`.",N,N],[11,"into_inner","","Consumes the `Http11Message` and returns the underlying…",98,[[["self"]],["box",["networkstream"]]]],[11,"get_ref","","Gets a borrowed reference to the underlying…",98,[[["self"]],["networkstream"]]],[11,"get_mut","","Gets a mutable reference to the underlying…",98,[[["self"]],["networkstream"]]],[11,"with_stream","","Creates a new `Http11Message` that will use the given…",98,[[["box",["networkstream"]]],["http11message"]]],[11,"flush_outgoing","","Flushes the current outgoing content and moves the stream…",98,[[["self"]],["result"]]],[11,"with_connector","","Creates a new `Http11Protocol` instance that will use the…",99,[[["c"]],["http11protocol"]]],[11,"into_inner","","Unwraps this HttpReader and returns the underlying Reader.",96,[[["self"]],["r"]]],[11,"get_ref","","Gets a borrowed reference to the underlying Reader.",96,[[["self"]],["r"]]],[11,"get_mut","","Gets a mutable reference to the underlying Reader.",96,[[["self"]],["r"]]],[11,"into_inner","","Unwraps the HttpWriter and returns the underlying Writer.",97,[[["self"]],["w"]]],[11,"get_ref","","Access the inner Writer.",97,[[["self"]],["w"]]],[11,"get_mut","","Access the inner Writer mutably.",97,[[["self"]],["w"]]],[11,"end","","Ends the HttpWriter, and returns the underlying Writer.",97,[[["self"]],["result",["enderror"]]]],[0,"message","hyper::http","Defines the `HttpMessage` trait that serves to encapsulate…",N,N],[3,"RequestHead","hyper::http::message","Describes a request.",N,N],[12,"headers","","The headers of the request",100,N],[12,"method","","The method of the request",100,N],[12,"url","","The URL of the request",100,N],[3,"ResponseHead","","Describes a response.",N,N],[12,"headers","","The headers of the reponse",101,N],[12,"raw_status","","The raw status line of the response",101,N],[12,"version","","The HTTP/2 version which generated the response",101,N],[8,"Protocol","","The trait provides an API for creating new `HttpMessage`s…",N,N],[10,"new_message","","Creates a fresh `HttpMessage` bound to the given host,…",102,[[["self"],["str"],["u16"],["str"]],["result",["box"]]]],[8,"HttpMessage","","The trait provides an API for sending an receiving HTTP…",N,N],[10,"set_outgoing","","Initiates a new outgoing request.",103,[[["self"],["requesthead"]],["result",["requesthead"]]]],[10,"get_incoming","","Obtains the incoming response and returns its head (i.e.…",103,[[["self"]],["result",["responsehead"]]]],[10,"set_read_timeout","","Set the read timeout duration for this message.",103,[[["self"],["option",["duration"]]],["result"]]],[10,"set_write_timeout","","Set the write timeout duration for this message.",103,[[["self"],["option",["duration"]]],["result"]]],[10,"close_connection","","Closes the underlying HTTP connection.",103,[[["self"]],["result"]]],[10,"has_body","","Returns whether the incoming message has a body.",103,[[["self"]],["bool"]]],[11,"set_proxied","","Called when the Client wishes to use a Proxy.",103,[[["self"],["bool"]]]],[11,"is","","Is the underlying type in this trait object a T?",103,[[["self"]],["bool"]]],[11,"downcast_ref","","If the underlying type is T, get a reference to the…",103,[[["self"]],["option"]]],[11,"downcast_mut","","If the underlying type is T, get a mutable reference to…",103,[[["self"]],["option"]]],[11,"downcast","","If the underlying type is T, extract it.",103,[[["box",["httpmessage"]]],["result",["box","box"]]]],[0,"net","hyper","A collection of traits abstracting over Listeners and…",N,N],[3,"NetworkConnections","hyper::net","An iterator wrapper over a `NetworkAcceptor`.",N,N],[3,"HttpListener","","A `NetworkListener` for `HttpStream`s.",N,N],[3,"HttpStream","","A wrapper around a `TcpStream`.",N,N],[12,"0","","",104,N],[3,"HttpConnector","","A connector that will produce HttpStreams.",N,N],[3,"HttpsListener","","A Http Listener over SSL.",N,N],[3,"HttpsConnector","","A connector that can protect HTTP streams using SSL.",N,N],[4,"Fresh","","The write-status indicating headers have not been written.",N,N],[4,"Streaming","","The write-status indicating headers have been written.",N,N],[4,"HttpsStream","","A stream over the HTTP protocol, possibly protected by SSL.",N,N],[13,"Http","","A plain text stream.",105,N],[13,"Https","","A stream protected by SSL.",105,N],[8,"NetworkListener","","An abstraction to listen for connections on a certain port.",N,N],[16,"Stream","","The stream produced for each connection.",106,N],[10,"accept","","Returns an iterator of streams.",106,[[["self"]],["result"]]],[10,"local_addr","","Get the address this Listener ended up listening on.",106,[[["self"]],["result",["socketaddr"]]]],[11,"incoming","","Returns an iterator over incoming connections.",106,[[["self"]],["networkconnections"]]],[11,"set_read_timeout","","Sets the read timeout for all streams that are accepted",106,[[["self"],["option",["duration"]]]]],[11,"set_write_timeout","","Sets the write timeout for all streams that are accepted",106,[[["self"],["option",["duration"]]]]],[8,"NetworkStream","","An abstraction over streams that a `Server` can utilize.",N,N],[10,"peer_addr","","Get the remote address of the underlying connection.",107,[[["self"]],["result",["socketaddr"]]]],[10,"set_read_timeout","","Set the maximum time to wait for a read to complete.",107,[[["self"],["option",["duration"]]],["result"]]],[10,"set_write_timeout","","Set the maximum time to wait for a write to complete.",107,[[["self"],["option",["duration"]]],["result"]]],[11,"close","","This will be called when Stream should no longer be kept…",107,[[["self"],["shutdown"]],["result"]]],[8,"NetworkConnector","","A connector creates a NetworkStream.",N,N],[16,"Stream","","Type of `Stream` to create",108,N],[10,"connect","","Connect to a remote address.",108,[[["self"],["str"],["u16"],["str"]],["result"]]],[8,"SslClient","","An abstraction to allow any SSL implementation to be used…",N,N],[16,"Stream","","The protected stream.",109,N],[10,"wrap_client","","Wrap a client stream with SSL.",109,[[["self"],["t"],["str"]],["result"]]],[8,"SslServer","","An abstraction to allow any SSL implementation to be used…",N,N],[16,"Stream","","The protected stream.",110,N],[10,"wrap_server","","Wrap a server stream with SSL.",110,[[["self"],["t"]],["result"]]],[11,"is","","Is the underlying type in this trait object a `T`?",107,[[["self"]],["bool"]]],[11,"downcast_ref","","If the underlying type is `T`, get a reference to the…",107,[[["self"]],["option"]]],[11,"downcast_mut","","If the underlying type is `T`, get a mutable reference to…",107,[[["self"]],["option"]]],[11,"downcast","","If the underlying type is `T`, extract it.",107,[[["box",["networkstream"]]],["result",["box","box"]]]],[11,"is","","Is the underlying type in this trait object a `T`?",107,[[["self"]],["bool"]]],[11,"downcast_ref","","If the underlying type is `T`, get a reference to the…",107,[[["self"]],["option"]]],[11,"downcast_mut","","If the underlying type is `T`, get a mutable reference to…",107,[[["self"]],["option"]]],[11,"downcast","","If the underlying type is `T`, extract it.",107,[[["box",["networkstream"]]],["result",["box","box"]]]],[11,"new","","Start listening to an address over HTTP.",111,[[["to"]],["result",["httplistener"]]]],[11,"new","","Start listening to an address over HTTPS.",112,[[["to"],["s"]],["result",["httpslistener"]]]],[11,"with_listener","","Construct an HttpsListener from a bound `TcpListener`.",112,[[["httplistener"],["s"]],["httpslistener"]]],[11,"new","","Create a new connector using the provided SSL…",113,[[["s"]],["httpsconnector",["httpconnector"]]]],[11,"with_connector","","Create a new connector using the provided SSL…",113,[[["s"],["c"]],["httpsconnector"]]],[0,"server","hyper","HTTP Server",N,N],[3,"Server","hyper::server","A server can listen on a TCP socket.",N,N],[3,"Listening","","A listening server, which can later be closed.",N,N],[12,"socket","","The socket addresses that the server is bound to.",114,N],[0,"request","","Server Requests",N,N],[3,"Request","hyper::server::request","A request bundles several parts of an incoming…",N,N],[12,"remote_addr","","The IP address of the remote connection.",115,N],[12,"method","","The `Method`, such as `Get`, `Post`, etc.",115,N],[12,"headers","","The headers of the incoming request.",115,N],[12,"uri","","The target request-uri for this request.",115,N],[12,"version","","The version of HTTP for this request.",115,N],[11,"new","","Create a new Request, reading the StartLine and Headers so…",115,[[["bufreader"],["socketaddr"]],["result",["request"]]]],[11,"set_read_timeout","","Set the read timeout of the underlying NetworkStream.",115,[[["self"],["option",["duration"]]],["result"]]],[11,"downcast_ref","","Get a reference to the underlying `NetworkStream`.",115,[[["self"]],["option"]]],[11,"ssl","","Get a reference to the underlying Ssl stream, if connected…",115,[[["self"]],["option"]]],[11,"deconstruct","","Deconstruct a Request into its constituent parts.",115,N],[0,"response","hyper::server","Server Responses",N,N],[3,"Response","hyper::server::response","The outgoing half for a Tcp connection, created by a…",N,N],[12,"version","","The HTTP version of this response.",116,N],[11,"status","","The status of this response.",116,[[["self"]],["statuscode"]]],[11,"headers","","The headers of this response.",116,[[["self"]],["headers"]]],[11,"construct","","Construct a Response from its constituent parts.",116,[[["httpversion"],["httpwriter",["write"]],["statuscode"],["headers"]],["response",["fresh"]]]],[11,"deconstruct","","Deconstruct this Response into its constituent parts.",116,N],[11,"new","","Creates a new Response that can be used to write to a…",116,[[["write"],["headers"]],["response",["fresh"]]]],[11,"send","","Writes the body and ends the response.",116,N],[11,"start","","Consume this Response, writing the Headers and Status and…",116,[[["self"]],["result",["response"]]]],[11,"status_mut","","Get a mutable reference to the status.",116,[[["self"]],["statuscode"]]],[11,"headers_mut","","Get a mutable reference to the Headers.",116,[[["self"]],["headers"]]],[11,"end","","Flushes all writing of a response to the client.",116,[[["self"]],["result"]]],[8,"Handler","hyper::server","A handler that can handle incoming requests for a server.",N,N],[10,"handle","","Receives a `Request`/`Response` pair, and should perform…",117,[[["self"],["request"],["response",["fresh"]]]]],[11,"check_continue","","Called when a Request includes a `Expect: 100-continue`…",117,N],[11,"on_connection_start","","This is run after a connection is received, on a…",117,[[["self"]]]],[11,"on_connection_end","","This is run before a connection is closed, on a…",117,[[["self"]]]],[11,"new","","Creates a new server with the provided handler.",118,[[["l"]],["server"]]],[11,"keep_alive","","Controls keep-alive for this server.",118,[[["self"],["option",["duration"]]]]],[11,"set_read_timeout","","Sets the read timeout for all Request reads.",118,[[["self"],["option",["duration"]]]]],[11,"set_write_timeout","","Sets the write timeout for all Response writes.",118,[[["self"],["option",["duration"]]]]],[11,"local_addr","","Get the address that the server is listening on.",118,[[["self"]],["result",["socketaddr"]]]],[11,"http","","Creates a new server that will handle `HttpStream`s.",118,[[["to"]],["result",["server"]]]],[11,"https","","Creates a new server that will handle `HttpStream`s over…",118,[[["a"],["s"]],["result",["server"]]]],[11,"handle","","Binds to a socket and starts handling connections.",118,[[["self"],["h"]],["result",["listening"]]]],[11,"handle_threads","","Binds to a socket and starts handling connections with the…",118,[[["self"],["h"],["usize"]],["result",["listening"]]]],[11,"close","","Warning: This function doesn't work. The server remains…",114,[[["self"]],["result"]]],[0,"status","hyper","HTTP status codes",N,N],[4,"StatusCode","hyper::status","An HTTP status code (`status-code` in RFC 7230 et al.).",N,N],[13,"Continue","","100 Continue [RFC7231, Section 6.2.1]",119,N],[13,"SwitchingProtocols","","101 Switching Protocols [RFC7231, Section 6.2.2]",119,N],[13,"Processing","","102 Processing [RFC2518]",119,N],[13,"Ok","","200 OK [RFC7231, Section 6.3.1]",119,N],[13,"Created","","201 Created [RFC7231, Section 6.3.2]",119,N],[13,"Accepted","","202 Accepted [RFC7231, Section 6.3.3]",119,N],[13,"NonAuthoritativeInformation","","203 Non-Authoritative Information [RFC7231, Section 6.3.4]",119,N],[13,"NoContent","","204 No Content [RFC7231, Section 6.3.5]",119,N],[13,"ResetContent","","205 Reset Content [RFC7231, Section 6.3.6]",119,N],[13,"PartialContent","","206 Partial Content [RFC7233, Section 4.1]",119,N],[13,"MultiStatus","","207 Multi-Status [RFC4918]",119,N],[13,"AlreadyReported","","208 Already Reported [RFC5842]",119,N],[13,"ImUsed","","226 IM Used [RFC3229]",119,N],[13,"MultipleChoices","","300 Multiple Choices [RFC7231, Section 6.4.1]",119,N],[13,"MovedPermanently","","301 Moved Permanently [RFC7231, Section 6.4.2]",119,N],[13,"Found","","302 Found [RFC7231, Section 6.4.3]",119,N],[13,"SeeOther","","303 See Other [RFC7231, Section 6.4.4]",119,N],[13,"NotModified","","304 Not Modified [RFC7232, Section 4.1]",119,N],[13,"UseProxy","","305 Use Proxy [RFC7231, Section 6.4.5]",119,N],[13,"TemporaryRedirect","","307 Temporary Redirect [RFC7231, Section 6.4.7]",119,N],[13,"PermanentRedirect","","308 Permanent Redirect [RFC7238]",119,N],[13,"BadRequest","","400 Bad Request [RFC7231, Section 6.5.1]",119,N],[13,"Unauthorized","","401 Unauthorized [RFC7235, Section 3.1]",119,N],[13,"PaymentRequired","","402 Payment Required [RFC7231, Section 6.5.2]",119,N],[13,"Forbidden","","403 Forbidden [RFC7231, Section 6.5.3]",119,N],[13,"NotFound","","404 Not Found [RFC7231, Section 6.5.4]",119,N],[13,"MethodNotAllowed","","405 Method Not Allowed [RFC7231, Section 6.5.5]",119,N],[13,"NotAcceptable","","406 Not Acceptable [RFC7231, Section 6.5.6]",119,N],[13,"ProxyAuthenticationRequired","","407 Proxy Authentication Required [RFC7235, Section 3.2]",119,N],[13,"RequestTimeout","","408 Request Timeout [RFC7231, Section 6.5.7]",119,N],[13,"Conflict","","409 Conflict [RFC7231, Section 6.5.8]",119,N],[13,"Gone","","410 Gone [RFC7231, Section 6.5.9]",119,N],[13,"LengthRequired","","411 Length Required [RFC7231, Section 6.5.10]",119,N],[13,"PreconditionFailed","","412 Precondition Failed [RFC7232, Section 4.2]",119,N],[13,"PayloadTooLarge","","413 Payload Too Large [RFC7231, Section 6.5.11]",119,N],[13,"UriTooLong","","414 URI Too Long [RFC7231, Section 6.5.12]",119,N],[13,"UnsupportedMediaType","","415 Unsupported Media Type [RFC7231, Section 6.5.13]",119,N],[13,"RangeNotSatisfiable","","416 Range Not Satisfiable [RFC7233, Section 4.4]",119,N],[13,"ExpectationFailed","","417 Expectation Failed [RFC7231, Section 6.5.14]",119,N],[13,"ImATeapot","","418 I'm a teapot [curiously, not registered by IANA, but…",119,N],[13,"MisdirectedRequest","","421 Misdirected Request RFC7540, Section 9.1.2",119,N],[13,"UnprocessableEntity","","422 Unprocessable Entity [RFC4918]",119,N],[13,"Locked","","423 Locked [RFC4918]",119,N],[13,"FailedDependency","","424 Failed Dependency [RFC4918]",119,N],[13,"UpgradeRequired","","426 Upgrade Required [RFC7231, Section 6.5.15]",119,N],[13,"PreconditionRequired","","428 Precondition Required [RFC6585]",119,N],[13,"TooManyRequests","","429 Too Many Requests [RFC6585]",119,N],[13,"RequestHeaderFieldsTooLarge","","431 Request Header Fields Too Large [RFC6585]",119,N],[13,"UnavailableForLegalReasons","","451 Unavailable For Legal Reasons [RFC7725]",119,N],[13,"InternalServerError","","500 Internal Server Error [RFC7231, Section 6.6.1]",119,N],[13,"NotImplemented","","501 Not Implemented [RFC7231, Section 6.6.2]",119,N],[13,"BadGateway","","502 Bad Gateway [RFC7231, Section 6.6.3]",119,N],[13,"ServiceUnavailable","","503 Service Unavailable [RFC7231, Section 6.6.4]",119,N],[13,"GatewayTimeout","","504 Gateway Timeout [RFC7231, Section 6.6.5]",119,N],[13,"HttpVersionNotSupported","","505 HTTP Version Not Supported [RFC7231, Section 6.6.6]",119,N],[13,"VariantAlsoNegotiates","","506 Variant Also Negotiates [RFC2295]",119,N],[13,"InsufficientStorage","","507 Insufficient Storage [RFC4918]",119,N],[13,"LoopDetected","","508 Loop Detected [RFC5842]",119,N],[13,"NotExtended","","510 Not Extended [RFC2774]",119,N],[13,"NetworkAuthenticationRequired","","511 Network Authentication Required [RFC6585]",119,N],[13,"Unregistered","","A status code not in the IANA HTTP status code registry or…",119,N],[4,"StatusClass","","The class of an HTTP `status-code`.",N,N],[13,"Informational","","1xx (Informational): The request was received, continuing…",120,N],[13,"Success","","2xx (Success): The request was successfully received,…",120,N],[13,"Redirection","","3xx (Redirection): Further action needs to be taken in…",120,N],[13,"ClientError","","4xx (Client Error): The request contains bad syntax or…",120,N],[13,"ServerError","","5xx (Server Error): The server failed to fulfill an…",120,N],[13,"NoClass","","A status code lower than 100 or higher than 599. These…",120,N],[11,"canonical_reason","","Get the standardised `reason-phrase` for this status code.",119,[[["self"]],["option",["str"]]]],[11,"class","","Determine the class of a status code, based on its first…",119,[[["self"]],["statusclass"]]],[11,"is_informational","","Check if class is Informational.",119,[[["self"]],["bool"]]],[11,"is_success","","Check if class is Success.",119,[[["self"]],["bool"]]],[11,"is_redirection","","Check if class is Redirection.",119,[[["self"]],["bool"]]],[11,"is_client_error","","Check if class is ClientError.",119,[[["self"]],["bool"]]],[11,"is_server_error","","Check if class is ServerError.",119,[[["self"]],["bool"]]],[11,"is_strange_status","","Check if class is NoClass",119,[[["self"]],["bool"]]],[11,"default_code","","Get the default status code for the class.",120,[[["self"]],["statuscode"]]],[0,"uri","hyper","HTTP RequestUris",N,N],[4,"RequestUri","hyper::uri","The Request-URI of a Request's StartLine.",N,N],[13,"AbsolutePath","","The most common request target, an absolute path and…",121,N],[13,"AbsoluteUri","","An absolute URI. Used in conjunction with proxies.",121,N],[13,"Authority","","The authority form is only for use with `CONNECT` requests.",121,N],[13,"Star","","The star is used to target the entire server, instead of a…",121,N],[0,"version","hyper","HTTP Versions enum",N,N],[4,"HttpVersion","hyper::version","Represents a version of the HTTP spec.",N,N],[13,"Http09","","`HTTP/0.9`",122,N],[13,"Http10","","`HTTP/1.0`",122,N],[13,"Http11","","`HTTP/1.1`",122,N],[13,"Http20","","`HTTP/2.0`",122,N],[0,"mime","hyper","Re-exporting the mime crate, for convenience.",N,N],[3,"Mime","hyper::mime","Mime, or Media Type. Encapsulates common registers types.",N,N],[12,"0","","",123,N],[12,"1","","",123,N],[12,"2","","",123,N],[4,"TopLevel","","",N,N],[13,"Star","","",124,N],[13,"Text","","",124,N],[13,"Image","","",124,N],[13,"Audio","","",124,N],[13,"Video","","",124,N],[13,"Application","","",124,N],[13,"Multipart","","",124,N],[13,"Message","","",124,N],[13,"Model","","",124,N],[13,"Ext","","",124,N],[4,"SubLevel","","",N,N],[13,"Star","","",125,N],[13,"Plain","","",125,N],[13,"Html","","",125,N],[13,"Xml","","",125,N],[13,"Javascript","","",125,N],[13,"Css","","",125,N],[13,"EventStream","","",125,N],[13,"Json","","",125,N],[13,"WwwFormUrlEncoded","","",125,N],[13,"Msgpack","","",125,N],[13,"OctetStream","","",125,N],[13,"FormData","","",125,N],[13,"Png","","",125,N],[13,"Gif","","",125,N],[13,"Bmp","","",125,N],[13,"Jpeg","","",125,N],[13,"Mpeg","","",125,N],[13,"Mp4","","",125,N],[13,"Ogg","","",125,N],[13,"Ext","","",125,N],[4,"Attr","","",N,N],[13,"Charset","","",126,N],[13,"Boundary","","",126,N],[13,"Q","","",126,N],[13,"Ext","","",126,N],[4,"Value","","",N,N],[13,"Utf8","","",127,N],[13,"Ext","","",127,N],[6,"Param","","",N,N],[14,"mime","","Easily create a Mime without having to import so many enums.",N,N],[14,"header","hyper","",N,N],[11,"from","","",128,[[["t"]],["t"]]],[11,"into","","",128,[[["self"]],["u"]]],[11,"to_owned","","",128,[[["self"]],["t"]]],[11,"clone_into","","",128,N],[11,"to_string","","",128,[[["self"]],["string"]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"try_into","","",128,[[["self"]],["result"]]],[11,"get_type_id","","",128,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","hyper::client","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"connect","hyper::client::pool","",4,[[["self"],["str"],["u16"],["str"]],["result",["httpstream","error"]]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","hyper::client::request","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","hyper::client::response","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","hyper::error","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"to_string","","",12,[[["self"]],["string"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_string","","",13,[[["self"]],["string"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","hyper::method","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"to_string","","",14,[[["self"]],["string"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","hyper::header","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"to_string","","",15,[[["self"]],["string"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"to_string","","",16,[[["self"]],["string"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"to_string","","",17,[[["self"]],["string"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"to_string","","",18,[[["self"]],["string"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"to_string","","",19,[[["self"]],["string"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",129,[[["t"]],["t"]]],[11,"into","","",129,[[["self"]],["u"]]],[11,"to_owned","","",129,[[["self"]],["t"]]],[11,"clone_into","","",129,N],[11,"to_string","","",129,[[["self"]],["string"]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"try_into","","",129,[[["self"]],["result"]]],[11,"get_type_id","","",129,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"to_string","","",20,[[["self"]],["string"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"to_string","","",21,[[["self"]],["string"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"to_string","","",22,[[["self"]],["string"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"to_string","","",23,[[["self"]],["string"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"to_string","","",24,[[["self"]],["string"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"to_string","","",25,[[["self"]],["string"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"to_string","","",26,[[["self"]],["string"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,N],[11,"to_string","","",27,[[["self"]],["string"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,N],[11,"to_string","","",28,[[["self"]],["string"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,N],[11,"to_string","","",29,[[["self"]],["string"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,N],[11,"to_string","","",30,[[["self"]],["string"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,N],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,N],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,N],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,N],[11,"to_string","","",34,[[["self"]],["string"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,N],[11,"to_string","","",35,[[["self"]],["string"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,N],[11,"to_string","","",36,[[["self"]],["string"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,N],[11,"to_string","","",37,[[["self"]],["string"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,N],[11,"to_string","","",38,[[["self"]],["string"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,N],[11,"to_string","","",39,[[["self"]],["string"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,N],[11,"to_string","","",40,[[["self"]],["string"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,N],[11,"to_string","","",41,[[["self"]],["string"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,N],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"to_string","","",43,[[["self"]],["string"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,N],[11,"to_string","","",44,[[["self"]],["string"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,N],[11,"to_string","","",45,[[["self"]],["string"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,N],[11,"to_string","","",46,[[["self"]],["string"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,N],[11,"to_string","","",47,[[["self"]],["string"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,N],[11,"to_string","","",48,[[["self"]],["string"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,N],[11,"to_string","","",49,[[["self"]],["string"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,N],[11,"to_string","","",50,[[["self"]],["string"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,N],[11,"to_string","","",51,[[["self"]],["string"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,N],[11,"to_string","","",52,[[["self"]],["string"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,N],[11,"to_string","","",53,[[["self"]],["string"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,N],[11,"to_string","","",54,[[["self"]],["string"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,N],[11,"to_string","","",55,[[["self"]],["string"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,N],[11,"to_string","","",56,[[["self"]],["string"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,N],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,N],[11,"to_string","","",58,[[["self"]],["string"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,N],[11,"to_string","","",59,[[["self"]],["string"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,N],[11,"to_string","","",60,[[["self"]],["string"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,N],[11,"to_string","","",61,[[["self"]],["string"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[["self"]],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,N],[11,"to_string","","",62,[[["self"]],["string"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[["self"]],["u"]]],[11,"to_owned","","",86,[[["self"]],["t"]]],[11,"clone_into","","",86,N],[11,"to_string","","",86,[[["self"]],["string"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"try_into","","",86,[[["self"]],["result"]]],[11,"get_type_id","","",86,[[["self"]],["typeid"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[["self"]],["u"]]],[11,"to_owned","","",87,[[["self"]],["t"]]],[11,"clone_into","","",87,N],[11,"to_string","","",87,[[["self"]],["string"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"try_into","","",87,[[["self"]],["result"]]],[11,"get_type_id","","",87,[[["self"]],["typeid"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"into","","",92,[[["self"]],["u"]]],[11,"to_owned","","",92,[[["self"]],["t"]]],[11,"clone_into","","",92,N],[11,"to_string","","",92,[[["self"]],["string"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"try_into","","",92,[[["self"]],["result"]]],[11,"get_type_id","","",92,[[["self"]],["typeid"]]],[11,"from","","",130,[[["t"]],["t"]]],[11,"into_iter","","",130,[[["self"]],["i"]]],[11,"into","","",130,[[["self"]],["u"]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"try_into","","",130,[[["self"]],["result"]]],[11,"get_type_id","","",130,[[["self"]],["typeid"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"into","","",93,[[["self"]],["u"]]],[11,"to_string","","",93,[[["self"]],["string"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"try_into","","",93,[[["self"]],["result"]]],[11,"get_type_id","","",93,[[["self"]],["typeid"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[["self"]],["u"]]],[11,"to_string","","",63,[[["self"]],["string"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[["self"]],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,N],[11,"to_string","","",64,[[["self"]],["string"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[["self"]],["u"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,N],[11,"to_string","","",65,[[["self"]],["string"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[["self"]],["u"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,N],[11,"to_string","","",66,[[["self"]],["string"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[["self"]],["u"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,N],[11,"to_string","","",67,[[["self"]],["string"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[["self"]],["u"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,N],[11,"to_string","","",68,[[["self"]],["string"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"try_into","","",68,[[["self"]],["result"]]],[11,"get_type_id","","",68,[[["self"]],["typeid"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[["self"]],["u"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,N],[11,"to_string","","",69,[[["self"]],["string"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"try_into","","",69,[[["self"]],["result"]]],[11,"get_type_id","","",69,[[["self"]],["typeid"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[["self"]],["u"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,N],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"try_into","","",70,[[["self"]],["result"]]],[11,"get_type_id","","",70,[[["self"]],["typeid"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[["self"]],["u"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,N],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"try_into","","",71,[[["self"]],["result"]]],[11,"get_type_id","","",71,[[["self"]],["typeid"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[["self"]],["u"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,N],[11,"to_string","","",72,[[["self"]],["string"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"try_into","","",72,[[["self"]],["result"]]],[11,"get_type_id","","",72,[[["self"]],["typeid"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[["self"]],["u"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,N],[11,"to_string","","",73,[[["self"]],["string"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"try_into","","",73,[[["self"]],["result"]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[["self"]],["u"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,N],[11,"to_string","","",74,[[["self"]],["string"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"try_into","","",74,[[["self"]],["result"]]],[11,"get_type_id","","",74,[[["self"]],["typeid"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[["self"]],["u"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,N],[11,"to_string","","",75,[[["self"]],["string"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"try_into","","",75,[[["self"]],["result"]]],[11,"get_type_id","","",75,[[["self"]],["typeid"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[["self"]],["u"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,N],[11,"to_string","","",76,[[["self"]],["string"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"try_into","","",76,[[["self"]],["result"]]],[11,"get_type_id","","",76,[[["self"]],["typeid"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[["self"]],["u"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,N],[11,"to_string","","",77,[[["self"]],["string"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"try_into","","",77,[[["self"]],["result"]]],[11,"get_type_id","","",77,[[["self"]],["typeid"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[["self"]],["u"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,N],[11,"to_string","","",78,[[["self"]],["string"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"try_into","","",78,[[["self"]],["result"]]],[11,"get_type_id","","",78,[[["self"]],["typeid"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[["self"]],["u"]]],[11,"to_owned","","",79,[[["self"]],["t"]]],[11,"clone_into","","",79,N],[11,"to_string","","",79,[[["self"]],["string"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"try_into","","",79,[[["self"]],["result"]]],[11,"get_type_id","","",79,[[["self"]],["typeid"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[["self"]],["u"]]],[11,"to_owned","","",80,[[["self"]],["t"]]],[11,"clone_into","","",80,N],[11,"to_string","","",80,[[["self"]],["string"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"try_into","","",80,[[["self"]],["result"]]],[11,"get_type_id","","",80,[[["self"]],["typeid"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[["self"]],["u"]]],[11,"to_owned","","",81,[[["self"]],["t"]]],[11,"clone_into","","",81,N],[11,"to_string","","",81,[[["self"]],["string"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"try_into","","",81,[[["self"]],["result"]]],[11,"get_type_id","","",81,[[["self"]],["typeid"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[["self"]],["u"]]],[11,"to_owned","","",82,[[["self"]],["t"]]],[11,"clone_into","","",82,N],[11,"to_string","","",82,[[["self"]],["string"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"try_into","","",82,[[["self"]],["result"]]],[11,"get_type_id","","",82,[[["self"]],["typeid"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[["self"]],["u"]]],[11,"to_owned","","",83,[[["self"]],["t"]]],[11,"clone_into","","",83,N],[11,"to_string","","",83,[[["self"]],["string"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"try_into","","",83,[[["self"]],["result"]]],[11,"get_type_id","","",83,[[["self"]],["typeid"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[["self"]],["u"]]],[11,"to_owned","","",84,[[["self"]],["t"]]],[11,"clone_into","","",84,N],[11,"to_string","","",84,[[["self"]],["string"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"try_into","","",84,[[["self"]],["result"]]],[11,"get_type_id","","",84,[[["self"]],["typeid"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[["self"]],["u"]]],[11,"to_owned","","",85,[[["self"]],["t"]]],[11,"clone_into","","",85,N],[11,"to_string","","",85,[[["self"]],["string"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"try_into","","",85,[[["self"]],["result"]]],[11,"get_type_id","","",85,[[["self"]],["typeid"]]],[11,"from","hyper::header::parsing","",88,[[["t"]],["t"]]],[11,"into","","",88,[[["self"]],["u"]]],[11,"to_owned","","",88,[[["self"]],["t"]]],[11,"clone_into","","",88,N],[11,"to_string","","",88,[[["self"]],["string"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"try_into","","",88,[[["self"]],["result"]]],[11,"get_type_id","","",88,[[["self"]],["typeid"]]],[11,"from","","",131,[[["t"]],["t"]]],[11,"into","","",131,[[["self"]],["u"]]],[11,"to_owned","","",131,[[["self"]],["t"]]],[11,"clone_into","","",131,N],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"try_into","","",131,[[["self"]],["result"]]],[11,"get_type_id","","",131,[[["self"]],["typeid"]]],[11,"from","hyper::http","",94,[[["t"]],["t"]]],[11,"into","","",94,[[["self"]],["u"]]],[11,"to_owned","","",94,[[["self"]],["t"]]],[11,"clone_into","","",94,N],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"try_into","","",94,[[["self"]],["result"]]],[11,"get_type_id","","",94,[[["self"]],["typeid"]]],[11,"from","hyper::http::h1","",98,[[["t"]],["t"]]],[11,"into","","",98,[[["self"]],["u"]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"try_into","","",98,[[["self"]],["result"]]],[11,"get_type_id","","",98,[[["self"]],["typeid"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"into","","",99,[[["self"]],["u"]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"try_into","","",99,[[["self"]],["result"]]],[11,"get_type_id","","",99,[[["self"]],["typeid"]]],[11,"from","","",132,[[["t"]],["t"]]],[11,"into","","",132,[[["self"]],["u"]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"try_into","","",132,[[["self"]],["result"]]],[11,"get_type_id","","",132,[[["self"]],["typeid"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"into","","",95,[[["self"]],["u"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"try_into","","",95,[[["self"]],["result"]]],[11,"get_type_id","","",95,[[["self"]],["typeid"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"into","","",96,[[["self"]],["u"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"try_into","","",96,[[["self"]],["result"]]],[11,"get_type_id","","",96,[[["self"]],["typeid"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"into","","",97,[[["self"]],["u"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"try_into","","",97,[[["self"]],["result"]]],[11,"get_type_id","","",97,[[["self"]],["typeid"]]],[11,"from","hyper::http::message","",100,[[["t"]],["t"]]],[11,"into","","",100,[[["self"]],["u"]]],[11,"to_owned","","",100,[[["self"]],["t"]]],[11,"clone_into","","",100,N],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"try_into","","",100,[[["self"]],["result"]]],[11,"get_type_id","","",100,[[["self"]],["typeid"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"into","","",101,[[["self"]],["u"]]],[11,"to_owned","","",101,[[["self"]],["t"]]],[11,"clone_into","","",101,N],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"try_into","","",101,[[["self"]],["result"]]],[11,"get_type_id","","",101,[[["self"]],["typeid"]]],[11,"from","hyper::net","",133,[[["t"]],["t"]]],[11,"into_iter","","",133,[[["self"]],["i"]]],[11,"into","","",133,[[["self"]],["u"]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"try_into","","",133,[[["self"]],["result"]]],[11,"get_type_id","","",133,[[["self"]],["typeid"]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"into","","",111,[[["self"]],["u"]]],[11,"to_owned","","",111,[[["self"]],["t"]]],[11,"clone_into","","",111,N],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"try_into","","",111,[[["self"]],["result"]]],[11,"get_type_id","","",111,[[["self"]],["typeid"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"into","","",104,[[["self"]],["u"]]],[11,"to_owned","","",104,[[["self"]],["t"]]],[11,"clone_into","","",104,N],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"try_into","","",104,[[["self"]],["result"]]],[11,"get_type_id","","",104,[[["self"]],["typeid"]]],[11,"connect","","",134,[[["self"],["str"],["u16"],["str"]],["result",["httpstream","error"]]]],[11,"from","","",134,[[["t"]],["t"]]],[11,"into","","",134,[[["self"]],["u"]]],[11,"to_owned","","",134,[[["self"]],["t"]]],[11,"clone_into","","",134,N],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"try_into","","",134,[[["self"]],["result"]]],[11,"get_type_id","","",134,[[["self"]],["typeid"]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"into","","",112,[[["self"]],["u"]]],[11,"to_owned","","",112,[[["self"]],["t"]]],[11,"clone_into","","",112,N],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"try_into","","",112,[[["self"]],["result"]]],[11,"get_type_id","","",112,[[["self"]],["typeid"]]],[11,"connect","","",113,[[["self"],["str"],["u16"],["str"]],["result",["httpstream","error"]]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"into","","",113,[[["self"]],["u"]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"try_into","","",113,[[["self"]],["result"]]],[11,"get_type_id","","",113,[[["self"]],["typeid"]]],[11,"from","","",135,[[["t"]],["t"]]],[11,"into","","",135,[[["self"]],["u"]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"try_into","","",135,[[["self"]],["result"]]],[11,"get_type_id","","",135,[[["self"]],["typeid"]]],[11,"from","","",136,[[["t"]],["t"]]],[11,"into","","",136,[[["self"]],["u"]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"try_into","","",136,[[["self"]],["result"]]],[11,"get_type_id","","",136,[[["self"]],["typeid"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"into","","",105,[[["self"]],["u"]]],[11,"to_owned","","",105,[[["self"]],["t"]]],[11,"clone_into","","",105,N],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"try_into","","",105,[[["self"]],["result"]]],[11,"get_type_id","","",105,[[["self"]],["typeid"]]],[11,"from","hyper::server","",118,[[["t"]],["t"]]],[11,"into","","",118,[[["self"]],["u"]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"try_into","","",118,[[["self"]],["result"]]],[11,"get_type_id","","",118,[[["self"]],["typeid"]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"into","","",114,[[["self"]],["u"]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"try_into","","",114,[[["self"]],["result"]]],[11,"get_type_id","","",114,[[["self"]],["typeid"]]],[11,"from","hyper::server::request","",115,[[["t"]],["t"]]],[11,"into","","",115,[[["self"]],["u"]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"try_into","","",115,[[["self"]],["result"]]],[11,"get_type_id","","",115,[[["self"]],["typeid"]]],[11,"from","hyper::server::response","",116,[[["t"]],["t"]]],[11,"into","","",116,[[["self"]],["u"]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"try_into","","",116,[[["self"]],["result"]]],[11,"get_type_id","","",116,[[["self"]],["typeid"]]],[11,"from","hyper::status","",119,[[["t"]],["t"]]],[11,"into","","",119,[[["self"]],["u"]]],[11,"to_owned","","",119,[[["self"]],["t"]]],[11,"clone_into","","",119,N],[11,"to_string","","",119,[[["self"]],["string"]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"try_into","","",119,[[["self"]],["result"]]],[11,"get_type_id","","",119,[[["self"]],["typeid"]]],[11,"from","","",120,[[["t"]],["t"]]],[11,"into","","",120,[[["self"]],["u"]]],[11,"to_owned","","",120,[[["self"]],["t"]]],[11,"clone_into","","",120,N],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"try_into","","",120,[[["self"]],["result"]]],[11,"get_type_id","","",120,[[["self"]],["typeid"]]],[11,"from","hyper::uri","",121,[[["t"]],["t"]]],[11,"into","","",121,[[["self"]],["u"]]],[11,"to_owned","","",121,[[["self"]],["t"]]],[11,"clone_into","","",121,N],[11,"to_string","","",121,[[["self"]],["string"]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"try_into","","",121,[[["self"]],["result"]]],[11,"get_type_id","","",121,[[["self"]],["typeid"]]],[11,"from","hyper::version","",122,[[["t"]],["t"]]],[11,"into","","",122,[[["self"]],["u"]]],[11,"to_owned","","",122,[[["self"]],["t"]]],[11,"clone_into","","",122,N],[11,"to_string","","",122,[[["self"]],["string"]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"try_into","","",122,[[["self"]],["result"]]],[11,"get_type_id","","",122,[[["self"]],["typeid"]]],[11,"from","hyper::mime","",123,[[["t"]],["t"]]],[11,"into","","",123,[[["self"]],["u"]]],[11,"to_owned","","",123,[[["self"]],["t"]]],[11,"clone_into","","",123,N],[11,"to_string","","",123,[[["self"]],["string"]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"try_into","","",123,[[["self"]],["result"]]],[11,"get_type_id","","",123,[[["self"]],["typeid"]]],[11,"from","","",124,[[["t"]],["t"]]],[11,"into","","",124,[[["self"]],["u"]]],[11,"to_owned","","",124,[[["self"]],["t"]]],[11,"clone_into","","",124,N],[11,"to_string","","",124,[[["self"]],["string"]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"try_into","","",124,[[["self"]],["result"]]],[11,"get_type_id","","",124,[[["self"]],["typeid"]]],[11,"from","","",125,[[["t"]],["t"]]],[11,"into","","",125,[[["self"]],["u"]]],[11,"to_owned","","",125,[[["self"]],["t"]]],[11,"clone_into","","",125,N],[11,"to_string","","",125,[[["self"]],["string"]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"try_into","","",125,[[["self"]],["result"]]],[11,"get_type_id","","",125,[[["self"]],["typeid"]]],[11,"from","","",126,[[["t"]],["t"]]],[11,"into","","",126,[[["self"]],["u"]]],[11,"to_owned","","",126,[[["self"]],["t"]]],[11,"clone_into","","",126,N],[11,"to_string","","",126,[[["self"]],["string"]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"try_into","","",126,[[["self"]],["result"]]],[11,"get_type_id","","",126,[[["self"]],["typeid"]]],[11,"from","","",127,[[["t"]],["t"]]],[11,"into","","",127,[[["self"]],["u"]]],[11,"to_owned","","",127,[[["self"]],["t"]]],[11,"clone_into","","",127,N],[11,"to_string","","",127,[[["self"]],["string"]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"try_into","","",127,[[["self"]],["result"]]],[11,"get_type_id","","",127,[[["self"]],["typeid"]]],[11,"hash","hyper","",128,N],[11,"cmp","","",128,[[["self"],["url"]],["ordering"]]],[11,"index","","",128,[[["self"],["rangefrom",["position"]]],["str"]]],[11,"index","","",128,[[["self"],["rangefull"]],["str"]]],[11,"index","","",128,[[["self"],["rangeto",["position"]]],["str"]]],[11,"index","","",128,[[["self"],["range",["position"]]],["str"]]],[11,"eq","","",128,[[["self"],["url"]],["bool"]]],[11,"eq","hyper::error","",12,[[["self"],["parseerror"]],["bool"]]],[11,"fmt","hyper","",128,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","hyper::error","",12,[[["self"],["formatter"]],["result",["error"]]]],[11,"description","","",12,[[["self"]],["str"]]],[11,"from_str","hyper","",128,[[["str"]],["result",["url","parseerror"]]]],[11,"fmt","","",128,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","hyper::error","",12,[[["self"],["formatter"]],["result",["error"]]]],[11,"as_ref","hyper","",128,[[["self"]],["str"]]],[11,"from","hyper::error","",12,[[["errors"]],["parseerror"]]],[11,"to_socket_addrs","hyper","",128,[[["self"]],["result",["error"]]]],[11,"clone","","",128,[[["self"]],["url"]]],[11,"clone","hyper::error","",12,[[["self"]],["parseerror"]]],[11,"partial_cmp","hyper","",128,[[["self"],["url"]],["option",["ordering"]]]],[11,"default","","",0,[[],["languagetag"]]],[11,"eq","","",0,[[["self"],["languagetag"]],["bool"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"from_str","","",0,[[["str"]],["result",["languagetag","error"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"clone","","",0,[[["self"]],["languagetag"]]],[11,"cmp","hyper::mime","",124,[[["self"],["toplevel"]],["ordering"]]],[11,"cmp","","",127,[[["self"],["value"]],["ordering"]]],[11,"cmp","","",126,[[["self"],["attr"]],["ordering"]]],[11,"cmp","","",123,[[["self"],["mime"]],["ordering"]]],[11,"cmp","","",125,[[["self"],["sublevel"]],["ordering"]]],[11,"eq","","",126,[[["self"],["str"]],["bool"]]],[11,"eq","","",124,[[["self"],["string"]],["bool"]]],[11,"eq","","",124,[[["self"],["str"]],["bool"]]],[11,"eq","","",124,[[["self"],["str"]],["bool"]]],[11,"eq","","",127,[[["self"],["string"]],["bool"]]],[11,"eq","","",124,[[["self"],["toplevel"]],["bool"]]],[11,"eq","","",125,[[["self"],["string"]],["bool"]]],[11,"eq","","",123,[[["self"],["mime"]],["bool"]]],[11,"eq","","",126,[[["self"],["string"]],["bool"]]],[11,"eq","","",125,[[["self"],["str"]],["bool"]]],[11,"eq","","",127,[[["self"],["str"]],["bool"]]],[11,"eq","","",125,[[["self"],["sublevel"]],["bool"]]],[11,"eq","","",125,[[["self"],["str"]],["bool"]]],[11,"eq","","",127,[[["self"],["str"]],["bool"]]],[11,"eq","","",127,[[["self"],["value"]],["bool"]]],[11,"eq","","",126,[[["self"],["attr"]],["bool"]]],[11,"eq","","",126,[[["self"],["str"]],["bool"]]],[11,"fmt","","",126,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",125,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",127,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",124,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",123,[[["self"],["formatter"]],["result",["error"]]]],[11,"from_str","","",126,[[["str"]],["result",["attr"]]]],[11,"from_str","","",127,[[["str"]],["result",["value"]]]],[11,"from_str","","",125,[[["str"]],["result",["sublevel"]]]],[11,"from_str","","",123,[[["str"]],["result",["mime"]]]],[11,"from_str","","",124,[[["str"]],["result",["toplevel"]]]],[11,"fmt","","",127,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",126,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",125,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",123,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",124,[[["self"],["formatter"]],["result",["error"]]]],[11,"deref","","",124,[[["self"]],["str"]]],[11,"deref","","",125,[[["self"]],["str"]]],[11,"deref","","",127,[[["self"]],["str"]]],[11,"deref","","",126,[[["self"]],["str"]]],[11,"clone","","",124,[[["self"]],["toplevel"]]],[11,"clone","","",126,[[["self"]],["attr"]]],[11,"clone","","",127,[[["self"]],["value"]]],[11,"clone","","",123,[[["self"]],["mime"]]],[11,"clone","","",125,[[["self"]],["sublevel"]]],[11,"partial_cmp","","",127,[[["self"],["value"]],["option",["ordering"]]]],[11,"lt","","",127,[[["self"],["value"]],["bool"]]],[11,"le","","",127,[[["self"],["value"]],["bool"]]],[11,"gt","","",127,[[["self"],["value"]],["bool"]]],[11,"ge","","",127,[[["self"],["value"]],["bool"]]],[11,"partial_cmp","","",123,[[["self"],["mime"]],["option",["ordering"]]]],[11,"lt","","",123,[[["self"],["mime"]],["bool"]]],[11,"le","","",123,[[["self"],["mime"]],["bool"]]],[11,"gt","","",123,[[["self"],["mime"]],["bool"]]],[11,"ge","","",123,[[["self"],["mime"]],["bool"]]],[11,"partial_cmp","","",124,[[["self"],["toplevel"]],["option",["ordering"]]]],[11,"lt","","",124,[[["self"],["toplevel"]],["bool"]]],[11,"le","","",124,[[["self"],["toplevel"]],["bool"]]],[11,"gt","","",124,[[["self"],["toplevel"]],["bool"]]],[11,"ge","","",124,[[["self"],["toplevel"]],["bool"]]],[11,"partial_cmp","","",126,[[["self"],["attr"]],["option",["ordering"]]]],[11,"lt","","",126,[[["self"],["attr"]],["bool"]]],[11,"le","","",126,[[["self"],["attr"]],["bool"]]],[11,"gt","","",126,[[["self"],["attr"]],["bool"]]],[11,"ge","","",126,[[["self"],["attr"]],["bool"]]],[11,"partial_cmp","","",125,[[["self"],["sublevel"]],["option",["ordering"]]]],[11,"lt","","",125,[[["self"],["sublevel"]],["bool"]]],[11,"le","","",125,[[["self"],["sublevel"]],["bool"]]],[11,"gt","","",125,[[["self"],["sublevel"]],["bool"]]],[11,"ge","","",125,[[["self"],["sublevel"]],["bool"]]],[11,"hash","","",125,N],[11,"hash","","",127,N],[11,"hash","","",123,N],[11,"hash","","",126,N],[11,"hash","","",124,N],[11,"into_url","hyper","",128,[[["self"]],["result",["url","urlerror"]]]],[11,"scheme","hyper::header","",32,[[],["option",["str"]]]],[11,"fmt_scheme","","",32,[[["self"],["formatter"]],["result"]]],[11,"scheme","","",33,[[],["option",["str"]]]],[11,"fmt_scheme","","",33,[[["self"],["formatter"]],["result"]]],[11,"header_name","","",19,[[],["str"]]],[11,"parse_header","","",19,N],[11,"header_name","","",129,[[],["str"]]],[11,"parse_header","","",129,N],[11,"header_name","","",20,[[],["str"]]],[11,"parse_header","","",20,N],[11,"header_name","","",21,[[],["str"]]],[11,"parse_header","","",21,N],[11,"header_name","","",66,[[],["str"]]],[11,"parse_header","","",66,N],[11,"header_name","","",22,[[],["str"]]],[11,"parse_header","","",22,N],[11,"header_name","","",23,[[],["str"]]],[11,"parse_header","","",23,N],[11,"header_name","","",24,[[],["str"]]],[11,"parse_header","","",24,N],[11,"header_name","","",25,[[],["str"]]],[11,"parse_header","","",25,N],[11,"header_name","","",26,[[],["str"]]],[11,"parse_header","","",26,N],[11,"header_name","","",27,[[],["str"]]],[11,"parse_header","","",27,N],[11,"header_name","","",28,[[],["str"]]],[11,"parse_header","","",28,N],[11,"header_name","","",29,[[],["str"]]],[11,"parse_header","","",29,N],[11,"header_name","","",30,[[],["str"]]],[11,"parse_header","","",30,N],[11,"header_name","","",31,[[],["str"]]],[11,"parse_header","","",31,N],[11,"header_name","","",34,[[],["str"]]],[11,"parse_header","","",34,N],[11,"header_name","","",42,[[],["str"]]],[11,"parse_header","","",42,N],[11,"header_name","","",35,[[],["str"]]],[11,"parse_header","","",35,N],[11,"header_name","","",36,[[],["str"]]],[11,"parse_header","","",36,N],[11,"header_name","","",38,[[],["str"]]],[11,"parse_header","","",38,N],[11,"header_name","","",39,[[],["str"]]],[11,"parse_header","","",39,N],[11,"header_name","","",37,[[],["str"]]],[11,"parse_header","","",37,N],[11,"header_name","","",40,[[],["str"]]],[11,"parse_header","","",40,N],[11,"header_name","","",41,[[],["str"]]],[11,"parse_header","","",41,N],[11,"header_name","","",43,[[],["str"]]],[11,"parse_header","","",43,N],[11,"header_name","","",44,[[],["str"]]],[11,"parse_header","","",44,N],[11,"header_name","","",73,[[],["str"]]],[11,"parse_header","","",73,N],[11,"header_name","","",45,[[],["str"]]],[11,"parse_header","","",45,N],[11,"header_name","","",46,[[],["str"]]],[11,"parse_header","","",46,N],[11,"header_name","","",47,[[],["str"]]],[11,"parse_header","","",47,N],[11,"header_name","","",74,[[],["str"]]],[11,"parse_header","","",74,N],[11,"header_name","","",48,[[],["str"]]],[11,"parse_header","","",48,N],[11,"header_name","","",75,[[],["str"]]],[11,"parse_header","","",75,N],[11,"header_name","","",76,[[],["str"]]],[11,"parse_header","","",76,N],[11,"header_name","","",49,[[],["str"]]],[11,"parse_header","","",49,N],[11,"header_name","","",50,[[],["str"]]],[11,"parse_header","","",50,N],[11,"header_name","","",51,[[],["str"]]],[11,"parse_header","","",51,N],[11,"header_name","","",52,[[],["str"]]],[11,"parse_header","","",52,N],[11,"header_name","","",77,[[],["str"]]],[11,"parse_header","","",77,N],[11,"header_name","","",53,[[],["str"]]],[11,"parse_header","","",53,N],[11,"header_name","","",54,[[],["str"]]],[11,"parse_header","","",54,N],[11,"header_name","","",79,[[],["str"]]],[11,"parse_header","","",79,N],[11,"header_name","","",55,[[],["str"]]],[11,"parse_header","","",55,N],[11,"header_name","","",81,[[],["str"]]],[11,"parse_header","","",81,N],[11,"header_name","","",56,[[],["str"]]],[11,"parse_header","","",56,N],[11,"header_name","","",57,[[],["str"]]],[11,"parse_header","","",57,N],[11,"header_name","","",58,[[],["str"]]],[11,"parse_header","","",58,N],[11,"header_name","","",59,[[],["str"]]],[11,"parse_header","","",59,N],[11,"header_name","","",60,[[],["str"]]],[11,"parse_header","","",60,N],[11,"header_name","","",62,[[],["str"]]],[11,"parse_header","","",62,N],[11,"header_name","","",83,[[],["str"]]],[11,"parse_header","","",83,N],[11,"header_name","","",86,[[],["str"]]],[11,"parse_header","","",86,N],[11,"fmt_header","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",129,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",66,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",36,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",39,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",73,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",74,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",48,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",75,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",76,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",50,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",51,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",52,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",77,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",53,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",54,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",79,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",55,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",81,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",56,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",57,[[["self"],["formatter"]],["result"]]],[11,"fmt_multi_header","","",57,[[["self"],["multilineformatter"]],["result"]]],[11,"fmt_header","","",58,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",59,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",60,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",62,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",83,[[["self"],["formatter"]],["result"]]],[11,"fmt_header","","",86,[[["self"],["formatter"]],["result"]]],[11,"new_message","hyper::http::h1","",99,[[["self"],["str"],["u16"],["str"]],["result",["box"]]]],[11,"set_outgoing","","",98,[[["self"],["requesthead"]],["result",["requesthead"]]]],[11,"get_incoming","","",98,[[["self"]],["result",["responsehead"]]]],[11,"has_body","","",98,[[["self"]],["bool"]]],[11,"set_read_timeout","","",98,[[["self"],["option",["duration"]]],["result"]]],[11,"set_write_timeout","","",98,[[["self"],["option",["duration"]]],["result"]]],[11,"close_connection","","",98,[[["self"]],["result"]]],[11,"set_proxied","","",98,[[["self"],["bool"]]]],[11,"accept","hyper::net","",111,[[["self"]],["result",["httpstream"]]]],[11,"local_addr","","",111,[[["self"]],["result",["socketaddr"]]]],[11,"set_read_timeout","","",111,[[["self"],["option",["duration"]]]]],[11,"set_write_timeout","","",111,[[["self"],["option",["duration"]]]]],[11,"accept","","",112,[[["self"]],["result"]]],[11,"local_addr","","",112,[[["self"]],["result",["socketaddr"]]]],[11,"set_read_timeout","","",112,[[["self"],["option",["duration"]]]]],[11,"set_write_timeout","","",112,[[["self"],["option",["duration"]]]]],[11,"peer_addr","hyper::client::pool","",5,[[["self"]],["result",["socketaddr"]]]],[11,"set_read_timeout","","",5,[[["self"],["option",["duration"]]],["result"]]],[11,"set_write_timeout","","",5,[[["self"],["option",["duration"]]],["result"]]],[11,"close","","",5,[[["self"],["shutdown"]],["result"]]],[11,"set_previous_response_expected_no_content","","",5,[[["self"],["bool"]]]],[11,"previous_response_expected_no_content","","",5,[[["self"]],["bool"]]],[11,"peer_addr","hyper::net","",104,[[["self"]],["result",["socketaddr"]]]],[11,"set_read_timeout","","",104,[[["self"],["option",["duration"]]],["result"]]],[11,"set_write_timeout","","",104,[[["self"],["option",["duration"]]],["result"]]],[11,"close","","",104,[[["self"],["shutdown"]],["result"]]],[11,"peer_addr","","",105,[[["self"]],["result",["socketaddr"]]]],[11,"set_read_timeout","","",105,[[["self"],["option",["duration"]]],["result"]]],[11,"set_write_timeout","","",105,[[["self"],["option",["duration"]]],["result"]]],[11,"close","","",105,[[["self"],["shutdown"]],["result"]]],[11,"connect","hyper::client::pool","",4,[[["self"],["str"],["u16"],["str"]],["result",["pooledstream"]]]],[11,"connect","hyper::net","",134,[[["self"],["str"],["u16"],["str"]],["result",["httpstream"]]]],[11,"connect","","",113,[[["self"],["str"],["u16"],["str"]],["result"]]],[11,"cmp","hyper::header","",16,[[["self"],["httpdate"]],["ordering"]]],[11,"cmp","","",17,[[["self"],["quality"]],["ordering"]]],[11,"cmp","hyper::status","",119,[[["self"],["statuscode"]],["ordering"]]],[11,"cmp","","",120,[[["self"],["statusclass"]],["ordering"]]],[11,"cmp","hyper::version","",122,[[["self"],["httpversion"]],["ordering"]]],[11,"eq","hyper::method","",14,[[["self"],["method"]],["bool"]]],[11,"ne","","",14,[[["self"],["method"]],["bool"]]],[11,"eq","hyper::header","",19,[[["self"],["accept"]],["bool"]]],[11,"ne","","",19,[[["self"],["accept"]],["bool"]]],[11,"eq","","",129,[[["self"],["accesscontrolallowcredentials"]],["bool"]]],[11,"eq","","",20,[[["self"],["accesscontrolallowheaders"]],["bool"]]],[11,"ne","","",20,[[["self"],["accesscontrolallowheaders"]],["bool"]]],[11,"eq","","",21,[[["self"],["accesscontrolallowmethods"]],["bool"]]],[11,"ne","","",21,[[["self"],["accesscontrolallowmethods"]],["bool"]]],[11,"eq","","",66,[[["self"],["accesscontrolalloworigin"]],["bool"]]],[11,"ne","","",66,[[["self"],["accesscontrolalloworigin"]],["bool"]]],[11,"eq","","",22,[[["self"],["accesscontrolexposeheaders"]],["bool"]]],[11,"ne","","",22,[[["self"],["accesscontrolexposeheaders"]],["bool"]]],[11,"eq","","",23,[[["self"],["accesscontrolmaxage"]],["bool"]]],[11,"ne","","",23,[[["self"],["accesscontrolmaxage"]],["bool"]]],[11,"eq","","",24,[[["self"],["accesscontrolrequestheaders"]],["bool"]]],[11,"ne","","",24,[[["self"],["accesscontrolrequestheaders"]],["bool"]]],[11,"eq","","",25,[[["self"],["accesscontrolrequestmethod"]],["bool"]]],[11,"ne","","",25,[[["self"],["accesscontrolrequestmethod"]],["bool"]]],[11,"eq","","",26,[[["self"],["acceptcharset"]],["bool"]]],[11,"ne","","",26,[[["self"],["acceptcharset"]],["bool"]]],[11,"eq","","",27,[[["self"],["acceptencoding"]],["bool"]]],[11,"ne","","",27,[[["self"],["acceptencoding"]],["bool"]]],[11,"eq","","",28,[[["self"],["acceptlanguage"]],["bool"]]],[11,"ne","","",28,[[["self"],["acceptlanguage"]],["bool"]]],[11,"eq","","",29,[[["self"],["acceptranges"]],["bool"]]],[11,"ne","","",29,[[["self"],["acceptranges"]],["bool"]]],[11,"eq","","",67,[[["self"],["rangeunit"]],["bool"]]],[11,"ne","","",67,[[["self"],["rangeunit"]],["bool"]]],[11,"eq","","",30,[[["self"],["allow"]],["bool"]]],[11,"ne","","",30,[[["self"],["allow"]],["bool"]]],[11,"eq","","",31,[[["self"],["authorization"]],["bool"]]],[11,"ne","","",31,[[["self"],["authorization"]],["bool"]]],[11,"eq","","",32,[[["self"],["basic"]],["bool"]]],[11,"ne","","",32,[[["self"],["basic"]],["bool"]]],[11,"eq","","",33,[[["self"],["bearer"]],["bool"]]],[11,"ne","","",33,[[["self"],["bearer"]],["bool"]]],[11,"eq","","",34,[[["self"],["cachecontrol"]],["bool"]]],[11,"ne","","",34,[[["self"],["cachecontrol"]],["bool"]]],[11,"eq","","",68,[[["self"],["cachedirective"]],["bool"]]],[11,"ne","","",68,[[["self"],["cachedirective"]],["bool"]]],[11,"eq","","",42,[[["self"],["cookie"]],["bool"]]],[11,"ne","","",42,[[["self"],["cookie"]],["bool"]]],[11,"eq","","",69,[[["self"],["connectionoption"]],["bool"]]],[11,"ne","","",69,[[["self"],["connectionoption"]],["bool"]]],[11,"eq","","",35,[[["self"],["connection"]],["bool"]]],[11,"ne","","",35,[[["self"],["connection"]],["bool"]]],[11,"eq","","",70,[[["self"],["dispositiontype"]],["bool"]]],[11,"ne","","",70,[[["self"],["dispositiontype"]],["bool"]]],[11,"eq","","",71,[[["self"],["dispositionparam"]],["bool"]]],[11,"ne","","",71,[[["self"],["dispositionparam"]],["bool"]]],[11,"eq","","",36,[[["self"],["contentdisposition"]],["bool"]]],[11,"ne","","",36,[[["self"],["contentdisposition"]],["bool"]]],[11,"eq","","",38,[[["self"],["contentencoding"]],["bool"]]],[11,"ne","","",38,[[["self"],["contentencoding"]],["bool"]]],[11,"eq","","",39,[[["self"],["contentlanguage"]],["bool"]]],[11,"ne","","",39,[[["self"],["contentlanguage"]],["bool"]]],[11,"eq","","",37,[[["self"],["contentlength"]],["bool"]]],[11,"ne","","",37,[[["self"],["contentlength"]],["bool"]]],[11,"eq","","",40,[[["self"],["contentrange"]],["bool"]]],[11,"ne","","",40,[[["self"],["contentrange"]],["bool"]]],[11,"eq","","",72,[[["self"],["contentrangespec"]],["bool"]]],[11,"ne","","",72,[[["self"],["contentrangespec"]],["bool"]]],[11,"eq","","",41,[[["self"],["contenttype"]],["bool"]]],[11,"ne","","",41,[[["self"],["contenttype"]],["bool"]]],[11,"eq","","",43,[[["self"],["date"]],["bool"]]],[11,"ne","","",43,[[["self"],["date"]],["bool"]]],[11,"eq","","",44,[[["self"],["etag"]],["bool"]]],[11,"ne","","",44,[[["self"],["etag"]],["bool"]]],[11,"eq","","",73,[[["self"],["expect"]],["bool"]]],[11,"eq","","",45,[[["self"],["expires"]],["bool"]]],[11,"ne","","",45,[[["self"],["expires"]],["bool"]]],[11,"eq","","",46,[[["self"],["from"]],["bool"]]],[11,"ne","","",46,[[["self"],["from"]],["bool"]]],[11,"eq","","",47,[[["self"],["host"]],["bool"]]],[11,"ne","","",47,[[["self"],["host"]],["bool"]]],[11,"eq","","",74,[[["self"],["ifmatch"]],["bool"]]],[11,"ne","","",74,[[["self"],["ifmatch"]],["bool"]]],[11,"eq","","",48,[[["self"],["ifmodifiedsince"]],["bool"]]],[11,"ne","","",48,[[["self"],["ifmodifiedsince"]],["bool"]]],[11,"eq","","",75,[[["self"],["ifnonematch"]],["bool"]]],[11,"ne","","",75,[[["self"],["ifnonematch"]],["bool"]]],[11,"eq","","",76,[[["self"],["ifrange"]],["bool"]]],[11,"ne","","",76,[[["self"],["ifrange"]],["bool"]]],[11,"eq","","",49,[[["self"],["ifunmodifiedsince"]],["bool"]]],[11,"ne","","",49,[[["self"],["ifunmodifiedsince"]],["bool"]]],[11,"eq","","",50,[[["self"],["lastmodified"]],["bool"]]],[11,"ne","","",50,[[["self"],["lastmodified"]],["bool"]]],[11,"eq","","",51,[[["self"],["location"]],["bool"]]],[11,"ne","","",51,[[["self"],["location"]],["bool"]]],[11,"eq","","",52,[[["self"],["origin"]],["bool"]]],[11,"eq","","",77,[[["self"],["pragma"]],["bool"]]],[11,"ne","","",77,[[["self"],["pragma"]],["bool"]]],[11,"eq","","",53,[[["self"],["prefer"]],["bool"]]],[11,"ne","","",53,[[["self"],["prefer"]],["bool"]]],[11,"eq","","",78,[[["self"],["preference"]],["bool"]]],[11,"ne","","",78,[[["self"],["preference"]],["bool"]]],[11,"eq","","",54,[[["self"],["preferenceapplied"]],["bool"]]],[11,"ne","","",54,[[["self"],["preferenceapplied"]],["bool"]]],[11,"eq","","",79,[[["self"],["range"]],["bool"]]],[11,"ne","","",79,[[["self"],["range"]],["bool"]]],[11,"eq","","",80,[[["self"],["byterangespec"]],["bool"]]],[11,"ne","","",80,[[["self"],["byterangespec"]],["bool"]]],[11,"eq","","",55,[[["self"],["referer"]],["bool"]]],[11,"ne","","",55,[[["self"],["referer"]],["bool"]]],[11,"eq","","",81,[[["self"],["referrerpolicy"]],["bool"]]],[11,"eq","","",56,[[["self"],["server"]],["bool"]]],[11,"ne","","",56,[[["self"],["server"]],["bool"]]],[11,"eq","","",57,[[["self"],["setcookie"]],["bool"]]],[11,"ne","","",57,[[["self"],["setcookie"]],["bool"]]],[11,"eq","","",58,[[["self"],["stricttransportsecurity"]],["bool"]]],[11,"ne","","",58,[[["self"],["stricttransportsecurity"]],["bool"]]],[11,"eq","","",59,[[["self"],["transferencoding"]],["bool"]]],[11,"ne","","",59,[[["self"],["transferencoding"]],["bool"]]],[11,"eq","","",60,[[["self"],["upgrade"]],["bool"]]],[11,"ne","","",60,[[["self"],["upgrade"]],["bool"]]],[11,"eq","","",82,[[["self"],["protocolname"]],["bool"]]],[11,"ne","","",82,[[["self"],["protocolname"]],["bool"]]],[11,"eq","","",61,[[["self"],["protocol"]],["bool"]]],[11,"ne","","",61,[[["self"],["protocol"]],["bool"]]],[11,"eq","","",62,[[["self"],["useragent"]],["bool"]]],[11,"ne","","",62,[[["self"],["useragent"]],["bool"]]],[11,"eq","","",83,[[["self"],["vary"]],["bool"]]],[11,"ne","","",83,[[["self"],["vary"]],["bool"]]],[11,"eq","","",86,[[["self"],["link"]],["bool"]]],[11,"ne","","",86,[[["self"],["link"]],["bool"]]],[11,"eq","","",87,[[["self"],["linkvalue"]],["bool"]]],[11,"ne","","",87,[[["self"],["linkvalue"]],["bool"]]],[11,"eq","","",85,[[["self"],["mediadesc"]],["bool"]]],[11,"ne","","",85,[[["self"],["mediadesc"]],["bool"]]],[11,"eq","","",84,[[["self"],["relationtype"]],["bool"]]],[11,"ne","","",84,[[["self"],["relationtype"]],["bool"]]],[11,"eq","","",64,[[["self"],["charset"]],["bool"]]],[11,"ne","","",64,[[["self"],["charset"]],["bool"]]],[11,"eq","","",65,[[["self"],["encoding"]],["bool"]]],[11,"ne","","",65,[[["self"],["encoding"]],["bool"]]],[11,"eq","","",15,[[["self"],["entitytag"]],["bool"]]],[11,"ne","","",15,[[["self"],["entitytag"]],["bool"]]],[11,"eq","","",16,[[["self"],["httpdate"]],["bool"]]],[11,"ne","","",16,[[["self"],["httpdate"]],["bool"]]],[11,"eq","","",17,[[["self"],["quality"]],["bool"]]],[11,"ne","","",17,[[["self"],["quality"]],["bool"]]],[11,"eq","","",18,[[["self"],["qualityitem"]],["bool"]]],[11,"ne","","",18,[[["self"],["qualityitem"]],["bool"]]],[11,"eq","hyper::header::parsing","",88,[[["self"],["extendedvalue"]],["bool"]]],[11,"ne","","",88,[[["self"],["extendedvalue"]],["bool"]]],[11,"eq","hyper::header","",92,[[["self"],["headers"]],["bool"]]],[11,"eq","hyper::http","",94,[[["self"],["rawstatus"]],["bool"]]],[11,"ne","","",94,[[["self"],["rawstatus"]],["bool"]]],[11,"eq","hyper::status","",119,[[["self"],["statuscode"]],["bool"]]],[11,"eq","","",120,[[["self"],["statusclass"]],["bool"]]],[11,"eq","hyper::uri","",121,[[["self"],["requesturi"]],["bool"]]],[11,"ne","","",121,[[["self"],["requesturi"]],["bool"]]],[11,"eq","hyper::version","",122,[[["self"],["httpversion"]],["bool"]]],[11,"from","hyper::client","",1,[[["r"]],["body"]]],[11,"from","hyper::error","",13,[[["ioerror"]],["error"]]],[11,"from","","",13,[[["parseerror"]],["error"]]],[11,"from","","",13,[[["utf8error"]],["error"]]],[11,"from","","",13,[[["fromutf8error"]],["error"]]],[11,"from","","",13,[[["error"]],["error"]]],[11,"from","hyper::net","",111,[[["tcplistener"]],["httplistener"]]],[11,"clone","hyper::client","",2,[[["self"]],["redirectpolicy"]]],[11,"clone","hyper::method","",14,[[["self"]],["method"]]],[11,"clone","hyper::header","",19,[[["self"]],["accept"]]],[11,"clone","","",129,[[["self"]],["accesscontrolallowcredentials"]]],[11,"clone","","",20,[[["self"]],["accesscontrolallowheaders"]]],[11,"clone","","",21,[[["self"]],["accesscontrolallowmethods"]]],[11,"clone","","",66,[[["self"]],["accesscontrolalloworigin"]]],[11,"clone","","",22,[[["self"]],["accesscontrolexposeheaders"]]],[11,"clone","","",23,[[["self"]],["accesscontrolmaxage"]]],[11,"clone","","",24,[[["self"]],["accesscontrolrequestheaders"]]],[11,"clone","","",25,[[["self"]],["accesscontrolrequestmethod"]]],[11,"clone","","",26,[[["self"]],["acceptcharset"]]],[11,"clone","","",27,[[["self"]],["acceptencoding"]]],[11,"clone","","",28,[[["self"]],["acceptlanguage"]]],[11,"clone","","",29,[[["self"]],["acceptranges"]]],[11,"clone","","",67,[[["self"]],["rangeunit"]]],[11,"clone","","",30,[[["self"]],["allow"]]],[11,"clone","","",31,[[["self"]],["authorization"]]],[11,"clone","","",32,[[["self"]],["basic"]]],[11,"clone","","",33,[[["self"]],["bearer"]]],[11,"clone","","",34,[[["self"]],["cachecontrol"]]],[11,"clone","","",68,[[["self"]],["cachedirective"]]],[11,"clone","","",42,[[["self"]],["cookie"]]],[11,"clone","","",69,[[["self"]],["connectionoption"]]],[11,"clone","","",35,[[["self"]],["connection"]]],[11,"clone","","",70,[[["self"]],["dispositiontype"]]],[11,"clone","","",71,[[["self"]],["dispositionparam"]]],[11,"clone","","",36,[[["self"]],["contentdisposition"]]],[11,"clone","","",38,[[["self"]],["contentencoding"]]],[11,"clone","","",39,[[["self"]],["contentlanguage"]]],[11,"clone","","",37,[[["self"]],["contentlength"]]],[11,"clone","","",40,[[["self"]],["contentrange"]]],[11,"clone","","",72,[[["self"]],["contentrangespec"]]],[11,"clone","","",41,[[["self"]],["contenttype"]]],[11,"clone","","",43,[[["self"]],["date"]]],[11,"clone","","",44,[[["self"]],["etag"]]],[11,"clone","","",73,[[["self"]],["expect"]]],[11,"clone","","",45,[[["self"]],["expires"]]],[11,"clone","","",46,[[["self"]],["from"]]],[11,"clone","","",47,[[["self"]],["host"]]],[11,"clone","","",74,[[["self"]],["ifmatch"]]],[11,"clone","","",48,[[["self"]],["ifmodifiedsince"]]],[11,"clone","","",75,[[["self"]],["ifnonematch"]]],[11,"clone","","",76,[[["self"]],["ifrange"]]],[11,"clone","","",49,[[["self"]],["ifunmodifiedsince"]]],[11,"clone","","",50,[[["self"]],["lastmodified"]]],[11,"clone","","",51,[[["self"]],["location"]]],[11,"clone","","",52,[[["self"]],["origin"]]],[11,"clone","","",77,[[["self"]],["pragma"]]],[11,"clone","","",53,[[["self"]],["prefer"]]],[11,"clone","","",78,[[["self"]],["preference"]]],[11,"clone","","",54,[[["self"]],["preferenceapplied"]]],[11,"clone","","",79,[[["self"]],["range"]]],[11,"clone","","",80,[[["self"]],["byterangespec"]]],[11,"clone","","",55,[[["self"]],["referer"]]],[11,"clone","","",81,[[["self"]],["referrerpolicy"]]],[11,"clone","","",56,[[["self"]],["server"]]],[11,"clone","","",57,[[["self"]],["setcookie"]]],[11,"clone","","",58,[[["self"]],["stricttransportsecurity"]]],[11,"clone","","",59,[[["self"]],["transferencoding"]]],[11,"clone","","",60,[[["self"]],["upgrade"]]],[11,"clone","","",82,[[["self"]],["protocolname"]]],[11,"clone","","",61,[[["self"]],["protocol"]]],[11,"clone","","",62,[[["self"]],["useragent"]]],[11,"clone","","",83,[[["self"]],["vary"]]],[11,"clone","","",86,[[["self"]],["link"]]],[11,"clone","","",87,[[["self"]],["linkvalue"]]],[11,"clone","","",85,[[["self"]],["mediadesc"]]],[11,"clone","","",84,[[["self"]],["relationtype"]]],[11,"clone","","",64,[[["self"]],["charset"]]],[11,"clone","","",65,[[["self"]],["encoding"]]],[11,"clone","","",15,[[["self"]],["entitytag"]]],[11,"clone","","",16,[[["self"]],["httpdate"]]],[11,"clone","","",17,[[["self"]],["quality"]]],[11,"clone","","",18,[[["self"]],["qualityitem"]]],[11,"clone","hyper::header::parsing","",88,[[["self"]],["extendedvalue"]]],[11,"clone","","",131,[[["self"]],["http_value"]]],[11,"clone","hyper::header","",92,[[["self"]],["headers"]]],[11,"clone","hyper::http::message","",100,[[["self"]],["requesthead"]]],[11,"clone","","",101,[[["self"]],["responsehead"]]],[11,"clone","hyper::http","",94,[[["self"]],["rawstatus"]]],[11,"clone","hyper::net","",111,[[["self"]],["httplistener"]]],[11,"clone","","",104,[[["self"]],["httpstream"]]],[11,"clone","","",134,[[["self"]],["httpconnector"]]],[11,"clone","","",105,[[["self"]],["httpsstream"]]],[11,"clone","","",112,[[["self"]],["httpslistener"]]],[11,"clone","hyper::status","",119,[[["self"]],["statuscode"]]],[11,"clone","","",120,[[["self"]],["statusclass"]]],[11,"clone","hyper::uri","",121,[[["self"]],["requesturi"]]],[11,"clone","hyper::version","",122,[[["self"]],["httpversion"]]],[11,"extend","hyper::header","",92,[[["self"],["i"]]]],[11,"drop","hyper::client::pool","",5,[[["self"]]]],[11,"drop","hyper::client::response","",7,[[["self"]]]],[11,"drop","hyper::server::response","",116,[[["self"]]]],[11,"drop","hyper::server","",114,[[["self"]]]],[11,"partial_cmp","hyper::header","",16,[[["self"],["httpdate"]],["option",["ordering"]]]],[11,"lt","","",16,[[["self"],["httpdate"]],["bool"]]],[11,"le","","",16,[[["self"],["httpdate"]],["bool"]]],[11,"gt","","",16,[[["self"],["httpdate"]],["bool"]]],[11,"ge","","",16,[[["self"],["httpdate"]],["bool"]]],[11,"partial_cmp","","",17,[[["self"],["quality"]],["option",["ordering"]]]],[11,"lt","","",17,[[["self"],["quality"]],["bool"]]],[11,"le","","",17,[[["self"],["quality"]],["bool"]]],[11,"gt","","",17,[[["self"],["quality"]],["bool"]]],[11,"ge","","",17,[[["self"],["quality"]],["bool"]]],[11,"partial_cmp","","",18,[[["self"],["qualityitem"]],["option",["ordering"]]]],[11,"partial_cmp","hyper::status","",119,[[["self"],["statuscode"]],["option",["ordering"]]]],[11,"partial_cmp","","",120,[[["self"],["statusclass"]],["option",["ordering"]]]],[11,"partial_cmp","hyper::version","",122,[[["self"],["httpversion"]],["option",["ordering"]]]],[11,"next","hyper::header","",130,[[["self"]],["option",["headerview"]]]],[11,"next","hyper::net","",133,[[["self"]],["option",["result"]]]],[11,"as_ref","hyper::method","",14,[[["self"]],["str"]]],[11,"as_ref","hyper::version","",122,[[["self"]],["str"]]],[11,"default","hyper::client::pool","",3,[[],["config"]]],[11,"default","hyper::client","",9,[[],["client"]]],[11,"default","","",2,[[],["redirectpolicy"]]],[11,"default","hyper::header","",17,[[],["quality"]]],[11,"default","hyper::net","",134,[[],["httpconnector"]]],[11,"default","","",113,[[],["httpsconnector"]]],[11,"fmt","hyper::error","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::method","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::header","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",129,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",66,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",67,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",68,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",69,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",72,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",73,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",74,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",75,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",76,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",50,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",52,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",77,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",53,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",78,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",54,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",80,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",79,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",55,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",81,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",56,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",58,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",59,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",60,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",82,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",61,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",62,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",83,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",86,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",87,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",85,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",84,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",64,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",65,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::header::parsing","",88,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::header","",92,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",93,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",63,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::status","",119,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::uri","",121,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::version","",122,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::client::pool","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::client::response","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::client","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::error","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::method","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::header","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",129,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",66,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",67,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",68,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",69,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",70,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",71,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",72,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",73,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",74,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",75,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",76,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",50,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",52,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",77,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",53,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",78,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",54,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",79,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",80,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",55,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",81,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",56,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",57,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",58,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",59,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",60,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",82,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",61,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",62,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",83,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",86,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",87,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",85,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",84,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",64,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",65,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::header::parsing","",88,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::header","",92,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",93,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",63,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::http::h1","",98,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",96,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",132,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",97,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",95,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::http::message","",100,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",101,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::http","",94,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::net","",104,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",134,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",105,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",113,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::server::response","",116,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::server","",118,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",114,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::status","",119,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",120,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::uri","",121,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::version","",122,[[["self"],["formatter"]],["result"]]],[11,"from_str","hyper::method","",14,[[["str"]],["result",["method","error"]]]],[11,"from_str","hyper::header","",67,[[["str"]],["result"]]],[11,"from_str","","",32,[[["str"]],["result",["basic"]]]],[11,"from_str","","",33,[[["str"]],["result",["bearer"]]]],[11,"from_str","","",68,[[["str"]],["result",["cachedirective","option"]]]],[11,"from_str","","",69,[[["str"]],["result",["connectionoption"]]]],[11,"from_str","","",72,[[["str"]],["result"]]],[11,"from_str","","",47,[[["str"]],["result",["host"]]]],[11,"from_str","","",52,[[["str"]],["result",["origin"]]]],[11,"from_str","","",78,[[["str"]],["result",["preference","option"]]]],[11,"from_str","","",79,[[["str"]],["result",["range"]]]],[11,"from_str","","",80,[[["str"]],["result",["byterangespec"]]]],[11,"from_str","","",58,[[["str"]],["result",["stricttransportsecurity"]]]],[11,"from_str","","",82,[[["str"]],["result",["protocolname"]]]],[11,"from_str","","",61,[[["str"]],["result",["protocol"]]]],[11,"from_str","","",86,[[["str"]],["result",["link"]]]],[11,"from_str","","",85,[[["str"]],["result",["mediadesc"]]]],[11,"from_str","","",84,[[["str"]],["result",["relationtype"]]]],[11,"from_str","","",64,[[["str"]],["result",["charset"]]]],[11,"from_str","","",65,[[["str"]],["result",["encoding"]]]],[11,"from_str","","",15,[[["str"]],["result",["entitytag"]]]],[11,"from_str","","",16,[[["str"]],["result",["httpdate"]]]],[11,"from_str","","",18,[[["str"]],["result",["qualityitem"]]]],[11,"from_str","hyper::uri","",121,[[["str"]],["result",["requesturi","error"]]]],[11,"from_str","hyper::version","",122,[[["str"]],["result"]]],[11,"deref","hyper::header","",19,[[["self"]],["vec"]]],[11,"deref","","",20,[[["self"]],["vec"]]],[11,"deref","","",21,[[["self"]],["vec"]]],[11,"deref","","",22,[[["self"]],["vec"]]],[11,"deref","","",23,[[["self"]],["u32"]]],[11,"deref","","",24,[[["self"]],["vec"]]],[11,"deref","","",25,[[["self"]],["method"]]],[11,"deref","","",26,[[["self"]],["vec"]]],[11,"deref","","",27,[[["self"]],["vec"]]],[11,"deref","","",28,[[["self"]],["vec"]]],[11,"deref","","",29,[[["self"]],["vec"]]],[11,"deref","","",30,[[["self"]],["vec"]]],[11,"deref","","",31,[[["self"]],["s"]]],[11,"deref","","",34,[[["self"]],["vec"]]],[11,"deref","","",42,[[["self"]],["vec"]]],[11,"deref","","",35,[[["self"]],["vec"]]],[11,"deref","","",38,[[["self"]],["vec"]]],[11,"deref","","",39,[[["self"]],["vec"]]],[11,"deref","","",37,[[["self"]],["u64"]]],[11,"deref","","",40,[[["self"]],["contentrangespec"]]],[11,"deref","","",41,[[["self"]],["mime"]]],[11,"deref","","",43,[[["self"]],["httpdate"]]],[11,"deref","","",44,[[["self"]],["entitytag"]]],[11,"deref","","",45,[[["self"]],["httpdate"]]],[11,"deref","","",46,[[["self"]],["string"]]],[11,"deref","","",48,[[["self"]],["httpdate"]]],[11,"deref","","",49,[[["self"]],["httpdate"]]],[11,"deref","","",50,[[["self"]],["httpdate"]]],[11,"deref","","",51,[[["self"]],["string"]]],[11,"deref","","",53,[[["self"]],["vec"]]],[11,"deref","","",54,[[["self"]],["vec"]]],[11,"deref","","",55,[[["self"]],["string"]]],[11,"deref","","",56,[[["self"]],["string"]]],[11,"deref","","",57,[[["self"]],["vec"]]],[11,"deref","","",59,[[["self"]],["vec"]]],[11,"deref","","",60,[[["self"]],["vec"]]],[11,"deref","","",62,[[["self"]],["string"]]],[11,"deref_mut","","",19,[[["self"]],["vec"]]],[11,"deref_mut","","",20,[[["self"]],["vec"]]],[11,"deref_mut","","",21,[[["self"]],["vec"]]],[11,"deref_mut","","",22,[[["self"]],["vec"]]],[11,"deref_mut","","",23,[[["self"]],["u32"]]],[11,"deref_mut","","",24,[[["self"]],["vec"]]],[11,"deref_mut","","",25,[[["self"]],["method"]]],[11,"deref_mut","","",26,[[["self"]],["vec"]]],[11,"deref_mut","","",27,[[["self"]],["vec"]]],[11,"deref_mut","","",28,[[["self"]],["vec"]]],[11,"deref_mut","","",29,[[["self"]],["vec"]]],[11,"deref_mut","","",30,[[["self"]],["vec"]]],[11,"deref_mut","","",31,[[["self"]],["s"]]],[11,"deref_mut","","",34,[[["self"]],["vec"]]],[11,"deref_mut","","",42,[[["self"]],["vec"]]],[11,"deref_mut","","",35,[[["self"]],["vec"]]],[11,"deref_mut","","",38,[[["self"]],["vec"]]],[11,"deref_mut","","",39,[[["self"]],["vec"]]],[11,"deref_mut","","",37,[[["self"]],["u64"]]],[11,"deref_mut","","",40,[[["self"]],["contentrangespec"]]],[11,"deref_mut","","",41,[[["self"]],["mime"]]],[11,"deref_mut","","",43,[[["self"]],["httpdate"]]],[11,"deref_mut","","",44,[[["self"]],["entitytag"]]],[11,"deref_mut","","",45,[[["self"]],["httpdate"]]],[11,"deref_mut","","",46,[[["self"]],["string"]]],[11,"deref_mut","","",48,[[["self"]],["httpdate"]]],[11,"deref_mut","","",49,[[["self"]],["httpdate"]]],[11,"deref_mut","","",50,[[["self"]],["httpdate"]]],[11,"deref_mut","","",51,[[["self"]],["string"]]],[11,"deref_mut","","",53,[[["self"]],["vec"]]],[11,"deref_mut","","",54,[[["self"]],["vec"]]],[11,"deref_mut","","",55,[[["self"]],["string"]]],[11,"deref_mut","","",56,[[["self"]],["string"]]],[11,"deref_mut","","",57,[[["self"]],["vec"]]],[11,"deref_mut","","",59,[[["self"]],["vec"]]],[11,"deref_mut","","",60,[[["self"]],["vec"]]],[11,"deref_mut","","",62,[[["self"]],["string"]]],[11,"hash","hyper::method","",14,N],[11,"hash","hyper::status","",119,N],[11,"hash","hyper::version","",122,N],[11,"from_iter","hyper::header","",92,[[["i"]],["headers"]]],[11,"read","hyper::client::pool","",5,N],[11,"read","hyper::client::response","",7,N],[11,"read","hyper::client","",1,N],[11,"read","hyper::http::h1","",98,N],[11,"read","","",96,N],[11,"read","hyper::net","",104,N],[11,"read","","",105,N],[11,"read","hyper::server::request","",115,N],[11,"write","hyper::client::pool","",5,N],[11,"flush","","",5,[[["self"]],["result"]]],[11,"write","hyper::client::request","",6,N],[11,"flush","","",6,[[["self"]],["result"]]],[11,"write","hyper::http::h1","",98,N],[11,"flush","","",98,[[["self"]],["result"]]],[11,"write","","",97,N],[11,"flush","","",97,[[["self"]],["result"]]],[11,"write","hyper::net","",104,N],[11,"flush","","",104,[[["self"]],["result"]]],[11,"write","","",105,N],[11,"flush","","",105,[[["self"]],["result"]]],[11,"write","hyper::server::response","",116,N],[11,"flush","","",116,[[["self"]],["result"]]],[11,"description","hyper::error","",13,[[["self"]],["str"]]],[11,"cause","","",13,[[["self"]],["option",["stderror"]]]],[11,"from_raw_fd","hyper::net","",111,[[["rawfd"]],["httplistener"]]],[11,"from_raw_fd","","",104,[[["rawfd"]],["httpstream"]]],[11,"as_raw_fd","","",111,[[["self"]],["rawfd"]]],[11,"as_raw_fd","","",104,[[["self"]],["rawfd"]]],[11,"contains","hyper::header::parsing","",131,[[["self"],["u8"]],["bool"]]],[11,"parse","hyper","Parse an absolute URL from a string.",128,[[["str"]],["result",["url","parseerror"]]]],[11,"parse_with_params","","Parse an absolute URL from a string and add params to its…",128,[[["str"],["i"]],["result",["url","parseerror"]]]],[11,"join","","Parse a string as an URL, with this URL as the base URL.",128,[[["self"],["str"]],["result",["url","parseerror"]]]],[11,"options","","Return a default `ParseOptions` that can fully configure…",128,[[],["parseoptions"]]],[11,"as_str","","Return the serialization of this URL.",128,[[["self"]],["str"]]],[11,"into_string","","Return the serialization of this URL.",128,[[["self"]],["string"]]],[11,"origin","","Return the origin of this URL…",128,[[["self"]],["origin"]]],[11,"scheme","","Return the scheme of this URL, lower-cased, as an ASCII…",128,[[["self"]],["str"]]],[11,"has_authority","","Return whether the URL has an 'authority', which can…",128,[[["self"]],["bool"]]],[11,"cannot_be_a_base","","Return whether this URL is a cannot-be-a-base URL, meaning…",128,[[["self"]],["bool"]]],[11,"username","","Return the username for this URL (typically the empty…",128,[[["self"]],["str"]]],[11,"password","","Return the password for this URL, if any, as a…",128,[[["self"]],["option",["str"]]]],[11,"has_host","","Equivalent to `url.host().is_some()`.",128,[[["self"]],["bool"]]],[11,"host_str","","Return the string representation of the host (domain or IP…",128,[[["self"]],["option",["str"]]]],[11,"host","","Return the parsed representation of the host for this URL.…",128,[[["self"]],["option",["host"]]]],[11,"domain","","If this URL has a host and it is a domain name (not an IP…",128,[[["self"]],["option",["str"]]]],[11,"port","","Return the port number for this URL, if any.",128,[[["self"]],["option",["u16"]]]],[11,"port_or_known_default","","Return the port number for this URL, or the default port…",128,[[["self"]],["option",["u16"]]]],[11,"with_default_port","","If the URL has a host, return something that implements…",128,[[["self"],["f"]],["result",["hostandport","error"]]]],[11,"path","","Return the path for this URL, as a percent-encoded ASCII…",128,[[["self"]],["str"]]],[11,"path_segments","","Unless this URL is cannot-be-a-base, return an iterator of…",128,[[["self"]],["option",["split"]]]],[11,"query","","Return this URL’s query string, if any, as a…",128,[[["self"]],["option",["str"]]]],[11,"query_pairs","","Parse the URL’s query string, if any, as…",128,[[["self"]],["parse"]]],[11,"fragment","","Return this URL’s fragment identifier, if any.",128,[[["self"]],["option",["str"]]]],[11,"set_fragment","","Change this URL’s fragment identifier.",128,N],[11,"set_query","","Change this URL’s query string.",128,N],[11,"query_pairs_mut","","Manipulate this URL’s query string, viewed as a sequence…",128,[[["self"]],["serializer",["urlquery"]]]],[11,"set_path","","Change this URL’s path.",128,N],[11,"path_segments_mut","","Return an object with methods to manipulate this URL’s…",128,[[["self"]],["result",["pathsegmentsmut"]]]],[11,"set_port","","Change this URL’s port number.",128,[[["self"],["option",["u16"]]],["result"]]],[11,"set_host","","Change this URL’s host.",128,[[["self"],["option",["str"]]],["result",["parseerror"]]]],[11,"set_ip_host","","Change this URL’s host to the given IP address.",128,[[["self"],["ipaddr"]],["result"]]],[11,"set_password","","Change this URL’s password.",128,[[["self"],["option",["str"]]],["result"]]],[11,"set_username","","Change this URL’s username.",128,[[["self"],["str"]],["result"]]],[11,"set_scheme","","Change this URL’s scheme.",128,[[["self"],["str"]],["result"]]],[11,"from_file_path","","Convert a file name as `std::path::Path` into an URL in…",128,[[["p"]],["result",["url"]]]],[11,"from_directory_path","","Convert a directory name as `std::path::Path` into an URL…",128,[[["p"]],["result",["url"]]]],[11,"to_file_path","","Assuming the URL is in the `file` scheme or similar,…",128,[[["self"]],["result",["pathbuf"]]]],[11,"matches","","Matches language tags. The first language acts as a…",0,[[["self"],["languagetag"]],["bool"]]],[11,"is_language_range","","Checks if it is a language range, meaning that there are…",0,[[["self"]],["bool"]]],[11,"canonicalize","","Returns the canonical version of the language tag.",0,[[["self"]],["languagetag"]]],[11,"get_param","hyper::mime","",123,[[["self"],["a"]],["option",["value"]]]],[11,"as_str","","",124,[[["self"]],["str"]]],[11,"as_str","","",125,[[["self"]],["str"]]],[11,"as_str","","",126,[[["self"]],["str"]]],[11,"as_str","","",127,[[["self"]],["str"]]]],"paths":[[3,"LanguageTag"],[4,"Body"],[4,"RedirectPolicy"],[3,"Config"],[3,"Pool"],[3,"PooledStream"],[3,"Request"],[3,"Response"],[8,"IntoUrl"],[3,"Client"],[3,"RequestBuilder"],[3,"ProxyConfig"],[4,"ParseError"],[4,"Error"],[4,"Method"],[3,"EntityTag"],[3,"HttpDate"],[3,"Quality"],[3,"QualityItem"],[3,"Accept"],[3,"AccessControlAllowHeaders"],[3,"AccessControlAllowMethods"],[3,"AccessControlExposeHeaders"],[3,"AccessControlMaxAge"],[3,"AccessControlRequestHeaders"],[3,"AccessControlRequestMethod"],[3,"AcceptCharset"],[3,"AcceptEncoding"],[3,"AcceptLanguage"],[3,"AcceptRanges"],[3,"Allow"],[3,"Authorization"],[3,"Basic"],[3,"Bearer"],[3,"CacheControl"],[3,"Connection"],[3,"ContentDisposition"],[3,"ContentLength"],[3,"ContentEncoding"],[3,"ContentLanguage"],[3,"ContentRange"],[3,"ContentType"],[3,"Cookie"],[3,"Date"],[3,"ETag"],[3,"Expires"],[3,"From"],[3,"Host"],[3,"IfModifiedSince"],[3,"IfUnmodifiedSince"],[3,"LastModified"],[3,"Location"],[3,"Origin"],[3,"Prefer"],[3,"PreferenceApplied"],[3,"Referer"],[3,"Server"],[3,"SetCookie"],[3,"StrictTransportSecurity"],[3,"TransferEncoding"],[3,"Upgrade"],[3,"Protocol"],[3,"UserAgent"],[3,"HeaderFormatter"],[4,"Charset"],[4,"Encoding"],[4,"AccessControlAllowOrigin"],[4,"RangeUnit"],[4,"CacheDirective"],[4,"ConnectionOption"],[4,"DispositionType"],[4,"DispositionParam"],[4,"ContentRangeSpec"],[4,"Expect"],[4,"IfMatch"],[4,"IfNoneMatch"],[4,"IfRange"],[4,"Pragma"],[4,"Preference"],[4,"Range"],[4,"ByteRangeSpec"],[4,"ReferrerPolicy"],[4,"ProtocolName"],[4,"Vary"],[4,"RelationType"],[4,"MediaDesc"],[3,"Link"],[3,"LinkValue"],[3,"ExtendedValue"],[8,"Scheme"],[8,"Header"],[8,"HeaderFormat"],[3,"Headers"],[3,"HeaderView"],[3,"RawStatus"],[3,"Incoming"],[4,"HttpReader"],[4,"HttpWriter"],[3,"Http11Message"],[3,"Http11Protocol"],[3,"RequestHead"],[3,"ResponseHead"],[8,"Protocol"],[8,"HttpMessage"],[3,"HttpStream"],[4,"HttpsStream"],[8,"NetworkListener"],[8,"NetworkStream"],[8,"NetworkConnector"],[8,"SslClient"],[8,"SslServer"],[3,"HttpListener"],[3,"HttpsListener"],[3,"HttpsConnector"],[3,"Listening"],[3,"Request"],[3,"Response"],[8,"Handler"],[3,"Server"],[4,"StatusCode"],[4,"StatusClass"],[4,"RequestUri"],[4,"HttpVersion"],[3,"Mime"],[4,"TopLevel"],[4,"SubLevel"],[4,"Attr"],[4,"Value"],[3,"Url"],[3,"AccessControlAllowCredentials"],[3,"HeadersItems"],[3,"HTTP_VALUE"],[3,"EndError"],[3,"NetworkConnections"],[3,"HttpConnector"],[4,"Fresh"],[4,"Streaming"]]};
searchIndex["idna"]={"doc":"This Rust crate implements IDNA per the WHATWG URL Standard.","items":[[5,"domain_to_ascii","idna","The domain to ASCII algorithm.",N,[[["str"]],["result",["string","errors"]]]],[5,"domain_to_unicode","","The domain to Unicode algorithm.",N,N],[0,"punycode","","Punycode (RFC 3492) implementation.",N,N],[5,"decode_to_string","idna::punycode","Convert Punycode to an Unicode `String`.",N,[[["str"]],["option",["string"]]]],[5,"decode","","Convert Punycode to Unicode.",N,[[["str"]],["option",["vec"]]]],[5,"encode_str","","Convert an Unicode `str` to Punycode.",N,[[["str"]],["option",["string"]]]],[5,"encode","","Convert Unicode to Punycode.",N,N],[0,"uts46","idna","Unicode IDNA Compatibility Processing (Unicode Technical…",N,N],[3,"Flags","idna::uts46","",N,N],[12,"use_std3_ascii_rules","","",0,N],[12,"transitional_processing","","",0,N],[12,"verify_dns_length","","",0,N],[3,"Errors","","Errors recorded during UTS #46 processing.",N,N],[5,"to_ascii","","http://www.unicode.org/reports/tr46/#ToASCII",N,[[["str"],["flags"]],["result",["string","errors"]]]],[5,"to_unicode","","http://www.unicode.org/reports/tr46/#ToUnicode",N,N],[7,"PUNYCODE_PREFIX","","",N,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["flags"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]]],"paths":[[3,"Flags"],[3,"Errors"]]};
searchIndex["indexmap"]={"doc":"[`IndexMap`] is a hash table where the iteration order of…","items":[[0,"set","indexmap","A hash set implemented using `IndexMap`",N,N],[3,"IndexSet","indexmap::set","A hash set where the iteration order of the values is…",N,N],[3,"IntoIter","","",N,N],[3,"Iter","","",N,N],[3,"Drain","","",N,N],[3,"Difference","","",N,N],[3,"Intersection","","",N,N],[3,"SymmetricDifference","","",N,N],[3,"Union","","",N,N],[6,"OrderSet","","Old name; use `IndexSet` instead.",N,N],[11,"new","","Create a new set. (Does not allocate.)",0,[[],["self"]]],[11,"with_capacity","","Create a new set with capacity for `n` elements. (Does not…",0,[[["usize"]],["self"]]],[11,"with_capacity_and_hasher","","Create a new set with capacity for `n` elements. (Does not…",0,[[["usize"],["s"]],["self"]]],[11,"len","","Return the number of elements in the set.",0,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the set contains no elements.",0,[[["self"]],["bool"]]],[11,"with_hasher","","Create a new set with `hash_builder`",0,[[["s"]],["self"]]],[11,"hasher","","Return a reference to the set's `BuildHasher`.",0,[[["self"]],["s"]]],[11,"capacity","","Computes in O(1) time.",0,[[["self"]],["usize"]]],[11,"clear","","Remove all elements in the set, while preserving its…",0,[[["self"]]]],[11,"reserve","","FIXME Not implemented fully yet",0,[[["self"],["usize"]]]],[11,"insert","","Insert the value into the set.",0,[[["self"],["t"]],["bool"]]],[11,"iter","","Return an iterator over the values of the set, in their…",0,[[["self"]],["iter"]]],[11,"difference","","Return an iterator over the values that are in `self` but…",0,[[["self"],["indexset"]],["difference"]]],[11,"symmetric_difference","","Return an iterator over the values that are in `self` or…",0,[[["self"],["indexset"]],["symmetricdifference"]]],[11,"intersection","","Return an iterator over the values that are in both `self`…",0,[[["self"],["indexset"]],["intersection"]]],[11,"union","","Return an iterator over all values that are in `self` or…",0,[[["self"],["indexset"]],["union"]]],[11,"contains","","Return `true` if an equivalent to `value` exists in the set.",0,[[["self"],["q"]],["bool"]]],[11,"get","","Return a reference to the value stored in the set, if it…",0,[[["self"],["q"]],["option"]]],[11,"get_full","","Return item index and value",0,[[["self"],["q"]],["option"]]],[11,"replace","","Adds a value to the set, replacing the existing value, if…",0,[[["self"],["t"]],["option"]]],[11,"remove","","FIXME Same as .swap_remove",0,[[["self"],["q"]],["bool"]]],[11,"swap_remove","","Remove the value from the set, and return `true` if it was…",0,[[["self"],["q"]],["bool"]]],[11,"take","","FIXME Same as .swap_take",0,[[["self"],["q"]],["option"]]],[11,"swap_take","","Removes and returns the value in the set, if any, that is…",0,[[["self"],["q"]],["option"]]],[11,"swap_remove_full","","Remove the value from the set return it and the index it…",0,[[["self"],["q"]],["option"]]],[11,"pop","","Remove the last value",0,[[["self"]],["option"]]],[11,"retain","","Scan through each value in the set and keep those where…",0,[[["self"],["f"]]]],[11,"sort","","Sort the set’s values by their default ordering.",0,[[["self"]]]],[11,"sort_by","","Sort the set’s values in place using the comparison…",0,[[["self"],["f"]]]],[11,"sorted_by","","Sort the values of the set and return a by value iterator…",0,[[["self"],["f"]],["intoiter"]]],[11,"drain","","Clears the `IndexSet`, returning all values as a drain…",0,[[["self"],["rangefull"]],["drain"]]],[11,"get_index","","Get a value by index",0,[[["self"],["usize"]],["option"]]],[11,"swap_remove_index","","Remove the key-value pair by index",0,[[["self"],["usize"]],["option"]]],[11,"is_disjoint","","Returns `true` if `self` has no elements in common with…",0,[[["self"],["indexset"]],["bool"]]],[11,"is_subset","","Returns `true` if all elements of `self` are contained in…",0,[[["self"],["indexset"]],["bool"]]],[11,"is_superset","","Returns `true` if all elements of `other` are contained in…",0,[[["self"],["indexset"]],["bool"]]],[0,"map","indexmap","`IndexMap` is a hash table where the iteration order of…",N,N],[3,"IndexMap","indexmap::map","A hash table where the iteration order of the key-value…",N,N],[3,"OccupiedEntry","","",N,N],[3,"VacantEntry","","",N,N],[3,"Keys","","",N,N],[3,"Values","","",N,N],[3,"ValuesMut","","",N,N],[3,"Iter","","",N,N],[3,"IterMut","","",N,N],[3,"IntoIter","","",N,N],[3,"Drain","","",N,N],[4,"Entry","","Entry for an existing key-value pair or a vacant location…",N,N],[13,"Occupied","","Existing slot with equivalent key.",1,N],[13,"Vacant","","Vacant slot (no equivalent key in the map).",1,N],[6,"OrderMap","","Old name; use `IndexMap` instead.",N,N],[8,"MutableKeys","","Opt-in mutable access to keys.",N,N],[16,"Key","","",2,N],[16,"Value","","",2,N],[10,"get_full_mut2","","Return item index, mutable reference to key and value",2,[[["self"],["q"]],["option"]]],[10,"retain2","","Scan through each key-value pair in the map and keep those…",2,[[["self"],["f"]]]],[10,"__private_marker","","This method is not useful in itself – it is there to…",2,[[["self"]],["privatemarker"]]],[11,"new","","Create a new map. (Does not allocate.)",3,[[],["self"]]],[11,"with_capacity","","Create a new map with capacity for `n` key-value pairs.…",3,[[["usize"]],["self"]]],[11,"with_capacity_and_hasher","","Create a new map with capacity for `n` key-value pairs.…",3,[[["usize"],["s"]],["self"]]],[11,"len","","Return the number of key-value pairs in the map.",3,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the map contains no elements.",3,[[["self"]],["bool"]]],[11,"with_hasher","","Create a new map with `hash_builder`",3,[[["s"]],["self"]]],[11,"hasher","","Return a reference to the map's `BuildHasher`.",3,[[["self"]],["s"]]],[11,"capacity","","Computes in O(1) time.",3,[[["self"]],["usize"]]],[11,"or_insert","","Computes in O(1) time (amortized average).",1,[[["self"],["v"]],["v"]]],[11,"or_insert_with","","Computes in O(1) time (amortized average).",1,[[["self"],["f"]],["v"]]],[11,"key","","",1,[[["self"]],["k"]]],[11,"index","","Return the index where the key-value pair exists or will…",1,[[["self"]],["usize"]]],[11,"key","","",4,[[["self"]],["k"]]],[11,"get","","",4,[[["self"]],["v"]]],[11,"get_mut","","",4,[[["self"]],["v"]]],[11,"index","","Return the index of the key-value pair",4,[[["self"]],["usize"]]],[11,"into_mut","","",4,[[["self"]],["v"]]],[11,"insert","","",4,[[["self"],["v"]],["v"]]],[11,"remove","","",4,[[["self"]],["v"]]],[11,"remove_entry","","Remove and return the key, value pair stored in the map…",4,N],[11,"key","","",5,[[["self"]],["k"]]],[11,"into_key","","",5,[[["self"]],["k"]]],[11,"index","","Return the index where the key-value pair will be inserted.",5,[[["self"]],["usize"]]],[11,"insert","","",5,[[["self"],["v"]],["v"]]],[11,"clear","","Remove all key-value pairs in the map, while preserving…",3,[[["self"]]]],[11,"reserve","","Reserve capacity for `additional` more key-value pairs.",3,[[["self"],["usize"]]]],[11,"insert","","Insert a key-value pair in the map.",3,[[["self"],["k"],["v"]],["option"]]],[11,"entry","","Get the given key’s corresponding entry in the map for…",3,[[["self"],["k"]],["entry"]]],[11,"iter","","Return an iterator over the key-value pairs of the map, in…",3,[[["self"]],["iter"]]],[11,"iter_mut","","Return an iterator over the key-value pairs of the map, in…",3,[[["self"]],["itermut"]]],[11,"keys","","Return an iterator over the keys of the map, in their order",3,[[["self"]],["keys"]]],[11,"values","","Return an iterator over the values of the map, in their…",3,[[["self"]],["values"]]],[11,"values_mut","","Return an iterator over mutable references to the the…",3,[[["self"]],["valuesmut"]]],[11,"contains_key","","Return `true` if an equivalent to `key` exists in the map.",3,[[["self"],["q"]],["bool"]]],[11,"get","","Return a reference to the value stored for `key`, if it is…",3,[[["self"],["q"]],["option"]]],[11,"get_full","","Return item index, key and value",3,[[["self"],["q"]],["option"]]],[11,"get_mut","","",3,[[["self"],["q"]],["option"]]],[11,"get_full_mut","","",3,[[["self"],["q"]],["option"]]],[11,"remove","","NOTE: Same as .swap_remove",3,[[["self"],["q"]],["option"]]],[11,"swap_remove","","Remove the key-value pair equivalent to `key` and return…",3,[[["self"],["q"]],["option"]]],[11,"swap_remove_full","","Remove the key-value pair equivalent to `key` and return…",3,[[["self"],["q"]],["option"]]],[11,"pop","","Remove the last key-value pair",3,[[["self"]],["option"]]],[11,"retain","","Scan through each key-value pair in the map and keep those…",3,[[["self"],["f"]]]],[11,"sort_keys","","Sort the map’s key-value pairs by the default ordering of…",3,[[["self"]]]],[11,"sort_by","","Sort the map’s key-value pairs in place using the…",3,[[["self"],["f"]]]],[11,"sorted_by","","Sort the key-value pairs of the map and return a by value…",3,[[["self"],["f"]],["intoiter"]]],[11,"drain","","Clears the `IndexMap`, returning all key-value pairs as a…",3,[[["self"],["rangefull"]],["drain"]]],[11,"get_index","","Get a key-value pair by index",3,[[["self"],["usize"]],["option"]]],[11,"get_index_mut","","Get a key-value pair by index",3,[[["self"],["usize"]],["option"]]],[11,"swap_remove_index","","Remove the key-value pair by index",3,[[["self"],["usize"]],["option"]]],[8,"Equivalent","indexmap","Key equivalence trait.",N,N],[10,"equivalent","","Compare self to `key` and return `true` if they are equal.",6,[[["self"],["k"]],["bool"]]],[14,"indexmap","","Create an `IndexMap` from a list of key-value pairs",N,N],[14,"ordermap","","Old name; use `indexmap!{}` instead.",N,N],[14,"indexset","","Create an `IndexSet` from a list of values",N,N],[14,"orderset","","Old name; use `indexset!{}` instead.",N,N],[11,"from","indexmap::set","",0,[[["t"]],["t"]]],[11,"into_iter","","",0,[[["self"]],["i"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into_iter","","",7,[[["self"]],["i"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into_iter","","",8,[[["self"]],["i"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into_iter","","",9,[[["self"]],["i"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into_iter","","",10,[[["self"]],["i"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into_iter","","",11,[[["self"]],["i"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into_iter","","",12,[[["self"]],["i"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into_iter","","",13,[[["self"]],["i"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","indexmap::map","",3,[[["t"]],["t"]]],[11,"into_iter","","",3,[[["self"]],["i"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into_iter","","",14,[[["self"]],["i"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into_iter","","",15,[[["self"]],["i"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into_iter","","",16,[[["self"]],["i"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into_iter","","",17,[[["self"]],["i"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into_iter","","",18,[[["self"]],["i"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into_iter","","",19,[[["self"]],["i"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into_iter","","",20,[[["self"]],["i"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"get_full_mut2","","",3,[[["self"],["q"]],["option"]]],[11,"retain2","","",3,[[["self"],["f"]]]],[11,"__private_marker","","",3,[[["self"]],["privatemarker"]]],[11,"next_back","indexmap::set","",7,[[["self"]],["option"]]],[11,"next_back","","",8,[[["self"]],["option"]]],[11,"next_back","","",9,[[["self"]],["option"]]],[11,"next_back","","",10,[[["self"]],["option"]]],[11,"next_back","","",11,[[["self"]],["option"]]],[11,"next_back","","",12,[[["self"]],["option"]]],[11,"next_back","","",13,[[["self"]],["option"]]],[11,"next_back","indexmap::map","",14,[[["self"]],["option"]]],[11,"next_back","","",15,[[["self"]],["option"]]],[11,"next_back","","",16,[[["self"]],["option"]]],[11,"next_back","","",17,[[["self"]],["option"]]],[11,"next_back","","",18,[[["self"]],["option"]]],[11,"next_back","","",19,[[["self"]],["option"]]],[11,"next_back","","",20,[[["self"]],["option"]]],[11,"eq","indexmap::set","",0,[[["self"],["indexset"]],["bool"]]],[11,"eq","indexmap::map","",3,[[["self"],["indexmap"]],["bool"]]],[11,"clone","indexmap::set","",0,[[["self"]],["indexset"]]],[11,"clone","indexmap::map","",3,[[["self"]],["indexmap"]]],[11,"into_iter","indexmap::set","",0,N],[11,"into_iter","indexmap::map","",3,N],[11,"extend","indexmap::set","",0,[[["self"],["i"]]]],[11,"extend","","",0,[[["self"],["i"]]]],[11,"extend","indexmap::map","Extend the map with all key-value pairs in the iterable.",3,[[["self"],["i"]]]],[11,"extend","","Extend the map with all key-value pairs in the iterable.",3,[[["self"],["i"]]]],[11,"len","indexmap::set","",7,[[["self"]],["usize"]]],[11,"len","","",8,[[["self"]],["usize"]]],[11,"len","indexmap::map","",14,[[["self"]],["usize"]]],[11,"len","","",15,[[["self"]],["usize"]]],[11,"len","","",16,[[["self"]],["usize"]]],[11,"len","","",17,[[["self"]],["usize"]]],[11,"len","","",18,[[["self"]],["usize"]]],[11,"len","","",19,[[["self"]],["usize"]]],[11,"next","indexmap::set","",7,[[["self"]],["option"]]],[11,"size_hint","","",7,N],[11,"count","","",7,[[["self"]],["usize"]]],[11,"nth","","",7,[[["self"],["usize"]],["option"]]],[11,"last","","",7,[[["self"]],["option"]]],[11,"collect","","",7,[[["self"]],["c"]]],[11,"next","","",8,[[["self"]],["option"]]],[11,"size_hint","","",8,N],[11,"count","","",8,[[["self"]],["usize"]]],[11,"nth","","",8,[[["self"],["usize"]],["option"]]],[11,"last","","",8,[[["self"]],["option"]]],[11,"collect","","",8,[[["self"]],["c"]]],[11,"next","","",9,[[["self"]],["option"]]],[11,"size_hint","","",9,N],[11,"count","","",9,[[["self"]],["usize"]]],[11,"nth","","",9,[[["self"],["usize"]],["option"]]],[11,"last","","",9,[[["self"]],["option"]]],[11,"collect","","",9,[[["self"]],["c"]]],[11,"next","","",10,[[["self"]],["option"]]],[11,"size_hint","","",10,N],[11,"next","","",11,[[["self"]],["option"]]],[11,"size_hint","","",11,N],[11,"next","","",12,[[["self"]],["option"]]],[11,"size_hint","","",12,N],[11,"fold","","",12,[[["self"],["b"],["f"]],["b"]]],[11,"next","","",13,[[["self"]],["option"]]],[11,"size_hint","","",13,N],[11,"fold","","",13,[[["self"],["b"],["f"]],["b"]]],[11,"next","indexmap::map","",14,[[["self"]],["option"]]],[11,"size_hint","","",14,N],[11,"count","","",14,[[["self"]],["usize"]]],[11,"nth","","",14,[[["self"],["usize"]],["option"]]],[11,"last","","",14,[[["self"]],["option"]]],[11,"collect","","",14,[[["self"]],["c"]]],[11,"next","","",15,[[["self"]],["option"]]],[11,"size_hint","","",15,N],[11,"count","","",15,[[["self"]],["usize"]]],[11,"nth","","",15,[[["self"],["usize"]],["option"]]],[11,"last","","",15,[[["self"]],["option"]]],[11,"collect","","",15,[[["self"]],["c"]]],[11,"next","","",16,[[["self"]],["option"]]],[11,"size_hint","","",16,N],[11,"count","","",16,[[["self"]],["usize"]]],[11,"nth","","",16,[[["self"],["usize"]],["option"]]],[11,"last","","",16,[[["self"]],["option"]]],[11,"collect","","",16,[[["self"]],["c"]]],[11,"next","","",17,[[["self"]],["option"]]],[11,"size_hint","","",17,N],[11,"count","","",17,[[["self"]],["usize"]]],[11,"nth","","",17,[[["self"],["usize"]],["option"]]],[11,"last","","",17,[[["self"]],["option"]]],[11,"collect","","",17,[[["self"]],["c"]]],[11,"next","","",18,[[["self"]],["option"]]],[11,"size_hint","","",18,N],[11,"count","","",18,[[["self"]],["usize"]]],[11,"nth","","",18,[[["self"],["usize"]],["option"]]],[11,"last","","",18,[[["self"]],["option"]]],[11,"collect","","",18,[[["self"]],["c"]]],[11,"next","","",19,[[["self"]],["option"]]],[11,"size_hint","","",19,N],[11,"count","","",19,[[["self"]],["usize"]]],[11,"nth","","",19,[[["self"],["usize"]],["option"]]],[11,"last","","",19,[[["self"]],["option"]]],[11,"collect","","",19,[[["self"]],["c"]]],[11,"next","","",20,[[["self"]],["option"]]],[11,"size_hint","","",20,N],[11,"count","","",20,[[["self"]],["usize"]]],[11,"nth","","",20,[[["self"],["usize"]],["option"]]],[11,"last","","",20,[[["self"]],["option"]]],[11,"collect","","",20,[[["self"]],["c"]]],[11,"default","indexmap::set","Return an empty `IndexSet`",0,[[],["self"]]],[11,"default","indexmap::map","Return an empty `IndexMap`",3,[[],["self"]]],[11,"fmt","indexmap::set","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","indexmap::map","",3,[[["self"],["formatter"]],["result"]]],[11,"index","","Panics if `key` is not present in the map.",3,[[["self"],["q"]],["v"]]],[11,"index_mut","","Panics if `key` is not present in the map.",3,[[["self"],["q"]],["v"]]],[11,"from_iter","indexmap::set","",0,[[["i"]],["self"]]],[11,"from_iter","indexmap::map","Create an `IndexMap` from the sequence of key-value pairs…",3,[[["i"]],["self"]]]],"paths":[[3,"IndexSet"],[4,"Entry"],[8,"MutableKeys"],[3,"IndexMap"],[3,"OccupiedEntry"],[3,"VacantEntry"],[8,"Equivalent"],[3,"IntoIter"],[3,"Iter"],[3,"Drain"],[3,"Difference"],[3,"Intersection"],[3,"SymmetricDifference"],[3,"Union"],[3,"Keys"],[3,"Values"],[3,"ValuesMut"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"]]};
searchIndex["inotify"]={"doc":"Idiomatic inotify wrapper for the Rust programming language","items":[[3,"Event","inotify","An inotify event",N,N],[12,"wd","","Identifies the watch this event originates from",0,N],[12,"mask","","Indicates what kind of event this is",0,N],[12,"cookie","","Connects related events to each other",0,N],[12,"name","","The name of the file the event originates from",0,N],[3,"EventMask","","Indicates the type of an event",N,N],[3,"Events","","Iterator over inotify events",N,N],[3,"Inotify","","Idiomatic Rust wrapper around Linux's inotify API",N,N],[3,"WatchDescriptor","","Represents a watch on an inode",N,N],[3,"WatchMask","","Describes a file system watch",N,N],[3,"EventStream","","Stream of inotify events",N,N],[18,"ACCESS","","File was accessed",1,N],[18,"ATTRIB","","Metadata (permissions, timestamps, ...) changed",1,N],[18,"CLOSE_WRITE","","File opened for writing was closed",1,N],[18,"CLOSE_NOWRITE","","File or directory not opened for writing was closed",1,N],[18,"CREATE","","File/directory created in watched directory",1,N],[18,"DELETE","","File/directory deleted from watched directory",1,N],[18,"DELETE_SELF","","Watched file/directory was deleted",1,N],[18,"MODIFY","","File was modified",1,N],[18,"MOVE_SELF","","Watched file/directory was moved",1,N],[18,"MOVED_FROM","","File was renamed/moved; watched directory contained old name",1,N],[18,"MOVED_TO","","File was renamed/moved; watched directory contains new name",1,N],[18,"OPEN","","File or directory was opened",1,N],[18,"IGNORED","","Watch was removed",1,N],[18,"ISDIR","","Event related to a directory",1,N],[18,"Q_OVERFLOW","","Event queue overflowed",1,N],[18,"UNMOUNT","","File system containing watched object was unmounted. File…",1,N],[11,"empty","","Returns an empty set of flags.",1,[[],["eventmask"]]],[11,"all","","Returns the set containing all flags.",1,[[],["eventmask"]]],[11,"bits","","Returns the raw value of the flags currently stored.",1,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",1,[[["u32"]],["option",["eventmask"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",1,[[["u32"]],["eventmask"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",1,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",1,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",1,[[["self"],["eventmask"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",1,[[["self"],["eventmask"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",1,[[["self"],["eventmask"]]]],[11,"remove","","Removes the specified flags in-place.",1,[[["self"],["eventmask"]]]],[11,"toggle","","Toggles the specified flags in-place.",1,[[["self"],["eventmask"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",1,[[["self"],["eventmask"],["bool"]]]],[11,"init","","Creates an [`Inotify`] instance",2,[[],["result",["inotify"]]]],[11,"add_watch","","Adds or updates a watch for the given path",2,[[["self"],["p"],["watchmask"]],["result",["watchdescriptor"]]]],[11,"rm_watch","","Stops watching a file",2,[[["self"],["watchdescriptor"]],["result"]]],[11,"read_events_blocking","","Waits until events are available, then returns them",2,N],[11,"read_events","","Returns any available events",2,N],[11,"event_stream","","Create a stream which collects events",2,N],[11,"event_stream_with_handle","","Create a stream which collects events, associated with the…",2,N],[11,"close","","Closes the inotify instance",2,[[["self"]],["result"]]],[18,"ACCESS","","File was accessed",3,N],[18,"ATTRIB","","Metadata (permissions, timestamps, ...) changed",3,N],[18,"CLOSE_WRITE","","File opened for writing was closed",3,N],[18,"CLOSE_NOWRITE","","File or directory not opened for writing was closed",3,N],[18,"CREATE","","File/directory created in watched directory",3,N],[18,"DELETE","","File/directory deleted from watched directory",3,N],[18,"DELETE_SELF","","Watched file/directory was deleted",3,N],[18,"MODIFY","","File was modified",3,N],[18,"MOVE_SELF","","Watched file/directory was moved",3,N],[18,"MOVED_FROM","","File was renamed/moved; watched directory contained old name",3,N],[18,"MOVED_TO","","File was renamed/moved; watched directory contains new name",3,N],[18,"OPEN","","File or directory was opened",3,N],[18,"ALL_EVENTS","","Watch for all events",3,N],[18,"MOVE","","Watch for all move events",3,N],[18,"CLOSE","","Watch for all close events",3,N],[18,"DONT_FOLLOW","","Don't dereference the path if it is a symbolic link",3,N],[18,"EXCL_UNLINK","","Filter events for directory entries that have been unlinked",3,N],[18,"MASK_ADD","","If a watch for the inode exists, amend it instead of…",3,N],[18,"ONESHOT","","Only receive one event, then remove the watch",3,N],[18,"ONLYDIR","","Only watch path, if it is a directory",3,N],[11,"empty","","Returns an empty set of flags.",3,[[],["watchmask"]]],[11,"all","","Returns the set containing all flags.",3,[[],["watchmask"]]],[11,"bits","","Returns the raw value of the flags currently stored.",3,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",3,[[["u32"]],["option",["watchmask"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",3,[[["u32"]],["watchmask"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",3,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",3,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",3,[[["self"],["watchmask"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",3,[[["self"],["watchmask"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",3,[[["self"],["watchmask"]]]],[11,"remove","","Removes the specified flags in-place.",3,[[["self"],["watchmask"]]]],[11,"toggle","","Toggles the specified flags in-place.",3,[[["self"],["watchmask"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",3,[[["self"],["watchmask"],["bool"]]]],[6,"EventOwned","","An owned version of `Event`",N,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into_iter","","",4,[[["self"]],["i"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"cmp","","",1,[[["self"],["eventmask"]],["ordering"]]],[11,"cmp","","",3,[[["self"],["watchmask"]],["ordering"]]],[11,"eq","","",1,[[["self"],["eventmask"]],["bool"]]],[11,"ne","","",1,[[["self"],["eventmask"]],["bool"]]],[11,"eq","","",3,[[["self"],["watchmask"]],["bool"]]],[11,"ne","","",3,[[["self"],["watchmask"]],["bool"]]],[11,"eq","","",5,[[["self"],["self"]],["bool"]]],[11,"clone","","",0,[[["self"]],["event"]]],[11,"clone","","",1,[[["self"]],["eventmask"]]],[11,"clone","","",3,[[["self"]],["watchmask"]]],[11,"clone","","",5,[[["self"]],["watchdescriptor"]]],[11,"extend","","",1,[[["self"],["t"]]]],[11,"extend","","",3,[[["self"],["t"]]]],[11,"partial_cmp","","",1,[[["self"],["eventmask"]],["option",["ordering"]]]],[11,"lt","","",1,[[["self"],["eventmask"]],["bool"]]],[11,"le","","",1,[[["self"],["eventmask"]],["bool"]]],[11,"gt","","",1,[[["self"],["eventmask"]],["bool"]]],[11,"ge","","",1,[[["self"],["eventmask"]],["bool"]]],[11,"partial_cmp","","",3,[[["self"],["watchmask"]],["option",["ordering"]]]],[11,"lt","","",3,[[["self"],["watchmask"]],["bool"]]],[11,"le","","",3,[[["self"],["watchmask"]],["bool"]]],[11,"gt","","",3,[[["self"],["watchmask"]],["bool"]]],[11,"ge","","",3,[[["self"],["watchmask"]],["bool"]]],[11,"next","","",4,[[["self"]],["option"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"sub","","Returns the set difference of the two sets of flags.",1,[[["self"],["eventmask"]],["eventmask"]]],[11,"sub","","Returns the set difference of the two sets of flags.",3,[[["self"],["watchmask"]],["watchmask"]]],[11,"sub_assign","","Disables all flags enabled in the set.",1,[[["self"],["eventmask"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",3,[[["self"],["watchmask"]]]],[11,"not","","Returns the complement of this set of flags.",1,[[["self"]],["eventmask"]]],[11,"not","","Returns the complement of this set of flags.",3,[[["self"]],["watchmask"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",1,[[["self"],["eventmask"]],["eventmask"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",3,[[["self"],["watchmask"]],["watchmask"]]],[11,"bitor","","Returns the union of the two sets of flags.",1,[[["self"],["eventmask"]],["eventmask"]]],[11,"bitor","","Returns the union of the two sets of flags.",3,[[["self"],["watchmask"]],["watchmask"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",1,[[["self"],["eventmask"]],["eventmask"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",3,[[["self"],["watchmask"]],["watchmask"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",1,[[["self"],["eventmask"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",3,[[["self"],["watchmask"]]]],[11,"bitor_assign","","Adds the set of flags.",1,[[["self"],["eventmask"]]]],[11,"bitor_assign","","Adds the set of flags.",3,[[["self"],["watchmask"]]]],[11,"bitxor_assign","","Toggles the set of flags.",1,[[["self"],["eventmask"]]]],[11,"bitxor_assign","","Toggles the set of flags.",3,[[["self"],["watchmask"]]]],[11,"hash","","",1,N],[11,"hash","","",3,N],[11,"hash","","",5,[[["self"],["h"]]]],[11,"from_iter","","",1,[[["t"]],["eventmask"]]],[11,"from_iter","","",3,[[["t"]],["watchmask"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"from_raw_fd","","",2,[[["rawfd"]],["self"]]],[11,"as_raw_fd","","",2,[[["self"]],["rawfd"]]],[11,"into_raw_fd","","",2,[[["self"]],["rawfd"]]],[11,"poll","","",6,[[["self"]],["poll",["option"]]]]],"paths":[[3,"Event"],[3,"EventMask"],[3,"Inotify"],[3,"WatchMask"],[3,"Events"],[3,"WatchDescriptor"],[3,"EventStream"]]};
searchIndex["inotify_sys"]={"doc":"inotify bindings for the Rust programming language","items":[[5,"close","inotify_sys","",N,[[["i32"]],["i32"]]],[5,"read","","",N,N],[3,"inotify_event","","Describes a file system event",N,N],[12,"wd","","Identifies the watch for which this event occurs",0,N],[12,"mask","","Describes the type file system event",0,N],[12,"cookie","","A number that connects related events",0,N],[12,"len","","The length of `name`",0,N],[5,"inotify_init","","Creates an inotify instance",N,N],[5,"inotify_init1","","Creates an inotify instance",N,N],[5,"inotify_add_watch","","Adds or updates an inotify watch",N,N],[5,"inotify_rm_watch","","Removes an inotify watch",N,N],[17,"IN_CLOEXEC","","Set the `FD_CLOEXEC` flag for an inotify instance",N,N],[17,"IN_NONBLOCK","","Set an inotify instance to non-blocking mode",N,N],[17,"IN_ACCESS","","Event: File was accessed",N,N],[17,"IN_MODIFY","","Event: File was modified",N,N],[17,"IN_ATTRIB","","Event: Metadata was changed",N,N],[17,"IN_CLOSE_WRITE","","Event: Writable file was closed",N,N],[17,"IN_CLOSE_NOWRITE","","Event: Non-writable file or directory was closed",N,N],[17,"IN_OPEN","","Event: File or directory was opened",N,N],[17,"IN_MOVED_FROM","","Event: File or directory was moved out of watched directory",N,N],[17,"IN_MOVED_TO","","Event: File or directory was moved into watched directory",N,N],[17,"IN_CREATE","","Event: File or directory was created in watched directory",N,N],[17,"IN_DELETE","","Event: File or directory in watched directory was deleted",N,N],[17,"IN_DELETE_SELF","","Event: Watched file or directory was deleted",N,N],[17,"IN_MOVE_SELF","","Event: Watched file or directory was moved",N,N],[17,"IN_MOVE","","Event: File or directory within watched directory was moved",N,N],[17,"IN_CLOSE","","Event: File was closed",N,N],[17,"IN_ALL_EVENTS","","Event: Any event occured",N,N],[17,"IN_ONLYDIR","","Only watch path, if it is a directory",N,N],[17,"IN_DONT_FOLLOW","","Don't dereference path, if it is a symbolic link",N,N],[17,"IN_EXCL_UNLINK","","Ignore events for children, that have been unlinked from…",N,N],[17,"IN_MASK_ADD","","Update existing watch mask, instead of replacing it",N,N],[17,"IN_ONESHOT","","Remove watch after one event",N,N],[17,"IN_ISDIR","","Indicates that the subject of an event is a directory",N,N],[17,"IN_UNMOUNT","","Indicates that file system containing a watched object has…",N,N],[17,"IN_Q_OVERFLOW","","Indicates that the event queue has overflowed",N,N],[17,"IN_IGNORED","","Indicates that a file system watch was removed",N,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["inotify_event"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]]],"paths":[[3,"inotify_event"]]};
searchIndex["inspect_ast"]={"doc":"","items":[[3,"CliCommand","inspect_ast","",N,N],[3,"AstInspector","","",N,N],[4,"CliError","","",N,N],[13,"InvalidRegex","","",0,N],[13,"OpenInput","","",0,N],[12,"path","inspect_ast::CliError","",0,N],[13,"Ascii","inspect_ast","",0,N],[12,"path","inspect_ast::CliError","",0,N],[4,"Messages","inspect_ast","",N,N],[13,"Matched","","",1,N],[12,"kind","inspect_ast::Messages","",1,N],[13,"MatchedExpr","inspect_ast","",1,N],[12,"typing","inspect_ast::Messages","",1,N],[11,"new","inspect_ast","",2,[[["clicommand"],["context"],["typeanalysis"]],["self"]]],[11,"run","","",2,[[["self"],["ast"]],["result",["error"]]]],[11,"recurse","","",2,[[["self"],["nodekind"]],["result",["error"]]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into_collection","","",3,[[["self"]],["smallvec"]]],[11,"mapped","","",3,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",3,[[["self"]],["result",["parseerr"]]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into_collection","","",2,[[["self"]],["smallvec"]]],[11,"mapped","","",2,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",2,[[["self"]],["result",["parseerr"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"as_fail","","",0,[[["self"]],["fail"]]],[11,"into_collection","","",0,[[["self"]],["smallvec"]]],[11,"mapped","","",0,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",0,[[["self"]],["result",["parseerr"]]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"as_fail","","",1,[[["self"]],["fail"]]],[11,"into_collection","","",1,[[["self"]],["smallvec"]]],[11,"mapped","","",1,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",1,[[["self"]],["result",["parseerr"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"cause","","",0,[[["self"]],["option",["fail"]]]],[11,"backtrace","","",0,[[["self"]],["option",["backtrace"]]]],[11,"cause","","",1,[[["self"]],["option",["fail"]]]],[11,"backtrace","","",1,[[["self"]],["option",["backtrace"]]]],[11,"clap","","",3,[[],["app"]]],[11,"from_clap","","",3,[[["argmatches"]],["self"]]]],"paths":[[4,"CliError"],[4,"Messages"],[3,"AstInspector"],[3,"CliCommand"]]};
searchIndex["integration_test_codegen"]={"doc":"A macro that generates a test case for each test available…","items":[[14,"gen_lexer_integration_tests","integration_test_codegen","",N,N],[14,"gen_parser_integration_tests","","",N,N],[14,"gen_assembly_integration_tests","","",N,N],[14,"gen_timeout_integration_tests","","",N,N],[14,"gen_optimized_timeout_integration_tests","","",N,N],[14,"gen_binary_integration_tests","","",N,N],[14,"gen_optimized_binary_integration_tests","","",N,N],[14,"gen_optimization_integration_tests","","",N,N],[14,"gen_ast_reference_integration_tests","","",N,N],[14,"gen_ast_idempotence_integration_tests","","",N,N],[14,"gen_semantic_integration_tests","","",N,N],[14,"gen_ast_inspector_tests","","",N,N],[14,"gen_lints_integration_tests","","",N,N]],"paths":[]};
searchIndex["interval"]={"doc":"This library proposes structures for interval arithmetic,…","items":[[0,"interval","interval","Closed and bounded generic interval.",N,N],[3,"Interval","interval::interval","Closed interval (endpoints included).",N,N],[8,"ToInterval","","",N,N],[10,"to_interval","","",0,[[["self"]],["interval"]]],[0,"interval_set","interval","Closed and bounded generic interval set.",N,N],[3,"IntervalSet","interval::interval_set","",N,N],[8,"ToIntervalSet","","",N,N],[10,"to_interval_set","","",1,[[["self"]],["intervalset"]]],[11,"iter","","",2,[[["self"]],["iter",["interval"]]]],[11,"iter_mut","","",2,[[["self"]],["itermut",["interval"]]]],[11,"interval_count","","",2,[[["self"]],["usize"]]],[0,"ops","interval","Interval and bound specific operations.",N,N],[8,"Hull","interval::ops","",N,N],[16,"Output","","",3,N],[10,"hull","","",3,N],[8,"Range","","",N,N],[10,"new","","",4,N],[8,"Whole","","",N,N],[10,"whole","","",5,[[],["self"]]],[8,"Width","","Limit of a bound for which the distance between…",N,N],[16,"Output","","",6,N],[10,"max_value","","",6,[[],["self"]]],[10,"min_value","","",6,[[],["self"]]],[10,"width","","The result might be infinite depending on the underlying…",6,N],[11,"from","interval::interval","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"strict_shrink_left","","",7,[[["self"],["b"]],["r"]]],[11,"strict_shrink_right","","",7,[[["self"],["b"]],["r"]]],[11,"singleton","","",7,N],[11,"is_singleton","","",7,[[["self"]],["bool"]]],[11,"is_empty","","",7,[[["self"]],["bool"]]],[11,"strict_entail","","",7,[[["self"],["r"]],["skleene"]]],[11,"from","interval::interval_set","",2,[[["t"]],["t"]]],[11,"into_iter","","",2,[[["self"]],["i"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"strict_shrink_left","","",2,[[["self"],["b"]],["r"]]],[11,"strict_shrink_right","","",2,[[["self"],["b"]],["r"]]],[11,"singleton","","",2,N],[11,"is_singleton","","",2,[[["self"]],["bool"]]],[11,"is_empty","","",2,[[["self"]],["bool"]]],[11,"strict_entail","","",2,[[["self"],["r"]],["skleene"]]],[11,"to_interval","interval::interval","",7,[[["self"]],["interval"]]],[11,"hull","","",7,[[["self"],["interval"]],["interval"]]],[11,"hull","","",7,[[["self"],["bound"]],["interval"]]],[11,"new","","",7,[[["bound"],["bound"]],["interval"]]],[11,"new","interval::interval_set","",2,[[["bound"],["bound"]],["intervalset"]]],[11,"whole","interval::interval","",7,[[],["interval"]]],[11,"whole","interval::interval_set","",2,[[],["intervalset"]]],[11,"eq","interval::interval","",7,[[["self"],["interval"]],["bool"]]],[11,"eq","interval::interval_set","",2,[[["self"],["intervalset"]],["bool"]]],[11,"clone","interval::interval","",7,[[["self"]],["interval"]]],[11,"clone","interval::interval_set","",2,[[["self"]],["intervalset"]]],[11,"into_iter","","",2,N],[11,"extend","","",2,[[["self"],["i"]]]],[11,"fmt","interval::interval","",7,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","interval::interval_set","",2,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","interval::interval","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","interval::interval_set","",2,[[["self"],["formatter"]],["result"]]],[11,"add","interval::interval","",7,[[["self"],["interval"]],["interval"]]],[11,"add","","",7,[[["self"],["interval"]],["interval"]]],[11,"add","","",7,[[["self"],["bound"]],["interval"]]],[11,"add","","",7,[[["self"],["bound"]],["interval"]]],[11,"add","interval::interval_set","",2,[[["self"],["intervalset"]],["intervalset"]]],[11,"add","","",2,[[["self"],["intervalset"]],["intervalset"]]],[11,"add","","",2,[[["self"],["bound"]],["intervalset"]]],[11,"add","","",2,[[["self"],["bound"]],["intervalset"]]],[11,"sub","interval::interval","",7,[[["self"],["interval"]],["interval"]]],[11,"sub","","",7,[[["self"],["interval"]],["interval"]]],[11,"sub","","",7,[[["self"],["bound"]],["interval"]]],[11,"sub","","",7,[[["self"],["bound"]],["interval"]]],[11,"sub","interval::interval_set","",2,[[["self"],["intervalset"]],["intervalset"]]],[11,"sub","","",2,[[["self"],["intervalset"]],["intervalset"]]],[11,"sub","","",2,[[["self"],["bound"]],["intervalset"]]],[11,"sub","","",2,[[["self"],["bound"]],["intervalset"]]],[11,"mul","interval::interval","",7,[[["self"],["interval"]],["interval"]]],[11,"mul","","",7,[[["self"],["interval"]],["interval"]]],[11,"mul","","",7,[[["self"],["bound"]],["interval"]]],[11,"mul","","",7,[[["self"],["bound"]],["interval"]]],[11,"mul","interval::interval_set","",2,[[["self"],["intervalset"]],["intervalset"]]],[11,"mul","","",2,[[["self"],["intervalset"]],["intervalset"]]],[11,"mul","","",2,[[["self"],["bound"]],["intervalset"]]],[11,"mul","","",2,[[["self"],["bound"]],["intervalset"]]],[11,"lower","interval::interval","",7,[[["self"]],["bound"]]],[11,"upper","","",7,[[["self"]],["bound"]]],[11,"lower","interval::interval_set","",2,[[["self"]],["bound"]]],[11,"upper","","",2,[[["self"]],["bound"]]],[11,"shrink_left","interval::interval","",7,[[["self"],["bound"]],["interval"]]],[11,"shrink_left","interval::interval_set","",2,[[["self"],["bound"]],["intervalset"]]],[11,"shrink_right","interval::interval","",7,[[["self"],["bound"]],["interval"]]],[11,"shrink_right","interval::interval_set","",2,[[["self"],["bound"]],["intervalset"]]],[11,"empty","interval::interval","",7,[[],["interval"]]],[11,"empty","interval::interval_set","",2,[[],["intervalset"]]],[11,"singleton","interval::interval","",7,[[["bound"]],["interval"]]],[11,"singleton","interval::interval_set","",2,[[["bound"]],["intervalset"]]],[11,"size","interval::interval","",7,N],[11,"size","interval::interval_set","",2,N],[11,"intersection","interval::interval","",7,[[["self"],["interval"]],["interval"]]],[11,"intersection","","",7,[[["self"],["bound"]],["interval"]]],[11,"intersection","","",7,[[["self"],["optional"]],["interval"]]],[11,"intersection","interval::interval_set","",2,[[["self"],["bound"]],["intervalset"]]],[11,"intersection","","",2,[[["self"],["intervalset"]],["intervalset"]]],[11,"union","","",2,[[["self"],["bound"]],["intervalset"]]],[11,"union","","",2,[[["self"],["intervalset"]],["intervalset"]]],[11,"difference","interval::interval","",7,[[["self"],["interval"]],["interval"]]],[11,"difference","","",7,[[["self"],["bound"]],["interval"]]],[11,"difference","","",7,[[["self"],["optional"]],["interval"]]],[11,"difference","interval::interval_set","",2,[[["self"],["bound"]],["intervalset"]]],[11,"difference","","",2,[[["self"],["intervalset"]],["intervalset"]]],[11,"symmetric_difference","","",2,[[["self"],["bound"]],["intervalset"]]],[11,"symmetric_difference","","",2,[[["self"],["intervalset"]],["intervalset"]]],[11,"complement","","",2,[[["self"]],["intervalset"]]],[11,"contains","interval::interval","",7,[[["self"],["bound"]],["bool"]]],[11,"contains","interval::interval_set","",2,[[["self"],["bound"]],["bool"]]],[11,"is_disjoint","interval::interval","",7,[[["self"],["interval"]],["bool"]]],[11,"is_disjoint","","",7,[[["self"],["bound"]],["bool"]]],[11,"is_disjoint","","",7,[[["self"],["optional"]],["bool"]]],[11,"is_disjoint","interval::interval_set","",2,[[["self"],["intervalset"]],["bool"]]],[11,"is_subset","interval::interval","",7,[[["self"],["interval"]],["bool"]]],[11,"is_subset","interval::interval_set","",2,[[["self"],["intervalset"]],["bool"]]],[11,"is_proper_subset","interval::interval","",7,[[["self"],["interval"]],["bool"]]],[11,"is_proper_subset","interval::interval_set","",2,[[["self"],["intervalset"]],["bool"]]],[11,"overlap","interval::interval","",7,[[["self"],["interval"]],["bool"]]],[11,"overlap","","",7,[[["self"],["bound"]],["bool"]]],[11,"overlap","","",7,[[["self"],["optional"]],["bool"]]],[11,"overlap","interval::interval_set","",2,[[["self"],["intervalset"]],["bool"]]],[11,"overlap","","",2,[[["self"],["bound"]],["bool"]]],[11,"overlap","","",2,[[["self"],["optional"]],["bool"]]],[11,"join","interval::interval","",7,[[["self"],["interval"]],["interval"]]],[11,"join","interval::interval_set","",2,[[["self"],["intervalset"]],["intervalset"]]],[11,"meet","interval::interval","",7,[[["self"],["interval"]],["interval"]]],[11,"meet","interval::interval_set","",2,[[["self"],["intervalset"]],["intervalset"]]],[11,"entail","interval::interval","",7,[[["self"],["interval"]],["skleene"]]],[11,"entail","interval::interval_set","",2,[[["self"],["intervalset"]],["skleene"]]],[11,"top","interval::interval","",7,[[],["interval"]]],[11,"top","interval::interval_set","",2,[[],["intervalset"]]],[11,"bot","interval::interval","",7,[[],["interval"]]],[11,"bot","interval::interval_set","",2,[[],["intervalset"]]]],"paths":[[8,"ToInterval"],[8,"ToIntervalSet"],[3,"IntervalSet"],[8,"Hull"],[8,"Range"],[8,"Whole"],[8,"Width"],[3,"Interval"]]};
searchIndex["iovec"]={"doc":"A specialized byte slice type for performing vectored I/O…","items":[[3,"IoVec","iovec","A specialized byte slice type for performing vectored I/O…",N,N],[0,"unix","","IoVec extensions for Unix platforms.",N,N],[5,"as_os_slice","iovec::unix","Convert a slice of `IoVec` refs to a slice of `libc::iovec`.",N,N],[5,"as_os_slice_mut","","Convert a mutable slice of `IoVec` refs to a mutable slice…",N,N],[17,"MAX_LENGTH","iovec","Max length of an `IoVec` slice.",N,N],[11,"from_bytes","","",0,N],[11,"from_bytes_mut","","",0,N],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"deref","","",0,N],[11,"deref_mut","","",0,N]],"paths":[[3,"IoVec"]]};
searchIndex["isatty"]={"doc":"This crate provides the following three functions:","items":[[5,"stdin_isatty","isatty","",N,[[],["bool"]]],[5,"stdout_isatty","","",N,[[],["bool"]]],[5,"stderr_isatty","","",N,[[],["bool"]]]],"paths":[]};
searchIndex["itertools"]={"doc":"Extra iterator adaptors, functions and macros.","items":[[4,"Either","itertools","The enum `Either` with variants `Left` and `Right` is a…",N,N],[13,"Left","","A value of type `L`.",0,N],[13,"Right","","A value of type `R`.",0,N],[4,"Diff","","A type returned by the `diff_with` function.",N,N],[13,"FirstMismatch","","The index of the first non-matching element along with…",1,N],[13,"Shorter","","The total number of elements that were in `J` along with…",1,N],[13,"Longer","","The total number of elements that were in `I` along with…",1,N],[4,"MinMaxResult","","`MinMaxResult` is an enum returned by `minmax`. See…",N,N],[13,"NoElements","","Empty iterator",2,N],[13,"OneElement","","Iterator with one element, so the minimum and maximum are…",2,N],[13,"MinMax","","More than one element in the iterator, the first element…",2,N],[4,"Position","","A value yielded by `WithPosition`. Indicates the position…",N,N],[13,"First","","This is the first element.",3,N],[13,"Middle","","This is neither the first nor the last element.",3,N],[13,"Last","","This is the last element.",3,N],[13,"Only","","This is the only element.",3,N],[4,"EitherOrBoth","","Value that either holds a single A or B, or both.",N,N],[13,"Both","","Both values are present.",4,N],[13,"Left","","Only the left value of type `A` is present.",4,N],[13,"Right","","Only the right value of type `B` is present.",4,N],[4,"FoldWhile","","An enum used for controlling the execution of…",N,N],[13,"Continue","","Continue folding with this value",5,N],[13,"Done","","Fold is complete and will return this value",5,N],[5,"concat","","Combine all an iterator's elements into one element by…",N,N],[5,"cons_tuples","","Create an iterator that maps for example iterators of…",N,[[["i"]],["constuples"]]],[5,"diff_with","","Compares every element yielded by both `i` and `j` with…",N,[[["i"],["j"],["f"]],["option",["diff"]]]],[5,"kmerge_by","","Create an iterator that merges elements of the contained…",N,[[["i"],["f"]],["kmergeby"]]],[5,"process_results","","“Lift” a function of the values of an iterator so that it…",N,[[["i"],["f"]],["result"]]],[5,"repeat_n","","Create an iterator that produces `n` repetitions of…",N,[[["a"],["usize"]],["repeatn"]]],[5,"repeat_call","","An iterator source that produces elements indefinitely by…",N,[[["f"]],["repeatcall"]]],[5,"unfold","","Creates a new unfold source with the specified closure as…",N,[[["st"],["f"]],["unfold"]]],[5,"iterate","","Creates a new iterator that infinitely applies function to…",N,[[["st"],["f"]],["iterate"]]],[5,"multizip","","An iterator that generalizes .zip() and allows running…",N,[[["u"]],["zip"]]],[5,"interleave","","Create an iterator that interleaves elements in `i` and `j`.",N,[[["i"],["j"]],["interleave"]]],[5,"merge","","Create an iterator that merges elements in `i` and `j`.",N,[[["i"],["j"]],["merge"]]],[5,"put_back","","Create an iterator where you can put back a single item",N,[[["i"]],["putback"]]],[5,"put_back_n","","Create an iterator where you can put back multiple values…",N,[[["i"]],["putbackn"]]],[5,"multipeek","","An iterator adaptor that allows the user to peek at…",N,[[["i"]],["multipeek"]]],[5,"kmerge","","Create an iterator that merges elements of the contained…",N,[[["i"]],["kmerge"]]],[5,"zip_eq","","Iterate `i` and `j` in lock step.",N,[[["i"],["j"]],["zipeq"]]],[5,"merge_join_by","","Return an iterator adaptor that merge-joins items from the…",N,[[["i"],["j"],["f"]],["mergejoinby"]]],[5,"rciter","","Return an iterator inside a `Rc<RefCell<_>>` wrapper.",N,[[["i"]],["rciter"]]],[5,"enumerate","","Iterate `iterable` with a running index.",N,[[["i"]],["enumerate"]]],[5,"rev","","Iterate `iterable` in reverse.",N,[[["i"]],["rev"]]],[5,"zip","","Iterate `i` and `j` in lock step.",N,[[["i"],["j"]],["zip"]]],[5,"chain","","Create an iterator that first iterates `i` and then `j`.",N,[[["i"],["j"]],["chain"]]],[5,"cloned","","Create an iterator that clones each element from &T to T",N,[[["i"]],["cloned"]]],[5,"fold","","Perform a fold operation over the iterable.",N,[[["i"],["b"],["f"]],["b"]]],[5,"all","","Test whether the predicate holds for all elements in the…",N,[[["i"],["f"]],["bool"]]],[5,"any","","Test whether the predicate holds for any elements in the…",N,[[["i"],["f"]],["bool"]]],[5,"max","","Return the maximum value of the iterable.",N,[[["i"]],["option"]]],[5,"min","","Return the minimum value of the iterable.",N,[[["i"]],["option"]]],[5,"join","","Combine all iterator elements into one String, seperated…",N,[[["i"],["str"]],["string"]]],[5,"sorted","","Sort all iterator elements into a new iterator in…",N,[[["i"]],["intoiter"]]],[5,"equal","","Return `true` if both iterables produce equal sequences…",N,[[["i"],["j"]],["bool"]]],[5,"assert_equal","","Assert that two iterables produce equal sequences, with…",N,[[["i"],["j"]]]],[5,"partition","","Partition a sequence using predicate `pred` so that…",N,[[["i"],["f"]],["usize"]]],[0,"structs","","The concrete iterator types.",N,N],[3,"Dedup","itertools::structs","An iterator adaptor that removes repeated duplicates.",N,N],[3,"Interleave","","An iterator adaptor that alternates elements from two…",N,N],[3,"InterleaveShortest","","An iterator adaptor that alternates elements from the two…",N,N],[3,"Product","","An iterator adaptor that iterates over the cartesian…",N,N],[3,"PutBack","","An iterator adaptor that allows putting back a single item…",N,N],[3,"Batching","","A “meta iterator adaptor”. Its closure receives a…",N,N],[3,"MapInto","","An iterator adapter to apply `Into` conversion to each…",N,N],[3,"MapResults","","An iterator adapter to apply a transformation within a…",N,N],[3,"Merge","","An iterator adaptor that merges the two base iterators in…",N,N],[3,"MergeBy","","An iterator adaptor that merges the two base iterators in…",N,N],[3,"TakeWhileRef","","An iterator adaptor that borrows from a `Clone`-able…",N,N],[3,"WhileSome","","An iterator adaptor that filters `Option<A>` iterator…",N,N],[3,"Coalesce","","An iterator adaptor that may join together adjacent…",N,N],[3,"TupleCombinations","","An iterator to iterate through all combinations in a…",N,N],[3,"Positions","","An iterator adapter to get the positions of each element…",N,N],[3,"Update","","An iterator adapter to apply a mutating function to each…",N,N],[3,"Step","","An iterator adaptor that steps a number elements in the…",N,N],[3,"MultiProduct","","An iterator adaptor that iterates over the cartesian…",N,N],[3,"Combinations","","An iterator to iterate through all the `n`-length…",N,N],[3,"ConsTuples","","An iterator that maps an iterator of tuples like `((A, B),…",N,N],[3,"Format","","Format all iterator elements lazily, separated by `sep`.",N,N],[3,"FormatWith","","Format all iterator elements lazily, separated by `sep`.",N,N],[3,"IntoChunks","","`ChunkLazy` is the storage for a lazy chunking operation.",N,N],[3,"Chunk","","An iterator for the elements in a single chunk.",N,N],[3,"Chunks","","An iterator that yields the Chunk iterators.",N,N],[3,"GroupBy","","`GroupBy` is the storage for the lazy grouping operation.",N,N],[3,"Group","","An iterator for the elements in a single group.",N,N],[3,"Groups","","An iterator that yields the Group iterators.",N,N],[3,"Intersperse","","An iterator adaptor to insert a particular value between…",N,N],[3,"KMerge","","An iterator adaptor that merges an abitrary number of base…",N,N],[3,"KMergeBy","","An iterator adaptor that merges an abitrary number of base…",N,N],[3,"MergeJoinBy","","An iterator adaptor that merge-joins items from the two…",N,N],[3,"MultiPeek","","See `multipeek()` for more information.",N,N],[3,"PadUsing","","An iterator adaptor that pads a sequence to a minimum…",N,N],[3,"PeekingTakeWhile","","An iterator adaptor that takes items while a closure…",N,N],[3,"ProcessResults","","An iterator that produces only the `T` values as long as…",N,N],[3,"PutBackN","","An iterator adaptor that allows putting multiple items in…",N,N],[3,"RcIter","","A wrapper for `Rc<RefCell<I>>`, that implements the…",N,N],[12,"rciter","","The boxed iterator.",6,N],[3,"RepeatN","","An iterator that produces n repetitions of an element.",N,N],[3,"RepeatCall","","See `repeat_call` for more information.",N,N],[3,"Unfold","","See `unfold` for more information.",N,N],[12,"state","","Internal state that will be passed to the closure on the…",7,N],[3,"Iterate","","An iterator that infinitely applies function to value and…",N,N],[3,"Tee","","One half of an iterator pair where both return the same…",N,N],[3,"TupleBuffer","","An iterator over a incomplete tuple.",N,N],[3,"TupleWindows","","An iterator over all contiguous windows that produces…",N,N],[3,"Tuples","","An iterator that groups the items in tuples of a specific…",N,N],[3,"Unique","","An iterator adapter to filter out duplicate elements.",N,N],[3,"UniqueBy","","An iterator adapter to filter out duplicate elements.",N,N],[3,"WithPosition","","An iterator adaptor that wraps each element in an…",N,N],[3,"ZipEq","","An iterator which iterates two other iterators…",N,N],[3,"ZipLongest","","An iterator which iterates two other iterators…",N,N],[3,"Zip","","See `multizip` for more information.",N,N],[11,"with_value","","put back value `value` (builder method)",8,N],[11,"into_parts","","Split the `PutBack` into its parts.",8,N],[11,"put_back","","Put back a single value to the front of the iterator.",8,N],[11,"has_left","itertools","If `Left`, or `Both`, return true, otherwise, return false.",4,[[["self"]],["bool"]]],[11,"has_right","","If `Right`, or `Both`, return true, otherwise, return false.",4,[[["self"]],["bool"]]],[11,"left","","If `Left`, or `Both`, return `Some` with the left value,…",4,[[["self"]],["option"]]],[11,"right","","If `Right`, or `Both`, return `Some` with the right value,…",4,[[["self"]],["option"]]],[11,"as_ref","","Converts from `&EitherOrBoth<A, B>` to `EitherOrBoth<&A,…",4,[[["self"]],["eitherorboth"]]],[11,"as_mut","","Converts from `&mut EitherOrBoth<A, B>` to…",4,[[["self"]],["eitherorboth"]]],[11,"into_option","","`into_option` creates an `Option` of type `(T, T)`. The…",2,[[["self"]],["option"]]],[11,"reset_peek","itertools::structs","Reset the peeking “cursor”",9,[[["self"]]]],[11,"peek","","Works exactly like `.next()` with the only difference that…",9,[[["self"]],["option"]]],[11,"put_back","","Puts x in front of the iterator. The values are yielded in…",10,N],[11,"into_buffer","","Return a buffer with the produced items that was not…",11,[[["self"]],["tuplebuffer"]]],[11,"into_inner","itertools","Return the inner value.",3,[[["self"]],["t"]]],[8,"PeekingNext","","An iterator that allows peeking at an element before…",N,N],[10,"peeking_next","","Pass a reference to the next iterator element to the…",12,[[["self"],["f"]],["option"]]],[8,"Itertools","","An [`Iterator`] blanket implementation that provides extra…",N,N],[11,"interleave","","Alternate elements from two iterators until both have run…",13,[[["self"],["j"]],["interleave"]]],[11,"interleave_shortest","","Alternate elements from two iterators until at least one…",13,[[["self"],["j"]],["interleaveshortest"]]],[11,"intersperse","","An iterator adaptor to insert a particular value between…",13,N],[11,"zip_longest","","Create an iterator which iterates over both this and the…",13,[[["self"],["j"]],["ziplongest"]]],[11,"zip_eq","","Create an iterator which iterates over both this and the…",13,[[["self"],["j"]],["zipeq"]]],[11,"batching","","A “meta iterator adaptor”. Its closure receives a…",13,[[["self"],["f"]],["batching"]]],[11,"group_by","","Return an iterable that can group iterator elements.…",13,[[["self"],["f"]],["groupby"]]],[11,"chunks","","Return an iterable that can chunk the iterator.",13,[[["self"],["usize"]],["intochunks"]]],[11,"tuple_windows","","Return an iterator over all contiguous windows producing…",13,[[["self"]],["tuplewindows"]]],[11,"tuples","","Return an iterator that groups the items in tuples of a…",13,[[["self"]],["tuples"]]],[11,"tee","","Split into an iterator pair that both yield all elements…",13,N],[11,"step","","Return an iterator adaptor that steps `n` elements in the…",13,[[["self"],["usize"]],["step"]]],[11,"map_into","","Convert each item of the iterator using the `Into` trait.",13,[[["self"]],["mapinto"]]],[11,"map_results","","Return an iterator adaptor that applies the provided…",13,[[["self"],["f"]],["mapresults"]]],[11,"merge","","Return an iterator adaptor that merges the two base…",13,[[["self"],["j"]],["merge"]]],[11,"merge_by","","Return an iterator adaptor that merges the two base…",13,[[["self"],["j"],["f"]],["mergeby"]]],[11,"merge_join_by","","Create an iterator that merges items from both this and…",13,[[["self"],["j"],["f"]],["mergejoinby"]]],[11,"kmerge","","Return an iterator adaptor that flattens an iterator of…",13,[[["self"]],["kmerge"]]],[11,"kmerge_by","","Return an iterator adaptor that flattens an iterator of…",13,[[["self"],["f"]],["kmergeby"]]],[11,"cartesian_product","","Return an iterator adaptor that iterates over the…",13,[[["self"],["j"]],["product"]]],[11,"multi_cartesian_product","","Return an iterator adaptor that iterates over the…",13,[[["self"]],["multiproduct"]]],[11,"coalesce","","Return an iterator adaptor that uses the passed-in closure…",13,[[["self"],["f"]],["coalesce"]]],[11,"dedup","","Remove duplicates from sections of consecutive identical…",13,[[["self"]],["dedup"]]],[11,"unique","","Return an iterator adaptor that filters out elements that…",13,[[["self"]],["unique"]]],[11,"unique_by","","Return an iterator adaptor that filters out elements that…",13,[[["self"],["f"]],["uniqueby"]]],[11,"peeking_take_while","","Return an iterator adaptor that borrows from this iterator…",13,[[["self"],["f"]],["peekingtakewhile"]]],[11,"take_while_ref","","Return an iterator adaptor that borrows from a…",13,[[["self"],["f"]],["takewhileref"]]],[11,"while_some","","Return an iterator adaptor that filters `Option<A>`…",13,[[["self"]],["whilesome"]]],[11,"tuple_combinations","","Return an iterator adaptor that iterates over the…",13,[[["self"]],["tuplecombinations"]]],[11,"combinations","","Return an iterator adaptor that iterates over the…",13,[[["self"],["usize"]],["combinations"]]],[11,"pad_using","","Return an iterator adaptor that pads the sequence to a…",13,[[["self"],["usize"],["f"]],["padusing"]]],[11,"with_position","","Return an iterator adaptor that wraps each element in a…",13,[[["self"]],["withposition"]]],[11,"positions","","Return an iterator adaptor that yields the indices of all…",13,[[["self"],["p"]],["positions"]]],[11,"update","","Return an iterator adaptor that applies a mutating…",13,[[["self"],["f"]],["update"]]],[11,"next_tuple","","Advances the iterator and returns the next items grouped…",13,[[["self"]],["option"]]],[11,"collect_tuple","","Collects all items from the iterator into a tuple of a…",13,[[["self"]],["option"]]],[11,"find_position","","Find the position and value of the first element…",13,[[["self"],["p"]],["option"]]],[11,"all_equal","","Check whether all elements compare equal.",13,[[["self"]],["bool"]]],[11,"dropping","","Consume the first `n` elements from the iterator eagerly,…",13,[[["self"],["usize"]],["self"]]],[11,"dropping_back","","Consume the last `n` elements from the iterator eagerly,…",13,[[["self"],["usize"]],["self"]]],[11,"foreach","","Run the closure `f` eagerly on each element of the iterator.",13,[[["self"],["f"]]]],[11,"concat","","Combine all an iterator's elements into one element by…",13,N],[11,"collect_vec","","`.collect_vec()` is simply a type specialization of…",13,[[["self"]],["vec"]]],[11,"set_from","","Assign to each reference in `self` from the `from`…",13,[[["self"],["j"]],["usize"]]],[11,"join","","Combine all iterator elements into one String, seperated…",13,[[["self"],["str"]],["string"]]],[11,"format","","Format all iterator elements, separated by `sep`.",13,[[["self"],["str"]],["format"]]],[11,"format_with","","Format all iterator elements, separated by `sep`.",13,[[["self"],["str"],["f"]],["formatwith"]]],[11,"fold_results","","Fold `Result` values from an iterator.",13,[[["self"],["b"],["f"]],["result"]]],[11,"fold_options","","Fold `Option` values from an iterator.",13,[[["self"],["b"],["f"]],["option"]]],[11,"fold1","","Accumulator of the elements in the iterator.",13,[[["self"],["f"]],["option"]]],[11,"tree_fold1","","Accumulate the elements in the iterator in a tree-like…",13,[[["self"],["f"]],["option"]]],[11,"fold_while","","An iterator method that applies a function, producing a…",13,[[["self"],["b"],["f"]],["foldwhile"]]],[11,"sorted","","Sort all iterator elements into a new iterator in…",13,[[["self"]],["intoiter"]]],[11,"sorted_by","","Sort all iterator elements into a new iterator in…",13,[[["self"],["f"]],["intoiter"]]],[11,"sorted_by_key","","Sort all iterator elements into a new iterator in…",13,[[["self"],["f"]],["intoiter"]]],[11,"partition_map","","Collect all iterator elements into one of two partitions.…",13,N],[11,"into_group_map","","Return a `HashMap` of keys mapped to `Vec`s of values.…",13,[[["self"]],["hashmap",["vec"]]]],[11,"minmax","","Return the minimum and maximum elements in the iterator.",13,[[["self"]],["minmaxresult"]]],[11,"minmax_by_key","","Return the minimum and maximum element of an iterator, as…",13,[[["self"],["f"]],["minmaxresult"]]],[11,"minmax_by","","Return the minimum and maximum element of an iterator, as…",13,[[["self"],["f"]],["minmaxresult"]]],[11,"into_inner","","Return the value in the continue or done.",5,[[["self"]],["t"]]],[11,"is_done","","Return true if `self` is `Done`, false if it is `Continue`.",5,[[["self"]],["bool"]]],[14,"iproduct","","Create an iterator over the “cartesian product” of…",N,N],[14,"izip","","Create an iterator running multiple iterators in lockstep.",N,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"into_iter","","",0,[[["self"]],["i"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","itertools::structs","",14,[[["t"]],["t"]]],[11,"into_iter","","",14,[[["self"]],["i"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into_iter","","",15,[[["self"]],["i"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into_iter","","",16,[[["self"]],["i"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into_iter","","",17,[[["self"]],["i"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into_iter","","",8,[[["self"]],["i"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into_iter","","",18,[[["self"]],["i"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into_iter","","",19,[[["self"]],["i"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into_iter","","",20,[[["self"]],["i"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into_iter","","",21,[[["self"]],["i"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into_iter","","",22,[[["self"]],["i"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into_iter","","",23,[[["self"]],["i"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into_iter","","",24,[[["self"]],["i"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into_iter","","",25,[[["self"]],["i"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into_iter","","",26,[[["self"]],["i"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into_iter","","",27,[[["self"]],["i"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into_iter","","",28,[[["self"]],["i"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into_iter","","",29,[[["self"]],["i"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,N],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into_iter","","",30,[[["self"]],["i"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,N],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into_iter","","",31,[[["self"]],["i"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into_iter","","",32,[[["self"]],["i"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,N],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,N],[11,"to_string","","",33,[[["self"]],["string"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"to_string","","",34,[[["self"]],["string"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into_iter","","",36,[[["self"]],["i"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into_iter","","",37,[[["self"]],["i"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into_iter","","",39,[[["self"]],["i"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into_iter","","",40,[[["self"]],["i"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into_iter","","",41,[[["self"]],["i"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,N],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into_iter","","",42,[[["self"]],["i"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,N],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into_iter","","",43,[[["self"]],["i"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into_iter","","",44,[[["self"]],["i"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into_iter","","",9,[[["self"]],["i"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into_iter","","",45,[[["self"]],["i"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,N],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into_iter","","",46,[[["self"]],["i"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into_iter","","",47,[[["self"]],["i"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into_iter","","",10,[[["self"]],["i"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into_iter","","",6,[[["self"]],["i"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into_iter","","",48,[[["self"]],["i"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into_iter","","",49,[[["self"]],["i"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into_iter","","",7,[[["self"]],["i"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into_iter","","",50,[[["self"]],["i"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,N],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into_iter","","",51,[[["self"]],["i"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into_iter","","",52,[[["self"]],["i"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into_iter","","",53,[[["self"]],["i"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into_iter","","",11,[[["self"]],["i"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into_iter","","",54,[[["self"]],["i"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,N],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into_iter","","",55,[[["self"]],["i"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,N],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into_iter","","",56,[[["self"]],["i"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into_iter","","",57,[[["self"]],["i"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,N],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into_iter","","",58,[[["self"]],["i"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,N],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into_iter","","",59,[[["self"]],["i"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,N],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"from","itertools","",0,[[["result"]],["either"]]],[11,"deref_mut","","",0,N],[11,"deref","","",0,N],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"as_ref","","",0,[[["self"]],["target"]]],[11,"as_mut","","",0,[[["self"]],["target"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"eq","","",0,[[["self"],["either"]],["bool"]]],[11,"ne","","",0,[[["self"],["either"]],["bool"]]],[11,"cmp","","",0,[[["self"],["either"]],["ordering"]]],[11,"next_back","","",0,[[["self"]],["option"]]],[11,"partial_cmp","","",0,[[["self"],["either"]],["option",["ordering"]]]],[11,"lt","","",0,[[["self"],["either"]],["bool"]]],[11,"le","","",0,[[["self"],["either"]],["bool"]]],[11,"gt","","",0,[[["self"],["either"]],["bool"]]],[11,"ge","","",0,[[["self"],["either"]],["bool"]]],[11,"next","","",0,[[["self"]],["option"]]],[11,"size_hint","","",0,N],[11,"fold","","",0,[[["self"],["acc"],["g"]],["acc"]]],[11,"count","","",0,[[["self"]],["usize"]]],[11,"last","","",0,[[["self"]],["option"]]],[11,"nth","","",0,[[["self"],["usize"]],["option"]]],[11,"collect","","",0,[[["self"]],["b"]]],[11,"all","","",0,[[["self"],["f"]],["bool"]]],[11,"hash","","",0,N],[11,"clone","","",0,[[["self"]],["either"]]],[11,"extend","","",0,N],[11,"into","","",0,[[["self"]],["result"]]],[11,"peeking_next","itertools::structs","",9,[[["self"],["f"]],["option"]]],[11,"peeking_next","","",8,[[["self"],["f"]],["option"]]],[11,"peeking_next","","",10,[[["self"],["f"]],["option"]]],[11,"next_back","","",19,[[["self"]],["option"]]],[11,"next_back","","",27,[[["self"]],["option"]]],[11,"next_back","","",28,[[["self"]],["option"]]],[11,"next_back","","",32,[[["self"]],["option"]]],[11,"next_back","","",32,[[["self"]],["option"]]],[11,"next_back","","",32,[[["self"]],["option"]]],[11,"next_back","","",32,[[["self"]],["option"]]],[11,"next_back","","",32,[[["self"]],["option"]]],[11,"next_back","","",32,[[["self"]],["option"]]],[11,"next_back","","",45,[[["self"]],["option"]]],[11,"next_back","","",6,[[["self"]],["option"]]],[11,"next_back","","",48,[[["self"]],["option"]]],[11,"next_back","","",58,[[["self"]],["option"]]],[11,"eq","itertools","",4,[[["self"],["eitherorboth"]],["bool"]]],[11,"ne","","",4,[[["self"],["eitherorboth"]],["bool"]]],[11,"eq","","",2,[[["self"],["minmaxresult"]],["bool"]]],[11,"ne","","",2,[[["self"],["minmaxresult"]],["bool"]]],[11,"eq","","",3,[[["self"],["position"]],["bool"]]],[11,"ne","","",3,[[["self"],["position"]],["bool"]]],[11,"eq","","",5,[[["self"],["foldwhile"]],["bool"]]],[11,"ne","","",5,[[["self"],["foldwhile"]],["bool"]]],[11,"from","itertools::structs","",59,N],[11,"from","","",59,N],[11,"from","","",59,N],[11,"from","","",59,N],[11,"from","","",59,N],[11,"from","","",59,N],[11,"from","","",59,N],[11,"from","","",59,N],[11,"clone","","",30,[[["self"]],["multiproduct"]]],[11,"clone","","",15,[[["self"]],["interleave"]]],[11,"clone","","",16,[[["self"]],["interleaveshortest"]]],[11,"clone","","",8,[[["self"]],["putback"]]],[11,"clone","","",17,[[["self"]],["product"]]],[11,"clone","","",18,[[["self"]],["batching"]]],[11,"clone","","",29,[[["self"]],["step"]]],[11,"clone","","",21,[[["self"]],["self"]]],[11,"clone","","",22,[[["self"]],["self"]]],[11,"clone","","",25,[[["self"]],["self"]]],[11,"clone","","",14,[[["self"]],["self"]]],[11,"clone","","",24,[[["self"]],["whilesome"]]],[11,"clone","itertools","",4,[[["self"]],["eitherorboth"]]],[11,"clone","itertools::structs","",32,[[["self"]],["self"]]],[11,"clone","","",33,[[["self"]],["format"]]],[11,"clone","","",41,[[["self"]],["intersperse"]]],[11,"clone","","",42,[[["self"]],["kmerge"]]],[11,"clone","itertools","",2,[[["self"]],["minmaxresult"]]],[11,"clone","itertools::structs","",9,[[["self"]],["multipeek"]]],[11,"clone","","",45,[[["self"]],["padusing"]]],[11,"clone","","",10,[[["self"]],["putbackn"]]],[11,"clone","","",6,[[["self"]],["rciter"]]],[11,"clone","","",7,[[["self"]],["unfold"]]],[11,"clone","","",50,[[["self"]],["iterate"]]],[11,"clone","","",55,[[["self"]],["uniqueby"]]],[11,"clone","","",54,[[["self"]],["unique"]]],[11,"clone","itertools","",3,[[["self"]],["position"]]],[11,"clone","itertools::structs","",57,[[["self"]],["zipeq"]]],[11,"clone","","",58,[[["self"]],["ziplongest"]]],[11,"clone","","",59,[[["self"]],["zip"]]],[11,"clone","itertools","",5,[[["self"]],["foldwhile"]]],[11,"drop","itertools::structs","",39,[[["self"]]]],[11,"drop","","",36,[[["self"]]]],[11,"next","","",30,[[["self"]],["option"]]],[11,"count","","",30,[[["self"]],["usize"]]],[11,"size_hint","","",30,N],[11,"last","","",30,[[["self"]],["option"]]],[11,"next","","",15,[[["self"]],["option"]]],[11,"size_hint","","",15,N],[11,"next","","",16,[[["self"]],["option"]]],[11,"size_hint","","",16,N],[11,"next","","",8,[[["self"]],["option"]]],[11,"size_hint","","",8,N],[11,"all","","",8,[[["self"],["g"]],["bool"]]],[11,"fold","","",8,[[["self"],["acc"],["g"]],["acc"]]],[11,"next","","",17,[[["self"]],["option"]]],[11,"size_hint","","",17,N],[11,"fold","","",17,[[["self"],["acc"],["g"]],["acc"]]],[11,"next","","",18,[[["self"]],["option"]]],[11,"size_hint","","",18,N],[11,"next","","",29,[[["self"]],["option"]]],[11,"size_hint","","",29,N],[11,"next","","",21,[[["self"]],["option"]]],[11,"size_hint","","",21,N],[11,"next","","",22,[[["self"]],["option"]]],[11,"size_hint","","",22,N],[11,"next","","",25,[[["self"]],["option"]]],[11,"size_hint","","",25,N],[11,"next","","",14,[[["self"]],["option"]]],[11,"size_hint","","",14,N],[11,"fold","","",14,[[["self"],["acc"],["g"]],["acc"]]],[11,"next","","",23,[[["self"]],["option"]]],[11,"size_hint","","",23,N],[11,"next","","",24,[[["self"]],["option"]]],[11,"size_hint","","",24,N],[11,"next","","",26,[[["self"]],["option"]]],[11,"next","","",19,[[["self"]],["option"]]],[11,"size_hint","","",19,N],[11,"fold","","",19,[[["self"],["acc"],["fold"]],["acc"]]],[11,"next","","",20,[[["self"]],["option"]]],[11,"size_hint","","",20,N],[11,"fold","","",20,[[["self"],["acc"],["fold"]],["acc"]]],[11,"collect","","",20,[[["self"]],["c"]]],[11,"next","","",27,[[["self"]],["option"]]],[11,"size_hint","","",27,N],[11,"next","","",28,[[["self"]],["option"]]],[11,"size_hint","","",28,N],[11,"fold","","",28,[[["self"],["acc"],["g"]],["acc"]]],[11,"collect","","",28,[[["self"]],["c"]]],[11,"next","","",32,[[["self"]],["option"]]],[11,"size_hint","","",32,N],[11,"fold","","",32,[[["self"],["acc"],["fold"]],["acc"]]],[11,"next","","",32,[[["self"]],["option"]]],[11,"size_hint","","",32,N],[11,"fold","","",32,[[["self"],["acc"],["fold"]],["acc"]]],[11,"next","","",32,[[["self"]],["option"]]],[11,"size_hint","","",32,N],[11,"fold","","",32,[[["self"],["acc"],["fold"]],["acc"]]],[11,"next","","",32,[[["self"]],["option"]]],[11,"size_hint","","",32,N],[11,"fold","","",32,[[["self"],["acc"],["fold"]],["acc"]]],[11,"next","","",32,[[["self"]],["option"]]],[11,"size_hint","","",32,N],[11,"fold","","",32,[[["self"],["acc"],["fold"]],["acc"]]],[11,"next","","",32,[[["self"]],["option"]]],[11,"size_hint","","",32,N],[11,"fold","","",32,[[["self"],["acc"],["fold"]],["acc"]]],[11,"next","","",31,[[["self"]],["option"]]],[11,"next","","",40,[[["self"]],["option"]]],[11,"next","","",39,[[["self"]],["option"]]],[11,"next","","",37,[[["self"]],["option"]]],[11,"next","","",36,[[["self"]],["option"]]],[11,"next","","",41,[[["self"]],["option"]]],[11,"size_hint","","",41,N],[11,"next","","",42,[[["self"]],["option"]]],[11,"size_hint","","",42,N],[11,"next","","",43,[[["self"]],["option"]]],[11,"size_hint","","",43,N],[11,"next","","",44,[[["self"]],["option"]]],[11,"size_hint","","",44,N],[11,"next","","",9,[[["self"]],["option"]]],[11,"size_hint","","",9,N],[11,"next","","",45,[[["self"]],["option"]]],[11,"size_hint","","",45,N],[11,"next","","",46,[[["self"]],["option"]]],[11,"size_hint","","",46,N],[11,"next","","",47,[[["self"]],["option"]]],[11,"size_hint","","",47,N],[11,"next","","",10,[[["self"]],["option"]]],[11,"size_hint","","",10,N],[11,"next","","",6,[[["self"]],["option"]]],[11,"size_hint","","",6,N],[11,"next","","",48,[[["self"]],["option"]]],[11,"size_hint","","",48,N],[11,"next","","",49,[[["self"]],["option"]]],[11,"size_hint","","",49,N],[11,"next","","",7,[[["self"]],["option"]]],[11,"size_hint","","",7,N],[11,"next","","",50,[[["self"]],["option"]]],[11,"size_hint","","",50,N],[11,"next","","",51,[[["self"]],["option"]]],[11,"size_hint","","",51,N],[11,"next","","",52,[[["self"]],["option"]]],[11,"size_hint","","",52,N],[11,"next","","",11,[[["self"]],["option"]]],[11,"next","","",53,[[["self"]],["option"]]],[11,"next","","",55,[[["self"]],["option"]]],[11,"size_hint","","",55,N],[11,"count","","",55,[[["self"]],["usize"]]],[11,"next","","",54,[[["self"]],["option"]]],[11,"size_hint","","",54,N],[11,"count","","",54,[[["self"]],["usize"]]],[11,"next","","",56,[[["self"]],["option"]]],[11,"size_hint","","",56,N],[11,"next","","",57,[[["self"]],["option"]]],[11,"size_hint","","",57,N],[11,"next","","",58,[[["self"]],["option"]]],[11,"size_hint","","",58,N],[11,"next","","",59,[[["self"]],["option"]]],[11,"size_hint","","",59,N],[11,"next","","",59,[[["self"]],["option"]]],[11,"size_hint","","",59,N],[11,"next","","",59,[[["self"]],["option"]]],[11,"size_hint","","",59,N],[11,"next","","",59,[[["self"]],["option"]]],[11,"size_hint","","",59,N],[11,"next","","",59,[[["self"]],["option"]]],[11,"size_hint","","",59,N],[11,"next","","",59,[[["self"]],["option"]]],[11,"size_hint","","",59,N],[11,"next","","",59,[[["self"]],["option"]]],[11,"size_hint","","",59,N],[11,"next","","",59,[[["self"]],["option"]]],[11,"size_hint","","",59,N],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","itertools","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","itertools::structs","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","itertools","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","itertools::structs","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",50,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",52,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",53,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",55,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",54,[[["self"],["formatter"]],["result"]]],[11,"fmt","itertools","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","itertools::structs","",57,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",58,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",59,[[["self"],["formatter"]],["result"]]],[11,"fmt","itertools","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","itertools::structs","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"is_left","itertools","Return true if the value is the `Left` variant.",0,[[["self"]],["bool"]]],[11,"is_right","","Return true if the value is the `Right` variant.",0,[[["self"]],["bool"]]],[11,"left","","Convert the left side of `Either<L, R>` to an `Option<L>`.",0,[[["self"]],["option"]]],[11,"right","","Convert the right side of `Either<L, R>` to an `Option<R>`.",0,[[["self"]],["option"]]],[11,"as_ref","","Convert `&Either<L, R>` to `Either<&L, &R>`.",0,[[["self"]],["either"]]],[11,"as_mut","","Convert `&mut Either<L, R>` to `Either<&mut L, &mut R>`.",0,[[["self"]],["either"]]],[11,"flip","","Convert `Either<L, R>` to `Either<R, L>`.",0,[[["self"]],["either"]]],[11,"map_left","","Apply the function `f` on the value in the `Left` variant…",0,[[["self"],["f"]],["either"]]],[11,"map_right","","Apply the function `f` on the value in the `Right` variant…",0,[[["self"],["f"]],["either"]]],[11,"either","","Apply one of two functions depending on contents, unifying…",0,[[["self"],["f"],["g"]],["t"]]],[11,"either_with","","Like `either`, but provide some context to whichever of…",0,[[["self"],["ctx"],["f"],["g"]],["t"]]],[11,"left_and_then","","Apply the function `f` on the value in the `Left` variant…",0,[[["self"],["f"]],["either"]]],[11,"right_and_then","","Apply the function `f` on the value in the `Right` variant…",0,[[["self"],["f"]],["either"]]],[11,"into_iter","","Convert the inner value to an iterator.",0,[[["self"]],["either"]]],[11,"factor_first","","Factor out a homogeneous type from an either of pairs.",0,N],[11,"factor_second","","Factor out a homogeneous type from an either of pairs.",0,N],[11,"into_inner","","Extract the value of an either over two equivalent types.",0,[[["self"]],["t"]]]],"paths":[[4,"Either"],[4,"Diff"],[4,"MinMaxResult"],[4,"Position"],[4,"EitherOrBoth"],[4,"FoldWhile"],[3,"RcIter"],[3,"Unfold"],[3,"PutBack"],[3,"MultiPeek"],[3,"PutBackN"],[3,"Tuples"],[8,"PeekingNext"],[8,"Itertools"],[3,"Dedup"],[3,"Interleave"],[3,"InterleaveShortest"],[3,"Product"],[3,"Batching"],[3,"MapInto"],[3,"MapResults"],[3,"Merge"],[3,"MergeBy"],[3,"TakeWhileRef"],[3,"WhileSome"],[3,"Coalesce"],[3,"TupleCombinations"],[3,"Positions"],[3,"Update"],[3,"Step"],[3,"MultiProduct"],[3,"Combinations"],[3,"ConsTuples"],[3,"Format"],[3,"FormatWith"],[3,"IntoChunks"],[3,"Chunk"],[3,"Chunks"],[3,"GroupBy"],[3,"Group"],[3,"Groups"],[3,"Intersperse"],[3,"KMerge"],[3,"KMergeBy"],[3,"MergeJoinBy"],[3,"PadUsing"],[3,"PeekingTakeWhile"],[3,"ProcessResults"],[3,"RepeatN"],[3,"RepeatCall"],[3,"Iterate"],[3,"Tee"],[3,"TupleBuffer"],[3,"TupleWindows"],[3,"Unique"],[3,"UniqueBy"],[3,"WithPosition"],[3,"ZipEq"],[3,"ZipLongest"],[3,"Zip"]]};
searchIndex["itoa"]={"doc":"","items":[[3,"Buffer","itoa","A safe API for formatting integers to text.",N,N],[5,"write","","Write integer to an `io::Write`.",N,[[["w"],["v"]],["result",["usize"]]]],[5,"fmt","","Write integer to an `fmt::Write`.",N,[[["w"],["v"]],["result"]]],[8,"Integer","","An integer that can be formatted by `itoa::write` and…",N,N],[11,"new","","This is a cheap operation; you don't need to worry about…",0,[[],["buffer"]]],[11,"format","","Print an integer into this buffer and return a reference…",0,[[["self"],["i"]],["str"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["self"]]],[11,"default","","",0,[[],["buffer"]]]],"paths":[[3,"Buffer"]]};
searchIndex["language_tags"]={"doc":"Language tags can be used identify human languages,…","items":[[3,"LanguageTag","language_tags","A language tag as described in BCP47.",N,N],[12,"language","","Language subtags are used to indicate the language,…",0,N],[12,"extlangs","","Extended language subtags are used to identify certain…",0,N],[12,"script","","Script subtags are used to indicate the script or writing…",0,N],[12,"region","","Region subtags are used to indicate linguistic variations…",0,N],[12,"variants","","Variant subtags are used to indicate additional,…",0,N],[12,"extensions","","Extensions provide a mechanism for extending language tags…",0,N],[12,"privateuse","","Private use subtags are used to indicate distinctions in…",0,N],[4,"Error","","Defines an Error type for langtags.",N,N],[13,"DuplicateExtension","","The same extension subtag is only allowed once in a tag…",1,N],[13,"EmptyExtension","","If an extension subtag is present, it must not be empty.",1,N],[13,"EmptyPrivateUse","","If the `x` subtag is present, it must not be empty.",1,N],[13,"ForbiddenChar","","The langtag contains a char that is not A-Z, a-z, 0-9 or…",1,N],[13,"InvalidSubtag","","A subtag fails to parse, it does not match any other…",1,N],[13,"InvalidLanguage","","The given language subtag is invalid.",1,N],[13,"SubtagTooLong","","A subtag may be eight characters in length at maximum.",1,N],[13,"TooManyExtlangs","","At maximum three extlangs are allowed, but zero to one…",1,N],[6,"Result","","Result type used for this library.",N,N],[17,"GRANDFATHERED","","Contains all grandfathered tags.",N,N],[11,"matches","","Matches language tags. The first language acts as a…",0,[[["self"],["languagetag"]],["bool"]]],[11,"is_language_range","","Checks if it is a language range, meaning that there are…",0,[[["self"]],["bool"]]],[11,"canonicalize","","Returns the canonical version of the language tag.",0,[[["self"]],["languagetag"]]],[14,"langtag","","Utility for creating simple language tags.",N,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"eq","","",1,[[["self"],["error"]],["bool"]]],[11,"eq","","",0,[[["self"],["languagetag"]],["bool"]]],[11,"clone","","",0,[[["self"]],["languagetag"]]],[11,"default","","",0,[[],["languagetag"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"from_str","","",0,[[["str"]],["result"]]],[11,"description","","",1,[[["self"]],["str"]]]],"paths":[[3,"LanguageTag"],[4,"Error"]]};
searchIndex["lazy_static"]={"doc":"A macro for declaring lazily evaluated statics.","items":[[5,"initialize","lazy_static","Takes a shared reference to a lazy static and initializes…",N,[[["t"]]]],[8,"LazyStatic","","Support trait for enabling a few common operation on lazy…",N,N],[14,"lazy_static","","",N,N]],"paths":[]};
searchIndex["lazycell"]={"doc":"This crate provides a `LazyCell` struct which acts as a…","items":[[3,"LazyCell","lazycell","A lazily filled `Cell`, with mutable contents.",N,N],[3,"AtomicLazyCell","","A lazily filled and thread-safe `Cell`, with frozen…",N,N],[11,"new","","Creates a new, empty, `LazyCell`.",0,[[],["lazycell"]]],[11,"fill","","Put a value into this cell.",0,[[["self"],["t"]],["result"]]],[11,"replace","","Put a value into this cell.",0,[[["self"],["t"]],["option"]]],[11,"filled","","Test whether this cell has been previously filled.",0,[[["self"]],["bool"]]],[11,"borrow","","Borrows the contents of this lazy cell for the duration of…",0,[[["self"]],["option"]]],[11,"borrow_mut","","Borrows the contents of this lazy cell mutably for the…",0,[[["self"]],["option"]]],[11,"borrow_with","","Borrows the contents of this lazy cell for the duration of…",0,[[["self"],["f"]],["t"]]],[11,"borrow_mut_with","","Borrows the contents of this `LazyCell` mutably for the…",0,[[["self"],["f"]],["t"]]],[11,"try_borrow_with","","Same as `borrow_with`, but allows the initializing…",0,[[["self"],["f"]],["result"]]],[11,"try_borrow_mut_with","","Same as `borrow_mut_with`, but allows the initializing…",0,[[["self"],["f"]],["result"]]],[11,"into_inner","","Consumes this `LazyCell`, returning the underlying value.",0,[[["self"]],["option"]]],[11,"get","","Returns a copy of the contents of the lazy cell.",0,[[["self"]],["option"]]],[18,"NONE","","An empty `AtomicLazyCell`.",1,N],[11,"new","","Creates a new, empty, `AtomicLazyCell`.",1,[[],["atomiclazycell"]]],[11,"fill","","Put a value into this cell.",1,[[["self"],["t"]],["result"]]],[11,"replace","","Put a value into this cell.",1,[[["self"],["t"]],["option"]]],[11,"filled","","Test whether this cell has been previously filled.",1,[[["self"]],["bool"]]],[11,"borrow","","Borrows the contents of this lazy cell for the duration of…",1,[[["self"]],["option"]]],[11,"into_inner","","Consumes this `LazyCell`, returning the underlying value.",1,[[["self"]],["option"]]],[11,"get","","Returns a copy of the contents of the lazy cell.",1,[[["self"]],["option"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"clone","","Create a clone of this `LazyCell`",0,[[["self"]],["lazycell"]]],[11,"clone","","Create a clone of this `AtomicLazyCell`",1,[[["self"]],["atomiclazycell"]]],[11,"default","","",0,[[],["lazycell"]]],[11,"default","","",1,[[],["atomiclazycell"]]]],"paths":[[3,"LazyCell"],[3,"AtomicLazyCell"]]};
searchIndex["levenshtein"]={"doc":"","items":[[5,"levenshtein","levenshtein","`levenshtein-rs` - levenshtein",N,[[["str"],["str"]],["usize"]]]],"paths":[]};
searchIndex["lexer"]={"doc":"","items":[[3,"Lexer","lexer","",N,N],[4,"TokenKind","","Keywords are single-ticked, operators back-ticked",N,N],[13,"Keyword","","",0,N],[13,"Operator","","",0,N],[13,"Identifier","","",0,N],[13,"IntegerLiteral","","",0,N],[13,"Comment","","",0,N],[13,"Whitespace","","",0,N],[4,"ErrorKind","","",N,N],[13,"UnclosedComment","","",1,N],[13,"UnexpectedCharacter","","",1,N],[4,"Warning","","",N,N],[13,"CommentSeparatorInsideComment","","",2,N],[4,"Keyword","","",N,N],[13,"Abstract","","",3,N],[13,"Assert","","",3,N],[13,"Boolean","","",3,N],[13,"Break","","",3,N],[13,"Byte","","",3,N],[13,"Case","","",3,N],[13,"Catch","","",3,N],[13,"Char","","",3,N],[13,"Class","","",3,N],[13,"Const","","",3,N],[13,"Continue","","",3,N],[13,"Default","","",3,N],[13,"Double","","",3,N],[13,"Do","","",3,N],[13,"Else","","",3,N],[13,"Enum","","",3,N],[13,"Extends","","",3,N],[13,"False","","",3,N],[13,"Finally","","",3,N],[13,"Final","","",3,N],[13,"Float","","",3,N],[13,"For","","",3,N],[13,"Goto","","",3,N],[13,"If","","",3,N],[13,"Implements","","",3,N],[13,"Import","","",3,N],[13,"InstanceOf","","",3,N],[13,"Interface","","",3,N],[13,"Int","","",3,N],[13,"Long","","",3,N],[13,"Native","","",3,N],[13,"New","","",3,N],[13,"Null","","",3,N],[13,"Package","","",3,N],[13,"Private","","",3,N],[13,"Protected","","",3,N],[13,"Public","","",3,N],[13,"Return","","",3,N],[13,"Short","","",3,N],[13,"Static","","",3,N],[13,"StrictFp","","",3,N],[13,"Super","","",3,N],[13,"Switch","","",3,N],[13,"Synchronized","","",3,N],[13,"This","","",3,N],[13,"Throws","","",3,N],[13,"Throw","","",3,N],[13,"Transient","","",3,N],[13,"True","","",3,N],[13,"Try","","",3,N],[13,"Void","","",3,N],[13,"Volatile","","",3,N],[13,"While","","",3,N],[4,"Operator","","",N,N],[13,"ExclaimEqual","","",4,N],[13,"Exclaim","","",4,N],[13,"LeftParen","","",4,N],[13,"RightParen","","",4,N],[13,"StarEqual","","",4,N],[13,"Star","","",4,N],[13,"DoublePlus","","",4,N],[13,"PlusEqual","","",4,N],[13,"Plus","","",4,N],[13,"Comma","","",4,N],[13,"MinusEqual","","",4,N],[13,"DoubleMinus","","",4,N],[13,"Minus","","",4,N],[13,"Dot","","",4,N],[13,"SlashEqual","","",4,N],[13,"Slash","","",4,N],[13,"Colon","","",4,N],[13,"Semicolon","","",4,N],[13,"DoubleLeftChevronEqual","","",4,N],[13,"DoubleLeftChevron","","",4,N],[13,"LeftChevronEqual","","",4,N],[13,"LeftChevron","","",4,N],[13,"DoubleEqual","","",4,N],[13,"Equal","","",4,N],[13,"RightChevronEqual","","",4,N],[13,"DoubleRightChevronEqual","","",4,N],[13,"TripleRightChevronEqual","","",4,N],[13,"TripleRightChevron","","",4,N],[13,"DoubleRightChevron","","",4,N],[13,"RightChevron","","",4,N],[13,"QuestionMark","","",4,N],[13,"PercentEqual","","",4,N],[13,"Percent","","",4,N],[13,"AmpersandEqual","","",4,N],[13,"DoubleAmpersand","","",4,N],[13,"Ampersand","","",4,N],[13,"LeftBracket","","",4,N],[13,"RightBracket","","",4,N],[13,"CaretEqual","","",4,N],[13,"Caret","","",4,N],[13,"LeftBrace","","",4,N],[13,"RightBrace","","",4,N],[13,"Tilde","","",4,N],[13,"PipeEqual","","",4,N],[13,"DoublePipe","","",4,N],[13,"Pipe","","",4,N],[0,"lextest","","",N,N],[3,"Output","lexer::lextest","Our default `Display` output for each `TokenKind` is less…",N,N],[11,"new","","",5,[[["tokenkind"]],["self"]]],[6,"TokenResult","lexer","",N,N],[6,"Token","","",N,N],[6,"LexicalError","","",N,N],[6,"IntLit","","",N,N],[11,"new","","",6,[[["stringtable"],["context"]],["self"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into_iter","","",6,[[["self"]],["i"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"as_fail","","",1,[[["self"]],["fail"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"as_fail","","",2,[[["self"]],["fail"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","lexer::lextest","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"cmp","lexer","",0,[[["self"],["tokenkind"]],["ordering"]]],[11,"cmp","","",3,[[["self"],["keyword"]],["ordering"]]],[11,"cmp","","",4,[[["self"],["operator"]],["ordering"]]],[11,"eq","","",0,[[["self"],["tokenkind"]],["bool"]]],[11,"ne","","",0,[[["self"],["tokenkind"]],["bool"]]],[11,"eq","","",3,[[["self"],["keyword"]],["bool"]]],[11,"eq","","",4,[[["self"],["operator"]],["bool"]]],[11,"clone","","",0,[[["self"]],["tokenkind"]]],[11,"clone","","",3,[[["self"]],["keyword"]]],[11,"clone","","",4,[[["self"]],["operator"]]],[11,"partial_cmp","","",0,[[["self"],["tokenkind"]],["option",["ordering"]]]],[11,"lt","","",0,[[["self"],["tokenkind"]],["bool"]]],[11,"le","","",0,[[["self"],["tokenkind"]],["bool"]]],[11,"gt","","",0,[[["self"],["tokenkind"]],["bool"]]],[11,"ge","","",0,[[["self"],["tokenkind"]],["bool"]]],[11,"partial_cmp","","",3,[[["self"],["keyword"]],["option",["ordering"]]]],[11,"partial_cmp","","",4,[[["self"],["operator"]],["option",["ordering"]]]],[11,"next","","",6,[[["self"]],["option"]]],[11,"fmt","lexer::lextest","",5,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","lexer","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"try_from","","",3,[[["str"]],["result",["keyword"]]]],[11,"hash","","",0,N],[11,"hash","","",3,N],[11,"hash","","",4,N],[11,"cause","","",1,[[["self"]],["option",["fail"]]]],[11,"backtrace","","",1,[[["self"]],["option",["backtrace"]]]],[11,"cause","","",2,[[["self"]],["option",["fail"]]]],[11,"backtrace","","",2,[[["self"]],["option",["backtrace"]]]]],"paths":[[4,"TokenKind"],[4,"ErrorKind"],[4,"Warning"],[4,"Keyword"],[4,"Operator"],[3,"Output"],[3,"Lexer"]]};
searchIndex["libc"]={"doc":"Crate docs","items":[[4,"c_void","libc","Equivalent to C's `void` type when used as a [pointer].",N,N],[3,"group","","",N,N],[12,"gr_name","","",0,N],[12,"gr_passwd","","",0,N],[12,"gr_gid","","",0,N],[12,"gr_mem","","",0,N],[3,"utimbuf","","",N,N],[12,"actime","","",1,N],[12,"modtime","","",1,N],[3,"timeval","","",N,N],[12,"tv_sec","","",2,N],[12,"tv_usec","","",2,N],[3,"timespec","","",N,N],[12,"tv_sec","","",3,N],[12,"tv_nsec","","",3,N],[3,"rlimit","","",N,N],[12,"rlim_cur","","",4,N],[12,"rlim_max","","",4,N],[3,"rusage","","",N,N],[12,"ru_utime","","",5,N],[12,"ru_stime","","",5,N],[12,"ru_maxrss","","",5,N],[12,"ru_ixrss","","",5,N],[12,"ru_idrss","","",5,N],[12,"ru_isrss","","",5,N],[12,"ru_minflt","","",5,N],[12,"ru_majflt","","",5,N],[12,"ru_nswap","","",5,N],[12,"ru_inblock","","",5,N],[12,"ru_oublock","","",5,N],[12,"ru_msgsnd","","",5,N],[12,"ru_msgrcv","","",5,N],[12,"ru_nsignals","","",5,N],[12,"ru_nvcsw","","",5,N],[12,"ru_nivcsw","","",5,N],[3,"in_addr","","",N,N],[12,"s_addr","","",6,N],[3,"in6_addr","","",N,N],[12,"s6_addr","","",7,N],[3,"ip_mreq","","",N,N],[12,"imr_multiaddr","","",8,N],[12,"imr_interface","","",8,N],[3,"ipv6_mreq","","",N,N],[12,"ipv6mr_multiaddr","","",9,N],[12,"ipv6mr_interface","","",9,N],[3,"hostent","","",N,N],[12,"h_name","","",10,N],[12,"h_aliases","","",10,N],[12,"h_addrtype","","",10,N],[12,"h_length","","",10,N],[12,"h_addr_list","","",10,N],[3,"iovec","","",N,N],[12,"iov_base","","",11,N],[12,"iov_len","","",11,N],[3,"pollfd","","",N,N],[12,"fd","","",12,N],[12,"events","","",12,N],[12,"revents","","",12,N],[3,"winsize","","",N,N],[12,"ws_row","","",13,N],[12,"ws_col","","",13,N],[12,"ws_xpixel","","",13,N],[12,"ws_ypixel","","",13,N],[3,"linger","","",N,N],[12,"l_onoff","","",14,N],[12,"l_linger","","",14,N],[3,"sigval","","",N,N],[12,"sival_ptr","","",15,N],[3,"itimerval","","",N,N],[12,"it_interval","","",16,N],[12,"it_value","","",16,N],[3,"tms","","",N,N],[12,"tms_utime","","",17,N],[12,"tms_stime","","",17,N],[12,"tms_cutime","","",17,N],[12,"tms_cstime","","",17,N],[3,"servent","","",N,N],[12,"s_name","","",18,N],[12,"s_aliases","","",18,N],[12,"s_port","","",18,N],[12,"s_proto","","",18,N],[3,"protoent","","",N,N],[12,"p_name","","",19,N],[12,"p_aliases","","",19,N],[12,"p_proto","","",19,N],[3,"sockaddr","","",N,N],[12,"sa_family","","",20,N],[12,"sa_data","","",20,N],[3,"sockaddr_in","","",N,N],[12,"sin_family","","",21,N],[12,"sin_port","","",21,N],[12,"sin_addr","","",21,N],[12,"sin_zero","","",21,N],[3,"sockaddr_in6","","",N,N],[12,"sin6_family","","",22,N],[12,"sin6_port","","",22,N],[12,"sin6_flowinfo","","",22,N],[12,"sin6_addr","","",22,N],[12,"sin6_scope_id","","",22,N],[3,"sockaddr_un","","",N,N],[12,"sun_family","","",23,N],[12,"sun_path","","",23,N],[3,"sockaddr_storage","","",N,N],[12,"ss_family","","",24,N],[3,"addrinfo","","",N,N],[12,"ai_flags","","",25,N],[12,"ai_family","","",25,N],[12,"ai_socktype","","",25,N],[12,"ai_protocol","","",25,N],[12,"ai_addrlen","","",25,N],[12,"ai_addr","","",25,N],[12,"ai_canonname","","",25,N],[12,"ai_next","","",25,N],[3,"sockaddr_nl","","",N,N],[12,"nl_family","","",26,N],[12,"nl_pid","","",26,N],[12,"nl_groups","","",26,N],[3,"sockaddr_ll","","",N,N],[12,"sll_family","","",27,N],[12,"sll_protocol","","",27,N],[12,"sll_ifindex","","",27,N],[12,"sll_hatype","","",27,N],[12,"sll_pkttype","","",27,N],[12,"sll_halen","","",27,N],[12,"sll_addr","","",27,N],[3,"fd_set","","",N,N],[3,"tm","","",N,N],[12,"tm_sec","","",28,N],[12,"tm_min","","",28,N],[12,"tm_hour","","",28,N],[12,"tm_mday","","",28,N],[12,"tm_mon","","",28,N],[12,"tm_year","","",28,N],[12,"tm_wday","","",28,N],[12,"tm_yday","","",28,N],[12,"tm_isdst","","",28,N],[12,"tm_gmtoff","","",28,N],[12,"tm_zone","","",28,N],[3,"sched_param","","",N,N],[12,"sched_priority","","",29,N],[3,"Dl_info","","",N,N],[12,"dli_fname","","",30,N],[12,"dli_fbase","","",30,N],[12,"dli_sname","","",30,N],[12,"dli_saddr","","",30,N],[3,"epoll_event","","",N,N],[12,"events","","",31,N],[12,"u64","","",31,N],[3,"utsname","","",N,N],[12,"sysname","","",32,N],[12,"nodename","","",32,N],[12,"release","","",32,N],[12,"version","","",32,N],[12,"machine","","",32,N],[12,"domainname","","",32,N],[3,"lconv","","",N,N],[12,"decimal_point","","",33,N],[12,"thousands_sep","","",33,N],[12,"grouping","","",33,N],[12,"int_curr_symbol","","",33,N],[12,"currency_symbol","","",33,N],[12,"mon_decimal_point","","",33,N],[12,"mon_thousands_sep","","",33,N],[12,"mon_grouping","","",33,N],[12,"positive_sign","","",33,N],[12,"negative_sign","","",33,N],[12,"int_frac_digits","","",33,N],[12,"frac_digits","","",33,N],[12,"p_cs_precedes","","",33,N],[12,"p_sep_by_space","","",33,N],[12,"n_cs_precedes","","",33,N],[12,"n_sep_by_space","","",33,N],[12,"p_sign_posn","","",33,N],[12,"n_sign_posn","","",33,N],[12,"int_p_cs_precedes","","",33,N],[12,"int_p_sep_by_space","","",33,N],[12,"int_n_cs_precedes","","",33,N],[12,"int_n_sep_by_space","","",33,N],[12,"int_p_sign_posn","","",33,N],[12,"int_n_sign_posn","","",33,N],[3,"sigevent","","",N,N],[12,"sigev_value","","",34,N],[12,"sigev_signo","","",34,N],[12,"sigev_notify","","",34,N],[12,"sigev_notify_thread_id","","",34,N],[3,"in_pktinfo","","",N,N],[12,"ipi_ifindex","","",35,N],[12,"ipi_spec_dst","","",35,N],[12,"ipi_addr","","",35,N],[3,"ifaddrs","","",N,N],[12,"ifa_next","","",36,N],[12,"ifa_name","","",36,N],[12,"ifa_flags","","",36,N],[12,"ifa_addr","","",36,N],[12,"ifa_netmask","","",36,N],[12,"ifa_ifu","","",36,N],[12,"ifa_data","","",36,N],[3,"in6_rtmsg","","",N,N],[3,"arpreq","","",N,N],[12,"arp_pa","","",37,N],[12,"arp_ha","","",37,N],[12,"arp_flags","","",37,N],[12,"arp_netmask","","",37,N],[12,"arp_dev","","",37,N],[3,"arpreq_old","","",N,N],[12,"arp_pa","","",38,N],[12,"arp_ha","","",38,N],[12,"arp_flags","","",38,N],[12,"arp_netmask","","",38,N],[3,"arphdr","","",N,N],[12,"ar_hrd","","",39,N],[12,"ar_pro","","",39,N],[12,"ar_hln","","",39,N],[12,"ar_pln","","",39,N],[12,"ar_op","","",39,N],[3,"dirent","","",N,N],[12,"d_ino","","",40,N],[12,"d_off","","",40,N],[12,"d_reclen","","",40,N],[12,"d_type","","",40,N],[12,"d_name","","",40,N],[3,"dirent64","","",N,N],[12,"d_ino","","",41,N],[12,"d_off","","",41,N],[12,"d_reclen","","",41,N],[12,"d_type","","",41,N],[12,"d_name","","",41,N],[3,"rlimit64","","",N,N],[12,"rlim_cur","","",42,N],[12,"rlim_max","","",42,N],[3,"glob_t","","",N,N],[12,"gl_pathc","","",43,N],[12,"gl_pathv","","",43,N],[12,"gl_offs","","",43,N],[12,"gl_flags","","",43,N],[3,"pthread_mutex_t","","",N,N],[3,"pthread_rwlock_t","","",N,N],[3,"pthread_mutexattr_t","","",N,N],[3,"pthread_rwlockattr_t","","",N,N],[3,"pthread_cond_t","","",N,N],[3,"pthread_condattr_t","","",N,N],[3,"passwd","","",N,N],[12,"pw_name","","",44,N],[12,"pw_passwd","","",44,N],[12,"pw_uid","","",44,N],[12,"pw_gid","","",44,N],[12,"pw_gecos","","",44,N],[12,"pw_dir","","",44,N],[12,"pw_shell","","",44,N],[3,"spwd","","",N,N],[12,"sp_namp","","",45,N],[12,"sp_pwdp","","",45,N],[12,"sp_lstchg","","",45,N],[12,"sp_min","","",45,N],[12,"sp_max","","",45,N],[12,"sp_warn","","",45,N],[12,"sp_inact","","",45,N],[12,"sp_expire","","",45,N],[12,"sp_flag","","",45,N],[3,"dqblk","","",N,N],[12,"dqb_bhardlimit","","",46,N],[12,"dqb_bsoftlimit","","",46,N],[12,"dqb_curspace","","",46,N],[12,"dqb_ihardlimit","","",46,N],[12,"dqb_isoftlimit","","",46,N],[12,"dqb_curinodes","","",46,N],[12,"dqb_btime","","",46,N],[12,"dqb_itime","","",46,N],[12,"dqb_valid","","",46,N],[3,"signalfd_siginfo","","",N,N],[12,"ssi_signo","","",47,N],[12,"ssi_errno","","",47,N],[12,"ssi_code","","",47,N],[12,"ssi_pid","","",47,N],[12,"ssi_uid","","",47,N],[12,"ssi_fd","","",47,N],[12,"ssi_tid","","",47,N],[12,"ssi_band","","",47,N],[12,"ssi_overrun","","",47,N],[12,"ssi_trapno","","",47,N],[12,"ssi_status","","",47,N],[12,"ssi_int","","",47,N],[12,"ssi_ptr","","",47,N],[12,"ssi_utime","","",47,N],[12,"ssi_stime","","",47,N],[12,"ssi_addr","","",47,N],[12,"ssi_addr_lsb","","",47,N],[12,"ssi_syscall","","",47,N],[12,"ssi_call_addr","","",47,N],[12,"ssi_arch","","",47,N],[3,"itimerspec","","",N,N],[12,"it_interval","","",48,N],[12,"it_value","","",48,N],[3,"fsid_t","","",N,N],[3,"mq_attr","","",N,N],[12,"mq_flags","","",49,N],[12,"mq_maxmsg","","",49,N],[12,"mq_msgsize","","",49,N],[12,"mq_curmsgs","","",49,N],[3,"packet_mreq","","",N,N],[12,"mr_ifindex","","",50,N],[12,"mr_type","","",50,N],[12,"mr_alen","","",50,N],[12,"mr_address","","",50,N],[3,"cpu_set_t","","",N,N],[3,"if_nameindex","","",N,N],[12,"if_index","","",51,N],[12,"if_name","","",51,N],[3,"msginfo","","",N,N],[12,"msgpool","","",52,N],[12,"msgmap","","",52,N],[12,"msgmax","","",52,N],[12,"msgmnb","","",52,N],[12,"msgmni","","",52,N],[12,"msgssz","","",52,N],[12,"msgtql","","",52,N],[12,"msgseg","","",52,N],[3,"mmsghdr","","",N,N],[12,"msg_hdr","","",53,N],[12,"msg_len","","",53,N],[3,"sembuf","","",N,N],[12,"sem_num","","",54,N],[12,"sem_op","","",54,N],[12,"sem_flg","","",54,N],[3,"input_event","","",N,N],[12,"time","","",55,N],[12,"type_","","",55,N],[12,"code","","",55,N],[12,"value","","",55,N],[3,"input_id","","",N,N],[12,"bustype","","",56,N],[12,"vendor","","",56,N],[12,"product","","",56,N],[12,"version","","",56,N],[3,"input_absinfo","","",N,N],[12,"value","","",57,N],[12,"minimum","","",57,N],[12,"maximum","","",57,N],[12,"fuzz","","",57,N],[12,"flat","","",57,N],[12,"resolution","","",57,N],[3,"input_keymap_entry","","",N,N],[12,"flags","","",58,N],[12,"len","","",58,N],[12,"index","","",58,N],[12,"keycode","","",58,N],[12,"scancode","","",58,N],[3,"input_mask","","",N,N],[12,"type_","","",59,N],[12,"codes_size","","",59,N],[12,"codes_ptr","","",59,N],[3,"ff_replay","","",N,N],[12,"length","","",60,N],[12,"delay","","",60,N],[3,"ff_trigger","","",N,N],[12,"button","","",61,N],[12,"interval","","",61,N],[3,"ff_envelope","","",N,N],[12,"attack_length","","",62,N],[12,"attack_level","","",62,N],[12,"fade_length","","",62,N],[12,"fade_level","","",62,N],[3,"ff_constant_effect","","",N,N],[12,"level","","",63,N],[12,"envelope","","",63,N],[3,"ff_ramp_effect","","",N,N],[12,"start_level","","",64,N],[12,"end_level","","",64,N],[12,"envelope","","",64,N],[3,"ff_condition_effect","","",N,N],[12,"right_saturation","","",65,N],[12,"left_saturation","","",65,N],[12,"right_coeff","","",65,N],[12,"left_coeff","","",65,N],[12,"deadband","","",65,N],[12,"center","","",65,N],[3,"ff_periodic_effect","","",N,N],[12,"waveform","","",66,N],[12,"period","","",66,N],[12,"magnitude","","",66,N],[12,"offset","","",66,N],[12,"phase","","",66,N],[12,"envelope","","",66,N],[12,"custom_len","","",66,N],[12,"custom_data","","",66,N],[3,"ff_rumble_effect","","",N,N],[12,"strong_magnitude","","",67,N],[12,"weak_magnitude","","",67,N],[3,"ff_effect","","",N,N],[12,"type_","","",68,N],[12,"id","","",68,N],[12,"direction","","",68,N],[12,"trigger","","",68,N],[12,"replay","","",68,N],[12,"u","","",68,N],[3,"dl_phdr_info","","",N,N],[12,"dlpi_addr","","",69,N],[12,"dlpi_name","","",69,N],[12,"dlpi_phdr","","",69,N],[12,"dlpi_phnum","","",69,N],[12,"dlpi_adds","","",69,N],[12,"dlpi_subs","","",69,N],[12,"dlpi_tls_modid","","",69,N],[12,"dlpi_tls_data","","",69,N],[3,"Elf32_Ehdr","","",N,N],[12,"e_ident","","",70,N],[12,"e_type","","",70,N],[12,"e_machine","","",70,N],[12,"e_version","","",70,N],[12,"e_entry","","",70,N],[12,"e_phoff","","",70,N],[12,"e_shoff","","",70,N],[12,"e_flags","","",70,N],[12,"e_ehsize","","",70,N],[12,"e_phentsize","","",70,N],[12,"e_phnum","","",70,N],[12,"e_shentsize","","",70,N],[12,"e_shnum","","",70,N],[12,"e_shstrndx","","",70,N],[3,"Elf64_Ehdr","","",N,N],[12,"e_ident","","",71,N],[12,"e_type","","",71,N],[12,"e_machine","","",71,N],[12,"e_version","","",71,N],[12,"e_entry","","",71,N],[12,"e_phoff","","",71,N],[12,"e_shoff","","",71,N],[12,"e_flags","","",71,N],[12,"e_ehsize","","",71,N],[12,"e_phentsize","","",71,N],[12,"e_phnum","","",71,N],[12,"e_shentsize","","",71,N],[12,"e_shnum","","",71,N],[12,"e_shstrndx","","",71,N],[3,"Elf32_Sym","","",N,N],[12,"st_name","","",72,N],[12,"st_value","","",72,N],[12,"st_size","","",72,N],[12,"st_info","","",72,N],[12,"st_other","","",72,N],[12,"st_shndx","","",72,N],[3,"Elf64_Sym","","",N,N],[12,"st_name","","",73,N],[12,"st_info","","",73,N],[12,"st_other","","",73,N],[12,"st_shndx","","",73,N],[12,"st_value","","",73,N],[12,"st_size","","",73,N],[3,"Elf32_Phdr","","",N,N],[12,"p_type","","",74,N],[12,"p_offset","","",74,N],[12,"p_vaddr","","",74,N],[12,"p_paddr","","",74,N],[12,"p_filesz","","",74,N],[12,"p_memsz","","",74,N],[12,"p_flags","","",74,N],[12,"p_align","","",74,N],[3,"Elf64_Phdr","","",N,N],[12,"p_type","","",75,N],[12,"p_flags","","",75,N],[12,"p_offset","","",75,N],[12,"p_vaddr","","",75,N],[12,"p_paddr","","",75,N],[12,"p_filesz","","",75,N],[12,"p_memsz","","",75,N],[12,"p_align","","",75,N],[3,"Elf32_Shdr","","",N,N],[12,"sh_name","","",76,N],[12,"sh_type","","",76,N],[12,"sh_flags","","",76,N],[12,"sh_addr","","",76,N],[12,"sh_offset","","",76,N],[12,"sh_size","","",76,N],[12,"sh_link","","",76,N],[12,"sh_info","","",76,N],[12,"sh_addralign","","",76,N],[12,"sh_entsize","","",76,N],[3,"Elf64_Shdr","","",N,N],[12,"sh_name","","",77,N],[12,"sh_type","","",77,N],[12,"sh_flags","","",77,N],[12,"sh_addr","","",77,N],[12,"sh_offset","","",77,N],[12,"sh_size","","",77,N],[12,"sh_link","","",77,N],[12,"sh_info","","",77,N],[12,"sh_addralign","","",77,N],[12,"sh_entsize","","",77,N],[3,"Elf32_Chdr","","",N,N],[12,"ch_type","","",78,N],[12,"ch_size","","",78,N],[12,"ch_addralign","","",78,N],[3,"Elf64_Chdr","","",N,N],[12,"ch_type","","",79,N],[12,"ch_reserved","","",79,N],[12,"ch_size","","",79,N],[12,"ch_addralign","","",79,N],[3,"ucred","","",N,N],[12,"pid","","",80,N],[12,"uid","","",80,N],[12,"gid","","",80,N],[3,"mntent","","",N,N],[12,"mnt_fsname","","",81,N],[12,"mnt_dir","","",81,N],[12,"mnt_type","","",81,N],[12,"mnt_opts","","",81,N],[12,"mnt_freq","","",81,N],[12,"mnt_passno","","",81,N],[3,"posix_spawn_file_actions_t","","",N,N],[3,"posix_spawnattr_t","","",N,N],[3,"genlmsghdr","","",N,N],[12,"cmd","","",82,N],[12,"version","","",82,N],[12,"reserved","","",82,N],[3,"in6_pktinfo","","",N,N],[12,"ipi6_addr","","",83,N],[12,"ipi6_ifindex","","",83,N],[3,"arpd_request","","",N,N],[12,"req","","",84,N],[12,"ip","","",84,N],[12,"dev","","",84,N],[12,"stamp","","",84,N],[12,"updated","","",84,N],[12,"ha","","",84,N],[3,"aiocb","","",N,N],[12,"aio_fildes","","",85,N],[12,"aio_lio_opcode","","",85,N],[12,"aio_reqprio","","",85,N],[12,"aio_buf","","",85,N],[12,"aio_nbytes","","",85,N],[12,"aio_sigevent","","",85,N],[12,"aio_offset","","",85,N],[3,"__exit_status","","",N,N],[12,"e_termination","","",86,N],[12,"e_exit","","",86,N],[3,"__timeval","","",N,N],[12,"tv_sec","","",87,N],[12,"tv_usec","","",87,N],[3,"utmpx","","",N,N],[12,"ut_type","","",88,N],[12,"ut_pid","","",88,N],[12,"ut_line","","",88,N],[12,"ut_id","","",88,N],[12,"ut_user","","",88,N],[12,"ut_host","","",88,N],[12,"ut_exit","","",88,N],[12,"ut_session","","",88,N],[12,"ut_tv","","",88,N],[12,"ut_addr_v6","","",88,N],[3,"sigaction","","",N,N],[12,"sa_sigaction","","",89,N],[12,"sa_mask","","",89,N],[12,"sa_flags","","",89,N],[12,"sa_restorer","","",89,N],[3,"stack_t","","",N,N],[12,"ss_sp","","",90,N],[12,"ss_flags","","",90,N],[12,"ss_size","","",90,N],[3,"siginfo_t","","",N,N],[12,"si_signo","","",91,N],[12,"si_errno","","",91,N],[12,"si_code","","",91,N],[12,"_pad","","",91,N],[3,"glob64_t","","",N,N],[12,"gl_pathc","","",92,N],[12,"gl_pathv","","",92,N],[12,"gl_offs","","",92,N],[12,"gl_flags","","",92,N],[3,"statfs","","",N,N],[12,"f_type","","",93,N],[12,"f_bsize","","",93,N],[12,"f_blocks","","",93,N],[12,"f_bfree","","",93,N],[12,"f_bavail","","",93,N],[12,"f_files","","",93,N],[12,"f_ffree","","",93,N],[12,"f_fsid","","",93,N],[12,"f_namelen","","",93,N],[12,"f_frsize","","",93,N],[3,"msghdr","","",N,N],[12,"msg_name","","",94,N],[12,"msg_namelen","","",94,N],[12,"msg_iov","","",94,N],[12,"msg_iovlen","","",94,N],[12,"msg_control","","",94,N],[12,"msg_controllen","","",94,N],[12,"msg_flags","","",94,N],[3,"cmsghdr","","",N,N],[12,"cmsg_len","","",95,N],[12,"cmsg_level","","",95,N],[12,"cmsg_type","","",95,N],[3,"termios","","",N,N],[12,"c_iflag","","",96,N],[12,"c_oflag","","",96,N],[12,"c_cflag","","",96,N],[12,"c_lflag","","",96,N],[12,"c_line","","",96,N],[12,"c_cc","","",96,N],[12,"c_ispeed","","",96,N],[12,"c_ospeed","","",96,N],[3,"flock","","",N,N],[12,"l_type","","",97,N],[12,"l_whence","","",97,N],[12,"l_start","","",97,N],[12,"l_len","","",97,N],[12,"l_pid","","",97,N],[3,"sem_t","","",N,N],[3,"mallinfo","","",N,N],[12,"arena","","",98,N],[12,"ordblks","","",98,N],[12,"smblks","","",98,N],[12,"hblks","","",98,N],[12,"hblkhd","","",98,N],[12,"usmblks","","",98,N],[12,"fsmblks","","",98,N],[12,"uordblks","","",98,N],[12,"fordblks","","",98,N],[12,"keepcost","","",98,N],[3,"nlmsghdr","","",N,N],[12,"nlmsg_len","","",99,N],[12,"nlmsg_type","","",99,N],[12,"nlmsg_flags","","",99,N],[12,"nlmsg_seq","","",99,N],[12,"nlmsg_pid","","",99,N],[3,"nlmsgerr","","",N,N],[12,"error","","",100,N],[12,"msg","","",100,N],[3,"nl_pktinfo","","",N,N],[12,"group","","",101,N],[3,"nl_mmap_req","","",N,N],[12,"nm_block_size","","",102,N],[12,"nm_block_nr","","",102,N],[12,"nm_frame_size","","",102,N],[12,"nm_frame_nr","","",102,N],[3,"nl_mmap_hdr","","",N,N],[12,"nm_status","","",103,N],[12,"nm_len","","",103,N],[12,"nm_group","","",103,N],[12,"nm_pid","","",103,N],[12,"nm_uid","","",103,N],[12,"nm_gid","","",103,N],[3,"nlattr","","",N,N],[12,"nla_len","","",104,N],[12,"nla_type","","",104,N],[3,"rtentry","","",N,N],[12,"rt_pad1","","",105,N],[12,"rt_dst","","",105,N],[12,"rt_gateway","","",105,N],[12,"rt_genmask","","",105,N],[12,"rt_flags","","",105,N],[12,"rt_pad2","","",105,N],[12,"rt_pad3","","",105,N],[12,"rt_tos","","",105,N],[12,"rt_class","","",105,N],[12,"rt_pad4","","",105,N],[12,"rt_metric","","",105,N],[12,"rt_dev","","",105,N],[12,"rt_mtu","","",105,N],[12,"rt_window","","",105,N],[12,"rt_irtt","","",105,N],[3,"sigset_t","","",N,N],[3,"sysinfo","","",N,N],[12,"uptime","","",106,N],[12,"loads","","",106,N],[12,"totalram","","",106,N],[12,"freeram","","",106,N],[12,"sharedram","","",106,N],[12,"bufferram","","",106,N],[12,"totalswap","","",106,N],[12,"freeswap","","",106,N],[12,"procs","","",106,N],[12,"pad","","",106,N],[12,"totalhigh","","",106,N],[12,"freehigh","","",106,N],[12,"mem_unit","","",106,N],[12,"_f","","",106,N],[3,"msqid_ds","","",N,N],[12,"msg_perm","","",107,N],[12,"msg_stime","","",107,N],[12,"msg_rtime","","",107,N],[12,"msg_ctime","","",107,N],[12,"msg_qnum","","",107,N],[12,"msg_qbytes","","",107,N],[12,"msg_lspid","","",107,N],[12,"msg_lrpid","","",107,N],[3,"stat","","",N,N],[12,"st_dev","","",108,N],[12,"st_ino","","",108,N],[12,"st_nlink","","",108,N],[12,"st_mode","","",108,N],[12,"st_uid","","",108,N],[12,"st_gid","","",108,N],[12,"st_rdev","","",108,N],[12,"st_size","","",108,N],[12,"st_blksize","","",108,N],[12,"st_blocks","","",108,N],[12,"st_atime","","",108,N],[12,"st_atime_nsec","","",108,N],[12,"st_mtime","","",108,N],[12,"st_mtime_nsec","","",108,N],[12,"st_ctime","","",108,N],[12,"st_ctime_nsec","","",108,N],[3,"stat64","","",N,N],[12,"st_dev","","",109,N],[12,"st_ino","","",109,N],[12,"st_nlink","","",109,N],[12,"st_mode","","",109,N],[12,"st_uid","","",109,N],[12,"st_gid","","",109,N],[12,"st_rdev","","",109,N],[12,"st_size","","",109,N],[12,"st_blksize","","",109,N],[12,"st_blocks","","",109,N],[12,"st_atime","","",109,N],[12,"st_atime_nsec","","",109,N],[12,"st_mtime","","",109,N],[12,"st_mtime_nsec","","",109,N],[12,"st_ctime","","",109,N],[12,"st_ctime_nsec","","",109,N],[3,"statfs64","","",N,N],[12,"f_type","","",110,N],[12,"f_bsize","","",110,N],[12,"f_blocks","","",110,N],[12,"f_bfree","","",110,N],[12,"f_bavail","","",110,N],[12,"f_files","","",110,N],[12,"f_ffree","","",110,N],[12,"f_fsid","","",110,N],[12,"f_namelen","","",110,N],[12,"f_frsize","","",110,N],[12,"f_flags","","",110,N],[12,"f_spare","","",110,N],[3,"statvfs64","","",N,N],[12,"f_bsize","","",111,N],[12,"f_frsize","","",111,N],[12,"f_blocks","","",111,N],[12,"f_bfree","","",111,N],[12,"f_bavail","","",111,N],[12,"f_files","","",111,N],[12,"f_ffree","","",111,N],[12,"f_favail","","",111,N],[12,"f_fsid","","",111,N],[12,"f_flag","","",111,N],[12,"f_namemax","","",111,N],[3,"pthread_attr_t","","",N,N],[3,"_libc_fpxreg","","",N,N],[12,"significand","","",112,N],[12,"exponent","","",112,N],[3,"_libc_xmmreg","","",N,N],[12,"element","","",113,N],[3,"_libc_fpstate","","",N,N],[12,"cwd","","",114,N],[12,"swd","","",114,N],[12,"ftw","","",114,N],[12,"fop","","",114,N],[12,"rip","","",114,N],[12,"rdp","","",114,N],[12,"mxcsr","","",114,N],[12,"mxcr_mask","","",114,N],[12,"_st","","",114,N],[12,"_xmm","","",114,N],[3,"user_fpregs_struct","","",N,N],[12,"cwd","","",115,N],[12,"swd","","",115,N],[12,"ftw","","",115,N],[12,"fop","","",115,N],[12,"rip","","",115,N],[12,"rdp","","",115,N],[12,"mxcsr","","",115,N],[12,"mxcr_mask","","",115,N],[12,"st_space","","",115,N],[12,"xmm_space","","",115,N],[3,"user_regs_struct","","",N,N],[12,"r15","","",116,N],[12,"r14","","",116,N],[12,"r13","","",116,N],[12,"r12","","",116,N],[12,"rbp","","",116,N],[12,"rbx","","",116,N],[12,"r11","","",116,N],[12,"r10","","",116,N],[12,"r9","","",116,N],[12,"r8","","",116,N],[12,"rax","","",116,N],[12,"rcx","","",116,N],[12,"rdx","","",116,N],[12,"rsi","","",116,N],[12,"rdi","","",116,N],[12,"orig_rax","","",116,N],[12,"rip","","",116,N],[12,"cs","","",116,N],[12,"eflags","","",116,N],[12,"rsp","","",116,N],[12,"ss","","",116,N],[12,"fs_base","","",116,N],[12,"gs_base","","",116,N],[12,"ds","","",116,N],[12,"es","","",116,N],[12,"fs","","",116,N],[12,"gs","","",116,N],[3,"user","","",N,N],[12,"regs","","",117,N],[12,"u_fpvalid","","",117,N],[12,"i387","","",117,N],[12,"u_tsize","","",117,N],[12,"u_dsize","","",117,N],[12,"u_ssize","","",117,N],[12,"start_code","","",117,N],[12,"start_stack","","",117,N],[12,"signal","","",117,N],[12,"u_ar0","","",117,N],[12,"u_fpstate","","",117,N],[12,"magic","","",117,N],[12,"u_comm","","",117,N],[12,"u_debugreg","","",117,N],[3,"mcontext_t","","",N,N],[12,"gregs","","",118,N],[12,"fpregs","","",118,N],[3,"ucontext_t","","",N,N],[12,"uc_flags","","",119,N],[12,"uc_link","","",119,N],[12,"uc_stack","","",119,N],[12,"uc_mcontext","","",119,N],[12,"uc_sigmask","","",119,N],[3,"ipc_perm","","",N,N],[12,"__key","","",120,N],[12,"uid","","",120,N],[12,"gid","","",120,N],[12,"cuid","","",120,N],[12,"cgid","","",120,N],[12,"mode","","",120,N],[12,"__seq","","",120,N],[3,"shmid_ds","","",N,N],[12,"shm_perm","","",121,N],[12,"shm_segsz","","",121,N],[12,"shm_atime","","",121,N],[12,"shm_dtime","","",121,N],[12,"shm_ctime","","",121,N],[12,"shm_cpid","","",121,N],[12,"shm_lpid","","",121,N],[12,"shm_nattch","","",121,N],[3,"termios2","","",N,N],[12,"c_iflag","","",122,N],[12,"c_oflag","","",122,N],[12,"c_cflag","","",122,N],[12,"c_lflag","","",122,N],[12,"c_line","","",122,N],[12,"c_cc","","",122,N],[12,"c_ispeed","","",122,N],[12,"c_ospeed","","",122,N],[3,"statvfs","","",N,N],[12,"f_bsize","","",123,N],[12,"f_frsize","","",123,N],[12,"f_blocks","","",123,N],[12,"f_bfree","","",123,N],[12,"f_bavail","","",123,N],[12,"f_files","","",123,N],[12,"f_ffree","","",123,N],[12,"f_favail","","",123,N],[12,"f_fsid","","",123,N],[12,"f_flag","","",123,N],[12,"f_namemax","","",123,N],[4,"DIR","","",N,N],[4,"locale_t","","",N,N],[4,"FILE","","",N,N],[4,"fpos_t","","",N,N],[4,"timezone","","",N,N],[4,"fpos64_t","","",N,N],[5,"CMSG_FIRSTHDR","","",N,N],[5,"CMSG_NXTHDR","","",N,N],[5,"CMSG_DATA","","",N,N],[5,"CMSG_SPACE","","",N,[[["c_uint"]],["c_uint"]]],[5,"CMSG_LEN","","",N,[[["c_uint"]],["c_uint"]]],[5,"FD_CLR","","",N,N],[5,"FD_ISSET","","",N,N],[5,"FD_SET","","",N,N],[5,"FD_ZERO","","",N,N],[5,"WIFSTOPPED","","",N,[[["c_int"]],["bool"]]],[5,"WSTOPSIG","","",N,[[["c_int"]],["c_int"]]],[5,"WIFCONTINUED","","",N,[[["c_int"]],["bool"]]],[5,"WIFSIGNALED","","",N,[[["c_int"]],["bool"]]],[5,"WTERMSIG","","",N,[[["c_int"]],["c_int"]]],[5,"WIFEXITED","","",N,[[["c_int"]],["bool"]]],[5,"WEXITSTATUS","","",N,[[["c_int"]],["c_int"]]],[5,"WCOREDUMP","","",N,[[["c_int"]],["bool"]]],[5,"QCMD","","",N,[[["c_int"],["c_int"]],["c_int"]]],[5,"IPOPT_COPIED","","",N,[[["u8"]],["u8"]]],[5,"IPOPT_CLASS","","",N,[[["u8"]],["u8"]]],[5,"IPOPT_NUMBER","","",N,[[["u8"]],["u8"]]],[5,"CPU_ZERO","","",N,N],[5,"CPU_SET","","",N,N],[5,"CPU_CLR","","",N,N],[5,"CPU_ISSET","","",N,[[["usize"],["cpu_set_t"]],["bool"]]],[5,"CPU_EQUAL","","",N,[[["cpu_set_t"],["cpu_set_t"]],["bool"]]],[5,"major","","",N,[[["dev_t"]],["c_uint"]]],[5,"minor","","",N,[[["dev_t"]],["c_uint"]]],[5,"makedev","","",N,[[["c_uint"],["c_uint"]],["dev_t"]]],[5,"IPTOS_TOS","","",N,[[["u8"]],["u8"]]],[5,"IPTOS_PREC","","",N,[[["u8"]],["u8"]]],[5,"RT_TOS","","",N,[[["u8"]],["u8"]]],[5,"RT_ADDRCLASS","","",N,[[["u32"]],["u32"]]],[5,"RT_LOCALADDR","","",N,[[["u32"]],["bool"]]],[5,"NLA_ALIGN","","",N,[[["c_int"]],["c_int"]]],[5,"isalnum","","",N,N],[5,"isalpha","","",N,N],[5,"iscntrl","","",N,N],[5,"isdigit","","",N,N],[5,"isgraph","","",N,N],[5,"islower","","",N,N],[5,"isprint","","",N,N],[5,"ispunct","","",N,N],[5,"isspace","","",N,N],[5,"isupper","","",N,N],[5,"isxdigit","","",N,N],[5,"tolower","","",N,N],[5,"toupper","","",N,N],[5,"fopen","","",N,N],[5,"freopen","","",N,N],[5,"fflush","","",N,N],[5,"fclose","","",N,N],[5,"remove","","",N,N],[5,"rename","","",N,N],[5,"tmpfile","","",N,N],[5,"setvbuf","","",N,N],[5,"setbuf","","",N,N],[5,"getchar","","",N,N],[5,"putchar","","",N,N],[5,"fgetc","","",N,N],[5,"fgets","","",N,N],[5,"fputc","","",N,N],[5,"fputs","","",N,N],[5,"puts","","",N,N],[5,"ungetc","","",N,N],[5,"fread","","",N,N],[5,"fwrite","","",N,N],[5,"fseek","","",N,N],[5,"ftell","","",N,N],[5,"rewind","","",N,N],[5,"fgetpos","","",N,N],[5,"fsetpos","","",N,N],[5,"feof","","",N,N],[5,"ferror","","",N,N],[5,"perror","","",N,N],[5,"atoi","","",N,N],[5,"strtod","","",N,N],[5,"strtol","","",N,N],[5,"strtoul","","",N,N],[5,"calloc","","",N,N],[5,"malloc","","",N,N],[5,"realloc","","",N,N],[5,"free","","",N,N],[5,"abort","","",N,N],[5,"exit","","",N,N],[5,"_exit","","",N,N],[5,"atexit","","",N,N],[5,"system","","",N,N],[5,"getenv","","",N,N],[5,"strcpy","","",N,N],[5,"strncpy","","",N,N],[5,"strcat","","",N,N],[5,"strncat","","",N,N],[5,"strcmp","","",N,N],[5,"strncmp","","",N,N],[5,"strcoll","","",N,N],[5,"strchr","","",N,N],[5,"strrchr","","",N,N],[5,"strspn","","",N,N],[5,"strcspn","","",N,N],[5,"strdup","","",N,N],[5,"strpbrk","","",N,N],[5,"strstr","","",N,N],[5,"strcasecmp","","",N,N],[5,"strncasecmp","","",N,N],[5,"strlen","","",N,N],[5,"strnlen","","",N,N],[5,"strerror","","",N,N],[5,"strtok","","",N,N],[5,"strxfrm","","",N,N],[5,"wcslen","","",N,N],[5,"wcstombs","","",N,N],[5,"memchr","","",N,N],[5,"memcmp","","",N,N],[5,"memcpy","","",N,N],[5,"memmove","","",N,N],[5,"memset","","",N,N],[5,"getpwnam","","",N,N],[5,"getpwuid","","",N,N],[5,"fprintf","","",N,N],[5,"printf","","",N,N],[5,"snprintf","","",N,N],[5,"sprintf","","",N,N],[5,"fscanf","","",N,N],[5,"scanf","","",N,N],[5,"sscanf","","",N,N],[5,"getchar_unlocked","","",N,N],[5,"putchar_unlocked","","",N,N],[5,"socket","","",N,N],[5,"connect","","",N,N],[5,"listen","","",N,N],[5,"accept","","",N,N],[5,"getpeername","","",N,N],[5,"getsockname","","",N,N],[5,"setsockopt","","",N,N],[5,"socketpair","","",N,N],[5,"sendto","","",N,N],[5,"shutdown","","",N,N],[5,"chmod","","",N,N],[5,"fchmod","","",N,N],[5,"fstat","","",N,N],[5,"mkdir","","",N,N],[5,"stat","","",N,N],[5,"pclose","","",N,N],[5,"fdopen","","",N,N],[5,"fileno","","",N,N],[5,"open","","",N,N],[5,"creat","","",N,N],[5,"fcntl","","",N,N],[5,"opendir","","",N,N],[5,"fdopendir","","",N,N],[5,"readdir","","",N,N],[5,"readdir_r","","",N,N],[5,"closedir","","",N,N],[5,"rewinddir","","",N,N],[5,"openat","","",N,N],[5,"fchmodat","","",N,N],[5,"fchown","","",N,N],[5,"fchownat","","",N,N],[5,"fstatat","","",N,N],[5,"linkat","","",N,N],[5,"mkdirat","","",N,N],[5,"readlinkat","","",N,N],[5,"renameat","","",N,N],[5,"symlinkat","","",N,N],[5,"unlinkat","","",N,N],[5,"access","","",N,N],[5,"alarm","","",N,N],[5,"chdir","","",N,N],[5,"fchdir","","",N,N],[5,"chown","","",N,N],[5,"lchown","","",N,N],[5,"close","","",N,N],[5,"dup","","",N,N],[5,"dup2","","",N,N],[5,"execl","","",N,N],[5,"execle","","",N,N],[5,"execlp","","",N,N],[5,"execv","","",N,N],[5,"execve","","",N,N],[5,"execvp","","",N,N],[5,"fork","","",N,N],[5,"fpathconf","","",N,N],[5,"getcwd","","",N,N],[5,"getegid","","",N,N],[5,"geteuid","","",N,N],[5,"getgid","","",N,N],[5,"getgroups","","",N,N],[5,"getlogin","","",N,N],[5,"getopt","","",N,N],[5,"getpgid","","",N,N],[5,"getpgrp","","",N,N],[5,"getpid","","",N,N],[5,"getppid","","",N,N],[5,"getuid","","",N,N],[5,"isatty","","",N,N],[5,"link","","",N,N],[5,"lseek","","",N,N],[5,"pathconf","","",N,N],[5,"pause","","",N,N],[5,"pipe","","",N,N],[5,"posix_memalign","","",N,N],[5,"read","","",N,N],[5,"rmdir","","",N,N],[5,"seteuid","","",N,N],[5,"setegid","","",N,N],[5,"setgid","","",N,N],[5,"setpgid","","",N,N],[5,"setsid","","",N,N],[5,"setuid","","",N,N],[5,"sleep","","",N,N],[5,"nanosleep","","",N,N],[5,"tcgetpgrp","","",N,N],[5,"tcsetpgrp","","",N,N],[5,"ttyname","","",N,N],[5,"unlink","","",N,N],[5,"wait","","",N,N],[5,"waitpid","","",N,N],[5,"write","","",N,N],[5,"pread","","",N,N],[5,"pwrite","","",N,N],[5,"umask","","",N,N],[5,"utime","","",N,N],[5,"kill","","",N,N],[5,"killpg","","",N,N],[5,"mlock","","",N,N],[5,"munlock","","",N,N],[5,"mlockall","","",N,N],[5,"munlockall","","",N,N],[5,"mmap","","",N,N],[5,"munmap","","",N,N],[5,"if_nametoindex","","",N,N],[5,"if_indextoname","","",N,N],[5,"lstat","","",N,N],[5,"fsync","","",N,N],[5,"setenv","","",N,N],[5,"unsetenv","","",N,N],[5,"symlink","","",N,N],[5,"truncate","","",N,N],[5,"ftruncate","","",N,N],[5,"signal","","",N,N],[5,"getrlimit","","",N,N],[5,"setrlimit","","",N,N],[5,"getrusage","","",N,N],[5,"realpath","","",N,N],[5,"flock","","",N,N],[5,"gettimeofday","","",N,N],[5,"times","","",N,N],[5,"pthread_self","","",N,N],[5,"pthread_join","","",N,N],[5,"pthread_exit","","",N,N],[5,"pthread_attr_init","","",N,N],[5,"pthread_attr_destroy","","",N,N],[5,"pthread_attr_setstacksize","","",N,N],[5,"pthread_attr_setdetachstate","","",N,N],[5,"pthread_detach","","",N,N],[5,"sched_yield","","",N,N],[5,"pthread_key_create","","",N,N],[5,"pthread_key_delete","","",N,N],[5,"pthread_getspecific","","",N,N],[5,"pthread_setspecific","","",N,N],[5,"pthread_mutex_init","","",N,N],[5,"pthread_mutex_destroy","","",N,N],[5,"pthread_mutex_lock","","",N,N],[5,"pthread_mutex_trylock","","",N,N],[5,"pthread_mutex_unlock","","",N,N],[5,"pthread_mutexattr_init","","",N,N],[5,"pthread_mutexattr_destroy","","",N,N],[5,"pthread_mutexattr_settype","","",N,N],[5,"pthread_cond_init","","",N,N],[5,"pthread_cond_wait","","",N,N],[5,"pthread_cond_timedwait","","",N,N],[5,"pthread_cond_signal","","",N,N],[5,"pthread_cond_broadcast","","",N,N],[5,"pthread_cond_destroy","","",N,N],[5,"pthread_condattr_init","","",N,N],[5,"pthread_condattr_destroy","","",N,N],[5,"pthread_rwlock_init","","",N,N],[5,"pthread_rwlock_destroy","","",N,N],[5,"pthread_rwlock_rdlock","","",N,N],[5,"pthread_rwlock_tryrdlock","","",N,N],[5,"pthread_rwlock_wrlock","","",N,N],[5,"pthread_rwlock_trywrlock","","",N,N],[5,"pthread_rwlock_unlock","","",N,N],[5,"pthread_rwlockattr_init","","",N,N],[5,"pthread_rwlockattr_destroy","","",N,N],[5,"strerror_r","","",N,N],[5,"getsockopt","","",N,N],[5,"raise","","",N,N],[5,"sigaction","","",N,N],[5,"utimes","","",N,N],[5,"dlopen","","",N,N],[5,"dlerror","","",N,N],[5,"dlsym","","",N,N],[5,"dlclose","","",N,N],[5,"dladdr","","",N,N],[5,"getaddrinfo","","",N,N],[5,"freeaddrinfo","","",N,N],[5,"gai_strerror","","",N,N],[5,"res_init","","",N,N],[5,"gmtime_r","","",N,N],[5,"localtime_r","","",N,N],[5,"mktime","","",N,N],[5,"time","","",N,N],[5,"gmtime","","",N,N],[5,"localtime","","",N,N],[5,"difftime","","",N,N],[5,"mknod","","",N,N],[5,"uname","","",N,N],[5,"gethostname","","",N,N],[5,"getservbyname","","",N,N],[5,"getprotobyname","","",N,N],[5,"getprotobynumber","","",N,N],[5,"chroot","","",N,N],[5,"usleep","","",N,N],[5,"send","","",N,N],[5,"recv","","",N,N],[5,"putenv","","",N,N],[5,"poll","","",N,N],[5,"select","","",N,N],[5,"setlocale","","",N,N],[5,"localeconv","","",N,N],[5,"sem_destroy","","",N,N],[5,"sem_wait","","",N,N],[5,"sem_trywait","","",N,N],[5,"sem_post","","",N,N],[5,"sem_init","","",N,N],[5,"statvfs","","",N,N],[5,"fstatvfs","","",N,N],[5,"readlink","","",N,N],[5,"sigemptyset","","",N,N],[5,"sigaddset","","",N,N],[5,"sigfillset","","",N,N],[5,"sigdelset","","",N,N],[5,"sigismember","","",N,N],[5,"sigprocmask","","",N,N],[5,"sigpending","","",N,N],[5,"timegm","","",N,N],[5,"getsid","","",N,N],[5,"sysconf","","",N,N],[5,"mkfifo","","",N,N],[5,"pselect","","",N,N],[5,"fseeko","","",N,N],[5,"ftello","","",N,N],[5,"tcdrain","","",N,N],[5,"cfgetispeed","","",N,N],[5,"cfgetospeed","","",N,N],[5,"cfmakeraw","","",N,N],[5,"cfsetispeed","","",N,N],[5,"cfsetospeed","","",N,N],[5,"cfsetspeed","","",N,N],[5,"tcgetattr","","",N,N],[5,"tcsetattr","","",N,N],[5,"tcflow","","",N,N],[5,"tcflush","","",N,N],[5,"tcgetsid","","",N,N],[5,"tcsendbreak","","",N,N],[5,"mkstemp","","",N,N],[5,"mkdtemp","","",N,N],[5,"tmpnam","","",N,N],[5,"openlog","","",N,N],[5,"closelog","","",N,N],[5,"setlogmask","","",N,N],[5,"syslog","","",N,N],[5,"nice","","",N,N],[5,"grantpt","","",N,N],[5,"posix_openpt","","",N,N],[5,"ptsname","","",N,N],[5,"unlockpt","","",N,N],[5,"strcasestr","","",N,N],[5,"getline","","",N,N],[5,"fdatasync","","",N,N],[5,"mincore","","",N,N],[5,"clock_getres","","",N,N],[5,"clock_gettime","","",N,N],[5,"clock_settime","","",N,N],[5,"dirfd","","",N,N],[5,"pthread_getattr_np","","",N,N],[5,"pthread_attr_getstack","","",N,N],[5,"memalign","","",N,N],[5,"setgroups","","",N,N],[5,"pipe2","","",N,N],[5,"statfs","","",N,N],[5,"statfs64","","",N,N],[5,"fstatfs","","",N,N],[5,"fstatfs64","","",N,N],[5,"statvfs64","","",N,N],[5,"fstatvfs64","","",N,N],[5,"memrchr","","",N,N],[5,"posix_fadvise","","",N,N],[5,"futimens","","",N,N],[5,"utimensat","","",N,N],[5,"duplocale","","",N,N],[5,"freelocale","","",N,N],[5,"newlocale","","",N,N],[5,"uselocale","","",N,N],[5,"creat64","","",N,N],[5,"fstat64","","",N,N],[5,"fstatat64","","",N,N],[5,"ftruncate64","","",N,N],[5,"getrlimit64","","",N,N],[5,"lseek64","","",N,N],[5,"lstat64","","",N,N],[5,"mmap64","","",N,N],[5,"open64","","",N,N],[5,"openat64","","",N,N],[5,"pread64","","",N,N],[5,"preadv64","","",N,N],[5,"pwrite64","","",N,N],[5,"pwritev64","","",N,N],[5,"readdir64","","",N,N],[5,"readdir64_r","","",N,N],[5,"setrlimit64","","",N,N],[5,"stat64","","",N,N],[5,"truncate64","","",N,N],[5,"mknodat","","",N,N],[5,"pthread_condattr_getclock","","",N,N],[5,"pthread_condattr_setclock","","",N,N],[5,"pthread_condattr_setpshared","","",N,N],[5,"accept4","","",N,N],[5,"pthread_mutexattr_setpshared","","",N,N],[5,"pthread_rwlockattr_getpshared","","",N,N],[5,"pthread_rwlockattr_setpshared","","",N,N],[5,"ptsname_r","","",N,N],[5,"clearenv","","",N,N],[5,"waitid","","",N,N],[5,"setreuid","","",N,N],[5,"setregid","","",N,N],[5,"getresuid","","",N,N],[5,"getresgid","","",N,N],[5,"acct","","",N,N],[5,"brk","","",N,N],[5,"sbrk","","",N,N],[5,"vfork","","",N,N],[5,"setresgid","","",N,N],[5,"setresuid","","",N,N],[5,"wait4","","",N,N],[5,"openpty","","",N,N],[5,"execvpe","","",N,N],[5,"fexecve","","",N,N],[5,"getifaddrs","","",N,N],[5,"freeifaddrs","","",N,N],[5,"bind","","",N,N],[5,"writev","","",N,N],[5,"readv","","",N,N],[5,"sendmsg","","",N,N],[5,"recvmsg","","",N,N],[5,"abs","","",N,N],[5,"atof","","",N,N],[5,"labs","","",N,N],[5,"rand","","",N,N],[5,"srand","","",N,N],[5,"aio_read","","",N,N],[5,"aio_write","","",N,N],[5,"aio_fsync","","",N,N],[5,"aio_error","","",N,N],[5,"aio_return","","",N,N],[5,"aio_suspend","","",N,N],[5,"aio_cancel","","",N,N],[5,"lio_listio","","",N,N],[5,"lutimes","","",N,N],[5,"setpwent","","",N,N],[5,"endpwent","","",N,N],[5,"getpwent","","",N,N],[5,"setgrent","","",N,N],[5,"endgrent","","",N,N],[5,"getgrent","","",N,N],[5,"setspent","","",N,N],[5,"endspent","","",N,N],[5,"getspent","","",N,N],[5,"getspnam","","",N,N],[5,"shm_open","","",N,N],[5,"shmget","","",N,N],[5,"shmat","","",N,N],[5,"shmdt","","",N,N],[5,"shmctl","","",N,N],[5,"ftok","","",N,N],[5,"semget","","",N,N],[5,"semop","","",N,N],[5,"semctl","","",N,N],[5,"msgctl","","",N,N],[5,"msgget","","",N,N],[5,"msgrcv","","",N,N],[5,"msgsnd","","",N,N],[5,"mprotect","","",N,N],[5,"__errno_location","","",N,N],[5,"fopen64","","",N,N],[5,"freopen64","","",N,N],[5,"tmpfile64","","",N,N],[5,"fgetpos64","","",N,N],[5,"fsetpos64","","",N,N],[5,"fseeko64","","",N,N],[5,"ftello64","","",N,N],[5,"fallocate","","",N,N],[5,"fallocate64","","",N,N],[5,"posix_fallocate","","",N,N],[5,"posix_fallocate64","","",N,N],[5,"readahead","","",N,N],[5,"getxattr","","",N,N],[5,"lgetxattr","","",N,N],[5,"fgetxattr","","",N,N],[5,"setxattr","","",N,N],[5,"lsetxattr","","",N,N],[5,"fsetxattr","","",N,N],[5,"listxattr","","",N,N],[5,"llistxattr","","",N,N],[5,"flistxattr","","",N,N],[5,"removexattr","","",N,N],[5,"lremovexattr","","",N,N],[5,"fremovexattr","","",N,N],[5,"signalfd","","",N,N],[5,"timerfd_create","","",N,N],[5,"timerfd_gettime","","",N,N],[5,"timerfd_settime","","",N,N],[5,"pwritev","","",N,N],[5,"preadv","","",N,N],[5,"quotactl","","",N,N],[5,"mq_open","","",N,N],[5,"mq_close","","",N,N],[5,"mq_unlink","","",N,N],[5,"mq_receive","","",N,N],[5,"mq_send","","",N,N],[5,"mq_getattr","","",N,N],[5,"mq_setattr","","",N,N],[5,"epoll_pwait","","",N,N],[5,"dup3","","",N,N],[5,"mkostemp","","",N,N],[5,"mkostemps","","",N,N],[5,"sigtimedwait","","",N,N],[5,"sigwaitinfo","","",N,N],[5,"nl_langinfo_l","","",N,N],[5,"getnameinfo","","",N,N],[5,"pthread_setschedprio","","",N,N],[5,"prlimit","","",N,N],[5,"prlimit64","","",N,N],[5,"getloadavg","","",N,N],[5,"process_vm_readv","","",N,N],[5,"process_vm_writev","","",N,N],[5,"reboot","","",N,N],[5,"setfsgid","","",N,N],[5,"setfsuid","","",N,N],[5,"mkfifoat","","",N,N],[5,"if_nameindex","","",N,N],[5,"if_freenameindex","","",N,N],[5,"sync_file_range","","",N,N],[5,"mremap","","",N,N],[5,"glob","","",N,N],[5,"globfree","","",N,N],[5,"posix_madvise","","",N,N],[5,"shm_unlink","","",N,N],[5,"seekdir","","",N,N],[5,"telldir","","",N,N],[5,"madvise","","",N,N],[5,"msync","","",N,N],[5,"remap_file_pages","","",N,N],[5,"recvfrom","","",N,N],[5,"mkstemps","","",N,N],[5,"futimes","","",N,N],[5,"nl_langinfo","","",N,N],[5,"getdomainname","","",N,N],[5,"setdomainname","","",N,N],[5,"vhangup","","",N,N],[5,"sendmmsg","","",N,N],[5,"recvmmsg","","",N,N],[5,"sync","","",N,N],[5,"syscall","","",N,N],[5,"sched_getaffinity","","",N,N],[5,"sched_setaffinity","","",N,N],[5,"epoll_create","","",N,N],[5,"epoll_create1","","",N,N],[5,"epoll_wait","","",N,N],[5,"epoll_ctl","","",N,N],[5,"pthread_getschedparam","","",N,N],[5,"unshare","","",N,N],[5,"umount","","",N,N],[5,"sched_get_priority_max","","",N,N],[5,"tee","","",N,N],[5,"settimeofday","","",N,N],[5,"splice","","",N,N],[5,"eventfd","","",N,N],[5,"sched_rr_get_interval","","",N,N],[5,"sem_timedwait","","",N,N],[5,"sem_getvalue","","",N,N],[5,"sched_setparam","","",N,N],[5,"setns","","",N,N],[5,"swapoff","","",N,N],[5,"vmsplice","","",N,N],[5,"mount","","",N,N],[5,"personality","","",N,N],[5,"prctl","","",N,N],[5,"sched_getparam","","",N,N],[5,"ppoll","","",N,N],[5,"pthread_mutex_timedlock","","",N,N],[5,"clone","","",N,N],[5,"sched_getscheduler","","",N,N],[5,"clock_nanosleep","","",N,N],[5,"pthread_attr_getguardsize","","",N,N],[5,"sethostname","","",N,N],[5,"sched_get_priority_min","","",N,N],[5,"pthread_condattr_getpshared","","",N,N],[5,"sysinfo","","",N,N],[5,"umount2","","",N,N],[5,"pthread_setschedparam","","",N,N],[5,"swapon","","",N,N],[5,"sched_setscheduler","","",N,N],[5,"sendfile","","",N,N],[5,"sigsuspend","","",N,N],[5,"getgrgid_r","","",N,N],[5,"sigaltstack","","",N,N],[5,"sem_close","","",N,N],[5,"getdtablesize","","",N,N],[5,"getgrnam_r","","",N,N],[5,"initgroups","","",N,N],[5,"pthread_sigmask","","",N,N],[5,"sem_open","","",N,N],[5,"getgrnam","","",N,N],[5,"pthread_cancel","","",N,N],[5,"pthread_kill","","",N,N],[5,"sem_unlink","","",N,N],[5,"daemon","","",N,N],[5,"getpwnam_r","","",N,N],[5,"getpwuid_r","","",N,N],[5,"sigwait","","",N,N],[5,"pthread_atfork","","",N,N],[5,"getgrgid","","",N,N],[5,"getgrouplist","","",N,N],[5,"pthread_mutexattr_getpshared","","",N,N],[5,"popen","","",N,N],[5,"faccessat","","",N,N],[5,"pthread_create","","",N,N],[5,"dl_iterate_phdr","","",N,N],[5,"setmntent","","",N,N],[5,"getmntent","","",N,N],[5,"addmntent","","",N,N],[5,"endmntent","","",N,N],[5,"hasmntopt","","",N,N],[5,"posix_spawn","","",N,N],[5,"posix_spawnp","","",N,N],[5,"posix_spawnattr_init","","",N,N],[5,"posix_spawnattr_destroy","","",N,N],[5,"posix_spawnattr_getsigdefault","","",N,N],[5,"posix_spawnattr_setsigdefault","","",N,N],[5,"posix_spawnattr_getsigmask","","",N,N],[5,"posix_spawnattr_setsigmask","","",N,N],[5,"posix_spawnattr_getflags","","",N,N],[5,"posix_spawnattr_setflags","","",N,N],[5,"posix_spawnattr_getpgroup","","",N,N],[5,"posix_spawnattr_setpgroup","","",N,N],[5,"posix_spawnattr_getschedpolicy","","",N,N],[5,"posix_spawnattr_setschedpolicy","","",N,N],[5,"posix_spawnattr_getschedparam","","",N,N],[5,"posix_spawnattr_setschedparam","","",N,N],[5,"posix_spawn_file_actions_init","","",N,N],[5,"posix_spawn_file_actions_destroy","","",N,N],[5,"posix_spawn_file_actions_addopen","","",N,N],[5,"posix_spawn_file_actions_addclose","","",N,N],[5,"posix_spawn_file_actions_adddup2","","",N,N],[5,"fread_unlocked","","",N,N],[5,"utmpxname","","",N,N],[5,"getutxent","","",N,N],[5,"getutxid","","",N,N],[5,"getutxline","","",N,N],[5,"pututxline","","",N,N],[5,"setutxent","","",N,N],[5,"endutxent","","",N,N],[5,"getpt","","",N,N],[5,"mallopt","","",N,N],[5,"ioctl","","",N,N],[5,"backtrace","","",N,N],[5,"glob64","","",N,N],[5,"globfree64","","",N,N],[5,"ptrace","","",N,N],[5,"pthread_attr_getaffinity_np","","",N,N],[5,"pthread_attr_setaffinity_np","","",N,N],[5,"getpriority","","",N,N],[5,"setpriority","","",N,N],[5,"pthread_getaffinity_np","","",N,N],[5,"pthread_setaffinity_np","","",N,N],[5,"pthread_rwlockattr_getkind_np","","",N,N],[5,"pthread_rwlockattr_setkind_np","","",N,N],[5,"sched_getcpu","","",N,N],[5,"mallinfo","","",N,N],[5,"malloc_usable_size","","",N,N],[5,"getauxval","","",N,N],[5,"getpwent_r","","",N,N],[5,"getgrent_r","","",N,N],[5,"getcontext","","",N,N],[5,"setcontext","","",N,N],[5,"makecontext","","",N,N],[5,"swapcontext","","",N,N],[5,"iopl","","",N,N],[5,"ioperm","","",N,N],[5,"sysctl","","",N,N],[6,"int8_t","","",N,N],[6,"int16_t","","",N,N],[6,"int32_t","","",N,N],[6,"int64_t","","",N,N],[6,"uint8_t","","",N,N],[6,"uint16_t","","",N,N],[6,"uint32_t","","",N,N],[6,"uint64_t","","",N,N],[6,"c_schar","","",N,N],[6,"c_uchar","","",N,N],[6,"c_short","","",N,N],[6,"c_ushort","","",N,N],[6,"c_int","","",N,N],[6,"c_uint","","",N,N],[6,"c_float","","",N,N],[6,"c_double","","",N,N],[6,"c_longlong","","",N,N],[6,"c_ulonglong","","",N,N],[6,"intmax_t","","",N,N],[6,"uintmax_t","","",N,N],[6,"size_t","","",N,N],[6,"ptrdiff_t","","",N,N],[6,"intptr_t","","",N,N],[6,"uintptr_t","","",N,N],[6,"ssize_t","","",N,N],[6,"pid_t","","",N,N],[6,"uid_t","","",N,N],[6,"gid_t","","",N,N],[6,"in_addr_t","","",N,N],[6,"in_port_t","","",N,N],[6,"sighandler_t","","",N,N],[6,"cc_t","","",N,N],[6,"sa_family_t","","",N,N],[6,"pthread_key_t","","",N,N],[6,"speed_t","","",N,N],[6,"tcflag_t","","",N,N],[6,"clockid_t","","",N,N],[6,"key_t","","",N,N],[6,"id_t","","",N,N],[6,"useconds_t","","",N,N],[6,"dev_t","","",N,N],[6,"socklen_t","","",N,N],[6,"pthread_t","","",N,N],[6,"mode_t","","",N,N],[6,"ino64_t","","",N,N],[6,"off64_t","","",N,N],[6,"blkcnt64_t","","",N,N],[6,"rlim64_t","","",N,N],[6,"mqd_t","","",N,N],[6,"nfds_t","","",N,N],[6,"nl_item","","",N,N],[6,"idtype_t","","",N,N],[6,"loff_t","","",N,N],[6,"__u8","","",N,N],[6,"__u16","","",N,N],[6,"__s16","","",N,N],[6,"__u32","","",N,N],[6,"__s32","","",N,N],[6,"Elf32_Half","","",N,N],[6,"Elf32_Word","","",N,N],[6,"Elf32_Off","","",N,N],[6,"Elf32_Addr","","",N,N],[6,"Elf64_Half","","",N,N],[6,"Elf64_Word","","",N,N],[6,"Elf64_Off","","",N,N],[6,"Elf64_Addr","","",N,N],[6,"Elf64_Xword","","",N,N],[6,"Elf64_Sxword","","",N,N],[6,"Elf32_Section","","",N,N],[6,"Elf64_Section","","",N,N],[6,"__priority_which_t","","",N,N],[6,"clock_t","","",N,N],[6,"time_t","","",N,N],[6,"ino_t","","",N,N],[6,"off_t","","",N,N],[6,"blkcnt_t","","",N,N],[6,"__fsword_t","","",N,N],[6,"shmatt_t","","",N,N],[6,"msgqnum_t","","",N,N],[6,"msglen_t","","",N,N],[6,"fsblkcnt_t","","",N,N],[6,"fsfilcnt_t","","",N,N],[6,"rlim_t","","",N,N],[6,"c_char","","",N,N],[6,"wchar_t","","",N,N],[6,"nlink_t","","",N,N],[6,"blksize_t","","",N,N],[6,"greg_t","","",N,N],[6,"suseconds_t","","",N,N],[6,"__u64","","",N,N],[6,"c_long","","",N,N],[6,"c_ulong","","",N,N],[17,"INT_MIN","","",N,N],[17,"INT_MAX","","",N,N],[17,"SIG_DFL","","",N,N],[17,"SIG_IGN","","",N,N],[17,"SIG_ERR","","",N,N],[17,"DT_UNKNOWN","","",N,N],[17,"DT_FIFO","","",N,N],[17,"DT_CHR","","",N,N],[17,"DT_DIR","","",N,N],[17,"DT_BLK","","",N,N],[17,"DT_REG","","",N,N],[17,"DT_LNK","","",N,N],[17,"DT_SOCK","","",N,N],[17,"FD_CLOEXEC","","",N,N],[17,"USRQUOTA","","",N,N],[17,"GRPQUOTA","","",N,N],[17,"SIGIOT","","",N,N],[17,"S_ISUID","","",N,N],[17,"S_ISGID","","",N,N],[17,"S_ISVTX","","",N,N],[17,"IF_NAMESIZE","","",N,N],[17,"IFNAMSIZ","","",N,N],[17,"LOG_EMERG","","",N,N],[17,"LOG_ALERT","","",N,N],[17,"LOG_CRIT","","",N,N],[17,"LOG_ERR","","",N,N],[17,"LOG_WARNING","","",N,N],[17,"LOG_NOTICE","","",N,N],[17,"LOG_INFO","","",N,N],[17,"LOG_DEBUG","","",N,N],[17,"LOG_KERN","","",N,N],[17,"LOG_USER","","",N,N],[17,"LOG_MAIL","","",N,N],[17,"LOG_DAEMON","","",N,N],[17,"LOG_AUTH","","",N,N],[17,"LOG_SYSLOG","","",N,N],[17,"LOG_LPR","","",N,N],[17,"LOG_NEWS","","",N,N],[17,"LOG_UUCP","","",N,N],[17,"LOG_LOCAL0","","",N,N],[17,"LOG_LOCAL1","","",N,N],[17,"LOG_LOCAL2","","",N,N],[17,"LOG_LOCAL3","","",N,N],[17,"LOG_LOCAL4","","",N,N],[17,"LOG_LOCAL5","","",N,N],[17,"LOG_LOCAL6","","",N,N],[17,"LOG_LOCAL7","","",N,N],[17,"LOG_PID","","",N,N],[17,"LOG_CONS","","",N,N],[17,"LOG_ODELAY","","",N,N],[17,"LOG_NDELAY","","",N,N],[17,"LOG_NOWAIT","","",N,N],[17,"LOG_PRIMASK","","",N,N],[17,"LOG_FACMASK","","",N,N],[17,"PRIO_PROCESS","","",N,N],[17,"PRIO_PGRP","","",N,N],[17,"PRIO_USER","","",N,N],[17,"PRIO_MIN","","",N,N],[17,"PRIO_MAX","","",N,N],[17,"IPPROTO_ICMP","","",N,N],[17,"IPPROTO_ICMPV6","","",N,N],[17,"IPPROTO_TCP","","",N,N],[17,"IPPROTO_UDP","","",N,N],[17,"IPPROTO_IP","","",N,N],[17,"IPPROTO_IPV6","","",N,N],[17,"INADDR_LOOPBACK","","",N,N],[17,"INADDR_ANY","","",N,N],[17,"INADDR_BROADCAST","","",N,N],[17,"INADDR_NONE","","",N,N],[17,"ARPOP_REQUEST","","",N,N],[17,"ARPOP_REPLY","","",N,N],[17,"ATF_COM","","",N,N],[17,"ATF_PERM","","",N,N],[17,"ATF_PUBL","","",N,N],[17,"ATF_USETRAILERS","","",N,N],[17,"EXIT_FAILURE","","",N,N],[17,"EXIT_SUCCESS","","",N,N],[17,"RAND_MAX","","",N,N],[17,"EOF","","",N,N],[17,"SEEK_SET","","",N,N],[17,"SEEK_CUR","","",N,N],[17,"SEEK_END","","",N,N],[17,"_IOFBF","","",N,N],[17,"_IONBF","","",N,N],[17,"_IOLBF","","",N,N],[17,"F_DUPFD","","",N,N],[17,"F_GETFD","","",N,N],[17,"F_SETFD","","",N,N],[17,"F_GETFL","","",N,N],[17,"F_SETFL","","",N,N],[17,"F_SETLEASE","","",N,N],[17,"F_GETLEASE","","",N,N],[17,"F_NOTIFY","","",N,N],[17,"F_CANCELLK","","",N,N],[17,"F_DUPFD_CLOEXEC","","",N,N],[17,"F_SETPIPE_SZ","","",N,N],[17,"F_GETPIPE_SZ","","",N,N],[17,"F_ADD_SEALS","","",N,N],[17,"F_GET_SEALS","","",N,N],[17,"F_SEAL_SEAL","","",N,N],[17,"F_SEAL_SHRINK","","",N,N],[17,"F_SEAL_GROW","","",N,N],[17,"F_SEAL_WRITE","","",N,N],[17,"SIGTRAP","","",N,N],[17,"PTHREAD_CREATE_JOINABLE","","",N,N],[17,"PTHREAD_CREATE_DETACHED","","",N,N],[17,"CLOCK_REALTIME","","",N,N],[17,"CLOCK_MONOTONIC","","",N,N],[17,"CLOCK_PROCESS_CPUTIME_ID","","",N,N],[17,"CLOCK_THREAD_CPUTIME_ID","","",N,N],[17,"CLOCK_MONOTONIC_RAW","","",N,N],[17,"CLOCK_REALTIME_COARSE","","",N,N],[17,"CLOCK_MONOTONIC_COARSE","","",N,N],[17,"CLOCK_BOOTTIME","","",N,N],[17,"CLOCK_REALTIME_ALARM","","",N,N],[17,"CLOCK_BOOTTIME_ALARM","","",N,N],[17,"TIMER_ABSTIME","","",N,N],[17,"RLIMIT_CPU","","",N,N],[17,"RLIMIT_FSIZE","","",N,N],[17,"RLIMIT_DATA","","",N,N],[17,"RLIMIT_STACK","","",N,N],[17,"RLIMIT_CORE","","",N,N],[17,"RLIMIT_LOCKS","","",N,N],[17,"RLIMIT_SIGPENDING","","",N,N],[17,"RLIMIT_MSGQUEUE","","",N,N],[17,"RLIMIT_NICE","","",N,N],[17,"RLIMIT_RTPRIO","","",N,N],[17,"RUSAGE_SELF","","",N,N],[17,"O_RDONLY","","",N,N],[17,"O_WRONLY","","",N,N],[17,"O_RDWR","","",N,N],[17,"SOCK_CLOEXEC","","",N,N],[17,"S_IFIFO","","",N,N],[17,"S_IFCHR","","",N,N],[17,"S_IFBLK","","",N,N],[17,"S_IFDIR","","",N,N],[17,"S_IFREG","","",N,N],[17,"S_IFLNK","","",N,N],[17,"S_IFSOCK","","",N,N],[17,"S_IFMT","","",N,N],[17,"S_IRWXU","","",N,N],[17,"S_IXUSR","","",N,N],[17,"S_IWUSR","","",N,N],[17,"S_IRUSR","","",N,N],[17,"S_IRWXG","","",N,N],[17,"S_IXGRP","","",N,N],[17,"S_IWGRP","","",N,N],[17,"S_IRGRP","","",N,N],[17,"S_IRWXO","","",N,N],[17,"S_IXOTH","","",N,N],[17,"S_IWOTH","","",N,N],[17,"S_IROTH","","",N,N],[17,"F_OK","","",N,N],[17,"R_OK","","",N,N],[17,"W_OK","","",N,N],[17,"X_OK","","",N,N],[17,"STDIN_FILENO","","",N,N],[17,"STDOUT_FILENO","","",N,N],[17,"STDERR_FILENO","","",N,N],[17,"SIGHUP","","",N,N],[17,"SIGINT","","",N,N],[17,"SIGQUIT","","",N,N],[17,"SIGILL","","",N,N],[17,"SIGABRT","","",N,N],[17,"SIGFPE","","",N,N],[17,"SIGKILL","","",N,N],[17,"SIGSEGV","","",N,N],[17,"SIGPIPE","","",N,N],[17,"SIGALRM","","",N,N],[17,"SIGTERM","","",N,N],[17,"PROT_NONE","","",N,N],[17,"PROT_READ","","",N,N],[17,"PROT_WRITE","","",N,N],[17,"PROT_EXEC","","",N,N],[17,"LC_CTYPE","","",N,N],[17,"LC_NUMERIC","","",N,N],[17,"LC_TIME","","",N,N],[17,"LC_COLLATE","","",N,N],[17,"LC_MONETARY","","",N,N],[17,"LC_MESSAGES","","",N,N],[17,"LC_ALL","","",N,N],[17,"LC_CTYPE_MASK","","",N,N],[17,"LC_NUMERIC_MASK","","",N,N],[17,"LC_TIME_MASK","","",N,N],[17,"LC_COLLATE_MASK","","",N,N],[17,"LC_MONETARY_MASK","","",N,N],[17,"LC_MESSAGES_MASK","","",N,N],[17,"MAP_FILE","","",N,N],[17,"MAP_SHARED","","",N,N],[17,"MAP_PRIVATE","","",N,N],[17,"MAP_FIXED","","",N,N],[17,"MAP_FAILED","","",N,N],[17,"MS_ASYNC","","",N,N],[17,"MS_INVALIDATE","","",N,N],[17,"MS_SYNC","","",N,N],[17,"MS_RDONLY","","",N,N],[17,"MS_NOSUID","","",N,N],[17,"MS_NODEV","","",N,N],[17,"MS_NOEXEC","","",N,N],[17,"MS_SYNCHRONOUS","","",N,N],[17,"MS_REMOUNT","","",N,N],[17,"MS_MANDLOCK","","",N,N],[17,"MS_DIRSYNC","","",N,N],[17,"MS_NOATIME","","",N,N],[17,"MS_NODIRATIME","","",N,N],[17,"MS_BIND","","",N,N],[17,"MS_MOVE","","",N,N],[17,"MS_REC","","",N,N],[17,"MS_SILENT","","",N,N],[17,"MS_POSIXACL","","",N,N],[17,"MS_UNBINDABLE","","",N,N],[17,"MS_PRIVATE","","",N,N],[17,"MS_SLAVE","","",N,N],[17,"MS_SHARED","","",N,N],[17,"MS_RELATIME","","",N,N],[17,"MS_KERNMOUNT","","",N,N],[17,"MS_I_VERSION","","",N,N],[17,"MS_STRICTATIME","","",N,N],[17,"MS_ACTIVE","","",N,N],[17,"MS_NOUSER","","",N,N],[17,"MS_MGC_VAL","","",N,N],[17,"MS_MGC_MSK","","",N,N],[17,"MS_RMT_MASK","","",N,N],[17,"EPERM","","",N,N],[17,"ENOENT","","",N,N],[17,"ESRCH","","",N,N],[17,"EINTR","","",N,N],[17,"EIO","","",N,N],[17,"ENXIO","","",N,N],[17,"E2BIG","","",N,N],[17,"ENOEXEC","","",N,N],[17,"EBADF","","",N,N],[17,"ECHILD","","",N,N],[17,"EAGAIN","","",N,N],[17,"ENOMEM","","",N,N],[17,"EACCES","","",N,N],[17,"EFAULT","","",N,N],[17,"ENOTBLK","","",N,N],[17,"EBUSY","","",N,N],[17,"EEXIST","","",N,N],[17,"EXDEV","","",N,N],[17,"ENODEV","","",N,N],[17,"ENOTDIR","","",N,N],[17,"EISDIR","","",N,N],[17,"EINVAL","","",N,N],[17,"ENFILE","","",N,N],[17,"EMFILE","","",N,N],[17,"ENOTTY","","",N,N],[17,"ETXTBSY","","",N,N],[17,"EFBIG","","",N,N],[17,"ENOSPC","","",N,N],[17,"ESPIPE","","",N,N],[17,"EROFS","","",N,N],[17,"EMLINK","","",N,N],[17,"EPIPE","","",N,N],[17,"EDOM","","",N,N],[17,"ERANGE","","",N,N],[17,"EWOULDBLOCK","","",N,N],[17,"SCM_RIGHTS","","",N,N],[17,"SCM_CREDENTIALS","","",N,N],[17,"PROT_GROWSDOWN","","",N,N],[17,"PROT_GROWSUP","","",N,N],[17,"MAP_TYPE","","",N,N],[17,"MADV_NORMAL","","",N,N],[17,"MADV_RANDOM","","",N,N],[17,"MADV_SEQUENTIAL","","",N,N],[17,"MADV_WILLNEED","","",N,N],[17,"MADV_DONTNEED","","",N,N],[17,"MADV_FREE","","",N,N],[17,"MADV_REMOVE","","",N,N],[17,"MADV_DONTFORK","","",N,N],[17,"MADV_DOFORK","","",N,N],[17,"MADV_MERGEABLE","","",N,N],[17,"MADV_UNMERGEABLE","","",N,N],[17,"MADV_HUGEPAGE","","",N,N],[17,"MADV_NOHUGEPAGE","","",N,N],[17,"MADV_DONTDUMP","","",N,N],[17,"MADV_DODUMP","","",N,N],[17,"MADV_HWPOISON","","",N,N],[17,"MADV_SOFT_OFFLINE","","",N,N],[17,"IFF_UP","","",N,N],[17,"IFF_BROADCAST","","",N,N],[17,"IFF_DEBUG","","",N,N],[17,"IFF_LOOPBACK","","",N,N],[17,"IFF_POINTOPOINT","","",N,N],[17,"IFF_NOTRAILERS","","",N,N],[17,"IFF_RUNNING","","",N,N],[17,"IFF_NOARP","","",N,N],[17,"IFF_PROMISC","","",N,N],[17,"IFF_ALLMULTI","","",N,N],[17,"IFF_MASTER","","",N,N],[17,"IFF_SLAVE","","",N,N],[17,"IFF_MULTICAST","","",N,N],[17,"IFF_PORTSEL","","",N,N],[17,"IFF_AUTOMEDIA","","",N,N],[17,"IFF_DYNAMIC","","",N,N],[17,"SOL_IP","","",N,N],[17,"SOL_TCP","","",N,N],[17,"SOL_UDP","","",N,N],[17,"SOL_IPV6","","",N,N],[17,"SOL_ICMPV6","","",N,N],[17,"SOL_RAW","","",N,N],[17,"SOL_DECNET","","",N,N],[17,"SOL_X25","","",N,N],[17,"SOL_PACKET","","",N,N],[17,"SOL_ATM","","",N,N],[17,"SOL_AAL","","",N,N],[17,"SOL_IRDA","","",N,N],[17,"SOL_NETBEUI","","",N,N],[17,"SOL_LLC","","",N,N],[17,"SOL_DCCP","","",N,N],[17,"SOL_NETLINK","","",N,N],[17,"SOL_TIPC","","",N,N],[17,"SOL_BLUETOOTH","","",N,N],[17,"AF_UNSPEC","","",N,N],[17,"AF_UNIX","","",N,N],[17,"AF_LOCAL","","",N,N],[17,"AF_INET","","",N,N],[17,"AF_AX25","","",N,N],[17,"AF_IPX","","",N,N],[17,"AF_APPLETALK","","",N,N],[17,"AF_NETROM","","",N,N],[17,"AF_BRIDGE","","",N,N],[17,"AF_ATMPVC","","",N,N],[17,"AF_X25","","",N,N],[17,"AF_INET6","","",N,N],[17,"AF_ROSE","","",N,N],[17,"AF_DECnet","","",N,N],[17,"AF_NETBEUI","","",N,N],[17,"AF_SECURITY","","",N,N],[17,"AF_KEY","","",N,N],[17,"AF_NETLINK","","",N,N],[17,"AF_ROUTE","","",N,N],[17,"AF_PACKET","","",N,N],[17,"AF_ASH","","",N,N],[17,"AF_ECONET","","",N,N],[17,"AF_ATMSVC","","",N,N],[17,"AF_RDS","","",N,N],[17,"AF_SNA","","",N,N],[17,"AF_IRDA","","",N,N],[17,"AF_PPPOX","","",N,N],[17,"AF_WANPIPE","","",N,N],[17,"AF_LLC","","",N,N],[17,"AF_CAN","","",N,N],[17,"AF_TIPC","","",N,N],[17,"AF_BLUETOOTH","","",N,N],[17,"AF_IUCV","","",N,N],[17,"AF_RXRPC","","",N,N],[17,"AF_ISDN","","",N,N],[17,"AF_PHONET","","",N,N],[17,"AF_IEEE802154","","",N,N],[17,"AF_CAIF","","",N,N],[17,"AF_ALG","","",N,N],[17,"PF_UNSPEC","","",N,N],[17,"PF_UNIX","","",N,N],[17,"PF_LOCAL","","",N,N],[17,"PF_INET","","",N,N],[17,"PF_AX25","","",N,N],[17,"PF_IPX","","",N,N],[17,"PF_APPLETALK","","",N,N],[17,"PF_NETROM","","",N,N],[17,"PF_BRIDGE","","",N,N],[17,"PF_ATMPVC","","",N,N],[17,"PF_X25","","",N,N],[17,"PF_INET6","","",N,N],[17,"PF_ROSE","","",N,N],[17,"PF_DECnet","","",N,N],[17,"PF_NETBEUI","","",N,N],[17,"PF_SECURITY","","",N,N],[17,"PF_KEY","","",N,N],[17,"PF_NETLINK","","",N,N],[17,"PF_ROUTE","","",N,N],[17,"PF_PACKET","","",N,N],[17,"PF_ASH","","",N,N],[17,"PF_ECONET","","",N,N],[17,"PF_ATMSVC","","",N,N],[17,"PF_RDS","","",N,N],[17,"PF_SNA","","",N,N],[17,"PF_IRDA","","",N,N],[17,"PF_PPPOX","","",N,N],[17,"PF_WANPIPE","","",N,N],[17,"PF_LLC","","",N,N],[17,"PF_CAN","","",N,N],[17,"PF_TIPC","","",N,N],[17,"PF_BLUETOOTH","","",N,N],[17,"PF_IUCV","","",N,N],[17,"PF_RXRPC","","",N,N],[17,"PF_ISDN","","",N,N],[17,"PF_PHONET","","",N,N],[17,"PF_IEEE802154","","",N,N],[17,"PF_CAIF","","",N,N],[17,"PF_ALG","","",N,N],[17,"SOMAXCONN","","",N,N],[17,"MSG_OOB","","",N,N],[17,"MSG_PEEK","","",N,N],[17,"MSG_DONTROUTE","","",N,N],[17,"MSG_CTRUNC","","",N,N],[17,"MSG_TRUNC","","",N,N],[17,"MSG_DONTWAIT","","",N,N],[17,"MSG_EOR","","",N,N],[17,"MSG_WAITALL","","",N,N],[17,"MSG_FIN","","",N,N],[17,"MSG_SYN","","",N,N],[17,"MSG_CONFIRM","","",N,N],[17,"MSG_RST","","",N,N],[17,"MSG_ERRQUEUE","","",N,N],[17,"MSG_NOSIGNAL","","",N,N],[17,"MSG_MORE","","",N,N],[17,"MSG_WAITFORONE","","",N,N],[17,"MSG_FASTOPEN","","",N,N],[17,"MSG_CMSG_CLOEXEC","","",N,N],[17,"SCM_TIMESTAMP","","",N,N],[17,"SOCK_RAW","","",N,N],[17,"SOCK_RDM","","",N,N],[17,"IP_MULTICAST_IF","","",N,N],[17,"IP_MULTICAST_TTL","","",N,N],[17,"IP_MULTICAST_LOOP","","",N,N],[17,"IP_TTL","","",N,N],[17,"IP_HDRINCL","","",N,N],[17,"IP_PKTINFO","","",N,N],[17,"IP_ADD_MEMBERSHIP","","",N,N],[17,"IP_DROP_MEMBERSHIP","","",N,N],[17,"IP_TRANSPARENT","","",N,N],[17,"IPV6_UNICAST_HOPS","","",N,N],[17,"IPV6_MULTICAST_IF","","",N,N],[17,"IPV6_MULTICAST_HOPS","","",N,N],[17,"IPV6_MULTICAST_LOOP","","",N,N],[17,"IPV6_ADD_MEMBERSHIP","","",N,N],[17,"IPV6_DROP_MEMBERSHIP","","",N,N],[17,"IPV6_V6ONLY","","",N,N],[17,"IPV6_RECVPKTINFO","","",N,N],[17,"IPV6_PKTINFO","","",N,N],[17,"TCP_NODELAY","","",N,N],[17,"TCP_MAXSEG","","",N,N],[17,"TCP_CORK","","",N,N],[17,"TCP_KEEPIDLE","","",N,N],[17,"TCP_KEEPINTVL","","",N,N],[17,"TCP_KEEPCNT","","",N,N],[17,"TCP_SYNCNT","","",N,N],[17,"TCP_LINGER2","","",N,N],[17,"TCP_DEFER_ACCEPT","","",N,N],[17,"TCP_WINDOW_CLAMP","","",N,N],[17,"TCP_INFO","","",N,N],[17,"TCP_QUICKACK","","",N,N],[17,"TCP_CONGESTION","","",N,N],[17,"SO_DEBUG","","",N,N],[17,"SHUT_RD","","",N,N],[17,"SHUT_WR","","",N,N],[17,"SHUT_RDWR","","",N,N],[17,"LOCK_SH","","",N,N],[17,"LOCK_EX","","",N,N],[17,"LOCK_NB","","",N,N],[17,"LOCK_UN","","",N,N],[17,"SS_ONSTACK","","",N,N],[17,"SS_DISABLE","","",N,N],[17,"PATH_MAX","","",N,N],[17,"FD_SETSIZE","","",N,N],[17,"EPOLLIN","","",N,N],[17,"EPOLLPRI","","",N,N],[17,"EPOLLOUT","","",N,N],[17,"EPOLLRDNORM","","",N,N],[17,"EPOLLRDBAND","","",N,N],[17,"EPOLLWRNORM","","",N,N],[17,"EPOLLWRBAND","","",N,N],[17,"EPOLLMSG","","",N,N],[17,"EPOLLERR","","",N,N],[17,"EPOLLHUP","","",N,N],[17,"EPOLLET","","",N,N],[17,"EPOLL_CTL_ADD","","",N,N],[17,"EPOLL_CTL_MOD","","",N,N],[17,"EPOLL_CTL_DEL","","",N,N],[17,"MNT_DETACH","","",N,N],[17,"MNT_EXPIRE","","",N,N],[17,"Q_GETFMT","","",N,N],[17,"Q_GETINFO","","",N,N],[17,"Q_SETINFO","","",N,N],[17,"QIF_BLIMITS","","",N,N],[17,"QIF_SPACE","","",N,N],[17,"QIF_ILIMITS","","",N,N],[17,"QIF_INODES","","",N,N],[17,"QIF_BTIME","","",N,N],[17,"QIF_ITIME","","",N,N],[17,"QIF_LIMITS","","",N,N],[17,"QIF_USAGE","","",N,N],[17,"QIF_TIMES","","",N,N],[17,"QIF_ALL","","",N,N],[17,"MNT_FORCE","","",N,N],[17,"Q_SYNC","","",N,N],[17,"Q_QUOTAON","","",N,N],[17,"Q_QUOTAOFF","","",N,N],[17,"Q_GETQUOTA","","",N,N],[17,"Q_SETQUOTA","","",N,N],[17,"TCIOFF","","",N,N],[17,"TCION","","",N,N],[17,"TCOOFF","","",N,N],[17,"TCOON","","",N,N],[17,"TCIFLUSH","","",N,N],[17,"TCOFLUSH","","",N,N],[17,"TCIOFLUSH","","",N,N],[17,"NL0","","",N,N],[17,"NL1","","",N,N],[17,"TAB0","","",N,N],[17,"CR0","","",N,N],[17,"FF0","","",N,N],[17,"BS0","","",N,N],[17,"VT0","","",N,N],[17,"VERASE","","",N,N],[17,"VKILL","","",N,N],[17,"VINTR","","",N,N],[17,"VQUIT","","",N,N],[17,"VLNEXT","","",N,N],[17,"IGNBRK","","",N,N],[17,"BRKINT","","",N,N],[17,"IGNPAR","","",N,N],[17,"PARMRK","","",N,N],[17,"INPCK","","",N,N],[17,"ISTRIP","","",N,N],[17,"INLCR","","",N,N],[17,"IGNCR","","",N,N],[17,"ICRNL","","",N,N],[17,"IXANY","","",N,N],[17,"IMAXBEL","","",N,N],[17,"OPOST","","",N,N],[17,"CS5","","",N,N],[17,"CRTSCTS","","",N,N],[17,"ECHO","","",N,N],[17,"OCRNL","","",N,N],[17,"ONOCR","","",N,N],[17,"ONLRET","","",N,N],[17,"OFILL","","",N,N],[17,"OFDEL","","",N,N],[17,"CLONE_VM","","",N,N],[17,"CLONE_FS","","",N,N],[17,"CLONE_FILES","","",N,N],[17,"CLONE_SIGHAND","","",N,N],[17,"CLONE_PTRACE","","",N,N],[17,"CLONE_VFORK","","",N,N],[17,"CLONE_PARENT","","",N,N],[17,"CLONE_THREAD","","",N,N],[17,"CLONE_NEWNS","","",N,N],[17,"CLONE_SYSVSEM","","",N,N],[17,"CLONE_SETTLS","","",N,N],[17,"CLONE_PARENT_SETTID","","",N,N],[17,"CLONE_CHILD_CLEARTID","","",N,N],[17,"CLONE_DETACHED","","",N,N],[17,"CLONE_UNTRACED","","",N,N],[17,"CLONE_CHILD_SETTID","","",N,N],[17,"CLONE_NEWUTS","","",N,N],[17,"CLONE_NEWIPC","","",N,N],[17,"CLONE_NEWUSER","","",N,N],[17,"CLONE_NEWPID","","",N,N],[17,"CLONE_NEWNET","","",N,N],[17,"CLONE_IO","","",N,N],[17,"CLONE_NEWCGROUP","","",N,N],[17,"WNOHANG","","",N,N],[17,"WUNTRACED","","",N,N],[17,"WSTOPPED","","",N,N],[17,"WEXITED","","",N,N],[17,"WCONTINUED","","",N,N],[17,"WNOWAIT","","",N,N],[17,"PTRACE_O_TRACESYSGOOD","","",N,N],[17,"PTRACE_O_TRACEFORK","","",N,N],[17,"PTRACE_O_TRACEVFORK","","",N,N],[17,"PTRACE_O_TRACECLONE","","",N,N],[17,"PTRACE_O_TRACEEXEC","","",N,N],[17,"PTRACE_O_TRACEVFORKDONE","","",N,N],[17,"PTRACE_O_TRACEEXIT","","",N,N],[17,"PTRACE_O_TRACESECCOMP","","",N,N],[17,"PTRACE_O_EXITKILL","","",N,N],[17,"PTRACE_O_SUSPEND_SECCOMP","","",N,N],[17,"PTRACE_O_MASK","","",N,N],[17,"PTRACE_EVENT_FORK","","",N,N],[17,"PTRACE_EVENT_VFORK","","",N,N],[17,"PTRACE_EVENT_CLONE","","",N,N],[17,"PTRACE_EVENT_EXEC","","",N,N],[17,"PTRACE_EVENT_VFORK_DONE","","",N,N],[17,"PTRACE_EVENT_EXIT","","",N,N],[17,"PTRACE_EVENT_SECCOMP","","",N,N],[17,"__WNOTHREAD","","",N,N],[17,"__WALL","","",N,N],[17,"__WCLONE","","",N,N],[17,"SPLICE_F_MOVE","","",N,N],[17,"SPLICE_F_NONBLOCK","","",N,N],[17,"SPLICE_F_MORE","","",N,N],[17,"SPLICE_F_GIFT","","",N,N],[17,"RTLD_LOCAL","","",N,N],[17,"RTLD_LAZY","","",N,N],[17,"POSIX_FADV_NORMAL","","",N,N],[17,"POSIX_FADV_RANDOM","","",N,N],[17,"POSIX_FADV_SEQUENTIAL","","",N,N],[17,"POSIX_FADV_WILLNEED","","",N,N],[17,"AT_FDCWD","","",N,N],[17,"AT_SYMLINK_NOFOLLOW","","",N,N],[17,"AT_REMOVEDIR","","",N,N],[17,"AT_SYMLINK_FOLLOW","","",N,N],[17,"AT_NO_AUTOMOUNT","","",N,N],[17,"AT_EMPTY_PATH","","",N,N],[17,"LOG_CRON","","",N,N],[17,"LOG_AUTHPRIV","","",N,N],[17,"LOG_FTP","","",N,N],[17,"LOG_PERROR","","",N,N],[17,"PIPE_BUF","","",N,N],[17,"SI_LOAD_SHIFT","","",N,N],[17,"SIGEV_SIGNAL","","",N,N],[17,"SIGEV_NONE","","",N,N],[17,"SIGEV_THREAD","","",N,N],[17,"P_ALL","","",N,N],[17,"P_PID","","",N,N],[17,"P_PGID","","",N,N],[17,"UTIME_OMIT","","",N,N],[17,"UTIME_NOW","","",N,N],[17,"POLLIN","","",N,N],[17,"POLLPRI","","",N,N],[17,"POLLOUT","","",N,N],[17,"POLLERR","","",N,N],[17,"POLLHUP","","",N,N],[17,"POLLNVAL","","",N,N],[17,"POLLRDNORM","","",N,N],[17,"POLLRDBAND","","",N,N],[17,"IPTOS_LOWDELAY","","",N,N],[17,"IPTOS_THROUGHPUT","","",N,N],[17,"IPTOS_RELIABILITY","","",N,N],[17,"IPTOS_MINCOST","","",N,N],[17,"IPTOS_PREC_NETCONTROL","","",N,N],[17,"IPTOS_PREC_INTERNETCONTROL","","",N,N],[17,"IPTOS_PREC_CRITIC_ECP","","",N,N],[17,"IPTOS_PREC_FLASHOVERRIDE","","",N,N],[17,"IPTOS_PREC_FLASH","","",N,N],[17,"IPTOS_PREC_IMMEDIATE","","",N,N],[17,"IPTOS_PREC_PRIORITY","","",N,N],[17,"IPTOS_PREC_ROUTINE","","",N,N],[17,"IPOPT_COPY","","",N,N],[17,"IPOPT_CLASS_MASK","","",N,N],[17,"IPOPT_NUMBER_MASK","","",N,N],[17,"IPOPT_CONTROL","","",N,N],[17,"IPOPT_RESERVED1","","",N,N],[17,"IPOPT_MEASUREMENT","","",N,N],[17,"IPOPT_RESERVED2","","",N,N],[17,"IPOPT_END","","",N,N],[17,"IPOPT_NOOP","","",N,N],[17,"IPOPT_SEC","","",N,N],[17,"IPOPT_LSRR","","",N,N],[17,"IPOPT_TIMESTAMP","","",N,N],[17,"IPOPT_RR","","",N,N],[17,"IPOPT_SID","","",N,N],[17,"IPOPT_SSRR","","",N,N],[17,"IPOPT_RA","","",N,N],[17,"IPVERSION","","",N,N],[17,"MAXTTL","","",N,N],[17,"IPDEFTTL","","",N,N],[17,"IPOPT_OPTVAL","","",N,N],[17,"IPOPT_OLEN","","",N,N],[17,"IPOPT_OFFSET","","",N,N],[17,"IPOPT_MINOFF","","",N,N],[17,"MAX_IPOPTLEN","","",N,N],[17,"IPOPT_NOP","","",N,N],[17,"IPOPT_EOL","","",N,N],[17,"IPOPT_TS","","",N,N],[17,"IPOPT_TS_TSONLY","","",N,N],[17,"IPOPT_TS_TSANDADDR","","",N,N],[17,"IPOPT_TS_PRESPEC","","",N,N],[17,"ARPOP_RREQUEST","","",N,N],[17,"ARPOP_RREPLY","","",N,N],[17,"ARPOP_InREQUEST","","",N,N],[17,"ARPOP_InREPLY","","",N,N],[17,"ARPOP_NAK","","",N,N],[17,"ATF_NETMASK","","",N,N],[17,"ATF_DONTPUB","","",N,N],[17,"ARPHRD_NETROM","","",N,N],[17,"ARPHRD_ETHER","","",N,N],[17,"ARPHRD_EETHER","","",N,N],[17,"ARPHRD_AX25","","",N,N],[17,"ARPHRD_PRONET","","",N,N],[17,"ARPHRD_CHAOS","","",N,N],[17,"ARPHRD_IEEE802","","",N,N],[17,"ARPHRD_ARCNET","","",N,N],[17,"ARPHRD_APPLETLK","","",N,N],[17,"ARPHRD_DLCI","","",N,N],[17,"ARPHRD_ATM","","",N,N],[17,"ARPHRD_METRICOM","","",N,N],[17,"ARPHRD_IEEE1394","","",N,N],[17,"ARPHRD_EUI64","","",N,N],[17,"ARPHRD_INFINIBAND","","",N,N],[17,"ARPHRD_SLIP","","",N,N],[17,"ARPHRD_CSLIP","","",N,N],[17,"ARPHRD_SLIP6","","",N,N],[17,"ARPHRD_CSLIP6","","",N,N],[17,"ARPHRD_RSRVD","","",N,N],[17,"ARPHRD_ADAPT","","",N,N],[17,"ARPHRD_ROSE","","",N,N],[17,"ARPHRD_X25","","",N,N],[17,"ARPHRD_HWX25","","",N,N],[17,"ARPHRD_PPP","","",N,N],[17,"ARPHRD_CISCO","","",N,N],[17,"ARPHRD_HDLC","","",N,N],[17,"ARPHRD_LAPB","","",N,N],[17,"ARPHRD_DDCMP","","",N,N],[17,"ARPHRD_RAWHDLC","","",N,N],[17,"ARPHRD_TUNNEL","","",N,N],[17,"ARPHRD_TUNNEL6","","",N,N],[17,"ARPHRD_FRAD","","",N,N],[17,"ARPHRD_SKIP","","",N,N],[17,"ARPHRD_LOOPBACK","","",N,N],[17,"ARPHRD_LOCALTLK","","",N,N],[17,"ARPHRD_FDDI","","",N,N],[17,"ARPHRD_BIF","","",N,N],[17,"ARPHRD_SIT","","",N,N],[17,"ARPHRD_IPDDP","","",N,N],[17,"ARPHRD_IPGRE","","",N,N],[17,"ARPHRD_PIMREG","","",N,N],[17,"ARPHRD_HIPPI","","",N,N],[17,"ARPHRD_ASH","","",N,N],[17,"ARPHRD_ECONET","","",N,N],[17,"ARPHRD_IRDA","","",N,N],[17,"ARPHRD_FCPP","","",N,N],[17,"ARPHRD_FCAL","","",N,N],[17,"ARPHRD_FCPL","","",N,N],[17,"ARPHRD_FCFABRIC","","",N,N],[17,"ARPHRD_IEEE802_TR","","",N,N],[17,"ARPHRD_IEEE80211","","",N,N],[17,"ARPHRD_IEEE80211_PRISM","","",N,N],[17,"ARPHRD_IEEE80211_RADIOTAP","","",N,N],[17,"ARPHRD_IEEE802154","","",N,N],[17,"ARPHRD_VOID","","",N,N],[17,"ARPHRD_NONE","","",N,N],[17,"ABDAY_1","","",N,N],[17,"ABDAY_2","","",N,N],[17,"ABDAY_3","","",N,N],[17,"ABDAY_4","","",N,N],[17,"ABDAY_5","","",N,N],[17,"ABDAY_6","","",N,N],[17,"ABDAY_7","","",N,N],[17,"DAY_1","","",N,N],[17,"DAY_2","","",N,N],[17,"DAY_3","","",N,N],[17,"DAY_4","","",N,N],[17,"DAY_5","","",N,N],[17,"DAY_6","","",N,N],[17,"DAY_7","","",N,N],[17,"ABMON_1","","",N,N],[17,"ABMON_2","","",N,N],[17,"ABMON_3","","",N,N],[17,"ABMON_4","","",N,N],[17,"ABMON_5","","",N,N],[17,"ABMON_6","","",N,N],[17,"ABMON_7","","",N,N],[17,"ABMON_8","","",N,N],[17,"ABMON_9","","",N,N],[17,"ABMON_10","","",N,N],[17,"ABMON_11","","",N,N],[17,"ABMON_12","","",N,N],[17,"MON_1","","",N,N],[17,"MON_2","","",N,N],[17,"MON_3","","",N,N],[17,"MON_4","","",N,N],[17,"MON_5","","",N,N],[17,"MON_6","","",N,N],[17,"MON_7","","",N,N],[17,"MON_8","","",N,N],[17,"MON_9","","",N,N],[17,"MON_10","","",N,N],[17,"MON_11","","",N,N],[17,"MON_12","","",N,N],[17,"AM_STR","","",N,N],[17,"PM_STR","","",N,N],[17,"D_T_FMT","","",N,N],[17,"D_FMT","","",N,N],[17,"T_FMT","","",N,N],[17,"T_FMT_AMPM","","",N,N],[17,"ERA","","",N,N],[17,"ERA_D_FMT","","",N,N],[17,"ALT_DIGITS","","",N,N],[17,"ERA_D_T_FMT","","",N,N],[17,"ERA_T_FMT","","",N,N],[17,"CODESET","","",N,N],[17,"CRNCYSTR","","",N,N],[17,"RUSAGE_THREAD","","",N,N],[17,"RUSAGE_CHILDREN","","",N,N],[17,"RADIXCHAR","","",N,N],[17,"THOUSEP","","",N,N],[17,"YESEXPR","","",N,N],[17,"NOEXPR","","",N,N],[17,"YESSTR","","",N,N],[17,"NOSTR","","",N,N],[17,"FILENAME_MAX","","",N,N],[17,"L_tmpnam","","",N,N],[17,"_PC_LINK_MAX","","",N,N],[17,"_PC_MAX_CANON","","",N,N],[17,"_PC_MAX_INPUT","","",N,N],[17,"_PC_NAME_MAX","","",N,N],[17,"_PC_PATH_MAX","","",N,N],[17,"_PC_PIPE_BUF","","",N,N],[17,"_PC_CHOWN_RESTRICTED","","",N,N],[17,"_PC_NO_TRUNC","","",N,N],[17,"_PC_VDISABLE","","",N,N],[17,"_PC_SYNC_IO","","",N,N],[17,"_PC_ASYNC_IO","","",N,N],[17,"_PC_PRIO_IO","","",N,N],[17,"_PC_SOCK_MAXBUF","","",N,N],[17,"_PC_FILESIZEBITS","","",N,N],[17,"_PC_REC_INCR_XFER_SIZE","","",N,N],[17,"_PC_REC_MAX_XFER_SIZE","","",N,N],[17,"_PC_REC_MIN_XFER_SIZE","","",N,N],[17,"_PC_REC_XFER_ALIGN","","",N,N],[17,"_PC_ALLOC_SIZE_MIN","","",N,N],[17,"_PC_SYMLINK_MAX","","",N,N],[17,"_PC_2_SYMLINKS","","",N,N],[17,"_SC_ARG_MAX","","",N,N],[17,"_SC_CHILD_MAX","","",N,N],[17,"_SC_CLK_TCK","","",N,N],[17,"_SC_NGROUPS_MAX","","",N,N],[17,"_SC_OPEN_MAX","","",N,N],[17,"_SC_STREAM_MAX","","",N,N],[17,"_SC_TZNAME_MAX","","",N,N],[17,"_SC_JOB_CONTROL","","",N,N],[17,"_SC_SAVED_IDS","","",N,N],[17,"_SC_REALTIME_SIGNALS","","",N,N],[17,"_SC_PRIORITY_SCHEDULING","","",N,N],[17,"_SC_TIMERS","","",N,N],[17,"_SC_ASYNCHRONOUS_IO","","",N,N],[17,"_SC_PRIORITIZED_IO","","",N,N],[17,"_SC_SYNCHRONIZED_IO","","",N,N],[17,"_SC_FSYNC","","",N,N],[17,"_SC_MAPPED_FILES","","",N,N],[17,"_SC_MEMLOCK","","",N,N],[17,"_SC_MEMLOCK_RANGE","","",N,N],[17,"_SC_MEMORY_PROTECTION","","",N,N],[17,"_SC_MESSAGE_PASSING","","",N,N],[17,"_SC_SEMAPHORES","","",N,N],[17,"_SC_SHARED_MEMORY_OBJECTS","","",N,N],[17,"_SC_AIO_LISTIO_MAX","","",N,N],[17,"_SC_AIO_MAX","","",N,N],[17,"_SC_AIO_PRIO_DELTA_MAX","","",N,N],[17,"_SC_DELAYTIMER_MAX","","",N,N],[17,"_SC_MQ_OPEN_MAX","","",N,N],[17,"_SC_MQ_PRIO_MAX","","",N,N],[17,"_SC_VERSION","","",N,N],[17,"_SC_PAGESIZE","","",N,N],[17,"_SC_PAGE_SIZE","","",N,N],[17,"_SC_RTSIG_MAX","","",N,N],[17,"_SC_SEM_NSEMS_MAX","","",N,N],[17,"_SC_SEM_VALUE_MAX","","",N,N],[17,"_SC_SIGQUEUE_MAX","","",N,N],[17,"_SC_TIMER_MAX","","",N,N],[17,"_SC_BC_BASE_MAX","","",N,N],[17,"_SC_BC_DIM_MAX","","",N,N],[17,"_SC_BC_SCALE_MAX","","",N,N],[17,"_SC_BC_STRING_MAX","","",N,N],[17,"_SC_COLL_WEIGHTS_MAX","","",N,N],[17,"_SC_EXPR_NEST_MAX","","",N,N],[17,"_SC_LINE_MAX","","",N,N],[17,"_SC_RE_DUP_MAX","","",N,N],[17,"_SC_2_VERSION","","",N,N],[17,"_SC_2_C_BIND","","",N,N],[17,"_SC_2_C_DEV","","",N,N],[17,"_SC_2_FORT_DEV","","",N,N],[17,"_SC_2_FORT_RUN","","",N,N],[17,"_SC_2_SW_DEV","","",N,N],[17,"_SC_2_LOCALEDEF","","",N,N],[17,"_SC_UIO_MAXIOV","","",N,N],[17,"_SC_IOV_MAX","","",N,N],[17,"_SC_THREADS","","",N,N],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",N,N],[17,"_SC_GETGR_R_SIZE_MAX","","",N,N],[17,"_SC_GETPW_R_SIZE_MAX","","",N,N],[17,"_SC_LOGIN_NAME_MAX","","",N,N],[17,"_SC_TTY_NAME_MAX","","",N,N],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",N,N],[17,"_SC_THREAD_KEYS_MAX","","",N,N],[17,"_SC_THREAD_STACK_MIN","","",N,N],[17,"_SC_THREAD_THREADS_MAX","","",N,N],[17,"_SC_THREAD_ATTR_STACKADDR","","",N,N],[17,"_SC_THREAD_ATTR_STACKSIZE","","",N,N],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",N,N],[17,"_SC_THREAD_PRIO_INHERIT","","",N,N],[17,"_SC_THREAD_PRIO_PROTECT","","",N,N],[17,"_SC_THREAD_PROCESS_SHARED","","",N,N],[17,"_SC_NPROCESSORS_CONF","","",N,N],[17,"_SC_NPROCESSORS_ONLN","","",N,N],[17,"_SC_PHYS_PAGES","","",N,N],[17,"_SC_AVPHYS_PAGES","","",N,N],[17,"_SC_ATEXIT_MAX","","",N,N],[17,"_SC_PASS_MAX","","",N,N],[17,"_SC_XOPEN_VERSION","","",N,N],[17,"_SC_XOPEN_XCU_VERSION","","",N,N],[17,"_SC_XOPEN_UNIX","","",N,N],[17,"_SC_XOPEN_CRYPT","","",N,N],[17,"_SC_XOPEN_ENH_I18N","","",N,N],[17,"_SC_XOPEN_SHM","","",N,N],[17,"_SC_2_CHAR_TERM","","",N,N],[17,"_SC_2_UPE","","",N,N],[17,"_SC_XOPEN_XPG2","","",N,N],[17,"_SC_XOPEN_XPG3","","",N,N],[17,"_SC_XOPEN_XPG4","","",N,N],[17,"_SC_NZERO","","",N,N],[17,"_SC_XBS5_ILP32_OFF32","","",N,N],[17,"_SC_XBS5_ILP32_OFFBIG","","",N,N],[17,"_SC_XBS5_LP64_OFF64","","",N,N],[17,"_SC_XBS5_LPBIG_OFFBIG","","",N,N],[17,"_SC_XOPEN_LEGACY","","",N,N],[17,"_SC_XOPEN_REALTIME","","",N,N],[17,"_SC_XOPEN_REALTIME_THREADS","","",N,N],[17,"_SC_ADVISORY_INFO","","",N,N],[17,"_SC_BARRIERS","","",N,N],[17,"_SC_CLOCK_SELECTION","","",N,N],[17,"_SC_CPUTIME","","",N,N],[17,"_SC_THREAD_CPUTIME","","",N,N],[17,"_SC_MONOTONIC_CLOCK","","",N,N],[17,"_SC_READER_WRITER_LOCKS","","",N,N],[17,"_SC_SPIN_LOCKS","","",N,N],[17,"_SC_REGEXP","","",N,N],[17,"_SC_SHELL","","",N,N],[17,"_SC_SPAWN","","",N,N],[17,"_SC_SPORADIC_SERVER","","",N,N],[17,"_SC_THREAD_SPORADIC_SERVER","","",N,N],[17,"_SC_TIMEOUTS","","",N,N],[17,"_SC_TYPED_MEMORY_OBJECTS","","",N,N],[17,"_SC_2_PBS","","",N,N],[17,"_SC_2_PBS_ACCOUNTING","","",N,N],[17,"_SC_2_PBS_LOCATE","","",N,N],[17,"_SC_2_PBS_MESSAGE","","",N,N],[17,"_SC_2_PBS_TRACK","","",N,N],[17,"_SC_SYMLOOP_MAX","","",N,N],[17,"_SC_STREAMS","","",N,N],[17,"_SC_2_PBS_CHECKPOINT","","",N,N],[17,"_SC_V6_ILP32_OFF32","","",N,N],[17,"_SC_V6_ILP32_OFFBIG","","",N,N],[17,"_SC_V6_LP64_OFF64","","",N,N],[17,"_SC_V6_LPBIG_OFFBIG","","",N,N],[17,"_SC_HOST_NAME_MAX","","",N,N],[17,"_SC_TRACE","","",N,N],[17,"_SC_TRACE_EVENT_FILTER","","",N,N],[17,"_SC_TRACE_INHERIT","","",N,N],[17,"_SC_TRACE_LOG","","",N,N],[17,"_SC_IPV6","","",N,N],[17,"_SC_RAW_SOCKETS","","",N,N],[17,"_SC_V7_ILP32_OFF32","","",N,N],[17,"_SC_V7_ILP32_OFFBIG","","",N,N],[17,"_SC_V7_LP64_OFF64","","",N,N],[17,"_SC_V7_LPBIG_OFFBIG","","",N,N],[17,"_SC_SS_REPL_MAX","","",N,N],[17,"_SC_TRACE_EVENT_NAME_MAX","","",N,N],[17,"_SC_TRACE_NAME_MAX","","",N,N],[17,"_SC_TRACE_SYS_MAX","","",N,N],[17,"_SC_TRACE_USER_EVENT_MAX","","",N,N],[17,"_SC_XOPEN_STREAMS","","",N,N],[17,"_SC_THREAD_ROBUST_PRIO_INHERIT","","",N,N],[17,"_SC_THREAD_ROBUST_PRIO_PROTECT","","",N,N],[17,"RLIM_SAVED_MAX","","",N,N],[17,"RLIM_SAVED_CUR","","",N,N],[17,"GLOB_ERR","","",N,N],[17,"GLOB_MARK","","",N,N],[17,"GLOB_NOSORT","","",N,N],[17,"GLOB_DOOFFS","","",N,N],[17,"GLOB_NOCHECK","","",N,N],[17,"GLOB_APPEND","","",N,N],[17,"GLOB_NOESCAPE","","",N,N],[17,"GLOB_NOSPACE","","",N,N],[17,"GLOB_ABORTED","","",N,N],[17,"GLOB_NOMATCH","","",N,N],[17,"POSIX_MADV_NORMAL","","",N,N],[17,"POSIX_MADV_RANDOM","","",N,N],[17,"POSIX_MADV_SEQUENTIAL","","",N,N],[17,"POSIX_MADV_WILLNEED","","",N,N],[17,"S_IEXEC","","",N,N],[17,"S_IWRITE","","",N,N],[17,"S_IREAD","","",N,N],[17,"F_LOCK","","",N,N],[17,"F_TEST","","",N,N],[17,"F_TLOCK","","",N,N],[17,"F_ULOCK","","",N,N],[17,"IFF_LOWER_UP","","",N,N],[17,"IFF_DORMANT","","",N,N],[17,"IFF_ECHO","","",N,N],[17,"IFF_TUN","","",N,N],[17,"IFF_TAP","","",N,N],[17,"IFF_NO_PI","","",N,N],[17,"TUN_READQ_SIZE","","",N,N],[17,"TUN_TUN_DEV","","",N,N],[17,"TUN_TAP_DEV","","",N,N],[17,"TUN_TYPE_MASK","","",N,N],[17,"IFF_ONE_QUEUE","","",N,N],[17,"IFF_VNET_HDR","","",N,N],[17,"IFF_TUN_EXCL","","",N,N],[17,"IFF_MULTI_QUEUE","","",N,N],[17,"IFF_ATTACH_QUEUE","","",N,N],[17,"IFF_DETACH_QUEUE","","",N,N],[17,"IFF_PERSIST","","",N,N],[17,"IFF_NOFILTER","","",N,N],[17,"ST_RDONLY","","",N,N],[17,"ST_NOSUID","","",N,N],[17,"ST_NODEV","","",N,N],[17,"ST_NOEXEC","","",N,N],[17,"ST_SYNCHRONOUS","","",N,N],[17,"ST_MANDLOCK","","",N,N],[17,"ST_WRITE","","",N,N],[17,"ST_APPEND","","",N,N],[17,"ST_IMMUTABLE","","",N,N],[17,"ST_NOATIME","","",N,N],[17,"ST_NODIRATIME","","",N,N],[17,"RTLD_NEXT","","",N,N],[17,"RTLD_DEFAULT","","",N,N],[17,"RTLD_NODELETE","","",N,N],[17,"RTLD_NOW","","",N,N],[17,"TCP_MD5SIG","","",N,N],[17,"PTHREAD_MUTEX_INITIALIZER","","",N,N],[17,"PTHREAD_COND_INITIALIZER","","",N,N],[17,"PTHREAD_RWLOCK_INITIALIZER","","",N,N],[17,"PTHREAD_MUTEX_NORMAL","","",N,N],[17,"PTHREAD_MUTEX_RECURSIVE","","",N,N],[17,"PTHREAD_MUTEX_ERRORCHECK","","",N,N],[17,"PTHREAD_MUTEX_DEFAULT","","",N,N],[17,"PTHREAD_PROCESS_PRIVATE","","",N,N],[17,"PTHREAD_PROCESS_SHARED","","",N,N],[17,"__SIZEOF_PTHREAD_COND_T","","",N,N],[17,"RENAME_NOREPLACE","","",N,N],[17,"RENAME_EXCHANGE","","",N,N],[17,"RENAME_WHITEOUT","","",N,N],[17,"SCHED_OTHER","","",N,N],[17,"SCHED_FIFO","","",N,N],[17,"SCHED_RR","","",N,N],[17,"SCHED_BATCH","","",N,N],[17,"SCHED_IDLE","","",N,N],[17,"IPPROTO_HOPOPTS","","Hop-by-hop option header",N,N],[17,"IPPROTO_IGMP","","group mgmt protocol",N,N],[17,"IPPROTO_IPIP","","for compatibility",N,N],[17,"IPPROTO_EGP","","exterior gateway protocol",N,N],[17,"IPPROTO_PUP","","pup",N,N],[17,"IPPROTO_IDP","","xns idp",N,N],[17,"IPPROTO_TP","","tp-4 w/ class negotiation",N,N],[17,"IPPROTO_DCCP","","DCCP",N,N],[17,"IPPROTO_ROUTING","","IP6 routing header",N,N],[17,"IPPROTO_FRAGMENT","","IP6 fragmentation header",N,N],[17,"IPPROTO_RSVP","","resource reservation",N,N],[17,"IPPROTO_GRE","","General Routing Encap.",N,N],[17,"IPPROTO_ESP","","IP6 Encap Sec. Payload",N,N],[17,"IPPROTO_AH","","IP6 Auth Header",N,N],[17,"IPPROTO_NONE","","IP6 no next header",N,N],[17,"IPPROTO_DSTOPTS","","IP6 destination option",N,N],[17,"IPPROTO_MTP","","",N,N],[17,"IPPROTO_BEETPH","","",N,N],[17,"IPPROTO_ENCAP","","encapsulation header",N,N],[17,"IPPROTO_PIM","","Protocol indep. multicast",N,N],[17,"IPPROTO_COMP","","IP Payload Comp. Protocol",N,N],[17,"IPPROTO_SCTP","","SCTP",N,N],[17,"IPPROTO_MH","","",N,N],[17,"IPPROTO_UDPLITE","","",N,N],[17,"IPPROTO_MPLS","","",N,N],[17,"IPPROTO_RAW","","raw IP packet",N,N],[17,"IPPROTO_MAX","","",N,N],[17,"AF_IB","","",N,N],[17,"AF_MPLS","","",N,N],[17,"AF_NFC","","",N,N],[17,"AF_VSOCK","","",N,N],[17,"AF_XDP","","",N,N],[17,"PF_IB","","",N,N],[17,"PF_MPLS","","",N,N],[17,"PF_NFC","","",N,N],[17,"PF_VSOCK","","",N,N],[17,"PF_XDP","","",N,N],[17,"IPC_PRIVATE","","",N,N],[17,"IPC_CREAT","","",N,N],[17,"IPC_EXCL","","",N,N],[17,"IPC_NOWAIT","","",N,N],[17,"IPC_RMID","","",N,N],[17,"IPC_SET","","",N,N],[17,"IPC_STAT","","",N,N],[17,"IPC_INFO","","",N,N],[17,"MSG_STAT","","",N,N],[17,"MSG_INFO","","",N,N],[17,"MSG_NOERROR","","",N,N],[17,"MSG_EXCEPT","","",N,N],[17,"MSG_COPY","","",N,N],[17,"SHM_R","","",N,N],[17,"SHM_W","","",N,N],[17,"SHM_RDONLY","","",N,N],[17,"SHM_RND","","",N,N],[17,"SHM_REMAP","","",N,N],[17,"SHM_EXEC","","",N,N],[17,"SHM_LOCK","","",N,N],[17,"SHM_UNLOCK","","",N,N],[17,"SHM_HUGETLB","","",N,N],[17,"SHM_NORESERVE","","",N,N],[17,"EPOLLRDHUP","","",N,N],[17,"EPOLLEXCLUSIVE","","",N,N],[17,"EPOLLONESHOT","","",N,N],[17,"QFMT_VFS_OLD","","",N,N],[17,"QFMT_VFS_V0","","",N,N],[17,"QFMT_VFS_V1","","",N,N],[17,"EFD_SEMAPHORE","","",N,N],[17,"LOG_NFACILITIES","","",N,N],[17,"SEM_FAILED","","",N,N],[17,"RB_AUTOBOOT","","",N,N],[17,"RB_HALT_SYSTEM","","",N,N],[17,"RB_ENABLE_CAD","","",N,N],[17,"RB_DISABLE_CAD","","",N,N],[17,"RB_POWER_OFF","","",N,N],[17,"RB_SW_SUSPEND","","",N,N],[17,"RB_KEXEC","","",N,N],[17,"AI_PASSIVE","","",N,N],[17,"AI_CANONNAME","","",N,N],[17,"AI_NUMERICHOST","","",N,N],[17,"AI_V4MAPPED","","",N,N],[17,"AI_ALL","","",N,N],[17,"AI_ADDRCONFIG","","",N,N],[17,"AI_NUMERICSERV","","",N,N],[17,"EAI_BADFLAGS","","",N,N],[17,"EAI_NONAME","","",N,N],[17,"EAI_AGAIN","","",N,N],[17,"EAI_FAIL","","",N,N],[17,"EAI_NODATA","","",N,N],[17,"EAI_FAMILY","","",N,N],[17,"EAI_SOCKTYPE","","",N,N],[17,"EAI_SERVICE","","",N,N],[17,"EAI_MEMORY","","",N,N],[17,"EAI_SYSTEM","","",N,N],[17,"EAI_OVERFLOW","","",N,N],[17,"NI_NUMERICHOST","","",N,N],[17,"NI_NUMERICSERV","","",N,N],[17,"NI_NOFQDN","","",N,N],[17,"NI_NAMEREQD","","",N,N],[17,"NI_DGRAM","","",N,N],[17,"SYNC_FILE_RANGE_WAIT_BEFORE","","",N,N],[17,"SYNC_FILE_RANGE_WRITE","","",N,N],[17,"SYNC_FILE_RANGE_WAIT_AFTER","","",N,N],[17,"AIO_CANCELED","","",N,N],[17,"AIO_NOTCANCELED","","",N,N],[17,"AIO_ALLDONE","","",N,N],[17,"LIO_READ","","",N,N],[17,"LIO_WRITE","","",N,N],[17,"LIO_NOP","","",N,N],[17,"LIO_WAIT","","",N,N],[17,"LIO_NOWAIT","","",N,N],[17,"MREMAP_MAYMOVE","","",N,N],[17,"MREMAP_FIXED","","",N,N],[17,"PR_SET_PDEATHSIG","","",N,N],[17,"PR_GET_PDEATHSIG","","",N,N],[17,"PR_GET_DUMPABLE","","",N,N],[17,"PR_SET_DUMPABLE","","",N,N],[17,"PR_GET_UNALIGN","","",N,N],[17,"PR_SET_UNALIGN","","",N,N],[17,"PR_UNALIGN_NOPRINT","","",N,N],[17,"PR_UNALIGN_SIGBUS","","",N,N],[17,"PR_GET_KEEPCAPS","","",N,N],[17,"PR_SET_KEEPCAPS","","",N,N],[17,"PR_GET_FPEMU","","",N,N],[17,"PR_SET_FPEMU","","",N,N],[17,"PR_FPEMU_NOPRINT","","",N,N],[17,"PR_FPEMU_SIGFPE","","",N,N],[17,"PR_GET_FPEXC","","",N,N],[17,"PR_SET_FPEXC","","",N,N],[17,"PR_FP_EXC_SW_ENABLE","","",N,N],[17,"PR_FP_EXC_DIV","","",N,N],[17,"PR_FP_EXC_OVF","","",N,N],[17,"PR_FP_EXC_UND","","",N,N],[17,"PR_FP_EXC_RES","","",N,N],[17,"PR_FP_EXC_INV","","",N,N],[17,"PR_FP_EXC_DISABLED","","",N,N],[17,"PR_FP_EXC_NONRECOV","","",N,N],[17,"PR_FP_EXC_ASYNC","","",N,N],[17,"PR_FP_EXC_PRECISE","","",N,N],[17,"PR_GET_TIMING","","",N,N],[17,"PR_SET_TIMING","","",N,N],[17,"PR_TIMING_STATISTICAL","","",N,N],[17,"PR_TIMING_TIMESTAMP","","",N,N],[17,"PR_SET_NAME","","",N,N],[17,"PR_GET_NAME","","",N,N],[17,"PR_GET_ENDIAN","","",N,N],[17,"PR_SET_ENDIAN","","",N,N],[17,"PR_ENDIAN_BIG","","",N,N],[17,"PR_ENDIAN_LITTLE","","",N,N],[17,"PR_ENDIAN_PPC_LITTLE","","",N,N],[17,"PR_GET_SECCOMP","","",N,N],[17,"PR_SET_SECCOMP","","",N,N],[17,"PR_CAPBSET_READ","","",N,N],[17,"PR_CAPBSET_DROP","","",N,N],[17,"PR_GET_TSC","","",N,N],[17,"PR_SET_TSC","","",N,N],[17,"PR_TSC_ENABLE","","",N,N],[17,"PR_TSC_SIGSEGV","","",N,N],[17,"PR_GET_SECUREBITS","","",N,N],[17,"PR_SET_SECUREBITS","","",N,N],[17,"PR_SET_TIMERSLACK","","",N,N],[17,"PR_GET_TIMERSLACK","","",N,N],[17,"PR_TASK_PERF_EVENTS_DISABLE","","",N,N],[17,"PR_TASK_PERF_EVENTS_ENABLE","","",N,N],[17,"PR_MCE_KILL","","",N,N],[17,"PR_MCE_KILL_CLEAR","","",N,N],[17,"PR_MCE_KILL_SET","","",N,N],[17,"PR_MCE_KILL_LATE","","",N,N],[17,"PR_MCE_KILL_EARLY","","",N,N],[17,"PR_MCE_KILL_DEFAULT","","",N,N],[17,"PR_MCE_KILL_GET","","",N,N],[17,"PR_SET_MM","","",N,N],[17,"PR_SET_MM_START_CODE","","",N,N],[17,"PR_SET_MM_END_CODE","","",N,N],[17,"PR_SET_MM_START_DATA","","",N,N],[17,"PR_SET_MM_END_DATA","","",N,N],[17,"PR_SET_MM_START_STACK","","",N,N],[17,"PR_SET_MM_START_BRK","","",N,N],[17,"PR_SET_MM_BRK","","",N,N],[17,"PR_SET_MM_ARG_START","","",N,N],[17,"PR_SET_MM_ARG_END","","",N,N],[17,"PR_SET_MM_ENV_START","","",N,N],[17,"PR_SET_MM_ENV_END","","",N,N],[17,"PR_SET_MM_AUXV","","",N,N],[17,"PR_SET_MM_EXE_FILE","","",N,N],[17,"PR_SET_MM_MAP","","",N,N],[17,"PR_SET_MM_MAP_SIZE","","",N,N],[17,"PR_SET_PTRACER","","",N,N],[17,"PR_SET_CHILD_SUBREAPER","","",N,N],[17,"PR_GET_CHILD_SUBREAPER","","",N,N],[17,"PR_SET_NO_NEW_PRIVS","","",N,N],[17,"PR_GET_NO_NEW_PRIVS","","",N,N],[17,"PR_GET_TID_ADDRESS","","",N,N],[17,"PR_SET_THP_DISABLE","","",N,N],[17,"PR_GET_THP_DISABLE","","",N,N],[17,"PR_MPX_ENABLE_MANAGEMENT","","",N,N],[17,"PR_MPX_DISABLE_MANAGEMENT","","",N,N],[17,"PR_SET_FP_MODE","","",N,N],[17,"PR_GET_FP_MODE","","",N,N],[17,"PR_FP_MODE_FR","","",N,N],[17,"PR_FP_MODE_FRE","","",N,N],[17,"PR_CAP_AMBIENT","","",N,N],[17,"PR_CAP_AMBIENT_IS_SET","","",N,N],[17,"PR_CAP_AMBIENT_RAISE","","",N,N],[17,"PR_CAP_AMBIENT_LOWER","","",N,N],[17,"PR_CAP_AMBIENT_CLEAR_ALL","","",N,N],[17,"GRND_NONBLOCK","","",N,N],[17,"GRND_RANDOM","","",N,N],[17,"SECCOMP_MODE_DISABLED","","",N,N],[17,"SECCOMP_MODE_STRICT","","",N,N],[17,"SECCOMP_MODE_FILTER","","",N,N],[17,"ITIMER_REAL","","",N,N],[17,"ITIMER_VIRTUAL","","",N,N],[17,"ITIMER_PROF","","",N,N],[17,"TFD_CLOEXEC","","",N,N],[17,"TFD_NONBLOCK","","",N,N],[17,"TFD_TIMER_ABSTIME","","",N,N],[17,"XATTR_CREATE","","",N,N],[17,"XATTR_REPLACE","","",N,N],[17,"_POSIX_VDISABLE","","",N,N],[17,"FALLOC_FL_KEEP_SIZE","","",N,N],[17,"FALLOC_FL_PUNCH_HOLE","","",N,N],[17,"FALLOC_FL_COLLAPSE_RANGE","","",N,N],[17,"FALLOC_FL_ZERO_RANGE","","",N,N],[17,"FALLOC_FL_INSERT_RANGE","","",N,N],[17,"FALLOC_FL_UNSHARE_RANGE","","",N,N],[17,"ENOATTR","","",N,N],[17,"SO_ORIGINAL_DST","","",N,N],[17,"IUTF8","","",N,N],[17,"CMSPAR","","",N,N],[17,"MFD_CLOEXEC","","",N,N],[17,"MFD_ALLOW_SEALING","","",N,N],[17,"PT_NULL","","",N,N],[17,"PT_LOAD","","",N,N],[17,"PT_DYNAMIC","","",N,N],[17,"PT_INTERP","","",N,N],[17,"PT_NOTE","","",N,N],[17,"PT_SHLIB","","",N,N],[17,"PT_PHDR","","",N,N],[17,"PT_TLS","","",N,N],[17,"PT_NUM","","",N,N],[17,"PT_LOOS","","",N,N],[17,"PT_GNU_EH_FRAME","","",N,N],[17,"PT_GNU_STACK","","",N,N],[17,"PT_GNU_RELRO","","",N,N],[17,"ETH_ALEN","","",N,N],[17,"ETH_HLEN","","",N,N],[17,"ETH_ZLEN","","",N,N],[17,"ETH_DATA_LEN","","",N,N],[17,"ETH_FRAME_LEN","","",N,N],[17,"ETH_FCS_LEN","","",N,N],[17,"ETH_P_LOOP","","",N,N],[17,"ETH_P_PUP","","",N,N],[17,"ETH_P_PUPAT","","",N,N],[17,"ETH_P_IP","","",N,N],[17,"ETH_P_X25","","",N,N],[17,"ETH_P_ARP","","",N,N],[17,"ETH_P_BPQ","","",N,N],[17,"ETH_P_IEEEPUP","","",N,N],[17,"ETH_P_IEEEPUPAT","","",N,N],[17,"ETH_P_BATMAN","","",N,N],[17,"ETH_P_DEC","","",N,N],[17,"ETH_P_DNA_DL","","",N,N],[17,"ETH_P_DNA_RC","","",N,N],[17,"ETH_P_DNA_RT","","",N,N],[17,"ETH_P_LAT","","",N,N],[17,"ETH_P_DIAG","","",N,N],[17,"ETH_P_CUST","","",N,N],[17,"ETH_P_SCA","","",N,N],[17,"ETH_P_TEB","","",N,N],[17,"ETH_P_RARP","","",N,N],[17,"ETH_P_ATALK","","",N,N],[17,"ETH_P_AARP","","",N,N],[17,"ETH_P_8021Q","","",N,N],[17,"ETH_P_IPX","","",N,N],[17,"ETH_P_IPV6","","",N,N],[17,"ETH_P_PAUSE","","",N,N],[17,"ETH_P_SLOW","","",N,N],[17,"ETH_P_WCCP","","",N,N],[17,"ETH_P_MPLS_UC","","",N,N],[17,"ETH_P_MPLS_MC","","",N,N],[17,"ETH_P_ATMMPOA","","",N,N],[17,"ETH_P_PPP_DISC","","",N,N],[17,"ETH_P_PPP_SES","","",N,N],[17,"ETH_P_LINK_CTL","","",N,N],[17,"ETH_P_ATMFATE","","",N,N],[17,"ETH_P_PAE","","",N,N],[17,"ETH_P_AOE","","",N,N],[17,"ETH_P_8021AD","","",N,N],[17,"ETH_P_802_EX1","","",N,N],[17,"ETH_P_TIPC","","",N,N],[17,"ETH_P_MACSEC","","",N,N],[17,"ETH_P_8021AH","","",N,N],[17,"ETH_P_MVRP","","",N,N],[17,"ETH_P_1588","","",N,N],[17,"ETH_P_PRP","","",N,N],[17,"ETH_P_FCOE","","",N,N],[17,"ETH_P_TDLS","","",N,N],[17,"ETH_P_FIP","","",N,N],[17,"ETH_P_80221","","",N,N],[17,"ETH_P_LOOPBACK","","",N,N],[17,"ETH_P_QINQ1","","",N,N],[17,"ETH_P_QINQ2","","",N,N],[17,"ETH_P_QINQ3","","",N,N],[17,"ETH_P_EDSA","","",N,N],[17,"ETH_P_AF_IUCV","","",N,N],[17,"ETH_P_802_3_MIN","","",N,N],[17,"ETH_P_802_3","","",N,N],[17,"ETH_P_AX25","","",N,N],[17,"ETH_P_ALL","","",N,N],[17,"ETH_P_802_2","","",N,N],[17,"ETH_P_SNAP","","",N,N],[17,"ETH_P_DDCMP","","",N,N],[17,"ETH_P_WAN_PPP","","",N,N],[17,"ETH_P_PPP_MP","","",N,N],[17,"ETH_P_LOCALTALK","","",N,N],[17,"ETH_P_CANFD","","",N,N],[17,"ETH_P_PPPTALK","","",N,N],[17,"ETH_P_TR_802_2","","",N,N],[17,"ETH_P_MOBITEX","","",N,N],[17,"ETH_P_CONTROL","","",N,N],[17,"ETH_P_IRDA","","",N,N],[17,"ETH_P_ECONET","","",N,N],[17,"ETH_P_HDLC","","",N,N],[17,"ETH_P_ARCNET","","",N,N],[17,"ETH_P_DSA","","",N,N],[17,"ETH_P_TRAILER","","",N,N],[17,"ETH_P_PHONET","","",N,N],[17,"ETH_P_IEEE802154","","",N,N],[17,"ETH_P_CAIF","","",N,N],[17,"POSIX_SPAWN_RESETIDS","","",N,N],[17,"POSIX_SPAWN_SETPGROUP","","",N,N],[17,"POSIX_SPAWN_SETSIGDEF","","",N,N],[17,"POSIX_SPAWN_SETSIGMASK","","",N,N],[17,"POSIX_SPAWN_SETSCHEDPARAM","","",N,N],[17,"POSIX_SPAWN_SETSCHEDULER","","",N,N],[17,"NLMSG_NOOP","","",N,N],[17,"NLMSG_ERROR","","",N,N],[17,"NLMSG_DONE","","",N,N],[17,"NLMSG_OVERRUN","","",N,N],[17,"NLMSG_MIN_TYPE","","",N,N],[17,"GENL_NAMSIZ","","",N,N],[17,"GENL_MIN_ID","","",N,N],[17,"GENL_MAX_ID","","",N,N],[17,"GENL_ADMIN_PERM","","",N,N],[17,"GENL_CMD_CAP_DO","","",N,N],[17,"GENL_CMD_CAP_DUMP","","",N,N],[17,"GENL_CMD_CAP_HASPOL","","",N,N],[17,"GENL_ID_CTRL","","",N,N],[17,"CTRL_CMD_UNSPEC","","",N,N],[17,"CTRL_CMD_NEWFAMILY","","",N,N],[17,"CTRL_CMD_DELFAMILY","","",N,N],[17,"CTRL_CMD_GETFAMILY","","",N,N],[17,"CTRL_CMD_NEWOPS","","",N,N],[17,"CTRL_CMD_DELOPS","","",N,N],[17,"CTRL_CMD_GETOPS","","",N,N],[17,"CTRL_CMD_NEWMCAST_GRP","","",N,N],[17,"CTRL_CMD_DELMCAST_GRP","","",N,N],[17,"CTRL_CMD_GETMCAST_GRP","","",N,N],[17,"CTRL_ATTR_UNSPEC","","",N,N],[17,"CTRL_ATTR_FAMILY_ID","","",N,N],[17,"CTRL_ATTR_FAMILY_NAME","","",N,N],[17,"CTRL_ATTR_VERSION","","",N,N],[17,"CTRL_ATTR_HDRSIZE","","",N,N],[17,"CTRL_ATTR_MAXATTR","","",N,N],[17,"CTRL_ATTR_OPS","","",N,N],[17,"CTRL_ATTR_MCAST_GROUPS","","",N,N],[17,"CTRL_ATTR_OP_UNSPEC","","",N,N],[17,"CTRL_ATTR_OP_ID","","",N,N],[17,"CTRL_ATTR_OP_FLAGS","","",N,N],[17,"CTRL_ATTR_MCAST_GRP_UNSPEC","","",N,N],[17,"CTRL_ATTR_MCAST_GRP_NAME","","",N,N],[17,"CTRL_ATTR_MCAST_GRP_ID","","",N,N],[17,"PACKET_ADD_MEMBERSHIP","","",N,N],[17,"PACKET_DROP_MEMBERSHIP","","",N,N],[17,"PACKET_MR_MULTICAST","","",N,N],[17,"PACKET_MR_PROMISC","","",N,N],[17,"PACKET_MR_ALLMULTI","","",N,N],[17,"PACKET_MR_UNICAST","","",N,N],[17,"NF_DROP","","",N,N],[17,"NF_ACCEPT","","",N,N],[17,"NF_STOLEN","","",N,N],[17,"NF_QUEUE","","",N,N],[17,"NF_REPEAT","","",N,N],[17,"NF_STOP","","",N,N],[17,"NF_MAX_VERDICT","","",N,N],[17,"NF_VERDICT_MASK","","",N,N],[17,"NF_VERDICT_FLAG_QUEUE_BYPASS","","",N,N],[17,"NF_VERDICT_QMASK","","",N,N],[17,"NF_VERDICT_QBITS","","",N,N],[17,"NF_VERDICT_BITS","","",N,N],[17,"NF_INET_PRE_ROUTING","","",N,N],[17,"NF_INET_LOCAL_IN","","",N,N],[17,"NF_INET_FORWARD","","",N,N],[17,"NF_INET_LOCAL_OUT","","",N,N],[17,"NF_INET_POST_ROUTING","","",N,N],[17,"NF_INET_NUMHOOKS","","",N,N],[17,"NFPROTO_UNSPEC","","",N,N],[17,"NFPROTO_IPV4","","",N,N],[17,"NFPROTO_ARP","","",N,N],[17,"NFPROTO_BRIDGE","","",N,N],[17,"NFPROTO_IPV6","","",N,N],[17,"NFPROTO_DECNET","","",N,N],[17,"NFPROTO_NUMPROTO","","",N,N],[17,"NF_IP_PRE_ROUTING","","",N,N],[17,"NF_IP_LOCAL_IN","","",N,N],[17,"NF_IP_FORWARD","","",N,N],[17,"NF_IP_LOCAL_OUT","","",N,N],[17,"NF_IP_POST_ROUTING","","",N,N],[17,"NF_IP_NUMHOOKS","","",N,N],[17,"NF_IP_PRI_FIRST","","",N,N],[17,"NF_IP_PRI_CONNTRACK_DEFRAG","","",N,N],[17,"NF_IP_PRI_RAW","","",N,N],[17,"NF_IP_PRI_SELINUX_FIRST","","",N,N],[17,"NF_IP_PRI_CONNTRACK","","",N,N],[17,"NF_IP_PRI_MANGLE","","",N,N],[17,"NF_IP_PRI_NAT_DST","","",N,N],[17,"NF_IP_PRI_FILTER","","",N,N],[17,"NF_IP_PRI_SECURITY","","",N,N],[17,"NF_IP_PRI_NAT_SRC","","",N,N],[17,"NF_IP_PRI_SELINUX_LAST","","",N,N],[17,"NF_IP_PRI_CONNTRACK_HELPER","","",N,N],[17,"NF_IP_PRI_CONNTRACK_CONFIRM","","",N,N],[17,"NF_IP_PRI_LAST","","",N,N],[17,"NF_IP6_PRE_ROUTING","","",N,N],[17,"NF_IP6_LOCAL_IN","","",N,N],[17,"NF_IP6_FORWARD","","",N,N],[17,"NF_IP6_LOCAL_OUT","","",N,N],[17,"NF_IP6_POST_ROUTING","","",N,N],[17,"NF_IP6_NUMHOOKS","","",N,N],[17,"NF_IP6_PRI_FIRST","","",N,N],[17,"NF_IP6_PRI_CONNTRACK_DEFRAG","","",N,N],[17,"NF_IP6_PRI_RAW","","",N,N],[17,"NF_IP6_PRI_SELINUX_FIRST","","",N,N],[17,"NF_IP6_PRI_CONNTRACK","","",N,N],[17,"NF_IP6_PRI_MANGLE","","",N,N],[17,"NF_IP6_PRI_NAT_DST","","",N,N],[17,"NF_IP6_PRI_FILTER","","",N,N],[17,"NF_IP6_PRI_SECURITY","","",N,N],[17,"NF_IP6_PRI_NAT_SRC","","",N,N],[17,"NF_IP6_PRI_SELINUX_LAST","","",N,N],[17,"NF_IP6_PRI_CONNTRACK_HELPER","","",N,N],[17,"NF_IP6_PRI_LAST","","",N,N],[17,"SIOCADDRT","","",N,N],[17,"SIOCDELRT","","",N,N],[17,"SIOCGIFNAME","","",N,N],[17,"SIOCSIFLINK","","",N,N],[17,"SIOCGIFCONF","","",N,N],[17,"SIOCGIFFLAGS","","",N,N],[17,"SIOCSIFFLAGS","","",N,N],[17,"SIOCGIFADDR","","",N,N],[17,"SIOCSIFADDR","","",N,N],[17,"SIOCGIFDSTADDR","","",N,N],[17,"SIOCSIFDSTADDR","","",N,N],[17,"SIOCGIFBRDADDR","","",N,N],[17,"SIOCSIFBRDADDR","","",N,N],[17,"SIOCGIFNETMASK","","",N,N],[17,"SIOCSIFNETMASK","","",N,N],[17,"SIOCGIFMETRIC","","",N,N],[17,"SIOCSIFMETRIC","","",N,N],[17,"SIOCGIFMEM","","",N,N],[17,"SIOCSIFMEM","","",N,N],[17,"SIOCGIFMTU","","",N,N],[17,"SIOCSIFMTU","","",N,N],[17,"SIOCSIFHWADDR","","",N,N],[17,"SIOCGIFENCAP","","",N,N],[17,"SIOCSIFENCAP","","",N,N],[17,"SIOCGIFHWADDR","","",N,N],[17,"SIOCGIFSLAVE","","",N,N],[17,"SIOCSIFSLAVE","","",N,N],[17,"SIOCADDMULTI","","",N,N],[17,"SIOCDELMULTI","","",N,N],[17,"SIOCDARP","","",N,N],[17,"SIOCGARP","","",N,N],[17,"SIOCSARP","","",N,N],[17,"SIOCDRARP","","",N,N],[17,"SIOCGRARP","","",N,N],[17,"SIOCSRARP","","",N,N],[17,"SIOCGIFMAP","","",N,N],[17,"SIOCSIFMAP","","",N,N],[17,"IPTOS_TOS_MASK","","",N,N],[17,"IPTOS_PREC_MASK","","",N,N],[17,"RTF_UP","","",N,N],[17,"RTF_GATEWAY","","",N,N],[17,"RTF_HOST","","",N,N],[17,"RTF_REINSTATE","","",N,N],[17,"RTF_DYNAMIC","","",N,N],[17,"RTF_MODIFIED","","",N,N],[17,"RTF_MTU","","",N,N],[17,"RTF_MSS","","",N,N],[17,"RTF_WINDOW","","",N,N],[17,"RTF_IRTT","","",N,N],[17,"RTF_REJECT","","",N,N],[17,"RTF_STATIC","","",N,N],[17,"RTF_XRESOLVE","","",N,N],[17,"RTF_NOFORWARD","","",N,N],[17,"RTF_THROW","","",N,N],[17,"RTF_NOPMTUDISC","","",N,N],[17,"RTF_DEFAULT","","",N,N],[17,"RTF_ALLONLINK","","",N,N],[17,"RTF_ADDRCONF","","",N,N],[17,"RTF_LINKRT","","",N,N],[17,"RTF_NONEXTHOP","","",N,N],[17,"RTF_CACHE","","",N,N],[17,"RTF_FLOW","","",N,N],[17,"RTF_POLICY","","",N,N],[17,"RTCF_VALVE","","",N,N],[17,"RTCF_MASQ","","",N,N],[17,"RTCF_NAT","","",N,N],[17,"RTCF_DOREDIRECT","","",N,N],[17,"RTCF_LOG","","",N,N],[17,"RTCF_DIRECTSRC","","",N,N],[17,"RTF_LOCAL","","",N,N],[17,"RTF_INTERFACE","","",N,N],[17,"RTF_MULTICAST","","",N,N],[17,"RTF_BROADCAST","","",N,N],[17,"RTF_NAT","","",N,N],[17,"RTF_ADDRCLASSMASK","","",N,N],[17,"RT_CLASS_UNSPEC","","",N,N],[17,"RT_CLASS_DEFAULT","","",N,N],[17,"RT_CLASS_MAIN","","",N,N],[17,"RT_CLASS_LOCAL","","",N,N],[17,"RT_CLASS_MAX","","",N,N],[17,"RTMSG_OVERRUN","","",N,N],[17,"RTMSG_NEWDEVICE","","",N,N],[17,"RTMSG_DELDEVICE","","",N,N],[17,"RTMSG_NEWROUTE","","",N,N],[17,"RTMSG_DELROUTE","","",N,N],[17,"RTMSG_NEWRULE","","",N,N],[17,"RTMSG_DELRULE","","",N,N],[17,"RTMSG_CONTROL","","",N,N],[17,"RTMSG_AR_FAILED","","",N,N],[17,"MAX_ADDR_LEN","","",N,N],[17,"ARPD_UPDATE","","",N,N],[17,"ARPD_LOOKUP","","",N,N],[17,"ARPD_FLUSH","","",N,N],[17,"ATF_MAGIC","","",N,N],[17,"SO_TIMESTAMPING","","",N,N],[17,"SCM_TIMESTAMPING","","",N,N],[17,"MODULE_INIT_IGNORE_MODVERSIONS","","",N,N],[17,"MODULE_INIT_IGNORE_VERMAGIC","","",N,N],[17,"SOF_TIMESTAMPING_TX_HARDWARE","","",N,N],[17,"SOF_TIMESTAMPING_TX_SOFTWARE","","",N,N],[17,"SOF_TIMESTAMPING_RX_HARDWARE","","",N,N],[17,"SOF_TIMESTAMPING_RX_SOFTWARE","","",N,N],[17,"SOF_TIMESTAMPING_SOFTWARE","","",N,N],[17,"SOF_TIMESTAMPING_SYS_HARDWARE","","",N,N],[17,"SOF_TIMESTAMPING_RAW_HARDWARE","","",N,N],[17,"__UT_LINESIZE","","",N,N],[17,"__UT_NAMESIZE","","",N,N],[17,"__UT_HOSTSIZE","","",N,N],[17,"EMPTY","","",N,N],[17,"RUN_LVL","","",N,N],[17,"BOOT_TIME","","",N,N],[17,"NEW_TIME","","",N,N],[17,"OLD_TIME","","",N,N],[17,"INIT_PROCESS","","",N,N],[17,"LOGIN_PROCESS","","",N,N],[17,"USER_PROCESS","","",N,N],[17,"DEAD_PROCESS","","",N,N],[17,"ACCOUNTING","","",N,N],[17,"RLIMIT_RSS","","",N,N],[17,"RLIMIT_AS","","",N,N],[17,"RLIMIT_MEMLOCK","","",N,N],[17,"RLIM_INFINITY","","",N,N],[17,"RLIMIT_RTTIME","","",N,N],[17,"RLIMIT_NLIMITS","","",N,N],[17,"SOCK_NONBLOCK","","",N,N],[17,"SOL_RXRPC","","",N,N],[17,"SOL_PPPOL2TP","","",N,N],[17,"SOL_PNPIPE","","",N,N],[17,"SOL_RDS","","",N,N],[17,"SOL_IUCV","","",N,N],[17,"SOL_CAIF","","",N,N],[17,"SOL_ALG","","",N,N],[17,"SOL_NFC","","",N,N],[17,"SOL_XDP","","",N,N],[17,"MSG_TRYHARD","","",N,N],[17,"LC_PAPER","","",N,N],[17,"LC_NAME","","",N,N],[17,"LC_ADDRESS","","",N,N],[17,"LC_TELEPHONE","","",N,N],[17,"LC_MEASUREMENT","","",N,N],[17,"LC_IDENTIFICATION","","",N,N],[17,"LC_PAPER_MASK","","",N,N],[17,"LC_NAME_MASK","","",N,N],[17,"LC_ADDRESS_MASK","","",N,N],[17,"LC_TELEPHONE_MASK","","",N,N],[17,"LC_MEASUREMENT_MASK","","",N,N],[17,"LC_IDENTIFICATION_MASK","","",N,N],[17,"LC_ALL_MASK","","",N,N],[17,"MAP_ANON","","",N,N],[17,"MAP_ANONYMOUS","","",N,N],[17,"MAP_DENYWRITE","","",N,N],[17,"MAP_EXECUTABLE","","",N,N],[17,"MAP_POPULATE","","",N,N],[17,"MAP_NONBLOCK","","",N,N],[17,"MAP_STACK","","",N,N],[17,"ENOTSUP","","",N,N],[17,"EUCLEAN","","",N,N],[17,"ENOTNAM","","",N,N],[17,"ENAVAIL","","",N,N],[17,"EISNAM","","",N,N],[17,"EREMOTEIO","","",N,N],[17,"SOCK_STREAM","","",N,N],[17,"SOCK_DGRAM","","",N,N],[17,"SOCK_SEQPACKET","","",N,N],[17,"SOCK_DCCP","","",N,N],[17,"SOCK_PACKET","","",N,N],[17,"TCP_COOKIE_TRANSACTIONS","","",N,N],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",N,N],[17,"TCP_THIN_DUPACK","","",N,N],[17,"TCP_USER_TIMEOUT","","",N,N],[17,"TCP_REPAIR","","",N,N],[17,"TCP_REPAIR_QUEUE","","",N,N],[17,"TCP_QUEUE_SEQ","","",N,N],[17,"TCP_REPAIR_OPTIONS","","",N,N],[17,"TCP_FASTOPEN","","",N,N],[17,"TCP_TIMESTAMP","","",N,N],[17,"DCCP_SOCKOPT_PACKET_SIZE","","",N,N],[17,"DCCP_SOCKOPT_SERVICE","","",N,N],[17,"DCCP_SOCKOPT_CHANGE_L","","",N,N],[17,"DCCP_SOCKOPT_CHANGE_R","","",N,N],[17,"DCCP_SOCKOPT_GET_CUR_MPS","","",N,N],[17,"DCCP_SOCKOPT_SERVER_TIMEWAIT","","",N,N],[17,"DCCP_SOCKOPT_SEND_CSCOV","","",N,N],[17,"DCCP_SOCKOPT_RECV_CSCOV","","",N,N],[17,"DCCP_SOCKOPT_AVAILABLE_CCIDS","","",N,N],[17,"DCCP_SOCKOPT_CCID","","",N,N],[17,"DCCP_SOCKOPT_TX_CCID","","",N,N],[17,"DCCP_SOCKOPT_RX_CCID","","",N,N],[17,"DCCP_SOCKOPT_QPOLICY_ID","","",N,N],[17,"DCCP_SOCKOPT_QPOLICY_TXQLEN","","",N,N],[17,"DCCP_SOCKOPT_CCID_RX_INFO","","",N,N],[17,"DCCP_SOCKOPT_CCID_TX_INFO","","",N,N],[17,"DCCP_SERVICE_LIST_MAX_LEN","","maximum number of services provided on the same listening…",N,N],[17,"SIGTTIN","","",N,N],[17,"SIGTTOU","","",N,N],[17,"SIGXCPU","","",N,N],[17,"SIGXFSZ","","",N,N],[17,"SIGVTALRM","","",N,N],[17,"SIGPROF","","",N,N],[17,"SIGWINCH","","",N,N],[17,"SIGEV_THREAD_ID","","",N,N],[17,"BUFSIZ","","",N,N],[17,"TMP_MAX","","",N,N],[17,"FOPEN_MAX","","",N,N],[17,"POSIX_FADV_DONTNEED","","",N,N],[17,"POSIX_FADV_NOREUSE","","",N,N],[17,"POSIX_MADV_DONTNEED","","",N,N],[17,"_SC_EQUIV_CLASS_MAX","","",N,N],[17,"_SC_CHARCLASS_NAME_MAX","","",N,N],[17,"_SC_PII","","",N,N],[17,"_SC_PII_XTI","","",N,N],[17,"_SC_PII_SOCKET","","",N,N],[17,"_SC_PII_INTERNET","","",N,N],[17,"_SC_PII_OSI","","",N,N],[17,"_SC_POLL","","",N,N],[17,"_SC_SELECT","","",N,N],[17,"_SC_PII_INTERNET_STREAM","","",N,N],[17,"_SC_PII_INTERNET_DGRAM","","",N,N],[17,"_SC_PII_OSI_COTS","","",N,N],[17,"_SC_PII_OSI_CLTS","","",N,N],[17,"_SC_PII_OSI_M","","",N,N],[17,"_SC_T_IOV_MAX","","",N,N],[17,"_SC_2_C_VERSION","","",N,N],[17,"_SC_CHAR_BIT","","",N,N],[17,"_SC_CHAR_MAX","","",N,N],[17,"_SC_CHAR_MIN","","",N,N],[17,"_SC_INT_MAX","","",N,N],[17,"_SC_INT_MIN","","",N,N],[17,"_SC_LONG_BIT","","",N,N],[17,"_SC_WORD_BIT","","",N,N],[17,"_SC_MB_LEN_MAX","","",N,N],[17,"_SC_SSIZE_MAX","","",N,N],[17,"_SC_SCHAR_MAX","","",N,N],[17,"_SC_SCHAR_MIN","","",N,N],[17,"_SC_SHRT_MAX","","",N,N],[17,"_SC_SHRT_MIN","","",N,N],[17,"_SC_UCHAR_MAX","","",N,N],[17,"_SC_UINT_MAX","","",N,N],[17,"_SC_ULONG_MAX","","",N,N],[17,"_SC_USHRT_MAX","","",N,N],[17,"_SC_NL_ARGMAX","","",N,N],[17,"_SC_NL_LANGMAX","","",N,N],[17,"_SC_NL_MSGMAX","","",N,N],[17,"_SC_NL_NMAX","","",N,N],[17,"_SC_NL_SETMAX","","",N,N],[17,"_SC_NL_TEXTMAX","","",N,N],[17,"_SC_BASE","","",N,N],[17,"_SC_C_LANG_SUPPORT","","",N,N],[17,"_SC_C_LANG_SUPPORT_R","","",N,N],[17,"_SC_DEVICE_IO","","",N,N],[17,"_SC_DEVICE_SPECIFIC","","",N,N],[17,"_SC_DEVICE_SPECIFIC_R","","",N,N],[17,"_SC_FD_MGMT","","",N,N],[17,"_SC_FIFO","","",N,N],[17,"_SC_PIPE","","",N,N],[17,"_SC_FILE_ATTRIBUTES","","",N,N],[17,"_SC_FILE_LOCKING","","",N,N],[17,"_SC_FILE_SYSTEM","","",N,N],[17,"_SC_MULTI_PROCESS","","",N,N],[17,"_SC_SINGLE_PROCESS","","",N,N],[17,"_SC_NETWORKING","","",N,N],[17,"_SC_REGEX_VERSION","","",N,N],[17,"_SC_SIGNALS","","",N,N],[17,"_SC_SYSTEM_DATABASE","","",N,N],[17,"_SC_SYSTEM_DATABASE_R","","",N,N],[17,"_SC_USER_GROUPS","","",N,N],[17,"_SC_USER_GROUPS_R","","",N,N],[17,"_SC_LEVEL1_ICACHE_SIZE","","",N,N],[17,"_SC_LEVEL1_ICACHE_ASSOC","","",N,N],[17,"_SC_LEVEL1_ICACHE_LINESIZE","","",N,N],[17,"_SC_LEVEL1_DCACHE_SIZE","","",N,N],[17,"_SC_LEVEL1_DCACHE_ASSOC","","",N,N],[17,"_SC_LEVEL1_DCACHE_LINESIZE","","",N,N],[17,"_SC_LEVEL2_CACHE_SIZE","","",N,N],[17,"_SC_LEVEL2_CACHE_ASSOC","","",N,N],[17,"_SC_LEVEL2_CACHE_LINESIZE","","",N,N],[17,"_SC_LEVEL3_CACHE_SIZE","","",N,N],[17,"_SC_LEVEL3_CACHE_ASSOC","","",N,N],[17,"_SC_LEVEL3_CACHE_LINESIZE","","",N,N],[17,"_SC_LEVEL4_CACHE_SIZE","","",N,N],[17,"_SC_LEVEL4_CACHE_ASSOC","","",N,N],[17,"_SC_LEVEL4_CACHE_LINESIZE","","",N,N],[17,"O_ACCMODE","","",N,N],[17,"ST_RELATIME","","",N,N],[17,"NI_MAXHOST","","",N,N],[17,"ADFS_SUPER_MAGIC","","",N,N],[17,"AFFS_SUPER_MAGIC","","",N,N],[17,"CODA_SUPER_MAGIC","","",N,N],[17,"CRAMFS_MAGIC","","",N,N],[17,"EFS_SUPER_MAGIC","","",N,N],[17,"EXT2_SUPER_MAGIC","","",N,N],[17,"EXT3_SUPER_MAGIC","","",N,N],[17,"EXT4_SUPER_MAGIC","","",N,N],[17,"HPFS_SUPER_MAGIC","","",N,N],[17,"HUGETLBFS_MAGIC","","",N,N],[17,"ISOFS_SUPER_MAGIC","","",N,N],[17,"JFFS2_SUPER_MAGIC","","",N,N],[17,"MINIX_SUPER_MAGIC","","",N,N],[17,"MINIX_SUPER_MAGIC2","","",N,N],[17,"MINIX2_SUPER_MAGIC","","",N,N],[17,"MINIX2_SUPER_MAGIC2","","",N,N],[17,"MSDOS_SUPER_MAGIC","","",N,N],[17,"NCP_SUPER_MAGIC","","",N,N],[17,"NFS_SUPER_MAGIC","","",N,N],[17,"OPENPROM_SUPER_MAGIC","","",N,N],[17,"PROC_SUPER_MAGIC","","",N,N],[17,"QNX4_SUPER_MAGIC","","",N,N],[17,"REISERFS_SUPER_MAGIC","","",N,N],[17,"SMB_SUPER_MAGIC","","",N,N],[17,"TMPFS_MAGIC","","",N,N],[17,"USBDEVICE_SUPER_MAGIC","","",N,N],[17,"VEOF","","",N,N],[17,"CPU_SETSIZE","","",N,N],[17,"PTRACE_TRACEME","","",N,N],[17,"PTRACE_PEEKTEXT","","",N,N],[17,"PTRACE_PEEKDATA","","",N,N],[17,"PTRACE_PEEKUSER","","",N,N],[17,"PTRACE_POKETEXT","","",N,N],[17,"PTRACE_POKEDATA","","",N,N],[17,"PTRACE_POKEUSER","","",N,N],[17,"PTRACE_CONT","","",N,N],[17,"PTRACE_KILL","","",N,N],[17,"PTRACE_SINGLESTEP","","",N,N],[17,"PTRACE_ATTACH","","",N,N],[17,"PTRACE_SYSCALL","","",N,N],[17,"PTRACE_SETOPTIONS","","",N,N],[17,"PTRACE_GETEVENTMSG","","",N,N],[17,"PTRACE_GETSIGINFO","","",N,N],[17,"PTRACE_SETSIGINFO","","",N,N],[17,"PTRACE_GETREGSET","","",N,N],[17,"PTRACE_SETREGSET","","",N,N],[17,"PTRACE_SEIZE","","",N,N],[17,"PTRACE_INTERRUPT","","",N,N],[17,"PTRACE_LISTEN","","",N,N],[17,"PTRACE_PEEKSIGINFO","","",N,N],[17,"EPOLLWAKEUP","","",N,N],[17,"MAP_HUGETLB","","",N,N],[17,"SEEK_DATA","","",N,N],[17,"SEEK_HOLE","","",N,N],[17,"TCSANOW","","",N,N],[17,"TCSADRAIN","","",N,N],[17,"TCSAFLUSH","","",N,N],[17,"TIOCLINUX","","",N,N],[17,"TIOCGSERIAL","","",N,N],[17,"RTLD_DEEPBIND","","",N,N],[17,"RTLD_GLOBAL","","",N,N],[17,"RTLD_NOLOAD","","",N,N],[17,"LINUX_REBOOT_MAGIC1","","",N,N],[17,"LINUX_REBOOT_MAGIC2","","",N,N],[17,"LINUX_REBOOT_MAGIC2A","","",N,N],[17,"LINUX_REBOOT_MAGIC2B","","",N,N],[17,"LINUX_REBOOT_MAGIC2C","","",N,N],[17,"LINUX_REBOOT_CMD_RESTART","","",N,N],[17,"LINUX_REBOOT_CMD_HALT","","",N,N],[17,"LINUX_REBOOT_CMD_CAD_ON","","",N,N],[17,"LINUX_REBOOT_CMD_CAD_OFF","","",N,N],[17,"LINUX_REBOOT_CMD_POWER_OFF","","",N,N],[17,"LINUX_REBOOT_CMD_RESTART2","","",N,N],[17,"LINUX_REBOOT_CMD_SW_SUSPEND","","",N,N],[17,"LINUX_REBOOT_CMD_KEXEC","","",N,N],[17,"NETLINK_ROUTE","","",N,N],[17,"NETLINK_UNUSED","","",N,N],[17,"NETLINK_USERSOCK","","",N,N],[17,"NETLINK_FIREWALL","","",N,N],[17,"NETLINK_SOCK_DIAG","","",N,N],[17,"NETLINK_NFLOG","","",N,N],[17,"NETLINK_XFRM","","",N,N],[17,"NETLINK_SELINUX","","",N,N],[17,"NETLINK_ISCSI","","",N,N],[17,"NETLINK_AUDIT","","",N,N],[17,"NETLINK_FIB_LOOKUP","","",N,N],[17,"NETLINK_CONNECTOR","","",N,N],[17,"NETLINK_NETFILTER","","",N,N],[17,"NETLINK_IP6_FW","","",N,N],[17,"NETLINK_DNRTMSG","","",N,N],[17,"NETLINK_KOBJECT_UEVENT","","",N,N],[17,"NETLINK_GENERIC","","",N,N],[17,"NETLINK_SCSITRANSPORT","","",N,N],[17,"NETLINK_ECRYPTFS","","",N,N],[17,"NETLINK_RDMA","","",N,N],[17,"NETLINK_CRYPTO","","",N,N],[17,"NETLINK_INET_DIAG","","",N,N],[17,"MAX_LINKS","","",N,N],[17,"NLM_F_REQUEST","","",N,N],[17,"NLM_F_MULTI","","",N,N],[17,"NLM_F_ACK","","",N,N],[17,"NLM_F_ECHO","","",N,N],[17,"NLM_F_DUMP_INTR","","",N,N],[17,"NLM_F_DUMP_FILTERED","","",N,N],[17,"NLM_F_ROOT","","",N,N],[17,"NLM_F_MATCH","","",N,N],[17,"NLM_F_ATOMIC","","",N,N],[17,"NLM_F_DUMP","","",N,N],[17,"NLM_F_REPLACE","","",N,N],[17,"NLM_F_EXCL","","",N,N],[17,"NLM_F_CREATE","","",N,N],[17,"NLM_F_APPEND","","",N,N],[17,"NETLINK_ADD_MEMBERSHIP","","",N,N],[17,"NETLINK_DROP_MEMBERSHIP","","",N,N],[17,"NETLINK_PKTINFO","","",N,N],[17,"NETLINK_BROADCAST_ERROR","","",N,N],[17,"NETLINK_NO_ENOBUFS","","",N,N],[17,"NETLINK_RX_RING","","",N,N],[17,"NETLINK_TX_RING","","",N,N],[17,"NETLINK_LISTEN_ALL_NSID","","",N,N],[17,"NETLINK_LIST_MEMBERSHIPS","","",N,N],[17,"NETLINK_CAP_ACK","","",N,N],[17,"NLA_F_NESTED","","",N,N],[17,"NLA_F_NET_BYTEORDER","","",N,N],[17,"NLA_TYPE_MASK","","",N,N],[17,"NLA_ALIGNTO","","",N,N],[17,"GENL_UNS_ADMIN_PERM","","",N,N],[17,"GENL_ID_VFS_DQUOT","","",N,N],[17,"GENL_ID_PMCRAID","","",N,N],[17,"TIOCM_LE","","",N,N],[17,"TIOCM_DTR","","",N,N],[17,"TIOCM_RTS","","",N,N],[17,"TIOCM_ST","","",N,N],[17,"TIOCM_SR","","",N,N],[17,"TIOCM_CTS","","",N,N],[17,"TIOCM_CAR","","",N,N],[17,"TIOCM_RNG","","",N,N],[17,"TIOCM_DSR","","",N,N],[17,"TIOCM_CD","","",N,N],[17,"TIOCM_RI","","",N,N],[17,"NF_NETDEV_INGRESS","","",N,N],[17,"NF_NETDEV_NUMHOOKS","","",N,N],[17,"NFPROTO_INET","","",N,N],[17,"NFPROTO_NETDEV","","",N,N],[17,"NFT_TABLE_MAXNAMELEN","","",N,N],[17,"NFT_CHAIN_MAXNAMELEN","","",N,N],[17,"NFT_SET_MAXNAMELEN","","",N,N],[17,"NFT_OBJ_MAXNAMELEN","","",N,N],[17,"NFT_USERDATA_MAXLEN","","",N,N],[17,"NFT_REG_VERDICT","","",N,N],[17,"NFT_REG_1","","",N,N],[17,"NFT_REG_2","","",N,N],[17,"NFT_REG_3","","",N,N],[17,"NFT_REG_4","","",N,N],[17,"__NFT_REG_MAX","","",N,N],[17,"NFT_REG32_00","","",N,N],[17,"NFT_REG32_01","","",N,N],[17,"NFT_REG32_02","","",N,N],[17,"NFT_REG32_03","","",N,N],[17,"NFT_REG32_04","","",N,N],[17,"NFT_REG32_05","","",N,N],[17,"NFT_REG32_06","","",N,N],[17,"NFT_REG32_07","","",N,N],[17,"NFT_REG32_08","","",N,N],[17,"NFT_REG32_09","","",N,N],[17,"NFT_REG32_10","","",N,N],[17,"NFT_REG32_11","","",N,N],[17,"NFT_REG32_12","","",N,N],[17,"NFT_REG32_13","","",N,N],[17,"NFT_REG32_14","","",N,N],[17,"NFT_REG32_15","","",N,N],[17,"NFT_REG_SIZE","","",N,N],[17,"NFT_REG32_SIZE","","",N,N],[17,"NFT_CONTINUE","","",N,N],[17,"NFT_BREAK","","",N,N],[17,"NFT_JUMP","","",N,N],[17,"NFT_GOTO","","",N,N],[17,"NFT_RETURN","","",N,N],[17,"NFT_MSG_NEWTABLE","","",N,N],[17,"NFT_MSG_GETTABLE","","",N,N],[17,"NFT_MSG_DELTABLE","","",N,N],[17,"NFT_MSG_NEWCHAIN","","",N,N],[17,"NFT_MSG_GETCHAIN","","",N,N],[17,"NFT_MSG_DELCHAIN","","",N,N],[17,"NFT_MSG_NEWRULE","","",N,N],[17,"NFT_MSG_GETRULE","","",N,N],[17,"NFT_MSG_DELRULE","","",N,N],[17,"NFT_MSG_NEWSET","","",N,N],[17,"NFT_MSG_GETSET","","",N,N],[17,"NFT_MSG_DELSET","","",N,N],[17,"NFT_MSG_NEWSETELEM","","",N,N],[17,"NFT_MSG_GETSETELEM","","",N,N],[17,"NFT_MSG_DELSETELEM","","",N,N],[17,"NFT_MSG_NEWGEN","","",N,N],[17,"NFT_MSG_GETGEN","","",N,N],[17,"NFT_MSG_TRACE","","",N,N],[17,"NFT_MSG_NEWOBJ","","",N,N],[17,"NFT_MSG_GETOBJ","","",N,N],[17,"NFT_MSG_DELOBJ","","",N,N],[17,"NFT_MSG_GETOBJ_RESET","","",N,N],[17,"NFT_MSG_MAX","","",N,N],[17,"NFT_SET_ANONYMOUS","","",N,N],[17,"NFT_SET_CONSTANT","","",N,N],[17,"NFT_SET_INTERVAL","","",N,N],[17,"NFT_SET_MAP","","",N,N],[17,"NFT_SET_TIMEOUT","","",N,N],[17,"NFT_SET_EVAL","","",N,N],[17,"NFT_SET_POL_PERFORMANCE","","",N,N],[17,"NFT_SET_POL_MEMORY","","",N,N],[17,"NFT_SET_ELEM_INTERVAL_END","","",N,N],[17,"NFT_DATA_VALUE","","",N,N],[17,"NFT_DATA_VERDICT","","",N,N],[17,"NFT_DATA_RESERVED_MASK","","",N,N],[17,"NFT_DATA_VALUE_MAXLEN","","",N,N],[17,"NFT_BYTEORDER_NTOH","","",N,N],[17,"NFT_BYTEORDER_HTON","","",N,N],[17,"NFT_CMP_EQ","","",N,N],[17,"NFT_CMP_NEQ","","",N,N],[17,"NFT_CMP_LT","","",N,N],[17,"NFT_CMP_LTE","","",N,N],[17,"NFT_CMP_GT","","",N,N],[17,"NFT_CMP_GTE","","",N,N],[17,"NFT_RANGE_EQ","","",N,N],[17,"NFT_RANGE_NEQ","","",N,N],[17,"NFT_LOOKUP_F_INV","","",N,N],[17,"NFT_DYNSET_OP_ADD","","",N,N],[17,"NFT_DYNSET_OP_UPDATE","","",N,N],[17,"NFT_DYNSET_F_INV","","",N,N],[17,"NFT_PAYLOAD_LL_HEADER","","",N,N],[17,"NFT_PAYLOAD_NETWORK_HEADER","","",N,N],[17,"NFT_PAYLOAD_TRANSPORT_HEADER","","",N,N],[17,"NFT_PAYLOAD_CSUM_NONE","","",N,N],[17,"NFT_PAYLOAD_CSUM_INET","","",N,N],[17,"NFT_META_LEN","","",N,N],[17,"NFT_META_PROTOCOL","","",N,N],[17,"NFT_META_PRIORITY","","",N,N],[17,"NFT_META_MARK","","",N,N],[17,"NFT_META_IIF","","",N,N],[17,"NFT_META_OIF","","",N,N],[17,"NFT_META_IIFNAME","","",N,N],[17,"NFT_META_OIFNAME","","",N,N],[17,"NFT_META_IIFTYPE","","",N,N],[17,"NFT_META_OIFTYPE","","",N,N],[17,"NFT_META_SKUID","","",N,N],[17,"NFT_META_SKGID","","",N,N],[17,"NFT_META_NFTRACE","","",N,N],[17,"NFT_META_RTCLASSID","","",N,N],[17,"NFT_META_SECMARK","","",N,N],[17,"NFT_META_NFPROTO","","",N,N],[17,"NFT_META_L4PROTO","","",N,N],[17,"NFT_META_BRI_IIFNAME","","",N,N],[17,"NFT_META_BRI_OIFNAME","","",N,N],[17,"NFT_META_PKTTYPE","","",N,N],[17,"NFT_META_CPU","","",N,N],[17,"NFT_META_IIFGROUP","","",N,N],[17,"NFT_META_OIFGROUP","","",N,N],[17,"NFT_META_CGROUP","","",N,N],[17,"NFT_META_PRANDOM","","",N,N],[17,"NFT_CT_STATE","","",N,N],[17,"NFT_CT_DIRECTION","","",N,N],[17,"NFT_CT_STATUS","","",N,N],[17,"NFT_CT_MARK","","",N,N],[17,"NFT_CT_SECMARK","","",N,N],[17,"NFT_CT_EXPIRATION","","",N,N],[17,"NFT_CT_HELPER","","",N,N],[17,"NFT_CT_L3PROTOCOL","","",N,N],[17,"NFT_CT_SRC","","",N,N],[17,"NFT_CT_DST","","",N,N],[17,"NFT_CT_PROTOCOL","","",N,N],[17,"NFT_CT_PROTO_SRC","","",N,N],[17,"NFT_CT_PROTO_DST","","",N,N],[17,"NFT_CT_LABELS","","",N,N],[17,"NFT_CT_PKTS","","",N,N],[17,"NFT_CT_BYTES","","",N,N],[17,"NFT_LIMIT_PKTS","","",N,N],[17,"NFT_LIMIT_PKT_BYTES","","",N,N],[17,"NFT_LIMIT_F_INV","","",N,N],[17,"NFT_QUEUE_FLAG_BYPASS","","",N,N],[17,"NFT_QUEUE_FLAG_CPU_FANOUT","","",N,N],[17,"NFT_QUEUE_FLAG_MASK","","",N,N],[17,"NFT_QUOTA_F_INV","","",N,N],[17,"NFT_REJECT_ICMP_UNREACH","","",N,N],[17,"NFT_REJECT_TCP_RST","","",N,N],[17,"NFT_REJECT_ICMPX_UNREACH","","",N,N],[17,"NFT_REJECT_ICMPX_NO_ROUTE","","",N,N],[17,"NFT_REJECT_ICMPX_PORT_UNREACH","","",N,N],[17,"NFT_REJECT_ICMPX_HOST_UNREACH","","",N,N],[17,"NFT_REJECT_ICMPX_ADMIN_PROHIBITED","","",N,N],[17,"NFT_NAT_SNAT","","",N,N],[17,"NFT_NAT_DNAT","","",N,N],[17,"NFT_TRACETYPE_UNSPEC","","",N,N],[17,"NFT_TRACETYPE_POLICY","","",N,N],[17,"NFT_TRACETYPE_RETURN","","",N,N],[17,"NFT_TRACETYPE_RULE","","",N,N],[17,"NFT_NG_INCREMENTAL","","",N,N],[17,"NFT_NG_RANDOM","","",N,N],[17,"M_MXFAST","","",N,N],[17,"M_NLBLKS","","",N,N],[17,"M_GRAIN","","",N,N],[17,"M_KEEP","","",N,N],[17,"M_TRIM_THRESHOLD","","",N,N],[17,"M_TOP_PAD","","",N,N],[17,"M_MMAP_THRESHOLD","","",N,N],[17,"M_MMAP_MAX","","",N,N],[17,"M_CHECK_ACTION","","",N,N],[17,"M_PERTURB","","",N,N],[17,"M_ARENA_TEST","","",N,N],[17,"M_ARENA_MAX","","",N,N],[17,"PTHREAD_STACK_MIN","","",N,N],[17,"PTHREAD_MUTEX_ADAPTIVE_NP","","",N,N],[17,"__SIZEOF_PTHREAD_RWLOCKATTR_T","","",N,N],[17,"O_LARGEFILE","","",N,N],[17,"TIOCGSOFTCAR","","",N,N],[17,"TIOCSSOFTCAR","","",N,N],[17,"RLIMIT_NOFILE","","",N,N],[17,"RLIMIT_NPROC","","",N,N],[17,"O_APPEND","","",N,N],[17,"O_CREAT","","",N,N],[17,"O_EXCL","","",N,N],[17,"O_NOCTTY","","",N,N],[17,"O_NONBLOCK","","",N,N],[17,"O_SYNC","","",N,N],[17,"O_RSYNC","","",N,N],[17,"O_DSYNC","","",N,N],[17,"O_FSYNC","","",N,N],[17,"O_NOATIME","","",N,N],[17,"O_PATH","","",N,N],[17,"O_TMPFILE","","",N,N],[17,"MAP_GROWSDOWN","","",N,N],[17,"EDEADLK","","",N,N],[17,"ENAMETOOLONG","","",N,N],[17,"ENOLCK","","",N,N],[17,"ENOSYS","","",N,N],[17,"ENOTEMPTY","","",N,N],[17,"ELOOP","","",N,N],[17,"ENOMSG","","",N,N],[17,"EIDRM","","",N,N],[17,"ECHRNG","","",N,N],[17,"EL2NSYNC","","",N,N],[17,"EL3HLT","","",N,N],[17,"EL3RST","","",N,N],[17,"ELNRNG","","",N,N],[17,"EUNATCH","","",N,N],[17,"ENOCSI","","",N,N],[17,"EL2HLT","","",N,N],[17,"EBADE","","",N,N],[17,"EBADR","","",N,N],[17,"EXFULL","","",N,N],[17,"ENOANO","","",N,N],[17,"EBADRQC","","",N,N],[17,"EBADSLT","","",N,N],[17,"EMULTIHOP","","",N,N],[17,"EOVERFLOW","","",N,N],[17,"ENOTUNIQ","","",N,N],[17,"EBADFD","","",N,N],[17,"EBADMSG","","",N,N],[17,"EREMCHG","","",N,N],[17,"ELIBACC","","",N,N],[17,"ELIBBAD","","",N,N],[17,"ELIBSCN","","",N,N],[17,"ELIBMAX","","",N,N],[17,"ELIBEXEC","","",N,N],[17,"EILSEQ","","",N,N],[17,"ERESTART","","",N,N],[17,"ESTRPIPE","","",N,N],[17,"EUSERS","","",N,N],[17,"ENOTSOCK","","",N,N],[17,"EDESTADDRREQ","","",N,N],[17,"EMSGSIZE","","",N,N],[17,"EPROTOTYPE","","",N,N],[17,"ENOPROTOOPT","","",N,N],[17,"EPROTONOSUPPORT","","",N,N],[17,"ESOCKTNOSUPPORT","","",N,N],[17,"EOPNOTSUPP","","",N,N],[17,"EPFNOSUPPORT","","",N,N],[17,"EAFNOSUPPORT","","",N,N],[17,"EADDRINUSE","","",N,N],[17,"EADDRNOTAVAIL","","",N,N],[17,"ENETDOWN","","",N,N],[17,"ENETUNREACH","","",N,N],[17,"ENETRESET","","",N,N],[17,"ECONNABORTED","","",N,N],[17,"ECONNRESET","","",N,N],[17,"ENOBUFS","","",N,N],[17,"EISCONN","","",N,N],[17,"ENOTCONN","","",N,N],[17,"ESHUTDOWN","","",N,N],[17,"ETOOMANYREFS","","",N,N],[17,"ETIMEDOUT","","",N,N],[17,"ECONNREFUSED","","",N,N],[17,"EHOSTDOWN","","",N,N],[17,"EHOSTUNREACH","","",N,N],[17,"EALREADY","","",N,N],[17,"EINPROGRESS","","",N,N],[17,"ESTALE","","",N,N],[17,"EDQUOT","","",N,N],[17,"ENOMEDIUM","","",N,N],[17,"EMEDIUMTYPE","","",N,N],[17,"ECANCELED","","",N,N],[17,"ENOKEY","","",N,N],[17,"EKEYEXPIRED","","",N,N],[17,"EKEYREVOKED","","",N,N],[17,"EKEYREJECTED","","",N,N],[17,"EOWNERDEAD","","",N,N],[17,"ENOTRECOVERABLE","","",N,N],[17,"EHWPOISON","","",N,N],[17,"ERFKILL","","",N,N],[17,"SOL_SOCKET","","",N,N],[17,"SO_REUSEADDR","","",N,N],[17,"SO_TYPE","","",N,N],[17,"SO_ERROR","","",N,N],[17,"SO_DONTROUTE","","",N,N],[17,"SO_BROADCAST","","",N,N],[17,"SO_SNDBUF","","",N,N],[17,"SO_RCVBUF","","",N,N],[17,"SO_SNDBUFFORCE","","",N,N],[17,"SO_RCVBUFFORCE","","",N,N],[17,"SO_KEEPALIVE","","",N,N],[17,"SO_OOBINLINE","","",N,N],[17,"SO_NO_CHECK","","",N,N],[17,"SO_PRIORITY","","",N,N],[17,"SO_LINGER","","",N,N],[17,"SO_BSDCOMPAT","","",N,N],[17,"SO_REUSEPORT","","",N,N],[17,"SO_PASSCRED","","",N,N],[17,"SO_PEERCRED","","",N,N],[17,"SO_RCVLOWAT","","",N,N],[17,"SO_SNDLOWAT","","",N,N],[17,"SO_RCVTIMEO","","",N,N],[17,"SO_SNDTIMEO","","",N,N],[17,"SO_SECURITY_AUTHENTICATION","","",N,N],[17,"SO_SECURITY_ENCRYPTION_TRANSPORT","","",N,N],[17,"SO_SECURITY_ENCRYPTION_NETWORK","","",N,N],[17,"SO_BINDTODEVICE","","",N,N],[17,"SO_ATTACH_FILTER","","",N,N],[17,"SO_DETACH_FILTER","","",N,N],[17,"SO_GET_FILTER","","",N,N],[17,"SO_PEERNAME","","",N,N],[17,"SO_TIMESTAMP","","",N,N],[17,"SO_ACCEPTCONN","","",N,N],[17,"SO_PEERSEC","","",N,N],[17,"SO_PASSSEC","","",N,N],[17,"SO_TIMESTAMPNS","","",N,N],[17,"SCM_TIMESTAMPNS","","",N,N],[17,"SO_MARK","","",N,N],[17,"SO_PROTOCOL","","",N,N],[17,"SO_DOMAIN","","",N,N],[17,"SO_RXQ_OVFL","","",N,N],[17,"SO_WIFI_STATUS","","",N,N],[17,"SCM_WIFI_STATUS","","",N,N],[17,"SO_PEEK_OFF","","",N,N],[17,"SO_NOFCS","","",N,N],[17,"SO_LOCK_FILTER","","",N,N],[17,"SO_SELECT_ERR_QUEUE","","",N,N],[17,"SO_BUSY_POLL","","",N,N],[17,"SO_MAX_PACING_RATE","","",N,N],[17,"SO_BPF_EXTENSIONS","","",N,N],[17,"SO_INCOMING_CPU","","",N,N],[17,"SO_ATTACH_BPF","","",N,N],[17,"SO_DETACH_BPF","","",N,N],[17,"SA_ONSTACK","","",N,N],[17,"SA_SIGINFO","","",N,N],[17,"SA_NOCLDWAIT","","",N,N],[17,"SIGCHLD","","",N,N],[17,"SIGBUS","","",N,N],[17,"SIGUSR1","","",N,N],[17,"SIGUSR2","","",N,N],[17,"SIGCONT","","",N,N],[17,"SIGSTOP","","",N,N],[17,"SIGTSTP","","",N,N],[17,"SIGURG","","",N,N],[17,"SIGIO","","",N,N],[17,"SIGSYS","","",N,N],[17,"SIGSTKFLT","","",N,N],[17,"SIGUNUSED","","",N,N],[17,"SIGPOLL","","",N,N],[17,"SIGPWR","","",N,N],[17,"SIG_SETMASK","","",N,N],[17,"SIG_BLOCK","","",N,N],[17,"SIG_UNBLOCK","","",N,N],[17,"POLLWRNORM","","",N,N],[17,"POLLWRBAND","","",N,N],[17,"O_ASYNC","","",N,N],[17,"O_NDELAY","","",N,N],[17,"PTRACE_DETACH","","",N,N],[17,"EFD_NONBLOCK","","",N,N],[17,"F_GETLK","","",N,N],[17,"F_GETOWN","","",N,N],[17,"F_SETOWN","","",N,N],[17,"F_SETLK","","",N,N],[17,"F_SETLKW","","",N,N],[17,"F_RDLCK","","",N,N],[17,"F_WRLCK","","",N,N],[17,"F_UNLCK","","",N,N],[17,"SFD_NONBLOCK","","",N,N],[17,"TIOCEXCL","","",N,N],[17,"TIOCNXCL","","",N,N],[17,"TIOCSCTTY","","",N,N],[17,"TIOCSTI","","",N,N],[17,"TIOCMGET","","",N,N],[17,"TIOCMBIS","","",N,N],[17,"TIOCMBIC","","",N,N],[17,"TIOCMSET","","",N,N],[17,"TIOCCONS","","",N,N],[17,"SFD_CLOEXEC","","",N,N],[17,"NCCS","","",N,N],[17,"O_TRUNC","","",N,N],[17,"O_CLOEXEC","","",N,N],[17,"EBFONT","","",N,N],[17,"ENOSTR","","",N,N],[17,"ENODATA","","",N,N],[17,"ETIME","","",N,N],[17,"ENOSR","","",N,N],[17,"ENONET","","",N,N],[17,"ENOPKG","","",N,N],[17,"EREMOTE","","",N,N],[17,"ENOLINK","","",N,N],[17,"EADV","","",N,N],[17,"ESRMNT","","",N,N],[17,"ECOMM","","",N,N],[17,"EPROTO","","",N,N],[17,"EDOTDOT","","",N,N],[17,"SA_NODEFER","","",N,N],[17,"SA_RESETHAND","","",N,N],[17,"SA_RESTART","","",N,N],[17,"SA_NOCLDSTOP","","",N,N],[17,"EPOLL_CLOEXEC","","",N,N],[17,"EFD_CLOEXEC","","",N,N],[17,"__SIZEOF_PTHREAD_CONDATTR_T","","",N,N],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T","","",N,N],[17,"O_DIRECT","","",N,N],[17,"O_DIRECTORY","","",N,N],[17,"O_NOFOLLOW","","",N,N],[17,"MAP_LOCKED","","",N,N],[17,"MAP_NORESERVE","","",N,N],[17,"MAP_32BIT","","",N,N],[17,"EDEADLOCK","","",N,N],[17,"FIOCLEX","","",N,N],[17,"FIONBIO","","",N,N],[17,"PTRACE_GETFPREGS","","",N,N],[17,"PTRACE_SETFPREGS","","",N,N],[17,"PTRACE_GETFPXREGS","","",N,N],[17,"PTRACE_SETFPXREGS","","",N,N],[17,"PTRACE_GETREGS","","",N,N],[17,"PTRACE_SETREGS","","",N,N],[17,"PTRACE_PEEKSIGINFO_SHARED","","",N,N],[17,"MCL_CURRENT","","",N,N],[17,"MCL_FUTURE","","",N,N],[17,"SIGSTKSZ","","",N,N],[17,"MINSIGSTKSZ","","",N,N],[17,"CBAUD","","",N,N],[17,"TAB1","","",N,N],[17,"TAB2","","",N,N],[17,"TAB3","","",N,N],[17,"CR1","","",N,N],[17,"CR2","","",N,N],[17,"CR3","","",N,N],[17,"FF1","","",N,N],[17,"BS1","","",N,N],[17,"VT1","","",N,N],[17,"VWERASE","","",N,N],[17,"VREPRINT","","",N,N],[17,"VSUSP","","",N,N],[17,"VSTART","","",N,N],[17,"VSTOP","","",N,N],[17,"VDISCARD","","",N,N],[17,"VTIME","","",N,N],[17,"IXON","","",N,N],[17,"IXOFF","","",N,N],[17,"ONLCR","","",N,N],[17,"CSIZE","","",N,N],[17,"CS6","","",N,N],[17,"CS7","","",N,N],[17,"CS8","","",N,N],[17,"CSTOPB","","",N,N],[17,"CREAD","","",N,N],[17,"PARENB","","",N,N],[17,"PARODD","","",N,N],[17,"HUPCL","","",N,N],[17,"CLOCAL","","",N,N],[17,"ECHOKE","","",N,N],[17,"ECHOE","","",N,N],[17,"ECHOK","","",N,N],[17,"ECHONL","","",N,N],[17,"ECHOPRT","","",N,N],[17,"ECHOCTL","","",N,N],[17,"ISIG","","",N,N],[17,"ICANON","","",N,N],[17,"PENDIN","","",N,N],[17,"NOFLSH","","",N,N],[17,"CIBAUD","","",N,N],[17,"CBAUDEX","","",N,N],[17,"VSWTC","","",N,N],[17,"OLCUC","","",N,N],[17,"NLDLY","","",N,N],[17,"CRDLY","","",N,N],[17,"TABDLY","","",N,N],[17,"BSDLY","","",N,N],[17,"FFDLY","","",N,N],[17,"VTDLY","","",N,N],[17,"XTABS","","",N,N],[17,"B0","","",N,N],[17,"B50","","",N,N],[17,"B75","","",N,N],[17,"B110","","",N,N],[17,"B134","","",N,N],[17,"B150","","",N,N],[17,"B200","","",N,N],[17,"B300","","",N,N],[17,"B600","","",N,N],[17,"B1200","","",N,N],[17,"B1800","","",N,N],[17,"B2400","","",N,N],[17,"B4800","","",N,N],[17,"B9600","","",N,N],[17,"B19200","","",N,N],[17,"B38400","","",N,N],[17,"EXTA","","",N,N],[17,"EXTB","","",N,N],[17,"BOTHER","","",N,N],[17,"B57600","","",N,N],[17,"B115200","","",N,N],[17,"B230400","","",N,N],[17,"B460800","","",N,N],[17,"B500000","","",N,N],[17,"B576000","","",N,N],[17,"B921600","","",N,N],[17,"B1000000","","",N,N],[17,"B1152000","","",N,N],[17,"B1500000","","",N,N],[17,"B2000000","","",N,N],[17,"B2500000","","",N,N],[17,"B3000000","","",N,N],[17,"B3500000","","",N,N],[17,"B4000000","","",N,N],[17,"VEOL","","",N,N],[17,"VEOL2","","",N,N],[17,"VMIN","","",N,N],[17,"IEXTEN","","",N,N],[17,"TOSTOP","","",N,N],[17,"FLUSHO","","",N,N],[17,"EXTPROC","","",N,N],[17,"TCGETS","","",N,N],[17,"TCSETS","","",N,N],[17,"TCSETSW","","",N,N],[17,"TCSETSF","","",N,N],[17,"TCGETA","","",N,N],[17,"TCSETA","","",N,N],[17,"TCSETAW","","",N,N],[17,"TCSETAF","","",N,N],[17,"TCSBRK","","",N,N],[17,"TCXONC","","",N,N],[17,"TCFLSH","","",N,N],[17,"TIOCINQ","","",N,N],[17,"TIOCGPGRP","","",N,N],[17,"TIOCSPGRP","","",N,N],[17,"TIOCOUTQ","","",N,N],[17,"TIOCGWINSZ","","",N,N],[17,"TIOCSWINSZ","","",N,N],[17,"FIONREAD","","",N,N],[17,"R15","","",N,N],[17,"R14","","",N,N],[17,"R13","","",N,N],[17,"R12","","",N,N],[17,"RBP","","",N,N],[17,"RBX","","",N,N],[17,"R11","","",N,N],[17,"R10","","",N,N],[17,"R9","","",N,N],[17,"R8","","",N,N],[17,"RAX","","",N,N],[17,"RCX","","",N,N],[17,"RDX","","",N,N],[17,"RSI","","",N,N],[17,"RDI","","",N,N],[17,"ORIG_RAX","","",N,N],[17,"RIP","","",N,N],[17,"CS","","",N,N],[17,"EFLAGS","","",N,N],[17,"RSP","","",N,N],[17,"SS","","",N,N],[17,"FS_BASE","","",N,N],[17,"GS_BASE","","",N,N],[17,"DS","","",N,N],[17,"ES","","",N,N],[17,"FS","","",N,N],[17,"GS","","",N,N],[17,"__SIZEOF_PTHREAD_MUTEX_T","","",N,N],[17,"__SIZEOF_PTHREAD_RWLOCK_T","","",N,N],[17,"PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP","","",N,N],[17,"PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP","","",N,N],[17,"PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP","","",N,N],[17,"SYS_read","","",N,N],[17,"SYS_write","","",N,N],[17,"SYS_open","","",N,N],[17,"SYS_close","","",N,N],[17,"SYS_stat","","",N,N],[17,"SYS_fstat","","",N,N],[17,"SYS_lstat","","",N,N],[17,"SYS_poll","","",N,N],[17,"SYS_lseek","","",N,N],[17,"SYS_mmap","","",N,N],[17,"SYS_mprotect","","",N,N],[17,"SYS_munmap","","",N,N],[17,"SYS_brk","","",N,N],[17,"SYS_rt_sigaction","","",N,N],[17,"SYS_rt_sigprocmask","","",N,N],[17,"SYS_rt_sigreturn","","",N,N],[17,"SYS_ioctl","","",N,N],[17,"SYS_pread64","","",N,N],[17,"SYS_pwrite64","","",N,N],[17,"SYS_readv","","",N,N],[17,"SYS_writev","","",N,N],[17,"SYS_access","","",N,N],[17,"SYS_pipe","","",N,N],[17,"SYS_select","","",N,N],[17,"SYS_sched_yield","","",N,N],[17,"SYS_mremap","","",N,N],[17,"SYS_msync","","",N,N],[17,"SYS_mincore","","",N,N],[17,"SYS_madvise","","",N,N],[17,"SYS_shmget","","",N,N],[17,"SYS_shmat","","",N,N],[17,"SYS_shmctl","","",N,N],[17,"SYS_dup","","",N,N],[17,"SYS_dup2","","",N,N],[17,"SYS_pause","","",N,N],[17,"SYS_nanosleep","","",N,N],[17,"SYS_getitimer","","",N,N],[17,"SYS_alarm","","",N,N],[17,"SYS_setitimer","","",N,N],[17,"SYS_getpid","","",N,N],[17,"SYS_sendfile","","",N,N],[17,"SYS_socket","","",N,N],[17,"SYS_connect","","",N,N],[17,"SYS_accept","","",N,N],[17,"SYS_sendto","","",N,N],[17,"SYS_recvfrom","","",N,N],[17,"SYS_sendmsg","","",N,N],[17,"SYS_recvmsg","","",N,N],[17,"SYS_shutdown","","",N,N],[17,"SYS_bind","","",N,N],[17,"SYS_listen","","",N,N],[17,"SYS_getsockname","","",N,N],[17,"SYS_getpeername","","",N,N],[17,"SYS_socketpair","","",N,N],[17,"SYS_setsockopt","","",N,N],[17,"SYS_getsockopt","","",N,N],[17,"SYS_clone","","",N,N],[17,"SYS_fork","","",N,N],[17,"SYS_vfork","","",N,N],[17,"SYS_execve","","",N,N],[17,"SYS_exit","","",N,N],[17,"SYS_wait4","","",N,N],[17,"SYS_kill","","",N,N],[17,"SYS_uname","","",N,N],[17,"SYS_semget","","",N,N],[17,"SYS_semop","","",N,N],[17,"SYS_semctl","","",N,N],[17,"SYS_shmdt","","",N,N],[17,"SYS_msgget","","",N,N],[17,"SYS_msgsnd","","",N,N],[17,"SYS_msgrcv","","",N,N],[17,"SYS_msgctl","","",N,N],[17,"SYS_fcntl","","",N,N],[17,"SYS_flock","","",N,N],[17,"SYS_fsync","","",N,N],[17,"SYS_fdatasync","","",N,N],[17,"SYS_truncate","","",N,N],[17,"SYS_ftruncate","","",N,N],[17,"SYS_getdents","","",N,N],[17,"SYS_getcwd","","",N,N],[17,"SYS_chdir","","",N,N],[17,"SYS_fchdir","","",N,N],[17,"SYS_rename","","",N,N],[17,"SYS_mkdir","","",N,N],[17,"SYS_rmdir","","",N,N],[17,"SYS_creat","","",N,N],[17,"SYS_link","","",N,N],[17,"SYS_unlink","","",N,N],[17,"SYS_symlink","","",N,N],[17,"SYS_readlink","","",N,N],[17,"SYS_chmod","","",N,N],[17,"SYS_fchmod","","",N,N],[17,"SYS_chown","","",N,N],[17,"SYS_fchown","","",N,N],[17,"SYS_lchown","","",N,N],[17,"SYS_umask","","",N,N],[17,"SYS_gettimeofday","","",N,N],[17,"SYS_getrlimit","","",N,N],[17,"SYS_getrusage","","",N,N],[17,"SYS_sysinfo","","",N,N],[17,"SYS_times","","",N,N],[17,"SYS_ptrace","","",N,N],[17,"SYS_getuid","","",N,N],[17,"SYS_syslog","","",N,N],[17,"SYS_getgid","","",N,N],[17,"SYS_setuid","","",N,N],[17,"SYS_setgid","","",N,N],[17,"SYS_geteuid","","",N,N],[17,"SYS_getegid","","",N,N],[17,"SYS_setpgid","","",N,N],[17,"SYS_getppid","","",N,N],[17,"SYS_getpgrp","","",N,N],[17,"SYS_setsid","","",N,N],[17,"SYS_setreuid","","",N,N],[17,"SYS_setregid","","",N,N],[17,"SYS_getgroups","","",N,N],[17,"SYS_setgroups","","",N,N],[17,"SYS_setresuid","","",N,N],[17,"SYS_getresuid","","",N,N],[17,"SYS_setresgid","","",N,N],[17,"SYS_getresgid","","",N,N],[17,"SYS_getpgid","","",N,N],[17,"SYS_setfsuid","","",N,N],[17,"SYS_setfsgid","","",N,N],[17,"SYS_getsid","","",N,N],[17,"SYS_capget","","",N,N],[17,"SYS_capset","","",N,N],[17,"SYS_rt_sigpending","","",N,N],[17,"SYS_rt_sigtimedwait","","",N,N],[17,"SYS_rt_sigqueueinfo","","",N,N],[17,"SYS_rt_sigsuspend","","",N,N],[17,"SYS_sigaltstack","","",N,N],[17,"SYS_utime","","",N,N],[17,"SYS_mknod","","",N,N],[17,"SYS_uselib","","",N,N],[17,"SYS_personality","","",N,N],[17,"SYS_ustat","","",N,N],[17,"SYS_statfs","","",N,N],[17,"SYS_fstatfs","","",N,N],[17,"SYS_sysfs","","",N,N],[17,"SYS_getpriority","","",N,N],[17,"SYS_setpriority","","",N,N],[17,"SYS_sched_setparam","","",N,N],[17,"SYS_sched_getparam","","",N,N],[17,"SYS_sched_setscheduler","","",N,N],[17,"SYS_sched_getscheduler","","",N,N],[17,"SYS_sched_get_priority_max","","",N,N],[17,"SYS_sched_get_priority_min","","",N,N],[17,"SYS_sched_rr_get_interval","","",N,N],[17,"SYS_mlock","","",N,N],[17,"SYS_munlock","","",N,N],[17,"SYS_mlockall","","",N,N],[17,"SYS_munlockall","","",N,N],[17,"SYS_vhangup","","",N,N],[17,"SYS_modify_ldt","","",N,N],[17,"SYS_pivot_root","","",N,N],[17,"SYS__sysctl","","",N,N],[17,"SYS_prctl","","",N,N],[17,"SYS_arch_prctl","","",N,N],[17,"SYS_adjtimex","","",N,N],[17,"SYS_setrlimit","","",N,N],[17,"SYS_chroot","","",N,N],[17,"SYS_sync","","",N,N],[17,"SYS_acct","","",N,N],[17,"SYS_settimeofday","","",N,N],[17,"SYS_mount","","",N,N],[17,"SYS_umount2","","",N,N],[17,"SYS_swapon","","",N,N],[17,"SYS_swapoff","","",N,N],[17,"SYS_reboot","","",N,N],[17,"SYS_sethostname","","",N,N],[17,"SYS_setdomainname","","",N,N],[17,"SYS_iopl","","",N,N],[17,"SYS_ioperm","","",N,N],[17,"SYS_create_module","","",N,N],[17,"SYS_init_module","","",N,N],[17,"SYS_delete_module","","",N,N],[17,"SYS_get_kernel_syms","","",N,N],[17,"SYS_query_module","","",N,N],[17,"SYS_quotactl","","",N,N],[17,"SYS_nfsservctl","","",N,N],[17,"SYS_getpmsg","","",N,N],[17,"SYS_putpmsg","","",N,N],[17,"SYS_afs_syscall","","",N,N],[17,"SYS_tuxcall","","",N,N],[17,"SYS_security","","",N,N],[17,"SYS_gettid","","",N,N],[17,"SYS_readahead","","",N,N],[17,"SYS_setxattr","","",N,N],[17,"SYS_lsetxattr","","",N,N],[17,"SYS_fsetxattr","","",N,N],[17,"SYS_getxattr","","",N,N],[17,"SYS_lgetxattr","","",N,N],[17,"SYS_fgetxattr","","",N,N],[17,"SYS_listxattr","","",N,N],[17,"SYS_llistxattr","","",N,N],[17,"SYS_flistxattr","","",N,N],[17,"SYS_removexattr","","",N,N],[17,"SYS_lremovexattr","","",N,N],[17,"SYS_fremovexattr","","",N,N],[17,"SYS_tkill","","",N,N],[17,"SYS_time","","",N,N],[17,"SYS_futex","","",N,N],[17,"SYS_sched_setaffinity","","",N,N],[17,"SYS_sched_getaffinity","","",N,N],[17,"SYS_set_thread_area","","",N,N],[17,"SYS_io_setup","","",N,N],[17,"SYS_io_destroy","","",N,N],[17,"SYS_io_getevents","","",N,N],[17,"SYS_io_submit","","",N,N],[17,"SYS_io_cancel","","",N,N],[17,"SYS_get_thread_area","","",N,N],[17,"SYS_lookup_dcookie","","",N,N],[17,"SYS_epoll_create","","",N,N],[17,"SYS_epoll_ctl_old","","",N,N],[17,"SYS_epoll_wait_old","","",N,N],[17,"SYS_remap_file_pages","","",N,N],[17,"SYS_getdents64","","",N,N],[17,"SYS_set_tid_address","","",N,N],[17,"SYS_restart_syscall","","",N,N],[17,"SYS_semtimedop","","",N,N],[17,"SYS_fadvise64","","",N,N],[17,"SYS_timer_create","","",N,N],[17,"SYS_timer_settime","","",N,N],[17,"SYS_timer_gettime","","",N,N],[17,"SYS_timer_getoverrun","","",N,N],[17,"SYS_timer_delete","","",N,N],[17,"SYS_clock_settime","","",N,N],[17,"SYS_clock_gettime","","",N,N],[17,"SYS_clock_getres","","",N,N],[17,"SYS_clock_nanosleep","","",N,N],[17,"SYS_exit_group","","",N,N],[17,"SYS_epoll_wait","","",N,N],[17,"SYS_epoll_ctl","","",N,N],[17,"SYS_tgkill","","",N,N],[17,"SYS_utimes","","",N,N],[17,"SYS_vserver","","",N,N],[17,"SYS_mbind","","",N,N],[17,"SYS_set_mempolicy","","",N,N],[17,"SYS_get_mempolicy","","",N,N],[17,"SYS_mq_open","","",N,N],[17,"SYS_mq_unlink","","",N,N],[17,"SYS_mq_timedsend","","",N,N],[17,"SYS_mq_timedreceive","","",N,N],[17,"SYS_mq_notify","","",N,N],[17,"SYS_mq_getsetattr","","",N,N],[17,"SYS_kexec_load","","",N,N],[17,"SYS_waitid","","",N,N],[17,"SYS_add_key","","",N,N],[17,"SYS_request_key","","",N,N],[17,"SYS_keyctl","","",N,N],[17,"SYS_ioprio_set","","",N,N],[17,"SYS_ioprio_get","","",N,N],[17,"SYS_inotify_init","","",N,N],[17,"SYS_inotify_add_watch","","",N,N],[17,"SYS_inotify_rm_watch","","",N,N],[17,"SYS_migrate_pages","","",N,N],[17,"SYS_openat","","",N,N],[17,"SYS_mkdirat","","",N,N],[17,"SYS_mknodat","","",N,N],[17,"SYS_fchownat","","",N,N],[17,"SYS_futimesat","","",N,N],[17,"SYS_newfstatat","","",N,N],[17,"SYS_unlinkat","","",N,N],[17,"SYS_renameat","","",N,N],[17,"SYS_linkat","","",N,N],[17,"SYS_symlinkat","","",N,N],[17,"SYS_readlinkat","","",N,N],[17,"SYS_fchmodat","","",N,N],[17,"SYS_faccessat","","",N,N],[17,"SYS_pselect6","","",N,N],[17,"SYS_ppoll","","",N,N],[17,"SYS_unshare","","",N,N],[17,"SYS_set_robust_list","","",N,N],[17,"SYS_get_robust_list","","",N,N],[17,"SYS_splice","","",N,N],[17,"SYS_tee","","",N,N],[17,"SYS_sync_file_range","","",N,N],[17,"SYS_vmsplice","","",N,N],[17,"SYS_move_pages","","",N,N],[17,"SYS_utimensat","","",N,N],[17,"SYS_epoll_pwait","","",N,N],[17,"SYS_signalfd","","",N,N],[17,"SYS_timerfd_create","","",N,N],[17,"SYS_eventfd","","",N,N],[17,"SYS_fallocate","","",N,N],[17,"SYS_timerfd_settime","","",N,N],[17,"SYS_timerfd_gettime","","",N,N],[17,"SYS_accept4","","",N,N],[17,"SYS_signalfd4","","",N,N],[17,"SYS_eventfd2","","",N,N],[17,"SYS_epoll_create1","","",N,N],[17,"SYS_dup3","","",N,N],[17,"SYS_pipe2","","",N,N],[17,"SYS_inotify_init1","","",N,N],[17,"SYS_preadv","","",N,N],[17,"SYS_pwritev","","",N,N],[17,"SYS_rt_tgsigqueueinfo","","",N,N],[17,"SYS_perf_event_open","","",N,N],[17,"SYS_recvmmsg","","",N,N],[17,"SYS_fanotify_init","","",N,N],[17,"SYS_fanotify_mark","","",N,N],[17,"SYS_prlimit64","","",N,N],[17,"SYS_name_to_handle_at","","",N,N],[17,"SYS_open_by_handle_at","","",N,N],[17,"SYS_clock_adjtime","","",N,N],[17,"SYS_syncfs","","",N,N],[17,"SYS_sendmmsg","","",N,N],[17,"SYS_setns","","",N,N],[17,"SYS_getcpu","","",N,N],[17,"SYS_process_vm_readv","","",N,N],[17,"SYS_process_vm_writev","","",N,N],[17,"SYS_kcmp","","",N,N],[17,"SYS_finit_module","","",N,N],[17,"SYS_sched_setattr","","",N,N],[17,"SYS_sched_getattr","","",N,N],[17,"SYS_renameat2","","",N,N],[17,"SYS_seccomp","","",N,N],[17,"SYS_getrandom","","",N,N],[17,"SYS_memfd_create","","",N,N],[17,"SYS_kexec_file_load","","",N,N],[17,"SYS_bpf","","",N,N],[17,"SYS_execveat","","",N,N],[17,"SYS_userfaultfd","","",N,N],[17,"SYS_membarrier","","",N,N],[17,"SYS_mlock2","","",N,N],[17,"SYS_copy_file_range","","",N,N],[17,"SYS_preadv2","","",N,N],[17,"SYS_pwritev2","","",N,N],[17,"SYS_pkey_mprotect","","",N,N],[17,"SYS_pkey_alloc","","",N,N],[17,"SYS_pkey_free","","",N,N],[11,"from","","",124,[[["t"]],["t"]]],[11,"into","","",124,[[["self"]],["u"]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"try_into","","",124,[[["self"]],["result"]]],[11,"get_type_id","","",124,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,N],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",125,[[["t"]],["t"]]],[11,"into","","",125,[[["self"]],["u"]]],[11,"to_owned","","",125,[[["self"]],["t"]]],[11,"clone_into","","",125,N],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"try_into","","",125,[[["self"]],["result"]]],[11,"get_type_id","","",125,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,N],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,N],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,N],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,N],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,N],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,N],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,N],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,N],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,N],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",126,[[["t"]],["t"]]],[11,"into","","",126,[[["self"]],["u"]]],[11,"to_owned","","",126,[[["self"]],["t"]]],[11,"clone_into","","",126,N],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"try_into","","",126,[[["self"]],["result"]]],[11,"get_type_id","","",126,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,N],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,N],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,N],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,N],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,N],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,N],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",127,[[["t"]],["t"]]],[11,"into","","",127,[[["self"]],["u"]]],[11,"to_owned","","",127,[[["self"]],["t"]]],[11,"clone_into","","",127,N],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"try_into","","",127,[[["self"]],["result"]]],[11,"get_type_id","","",127,[[["self"]],["typeid"]]],[11,"from","","",128,[[["t"]],["t"]]],[11,"into","","",128,[[["self"]],["u"]]],[11,"to_owned","","",128,[[["self"]],["t"]]],[11,"clone_into","","",128,N],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"try_into","","",128,[[["self"]],["result"]]],[11,"get_type_id","","",128,[[["self"]],["typeid"]]],[11,"from","","",129,[[["t"]],["t"]]],[11,"into","","",129,[[["self"]],["u"]]],[11,"to_owned","","",129,[[["self"]],["t"]]],[11,"clone_into","","",129,N],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"try_into","","",129,[[["self"]],["result"]]],[11,"get_type_id","","",129,[[["self"]],["typeid"]]],[11,"from","","",130,[[["t"]],["t"]]],[11,"into","","",130,[[["self"]],["u"]]],[11,"to_owned","","",130,[[["self"]],["t"]]],[11,"clone_into","","",130,N],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"try_into","","",130,[[["self"]],["result"]]],[11,"get_type_id","","",130,[[["self"]],["typeid"]]],[11,"from","","",131,[[["t"]],["t"]]],[11,"into","","",131,[[["self"]],["u"]]],[11,"to_owned","","",131,[[["self"]],["t"]]],[11,"clone_into","","",131,N],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"try_into","","",131,[[["self"]],["result"]]],[11,"get_type_id","","",131,[[["self"]],["typeid"]]],[11,"from","","",132,[[["t"]],["t"]]],[11,"into","","",132,[[["self"]],["u"]]],[11,"to_owned","","",132,[[["self"]],["t"]]],[11,"clone_into","","",132,N],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"try_into","","",132,[[["self"]],["result"]]],[11,"get_type_id","","",132,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,N],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,N],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,N],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,N],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,N],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",133,[[["t"]],["t"]]],[11,"into","","",133,[[["self"]],["u"]]],[11,"to_owned","","",133,[[["self"]],["t"]]],[11,"clone_into","","",133,N],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"try_into","","",133,[[["self"]],["result"]]],[11,"get_type_id","","",133,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,N],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,N],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",134,[[["t"]],["t"]]],[11,"into","","",134,[[["self"]],["u"]]],[11,"to_owned","","",134,[[["self"]],["t"]]],[11,"clone_into","","",134,N],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"try_into","","",134,[[["self"]],["result"]]],[11,"get_type_id","","",134,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,N],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,N],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,N],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,N],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,N],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,N],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,N],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,N],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,N],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,N],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,N],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[["self"]],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,N],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[["self"]],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,N],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[["self"]],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,N],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[["self"]],["u"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,N],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[["self"]],["u"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,N],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[["self"]],["u"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,N],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[["self"]],["u"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,N],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"try_into","","",68,[[["self"]],["result"]]],[11,"get_type_id","","",68,[[["self"]],["typeid"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[["self"]],["u"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,N],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"try_into","","",69,[[["self"]],["result"]]],[11,"get_type_id","","",69,[[["self"]],["typeid"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[["self"]],["u"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,N],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"try_into","","",70,[[["self"]],["result"]]],[11,"get_type_id","","",70,[[["self"]],["typeid"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[["self"]],["u"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,N],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"try_into","","",71,[[["self"]],["result"]]],[11,"get_type_id","","",71,[[["self"]],["typeid"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[["self"]],["u"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,N],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"try_into","","",72,[[["self"]],["result"]]],[11,"get_type_id","","",72,[[["self"]],["typeid"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[["self"]],["u"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,N],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"try_into","","",73,[[["self"]],["result"]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[["self"]],["u"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,N],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"try_into","","",74,[[["self"]],["result"]]],[11,"get_type_id","","",74,[[["self"]],["typeid"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[["self"]],["u"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,N],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"try_into","","",75,[[["self"]],["result"]]],[11,"get_type_id","","",75,[[["self"]],["typeid"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[["self"]],["u"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,N],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"try_into","","",76,[[["self"]],["result"]]],[11,"get_type_id","","",76,[[["self"]],["typeid"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[["self"]],["u"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,N],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"try_into","","",77,[[["self"]],["result"]]],[11,"get_type_id","","",77,[[["self"]],["typeid"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[["self"]],["u"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,N],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"try_into","","",78,[[["self"]],["result"]]],[11,"get_type_id","","",78,[[["self"]],["typeid"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[["self"]],["u"]]],[11,"to_owned","","",79,[[["self"]],["t"]]],[11,"clone_into","","",79,N],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"try_into","","",79,[[["self"]],["result"]]],[11,"get_type_id","","",79,[[["self"]],["typeid"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[["self"]],["u"]]],[11,"to_owned","","",80,[[["self"]],["t"]]],[11,"clone_into","","",80,N],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"try_into","","",80,[[["self"]],["result"]]],[11,"get_type_id","","",80,[[["self"]],["typeid"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[["self"]],["u"]]],[11,"to_owned","","",81,[[["self"]],["t"]]],[11,"clone_into","","",81,N],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"try_into","","",81,[[["self"]],["result"]]],[11,"get_type_id","","",81,[[["self"]],["typeid"]]],[11,"from","","",135,[[["t"]],["t"]]],[11,"into","","",135,[[["self"]],["u"]]],[11,"to_owned","","",135,[[["self"]],["t"]]],[11,"clone_into","","",135,N],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"try_into","","",135,[[["self"]],["result"]]],[11,"get_type_id","","",135,[[["self"]],["typeid"]]],[11,"from","","",136,[[["t"]],["t"]]],[11,"into","","",136,[[["self"]],["u"]]],[11,"to_owned","","",136,[[["self"]],["t"]]],[11,"clone_into","","",136,N],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"try_into","","",136,[[["self"]],["result"]]],[11,"get_type_id","","",136,[[["self"]],["typeid"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[["self"]],["u"]]],[11,"to_owned","","",82,[[["self"]],["t"]]],[11,"clone_into","","",82,N],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"try_into","","",82,[[["self"]],["result"]]],[11,"get_type_id","","",82,[[["self"]],["typeid"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[["self"]],["u"]]],[11,"to_owned","","",83,[[["self"]],["t"]]],[11,"clone_into","","",83,N],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"try_into","","",83,[[["self"]],["result"]]],[11,"get_type_id","","",83,[[["self"]],["typeid"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[["self"]],["u"]]],[11,"to_owned","","",84,[[["self"]],["t"]]],[11,"clone_into","","",84,N],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"try_into","","",84,[[["self"]],["result"]]],[11,"get_type_id","","",84,[[["self"]],["typeid"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[["self"]],["u"]]],[11,"to_owned","","",85,[[["self"]],["t"]]],[11,"clone_into","","",85,N],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"try_into","","",85,[[["self"]],["result"]]],[11,"get_type_id","","",85,[[["self"]],["typeid"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[["self"]],["u"]]],[11,"to_owned","","",86,[[["self"]],["t"]]],[11,"clone_into","","",86,N],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"try_into","","",86,[[["self"]],["result"]]],[11,"get_type_id","","",86,[[["self"]],["typeid"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[["self"]],["u"]]],[11,"to_owned","","",87,[[["self"]],["t"]]],[11,"clone_into","","",87,N],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"try_into","","",87,[[["self"]],["result"]]],[11,"get_type_id","","",87,[[["self"]],["typeid"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"into","","",88,[[["self"]],["u"]]],[11,"to_owned","","",88,[[["self"]],["t"]]],[11,"clone_into","","",88,N],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"try_into","","",88,[[["self"]],["result"]]],[11,"get_type_id","","",88,[[["self"]],["typeid"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"into","","",89,[[["self"]],["u"]]],[11,"to_owned","","",89,[[["self"]],["t"]]],[11,"clone_into","","",89,N],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"try_into","","",89,[[["self"]],["result"]]],[11,"get_type_id","","",89,[[["self"]],["typeid"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[["self"]],["u"]]],[11,"to_owned","","",90,[[["self"]],["t"]]],[11,"clone_into","","",90,N],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"try_into","","",90,[[["self"]],["result"]]],[11,"get_type_id","","",90,[[["self"]],["typeid"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"into","","",91,[[["self"]],["u"]]],[11,"to_owned","","",91,[[["self"]],["t"]]],[11,"clone_into","","",91,N],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"try_into","","",91,[[["self"]],["result"]]],[11,"get_type_id","","",91,[[["self"]],["typeid"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"into","","",92,[[["self"]],["u"]]],[11,"to_owned","","",92,[[["self"]],["t"]]],[11,"clone_into","","",92,N],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"try_into","","",92,[[["self"]],["result"]]],[11,"get_type_id","","",92,[[["self"]],["typeid"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"into","","",93,[[["self"]],["u"]]],[11,"to_owned","","",93,[[["self"]],["t"]]],[11,"clone_into","","",93,N],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"try_into","","",93,[[["self"]],["result"]]],[11,"get_type_id","","",93,[[["self"]],["typeid"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"into","","",94,[[["self"]],["u"]]],[11,"to_owned","","",94,[[["self"]],["t"]]],[11,"clone_into","","",94,N],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"try_into","","",94,[[["self"]],["result"]]],[11,"get_type_id","","",94,[[["self"]],["typeid"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"into","","",95,[[["self"]],["u"]]],[11,"to_owned","","",95,[[["self"]],["t"]]],[11,"clone_into","","",95,N],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"try_into","","",95,[[["self"]],["result"]]],[11,"get_type_id","","",95,[[["self"]],["typeid"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"into","","",96,[[["self"]],["u"]]],[11,"to_owned","","",96,[[["self"]],["t"]]],[11,"clone_into","","",96,N],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"try_into","","",96,[[["self"]],["result"]]],[11,"get_type_id","","",96,[[["self"]],["typeid"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"into","","",97,[[["self"]],["u"]]],[11,"to_owned","","",97,[[["self"]],["t"]]],[11,"clone_into","","",97,N],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"try_into","","",97,[[["self"]],["result"]]],[11,"get_type_id","","",97,[[["self"]],["typeid"]]],[11,"from","","",137,[[["t"]],["t"]]],[11,"into","","",137,[[["self"]],["u"]]],[11,"to_owned","","",137,[[["self"]],["t"]]],[11,"clone_into","","",137,N],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"try_into","","",137,[[["self"]],["result"]]],[11,"get_type_id","","",137,[[["self"]],["typeid"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"into","","",98,[[["self"]],["u"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,N],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"try_into","","",98,[[["self"]],["result"]]],[11,"get_type_id","","",98,[[["self"]],["typeid"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"into","","",99,[[["self"]],["u"]]],[11,"to_owned","","",99,[[["self"]],["t"]]],[11,"clone_into","","",99,N],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"try_into","","",99,[[["self"]],["result"]]],[11,"get_type_id","","",99,[[["self"]],["typeid"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"into","","",100,[[["self"]],["u"]]],[11,"to_owned","","",100,[[["self"]],["t"]]],[11,"clone_into","","",100,N],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"try_into","","",100,[[["self"]],["result"]]],[11,"get_type_id","","",100,[[["self"]],["typeid"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"into","","",101,[[["self"]],["u"]]],[11,"to_owned","","",101,[[["self"]],["t"]]],[11,"clone_into","","",101,N],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"try_into","","",101,[[["self"]],["result"]]],[11,"get_type_id","","",101,[[["self"]],["typeid"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"into","","",102,[[["self"]],["u"]]],[11,"to_owned","","",102,[[["self"]],["t"]]],[11,"clone_into","","",102,N],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"try_into","","",102,[[["self"]],["result"]]],[11,"get_type_id","","",102,[[["self"]],["typeid"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"into","","",103,[[["self"]],["u"]]],[11,"to_owned","","",103,[[["self"]],["t"]]],[11,"clone_into","","",103,N],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"try_into","","",103,[[["self"]],["result"]]],[11,"get_type_id","","",103,[[["self"]],["typeid"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"into","","",104,[[["self"]],["u"]]],[11,"to_owned","","",104,[[["self"]],["t"]]],[11,"clone_into","","",104,N],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"try_into","","",104,[[["self"]],["result"]]],[11,"get_type_id","","",104,[[["self"]],["typeid"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"into","","",105,[[["self"]],["u"]]],[11,"to_owned","","",105,[[["self"]],["t"]]],[11,"clone_into","","",105,N],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"try_into","","",105,[[["self"]],["result"]]],[11,"get_type_id","","",105,[[["self"]],["typeid"]]],[11,"from","","",138,[[["t"]],["t"]]],[11,"into","","",138,[[["self"]],["u"]]],[11,"to_owned","","",138,[[["self"]],["t"]]],[11,"clone_into","","",138,N],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"try_into","","",138,[[["self"]],["result"]]],[11,"get_type_id","","",138,[[["self"]],["typeid"]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"into","","",106,[[["self"]],["u"]]],[11,"to_owned","","",106,[[["self"]],["t"]]],[11,"clone_into","","",106,N],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"try_into","","",106,[[["self"]],["result"]]],[11,"get_type_id","","",106,[[["self"]],["typeid"]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"into","","",107,[[["self"]],["u"]]],[11,"to_owned","","",107,[[["self"]],["t"]]],[11,"clone_into","","",107,N],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"try_into","","",107,[[["self"]],["result"]]],[11,"get_type_id","","",107,[[["self"]],["typeid"]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"into","","",108,[[["self"]],["u"]]],[11,"to_owned","","",108,[[["self"]],["t"]]],[11,"clone_into","","",108,N],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"try_into","","",108,[[["self"]],["result"]]],[11,"get_type_id","","",108,[[["self"]],["typeid"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"into","","",109,[[["self"]],["u"]]],[11,"to_owned","","",109,[[["self"]],["t"]]],[11,"clone_into","","",109,N],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"try_into","","",109,[[["self"]],["result"]]],[11,"get_type_id","","",109,[[["self"]],["typeid"]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"into","","",110,[[["self"]],["u"]]],[11,"to_owned","","",110,[[["self"]],["t"]]],[11,"clone_into","","",110,N],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"try_into","","",110,[[["self"]],["result"]]],[11,"get_type_id","","",110,[[["self"]],["typeid"]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"into","","",111,[[["self"]],["u"]]],[11,"to_owned","","",111,[[["self"]],["t"]]],[11,"clone_into","","",111,N],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"try_into","","",111,[[["self"]],["result"]]],[11,"get_type_id","","",111,[[["self"]],["typeid"]]],[11,"from","","",139,[[["t"]],["t"]]],[11,"into","","",139,[[["self"]],["u"]]],[11,"to_owned","","",139,[[["self"]],["t"]]],[11,"clone_into","","",139,N],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"try_into","","",139,[[["self"]],["result"]]],[11,"get_type_id","","",139,[[["self"]],["typeid"]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"into","","",112,[[["self"]],["u"]]],[11,"to_owned","","",112,[[["self"]],["t"]]],[11,"clone_into","","",112,N],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"try_into","","",112,[[["self"]],["result"]]],[11,"get_type_id","","",112,[[["self"]],["typeid"]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"into","","",113,[[["self"]],["u"]]],[11,"to_owned","","",113,[[["self"]],["t"]]],[11,"clone_into","","",113,N],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"try_into","","",113,[[["self"]],["result"]]],[11,"get_type_id","","",113,[[["self"]],["typeid"]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"into","","",114,[[["self"]],["u"]]],[11,"to_owned","","",114,[[["self"]],["t"]]],[11,"clone_into","","",114,N],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"try_into","","",114,[[["self"]],["result"]]],[11,"get_type_id","","",114,[[["self"]],["typeid"]]],[11,"from","","",115,[[["t"]],["t"]]],[11,"into","","",115,[[["self"]],["u"]]],[11,"to_owned","","",115,[[["self"]],["t"]]],[11,"clone_into","","",115,N],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"try_into","","",115,[[["self"]],["result"]]],[11,"get_type_id","","",115,[[["self"]],["typeid"]]],[11,"from","","",116,[[["t"]],["t"]]],[11,"into","","",116,[[["self"]],["u"]]],[11,"to_owned","","",116,[[["self"]],["t"]]],[11,"clone_into","","",116,N],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"try_into","","",116,[[["self"]],["result"]]],[11,"get_type_id","","",116,[[["self"]],["typeid"]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"into","","",117,[[["self"]],["u"]]],[11,"to_owned","","",117,[[["self"]],["t"]]],[11,"clone_into","","",117,N],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"try_into","","",117,[[["self"]],["result"]]],[11,"get_type_id","","",117,[[["self"]],["typeid"]]],[11,"from","","",118,[[["t"]],["t"]]],[11,"into","","",118,[[["self"]],["u"]]],[11,"to_owned","","",118,[[["self"]],["t"]]],[11,"clone_into","","",118,N],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"try_into","","",118,[[["self"]],["result"]]],[11,"get_type_id","","",118,[[["self"]],["typeid"]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"into","","",119,[[["self"]],["u"]]],[11,"to_owned","","",119,[[["self"]],["t"]]],[11,"clone_into","","",119,N],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"try_into","","",119,[[["self"]],["result"]]],[11,"get_type_id","","",119,[[["self"]],["typeid"]]],[11,"from","","",120,[[["t"]],["t"]]],[11,"into","","",120,[[["self"]],["u"]]],[11,"to_owned","","",120,[[["self"]],["t"]]],[11,"clone_into","","",120,N],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"try_into","","",120,[[["self"]],["result"]]],[11,"get_type_id","","",120,[[["self"]],["typeid"]]],[11,"from","","",121,[[["t"]],["t"]]],[11,"into","","",121,[[["self"]],["u"]]],[11,"to_owned","","",121,[[["self"]],["t"]]],[11,"clone_into","","",121,N],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"try_into","","",121,[[["self"]],["result"]]],[11,"get_type_id","","",121,[[["self"]],["typeid"]]],[11,"from","","",122,[[["t"]],["t"]]],[11,"into","","",122,[[["self"]],["u"]]],[11,"to_owned","","",122,[[["self"]],["t"]]],[11,"clone_into","","",122,N],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"try_into","","",122,[[["self"]],["result"]]],[11,"get_type_id","","",122,[[["self"]],["typeid"]]],[11,"from","","",123,[[["t"]],["t"]]],[11,"into","","",123,[[["self"]],["u"]]],[11,"to_owned","","",123,[[["self"]],["t"]]],[11,"clone_into","","",123,N],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"try_into","","",123,[[["self"]],["result"]]],[11,"get_type_id","","",123,[[["self"]],["typeid"]]],[11,"from","","",140,[[["t"]],["t"]]],[11,"into","","",140,[[["self"]],["u"]]],[11,"try_from","","",140,[[["u"]],["result"]]],[11,"borrow","","",140,[[["self"]],["t"]]],[11,"borrow_mut","","",140,[[["self"]],["t"]]],[11,"try_into","","",140,[[["self"]],["result"]]],[11,"get_type_id","","",140,[[["self"]],["typeid"]]],[11,"from","","",141,[[["t"]],["t"]]],[11,"into","","",141,[[["self"]],["u"]]],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"try_into","","",141,[[["self"]],["result"]]],[11,"get_type_id","","",141,[[["self"]],["typeid"]]],[11,"from","","",142,[[["t"]],["t"]]],[11,"into","","",142,[[["self"]],["u"]]],[11,"try_from","","",142,[[["u"]],["result"]]],[11,"borrow","","",142,[[["self"]],["t"]]],[11,"borrow_mut","","",142,[[["self"]],["t"]]],[11,"try_into","","",142,[[["self"]],["result"]]],[11,"get_type_id","","",142,[[["self"]],["typeid"]]],[11,"from","","",143,[[["t"]],["t"]]],[11,"into","","",143,[[["self"]],["u"]]],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"try_into","","",143,[[["self"]],["result"]]],[11,"get_type_id","","",143,[[["self"]],["typeid"]]],[11,"from","","",144,[[["t"]],["t"]]],[11,"into","","",144,[[["self"]],["u"]]],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"try_into","","",144,[[["self"]],["result"]]],[11,"get_type_id","","",144,[[["self"]],["typeid"]]],[11,"from","","",145,[[["t"]],["t"]]],[11,"into","","",145,[[["self"]],["u"]]],[11,"try_from","","",145,[[["u"]],["result"]]],[11,"borrow","","",145,[[["self"]],["t"]]],[11,"borrow_mut","","",145,[[["self"]],["t"]]],[11,"try_into","","",145,[[["self"]],["result"]]],[11,"get_type_id","","",145,[[["self"]],["typeid"]]],[11,"fmt","","",124,[[["self"],["formatter"]],["result",["error"]]]],[11,"clone","","",0,[[["self"]],["group"]]],[11,"clone","","",1,[[["self"]],["utimbuf"]]],[11,"clone","","",2,[[["self"]],["timeval"]]],[11,"clone","","",3,[[["self"]],["timespec"]]],[11,"clone","","",4,[[["self"]],["rlimit"]]],[11,"clone","","",5,[[["self"]],["rusage"]]],[11,"clone","","",6,[[["self"]],["in_addr"]]],[11,"clone","","",7,[[["self"]],["in6_addr"]]],[11,"clone","","",8,[[["self"]],["ip_mreq"]]],[11,"clone","","",9,[[["self"]],["ipv6_mreq"]]],[11,"clone","","",10,[[["self"]],["hostent"]]],[11,"clone","","",11,[[["self"]],["iovec"]]],[11,"clone","","",12,[[["self"]],["pollfd"]]],[11,"clone","","",13,[[["self"]],["winsize"]]],[11,"clone","","",14,[[["self"]],["linger"]]],[11,"clone","","",15,[[["self"]],["sigval"]]],[11,"clone","","",16,[[["self"]],["itimerval"]]],[11,"clone","","",17,[[["self"]],["tms"]]],[11,"clone","","",18,[[["self"]],["servent"]]],[11,"clone","","",19,[[["self"]],["protoent"]]],[11,"clone","","",20,[[["self"]],["sockaddr"]]],[11,"clone","","",21,[[["self"]],["sockaddr_in"]]],[11,"clone","","",22,[[["self"]],["sockaddr_in6"]]],[11,"clone","","",23,[[["self"]],["sockaddr_un"]]],[11,"clone","","",24,[[["self"]],["sockaddr_storage"]]],[11,"clone","","",25,[[["self"]],["addrinfo"]]],[11,"clone","","",26,[[["self"]],["sockaddr_nl"]]],[11,"clone","","",27,[[["self"]],["sockaddr_ll"]]],[11,"clone","","",125,[[["self"]],["fd_set"]]],[11,"clone","","",28,[[["self"]],["tm"]]],[11,"clone","","",29,[[["self"]],["sched_param"]]],[11,"clone","","",30,[[["self"]],["dl_info"]]],[11,"clone","","",31,[[["self"]],["epoll_event"]]],[11,"clone","","",32,[[["self"]],["utsname"]]],[11,"clone","","",33,[[["self"]],["lconv"]]],[11,"clone","","",34,[[["self"]],["sigevent"]]],[11,"clone","","",35,[[["self"]],["in_pktinfo"]]],[11,"clone","","",36,[[["self"]],["ifaddrs"]]],[11,"clone","","",126,[[["self"]],["in6_rtmsg"]]],[11,"clone","","",37,[[["self"]],["arpreq"]]],[11,"clone","","",38,[[["self"]],["arpreq_old"]]],[11,"clone","","",39,[[["self"]],["arphdr"]]],[11,"clone","","",40,[[["self"]],["dirent"]]],[11,"clone","","",41,[[["self"]],["dirent64"]]],[11,"clone","","",42,[[["self"]],["rlimit64"]]],[11,"clone","","",43,[[["self"]],["glob_t"]]],[11,"clone","","",127,[[["self"]],["pthread_mutex_t"]]],[11,"clone","","",128,[[["self"]],["pthread_rwlock_t"]]],[11,"clone","","",129,[[["self"]],["pthread_mutexattr_t"]]],[11,"clone","","",130,[[["self"]],["pthread_rwlockattr_t"]]],[11,"clone","","",131,[[["self"]],["pthread_cond_t"]]],[11,"clone","","",132,[[["self"]],["pthread_condattr_t"]]],[11,"clone","","",44,[[["self"]],["passwd"]]],[11,"clone","","",45,[[["self"]],["spwd"]]],[11,"clone","","",46,[[["self"]],["dqblk"]]],[11,"clone","","",47,[[["self"]],["signalfd_siginfo"]]],[11,"clone","","",48,[[["self"]],["itimerspec"]]],[11,"clone","","",133,[[["self"]],["fsid_t"]]],[11,"clone","","",49,[[["self"]],["mq_attr"]]],[11,"clone","","",50,[[["self"]],["packet_mreq"]]],[11,"clone","","",134,[[["self"]],["cpu_set_t"]]],[11,"clone","","",51,[[["self"]],["if_nameindex"]]],[11,"clone","","",52,[[["self"]],["msginfo"]]],[11,"clone","","",53,[[["self"]],["mmsghdr"]]],[11,"clone","","",54,[[["self"]],["sembuf"]]],[11,"clone","","",55,[[["self"]],["input_event"]]],[11,"clone","","",56,[[["self"]],["input_id"]]],[11,"clone","","",57,[[["self"]],["input_absinfo"]]],[11,"clone","","",58,[[["self"]],["input_keymap_entry"]]],[11,"clone","","",59,[[["self"]],["input_mask"]]],[11,"clone","","",60,[[["self"]],["ff_replay"]]],[11,"clone","","",61,[[["self"]],["ff_trigger"]]],[11,"clone","","",62,[[["self"]],["ff_envelope"]]],[11,"clone","","",63,[[["self"]],["ff_constant_effect"]]],[11,"clone","","",64,[[["self"]],["ff_ramp_effect"]]],[11,"clone","","",65,[[["self"]],["ff_condition_effect"]]],[11,"clone","","",66,[[["self"]],["ff_periodic_effect"]]],[11,"clone","","",67,[[["self"]],["ff_rumble_effect"]]],[11,"clone","","",68,[[["self"]],["ff_effect"]]],[11,"clone","","",69,[[["self"]],["dl_phdr_info"]]],[11,"clone","","",70,[[["self"]],["elf32_ehdr"]]],[11,"clone","","",71,[[["self"]],["elf64_ehdr"]]],[11,"clone","","",72,[[["self"]],["elf32_sym"]]],[11,"clone","","",73,[[["self"]],["elf64_sym"]]],[11,"clone","","",74,[[["self"]],["elf32_phdr"]]],[11,"clone","","",75,[[["self"]],["elf64_phdr"]]],[11,"clone","","",76,[[["self"]],["elf32_shdr"]]],[11,"clone","","",77,[[["self"]],["elf64_shdr"]]],[11,"clone","","",78,[[["self"]],["elf32_chdr"]]],[11,"clone","","",79,[[["self"]],["elf64_chdr"]]],[11,"clone","","",80,[[["self"]],["ucred"]]],[11,"clone","","",81,[[["self"]],["mntent"]]],[11,"clone","","",135,[[["self"]],["posix_spawn_file_actions_t"]]],[11,"clone","","",136,[[["self"]],["posix_spawnattr_t"]]],[11,"clone","","",82,[[["self"]],["genlmsghdr"]]],[11,"clone","","",83,[[["self"]],["in6_pktinfo"]]],[11,"clone","","",84,[[["self"]],["arpd_request"]]],[11,"clone","","",85,[[["self"]],["aiocb"]]],[11,"clone","","",86,[[["self"]],["__exit_status"]]],[11,"clone","","",87,[[["self"]],["__timeval"]]],[11,"clone","","",88,[[["self"]],["utmpx"]]],[11,"clone","","",89,[[["self"]],["sigaction"]]],[11,"clone","","",90,[[["self"]],["stack_t"]]],[11,"clone","","",91,[[["self"]],["siginfo_t"]]],[11,"clone","","",92,[[["self"]],["glob64_t"]]],[11,"clone","","",93,[[["self"]],["statfs"]]],[11,"clone","","",94,[[["self"]],["msghdr"]]],[11,"clone","","",95,[[["self"]],["cmsghdr"]]],[11,"clone","","",96,[[["self"]],["termios"]]],[11,"clone","","",97,[[["self"]],["flock"]]],[11,"clone","","",137,[[["self"]],["sem_t"]]],[11,"clone","","",98,[[["self"]],["mallinfo"]]],[11,"clone","","",99,[[["self"]],["nlmsghdr"]]],[11,"clone","","",100,[[["self"]],["nlmsgerr"]]],[11,"clone","","",101,[[["self"]],["nl_pktinfo"]]],[11,"clone","","",102,[[["self"]],["nl_mmap_req"]]],[11,"clone","","",103,[[["self"]],["nl_mmap_hdr"]]],[11,"clone","","",104,[[["self"]],["nlattr"]]],[11,"clone","","",105,[[["self"]],["rtentry"]]],[11,"clone","","",138,[[["self"]],["sigset_t"]]],[11,"clone","","",106,[[["self"]],["sysinfo"]]],[11,"clone","","",107,[[["self"]],["msqid_ds"]]],[11,"clone","","",108,[[["self"]],["stat"]]],[11,"clone","","",109,[[["self"]],["stat64"]]],[11,"clone","","",110,[[["self"]],["statfs64"]]],[11,"clone","","",111,[[["self"]],["statvfs64"]]],[11,"clone","","",139,[[["self"]],["pthread_attr_t"]]],[11,"clone","","",112,[[["self"]],["_libc_fpxreg"]]],[11,"clone","","",113,[[["self"]],["_libc_xmmreg"]]],[11,"clone","","",114,[[["self"]],["_libc_fpstate"]]],[11,"clone","","",115,[[["self"]],["user_fpregs_struct"]]],[11,"clone","","",116,[[["self"]],["user_regs_struct"]]],[11,"clone","","",117,[[["self"]],["user"]]],[11,"clone","","",118,[[["self"]],["mcontext_t"]]],[11,"clone","","",119,[[["self"]],["ucontext_t"]]],[11,"clone","","",120,[[["self"]],["ipc_perm"]]],[11,"clone","","",121,[[["self"]],["shmid_ds"]]],[11,"clone","","",122,[[["self"]],["termios2"]]],[11,"clone","","",123,[[["self"]],["statvfs"]]]],"paths":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,"itimerval"],[3,"tms"],[3,"servent"],[3,"protoent"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"sockaddr_nl"],[3,"sockaddr_ll"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"epoll_event"],[3,"utsname"],[3,"lconv"],[3,"sigevent"],[3,"in_pktinfo"],[3,"ifaddrs"],[3,"arpreq"],[3,"arpreq_old"],[3,"arphdr"],[3,"dirent"],[3,"dirent64"],[3,"rlimit64"],[3,"glob_t"],[3,"passwd"],[3,"spwd"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"itimerspec"],[3,"mq_attr"],[3,"packet_mreq"],[3,"if_nameindex"],[3,"msginfo"],[3,"mmsghdr"],[3,"sembuf"],[3,"input_event"],[3,"input_id"],[3,"input_absinfo"],[3,"input_keymap_entry"],[3,"input_mask"],[3,"ff_replay"],[3,"ff_trigger"],[3,"ff_envelope"],[3,"ff_constant_effect"],[3,"ff_ramp_effect"],[3,"ff_condition_effect"],[3,"ff_periodic_effect"],[3,"ff_rumble_effect"],[3,"ff_effect"],[3,"dl_phdr_info"],[3,"Elf32_Ehdr"],[3,"Elf64_Ehdr"],[3,"Elf32_Sym"],[3,"Elf64_Sym"],[3,"Elf32_Phdr"],[3,"Elf64_Phdr"],[3,"Elf32_Shdr"],[3,"Elf64_Shdr"],[3,"Elf32_Chdr"],[3,"Elf64_Chdr"],[3,"ucred"],[3,"mntent"],[3,"genlmsghdr"],[3,"in6_pktinfo"],[3,"arpd_request"],[3,"aiocb"],[3,"__exit_status"],[3,"__timeval"],[3,"utmpx"],[3,"sigaction"],[3,"stack_t"],[3,"siginfo_t"],[3,"glob64_t"],[3,"statfs"],[3,"msghdr"],[3,"cmsghdr"],[3,"termios"],[3,"flock"],[3,"mallinfo"],[3,"nlmsghdr"],[3,"nlmsgerr"],[3,"nl_pktinfo"],[3,"nl_mmap_req"],[3,"nl_mmap_hdr"],[3,"nlattr"],[3,"rtentry"],[3,"sysinfo"],[3,"msqid_ds"],[3,"stat"],[3,"stat64"],[3,"statfs64"],[3,"statvfs64"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"user_fpregs_struct"],[3,"user_regs_struct"],[3,"user"],[3,"mcontext_t"],[3,"ucontext_t"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"termios2"],[3,"statvfs"],[4,"c_void"],[3,"fd_set"],[3,"in6_rtmsg"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutexattr_t"],[3,"pthread_rwlockattr_t"],[3,"pthread_cond_t"],[3,"pthread_condattr_t"],[3,"fsid_t"],[3,"cpu_set_t"],[3,"posix_spawn_file_actions_t"],[3,"posix_spawnattr_t"],[3,"sem_t"],[3,"sigset_t"],[3,"pthread_attr_t"],[4,"DIR"],[4,"locale_t"],[4,"FILE"],[4,"fpos_t"],[4,"timezone"],[4,"fpos64_t"]]};
searchIndex["libfirm_rs"]={"doc":"","items":[[3,"Entity","libfirm_rs","",N,N],[3,"Graph","","",N,N],[3,"Mode","","",N,N],[3,"Tarval","","",N,N],[4,"VisitTime","","",N,N],[13,"BeforePredecessors","","",0,N],[13,"AfterPredecessors","","",0,N],[4,"TarvalKind","","",N,N],[13,"Bool","","",1,N],[13,"Unknown","","",1,N],[13,"Bad","","",1,N],[13,"Long","","",1,N],[13,"Other","","",1,N],[5,"init","","",N,[[]]],[11,"new_entity","","",2,[[["ty"],["str"],["ty"]],["entity"]]],[11,"new_global","","",2,[[["str"],["ty"]],["entity"]]],[11,"new","","",2,N],[11,"ir_entity","","",2,N],[11,"ty","","",2,[[["self"]],["ty"]]],[11,"owner","","",2,[[["self"]],["ty"]]],[11,"name","","",2,[[["self"]],["cstr"]]],[11,"name_string","","",2,[[["self"]],["string"]]],[11,"ld_name","","",2,[[["self"]],["cstr"]]],[11,"graph","","",2,[[["self"]],["option",["graph"]]]],[11,"offset","","",2,[[["self"]],["i32"]]],[11,"function_with_entity","","",3,[[["entity"],["usize"]],["graph"]]],[11,"entity","","",3,[[["self"]],["entity"]]],[11,"start_block","","",3,[[["self"]],["block"]]],[11,"end_block","","",3,[[["self"]],["block"]]],[11,"start","","",3,[[["self"]],["start"]]],[11,"set_start_block","","",3,[[["self"],["block"]]]],[11,"end","","",3,[[["self"]],["end"]]],[11,"end_keep_alives","","",3,[[["self"]],["endkeepaliveiterator"]]],[11,"args","","",3,[[["self"]],["proj"]]],[11,"no_mem","","",3,[[["self"]],["nomem"]]],[11,"frame","","",3,[[["self"]],["node"]]],[11,"dump","","",3,[[["self"],["str"]]]],[11,"assure_outs","","",3,[[["self"]]]],[11,"recompute_outs","","",3,[[["self"]]]],[11,"assure_loopinfo","","",3,[[["self"]]]],[11,"compute_doms","","",3,[[["self"]]]],[11,"compute_postdoms","","Compute all post dominator information in the graph",3,[[["self"]]]],[11,"remove_bads","","",3,[[["self"]]]],[11,"remove_critical_cf_edges","","",3,[[["self"]]]],[11,"remove_unreachable_code","","",3,[[["self"]]]],[11,"walk_topological","","",3,[[["self"],["f"]]]],[11,"walk_blkwise_dom_top_down","","",3,[[["self"],["f"]]]],[11,"walk","","",3,[[["self"],["f"]]]],[11,"walk_blocks_postorder","","",3,[[["self"],["f"]]]],[11,"walk_dom_tree_postorder","","",3,[[["self"],["f"]]]],[11,"walk_postdom_tree_postorder","","",3,[[["self"],["f"]]]],[11,"walk_blocks","","Walks over reachable Block nodes in the graph, starting at…",3,[[["self"],["f"]]]],[11,"nodes","","",3,[[["self"]],["vec",["node"]]]],[11,"exchange","","",3,N],[11,"mark_as_bad","","Replace the given node with a \"bad\" node, thus marking it…",3,N],[11,"copy_node_without_ins","","",3,[[["self"],["node"],["option",["block"]]],["node"]]],[11,"new_imm_block","","",3,N],[11,"slots","","",3,[[["self"]],["i32"]]],[11,"finalize_construction","","",3,[[["self"]]]],[11,"from_libfirm","","",4,[[["type"]],["mode"]]],[11,"Any","","",4,[[],["mode"]]],[11,"BAD","","",4,[[],["mode"]]],[11,"BB","","",4,[[],["mode"]]],[11,"Bs","","",4,[[],["mode"]]],[11,"Bu","","",4,[[],["mode"]]],[11,"D","","",4,[[],["mode"]]],[11,"F","","",4,[[],["mode"]]],[11,"Hs","","",4,[[],["mode"]]],[11,"Hu","","",4,[[],["mode"]]],[11,"Is","","",4,[[],["mode"]]],[11,"Iu","","",4,[[],["mode"]]],[11,"Ls","","",4,[[],["mode"]]],[11,"Lu","","",4,[[],["mode"]]],[11,"M","","",4,[[],["mode"]]],[11,"P","","",4,[[],["mode"]]],[11,"T","","",4,[[],["mode"]]],[11,"X","","",4,[[],["mode"]]],[11,"b","","",4,[[],["mode"]]],[11,"libfirm_mode","","",4,[[["self"]],["type"]]],[11,"name","","",4,[[["self"]],["cstr"]]],[11,"name_string","","",4,[[["self"]],["string"]]],[11,"size_bytes","","",4,[[["self"]],["u32"]]],[11,"is_mem","","",4,[[["self"]],["bool"]]],[11,"is_data","","",4,[[["self"]],["bool"]]],[11,"reference_offset_mode","","",4,[[["self"]],["mode"]]],[11,"is_pointer","","",4,[[["self"]],["bool"]]],[0,"nodes","","",N,N],[3,"InNodeIterator","libfirm_rs::nodes","",N,N],[3,"OutNodeIterator","","",N,N],[3,"OutNodeExIterator","","",N,N],[3,"EndKeepAliveIterator","","",N,N],[3,"ReturnResIterator","","",N,N],[3,"PhisOfBlockLinkedListIterator","","",N,N],[3,"CfgPredsIterator","","",N,N],[3,"PhiPredsIterator","","",N,N],[3,"CallArgsIterator","","",N,N],[3,"NodeDebugOpts","","",N,N],[12,"short","","",5,N],[12,"new_print_class","","",5,N],[12,"print_id","","",5,N],[3,"NodeDebugFmt","","",N,N],[3,"NodeFactory","","",N,N],[3,"Add","","returns the sum of its operands",N,N],[3,"Address","","Symbolic constant that represents the address of an entity…",N,N],[3,"Align","","A symbolic constant that represents the alignment of a type",N,N],[3,"Alloc","","Allocates a block of memory on the stack.",N,N],[3,"Anchor","","Utility node used to \"hold\" nodes in a graph that might…",N,N],[3,"And","","returns the result of a bitwise and operation of its…",N,N],[3,"Bad","","Bad nodes indicate invalid input, which is values which…",N,N],[3,"Bitcast","","Converts a value between modes with different arithmetics…",N,N],[3,"Block","","A basic block",N,N],[3,"Builtin","","performs a backend-specific builtin.",N,N],[3,"Call","","Calls other code. Control flow is transferred to ptr,…",N,N],[3,"Cmp","","Compares its two operands and checks whether a specified…",N,N],[3,"Cond","","Conditionally change control flow.",N,N],[3,"Confirm","","Specifies constraints for a value. This allows explicit…",N,N],[3,"Const","","Returns a constant value.",N,N],[3,"Conv","","Converts values between modes",N,N],[3,"CopyB","","Copies a block of memory with statically known size/type.",N,N],[3,"Deleted","","Internal node which is temporary set to nodes which are…",N,N],[3,"Div","","returns the quotient of its 2 operands",N,N],[3,"Dummy","","A placeholder value. This is used when constructing cyclic…",N,N],[3,"End","","Last node of a graph. It references nodes in endless loops…",N,N],[3,"Eor","","returns the result of a bitwise exclusive or operation of…",N,N],[3,"Free","","Frees a block of memory previously allocated by an Alloc…",N,N],[3,"IJmp","","Jumps to the code in its argument. The code has to be in…",N,N],[3,"Id","","Returns its operand unchanged.",N,N],[3,"Jmp","","Jumps to the block connected through the out-value",N,N],[3,"Load","","Loads a value from memory (heap or stack).",N,N],[3,"Member","","Computes the address of a compound type member given the…",N,N],[3,"Minus","","returns the additive inverse of its operand",N,N],[3,"Mod","","returns the remainder of its operands from an implied…",N,N],[3,"Mul","","returns the product of its operands",N,N],[3,"Mulh","","returns the upper word of the product of its operands (the…",N,N],[3,"Mux","","returns the false or true operand depending on the value…",N,N],[3,"NoMem","","Placeholder node for cases where you don't need any memory…",N,N],[3,"Not","","returns the bitwise complement of a value. Works for…",N,N],[3,"Offset","","Symbolic constant that represents the offset of an entity…",N,N],[3,"Or","","returns the result of a bitwise or operation of its operands",N,N],[3,"Phi","","Choose a value based on control flow. A phi node has 1…",N,N],[3,"Pin","","Pin the value of the node node in the current block. No…",N,N],[3,"Proj","","returns an entry of a tuple value",N,N],[3,"Raise","","Raises an exception. Unconditional change of control flow.…",N,N],[3,"Return","","Returns from the current function. Takes memory and return…",N,N],[3,"Sel","","Computes the address of an array element from the array…",N,N],[3,"Shl","","Returns its first operands bits shifted left by the amount…",N,N],[3,"Shr","","Returns its first operands bits shifted right by the…",N,N],[3,"Shrs","","Returns its first operands bits shifted right by the…",N,N],[3,"Size","","A symbolic constant that represents the size of a type",N,N],[3,"Start","","The first node of a graph. Execution starts with this node.",N,N],[3,"Store","","Stores a value into memory (heap or stack).",N,N],[3,"Sub","","returns the difference of its operands",N,N],[3,"Switch","","Change control flow. The destination is chosen based on an…",N,N],[3,"Sync","","The Sync operation unifies several partial memory blocks.…",N,N],[3,"Tuple","","Builds a Tuple from single values.",N,N],[3,"Unknown","","Returns an unknown (at compile- and runtime) value. It is…",N,N],[3,"DowncastErr","","",N,N],[4,"VisitTime","","",N,N],[13,"BeforePredecessors","","",0,N],[13,"AfterPredecessors","","",0,N],[4,"NewKind","","",N,N],[13,"Object","","",6,N],[13,"Array","","",6,N],[12,"item_ty","libfirm_rs::nodes::NewKind","",6,N],[12,"item_count","","",6,N],[4,"Node","libfirm_rs::nodes","",N,N],[13,"Add","","",7,N],[13,"Address","","",7,N],[13,"Align","","",7,N],[13,"Alloc","","",7,N],[13,"Anchor","","",7,N],[13,"And","","",7,N],[13,"Bad","","",7,N],[13,"Bitcast","","",7,N],[13,"Block","","",7,N],[13,"Builtin","","",7,N],[13,"Call","","",7,N],[13,"Cmp","","",7,N],[13,"Cond","","",7,N],[13,"Confirm","","",7,N],[13,"Const","","",7,N],[13,"Conv","","",7,N],[13,"CopyB","","",7,N],[13,"Deleted","","",7,N],[13,"Div","","",7,N],[13,"Dummy","","",7,N],[13,"End","","",7,N],[13,"Eor","","",7,N],[13,"Free","","",7,N],[13,"IJmp","","",7,N],[13,"Id","","",7,N],[13,"Jmp","","",7,N],[13,"Load","","",7,N],[13,"Member","","",7,N],[13,"Minus","","",7,N],[13,"Mod","","",7,N],[13,"Mul","","",7,N],[13,"Mulh","","",7,N],[13,"Mux","","",7,N],[13,"NoMem","","",7,N],[13,"Not","","",7,N],[13,"Offset","","",7,N],[13,"Or","","",7,N],[13,"Phi","","",7,N],[13,"Pin","","",7,N],[13,"Proj","","",7,N],[13,"Raise","","",7,N],[13,"Return","","",7,N],[13,"Sel","","",7,N],[13,"Shl","","",7,N],[13,"Shr","","",7,N],[13,"Shrs","","",7,N],[13,"Size","","",7,N],[13,"Start","","",7,N],[13,"Store","","",7,N],[13,"Sub","","",7,N],[13,"Switch","","",7,N],[13,"Sync","","",7,N],[13,"Tuple","","",7,N],[13,"Unknown","","",7,N],[4,"ProjKind","","",N,N],[13,"Alloc_M","","memory result",8,N],[13,"Alloc_Res","","pointer to newly allocated memory",8,N],[13,"Builtin_M","","memory result",8,N],[13,"Call_M","","memory result",8,N],[13,"Call_TResult","","tuple containing all results",8,N],[13,"Call_XRegular","","control flow when no exception occurs",8,N],[13,"Call_XExcept","","control flow when exception occurred",8,N],[13,"Call_TResult_Arg","","",8,N],[13,"Cond_Val","","control flow if operand is \"false\" or \"true\"",8,N],[13,"Div_M","","memory result",8,N],[13,"Div_Res","","result of computation",8,N],[13,"Div_XRegular","","control flow when no exception occurs",8,N],[13,"Div_XExcept","","control flow when exception occurred",8,N],[13,"Load_M","","memory result",8,N],[13,"Load_Res","","result of load operation",8,N],[13,"Load_XRegular","","control flow when no exception occurs",8,N],[13,"Load_XExcept","","control flow when exception occurred",8,N],[13,"Mod_M","","memory result",8,N],[13,"Mod_Res","","result of computation",8,N],[13,"Mod_XRegular","","control flow when no exception occurs",8,N],[13,"Mod_XExcept","","control flow when exception occurred",8,N],[13,"Raise_M","","memory result",8,N],[13,"Raise_X","","control flow to exception handler",8,N],[13,"Start_M","","initial memory",8,N],[13,"Start_PFrameBase","","frame base pointer",8,N],[13,"Start_TArgs","","function arguments",8,N],[13,"Start_TArgs_Arg","","",8,N],[13,"Store_M","","memory result",8,N],[13,"Store_XRegular","","control flow when no exception occurs",8,N],[13,"Store_XExcept","","control flow when exception occurred",8,N],[13,"Switch_Default","","control flow if no other case matches",8,N],[13,"Other","","",8,N],[5,"internal_try_as_value_node","","",N,[[["node"]],["result",["box","downcasterr"]]]],[5,"try_as_value_node","","",N,[[["node"]],["result",["box","downcasterr"]]]],[5,"try_as_bin_op","","",N,[[["node"]],["result",["box","downcasterr"]]]],[5,"try_as_unary_op","","",N,[[["node"]],["result",["box","downcasterr"]]]],[5,"get_Block_dom_depth","","",N,N],[11,"wrap","","",7,N],[11,"is_proj_kind_argtuple_arg","","",7,[[["self"]],["bool"]]],[11,"must_member","","",7,[[["self"]],["member"]]],[11,"must_sel","","",7,[[["self"]],["sel"]]],[11,"must_phi","","",7,[[["self"]],["phi"]]],[11,"opt_phi","","",7,[[["self"]],["option",["phi"]]]],[11,"idx","","",9,[[["self"],["i32"]],["option",["node"]]]],[11,"idx","","",10,[[["self"],["u32"]],["option",["node"]]]],[11,"idx","","",11,[[["self"],["u32"]],["option"]]],[11,"keep_alives","","",12,[[["self"]],["endkeepaliveiterator"]]],[11,"idx","","",13,[[["self"],["i32"]],["option",["node"]]]],[11,"return_res","","",14,[[["self"]],["returnresiterator"]]],[11,"idx","","",15,[[["self"],["i32"]],["option",["node"]]]],[11,"deepest_common_dominator","","",16,[[["block"],["block"]],["block"]]],[11,"dominates","","",16,[[["self"],["block"]],["bool"]]],[11,"immediate_dominator","","",16,[[["self"]],["option",["block"]]]],[11,"loop_depth","","",16,[[["self"]],["u32"]]],[11,"immediate_post_dominator","","",16,[[["self"]],["option",["block"]]]],[11,"cfg_preds","","",16,[[["self"]],["cfgpredsiterator"]]],[11,"linked_list_of_phis","","Access the phis of a block using `get_Block_phis` and…",16,[[["self"]],["phisofblocklinkedlistiterator"]]],[11,"phis","","",16,[[["self"]],["vec",["phi"]]]],[11,"phi_or_node","","",16,N],[11,"set_cfg_pred","","",16,N],[11,"mature","","",16,[[["self"]]]],[11,"value","","",16,[[["self"],["usize"],["mode"]],["node"]]],[11,"set_value","","",16,N],[11,"cur_store","","",16,[[["self"]],["node"]]],[11,"set_store","","",16,N],[11,"imm_add_pred","","",16,N],[11,"all_nodes_in_block","","",16,N],[11,"dom_depth","","",16,[[["self"]],["usize"]]],[11,"idx","","",17,[[["self"],["i32"]],["option",["node"]]]],[11,"phi_preds","","",18,[[["self"]],["phipredsiterator"]]],[11,"preds","","`Node` is the result of the phi node when entering this…",18,N],[11,"idx","","",19,[[["self"],["i32"]],["option",["node"]]]],[11,"new_proj","","",20,[[["self"],["u32"],["mode"]],["proj"]]],[11,"pred_or_none","","",20,[[["self"]],["option",["node"]]]],[11,"out_target_block","","",21,[[["self"]],["option",["block"]]]],[11,"out_proj_val","","",22,[[["self"],["bool"]],["option",["proj"]]]],[11,"out_proj_target_block","","",22,[[["self"],["bool"]],["option"]]],[11,"entity","","",23,[[["self"]],["entity"]]],[11,"set_entity","","",23,[[["self"],["entity"]]]],[11,"args","","",24,[[["self"]],["callargsiterator"]]],[11,"out_single_result","","",24,[[["self"]],["option",["node"]]]],[11,"method_name","","",24,[[["self"]],["option",["string"]]]],[11,"new_kind","","",24,[[["self"]],["option",["newkind"]]]],[11,"method_ty","","",24,[[["self"]],["methodty"]]],[11,"single_result_ty","","",24,[[["self"]],["option",["ty"]]]],[11,"idx","","",25,[[["self"],["i32"]],["option",["node"]]]],[11,"ty","","",26,[[["self"]],["ty"]]],[11,"element_ty","","",27,[[["self"]],["ty"]]],[11,"default","","",5,[[],["self"]]],[11,"short","","",28,[[["self"],["bool"]],["self"]]],[11,"new_print_class","","",28,[[["self"],["bool"]],["self"]]],[11,"with","","",28,[[["self"],["nodedebugopts"]],["self"]]],[11,"is_add","","",7,[[["node"]],["bool"]]],[11,"as_add","","",7,[[["node"]],["option",["add"]]]],[11,"is_address","","",7,[[["node"]],["bool"]]],[11,"as_address","","",7,[[["node"]],["option",["address"]]]],[11,"is_align","","",7,[[["node"]],["bool"]]],[11,"as_align","","",7,[[["node"]],["option",["align"]]]],[11,"is_alloc","","",7,[[["node"]],["bool"]]],[11,"as_alloc","","",7,[[["node"]],["option",["alloc"]]]],[11,"is_anchor","","",7,[[["node"]],["bool"]]],[11,"as_anchor","","",7,[[["node"]],["option",["anchor"]]]],[11,"is_and","","",7,[[["node"]],["bool"]]],[11,"as_and","","",7,[[["node"]],["option",["and"]]]],[11,"is_bad","","",7,[[["node"]],["bool"]]],[11,"as_bad","","",7,[[["node"]],["option",["bad"]]]],[11,"is_bitcast","","",7,[[["node"]],["bool"]]],[11,"as_bitcast","","",7,[[["node"]],["option",["bitcast"]]]],[11,"is_block","","",7,[[["node"]],["bool"]]],[11,"as_block","","",7,[[["node"]],["option",["block"]]]],[11,"is_builtin","","",7,[[["node"]],["bool"]]],[11,"as_builtin","","",7,[[["node"]],["option",["builtin"]]]],[11,"is_call","","",7,[[["node"]],["bool"]]],[11,"as_call","","",7,[[["node"]],["option",["call"]]]],[11,"is_cmp","","",7,[[["node"]],["bool"]]],[11,"as_cmp","","",7,[[["node"]],["option",["cmp"]]]],[11,"is_cond","","",7,[[["node"]],["bool"]]],[11,"as_cond","","",7,[[["node"]],["option",["cond"]]]],[11,"is_confirm","","",7,[[["node"]],["bool"]]],[11,"as_confirm","","",7,[[["node"]],["option",["confirm"]]]],[11,"is_const","","",7,[[["node"]],["bool"]]],[11,"as_const","","",7,[[["node"]],["option",["const"]]]],[11,"is_conv","","",7,[[["node"]],["bool"]]],[11,"as_conv","","",7,[[["node"]],["option",["conv"]]]],[11,"is_copyb","","",7,[[["node"]],["bool"]]],[11,"as_copyb","","",7,[[["node"]],["option",["copyb"]]]],[11,"is_deleted","","",7,[[["node"]],["bool"]]],[11,"as_deleted","","",7,[[["node"]],["option",["deleted"]]]],[11,"is_div","","",7,[[["node"]],["bool"]]],[11,"as_div","","",7,[[["node"]],["option",["div"]]]],[11,"is_dummy","","",7,[[["node"]],["bool"]]],[11,"as_dummy","","",7,[[["node"]],["option",["dummy"]]]],[11,"is_end","","",7,[[["node"]],["bool"]]],[11,"as_end","","",7,[[["node"]],["option",["end"]]]],[11,"is_eor","","",7,[[["node"]],["bool"]]],[11,"as_eor","","",7,[[["node"]],["option",["eor"]]]],[11,"is_free","","",7,[[["node"]],["bool"]]],[11,"as_free","","",7,[[["node"]],["option",["free"]]]],[11,"is_ijmp","","",7,[[["node"]],["bool"]]],[11,"as_ijmp","","",7,[[["node"]],["option",["ijmp"]]]],[11,"is_id","","",7,[[["node"]],["bool"]]],[11,"as_id","","",7,[[["node"]],["option",["id"]]]],[11,"is_jmp","","",7,[[["node"]],["bool"]]],[11,"as_jmp","","",7,[[["node"]],["option",["jmp"]]]],[11,"is_load","","",7,[[["node"]],["bool"]]],[11,"as_load","","",7,[[["node"]],["option",["load"]]]],[11,"is_member","","",7,[[["node"]],["bool"]]],[11,"as_member","","",7,[[["node"]],["option",["member"]]]],[11,"is_minus","","",7,[[["node"]],["bool"]]],[11,"as_minus","","",7,[[["node"]],["option",["minus"]]]],[11,"is_mod","","",7,[[["node"]],["bool"]]],[11,"as_mod","","",7,[[["node"]],["option",["mod"]]]],[11,"is_mul","","",7,[[["node"]],["bool"]]],[11,"as_mul","","",7,[[["node"]],["option",["mul"]]]],[11,"is_mulh","","",7,[[["node"]],["bool"]]],[11,"as_mulh","","",7,[[["node"]],["option",["mulh"]]]],[11,"is_mux","","",7,[[["node"]],["bool"]]],[11,"as_mux","","",7,[[["node"]],["option",["mux"]]]],[11,"is_nomem","","",7,[[["node"]],["bool"]]],[11,"as_nomem","","",7,[[["node"]],["option",["nomem"]]]],[11,"is_not","","",7,[[["node"]],["bool"]]],[11,"as_not","","",7,[[["node"]],["option",["not"]]]],[11,"is_offset","","",7,[[["node"]],["bool"]]],[11,"as_offset","","",7,[[["node"]],["option",["offset"]]]],[11,"is_or","","",7,[[["node"]],["bool"]]],[11,"as_or","","",7,[[["node"]],["option",["or"]]]],[11,"is_phi","","",7,[[["node"]],["bool"]]],[11,"as_phi","","",7,[[["node"]],["option",["phi"]]]],[11,"is_pin","","",7,[[["node"]],["bool"]]],[11,"as_pin","","",7,[[["node"]],["option",["pin"]]]],[11,"is_proj","","",7,[[["node"]],["bool"]]],[11,"as_proj","","",7,[[["node"]],["option",["proj"]]]],[11,"is_raise","","",7,[[["node"]],["bool"]]],[11,"as_raise","","",7,[[["node"]],["option",["raise"]]]],[11,"is_return","","",7,[[["node"]],["bool"]]],[11,"as_return","","",7,[[["node"]],["option",["return"]]]],[11,"is_sel","","",7,[[["node"]],["bool"]]],[11,"as_sel","","",7,[[["node"]],["option",["sel"]]]],[11,"is_shl","","",7,[[["node"]],["bool"]]],[11,"as_shl","","",7,[[["node"]],["option",["shl"]]]],[11,"is_shr","","",7,[[["node"]],["bool"]]],[11,"as_shr","","",7,[[["node"]],["option",["shr"]]]],[11,"is_shrs","","",7,[[["node"]],["bool"]]],[11,"as_shrs","","",7,[[["node"]],["option",["shrs"]]]],[11,"is_size","","",7,[[["node"]],["bool"]]],[11,"as_size","","",7,[[["node"]],["option",["size"]]]],[11,"is_start","","",7,[[["node"]],["bool"]]],[11,"as_start","","",7,[[["node"]],["option",["start"]]]],[11,"is_store","","",7,[[["node"]],["bool"]]],[11,"as_store","","",7,[[["node"]],["option",["store"]]]],[11,"is_sub","","",7,[[["node"]],["bool"]]],[11,"as_sub","","",7,[[["node"]],["option",["sub"]]]],[11,"is_switch","","",7,[[["node"]],["bool"]]],[11,"as_switch","","",7,[[["node"]],["option",["switch"]]]],[11,"is_sync","","",7,[[["node"]],["bool"]]],[11,"as_sync","","",7,[[["node"]],["option",["sync"]]]],[11,"is_tuple","","",7,[[["node"]],["bool"]]],[11,"as_tuple","","",7,[[["node"]],["option",["tuple"]]]],[11,"is_unknown","","",7,[[["node"]],["bool"]]],[11,"as_unknown","","",7,[[["node"]],["option",["unknown"]]]],[11,"kind","","",20,[[["self"]],["projkind"]]],[11,"new","","",29,[[],["self"]]],[11,"create","","",29,N],[11,"left","","Gets first operand.",30,[[["self"]],["node"]]],[11,"set_left","","Sets first operand.",30,N],[11,"right","","Gets second operand.",30,[[["self"]],["node"]]],[11,"set_right","","Sets second operand.",30,N],[11,"mem","","Gets memory dependency.",31,[[["self"]],["node"]]],[11,"set_mem","","Sets memory dependency.",31,N],[11,"size","","Gets size of the block in bytes.",31,[[["self"]],["node"]]],[11,"set_size","","Sets size of the block in bytes.",31,N],[11,"alignment","","Gets alignment of the memory block (must be a power of 2).",31,[[["self"]],["c_uint"]]],[11,"set_alignment","","Sets alignment of the memory block (must be a power of 2).",31,[[["self"],["c_uint"]]]],[11,"new_proj_m","","memory result.",31,[[["self"]],["proj"]]],[11,"new_proj_res","","pointer to newly allocated memory.",31,[[["self"],["mode"]],["proj"]]],[11,"out_proj_m","","memory result.",31,[[["self"]],["option",["proj"]]]],[11,"out_proj_res","","pointer to newly allocated memory.",31,[[["self"]],["option",["proj"]]]],[11,"end_block","","Gets block the end node belongs to.",32,[[["self"]],["node"]]],[11,"set_end_block","","Sets block the end node belongs to.",32,N],[11,"start_block","","Gets block the start node belongs to.",32,[[["self"]],["node"]]],[11,"set_start_block","","Sets block the start node belongs to.",32,N],[11,"end","","Gets end node of this ir_graph.",32,[[["self"]],["node"]]],[11,"set_end","","Sets end node of this ir_graph.",32,N],[11,"start","","Gets start node of this ir_graph.",32,[[["self"]],["node"]]],[11,"set_start","","Sets start node of this ir_graph.",32,N],[11,"frame","","Gets frame of this ir_graph.",32,[[["self"]],["node"]]],[11,"set_frame","","Sets frame of this ir_graph.",32,N],[11,"initial_mem","","Gets initial memory of this ir_graph.",32,[[["self"]],["node"]]],[11,"set_initial_mem","","Sets initial memory of this ir_graph.",32,N],[11,"args","","Gets argument proj of the start node.",32,[[["self"]],["node"]]],[11,"set_args","","Sets argument proj of the start node.",32,N],[11,"no_mem","","Gets the only NoMem node of this ir_graph.",32,[[["self"]],["node"]]],[11,"set_no_mem","","Sets the only NoMem node of this ir_graph.",32,N],[11,"left","","Gets first operand.",33,[[["self"]],["node"]]],[11,"set_left","","Sets first operand.",33,N],[11,"right","","Gets second operand.",33,[[["self"]],["node"]]],[11,"set_right","","Sets second operand.",33,N],[11,"op","","Gets operand.",34,[[["self"]],["node"]]],[11,"set_op","","Sets operand.",34,N],[11,"entity","","Gets entity representing this block.",16,[[["self"]],["entity"]]],[11,"set_entity","","Sets entity representing this block.",16,[[["self"],["entity"]]]],[11,"mem","","Gets memory dependency.",35,[[["self"]],["node"]]],[11,"set_mem","","Sets memory dependency.",35,N],[11,"kind","","Gets kind of builtin.",35,[[["self"]],["type"]]],[11,"set_kind","","Sets kind of builtin.",35,[[["self"],["type"]]]],[11,"ty","","Gets method type for the builtin call.",35,[[["self"]],["ty"]]],[11,"set_ty","","Sets method type for the builtin call.",35,[[["self"],["ty"]]]],[11,"new_proj_m","","memory result.",35,[[["self"]],["proj"]]],[11,"out_proj_m","","memory result.",35,[[["self"]],["option",["proj"]]]],[11,"mem","","Gets memory dependency.",24,[[["self"]],["node"]]],[11,"set_mem","","Sets memory dependency.",24,N],[11,"ptr","","Gets pointer to called code.",24,[[["self"]],["node"]]],[11,"set_ptr","","Sets pointer to called code.",24,N],[11,"ty","","Gets type of the call (usually type of the called…",24,[[["self"]],["ty"]]],[11,"set_ty","","Sets type of the call (usually type of the called…",24,[[["self"],["ty"]]]],[11,"new_proj_m","","memory result.",24,[[["self"]],["proj"]]],[11,"new_proj_t_result","","tuple containing all results.",24,[[["self"]],["proj"]]],[11,"new_proj_x_regular","","control flow when no exception occurs.",24,[[["self"]],["proj"]]],[11,"new_proj_x_except","","control flow when exception occurred.",24,[[["self"]],["proj"]]],[11,"out_proj_m","","memory result.",24,[[["self"]],["option",["proj"]]]],[11,"out_proj_t_result","","tuple containing all results.",24,[[["self"]],["option",["proj"]]]],[11,"out_proj_x_regular","","control flow when no exception occurs.",24,[[["self"]],["option",["proj"]]]],[11,"out_proj_x_except","","control flow when exception occurred.",24,[[["self"]],["option",["proj"]]]],[11,"left","","Gets first operand.",36,[[["self"]],["node"]]],[11,"set_left","","Sets first operand.",36,N],[11,"right","","Gets second operand.",36,[[["self"]],["node"]]],[11,"set_right","","Sets second operand.",36,N],[11,"relation","","Gets Comparison relation.",36,[[["self"]],["type"]]],[11,"set_relation","","Sets Comparison relation.",36,[[["self"],["type"]]]],[11,"selector","","Gets condition parameter.",22,[[["self"]],["node"]]],[11,"set_selector","","Sets condition parameter.",22,N],[11,"jmp_pred","","Gets can indicate the most likely jump.",22,[[["self"]],["type"]]],[11,"set_jmp_pred","","Sets can indicate the most likely jump.",22,[[["self"],["type"]]]],[11,"new_proj_false","","control flow if operand is \"false\".",22,[[["self"]],["proj"]]],[11,"new_proj_true","","control flow if operand is \"true\".",22,[[["self"]],["proj"]]],[11,"out_proj_false","","control flow if operand is \"false\".",22,[[["self"]],["option",["proj"]]]],[11,"out_proj_true","","control flow if operand is \"true\".",22,[[["self"]],["option",["proj"]]]],[11,"value","","Gets value to express a constraint for.",37,[[["self"]],["node"]]],[11,"set_value","","Sets value to express a constraint for.",37,N],[11,"bound","","Gets value to compare against.",37,[[["self"]],["node"]]],[11,"set_bound","","Sets value to compare against.",37,N],[11,"relation","","Gets relation of value to bound.",37,[[["self"]],["type"]]],[11,"set_relation","","Sets relation of value to bound.",37,[[["self"],["type"]]]],[11,"tarval","","Gets constant value (a tarval object).",38,[[["self"]],["tarval"]]],[11,"set_tarval","","Sets constant value (a tarval object).",38,[[["self"],["tarval"]]]],[11,"op","","Gets operand.",39,[[["self"]],["node"]]],[11,"set_op","","Sets operand.",39,N],[11,"mem","","Gets memory dependency.",40,[[["self"]],["node"]]],[11,"set_mem","","Sets memory dependency.",40,N],[11,"dst","","Gets destination address.",40,[[["self"]],["node"]]],[11,"set_dst","","Sets destination address.",40,N],[11,"src","","Gets source address.",40,[[["self"]],["node"]]],[11,"set_src","","Sets source address.",40,N],[11,"ty","","Gets type of copied data.",40,[[["self"]],["ty"]]],[11,"set_ty","","Sets type of copied data.",40,[[["self"],["ty"]]]],[11,"volatility","","Gets volatile CopyB nodes have a visible side-effect and…",40,[[["self"]],["type"]]],[11,"set_volatility","","Sets volatile CopyB nodes have a visible side-effect and…",40,[[["self"],["type"]]]],[11,"mem","","Gets memory dependency.",41,[[["self"]],["node"]]],[11,"set_mem","","Sets memory dependency.",41,N],[11,"left","","Gets first operand.",41,[[["self"]],["node"]]],[11,"set_left","","Sets first operand.",41,N],[11,"right","","Gets second operand.",41,[[["self"]],["node"]]],[11,"set_right","","Sets second operand.",41,N],[11,"resmode","","Gets mode of the result value.",41,[[["self"]],["mode"]]],[11,"set_resmode","","Sets mode of the result value.",41,[[["self"],["mode"]]]],[11,"no_remainder","","Gets Set when division remainder is known to be zero.",41,[[["self"]],["i32"]]],[11,"set_no_remainder","","Sets Set when division remainder is known to be zero.",41,[[["self"],["i32"]]]],[11,"new_proj_m","","memory result.",41,[[["self"]],["proj"]]],[11,"new_proj_res","","result of computation.",41,[[["self"],["mode"]],["proj"]]],[11,"new_proj_x_regular","","control flow when no exception occurs.",41,[[["self"]],["proj"]]],[11,"new_proj_x_except","","control flow when exception occurred.",41,[[["self"]],["proj"]]],[11,"out_proj_m","","memory result.",41,[[["self"]],["option",["proj"]]]],[11,"out_proj_res","","result of computation.",41,[[["self"]],["option",["proj"]]]],[11,"out_proj_x_regular","","control flow when no exception occurs.",41,[[["self"]],["option",["proj"]]]],[11,"out_proj_x_except","","control flow when exception occurred.",41,[[["self"]],["option",["proj"]]]],[11,"left","","Gets first operand.",42,[[["self"]],["node"]]],[11,"set_left","","Sets first operand.",42,N],[11,"right","","Gets second operand.",42,[[["self"]],["node"]]],[11,"set_right","","Sets second operand.",42,N],[11,"mem","","Gets memory dependency.",43,[[["self"]],["node"]]],[11,"set_mem","","Sets memory dependency.",43,N],[11,"ptr","","Gets pointer to the object to free.",43,[[["self"]],["node"]]],[11,"set_ptr","","Sets pointer to the object to free.",43,N],[11,"target","","Gets target address of the jump.",44,[[["self"]],["node"]]],[11,"set_target","","Sets target address of the jump.",44,N],[11,"pred","","Gets the value which is returned unchanged.",45,[[["self"]],["node"]]],[11,"set_pred","","Sets the value which is returned unchanged.",45,N],[11,"mem","","Gets memory dependency.",46,[[["self"]],["node"]]],[11,"set_mem","","Sets memory dependency.",46,N],[11,"ptr","","Gets address to load from.",46,[[["self"]],["node"]]],[11,"set_ptr","","Sets address to load from.",46,N],[11,"mode","","Gets mode of the value to be loaded.",46,[[["self"]],["mode"]]],[11,"set_mode","","Sets mode of the value to be loaded.",46,[[["self"],["mode"]]]],[11,"ty","","Gets The type of the object which is stored at ptr (need…",46,[[["self"]],["ty"]]],[11,"set_ty","","Sets The type of the object which is stored at ptr (need…",46,[[["self"],["ty"]]]],[11,"volatility","","Gets volatile loads are a visible side-effect and may not…",46,[[["self"]],["type"]]],[11,"set_volatility","","Sets volatile loads are a visible side-effect and may not…",46,[[["self"],["type"]]]],[11,"unaligned","","Gets pointers to unaligned loads don't need to respect the…",46,[[["self"]],["type"]]],[11,"set_unaligned","","Sets pointers to unaligned loads don't need to respect the…",46,[[["self"],["type"]]]],[11,"new_proj_m","","memory result.",46,[[["self"]],["proj"]]],[11,"new_proj_res","","result of load operation.",46,[[["self"],["mode"]],["proj"]]],[11,"new_proj_x_regular","","control flow when no exception occurs.",46,[[["self"]],["proj"]]],[11,"new_proj_x_except","","control flow when exception occurred.",46,[[["self"]],["proj"]]],[11,"out_proj_m","","memory result.",46,[[["self"]],["option",["proj"]]]],[11,"out_proj_res","","result of load operation.",46,[[["self"]],["option",["proj"]]]],[11,"out_proj_x_regular","","control flow when no exception occurs.",46,[[["self"]],["option",["proj"]]]],[11,"out_proj_x_except","","control flow when exception occurred.",46,[[["self"]],["option",["proj"]]]],[11,"ptr","","Gets pointer to object to select from.",47,[[["self"]],["node"]]],[11,"set_ptr","","Sets pointer to object to select from.",47,N],[11,"entity","","Gets entity which is selected.",47,[[["self"]],["entity"]]],[11,"set_entity","","Sets entity which is selected.",47,[[["self"],["entity"]]]],[11,"op","","Gets operand.",48,[[["self"]],["node"]]],[11,"set_op","","Sets operand.",48,N],[11,"mem","","Gets memory dependency.",49,[[["self"]],["node"]]],[11,"set_mem","","Sets memory dependency.",49,N],[11,"left","","Gets first operand.",49,[[["self"]],["node"]]],[11,"set_left","","Sets first operand.",49,N],[11,"right","","Gets second operand.",49,[[["self"]],["node"]]],[11,"set_right","","Sets second operand.",49,N],[11,"resmode","","Gets mode of the result.",49,[[["self"]],["mode"]]],[11,"set_resmode","","Sets mode of the result.",49,[[["self"],["mode"]]]],[11,"new_proj_m","","memory result.",49,[[["self"]],["proj"]]],[11,"new_proj_res","","result of computation.",49,[[["self"],["mode"]],["proj"]]],[11,"new_proj_x_regular","","control flow when no exception occurs.",49,[[["self"]],["proj"]]],[11,"new_proj_x_except","","control flow when exception occurred.",49,[[["self"]],["proj"]]],[11,"out_proj_m","","memory result.",49,[[["self"]],["option",["proj"]]]],[11,"out_proj_res","","result of computation.",49,[[["self"]],["option",["proj"]]]],[11,"out_proj_x_regular","","control flow when no exception occurs.",49,[[["self"]],["option",["proj"]]]],[11,"out_proj_x_except","","control flow when exception occurred.",49,[[["self"]],["option",["proj"]]]],[11,"left","","Gets first operand.",50,[[["self"]],["node"]]],[11,"set_left","","Sets first operand.",50,N],[11,"right","","Gets second operand.",50,[[["self"]],["node"]]],[11,"set_right","","Sets second operand.",50,N],[11,"left","","Gets first operand.",51,[[["self"]],["node"]]],[11,"set_left","","Sets first operand.",51,N],[11,"right","","Gets second operand.",51,[[["self"]],["node"]]],[11,"set_right","","Sets second operand.",51,N],[11,"sel","","Gets value making the output selection.",52,[[["self"]],["node"]]],[11,"set_sel","","Sets value making the output selection.",52,N],[11,"false_","","Gets selected if sel input is false.",52,[[["self"]],["node"]]],[11,"set_false_","","Sets selected if sel input is false.",52,N],[11,"true_","","Gets selected if sel input is true.",52,[[["self"]],["node"]]],[11,"set_true_","","Sets selected if sel input is true.",52,N],[11,"op","","Gets operand.",53,[[["self"]],["node"]]],[11,"set_op","","Sets operand.",53,N],[11,"left","","Gets first operand.",54,[[["self"]],["node"]]],[11,"set_left","","Sets first operand.",54,N],[11,"right","","Gets second operand.",54,[[["self"]],["node"]]],[11,"set_right","","Sets second operand.",54,N],[11,"loop_","","Gets whether Phi represents the observable effect of a…",18,[[["self"]],["i32"]]],[11,"set_loop_","","Sets whether Phi represents the observable effect of a…",18,[[["self"],["i32"]]]],[11,"op","","Gets value which is pinned.",55,[[["self"]],["node"]]],[11,"set_op","","Sets value which is pinned.",55,N],[11,"pred","","Gets the tuple value from which a part is extracted.",20,[[["self"]],["node"]]],[11,"set_pred","","Sets the tuple value from which a part is extracted.",20,N],[11,"num","","Gets number of tuple component to be extracted.",20,[[["self"]],["c_uint"]]],[11,"set_num","","Sets number of tuple component to be extracted.",20,[[["self"],["c_uint"]]]],[11,"mem","","Gets memory dependency.",56,[[["self"]],["node"]]],[11,"set_mem","","Sets memory dependency.",56,N],[11,"exo_ptr","","Gets pointer to exception object to be thrown.",56,[[["self"]],["node"]]],[11,"set_exo_ptr","","Sets pointer to exception object to be thrown.",56,N],[11,"new_proj_m","","memory result.",56,[[["self"]],["proj"]]],[11,"new_proj_x","","control flow to exception handler.",56,[[["self"]],["proj"]]],[11,"out_proj_m","","memory result.",56,[[["self"]],["option",["proj"]]]],[11,"out_proj_x","","control flow to exception handler.",56,[[["self"]],["option",["proj"]]]],[11,"mem","","Gets memory dependency.",14,[[["self"]],["node"]]],[11,"set_mem","","Sets memory dependency.",14,N],[11,"ptr","","Gets pointer to array to select from.",27,[[["self"]],["node"]]],[11,"set_ptr","","Sets pointer to array to select from.",27,N],[11,"index","","Gets index to select.",27,[[["self"]],["node"]]],[11,"set_index","","Sets index to select.",27,N],[11,"ty","","Gets array type.",27,[[["self"]],["ty"]]],[11,"set_ty","","Sets array type.",27,[[["self"],["ty"]]]],[11,"left","","Gets first operand.",57,[[["self"]],["node"]]],[11,"set_left","","Sets first operand.",57,N],[11,"right","","Gets second operand.",57,[[["self"]],["node"]]],[11,"set_right","","Sets second operand.",57,N],[11,"left","","Gets first operand.",58,[[["self"]],["node"]]],[11,"set_left","","Sets first operand.",58,N],[11,"right","","Gets second operand.",58,[[["self"]],["node"]]],[11,"set_right","","Sets second operand.",58,N],[11,"left","","Gets first operand.",59,[[["self"]],["node"]]],[11,"set_left","","Sets first operand.",59,N],[11,"right","","Gets second operand.",59,[[["self"]],["node"]]],[11,"set_right","","Sets second operand.",59,N],[11,"new_proj_m","","initial memory.",60,[[["self"]],["proj"]]],[11,"new_proj_p_frame_base","","frame base pointer.",60,[[["self"],["mode"]],["proj"]]],[11,"new_proj_t_args","","function arguments.",60,[[["self"]],["proj"]]],[11,"out_proj_m","","initial memory.",60,[[["self"]],["option",["proj"]]]],[11,"out_proj_p_frame_base","","frame base pointer.",60,[[["self"]],["option",["proj"]]]],[11,"out_proj_t_args","","function arguments.",60,[[["self"]],["option",["proj"]]]],[11,"mem","","Gets memory dependency.",61,[[["self"]],["node"]]],[11,"set_mem","","Sets memory dependency.",61,N],[11,"ptr","","Gets address to store to.",61,[[["self"]],["node"]]],[11,"set_ptr","","Sets address to store to.",61,N],[11,"value","","Gets value to store.",61,[[["self"]],["node"]]],[11,"set_value","","Sets value to store.",61,N],[11,"ty","","Gets The type of the object which is stored at ptr (need…",61,[[["self"]],["ty"]]],[11,"set_ty","","Sets The type of the object which is stored at ptr (need…",61,[[["self"],["ty"]]]],[11,"volatility","","Gets volatile stores are a visible side-effect and may not…",61,[[["self"]],["type"]]],[11,"set_volatility","","Sets volatile stores are a visible side-effect and may not…",61,[[["self"],["type"]]]],[11,"unaligned","","Gets pointers to unaligned stores don't need to respect…",61,[[["self"]],["type"]]],[11,"set_unaligned","","Sets pointers to unaligned stores don't need to respect…",61,[[["self"],["type"]]]],[11,"new_proj_m","","memory result.",61,[[["self"]],["proj"]]],[11,"new_proj_x_regular","","control flow when no exception occurs.",61,[[["self"]],["proj"]]],[11,"new_proj_x_except","","control flow when exception occurred.",61,[[["self"]],["proj"]]],[11,"out_proj_m","","memory result.",61,[[["self"]],["option",["proj"]]]],[11,"out_proj_x_regular","","control flow when no exception occurs.",61,[[["self"]],["option",["proj"]]]],[11,"out_proj_x_except","","control flow when exception occurred.",61,[[["self"]],["option",["proj"]]]],[11,"left","","Gets first operand.",62,[[["self"]],["node"]]],[11,"set_left","","Sets first operand.",62,N],[11,"right","","Gets second operand.",62,[[["self"]],["node"]]],[11,"set_right","","Sets second operand.",62,N],[11,"selector","","Gets input selector.",63,[[["self"]],["node"]]],[11,"set_selector","","Sets input selector.",63,N],[11,"n_outs","","Gets number of outputs (including pn_Switch_default).",63,[[["self"]],["c_uint"]]],[11,"set_n_outs","","Sets number of outputs (including pn_Switch_default).",63,[[["self"],["c_uint"]]]],[11,"table","","Gets table describing mapping from input values to Proj…",63,N],[11,"set_table","","Sets table describing mapping from input values to Proj…",63,N],[11,"new_proj_default","","control flow if no other case matches.",63,[[["self"],["mode"]],["proj"]]],[11,"out_proj_default","","control flow if no other case matches.",63,[[["self"]],["option",["proj"]]]],[11,"new_add","libfirm_rs","Creates a new Add-node. * `block` The block. * `irn_left`…",3,N],[11,"new_address","","Creates a new Address-node. * `entity` entity to operate on",3,[[["self"],["entity"]],["address"]]],[11,"new_align","","Creates a new Align-node. * `mode` mode of the operations…",3,[[["self"],["mode"],["ty"]],["align"]]],[11,"new_alloc","","Creates a new Alloc-node. * `block` The block. * `irn_mem`…",3,N],[11,"new_and","","Creates a new And-node. * `block` The block. * `irn_left`…",3,N],[11,"new_bad","","Creates a new Bad-node. * `mode` mode of the operations…",3,[[["self"],["mode"]],["bad"]]],[11,"new_bitcast","","Creates a new Bitcast-node. * `block` The block. *…",3,N],[11,"new_block","","Creates a new Block-node. * `in_` additional inputs",3,N],[11,"new_builtin","","Creates a new Builtin-node. * `block` The block. *…",3,N],[11,"new_call","","Creates a new Call-node. * `block` The block. * `irn_mem`…",3,N],[11,"new_cmp","","Creates a new Cmp-node. * `block` The block. * `irn_left`…",3,N],[11,"new_cond","","Creates a new Cond-node. * `block` The block. *…",3,N],[11,"new_confirm","","Creates a new Confirm-node. * `block` The block. *…",3,N],[11,"new_const","","Creates a new Const-node. * `tarval` constant value (a…",3,[[["self"],["tarval"]],["const"]]],[11,"new_conv","","Creates a new Conv-node. * `block` The block. * `irn_op`…",3,N],[11,"new_copyb","","Creates a new CopyB-node. * `block` The block. * `irn_mem`…",3,N],[11,"new_div","","Creates a new Div-node. * `block` The block. * `irn_mem`…",3,N],[11,"new_dummy","","Creates a new Dummy-node. * `mode` mode of the operations…",3,[[["self"],["mode"]],["dummy"]]],[11,"new_end","","Creates a new End-node. * `in_` additional inputs",3,N],[11,"new_eor","","Creates a new Eor-node. * `block` The block. * `irn_left`…",3,N],[11,"new_free","","Creates a new Free-node. * `block` The block. * `irn_mem`…",3,N],[11,"new_ijmp","","Creates a new IJmp-node. * `block` The block. *…",3,N],[11,"new_jmp","","Creates a new Jmp-node. * `block` The block.",3,[[["self"],["block"]],["jmp"]]],[11,"new_load","","Creates a new Load-node. * `block` The block. * `irn_mem`…",3,N],[11,"new_member","","Creates a new Member-node. * `block` The block. *…",3,N],[11,"new_minus","","Creates a new Minus-node. * `block` The block. * `irn_op` op",3,N],[11,"new_mod","","Creates a new Mod-node. * `block` The block. * `irn_mem`…",3,N],[11,"new_mul","","Creates a new Mul-node. * `block` The block. * `irn_left`…",3,N],[11,"new_mulh","","Creates a new Mulh-node. * `block` The block. * `irn_left`…",3,N],[11,"new_mux","","Creates a new Mux-node. * `block` The block. * `irn_sel`…",3,N],[11,"new_nomem","","Creates a new NoMem-node.",3,[[["self"]],["nomem"]]],[11,"new_not","","Creates a new Not-node. * `block` The block. * `irn_op` op",3,N],[11,"new_offset","","Creates a new Offset-node. * `mode` mode of the operations…",3,[[["self"],["mode"],["entity"]],["offset"]]],[11,"new_or","","Creates a new Or-node. * `block` The block. * `irn_left`…",3,N],[11,"new_phi","","Creates a new Phi-node. * `block` The block. * `in_`…",3,N],[11,"new_pin","","Creates a new Pin-node. * `block` The block. * `irn_op` op",3,N],[11,"new_proj","","Creates a new Proj-node. * `irn_pred` pred * `mode` mode…",3,N],[11,"new_raise","","Creates a new Raise-node. * `block` The block. * `irn_mem`…",3,N],[11,"new_return","","Creates a new Return-node. * `block` The block. *…",3,N],[11,"new_sel","","Creates a new Sel-node. * `block` The block. * `irn_ptr`…",3,N],[11,"new_shl","","Creates a new Shl-node. * `block` The block. * `irn_left`…",3,N],[11,"new_shr","","Creates a new Shr-node. * `block` The block. * `irn_left`…",3,N],[11,"new_shrs","","Creates a new Shrs-node. * `block` The block. * `irn_left`…",3,N],[11,"new_size","","Creates a new Size-node. * `mode` mode of the operations…",3,[[["self"],["mode"],["ty"]],["size"]]],[11,"new_start","","Creates a new Start-node.",3,[[["self"]],["start"]]],[11,"new_store","","Creates a new Store-node. * `block` The block. * `irn_mem`…",3,N],[11,"new_sub","","Creates a new Sub-node. * `block` The block. * `irn_left`…",3,N],[11,"new_switch","","Creates a new Switch-node. * `block` The block. *…",3,N],[11,"new_sync","","Creates a new Sync-node. * `block` The block. * `in_`…",3,N],[11,"new_tuple","","Creates a new Tuple-node. * `block` The block. * `in_`…",3,N],[11,"new_unknown","","Creates a new Unknown-node. * `mode` mode of the…",3,[[["self"],["mode"]],["unknown"]]],[11,"new_add","libfirm_rs::nodes","Creates a new Add-node. * `irn_left` left * `irn_right`…",16,N],[11,"new_alloc","","Creates a new Alloc-node. * `irn_mem` mem * `irn_size`…",16,N],[11,"new_and","","Creates a new And-node. * `irn_left` left * `irn_right`…",16,N],[11,"new_bitcast","","Creates a new Bitcast-node. * `irn_op` op * `mode` mode of…",16,N],[11,"new_builtin","","Creates a new Builtin-node. * `irn_mem` mem * `in_`…",16,N],[11,"new_call","","Creates a new Call-node. * `irn_mem` mem * `irn_ptr` ptr *…",16,N],[11,"new_cmp","","Creates a new Cmp-node. * `irn_left` left * `irn_right`…",16,N],[11,"new_cond","","Creates a new Cond-node. * `irn_selector` selector",16,N],[11,"new_confirm","","Creates a new Confirm-node. * `irn_value` value *…",16,N],[11,"new_conv","","Creates a new Conv-node. * `irn_op` op * `mode` mode of…",16,N],[11,"new_copyb","","Creates a new CopyB-node. * `irn_mem` mem * `irn_dst` dst…",16,N],[11,"new_div","","Creates a new Div-node. * `irn_mem` mem * `irn_left` left…",16,N],[11,"new_eor","","Creates a new Eor-node. * `irn_left` left * `irn_right`…",16,N],[11,"new_free","","Creates a new Free-node. * `irn_mem` mem * `irn_ptr` ptr",16,N],[11,"new_ijmp","","Creates a new IJmp-node. * `irn_target` target",16,N],[11,"new_jmp","","Creates a new Jmp-node.",16,[[["self"]],["jmp"]]],[11,"new_load","","Creates a new Load-node. * `irn_mem` mem * `irn_ptr` ptr *…",16,N],[11,"new_member","","Creates a new Member-node. * `irn_ptr` ptr * `entity`…",16,N],[11,"new_minus","","Creates a new Minus-node. * `irn_op` op",16,N],[11,"new_mod","","Creates a new Mod-node. * `irn_mem` mem * `irn_left` left…",16,N],[11,"new_mul","","Creates a new Mul-node. * `irn_left` left * `irn_right`…",16,N],[11,"new_mulh","","Creates a new Mulh-node. * `irn_left` left * `irn_right`…",16,N],[11,"new_mux","","Creates a new Mux-node. * `irn_sel` sel * `irn_false`…",16,N],[11,"new_not","","Creates a new Not-node. * `irn_op` op",16,N],[11,"new_or","","Creates a new Or-node. * `irn_left` left * `irn_right` right",16,N],[11,"new_phi","","Creates a new Phi-node. * `in_` additional inputs * `mode`…",16,N],[11,"new_pin","","Creates a new Pin-node. * `irn_op` op",16,N],[11,"new_raise","","Creates a new Raise-node. * `irn_mem` mem * `irn_exo_ptr`…",16,N],[11,"new_return","","Creates a new Return-node. * `irn_mem` mem * `in_`…",16,N],[11,"new_sel","","Creates a new Sel-node. * `irn_ptr` ptr * `irn_index`…",16,N],[11,"new_shl","","Creates a new Shl-node. * `irn_left` left * `irn_right`…",16,N],[11,"new_shr","","Creates a new Shr-node. * `irn_left` left * `irn_right`…",16,N],[11,"new_shrs","","Creates a new Shrs-node. * `irn_left` left * `irn_right`…",16,N],[11,"new_store","","Creates a new Store-node. * `irn_mem` mem * `irn_ptr` ptr…",16,N],[11,"new_sub","","Creates a new Sub-node. * `irn_left` left * `irn_right`…",16,N],[11,"new_switch","","Creates a new Switch-node. * `irn_selector` selector *…",16,N],[11,"new_sync","","Creates a new Sync-node. * `in_` additional inputs",16,N],[11,"new_tuple","","Creates a new Tuple-node. * `in_` additional inputs",16,N],[8,"NodeTrait","","A trait to abstract from Node enum and various *-Node…",N,N],[10,"internal_ir_node","","",64,N],[11,"as_node","","",64,[[["self"]],["node"]]],[11,"keep_alive","","",64,[[["self"]]]],[11,"mode","","",64,[[["self"]],["mode"]]],[11,"block","","",64,[[["self"]],["block"]]],[11,"set_block","","",64,[[["self"],["block"]]]],[11,"out_nodes","","",64,[[["self"]],["outnodeiterator"]]],[11,"out_nodes_ex","","",64,[[["self"]],["outnodeexiterator"]]],[11,"all_out_projs","","",64,[[["self"]],["vec",["proj"]]]],[11,"collect_all_out_projs","","",64,[[["self"],["vec"]]]],[11,"in_nodes","","",64,[[["self"]],["innodeiterator"]]],[11,"set_input_at","","",64,[[["self"],["i32"],["node"]]]],[11,"set_in_nodes","","",64,N],[11,"node_id","","",64,[[["self"]],["i64"]]],[11,"is_pinned","","",64,[[["self"]],["bool"]]],[11,"is_commutative","","",64,[[["self"]],["bool"]]],[11,"is_only_valid_in_start_block","","",64,[[["self"]],["bool"]]],[11,"graph","","",64,[[["self"]],["graph"]]],[11,"walk","","libifrm irg_walk wrapper",64,[[["self"],["f"]]]],[11,"walk_dfs_in_block_stop_at_phi_node","","Perform a DFS over all nodes within `block` starting at…",64,[[["self"],["block"],["callback"]]]],[8,"NodeDebug","","",N,N],[10,"fmt","","",65,[[["self"],["formatter"],["nodedebugopts"]],["result"]]],[11,"debug_fmt","","",65,[[["self"]],["nodedebugfmt"]]],[8,"ValueNode","","",N,N],[10,"value_nodes","","",66,[[["self"]],["vec",["box"]]]],[10,"compute","","",66,[[["self"],["vec",["tarval"]]],["tarval"]]],[8,"BinOp","","",N,N],[10,"left","","",67,[[["self"]],["box",["valuenode"]]]],[10,"right","","",67,[[["self"]],["box",["valuenode"]]]],[10,"compute","","",67,[[["self"],["tarval"],["tarval"]],["tarval"]]],[8,"UnaryOp","","",N,N],[10,"operand","","",68,[[["self"]],["box",["valuenode"]]]],[10,"compute","","",68,[[["self"],["tarval"]],["tarval"]]],[11,"unknown","libfirm_rs","",69,[[],["tarval"]]],[11,"bad","","",69,[[],["tarval"]]],[11,"bool_val","","",69,[[["bool"]],["tarval"]]],[11,"mj_int","","",69,[[["i64"]],["tarval"]]],[11,"mj_size","","used for mjrt_new",69,[[["i64"]],["tarval"]]],[11,"zero","","",69,[[["mode"]],["tarval"]]],[11,"is_zero","","",69,[[["self"]],["bool"]]],[11,"val","","",69,[[["i64"],["mode"]],["tarval"]]],[11,"is_bool_val","","",69,[[["self"],["bool"]],["bool"]]],[11,"is_long","","",69,[[["self"]],["bool"]]],[11,"is_constant","","",69,[[["self"]],["bool"]]],[11,"is_bad","","",69,[[["self"]],["bool"]]],[11,"is_unknown","","",69,[[["self"]],["bool"]]],[11,"mode","","",69,[[["self"]],["mode"]]],[11,"kind","","",69,[[["self"]],["tarvalkind"]]],[11,"cast","","",69,[[["self"],["mode"]],["option",["tarval"]]]],[11,"can_be_cast_into","","",69,[[["self"],["mode"]],["bool"]]],[11,"get_long","","",69,[[["self"]],["i64"]]],[11,"lattice_cmp","","",69,[[["self"],["type"],["self"]],["self"]]],[11,"lattice_eq","","",69,[[["self"],["tarval"]],["bool"]]],[11,"join","","",69,[[["self"],["tarval"]],["tarval"]]],[0,"types","","",N,N],[3,"PrimitiveTy","libfirm_rs::types","",N,N],[3,"MethodTy","","",N,N],[3,"ArrayTy","","",N,N],[3,"ClassTy","","",N,N],[3,"SegmentTy","","",N,N],[3,"PointerTy","","",N,N],[3,"StructTy","","",N,N],[3,"UnionTy","","",N,N],[3,"OtherTy","","",N,N],[3,"MemberIterator","","",N,N],[3,"MethodTyBuilder","","Builder for new_type_method",N,N],[4,"Ty","","",N,N],[13,"Primitive","","",70,N],[13,"Method","","",70,N],[13,"Array","","",70,N],[13,"Class","","",70,N],[13,"Segment","","",70,N],[13,"Pointer","","",70,N],[13,"Struct","","",70,N],[13,"Union","","",70,N],[13,"Other","","",70,N],[8,"TyTrait","","",N,N],[10,"ir_type","","",71,N],[11,"pointer","","",71,[[["self"]],["pointerty"]]],[11,"array","","",71,[[["self"]],["arrayty"]]],[11,"size","","",71,[[["self"]],["u32"]]],[11,"alignment","","",71,[[["self"]],["u32"]]],[11,"mode","","",71,[[["self"]],["mode"]]],[11,"from","","",72,[[["ty"]],["option"]]],[11,"from","","",73,[[["ty"]],["option"]]],[11,"from","","",74,[[["ty"]],["option"]]],[11,"from","","",75,[[["ty"]],["option"]]],[11,"from","","",76,[[["ty"]],["option"]]],[11,"from","","",77,[[["ty"]],["option"]]],[11,"from","","",78,[[["ty"]],["option"]]],[11,"from","","",79,[[["ty"]],["option"]]],[11,"from","","",80,[[["ty"]],["option"]]],[11,"from_ir_type","","",70,N],[11,"is_method","","",70,[[["self"]],["bool"]]],[11,"points_to","","",77,[[["self"]],["ty"]]],[11,"variable_length","","",74,[[["ty"]],["ty"]]],[11,"fixed_length","","",74,[[["ty"],["usize"]],["ty"]]],[11,"element_type","","",74,[[["self"]],["ty"]]],[11,"from_mode","","",72,[[["mode"]],["primitivety"]]],[11,"i32","","",72,[[],["primitivety"]]],[11,"i64","","",72,[[],["primitivety"]]],[11,"u32","","Not part of MiniJava, but useful for malloc RT-function",72,[[],["primitivety"]]],[11,"bool","","",72,[[],["primitivety"]]],[11,"ptr","","",72,[[],["primitivety"]]],[11,"new","","",75,[[["str"]],["classty"]]],[11,"default_layout","","",75,[[["self"]]]],[11,"fields","","",75,N],[11,"idx_of_field","","",75,[[["self"],["entity"]],["usize"]]],[11,"name","","",75,[[["self"]],["cstr"]]],[11,"name_string","","",75,[[["self"]],["string"]]],[11,"remove_member","","",75,[[["self"],["entity"]]]],[11,"res_count","","",73,[[["self"]],["usize"]]],[11,"single_result_ty","","",73,[[["self"]],["option",["ty"]]]],[11,"idx","","",81,[[["self"],["usize"]],["option",["entity"]]]],[11,"new","","",82,[[],["self"]]],[11,"add_param","","If the function isn't the main function don't forget to…",82,[[["self"],["ty"]]]],[11,"set_res","","",82,[[["self"],["ty"]]]],[11,"build_this_call","","",82,[[["self"]],["methodty"]]],[11,"build_no_this_call","","",82,[[["self"]],["methodty"]]],[11,"build","","",82,[[["self"],["bool"]],["methodty"]]],[11,"from","libfirm_rs","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[["self"]],["u"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,N],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"try_into","","",69,[[["self"]],["result"]]],[11,"get_type_id","","",69,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","libfirm_rs::nodes","",9,[[["t"]],["t"]]],[11,"into_iter","","",9,[[["self"]],["i"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into_iter","","",10,[[["self"]],["i"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into_iter","","",11,[[["self"]],["i"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into_iter","","",13,[[["self"]],["i"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into_iter","","",15,[[["self"]],["i"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into_iter","","",83,[[["self"]],["i"]]],[11,"into","","",83,[[["self"]],["u"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"try_into","","",83,[[["self"]],["result"]]],[11,"get_type_id","","",83,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into_iter","","",17,[[["self"]],["i"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into_iter","","",19,[[["self"]],["i"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into_iter","","",25,[[["self"]],["i"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,N],[11,"to_string","","",28,[[["self"]],["string"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,N],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[["self"]],["u"]]],[11,"to_owned","","",84,[[["self"]],["t"]]],[11,"clone_into","","",84,N],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"try_into","","",84,[[["self"]],["result"]]],[11,"get_type_id","","",84,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,N],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,N],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,N],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[["self"]],["u"]]],[11,"to_owned","","",85,[[["self"]],["t"]]],[11,"clone_into","","",85,N],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"try_into","","",85,[[["self"]],["result"]]],[11,"get_type_id","","",85,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,N],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,N],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,N],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,N],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,N],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,N],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,N],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[["self"]],["u"]]],[11,"to_owned","","",86,[[["self"]],["t"]]],[11,"clone_into","","",86,N],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"try_into","","",86,[[["self"]],["result"]]],[11,"get_type_id","","",86,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,N],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[["self"]],["u"]]],[11,"to_owned","","",87,[[["self"]],["t"]]],[11,"clone_into","","",87,N],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"try_into","","",87,[[["self"]],["result"]]],[11,"get_type_id","","",87,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,N],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,N],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,N],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,N],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,N],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,N],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,N],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,N],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,N],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,N],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"into","","",88,[[["self"]],["u"]]],[11,"to_owned","","",88,[[["self"]],["t"]]],[11,"clone_into","","",88,N],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"try_into","","",88,[[["self"]],["result"]]],[11,"get_type_id","","",88,[[["self"]],["typeid"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,N],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"into","","",89,[[["self"]],["u"]]],[11,"to_owned","","",89,[[["self"]],["t"]]],[11,"clone_into","","",89,N],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"try_into","","",89,[[["self"]],["result"]]],[11,"get_type_id","","",89,[[["self"]],["typeid"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,N],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,N],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,N],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,N],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,N],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,N],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,N],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,N],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,N],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[["self"]],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,N],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[["self"]],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,N],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[["self"]],["u"]]],[11,"to_owned","","",90,[[["self"]],["t"]]],[11,"clone_into","","",90,N],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"try_into","","",90,[[["self"]],["result"]]],[11,"get_type_id","","",90,[[["self"]],["typeid"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"into","","",91,[[["self"]],["u"]]],[11,"to_owned","","",91,[[["self"]],["t"]]],[11,"clone_into","","",91,N],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"try_into","","",91,[[["self"]],["result"]]],[11,"get_type_id","","",91,[[["self"]],["typeid"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"into","","",92,[[["self"]],["u"]]],[11,"to_owned","","",92,[[["self"]],["t"]]],[11,"clone_into","","",92,N],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"try_into","","",92,[[["self"]],["result"]]],[11,"get_type_id","","",92,[[["self"]],["typeid"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"into","","",93,[[["self"]],["u"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"try_into","","",93,[[["self"]],["result"]]],[11,"get_type_id","","",93,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","libfirm_rs::types","",72,[[["t"]],["t"]]],[11,"into","","",72,[[["self"]],["u"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,N],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"try_into","","",72,[[["self"]],["result"]]],[11,"get_type_id","","",72,[[["self"]],["typeid"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[["self"]],["u"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,N],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"try_into","","",73,[[["self"]],["result"]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[["self"]],["u"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,N],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"try_into","","",74,[[["self"]],["result"]]],[11,"get_type_id","","",74,[[["self"]],["typeid"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[["self"]],["u"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,N],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"try_into","","",75,[[["self"]],["result"]]],[11,"get_type_id","","",75,[[["self"]],["typeid"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[["self"]],["u"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,N],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"try_into","","",76,[[["self"]],["result"]]],[11,"get_type_id","","",76,[[["self"]],["typeid"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[["self"]],["u"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,N],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"try_into","","",77,[[["self"]],["result"]]],[11,"get_type_id","","",77,[[["self"]],["typeid"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[["self"]],["u"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,N],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"try_into","","",78,[[["self"]],["result"]]],[11,"get_type_id","","",78,[[["self"]],["typeid"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[["self"]],["u"]]],[11,"to_owned","","",79,[[["self"]],["t"]]],[11,"clone_into","","",79,N],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"try_into","","",79,[[["self"]],["result"]]],[11,"get_type_id","","",79,[[["self"]],["typeid"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[["self"]],["u"]]],[11,"to_owned","","",80,[[["self"]],["t"]]],[11,"clone_into","","",80,N],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"try_into","","",80,[[["self"]],["result"]]],[11,"get_type_id","","",80,[[["self"]],["typeid"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into_iter","","",81,[[["self"]],["i"]]],[11,"into","","",81,[[["self"]],["u"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"try_into","","",81,[[["self"]],["result"]]],[11,"get_type_id","","",81,[[["self"]],["typeid"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[["self"]],["u"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"try_into","","",82,[[["self"]],["result"]]],[11,"get_type_id","","",82,[[["self"]],["typeid"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[["self"]],["u"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,N],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"try_into","","",70,[[["self"]],["result"]]],[11,"get_type_id","","",70,[[["self"]],["typeid"]]],[11,"internal_ir_node","libfirm_rs::nodes","",7,N],[11,"internal_ir_node","","",30,N],[11,"internal_ir_node","","",23,N],[11,"internal_ir_node","","",84,N],[11,"internal_ir_node","","",31,N],[11,"internal_ir_node","","",32,N],[11,"internal_ir_node","","",33,N],[11,"internal_ir_node","","",85,N],[11,"internal_ir_node","","",34,N],[11,"internal_ir_node","","",16,N],[11,"internal_ir_node","","",35,N],[11,"internal_ir_node","","",24,N],[11,"internal_ir_node","","",36,N],[11,"internal_ir_node","","",22,N],[11,"internal_ir_node","","",37,N],[11,"internal_ir_node","","",38,N],[11,"internal_ir_node","","",39,N],[11,"internal_ir_node","","",40,N],[11,"internal_ir_node","","",86,N],[11,"internal_ir_node","","",41,N],[11,"internal_ir_node","","",87,N],[11,"internal_ir_node","","",12,N],[11,"internal_ir_node","","",42,N],[11,"internal_ir_node","","",43,N],[11,"internal_ir_node","","",44,N],[11,"internal_ir_node","","",45,N],[11,"internal_ir_node","","",21,N],[11,"internal_ir_node","","",46,N],[11,"internal_ir_node","","",47,N],[11,"internal_ir_node","","",48,N],[11,"internal_ir_node","","",49,N],[11,"internal_ir_node","","",50,N],[11,"internal_ir_node","","",51,N],[11,"internal_ir_node","","",52,N],[11,"internal_ir_node","","",88,N],[11,"internal_ir_node","","",53,N],[11,"internal_ir_node","","",89,N],[11,"internal_ir_node","","",54,N],[11,"internal_ir_node","","",18,N],[11,"internal_ir_node","","",55,N],[11,"internal_ir_node","","",20,N],[11,"internal_ir_node","","",56,N],[11,"internal_ir_node","","",14,N],[11,"internal_ir_node","","",27,N],[11,"internal_ir_node","","",57,N],[11,"internal_ir_node","","",58,N],[11,"internal_ir_node","","",59,N],[11,"internal_ir_node","","",26,N],[11,"internal_ir_node","","",60,N],[11,"internal_ir_node","","",61,N],[11,"internal_ir_node","","",62,N],[11,"internal_ir_node","","",63,N],[11,"internal_ir_node","","",90,N],[11,"internal_ir_node","","",91,N],[11,"internal_ir_node","","",92,N],[11,"fmt","","",20,[[["self"],["formatter"],["nodedebugopts"]],["result"]]],[11,"fmt","","",38,[[["self"],["formatter"],["nodedebugopts"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"],["nodedebugopts"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"],["nodedebugopts"]],["result"]]],[11,"fmt","","",47,[[["self"],["formatter"],["nodedebugopts"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"],["nodedebugopts"]],["result"]]],[11,"fmt","","",61,[[["self"],["formatter"],["nodedebugopts"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"],["nodedebugopts"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"],["nodedebugopts"]],["result"]]],[11,"fmt","","",84,[[["self"],["formatter"],["nodedebugopts"]],["result"]]],[11,"fmt","","",31,[[["self"],["formatter"],["nodedebugopts"]],["result"]]],[11,"fmt","","",32,[[["self"],["formatter"],["nodedebugopts"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"],["nodedebugopts"]],["result"]]],[11,"fmt","","",85,[[["self"],["formatter"],["nodedebugopts"]],["result"]]],[11,"fmt","","",34,[[["self"],["formatter"],["nodedebugopts"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"],["nodedebugopts"]],["result"]]],[11,"fmt","","",35,[[["self"],["formatter"],["nodedebugopts"]],["result"]]],[11,"fmt","","",36,[[["self"],["formatter"],["nodedebugopts"]],["result"]]],[11,"fmt","","",22,[[["self"],["formatter"],["nodedebugopts"]],["result"]]],[11,"fmt","","",37,[[["self"],["formatter"],["nodedebugopts"]],["result"]]],[11,"fmt","","",39,[[["self"],["formatter"],["nodedebugopts"]],["result"]]],[11,"fmt","","",40,[[["self"],["formatter"],["nodedebugopts"]],["result"]]],[11,"fmt","","",86,[[["self"],["formatter"],["nodedebugopts"]],["result"]]],[11,"fmt","","",41,[[["self"],["formatter"],["nodedebugopts"]],["result"]]],[11,"fmt","","",87,[[["self"],["formatter"],["nodedebugopts"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"],["nodedebugopts"]],["result"]]],[11,"fmt","","",42,[[["self"],["formatter"],["nodedebugopts"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"],["nodedebugopts"]],["result"]]],[11,"fmt","","",44,[[["self"],["formatter"],["nodedebugopts"]],["result"]]],[11,"fmt","","",45,[[["self"],["formatter"],["nodedebugopts"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"],["nodedebugopts"]],["result"]]],[11,"fmt","","",48,[[["self"],["formatter"],["nodedebugopts"]],["result"]]],[11,"fmt","","",49,[[["self"],["formatter"],["nodedebugopts"]],["result"]]],[11,"fmt","","",50,[[["self"],["formatter"],["nodedebugopts"]],["result"]]],[11,"fmt","","",51,[[["self"],["formatter"],["nodedebugopts"]],["result"]]],[11,"fmt","","",52,[[["self"],["formatter"],["nodedebugopts"]],["result"]]],[11,"fmt","","",88,[[["self"],["formatter"],["nodedebugopts"]],["result"]]],[11,"fmt","","",53,[[["self"],["formatter"],["nodedebugopts"]],["result"]]],[11,"fmt","","",89,[[["self"],["formatter"],["nodedebugopts"]],["result"]]],[11,"fmt","","",54,[[["self"],["formatter"],["nodedebugopts"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"],["nodedebugopts"]],["result"]]],[11,"fmt","","",55,[[["self"],["formatter"],["nodedebugopts"]],["result"]]],[11,"fmt","","",56,[[["self"],["formatter"],["nodedebugopts"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"],["nodedebugopts"]],["result"]]],[11,"fmt","","",27,[[["self"],["formatter"],["nodedebugopts"]],["result"]]],[11,"fmt","","",57,[[["self"],["formatter"],["nodedebugopts"]],["result"]]],[11,"fmt","","",58,[[["self"],["formatter"],["nodedebugopts"]],["result"]]],[11,"fmt","","",59,[[["self"],["formatter"],["nodedebugopts"]],["result"]]],[11,"fmt","","",26,[[["self"],["formatter"],["nodedebugopts"]],["result"]]],[11,"fmt","","",60,[[["self"],["formatter"],["nodedebugopts"]],["result"]]],[11,"fmt","","",62,[[["self"],["formatter"],["nodedebugopts"]],["result"]]],[11,"fmt","","",63,[[["self"],["formatter"],["nodedebugopts"]],["result"]]],[11,"fmt","","",90,[[["self"],["formatter"],["nodedebugopts"]],["result"]]],[11,"fmt","","",91,[[["self"],["formatter"],["nodedebugopts"]],["result"]]],[11,"fmt","","",92,[[["self"],["formatter"],["nodedebugopts"]],["result"]]],[11,"value_nodes","","",38,[[["self"]],["vec",["box"]]]],[11,"compute","","",38,[[["self"],["vec",["tarval"]]],["tarval"]]],[11,"value_nodes","","",18,[[["self"]],["vec",["box"]]]],[11,"compute","","",18,[[["self"],["vec",["tarval"]]],["tarval"]]],[11,"value_nodes","","",20,[[["self"]],["vec",["box"]]]],[11,"compute","","",20,[[["self"],["vec",["tarval"]]],["tarval"]]],[11,"value_nodes","","",23,[[["self"]],["vec",["box"]]]],[11,"compute","","",23,[[["self"],["vec",["tarval"]]],["tarval"]]],[11,"value_nodes","","",31,[[["self"]],["vec",["box"]]]],[11,"compute","","",31,[[["self"],["vec",["tarval"]]],["tarval"]]],[11,"value_nodes","","",43,[[["self"]],["vec",["box"]]]],[11,"compute","","",43,[[["self"],["vec",["tarval"]]],["tarval"]]],[11,"value_nodes","","",34,[[["self"]],["vec",["box"]]]],[11,"compute","","",34,[[["self"],["vec",["tarval"]]],["tarval"]]],[11,"value_nodes","","",24,[[["self"]],["vec",["box"]]]],[11,"compute","","",24,[[["self"],["vec",["tarval"]]],["tarval"]]],[11,"value_nodes","","",46,[[["self"]],["vec",["box"]]]],[11,"compute","","",46,[[["self"],["vec",["tarval"]]],["tarval"]]],[11,"value_nodes","","",47,[[["self"]],["vec",["box"]]]],[11,"compute","","",47,[[["self"],["vec",["tarval"]]],["tarval"]]],[11,"value_nodes","","",51,[[["self"]],["vec",["box"]]]],[11,"compute","","",51,[[["self"],["vec",["tarval"]]],["tarval"]]],[11,"value_nodes","","",89,[[["self"]],["vec",["box"]]]],[11,"compute","","",89,[[["self"],["vec",["tarval"]]],["tarval"]]],[11,"value_nodes","","",57,[[["self"]],["vec",["box"]]]],[11,"compute","","",57,[[["self"],["vec",["tarval"]]],["tarval"]]],[11,"value_nodes","","",58,[[["self"]],["vec",["box"]]]],[11,"compute","","",58,[[["self"],["vec",["tarval"]]],["tarval"]]],[11,"value_nodes","","",59,[[["self"]],["vec",["box"]]]],[11,"compute","","",59,[[["self"],["vec",["tarval"]]],["tarval"]]],[11,"value_nodes","","",26,[[["self"]],["vec",["box"]]]],[11,"compute","","",26,[[["self"],["vec",["tarval"]]],["tarval"]]],[11,"value_nodes","","",30,[[["self"]],["vec",["box"]]]],[11,"compute","","",30,[[["self"],["vec",["tarval"]]],["tarval"]]],[11,"value_nodes","","",62,[[["self"]],["vec",["box"]]]],[11,"compute","","",62,[[["self"],["vec",["tarval"]]],["tarval"]]],[11,"value_nodes","","",50,[[["self"]],["vec",["box"]]]],[11,"compute","","",50,[[["self"],["vec",["tarval"]]],["tarval"]]],[11,"value_nodes","","",41,[[["self"]],["vec",["box"]]]],[11,"compute","","",41,[[["self"],["vec",["tarval"]]],["tarval"]]],[11,"value_nodes","","",49,[[["self"]],["vec",["box"]]]],[11,"compute","","",49,[[["self"],["vec",["tarval"]]],["tarval"]]],[11,"value_nodes","","",42,[[["self"]],["vec",["box"]]]],[11,"compute","","",42,[[["self"],["vec",["tarval"]]],["tarval"]]],[11,"value_nodes","","",36,[[["self"]],["vec",["box"]]]],[11,"compute","","",36,[[["self"],["vec",["tarval"]]],["tarval"]]],[11,"value_nodes","","",48,[[["self"]],["vec",["box"]]]],[11,"compute","","",48,[[["self"],["vec",["tarval"]]],["tarval"]]],[11,"value_nodes","","",39,[[["self"]],["vec",["box"]]]],[11,"compute","","",39,[[["self"],["vec",["tarval"]]],["tarval"]]],[11,"left","","",30,[[["self"]],["box",["valuenode"]]]],[11,"right","","",30,[[["self"]],["box",["valuenode"]]]],[11,"compute","","",30,[[["self"],["tarval"],["tarval"]],["tarval"]]],[11,"left","","",62,[[["self"]],["box",["valuenode"]]]],[11,"right","","",62,[[["self"]],["box",["valuenode"]]]],[11,"compute","","",62,[[["self"],["tarval"],["tarval"]],["tarval"]]],[11,"left","","",50,[[["self"]],["box",["valuenode"]]]],[11,"right","","",50,[[["self"]],["box",["valuenode"]]]],[11,"compute","","",50,[[["self"],["tarval"],["tarval"]],["tarval"]]],[11,"left","","",41,[[["self"]],["box",["valuenode"]]]],[11,"right","","",41,[[["self"]],["box",["valuenode"]]]],[11,"compute","","",41,[[["self"],["tarval"],["tarval"]],["tarval"]]],[11,"left","","",49,[[["self"]],["box",["valuenode"]]]],[11,"right","","",49,[[["self"]],["box",["valuenode"]]]],[11,"compute","","",49,[[["self"],["tarval"],["tarval"]],["tarval"]]],[11,"left","","",42,[[["self"]],["box",["valuenode"]]]],[11,"right","","",42,[[["self"]],["box",["valuenode"]]]],[11,"compute","","",42,[[["self"],["tarval"],["tarval"]],["tarval"]]],[11,"left","","",36,[[["self"]],["box",["valuenode"]]]],[11,"right","","",36,[[["self"]],["box",["valuenode"]]]],[11,"compute","","",36,[[["self"],["tarval"],["tarval"]],["tarval"]]],[11,"operand","","",48,[[["self"]],["box",["valuenode"]]]],[11,"compute","","",48,[[["self"],["tarval"]],["tarval"]]],[11,"operand","","",39,[[["self"]],["box",["valuenode"]]]],[11,"compute","","",39,[[["self"],["tarval"]],["tarval"]]],[11,"ir_type","libfirm_rs::types","",70,N],[11,"ir_type","","",72,N],[11,"ir_type","","",73,N],[11,"ir_type","","",74,N],[11,"ir_type","","",75,N],[11,"ir_type","","",76,N],[11,"ir_type","","",77,N],[11,"ir_type","","",78,N],[11,"ir_type","","",79,N],[11,"ir_type","","",80,N],[11,"eq","libfirm_rs","",2,[[["self"],["self"]],["bool"]]],[11,"eq","","",0,[[["self"],["visittime"]],["bool"]]],[11,"eq","","",4,[[["self"],["mode"]],["bool"]]],[11,"ne","","",4,[[["self"],["mode"]],["bool"]]],[11,"eq","libfirm_rs::nodes","",7,[[["self"],["self"]],["bool"]]],[11,"eq","","",8,[[["self"],["projkind"]],["bool"]]],[11,"ne","","",8,[[["self"],["projkind"]],["bool"]]],[11,"eq","","",30,[[["self"],["add"]],["bool"]]],[11,"ne","","",30,[[["self"],["add"]],["bool"]]],[11,"eq","","",23,[[["self"],["address"]],["bool"]]],[11,"ne","","",23,[[["self"],["address"]],["bool"]]],[11,"eq","","",84,[[["self"],["align"]],["bool"]]],[11,"ne","","",84,[[["self"],["align"]],["bool"]]],[11,"eq","","",31,[[["self"],["alloc"]],["bool"]]],[11,"ne","","",31,[[["self"],["alloc"]],["bool"]]],[11,"eq","","",32,[[["self"],["anchor"]],["bool"]]],[11,"ne","","",32,[[["self"],["anchor"]],["bool"]]],[11,"eq","","",33,[[["self"],["and"]],["bool"]]],[11,"ne","","",33,[[["self"],["and"]],["bool"]]],[11,"eq","","",85,[[["self"],["bad"]],["bool"]]],[11,"ne","","",85,[[["self"],["bad"]],["bool"]]],[11,"eq","","",34,[[["self"],["bitcast"]],["bool"]]],[11,"ne","","",34,[[["self"],["bitcast"]],["bool"]]],[11,"eq","","",16,[[["self"],["block"]],["bool"]]],[11,"ne","","",16,[[["self"],["block"]],["bool"]]],[11,"eq","","",35,[[["self"],["builtin"]],["bool"]]],[11,"ne","","",35,[[["self"],["builtin"]],["bool"]]],[11,"eq","","",24,[[["self"],["call"]],["bool"]]],[11,"ne","","",24,[[["self"],["call"]],["bool"]]],[11,"eq","","",36,[[["self"],["cmp"]],["bool"]]],[11,"ne","","",36,[[["self"],["cmp"]],["bool"]]],[11,"eq","","",22,[[["self"],["cond"]],["bool"]]],[11,"ne","","",22,[[["self"],["cond"]],["bool"]]],[11,"eq","","",37,[[["self"],["confirm"]],["bool"]]],[11,"ne","","",37,[[["self"],["confirm"]],["bool"]]],[11,"eq","","",38,[[["self"],["const"]],["bool"]]],[11,"ne","","",38,[[["self"],["const"]],["bool"]]],[11,"eq","","",39,[[["self"],["conv"]],["bool"]]],[11,"ne","","",39,[[["self"],["conv"]],["bool"]]],[11,"eq","","",40,[[["self"],["copyb"]],["bool"]]],[11,"ne","","",40,[[["self"],["copyb"]],["bool"]]],[11,"eq","","",86,[[["self"],["deleted"]],["bool"]]],[11,"ne","","",86,[[["self"],["deleted"]],["bool"]]],[11,"eq","","",41,[[["self"],["div"]],["bool"]]],[11,"ne","","",41,[[["self"],["div"]],["bool"]]],[11,"eq","","",87,[[["self"],["dummy"]],["bool"]]],[11,"ne","","",87,[[["self"],["dummy"]],["bool"]]],[11,"eq","","",12,[[["self"],["end"]],["bool"]]],[11,"ne","","",12,[[["self"],["end"]],["bool"]]],[11,"eq","","",42,[[["self"],["eor"]],["bool"]]],[11,"ne","","",42,[[["self"],["eor"]],["bool"]]],[11,"eq","","",43,[[["self"],["free"]],["bool"]]],[11,"ne","","",43,[[["self"],["free"]],["bool"]]],[11,"eq","","",44,[[["self"],["ijmp"]],["bool"]]],[11,"ne","","",44,[[["self"],["ijmp"]],["bool"]]],[11,"eq","","",45,[[["self"],["id"]],["bool"]]],[11,"ne","","",45,[[["self"],["id"]],["bool"]]],[11,"eq","","",21,[[["self"],["jmp"]],["bool"]]],[11,"ne","","",21,[[["self"],["jmp"]],["bool"]]],[11,"eq","","",46,[[["self"],["load"]],["bool"]]],[11,"ne","","",46,[[["self"],["load"]],["bool"]]],[11,"eq","","",47,[[["self"],["member"]],["bool"]]],[11,"ne","","",47,[[["self"],["member"]],["bool"]]],[11,"eq","","",48,[[["self"],["minus"]],["bool"]]],[11,"ne","","",48,[[["self"],["minus"]],["bool"]]],[11,"eq","","",49,[[["self"],["mod"]],["bool"]]],[11,"ne","","",49,[[["self"],["mod"]],["bool"]]],[11,"eq","","",50,[[["self"],["mul"]],["bool"]]],[11,"ne","","",50,[[["self"],["mul"]],["bool"]]],[11,"eq","","",51,[[["self"],["mulh"]],["bool"]]],[11,"ne","","",51,[[["self"],["mulh"]],["bool"]]],[11,"eq","","",52,[[["self"],["mux"]],["bool"]]],[11,"ne","","",52,[[["self"],["mux"]],["bool"]]],[11,"eq","","",88,[[["self"],["nomem"]],["bool"]]],[11,"ne","","",88,[[["self"],["nomem"]],["bool"]]],[11,"eq","","",53,[[["self"],["not"]],["bool"]]],[11,"ne","","",53,[[["self"],["not"]],["bool"]]],[11,"eq","","",89,[[["self"],["offset"]],["bool"]]],[11,"ne","","",89,[[["self"],["offset"]],["bool"]]],[11,"eq","","",54,[[["self"],["or"]],["bool"]]],[11,"ne","","",54,[[["self"],["or"]],["bool"]]],[11,"eq","","",18,[[["self"],["phi"]],["bool"]]],[11,"ne","","",18,[[["self"],["phi"]],["bool"]]],[11,"eq","","",55,[[["self"],["pin"]],["bool"]]],[11,"ne","","",55,[[["self"],["pin"]],["bool"]]],[11,"eq","","",20,[[["self"],["proj"]],["bool"]]],[11,"ne","","",20,[[["self"],["proj"]],["bool"]]],[11,"eq","","",56,[[["self"],["raise"]],["bool"]]],[11,"ne","","",56,[[["self"],["raise"]],["bool"]]],[11,"eq","","",14,[[["self"],["return"]],["bool"]]],[11,"ne","","",14,[[["self"],["return"]],["bool"]]],[11,"eq","","",27,[[["self"],["sel"]],["bool"]]],[11,"ne","","",27,[[["self"],["sel"]],["bool"]]],[11,"eq","","",57,[[["self"],["shl"]],["bool"]]],[11,"ne","","",57,[[["self"],["shl"]],["bool"]]],[11,"eq","","",58,[[["self"],["shr"]],["bool"]]],[11,"ne","","",58,[[["self"],["shr"]],["bool"]]],[11,"eq","","",59,[[["self"],["shrs"]],["bool"]]],[11,"ne","","",59,[[["self"],["shrs"]],["bool"]]],[11,"eq","","",26,[[["self"],["size"]],["bool"]]],[11,"ne","","",26,[[["self"],["size"]],["bool"]]],[11,"eq","","",60,[[["self"],["start"]],["bool"]]],[11,"ne","","",60,[[["self"],["start"]],["bool"]]],[11,"eq","","",61,[[["self"],["store"]],["bool"]]],[11,"ne","","",61,[[["self"],["store"]],["bool"]]],[11,"eq","","",62,[[["self"],["sub"]],["bool"]]],[11,"ne","","",62,[[["self"],["sub"]],["bool"]]],[11,"eq","","",63,[[["self"],["switch"]],["bool"]]],[11,"ne","","",63,[[["self"],["switch"]],["bool"]]],[11,"eq","","",90,[[["self"],["sync"]],["bool"]]],[11,"ne","","",90,[[["self"],["sync"]],["bool"]]],[11,"eq","","",91,[[["self"],["tuple"]],["bool"]]],[11,"ne","","",91,[[["self"],["tuple"]],["bool"]]],[11,"eq","","",92,[[["self"],["unknown"]],["bool"]]],[11,"ne","","",92,[[["self"],["unknown"]],["bool"]]],[11,"eq","libfirm_rs","",1,[[["self"],["tarvalkind"]],["bool"]]],[11,"ne","","",1,[[["self"],["tarvalkind"]],["bool"]]],[11,"eq","","",69,[[["self"],["tarval"]],["bool"]]],[11,"eq","libfirm_rs::types","",70,[[["self"],["self"]],["bool"]]],[11,"eq","","",77,[[["self"],["self"]],["bool"]]],[11,"eq","","",74,[[["self"],["self"]],["bool"]]],[11,"eq","","",72,[[["self"],["self"]],["bool"]]],[11,"eq","","",75,[[["self"],["self"]],["bool"]]],[11,"from","libfirm_rs","",2,N],[11,"from","","",3,N],[11,"from","libfirm_rs::nodes","",7,[[["add"]],["node"]]],[11,"from","","",7,[[["address"]],["node"]]],[11,"from","","",7,[[["align"]],["node"]]],[11,"from","","",7,[[["alloc"]],["node"]]],[11,"from","","",7,[[["anchor"]],["node"]]],[11,"from","","",7,[[["and"]],["node"]]],[11,"from","","",7,[[["bad"]],["node"]]],[11,"from","","",7,[[["bitcast"]],["node"]]],[11,"from","","",7,[[["block"]],["node"]]],[11,"from","","",7,[[["builtin"]],["node"]]],[11,"from","","",7,[[["call"]],["node"]]],[11,"from","","",7,[[["cmp"]],["node"]]],[11,"from","","",7,[[["cond"]],["node"]]],[11,"from","","",7,[[["confirm"]],["node"]]],[11,"from","","",7,[[["const"]],["node"]]],[11,"from","","",7,[[["conv"]],["node"]]],[11,"from","","",7,[[["copyb"]],["node"]]],[11,"from","","",7,[[["deleted"]],["node"]]],[11,"from","","",7,[[["div"]],["node"]]],[11,"from","","",7,[[["dummy"]],["node"]]],[11,"from","","",7,[[["end"]],["node"]]],[11,"from","","",7,[[["eor"]],["node"]]],[11,"from","","",7,[[["free"]],["node"]]],[11,"from","","",7,[[["ijmp"]],["node"]]],[11,"from","","",7,[[["id"]],["node"]]],[11,"from","","",7,[[["jmp"]],["node"]]],[11,"from","","",7,[[["load"]],["node"]]],[11,"from","","",7,[[["member"]],["node"]]],[11,"from","","",7,[[["minus"]],["node"]]],[11,"from","","",7,[[["mod"]],["node"]]],[11,"from","","",7,[[["mul"]],["node"]]],[11,"from","","",7,[[["mulh"]],["node"]]],[11,"from","","",7,[[["mux"]],["node"]]],[11,"from","","",7,[[["nomem"]],["node"]]],[11,"from","","",7,[[["not"]],["node"]]],[11,"from","","",7,[[["offset"]],["node"]]],[11,"from","","",7,[[["or"]],["node"]]],[11,"from","","",7,[[["phi"]],["node"]]],[11,"from","","",7,[[["pin"]],["node"]]],[11,"from","","",7,[[["proj"]],["node"]]],[11,"from","","",7,[[["raise"]],["node"]]],[11,"from","","",7,[[["return"]],["node"]]],[11,"from","","",7,[[["sel"]],["node"]]],[11,"from","","",7,[[["shl"]],["node"]]],[11,"from","","",7,[[["shr"]],["node"]]],[11,"from","","",7,[[["shrs"]],["node"]]],[11,"from","","",7,[[["size"]],["node"]]],[11,"from","","",7,[[["start"]],["node"]]],[11,"from","","",7,[[["store"]],["node"]]],[11,"from","","",7,[[["sub"]],["node"]]],[11,"from","","",7,[[["switch"]],["node"]]],[11,"from","","",7,[[["sync"]],["node"]]],[11,"from","","",7,[[["tuple"]],["node"]]],[11,"from","","",7,[[["unknown"]],["node"]]],[11,"from","","",7,[[["box",["valuenode"]]],["node"]]],[11,"from","","",7,[[["box"]],["node"]]],[11,"from","","",7,[[["valuenode"]],["node"]]],[11,"from","libfirm_rs","",69,N],[11,"from","libfirm_rs::types","",70,[[["primitivety"]],["ty"]]],[11,"from","","",70,[[["methodty"]],["ty"]]],[11,"from","","",70,[[["arrayty"]],["ty"]]],[11,"from","","",70,[[["classty"]],["ty"]]],[11,"from","","",70,[[["segmentty"]],["ty"]]],[11,"from","","",70,[[["pointerty"]],["ty"]]],[11,"from","","",70,[[["structty"]],["ty"]]],[11,"from","","",70,[[["unionty"]],["ty"]]],[11,"from","","",70,[[["otherty"]],["ty"]]],[11,"clone","libfirm_rs","",2,[[["self"]],["entity"]]],[11,"clone","","",3,[[["self"]],["graph"]]],[11,"clone","","",4,[[["self"]],["mode"]]],[11,"clone","libfirm_rs::nodes","",5,[[["self"]],["nodedebugopts"]]],[11,"clone","","",28,[[["self"]],["nodedebugfmt"]]],[11,"clone","","",7,[[["self"]],["node"]]],[11,"clone","","",8,[[["self"]],["projkind"]]],[11,"clone","","",30,[[["self"]],["add"]]],[11,"clone","","",23,[[["self"]],["address"]]],[11,"clone","","",84,[[["self"]],["align"]]],[11,"clone","","",31,[[["self"]],["alloc"]]],[11,"clone","","",32,[[["self"]],["anchor"]]],[11,"clone","","",33,[[["self"]],["and"]]],[11,"clone","","",85,[[["self"]],["bad"]]],[11,"clone","","",34,[[["self"]],["bitcast"]]],[11,"clone","","",16,[[["self"]],["block"]]],[11,"clone","","",35,[[["self"]],["builtin"]]],[11,"clone","","",24,[[["self"]],["call"]]],[11,"clone","","",36,[[["self"]],["cmp"]]],[11,"clone","","",22,[[["self"]],["cond"]]],[11,"clone","","",37,[[["self"]],["confirm"]]],[11,"clone","","",38,[[["self"]],["const"]]],[11,"clone","","",39,[[["self"]],["conv"]]],[11,"clone","","",40,[[["self"]],["copyb"]]],[11,"clone","","",86,[[["self"]],["deleted"]]],[11,"clone","","",41,[[["self"]],["div"]]],[11,"clone","","",87,[[["self"]],["dummy"]]],[11,"clone","","",12,[[["self"]],["end"]]],[11,"clone","","",42,[[["self"]],["eor"]]],[11,"clone","","",43,[[["self"]],["free"]]],[11,"clone","","",44,[[["self"]],["ijmp"]]],[11,"clone","","",45,[[["self"]],["id"]]],[11,"clone","","",21,[[["self"]],["jmp"]]],[11,"clone","","",46,[[["self"]],["load"]]],[11,"clone","","",47,[[["self"]],["member"]]],[11,"clone","","",48,[[["self"]],["minus"]]],[11,"clone","","",49,[[["self"]],["mod"]]],[11,"clone","","",50,[[["self"]],["mul"]]],[11,"clone","","",51,[[["self"]],["mulh"]]],[11,"clone","","",52,[[["self"]],["mux"]]],[11,"clone","","",88,[[["self"]],["nomem"]]],[11,"clone","","",53,[[["self"]],["not"]]],[11,"clone","","",89,[[["self"]],["offset"]]],[11,"clone","","",54,[[["self"]],["or"]]],[11,"clone","","",18,[[["self"]],["phi"]]],[11,"clone","","",55,[[["self"]],["pin"]]],[11,"clone","","",20,[[["self"]],["proj"]]],[11,"clone","","",56,[[["self"]],["raise"]]],[11,"clone","","",14,[[["self"]],["return"]]],[11,"clone","","",27,[[["self"]],["sel"]]],[11,"clone","","",57,[[["self"]],["shl"]]],[11,"clone","","",58,[[["self"]],["shr"]]],[11,"clone","","",59,[[["self"]],["shrs"]]],[11,"clone","","",26,[[["self"]],["size"]]],[11,"clone","","",60,[[["self"]],["start"]]],[11,"clone","","",61,[[["self"]],["store"]]],[11,"clone","","",62,[[["self"]],["sub"]]],[11,"clone","","",63,[[["self"]],["switch"]]],[11,"clone","","",90,[[["self"]],["sync"]]],[11,"clone","","",91,[[["self"]],["tuple"]]],[11,"clone","","",92,[[["self"]],["unknown"]]],[11,"clone","libfirm_rs","",69,[[["self"]],["tarval"]]],[11,"clone","","",1,[[["self"]],["tarvalkind"]]],[11,"clone","libfirm_rs::types","",70,[[["self"]],["ty"]]],[11,"clone","","",72,[[["self"]],["primitivety"]]],[11,"clone","","",73,[[["self"]],["methodty"]]],[11,"clone","","",74,[[["self"]],["arrayty"]]],[11,"clone","","",75,[[["self"]],["classty"]]],[11,"clone","","",76,[[["self"]],["segmentty"]]],[11,"clone","","",77,[[["self"]],["pointerty"]]],[11,"clone","","",78,[[["self"]],["structty"]]],[11,"clone","","",79,[[["self"]],["unionty"]]],[11,"clone","","",80,[[["self"]],["otherty"]]],[11,"into","libfirm_rs","",3,N],[11,"into","","",3,N],[11,"into","","",69,N],[11,"len","libfirm_rs::nodes","",9,[[["self"]],["usize"]]],[11,"len","","",10,[[["self"]],["usize"]]],[11,"len","","",11,[[["self"]],["usize"]]],[11,"len","","",13,[[["self"]],["usize"]]],[11,"len","","",15,[[["self"]],["usize"]]],[11,"len","","",17,[[["self"]],["usize"]]],[11,"len","","",19,[[["self"]],["usize"]]],[11,"len","","",25,[[["self"]],["usize"]]],[11,"len","libfirm_rs::types","",81,[[["self"]],["usize"]]],[11,"next","libfirm_rs::nodes","",9,[[["self"]],["option",["node"]]]],[11,"next","","",10,[[["self"]],["option",["node"]]]],[11,"next","","",11,[[["self"]],["option"]]],[11,"next","","",13,[[["self"]],["option",["node"]]]],[11,"next","","",15,[[["self"]],["option",["node"]]]],[11,"next","","",83,[[["self"]],["option",["phi"]]]],[11,"next","","",17,[[["self"]],["option",["node"]]]],[11,"next","","",19,[[["self"]],["option",["node"]]]],[11,"next","","",25,[[["self"]],["option",["node"]]]],[11,"next","libfirm_rs::types","",81,[[["self"]],["option",["entity"]]]],[11,"default","","",82,[[],["methodtybuilder"]]],[11,"fmt","libfirm_rs::nodes","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","libfirm_rs","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","libfirm_rs::nodes","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",84,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",85,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",86,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",87,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",50,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",52,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",88,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",53,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",89,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",54,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",55,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",56,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",57,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",58,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",59,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",60,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",61,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",62,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",63,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",90,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",91,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",92,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",93,[[["self"],["formatter"]],["result"]]],[11,"fmt","libfirm_rs","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",69,[[["self"],["formatter"]],["result"]]],[11,"fmt","libfirm_rs::types","",70,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",73,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",76,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",78,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",79,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",80,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",77,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",74,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",72,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",75,[[["self"],["formatter"]],["result"]]],[11,"rem","libfirm_rs","",69,[[["self"],["tarval"]],["tarval"]]],[11,"div","","",69,[[["self"],["tarval"]],["tarval"]]],[11,"add","","",69,[[["self"],["tarval"]],["tarval"]]],[11,"sub","","",69,[[["self"],["tarval"]],["tarval"]]],[11,"mul","","",69,[[["self"],["tarval"]],["tarval"]]],[11,"neg","","",69,[[["self"]],["tarval"]]],[11,"bitxor","","",69,[[["self"],["tarval"]],["tarval"]]],[11,"hash","","",2,[[["self"],["h"]]]],[11,"hash","","",4,N],[11,"hash","libfirm_rs::nodes","",7,[[["self"],["h"]]]],[11,"hash","","",30,N],[11,"hash","","",23,N],[11,"hash","","",84,N],[11,"hash","","",31,N],[11,"hash","","",32,N],[11,"hash","","",33,N],[11,"hash","","",85,N],[11,"hash","","",34,N],[11,"hash","","",16,N],[11,"hash","","",35,N],[11,"hash","","",24,N],[11,"hash","","",36,N],[11,"hash","","",22,N],[11,"hash","","",37,N],[11,"hash","","",38,N],[11,"hash","","",39,N],[11,"hash","","",40,N],[11,"hash","","",86,N],[11,"hash","","",41,N],[11,"hash","","",87,N],[11,"hash","","",12,N],[11,"hash","","",42,N],[11,"hash","","",43,N],[11,"hash","","",44,N],[11,"hash","","",45,N],[11,"hash","","",21,N],[11,"hash","","",46,N],[11,"hash","","",47,N],[11,"hash","","",48,N],[11,"hash","","",49,N],[11,"hash","","",50,N],[11,"hash","","",51,N],[11,"hash","","",52,N],[11,"hash","","",88,N],[11,"hash","","",53,N],[11,"hash","","",89,N],[11,"hash","","",54,N],[11,"hash","","",18,N],[11,"hash","","",55,N],[11,"hash","","",20,N],[11,"hash","","",56,N],[11,"hash","","",14,N],[11,"hash","","",27,N],[11,"hash","","",57,N],[11,"hash","","",58,N],[11,"hash","","",59,N],[11,"hash","","",26,N],[11,"hash","","",60,N],[11,"hash","","",61,N],[11,"hash","","",62,N],[11,"hash","","",63,N],[11,"hash","","",90,N],[11,"hash","","",91,N],[11,"hash","","",92,N],[11,"hash","libfirm_rs","",1,N],[11,"as_node","libfirm_rs::nodes","",64,[[["self"]],["node"]]],[11,"keep_alive","","",64,[[["self"]]]],[11,"mode","","",64,[[["self"]],["mode"]]],[11,"block","","",64,[[["self"]],["block"]]],[11,"set_block","","",64,[[["self"],["block"]]]],[11,"out_nodes","","",64,[[["self"]],["outnodeiterator"]]],[11,"out_nodes_ex","","",64,[[["self"]],["outnodeexiterator"]]],[11,"all_out_projs","","",64,[[["self"]],["vec",["proj"]]]],[11,"collect_all_out_projs","","",64,[[["self"],["vec"]]]],[11,"in_nodes","","",64,[[["self"]],["innodeiterator"]]],[11,"set_input_at","","",64,[[["self"],["i32"],["node"]]]],[11,"set_in_nodes","","",64,N],[11,"node_id","","",64,[[["self"]],["i64"]]],[11,"is_pinned","","",64,[[["self"]],["bool"]]],[11,"is_commutative","","",64,[[["self"]],["bool"]]],[11,"is_only_valid_in_start_block","","",64,[[["self"]],["bool"]]],[11,"graph","","",64,[[["self"]],["graph"]]],[11,"walk","","libifrm irg_walk wrapper",64,[[["self"],["f"]]]],[11,"walk_dfs_in_block_stop_at_phi_node","","Perform a DFS over all nodes within `block` starting at…",64,[[["self"],["block"],["callback"]]]],[11,"debug_fmt","","",65,[[["self"]],["nodedebugfmt"]]]],"paths":[[4,"VisitTime"],[4,"TarvalKind"],[3,"Entity"],[3,"Graph"],[3,"Mode"],[3,"NodeDebugOpts"],[4,"NewKind"],[4,"Node"],[4,"ProjKind"],[3,"InNodeIterator"],[3,"OutNodeIterator"],[3,"OutNodeExIterator"],[3,"End"],[3,"EndKeepAliveIterator"],[3,"Return"],[3,"ReturnResIterator"],[3,"Block"],[3,"CfgPredsIterator"],[3,"Phi"],[3,"PhiPredsIterator"],[3,"Proj"],[3,"Jmp"],[3,"Cond"],[3,"Address"],[3,"Call"],[3,"CallArgsIterator"],[3,"Size"],[3,"Sel"],[3,"NodeDebugFmt"],[3,"NodeFactory"],[3,"Add"],[3,"Alloc"],[3,"Anchor"],[3,"And"],[3,"Bitcast"],[3,"Builtin"],[3,"Cmp"],[3,"Confirm"],[3,"Const"],[3,"Conv"],[3,"CopyB"],[3,"Div"],[3,"Eor"],[3,"Free"],[3,"IJmp"],[3,"Id"],[3,"Load"],[3,"Member"],[3,"Minus"],[3,"Mod"],[3,"Mul"],[3,"Mulh"],[3,"Mux"],[3,"Not"],[3,"Or"],[3,"Pin"],[3,"Raise"],[3,"Shl"],[3,"Shr"],[3,"Shrs"],[3,"Start"],[3,"Store"],[3,"Sub"],[3,"Switch"],[8,"NodeTrait"],[8,"NodeDebug"],[8,"ValueNode"],[8,"BinOp"],[8,"UnaryOp"],[3,"Tarval"],[4,"Ty"],[8,"TyTrait"],[3,"PrimitiveTy"],[3,"MethodTy"],[3,"ArrayTy"],[3,"ClassTy"],[3,"SegmentTy"],[3,"PointerTy"],[3,"StructTy"],[3,"UnionTy"],[3,"OtherTy"],[3,"MemberIterator"],[3,"MethodTyBuilder"],[3,"PhisOfBlockLinkedListIterator"],[3,"Align"],[3,"Bad"],[3,"Deleted"],[3,"Dummy"],[3,"NoMem"],[3,"Offset"],[3,"Sync"],[3,"Tuple"],[3,"Unknown"],[3,"DowncastErr"]]};
searchIndex["libfirm_rs_bindings"]={"doc":"","items":[[3,"dbg_info","libfirm_rs_bindings","",N,N],[3,"type_dbg_info","","",N,N],[3,"ir_node","","",N,N],[3,"ir_op","","",N,N],[3,"ir_mode","","",N,N],[3,"ir_edge_t","","",N,N],[3,"ir_heights_t","","",N,N],[3,"ir_tarval","","",N,N],[3,"ir_type","","",N,N],[3,"ir_graph","","",N,N],[3,"ir_prog","","",N,N],[3,"ir_loop","","",N,N],[3,"ir_entity","","",N,N],[3,"ir_cdep","","",N,N],[3,"ir_initializer_t","","",N,N],[3,"ir_machine_triple_t","","",N,N],[3,"ir_switch_table","","",N,N],[3,"ir_asm_constraint","","",N,N],[12,"in_pos","","",0,N],[12,"out_pos","","",0,N],[12,"constraint","","",0,N],[12,"mode","","",0,N],[3,"hook_entry","","",N,N],[3,"__fsid_t","","",N,N],[12,"__val","","",1,N],[3,"__mbstate_t","","",N,N],[12,"__count","","",2,N],[12,"__value","","",2,N],[3,"_G_fpos_t","","",N,N],[12,"__pos","","",3,N],[12,"__state","","",3,N],[3,"_G_fpos64_t","","",N,N],[12,"__pos","","",4,N],[12,"__state","","",4,N],[3,"_IO_jump_t","","",N,N],[3,"_IO_marker","","",N,N],[12,"_next","","",5,N],[12,"_sbuf","","",5,N],[12,"_pos","","",5,N],[3,"_IO_FILE","","",N,N],[12,"_flags","","",6,N],[12,"_IO_read_ptr","","",6,N],[12,"_IO_read_end","","",6,N],[12,"_IO_read_base","","",6,N],[12,"_IO_write_base","","",6,N],[12,"_IO_write_ptr","","",6,N],[12,"_IO_write_end","","",6,N],[12,"_IO_buf_base","","",6,N],[12,"_IO_buf_end","","",6,N],[12,"_IO_save_base","","",6,N],[12,"_IO_backup_base","","",6,N],[12,"_IO_save_end","","",6,N],[12,"_markers","","",6,N],[12,"_chain","","",6,N],[12,"_fileno","","",6,N],[12,"_flags2","","",6,N],[12,"_old_offset","","",6,N],[12,"_cur_column","","",6,N],[12,"_vtable_offset","","",6,N],[12,"_shortbuf","","",6,N],[12,"_lock","","",6,N],[12,"_offset","","",6,N],[12,"__pad1","","",6,N],[12,"__pad2","","",6,N],[12,"__pad3","","",6,N],[12,"__pad4","","",6,N],[12,"__pad5","","",6,N],[12,"_mode","","",6,N],[12,"_unused2","","",6,N],[3,"_IO_FILE_plus","","",N,N],[3,"src_loc_t","","",N,N],[12,"file","","",7,N],[12,"line","","",7,N],[12,"column","","",7,N],[3,"obstack","","",N,N],[3,"i_call_record","","",N,N],[12,"kind","","",8,N],[12,"i_ent","","",8,N],[12,"i_mapper","","",8,N],[3,"i_instr_record","","",N,N],[12,"kind","","",9,N],[12,"op","","",9,N],[12,"i_mapper","","",9,N],[3,"ir_intrinsics_map","","",N,N],[3,"ir_platform_define_t","","",N,N],[3,"ir_timer_t","","",N,N],[3,"vrp_attr","","",N,N],[12,"bits_set","","",10,N],[12,"bits_not_set","","",10,N],[12,"range_type","","",10,N],[12,"range_bottom","","",10,N],[12,"range_top","","",10,N],[3,"__va_list_tag","","",N,N],[12,"gp_offset","","",11,N],[12,"fp_offset","","",11,N],[12,"overflow_arg_area","","",11,N],[12,"reg_save_area","","",11,N],[19,"__mbstate_t__bindgen_ty_1","","",N,N],[12,"__wch","","",12,N],[12,"__wchb","","",12,N],[19,"loop_element","","",N,N],[12,"kind","","",13,N],[12,"node","","",13,N],[12,"son","","",13,N],[12,"irg","","",13,N],[19,"i_record","","",N,N],[12,"kind","","",14,N],[12,"i_call","","",14,N],[12,"i_instr","","",14,N],[5,"abort","","",N,[[]]],[5,"get_entity_visibility","","",N,N],[5,"set_entity_visibility","","",N,N],[5,"entity_is_externally_visible","","",N,N],[5,"entity_has_definition","","",N,N],[5,"new_entity","","",N,N],[5,"new_global_entity","","",N,N],[5,"new_parameter_entity","","",N,N],[5,"new_alias_entity","","",N,N],[5,"set_entity_alias","","",N,N],[5,"get_entity_alias","","",N,N],[5,"check_entity","","",N,N],[5,"clone_entity","","",N,N],[5,"free_entity","","",N,N],[5,"get_entity_name","","",N,N],[5,"get_entity_ident","","",N,N],[5,"set_entity_ident","","",N,N],[5,"get_entity_ld_ident","","",N,N],[5,"set_entity_ld_ident","","",N,N],[5,"get_entity_ld_name","","",N,N],[5,"entity_has_ld_ident","","",N,N],[5,"get_entity_owner","","",N,N],[5,"set_entity_owner","","",N,N],[5,"get_entity_type","","",N,N],[5,"set_entity_type","","",N,N],[5,"get_entity_linkage","","",N,N],[5,"set_entity_linkage","","",N,N],[5,"add_entity_linkage","","",N,N],[5,"remove_entity_linkage","","",N,N],[5,"get_entity_volatility","","",N,N],[5,"set_entity_volatility","","",N,N],[5,"get_volatility_name","","",N,N],[5,"get_entity_alignment","","",N,N],[5,"set_entity_alignment","","",N,N],[5,"get_entity_aligned","","",N,N],[5,"set_entity_aligned","","",N,N],[5,"get_align_name","","",N,N],[5,"get_entity_offset","","",N,N],[5,"set_entity_offset","","",N,N],[5,"get_entity_bitfield_offset","","",N,N],[5,"set_entity_bitfield_offset","","",N,N],[5,"set_entity_bitfield_size","","",N,N],[5,"get_entity_bitfield_size","","",N,N],[5,"get_entity_link","","",N,N],[5,"set_entity_link","","",N,N],[5,"get_entity_irg","","",N,N],[5,"get_entity_linktime_irg","","",N,N],[5,"get_entity_vtable_number","","",N,N],[5,"set_entity_vtable_number","","",N,N],[5,"set_entity_label","","",N,N],[5,"get_entity_label","","",N,N],[5,"get_entity_usage","","",N,N],[5,"set_entity_usage","","",N,N],[5,"get_entity_dbg_info","","",N,N],[5,"set_entity_dbg_info","","",N,N],[5,"is_parameter_entity","","",N,N],[5,"get_entity_parameter_number","","",N,N],[5,"set_entity_parameter_number","","",N,N],[5,"get_initializer_kind","","",N,N],[5,"get_initializer_kind_name","","",N,N],[5,"get_initializer_null","","",N,N],[5,"create_initializer_const","","",N,N],[5,"create_initializer_tarval","","",N,N],[5,"get_initializer_const_value","","",N,N],[5,"get_initializer_tarval_value","","",N,N],[5,"create_initializer_compound","","",N,N],[5,"get_initializer_compound_n_entries","","",N,N],[5,"set_initializer_compound_value","","",N,N],[5,"get_initializer_compound_value","","",N,N],[5,"set_entity_initializer","","",N,N],[5,"get_entity_initializer","","",N,N],[5,"add_entity_overwrites","","",N,N],[5,"get_entity_n_overwrites","","",N,N],[5,"get_entity_overwrites_index","","",N,N],[5,"get_entity_overwrites","","",N,N],[5,"set_entity_overwrites","","",N,N],[5,"remove_entity_overwrites","","",N,N],[5,"get_entity_n_overwrittenby","","",N,N],[5,"get_entity_overwrittenby_index","","",N,N],[5,"get_entity_overwrittenby","","",N,N],[5,"set_entity_overwrittenby","","",N,N],[5,"remove_entity_overwrittenby","","",N,N],[5,"is_compound_entity","","",N,N],[5,"is_method_entity","","",N,N],[5,"is_alias_entity","","",N,N],[5,"get_entity_nr","","",N,N],[5,"get_entity_visited","","",N,N],[5,"set_entity_visited","","",N,N],[5,"mark_entity_visited","","",N,N],[5,"entity_visited","","",N,N],[5,"entity_not_visited","","",N,N],[5,"entity_has_additional_properties","","",N,N],[5,"get_entity_additional_properties","","",N,N],[5,"set_entity_additional_properties","","",N,N],[5,"add_entity_additional_properties","","",N,N],[5,"get_unknown_entity","","",N,N],[5,"is_unknown_entity","","",N,N],[5,"get_type_opcode_name","","",N,N],[5,"is_SubClass_of","","",N,N],[5,"is_SubClass_ptr_of","","",N,N],[5,"is_overwritten_by","","",N,N],[5,"resolve_ent_polymorphy","","",N,N],[5,"set_irp_inh_transitive_closure_state","","",N,N],[5,"invalidate_irp_inh_transitive_closure_state","","",N,N],[5,"get_irp_inh_transitive_closure_state","","",N,N],[5,"compute_inh_transitive_closure","","",N,N],[5,"free_inh_transitive_closure","","",N,N],[5,"get_class_trans_subtype_first","","",N,N],[5,"get_class_trans_subtype_next","","",N,N],[5,"is_class_trans_subtype","","",N,N],[5,"get_class_trans_supertype_first","","",N,N],[5,"get_class_trans_supertype_next","","",N,N],[5,"get_entity_trans_overwrittenby_first","","",N,N],[5,"get_entity_trans_overwrittenby_next","","",N,N],[5,"get_entity_trans_overwrites_first","","",N,N],[5,"get_entity_trans_overwrites_next","","",N,N],[5,"check_type","","",N,N],[5,"tr_verify","","",N,N],[5,"free_type","","",N,N],[5,"get_type_opcode","","",N,N],[5,"ir_print_type","","",N,N],[5,"get_type_state_name","","",N,N],[5,"get_type_state","","",N,N],[5,"set_type_state","","",N,N],[5,"get_type_mode","","",N,N],[5,"get_type_size","","",N,N],[5,"set_type_size","","",N,N],[5,"get_type_alignment","","",N,N],[5,"set_type_alignment","","",N,N],[5,"get_type_visited","","",N,N],[5,"set_type_visited","","",N,N],[5,"mark_type_visited","","",N,N],[5,"type_visited","","",N,N],[5,"get_type_link","","",N,N],[5,"set_type_link","","",N,N],[5,"inc_master_type_visited","","",N,N],[5,"set_master_type_visited","","",N,N],[5,"get_master_type_visited","","",N,N],[5,"set_type_dbg_info","","",N,N],[5,"get_type_dbg_info","","",N,N],[5,"get_type_nr","","",N,N],[5,"new_type_class","","",N,N],[5,"get_class_n_members","","",N,N],[5,"get_class_member","","",N,N],[5,"get_class_member_index","","",N,N],[5,"add_class_subtype","","",N,N],[5,"get_class_n_subtypes","","",N,N],[5,"get_class_subtype","","",N,N],[5,"get_class_subtype_index","","",N,N],[5,"set_class_subtype","","",N,N],[5,"remove_class_subtype","","",N,N],[5,"add_class_supertype","","",N,N],[5,"get_class_n_supertypes","","",N,N],[5,"get_class_supertype_index","","",N,N],[5,"get_class_supertype","","",N,N],[5,"set_class_supertype","","",N,N],[5,"remove_class_supertype","","",N,N],[5,"is_Class_type","","",N,N],[5,"new_type_struct","","",N,N],[5,"get_struct_n_members","","",N,N],[5,"get_struct_member","","",N,N],[5,"get_struct_member_index","","",N,N],[5,"is_Struct_type","","",N,N],[5,"new_type_union","","",N,N],[5,"get_union_n_members","","",N,N],[5,"get_union_member","","",N,N],[5,"get_union_member_index","","",N,N],[5,"is_Union_type","","",N,N],[5,"new_type_method","","",N,N],[5,"get_method_n_params","","",N,N],[5,"get_method_param_type","","",N,N],[5,"set_method_param_type","","",N,N],[5,"get_method_n_ress","","",N,N],[5,"get_method_res_type","","",N,N],[5,"set_method_res_type","","",N,N],[5,"is_method_variadic","","",N,N],[5,"get_method_additional_properties","","",N,N],[5,"get_method_calling_convention","","",N,N],[5,"get_method_n_regparams","","",N,N],[5,"is_Method_type","","",N,N],[5,"new_type_array","","",N,N],[5,"get_array_size","","",N,N],[5,"get_array_element_type","","",N,N],[5,"is_Array_type","","",N,N],[5,"new_type_pointer","","",N,N],[5,"set_pointer_points_to_type","","",N,N],[5,"get_pointer_points_to_type","","",N,N],[5,"is_Pointer_type","","",N,N],[5,"new_type_primitive","","",N,N],[5,"is_Primitive_type","","",N,N],[5,"get_code_type","","",N,N],[5,"is_code_type","","",N,N],[5,"get_unknown_type","","",N,N],[5,"is_unknown_type","","",N,N],[5,"is_atomic_type","","",N,N],[5,"get_compound_ident","","",N,N],[5,"get_compound_name","","",N,N],[5,"get_compound_n_members","","",N,N],[5,"get_compound_member","","",N,N],[5,"get_compound_member_index","","",N,N],[5,"remove_compound_member","","",N,N],[5,"default_layout_compound_type","","",N,N],[5,"is_compound_type","","",N,N],[5,"new_type_frame","","",N,N],[5,"is_frame_type","","",N,N],[5,"clone_frame_type","","",N,N],[5,"is_segment_type","","",N,N],[5,"type_walk","","",N,N],[5,"type_walk_irg","","",N,N],[5,"type_walk_super2sub","","",N,N],[5,"type_walk_super","","",N,N],[5,"class_walk_super2sub","","",N,N],[5,"walk_types_entities","","",N,N],[5,"get_method_param_access","","",N,N],[5,"analyze_irg_args","","",N,N],[5,"get_method_param_weight","","",N,N],[5,"analyze_irg_args_weight","","",N,N],[7,"_IO_2_1_stdin_","","",N,N],[7,"_IO_2_1_stdout_","","",N,N],[7,"_IO_2_1_stderr_","","",N,N],[5,"__underflow","","",N,N],[5,"__uflow","","",N,N],[5,"__overflow","","",N,N],[5,"_IO_getc","","",N,N],[5,"_IO_putc","","",N,N],[5,"_IO_feof","","",N,N],[5,"_IO_ferror","","",N,N],[5,"_IO_peekc_locked","","",N,N],[5,"_IO_flockfile","","",N,N],[5,"_IO_funlockfile","","",N,N],[5,"_IO_ftrylockfile","","",N,N],[5,"_IO_vfscanf","","",N,N],[5,"_IO_vfprintf","","",N,N],[5,"_IO_padn","","",N,N],[5,"_IO_sgetn","","",N,N],[5,"_IO_seekoff","","",N,N],[5,"_IO_seekpos","","",N,N],[5,"_IO_free_backup_area","","",N,N],[7,"stdin","","",N,N],[7,"stdout","","",N,N],[7,"stderr","","",N,N],[5,"remove","","",N,N],[5,"rename","","",N,N],[5,"renameat","","",N,N],[5,"tmpfile","","",N,N],[5,"tmpnam","","",N,N],[5,"tmpnam_r","","",N,N],[5,"tempnam","","",N,N],[5,"fclose","","",N,N],[5,"fflush","","",N,N],[5,"fflush_unlocked","","",N,N],[5,"fopen","","",N,N],[5,"freopen","","",N,N],[5,"fdopen","","",N,N],[5,"fmemopen","","",N,N],[5,"open_memstream","","",N,N],[5,"setbuf","","",N,N],[5,"setvbuf","","",N,N],[5,"setbuffer","","",N,N],[5,"setlinebuf","","",N,N],[5,"fprintf","","",N,N],[5,"printf","","",N,N],[5,"sprintf","","",N,N],[5,"vfprintf","","",N,N],[5,"vprintf","","",N,N],[5,"vsprintf","","",N,N],[5,"snprintf","","",N,N],[5,"vsnprintf","","",N,N],[5,"vdprintf","","",N,N],[5,"dprintf","","",N,N],[5,"fscanf","","",N,N],[5,"scanf","","",N,N],[5,"sscanf","","",N,N],[5,"fscanf1","","",N,N],[5,"scanf1","","",N,N],[5,"sscanf1","","",N,N],[5,"vfscanf","","",N,N],[5,"vscanf","","",N,N],[5,"vsscanf","","",N,N],[5,"vfscanf1","","",N,N],[5,"vscanf1","","",N,N],[5,"vsscanf1","","",N,N],[5,"fgetc","","",N,N],[5,"getc","","",N,N],[5,"getchar","","",N,N],[5,"getc_unlocked","","",N,N],[5,"getchar_unlocked","","",N,N],[5,"fgetc_unlocked","","",N,N],[5,"fputc","","",N,N],[5,"putc","","",N,N],[5,"putchar","","",N,N],[5,"fputc_unlocked","","",N,N],[5,"putc_unlocked","","",N,N],[5,"putchar_unlocked","","",N,N],[5,"getw","","",N,N],[5,"putw","","",N,N],[5,"fgets","","",N,N],[5,"__getdelim","","",N,N],[5,"getdelim","","",N,N],[5,"getline","","",N,N],[5,"fputs","","",N,N],[5,"puts","","",N,N],[5,"ungetc","","",N,N],[5,"fread","","",N,N],[5,"fwrite","","",N,N],[5,"fread_unlocked","","",N,N],[5,"fwrite_unlocked","","",N,N],[5,"fseek","","",N,N],[5,"ftell","","",N,N],[5,"rewind","","",N,N],[5,"fseeko","","",N,N],[5,"ftello","","",N,N],[5,"fgetpos","","",N,N],[5,"fsetpos","","",N,N],[5,"clearerr","","",N,N],[5,"feof","","",N,N],[5,"ferror","","",N,N],[5,"clearerr_unlocked","","",N,N],[5,"feof_unlocked","","",N,N],[5,"ferror_unlocked","","",N,N],[5,"perror","","",N,N],[7,"sys_nerr","","",N,N],[7,"sys_errlist","","",N,N],[5,"fileno","","",N,N],[5,"fileno_unlocked","","",N,N],[5,"popen","","",N,N],[5,"pclose","","",N,N],[5,"ctermid","","",N,N],[5,"flockfile","","",N,N],[5,"ftrylockfile","","",N,N],[5,"funlockfile","","",N,N],[5,"optimize_cf","","",N,N],[5,"opt_jumpthreading","","",N,N],[5,"opt_bool","","",N,N],[5,"conv_opt","","",N,N],[5,"optimize_funccalls","","",N,N],[5,"do_gvn_pre","","",N,N],[5,"opt_if_conv","","",N,N],[5,"opt_if_conv_cb","","",N,N],[5,"opt_parallelize_mem","","",N,N],[5,"can_replace_load_by_const","","",N,N],[5,"optimize_load_store","","",N,N],[5,"combine_memops","","",N,N],[5,"opt_ldst","","",N,N],[5,"opt_frame_irg","","",N,N],[5,"opt_osr","","",N,N],[5,"remove_phi_cycles","","",N,N],[5,"proc_cloning","","",N,N],[5,"optimize_reassociation","","",N,N],[5,"normalize_one_return","","",N,N],[5,"normalize_n_returns","","",N,N],[5,"scalar_replacement_opt","","",N,N],[5,"opt_tail_rec_irg","","",N,N],[5,"combo","","",N,N],[5,"inline_functions","","",N,N],[5,"shape_blocks","","",N,N],[5,"do_loop_inversion","","",N,N],[5,"do_loop_unrolling","","",N,N],[5,"do_loop_peeling","","",N,N],[5,"garbage_collect_entities","","",N,N],[5,"dead_node_elimination","","",N,N],[5,"place_code","","",N,N],[5,"occult_consts","","",N,N],[5,"value_not_null","","",N,N],[5,"computed_value_Cmp_Confirm","","",N,N],[5,"create_compilerlib_entity","","",N,N],[5,"new_int_mode","","",N,N],[5,"new_reference_mode","","",N,N],[5,"new_float_mode","","",N,N],[5,"new_non_arithmetic_mode","","",N,N],[5,"get_mode_ident","","",N,N],[5,"get_mode_name","","",N,N],[5,"get_mode_size_bits","","",N,N],[5,"get_mode_size_bytes","","",N,N],[5,"get_mode_arithmetic","","",N,N],[5,"get_mode_modulo_shift","","",N,N],[5,"get_mode_min","","",N,N],[5,"get_mode_max","","",N,N],[5,"get_mode_null","","",N,N],[5,"get_mode_one","","",N,N],[5,"get_mode_all_one","","",N,N],[5,"get_mode_infinite","","",N,N],[7,"mode_M","","",N,N],[7,"mode_F","","",N,N],[7,"mode_D","","",N,N],[7,"mode_Bs","","",N,N],[7,"mode_Bu","","",N,N],[7,"mode_Hs","","",N,N],[7,"mode_Hu","","",N,N],[7,"mode_Is","","",N,N],[7,"mode_Iu","","",N,N],[7,"mode_Ls","","",N,N],[7,"mode_Lu","","",N,N],[7,"mode_P","","",N,N],[7,"mode_b","","",N,N],[7,"mode_X","","",N,N],[7,"mode_BB","","",N,N],[7,"mode_T","","",N,N],[7,"mode_ANY","","",N,N],[7,"mode_BAD","","",N,N],[5,"get_modeF","","",N,N],[5,"get_modeD","","",N,N],[5,"get_modeBs","","",N,N],[5,"get_modeBu","","",N,N],[5,"get_modeHs","","",N,N],[5,"get_modeHu","","",N,N],[5,"get_modeIs","","",N,N],[5,"get_modeIu","","",N,N],[5,"get_modeLs","","",N,N],[5,"get_modeLu","","",N,N],[5,"get_modeP","","",N,N],[5,"get_modeb","","",N,N],[5,"get_modeX","","",N,N],[5,"get_modeBB","","",N,N],[5,"get_modeM","","",N,N],[5,"get_modeT","","",N,N],[5,"get_modeANY","","",N,N],[5,"get_modeBAD","","",N,N],[5,"set_modeP","","",N,N],[5,"mode_is_signed","","",N,N],[5,"mode_is_float","","",N,N],[5,"mode_is_int","","",N,N],[5,"mode_is_reference","","",N,N],[5,"mode_is_num","","",N,N],[5,"mode_is_data","","",N,N],[5,"smaller_mode","","",N,N],[5,"values_in_mode","","",N,N],[5,"find_unsigned_mode","","",N,N],[5,"find_signed_mode","","",N,N],[5,"find_double_bits_int_mode","","",N,N],[5,"mode_has_signed_zero","","",N,N],[5,"mode_overflow_on_unary_Minus","","",N,N],[5,"mode_wrap_around","","",N,N],[5,"get_reference_offset_mode","","",N,N],[5,"set_reference_offset_mode","","",N,N],[5,"get_mode_mantissa_size","","",N,N],[5,"get_mode_exponent_size","","",N,N],[5,"get_mode_float_int_overflow","","",N,N],[5,"is_reinterpret_cast","","",N,N],[5,"get_type_for_mode","","",N,N],[5,"ir_get_n_modes","","",N,N],[5,"ir_get_mode","","",N,N],[5,"be_lower_for_target","","",N,N],[5,"be_set_after_transform_func","","",N,N],[5,"be_main","","",N,N],[5,"be_parse_asm_constraints","","",N,N],[5,"be_is_valid_clobber","","",N,N],[5,"be_dwarf_set_source_language","","",N,N],[5,"be_dwarf_set_compilation_directory","","",N,N],[5,"get_irp_callgraph_state","","",N,N],[5,"set_irp_callgraph_state","","",N,N],[5,"get_irg_n_callers","","",N,N],[5,"get_irg_caller","","",N,N],[5,"is_irg_caller_backedge","","",N,N],[5,"has_irg_caller_backedge","","",N,N],[5,"get_irg_caller_loop_depth","","",N,N],[5,"get_irg_n_callees","","",N,N],[5,"get_irg_callee","","",N,N],[5,"is_irg_callee_backedge","","",N,N],[5,"has_irg_callee_backedge","","",N,N],[5,"get_irg_callee_loop_depth","","",N,N],[5,"get_irg_method_execution_frequency","","",N,N],[5,"compute_callgraph","","",N,N],[5,"free_callgraph","","",N,N],[5,"callgraph_walk","","",N,N],[5,"find_callgraph_recursions","","",N,N],[5,"analyse_loop_nesting_depth","","",N,N],[5,"get_irp_loop_nesting_depth_state","","",N,N],[5,"set_irp_loop_nesting_depth_state","","",N,N],[5,"set_irp_loop_nesting_depth_state_inconsistent","","",N,N],[5,"compute_cdep","","",N,N],[5,"free_cdep","","",N,N],[5,"get_cdep_node","","",N,N],[5,"get_cdep_next","","",N,N],[5,"find_cdep","","",N,N],[5,"exchange_cdep","","",N,N],[5,"is_cdep_on","","",N,N],[5,"get_unique_cdep","","",N,N],[5,"has_multiple_cdep","","",N,N],[5,"cgana","","",N,N],[5,"free_callee_info","","",N,N],[5,"free_irp_callee_info","","",N,N],[5,"opt_call_addrs","","",N,N],[5,"cg_call_has_callees","","",N,N],[5,"cg_get_call_n_callees","","",N,N],[5,"cg_get_call_callee","","",N,N],[5,"cg_set_call_callee_arr","","",N,N],[5,"cg_remove_call_callee_arr","","",N,N],[5,"dbg_action_2_str","","",N,N],[5,"dbg_init","","",N,N],[5,"ir_set_debug_retrieve","","",N,N],[5,"ir_set_type_debug_retrieve","","",N,N],[5,"ir_retrieve_dbg_info","","",N,N],[5,"ir_retrieve_type_dbg_info","","",N,N],[5,"ir_estimate_execfreq","","",N,N],[5,"get_block_execfreq","","",N,N],[5,"ir_init","","",N,N],[5,"ir_init_library","","",N,N],[5,"ir_finish","","",N,N],[5,"ir_get_version_major","","",N,N],[5,"ir_get_version_minor","","",N,N],[5,"ir_get_version_micro","","",N,N],[5,"ir_get_version_revision","","",N,N],[5,"ir_get_version_build","","",N,N],[5,"get_kind","","",N,N],[5,"get_irn_height","","",N,N],[5,"heights_reachable_in_block","","",N,N],[5,"heights_recompute_block","","",N,N],[5,"heights_new","","",N,N],[5,"heights_free","","",N,N],[5,"new_id_from_str","","",N,N],[5,"new_id_from_chars","","",N,N],[5,"new_id_fmt","","",N,N],[5,"get_id_str","","",N,N],[5,"id_unique","","",N,N],[5,"gc_irgs","","",N,N],[5,"get_op_name","","",N,N],[5,"get_op_code","","",N,N],[5,"get_op_pin_state_name","","",N,N],[5,"get_op_pinned","","",N,N],[5,"get_next_ir_opcode","","",N,N],[5,"get_next_ir_opcodes","","",N,N],[5,"get_generic_function_ptr","","",N,N],[5,"set_generic_function_ptr","","",N,N],[5,"get_op_flags","","",N,N],[5,"set_op_hash","","",N,N],[5,"set_op_computed_value","","",N,N],[5,"set_op_computed_value_proj","","",N,N],[5,"set_op_equivalent_node","","",N,N],[5,"set_op_equivalent_node_proj","","",N,N],[5,"set_op_transform_node","","",N,N],[5,"set_op_transform_node_proj","","",N,N],[5,"set_op_attrs_equal","","",N,N],[5,"set_op_reassociate","","",N,N],[5,"set_op_copy_attr","","",N,N],[5,"set_op_get_type_attr","","",N,N],[5,"set_op_get_entity_attr","","",N,N],[5,"set_op_verify","","",N,N],[5,"set_op_verify_proj","","",N,N],[5,"set_op_dump","","",N,N],[5,"new_ir_op","","",N,N],[5,"free_ir_op","","",N,N],[5,"ir_get_n_opcodes","","",N,N],[5,"ir_get_opcode","","",N,N],[5,"ir_clear_opcodes_generic_func","","",N,N],[5,"ir_op_set_memory_index","","",N,N],[5,"ir_op_set_fragile_indices","","",N,N],[5,"is_ASM","","",N,N],[5,"get_ASM_mem","","",N,N],[5,"set_ASM_mem","","",N,N],[5,"get_ASM_n_inputs","","",N,N],[5,"get_ASM_input","","",N,N],[5,"set_ASM_input","","",N,N],[5,"get_ASM_input_arr","","",N,N],[5,"get_ASM_constraints","","",N,N],[5,"set_ASM_constraints","","",N,N],[5,"get_ASM_clobbers","","",N,N],[5,"set_ASM_clobbers","","",N,N],[5,"get_ASM_text","","",N,N],[5,"set_ASM_text","","",N,N],[7,"op_ASM","","",N,N],[5,"get_op_ASM","","",N,N],[5,"new_rd_Add","","",N,N],[5,"new_r_Add","","",N,N],[5,"new_d_Add","","",N,N],[5,"new_Add","","",N,N],[5,"is_Add","","",N,N],[5,"get_Add_left","","",N,N],[5,"set_Add_left","","",N,N],[5,"get_Add_right","","",N,N],[5,"set_Add_right","","",N,N],[7,"op_Add","","",N,N],[5,"get_op_Add","","",N,N],[5,"new_rd_Address","","",N,N],[5,"new_r_Address","","",N,N],[5,"new_d_Address","","",N,N],[5,"new_Address","","",N,N],[5,"is_Address","","",N,N],[5,"get_Address_entity","","",N,N],[5,"set_Address_entity","","",N,N],[7,"op_Address","","",N,N],[5,"get_op_Address","","",N,N],[5,"new_rd_Align","","",N,N],[5,"new_r_Align","","",N,N],[5,"new_d_Align","","",N,N],[5,"new_Align","","",N,N],[5,"is_Align","","",N,N],[5,"get_Align_type","","",N,N],[5,"set_Align_type","","",N,N],[7,"op_Align","","",N,N],[5,"get_op_Align","","",N,N],[5,"new_rd_Alloc","","",N,N],[5,"new_r_Alloc","","",N,N],[5,"new_d_Alloc","","",N,N],[5,"new_Alloc","","",N,N],[5,"is_Alloc","","",N,N],[5,"get_Alloc_mem","","",N,N],[5,"set_Alloc_mem","","",N,N],[5,"get_Alloc_size","","",N,N],[5,"set_Alloc_size","","",N,N],[5,"get_Alloc_alignment","","",N,N],[5,"set_Alloc_alignment","","",N,N],[7,"op_Alloc","","",N,N],[5,"get_op_Alloc","","",N,N],[5,"is_Anchor","","",N,N],[5,"get_Anchor_end_block","","",N,N],[5,"set_Anchor_end_block","","",N,N],[5,"get_Anchor_start_block","","",N,N],[5,"set_Anchor_start_block","","",N,N],[5,"get_Anchor_end","","",N,N],[5,"set_Anchor_end","","",N,N],[5,"get_Anchor_start","","",N,N],[5,"set_Anchor_start","","",N,N],[5,"get_Anchor_frame","","",N,N],[5,"set_Anchor_frame","","",N,N],[5,"get_Anchor_initial_mem","","",N,N],[5,"set_Anchor_initial_mem","","",N,N],[5,"get_Anchor_args","","",N,N],[5,"set_Anchor_args","","",N,N],[5,"get_Anchor_no_mem","","",N,N],[5,"set_Anchor_no_mem","","",N,N],[7,"op_Anchor","","",N,N],[5,"get_op_Anchor","","",N,N],[5,"new_rd_And","","",N,N],[5,"new_r_And","","",N,N],[5,"new_d_And","","",N,N],[5,"new_And","","",N,N],[5,"is_And","","",N,N],[5,"get_And_left","","",N,N],[5,"set_And_left","","",N,N],[5,"get_And_right","","",N,N],[5,"set_And_right","","",N,N],[7,"op_And","","",N,N],[5,"get_op_And","","",N,N],[5,"new_rd_Bad","","",N,N],[5,"new_r_Bad","","",N,N],[5,"new_d_Bad","","",N,N],[5,"new_Bad","","",N,N],[5,"is_Bad","","",N,N],[7,"op_Bad","","",N,N],[5,"get_op_Bad","","",N,N],[5,"new_rd_Bitcast","","",N,N],[5,"new_r_Bitcast","","",N,N],[5,"new_d_Bitcast","","",N,N],[5,"new_Bitcast","","",N,N],[5,"is_Bitcast","","",N,N],[5,"get_Bitcast_op","","",N,N],[5,"set_Bitcast_op","","",N,N],[7,"op_Bitcast","","",N,N],[5,"get_op_Bitcast","","",N,N],[5,"new_rd_Block","","",N,N],[5,"new_r_Block","","",N,N],[5,"new_d_Block","","",N,N],[5,"new_Block","","",N,N],[5,"is_Block","","",N,N],[5,"get_Block_n_cfgpreds","","",N,N],[5,"get_Block_cfgpred","","",N,N],[5,"set_Block_cfgpred","","",N,N],[5,"get_Block_cfgpred_arr","","",N,N],[5,"get_Block_entity","","",N,N],[5,"set_Block_entity","","",N,N],[7,"op_Block","","",N,N],[5,"get_op_Block","","",N,N],[5,"new_rd_Builtin","","",N,N],[5,"new_r_Builtin","","",N,N],[5,"new_d_Builtin","","",N,N],[5,"new_Builtin","","",N,N],[5,"is_Builtin","","",N,N],[5,"get_Builtin_mem","","",N,N],[5,"set_Builtin_mem","","",N,N],[5,"get_Builtin_n_params","","",N,N],[5,"get_Builtin_param","","",N,N],[5,"set_Builtin_param","","",N,N],[5,"get_Builtin_param_arr","","",N,N],[5,"get_Builtin_kind","","",N,N],[5,"set_Builtin_kind","","",N,N],[5,"get_Builtin_type","","",N,N],[5,"set_Builtin_type","","",N,N],[7,"op_Builtin","","",N,N],[5,"get_op_Builtin","","",N,N],[5,"new_rd_Call","","",N,N],[5,"new_r_Call","","",N,N],[5,"new_d_Call","","",N,N],[5,"new_Call","","",N,N],[5,"is_Call","","",N,N],[5,"get_Call_mem","","",N,N],[5,"set_Call_mem","","",N,N],[5,"get_Call_ptr","","",N,N],[5,"set_Call_ptr","","",N,N],[5,"get_Call_n_params","","",N,N],[5,"get_Call_param","","",N,N],[5,"set_Call_param","","",N,N],[5,"get_Call_param_arr","","",N,N],[5,"get_Call_type","","",N,N],[5,"set_Call_type","","",N,N],[7,"op_Call","","",N,N],[5,"get_op_Call","","",N,N],[5,"new_rd_Cmp","","",N,N],[5,"new_r_Cmp","","",N,N],[5,"new_d_Cmp","","",N,N],[5,"new_Cmp","","",N,N],[5,"is_Cmp","","",N,N],[5,"get_Cmp_left","","",N,N],[5,"set_Cmp_left","","",N,N],[5,"get_Cmp_right","","",N,N],[5,"set_Cmp_right","","",N,N],[5,"get_Cmp_relation","","",N,N],[5,"set_Cmp_relation","","",N,N],[7,"op_Cmp","","",N,N],[5,"get_op_Cmp","","",N,N],[5,"new_rd_Cond","","",N,N],[5,"new_r_Cond","","",N,N],[5,"new_d_Cond","","",N,N],[5,"new_Cond","","",N,N],[5,"is_Cond","","",N,N],[5,"get_Cond_selector","","",N,N],[5,"set_Cond_selector","","",N,N],[5,"get_Cond_jmp_pred","","",N,N],[5,"set_Cond_jmp_pred","","",N,N],[7,"op_Cond","","",N,N],[5,"get_op_Cond","","",N,N],[5,"new_rd_Confirm","","",N,N],[5,"new_r_Confirm","","",N,N],[5,"new_d_Confirm","","",N,N],[5,"new_Confirm","","",N,N],[5,"is_Confirm","","",N,N],[5,"get_Confirm_value","","",N,N],[5,"set_Confirm_value","","",N,N],[5,"get_Confirm_bound","","",N,N],[5,"set_Confirm_bound","","",N,N],[5,"get_Confirm_relation","","",N,N],[5,"set_Confirm_relation","","",N,N],[7,"op_Confirm","","",N,N],[5,"get_op_Confirm","","",N,N],[5,"new_rd_Const","","",N,N],[5,"new_r_Const","","",N,N],[5,"new_d_Const","","",N,N],[5,"new_Const","","",N,N],[5,"is_Const","","",N,N],[5,"get_Const_tarval","","",N,N],[5,"set_Const_tarval","","",N,N],[7,"op_Const","","",N,N],[5,"get_op_Const","","",N,N],[5,"new_rd_Conv","","",N,N],[5,"new_r_Conv","","",N,N],[5,"new_d_Conv","","",N,N],[5,"new_Conv","","",N,N],[5,"is_Conv","","",N,N],[5,"get_Conv_op","","",N,N],[5,"set_Conv_op","","",N,N],[7,"op_Conv","","",N,N],[5,"get_op_Conv","","",N,N],[5,"new_rd_CopyB","","",N,N],[5,"new_r_CopyB","","",N,N],[5,"new_d_CopyB","","",N,N],[5,"new_CopyB","","",N,N],[5,"is_CopyB","","",N,N],[5,"get_CopyB_mem","","",N,N],[5,"set_CopyB_mem","","",N,N],[5,"get_CopyB_dst","","",N,N],[5,"set_CopyB_dst","","",N,N],[5,"get_CopyB_src","","",N,N],[5,"set_CopyB_src","","",N,N],[5,"get_CopyB_type","","",N,N],[5,"set_CopyB_type","","",N,N],[5,"get_CopyB_volatility","","",N,N],[5,"set_CopyB_volatility","","",N,N],[7,"op_CopyB","","",N,N],[5,"get_op_CopyB","","",N,N],[5,"is_Deleted","","",N,N],[7,"op_Deleted","","",N,N],[5,"get_op_Deleted","","",N,N],[5,"new_rd_Div","","",N,N],[5,"new_r_Div","","",N,N],[5,"new_d_Div","","",N,N],[5,"new_Div","","",N,N],[5,"is_Div","","",N,N],[5,"get_Div_mem","","",N,N],[5,"set_Div_mem","","",N,N],[5,"get_Div_left","","",N,N],[5,"set_Div_left","","",N,N],[5,"get_Div_right","","",N,N],[5,"set_Div_right","","",N,N],[5,"get_Div_resmode","","",N,N],[5,"set_Div_resmode","","",N,N],[5,"get_Div_no_remainder","","",N,N],[5,"set_Div_no_remainder","","",N,N],[7,"op_Div","","",N,N],[5,"get_op_Div","","",N,N],[5,"new_rd_Dummy","","",N,N],[5,"new_r_Dummy","","",N,N],[5,"new_d_Dummy","","",N,N],[5,"new_Dummy","","",N,N],[5,"is_Dummy","","",N,N],[7,"op_Dummy","","",N,N],[5,"get_op_Dummy","","",N,N],[5,"new_rd_End","","",N,N],[5,"new_r_End","","",N,N],[5,"new_d_End","","",N,N],[5,"new_End","","",N,N],[5,"is_End","","",N,N],[5,"get_End_n_keepalives","","",N,N],[5,"get_End_keepalive","","",N,N],[5,"set_End_keepalive","","",N,N],[5,"get_End_keepalive_arr","","",N,N],[7,"op_End","","",N,N],[5,"get_op_End","","",N,N],[5,"new_rd_Eor","","",N,N],[5,"new_r_Eor","","",N,N],[5,"new_d_Eor","","",N,N],[5,"new_Eor","","",N,N],[5,"is_Eor","","",N,N],[5,"get_Eor_left","","",N,N],[5,"set_Eor_left","","",N,N],[5,"get_Eor_right","","",N,N],[5,"set_Eor_right","","",N,N],[7,"op_Eor","","",N,N],[5,"get_op_Eor","","",N,N],[5,"new_rd_Free","","",N,N],[5,"new_r_Free","","",N,N],[5,"new_d_Free","","",N,N],[5,"new_Free","","",N,N],[5,"is_Free","","",N,N],[5,"get_Free_mem","","",N,N],[5,"set_Free_mem","","",N,N],[5,"get_Free_ptr","","",N,N],[5,"set_Free_ptr","","",N,N],[7,"op_Free","","",N,N],[5,"get_op_Free","","",N,N],[5,"new_rd_IJmp","","",N,N],[5,"new_r_IJmp","","",N,N],[5,"new_d_IJmp","","",N,N],[5,"new_IJmp","","",N,N],[5,"is_IJmp","","",N,N],[5,"get_IJmp_target","","",N,N],[5,"set_IJmp_target","","",N,N],[7,"op_IJmp","","",N,N],[5,"get_op_IJmp","","",N,N],[5,"is_Id","","",N,N],[5,"get_Id_pred","","",N,N],[5,"set_Id_pred","","",N,N],[7,"op_Id","","",N,N],[5,"get_op_Id","","",N,N],[5,"new_rd_Jmp","","",N,N],[5,"new_r_Jmp","","",N,N],[5,"new_d_Jmp","","",N,N],[5,"new_Jmp","","",N,N],[5,"is_Jmp","","",N,N],[7,"op_Jmp","","",N,N],[5,"get_op_Jmp","","",N,N],[5,"new_rd_Load","","",N,N],[5,"new_r_Load","","",N,N],[5,"new_d_Load","","",N,N],[5,"new_Load","","",N,N],[5,"is_Load","","",N,N],[5,"get_Load_mem","","",N,N],[5,"set_Load_mem","","",N,N],[5,"get_Load_ptr","","",N,N],[5,"set_Load_ptr","","",N,N],[5,"get_Load_mode","","",N,N],[5,"set_Load_mode","","",N,N],[5,"get_Load_type","","",N,N],[5,"set_Load_type","","",N,N],[5,"get_Load_volatility","","",N,N],[5,"set_Load_volatility","","",N,N],[5,"get_Load_unaligned","","",N,N],[5,"set_Load_unaligned","","",N,N],[7,"op_Load","","",N,N],[5,"get_op_Load","","",N,N],[5,"new_rd_Member","","",N,N],[5,"new_r_Member","","",N,N],[5,"new_d_Member","","",N,N],[5,"new_Member","","",N,N],[5,"is_Member","","",N,N],[5,"get_Member_ptr","","",N,N],[5,"set_Member_ptr","","",N,N],[5,"get_Member_entity","","",N,N],[5,"set_Member_entity","","",N,N],[7,"op_Member","","",N,N],[5,"get_op_Member","","",N,N],[5,"new_rd_Minus","","",N,N],[5,"new_r_Minus","","",N,N],[5,"new_d_Minus","","",N,N],[5,"new_Minus","","",N,N],[5,"is_Minus","","",N,N],[5,"get_Minus_op","","",N,N],[5,"set_Minus_op","","",N,N],[7,"op_Minus","","",N,N],[5,"get_op_Minus","","",N,N],[5,"new_rd_Mod","","",N,N],[5,"new_r_Mod","","",N,N],[5,"new_d_Mod","","",N,N],[5,"new_Mod","","",N,N],[5,"is_Mod","","",N,N],[5,"get_Mod_mem","","",N,N],[5,"set_Mod_mem","","",N,N],[5,"get_Mod_left","","",N,N],[5,"set_Mod_left","","",N,N],[5,"get_Mod_right","","",N,N],[5,"set_Mod_right","","",N,N],[5,"get_Mod_resmode","","",N,N],[5,"set_Mod_resmode","","",N,N],[7,"op_Mod","","",N,N],[5,"get_op_Mod","","",N,N],[5,"new_rd_Mul","","",N,N],[5,"new_r_Mul","","",N,N],[5,"new_d_Mul","","",N,N],[5,"new_Mul","","",N,N],[5,"is_Mul","","",N,N],[5,"get_Mul_left","","",N,N],[5,"set_Mul_left","","",N,N],[5,"get_Mul_right","","",N,N],[5,"set_Mul_right","","",N,N],[7,"op_Mul","","",N,N],[5,"get_op_Mul","","",N,N],[5,"new_rd_Mulh","","",N,N],[5,"new_r_Mulh","","",N,N],[5,"new_d_Mulh","","",N,N],[5,"new_Mulh","","",N,N],[5,"is_Mulh","","",N,N],[5,"get_Mulh_left","","",N,N],[5,"set_Mulh_left","","",N,N],[5,"get_Mulh_right","","",N,N],[5,"set_Mulh_right","","",N,N],[7,"op_Mulh","","",N,N],[5,"get_op_Mulh","","",N,N],[5,"new_rd_Mux","","",N,N],[5,"new_r_Mux","","",N,N],[5,"new_d_Mux","","",N,N],[5,"new_Mux","","",N,N],[5,"is_Mux","","",N,N],[5,"get_Mux_sel","","",N,N],[5,"set_Mux_sel","","",N,N],[5,"get_Mux_false","","",N,N],[5,"set_Mux_false","","",N,N],[5,"get_Mux_true","","",N,N],[5,"set_Mux_true","","",N,N],[7,"op_Mux","","",N,N],[5,"get_op_Mux","","",N,N],[5,"new_rd_NoMem","","",N,N],[5,"new_r_NoMem","","",N,N],[5,"new_d_NoMem","","",N,N],[5,"new_NoMem","","",N,N],[5,"is_NoMem","","",N,N],[7,"op_NoMem","","",N,N],[5,"get_op_NoMem","","",N,N],[5,"new_rd_Not","","",N,N],[5,"new_r_Not","","",N,N],[5,"new_d_Not","","",N,N],[5,"new_Not","","",N,N],[5,"is_Not","","",N,N],[5,"get_Not_op","","",N,N],[5,"set_Not_op","","",N,N],[7,"op_Not","","",N,N],[5,"get_op_Not","","",N,N],[5,"new_rd_Offset","","",N,N],[5,"new_r_Offset","","",N,N],[5,"new_d_Offset","","",N,N],[5,"new_Offset","","",N,N],[5,"is_Offset","","",N,N],[5,"get_Offset_entity","","",N,N],[5,"set_Offset_entity","","",N,N],[7,"op_Offset","","",N,N],[5,"get_op_Offset","","",N,N],[5,"new_rd_Or","","",N,N],[5,"new_r_Or","","",N,N],[5,"new_d_Or","","",N,N],[5,"new_Or","","",N,N],[5,"is_Or","","",N,N],[5,"get_Or_left","","",N,N],[5,"set_Or_left","","",N,N],[5,"get_Or_right","","",N,N],[5,"set_Or_right","","",N,N],[7,"op_Or","","",N,N],[5,"get_op_Or","","",N,N],[5,"new_rd_Phi","","",N,N],[5,"new_r_Phi","","",N,N],[5,"new_d_Phi","","",N,N],[5,"new_Phi","","",N,N],[5,"is_Phi","","",N,N],[5,"get_Phi_n_preds","","",N,N],[5,"get_Phi_pred","","",N,N],[5,"set_Phi_pred","","",N,N],[5,"get_Phi_pred_arr","","",N,N],[5,"get_Phi_loop","","",N,N],[5,"set_Phi_loop","","",N,N],[7,"op_Phi","","",N,N],[5,"get_op_Phi","","",N,N],[5,"new_rd_Pin","","",N,N],[5,"new_r_Pin","","",N,N],[5,"new_d_Pin","","",N,N],[5,"new_Pin","","",N,N],[5,"is_Pin","","",N,N],[5,"get_Pin_op","","",N,N],[5,"set_Pin_op","","",N,N],[7,"op_Pin","","",N,N],[5,"get_op_Pin","","",N,N],[5,"new_rd_Proj","","",N,N],[5,"new_r_Proj","","",N,N],[5,"new_d_Proj","","",N,N],[5,"new_Proj","","",N,N],[5,"is_Proj","","",N,N],[5,"get_Proj_pred","","",N,N],[5,"set_Proj_pred","","",N,N],[5,"get_Proj_num","","",N,N],[5,"set_Proj_num","","",N,N],[7,"op_Proj","","",N,N],[5,"get_op_Proj","","",N,N],[5,"new_rd_Raise","","",N,N],[5,"new_r_Raise","","",N,N],[5,"new_d_Raise","","",N,N],[5,"new_Raise","","",N,N],[5,"is_Raise","","",N,N],[5,"get_Raise_mem","","",N,N],[5,"set_Raise_mem","","",N,N],[5,"get_Raise_exo_ptr","","",N,N],[5,"set_Raise_exo_ptr","","",N,N],[7,"op_Raise","","",N,N],[5,"get_op_Raise","","",N,N],[5,"new_rd_Return","","",N,N],[5,"new_r_Return","","",N,N],[5,"new_d_Return","","",N,N],[5,"new_Return","","",N,N],[5,"is_Return","","",N,N],[5,"get_Return_mem","","",N,N],[5,"set_Return_mem","","",N,N],[5,"get_Return_n_ress","","",N,N],[5,"get_Return_res","","",N,N],[5,"set_Return_res","","",N,N],[5,"get_Return_res_arr","","",N,N],[7,"op_Return","","",N,N],[5,"get_op_Return","","",N,N],[5,"new_rd_Sel","","",N,N],[5,"new_r_Sel","","",N,N],[5,"new_d_Sel","","",N,N],[5,"new_Sel","","",N,N],[5,"is_Sel","","",N,N],[5,"get_Sel_ptr","","",N,N],[5,"set_Sel_ptr","","",N,N],[5,"get_Sel_index","","",N,N],[5,"set_Sel_index","","",N,N],[5,"get_Sel_type","","",N,N],[5,"set_Sel_type","","",N,N],[7,"op_Sel","","",N,N],[5,"get_op_Sel","","",N,N],[5,"new_rd_Shl","","",N,N],[5,"new_r_Shl","","",N,N],[5,"new_d_Shl","","",N,N],[5,"new_Shl","","",N,N],[5,"is_Shl","","",N,N],[5,"get_Shl_left","","",N,N],[5,"set_Shl_left","","",N,N],[5,"get_Shl_right","","",N,N],[5,"set_Shl_right","","",N,N],[7,"op_Shl","","",N,N],[5,"get_op_Shl","","",N,N],[5,"new_rd_Shr","","",N,N],[5,"new_r_Shr","","",N,N],[5,"new_d_Shr","","",N,N],[5,"new_Shr","","",N,N],[5,"is_Shr","","",N,N],[5,"get_Shr_left","","",N,N],[5,"set_Shr_left","","",N,N],[5,"get_Shr_right","","",N,N],[5,"set_Shr_right","","",N,N],[7,"op_Shr","","",N,N],[5,"get_op_Shr","","",N,N],[5,"new_rd_Shrs","","",N,N],[5,"new_r_Shrs","","",N,N],[5,"new_d_Shrs","","",N,N],[5,"new_Shrs","","",N,N],[5,"is_Shrs","","",N,N],[5,"get_Shrs_left","","",N,N],[5,"set_Shrs_left","","",N,N],[5,"get_Shrs_right","","",N,N],[5,"set_Shrs_right","","",N,N],[7,"op_Shrs","","",N,N],[5,"get_op_Shrs","","",N,N],[5,"new_rd_Size","","",N,N],[5,"new_r_Size","","",N,N],[5,"new_d_Size","","",N,N],[5,"new_Size","","",N,N],[5,"is_Size","","",N,N],[5,"get_Size_type","","",N,N],[5,"set_Size_type","","",N,N],[7,"op_Size","","",N,N],[5,"get_op_Size","","",N,N],[5,"new_rd_Start","","",N,N],[5,"new_r_Start","","",N,N],[5,"new_d_Start","","",N,N],[5,"new_Start","","",N,N],[5,"is_Start","","",N,N],[7,"op_Start","","",N,N],[5,"get_op_Start","","",N,N],[5,"new_rd_Store","","",N,N],[5,"new_r_Store","","",N,N],[5,"new_d_Store","","",N,N],[5,"new_Store","","",N,N],[5,"is_Store","","",N,N],[5,"get_Store_mem","","",N,N],[5,"set_Store_mem","","",N,N],[5,"get_Store_ptr","","",N,N],[5,"set_Store_ptr","","",N,N],[5,"get_Store_value","","",N,N],[5,"set_Store_value","","",N,N],[5,"get_Store_type","","",N,N],[5,"set_Store_type","","",N,N],[5,"get_Store_volatility","","",N,N],[5,"set_Store_volatility","","",N,N],[5,"get_Store_unaligned","","",N,N],[5,"set_Store_unaligned","","",N,N],[7,"op_Store","","",N,N],[5,"get_op_Store","","",N,N],[5,"new_rd_Sub","","",N,N],[5,"new_r_Sub","","",N,N],[5,"new_d_Sub","","",N,N],[5,"new_Sub","","",N,N],[5,"is_Sub","","",N,N],[5,"get_Sub_left","","",N,N],[5,"set_Sub_left","","",N,N],[5,"get_Sub_right","","",N,N],[5,"set_Sub_right","","",N,N],[7,"op_Sub","","",N,N],[5,"get_op_Sub","","",N,N],[5,"new_rd_Switch","","",N,N],[5,"new_r_Switch","","",N,N],[5,"new_d_Switch","","",N,N],[5,"new_Switch","","",N,N],[5,"is_Switch","","",N,N],[5,"get_Switch_selector","","",N,N],[5,"set_Switch_selector","","",N,N],[5,"get_Switch_n_outs","","",N,N],[5,"set_Switch_n_outs","","",N,N],[5,"get_Switch_table","","",N,N],[5,"set_Switch_table","","",N,N],[7,"op_Switch","","",N,N],[5,"get_op_Switch","","",N,N],[5,"new_rd_Sync","","",N,N],[5,"new_r_Sync","","",N,N],[5,"new_d_Sync","","",N,N],[5,"new_Sync","","",N,N],[5,"is_Sync","","",N,N],[5,"get_Sync_n_preds","","",N,N],[5,"get_Sync_pred","","",N,N],[5,"set_Sync_pred","","",N,N],[5,"get_Sync_pred_arr","","",N,N],[7,"op_Sync","","",N,N],[5,"get_op_Sync","","",N,N],[5,"new_rd_Tuple","","",N,N],[5,"new_r_Tuple","","",N,N],[5,"new_d_Tuple","","",N,N],[5,"new_Tuple","","",N,N],[5,"is_Tuple","","",N,N],[5,"get_Tuple_n_preds","","",N,N],[5,"get_Tuple_pred","","",N,N],[5,"set_Tuple_pred","","",N,N],[5,"get_Tuple_pred_arr","","",N,N],[7,"op_Tuple","","",N,N],[5,"get_op_Tuple","","",N,N],[5,"new_rd_Unknown","","",N,N],[5,"new_r_Unknown","","",N,N],[5,"new_d_Unknown","","",N,N],[5,"new_Unknown","","",N,N],[5,"is_Unknown","","",N,N],[7,"op_Unknown","","",N,N],[5,"get_op_Unknown","","",N,N],[5,"is_binop","","",N,N],[5,"is_entconst","","",N,N],[5,"get_entconst_entity","","",N,N],[5,"set_entconst_entity","","",N,N],[5,"is_typeconst","","",N,N],[5,"get_typeconst_type","","",N,N],[5,"set_typeconst_type","","",N,N],[5,"get_irn_arity","","",N,N],[5,"get_irn_n","","",N,N],[5,"set_irn_in","","",N,N],[5,"set_irn_n","","",N,N],[5,"add_irn_n","","",N,N],[5,"set_irn_mode","","",N,N],[5,"get_irn_mode","","",N,N],[5,"get_irn_op","","",N,N],[5,"get_irn_opcode","","",N,N],[5,"get_irn_opname","","",N,N],[5,"get_irn_opident","","",N,N],[5,"get_irn_visited","","",N,N],[5,"set_irn_visited","","",N,N],[5,"mark_irn_visited","","",N,N],[5,"irn_visited","","",N,N],[5,"irn_visited_else_mark","","",N,N],[5,"set_irn_link","","",N,N],[5,"get_irn_link","","",N,N],[5,"get_irn_irg","","",N,N],[5,"get_irn_node_nr","","",N,N],[5,"get_irn_pinned","","",N,N],[5,"set_irn_pinned","","",N,N],[5,"new_ir_node","","",N,N],[5,"get_nodes_block","","",N,N],[5,"set_nodes_block","","",N,N],[5,"get_Block_cfgpred_block","","",N,N],[5,"get_Block_matured","","",N,N],[5,"set_Block_matured","","",N,N],[5,"get_Block_block_visited","","",N,N],[5,"set_Block_block_visited","","",N,N],[5,"mark_Block_block_visited","","",N,N],[5,"Block_block_visited","","",N,N],[5,"create_Block_entity","","",N,N],[5,"get_Block_phis","","",N,N],[5,"set_Block_phis","","",N,N],[5,"add_Block_phi","","",N,N],[5,"get_Block_mark","","",N,N],[5,"set_Block_mark","","",N,N],[5,"add_End_keepalive","","",N,N],[5,"set_End_keepalives","","",N,N],[5,"remove_End_keepalive","","",N,N],[5,"remove_End_n","","",N,N],[5,"remove_End_Bads_and_doublets","","",N,N],[5,"free_End","","",N,N],[5,"is_Const_null","","",N,N],[5,"is_Const_one","","",N,N],[5,"is_Const_all_one","","",N,N],[5,"get_Call_callee","","",N,N],[5,"get_builtin_kind_name","","",N,N],[5,"get_binop_left","","",N,N],[5,"set_binop_left","","",N,N],[5,"get_binop_right","","",N,N],[5,"set_binop_right","","",N,N],[5,"is_x_except_Proj","","",N,N],[5,"is_x_regular_Proj","","",N,N],[5,"ir_set_throws_exception","","",N,N],[5,"ir_throws_exception","","",N,N],[5,"get_relation_string","","",N,N],[5,"get_negated_relation","","",N,N],[5,"get_inversed_relation","","",N,N],[5,"get_Phi_next","","",N,N],[5,"set_Phi_next","","",N,N],[5,"is_memop","","",N,N],[5,"get_memop_mem","","",N,N],[5,"set_memop_mem","","",N,N],[5,"add_Sync_pred","","",N,N],[5,"remove_Sync_n","","",N,N],[5,"get_ASM_n_constraints","","",N,N],[5,"get_ASM_n_clobbers","","",N,N],[5,"skip_Proj","","",N,N],[5,"skip_Proj_const","","",N,N],[5,"skip_Id","","",N,N],[5,"skip_Tuple","","",N,N],[5,"skip_Pin","","",N,N],[5,"skip_Confirm","","",N,N],[5,"is_cfop","","",N,N],[5,"is_unknown_jump","","",N,N],[5,"is_fragile_op","","",N,N],[5,"is_irn_forking","","",N,N],[5,"is_irn_const_memory","","",N,N],[5,"copy_node_attr","","",N,N],[5,"get_irn_type_attr","","",N,N],[5,"get_irn_entity_attr","","",N,N],[5,"is_irn_constlike","","",N,N],[5,"is_irn_keep","","",N,N],[5,"is_irn_start_block_placed","","",N,N],[5,"get_cond_jmp_predicate_name","","",N,N],[5,"get_irn_generic_attr","","",N,N],[5,"get_irn_generic_attr_const","","",N,N],[5,"get_irn_idx","","",N,N],[5,"set_irn_dbg_info","","",N,N],[5,"get_irn_dbg_info","","",N,N],[5,"gdb_node_helper","","",N,N],[5,"ir_new_switch_table","","",N,N],[5,"ir_switch_table_get_n_entries","","",N,N],[5,"ir_switch_table_set","","",N,N],[5,"ir_switch_table_get_max","","",N,N],[5,"ir_switch_table_get_min","","",N,N],[5,"ir_switch_table_get_pn","","",N,N],[5,"ir_switch_table_duplicate","","",N,N],[5,"new_rd_Const_long","","",N,N],[5,"new_r_Const_long","","",N,N],[5,"new_d_Const_long","","",N,N],[5,"new_Const_long","","",N,N],[5,"new_rd_Phi_loop","","",N,N],[5,"new_r_Phi_loop","","",N,N],[5,"new_d_Phi_loop","","",N,N],[5,"new_Phi_loop","","",N,N],[5,"new_rd_DivRL","","",N,N],[5,"new_r_DivRL","","",N,N],[5,"new_d_DivRL","","",N,N],[5,"new_DivRL","","",N,N],[5,"new_rd_ASM","","",N,N],[5,"new_r_ASM","","",N,N],[5,"new_d_ASM","","",N,N],[5,"new_ASM","","",N,N],[7,"current_ir_graph","","",N,N],[5,"get_current_ir_graph","","",N,N],[5,"set_current_ir_graph","","",N,N],[5,"new_d_immBlock","","",N,N],[5,"new_immBlock","","",N,N],[5,"new_r_immBlock","","",N,N],[5,"new_rd_immBlock","","",N,N],[5,"add_immBlock_pred","","",N,N],[5,"mature_immBlock","","",N,N],[5,"set_cur_block","","",N,N],[5,"set_r_cur_block","","",N,N],[5,"get_cur_block","","",N,N],[5,"get_r_cur_block","","",N,N],[5,"get_value","","",N,N],[5,"get_r_value","","",N,N],[5,"get_b_value","","",N,N],[5,"ir_guess_mode","","",N,N],[5,"ir_r_guess_mode","","",N,N],[5,"set_value","","",N,N],[5,"set_r_value","","",N,N],[5,"set_b_value","","",N,N],[5,"get_store","","",N,N],[5,"get_r_store","","",N,N],[5,"get_b_store","","",N,N],[5,"set_store","","",N,N],[5,"set_r_store","","",N,N],[5,"set_b_store","","",N,N],[5,"keep_alive","","",N,N],[5,"irg_finalize_cons","","",N,N],[5,"verify_new_node","","",N,N],[5,"ir_set_uninitialized_local_variable_func","","",N,N],[5,"construct_confirms","","",N,N],[5,"construct_confirms_only","","",N,N],[5,"remove_confirms","","",N,N],[5,"get_Block_idom","","",N,N],[5,"get_Block_ipostdom","","",N,N],[5,"get_Block_dom_depth","","",N,N],[5,"get_Block_postdom_depth","","",N,N],[5,"block_dominates","","",N,N],[5,"block_postdominates","","",N,N],[5,"block_strictly_postdominates","","",N,N],[5,"get_Block_dominated_first","","",N,N],[5,"get_Block_postdominated_first","","",N,N],[5,"get_Block_dominated_next","","",N,N],[5,"get_Block_postdominated_next","","",N,N],[5,"ir_deepest_common_dominator","","",N,N],[5,"dom_tree_walk","","",N,N],[5,"postdom_tree_walk","","",N,N],[5,"dom_tree_walk_irg","","",N,N],[5,"postdom_tree_walk_irg","","",N,N],[5,"compute_doms","","",N,N],[5,"compute_postdoms","","",N,N],[5,"ir_compute_dominance_frontiers","","",N,N],[5,"ir_get_dominance_frontier","","",N,N],[5,"dump_ir_graph","","",N,N],[5,"dump_ir_prog_ext","","",N,N],[5,"dump_ir_graph_ext","","",N,N],[5,"dump_all_ir_graphs","","",N,N],[5,"ir_set_dump_path","","",N,N],[5,"ir_set_dump_filter","","",N,N],[5,"ir_get_dump_filter","","",N,N],[5,"dump_ir_graph_file","","",N,N],[5,"dump_cfg","","",N,N],[5,"dump_callgraph","","",N,N],[5,"dump_typegraph","","",N,N],[5,"dump_class_hierarchy","","",N,N],[5,"dump_loop_tree","","",N,N],[5,"dump_callgraph_loop_tree","","",N,N],[5,"dump_types_as_text","","",N,N],[5,"dump_globals_as_text","","",N,N],[5,"dump_loop","","",N,N],[5,"dump_graph_as_text","","",N,N],[5,"dump_entity_to_file","","",N,N],[5,"dump_type_to_file","","",N,N],[5,"ir_set_dump_verbosity","","",N,N],[5,"ir_get_dump_verbosity","","",N,N],[5,"ir_set_dump_flags","","",N,N],[5,"ir_add_dump_flags","","",N,N],[5,"ir_remove_dump_flags","","",N,N],[5,"ir_get_dump_flags","","",N,N],[5,"set_dump_node_vcgattr_hook","","",N,N],[5,"set_dump_edge_vcgattr_hook","","",N,N],[5,"set_dump_node_edge_hook","","",N,N],[5,"get_dump_node_edge_hook","","",N,N],[5,"set_dump_block_edge_hook","","",N,N],[5,"get_dump_block_edge_hook","","",N,N],[5,"dump_add_node_info_callback","","",N,N],[5,"dump_remove_node_info_callback","","",N,N],[5,"dump_vcg_header","","",N,N],[5,"dump_vcg_footer","","",N,N],[5,"dump_node","","",N,N],[5,"dump_ir_data_edges","","",N,N],[5,"print_nodeid","","",N,N],[5,"dump_begin_block_subgraph","","",N,N],[5,"dump_end_block_subgraph","","",N,N],[5,"dump_block_edges","","",N,N],[5,"dump_blocks_as_subgraphs","","",N,N],[5,"get_irn_out_edge_first_kind","","",N,N],[5,"get_irn_out_edge_first","","",N,N],[5,"get_block_succ_first","","",N,N],[5,"get_irn_out_edge_next","","",N,N],[5,"get_edge_src_irn","","",N,N],[5,"get_edge_src_pos","","",N,N],[5,"get_irn_n_edges_kind","","",N,N],[5,"get_irn_n_edges","","",N,N],[5,"edges_activated_kind","","",N,N],[5,"edges_activated","","",N,N],[5,"edges_activate_kind","","",N,N],[5,"edges_deactivate_kind","","",N,N],[5,"edges_reroute_kind","","",N,N],[5,"edges_reroute","","",N,N],[5,"edges_reroute_except","","",N,N],[5,"edges_verify","","",N,N],[5,"edges_verify_kind","","",N,N],[5,"edges_init_dbg","","",N,N],[5,"edges_activate","","",N,N],[5,"edges_deactivate","","",N,N],[5,"assure_edges","","",N,N],[5,"assure_edges_kind","","",N,N],[5,"irg_block_edges_walk","","",N,N],[5,"irg_walk_edges","","",N,N],[5,"set_optimize","","",N,N],[5,"get_optimize","","",N,N],[5,"set_opt_constant_folding","","",N,N],[5,"get_opt_constant_folding","","",N,N],[5,"set_opt_algebraic_simplification","","",N,N],[5,"get_opt_algebraic_simplification","","",N,N],[5,"set_opt_cse","","",N,N],[5,"get_opt_cse","","",N,N],[5,"set_opt_global_cse","","",N,N],[5,"get_opt_global_cse","","",N,N],[5,"set_opt_global_null_ptr_elimination","","",N,N],[5,"get_opt_global_null_ptr_elimination","","",N,N],[5,"save_optimization_state","","",N,N],[5,"restore_optimization_state","","",N,N],[5,"all_optimizations_off","","",N,N],[5,"exchange","","",N,N],[5,"turn_into_tuple","","",N,N],[5,"collect_phiprojs_and_start_block_nodes","","",N,N],[5,"collect_new_start_block_node","","",N,N],[5,"collect_new_phi_node","","",N,N],[5,"part_block","","",N,N],[5,"part_block_edges","","",N,N],[5,"kill_node","","",N,N],[5,"duplicate_subgraph","","",N,N],[5,"local_optimize_node","","",N,N],[5,"optimize_node","","",N,N],[5,"local_optimize_graph","","",N,N],[5,"optimize_graph_df","","",N,N],[5,"local_opts_const_code","","",N,N],[5,"remove_unreachable_code","","",N,N],[5,"remove_bads","","",N,N],[5,"remove_tuples","","",N,N],[5,"remove_critical_cf_edges","","",N,N],[5,"remove_critical_cf_edges_ex","","",N,N],[5,"new_ir_graph","","",N,N],[5,"free_ir_graph","","",N,N],[5,"get_irg_entity","","",N,N],[5,"set_irg_entity","","",N,N],[5,"get_irg_frame_type","","",N,N],[5,"set_irg_frame_type","","",N,N],[5,"get_irg_start_block","","",N,N],[5,"set_irg_start_block","","",N,N],[5,"get_irg_start","","",N,N],[5,"set_irg_start","","",N,N],[5,"get_irg_end_block","","",N,N],[5,"set_irg_end_block","","",N,N],[5,"get_irg_end","","",N,N],[5,"set_irg_end","","",N,N],[5,"get_irg_frame","","",N,N],[5,"set_irg_frame","","",N,N],[5,"get_irg_initial_mem","","",N,N],[5,"set_irg_initial_mem","","",N,N],[5,"get_irg_args","","",N,N],[5,"set_irg_args","","",N,N],[5,"get_irg_no_mem","","",N,N],[5,"set_irg_no_mem","","",N,N],[5,"get_irg_n_locs","","",N,N],[5,"get_irg_graph_nr","","",N,N],[5,"get_irg_idx","","",N,N],[5,"get_idx_irn","","",N,N],[5,"get_irg_pinned","","",N,N],[5,"get_irg_callee_info_state","","",N,N],[5,"set_irg_callee_info_state","","",N,N],[5,"set_irg_link","","",N,N],[5,"get_irg_link","","",N,N],[5,"inc_irg_visited","","",N,N],[5,"get_irg_visited","","",N,N],[5,"set_irg_visited","","",N,N],[5,"get_max_irg_visited","","",N,N],[5,"set_max_irg_visited","","",N,N],[5,"inc_max_irg_visited","","",N,N],[5,"inc_irg_block_visited","","",N,N],[5,"get_irg_block_visited","","",N,N],[5,"set_irg_block_visited","","",N,N],[5,"ir_reserve_resources","","",N,N],[5,"ir_free_resources","","",N,N],[5,"ir_resources_reserved","","",N,N],[5,"add_irg_constraints","","",N,N],[5,"clear_irg_constraints","","",N,N],[5,"irg_is_constrained","","",N,N],[5,"add_irg_properties","","",N,N],[5,"clear_irg_properties","","",N,N],[5,"irg_has_properties","","",N,N],[5,"set_irg_loc_description","","",N,N],[5,"get_irg_loc_description","","",N,N],[5,"get_irg_last_idx","","",N,N],[5,"assure_irg_properties","","",N,N],[5,"confirm_irg_properties","","",N,N],[5,"irg_walk","","",N,N],[5,"irg_walk_core","","",N,N],[5,"irg_walk_graph","","",N,N],[5,"irg_walk_in_or_dep","","",N,N],[5,"irg_walk_in_or_dep_graph","","",N,N],[5,"irg_walk_topological","","",N,N],[5,"all_irg_walk","","",N,N],[5,"irg_block_walk","","",N,N],[5,"irg_block_walk_graph","","",N,N],[5,"walk_const_code","","",N,N],[5,"irg_walk_blkwise_graph","","",N,N],[5,"irg_walk_blkwise_dom_top_down","","",N,N],[5,"irg_walk_anchors","","",N,N],[5,"irg_walk_2","","",N,N],[5,"ir_export","","",N,N],[5,"ir_export_file","","",N,N],[5,"ir_import","","",N,N],[5,"ir_import_file","","",N,N],[5,"is_backedge","","",N,N],[5,"set_backedge","","",N,N],[5,"has_backedges","","",N,N],[5,"clear_backedges","","",N,N],[5,"set_irg_loop","","",N,N],[5,"get_irg_loop","","",N,N],[5,"get_irn_loop","","",N,N],[5,"get_loop_outer_loop","","",N,N],[5,"get_loop_depth","","",N,N],[5,"get_loop_n_elements","","",N,N],[5,"get_loop_element","","",N,N],[5,"get_loop_loop_nr","","",N,N],[5,"set_loop_link","","",N,N],[5,"get_loop_link","","",N,N],[5,"construct_cf_backedges","","",N,N],[5,"assure_loopinfo","","",N,N],[5,"free_loop_information","","",N,N],[5,"is_loop_invariant","","",N,N],[5,"get_ir_alias_relation_name","","",N,N],[5,"get_alias_relation","","",N,N],[5,"assure_irg_entity_usage_computed","","",N,N],[5,"get_irp_globals_entity_usage_state","","",N,N],[5,"set_irp_globals_entity_usage_state","","",N,N],[5,"assure_irp_globals_entity_usage_computed","","",N,N],[5,"get_irg_memory_disambiguator_options","","",N,N],[5,"set_irg_memory_disambiguator_options","","",N,N],[5,"set_irp_memory_disambiguator_options","","",N,N],[5,"mark_private_methods","","",N,N],[5,"computed_value","","",N,N],[5,"optimize_in_place","","",N,N],[5,"ir_is_negated_value","","",N,N],[5,"ir_get_possible_cmp_relations","","",N,N],[5,"ir_allow_imprecise_float_transforms","","",N,N],[5,"ir_imprecise_float_transforms_allowed","","",N,N],[5,"get_irn_n_outs","","",N,N],[5,"get_irn_out","","",N,N],[5,"get_irn_out_ex","","",N,N],[5,"get_Block_n_cfg_outs","","",N,N],[5,"get_Block_n_cfg_outs_ka","","",N,N],[5,"get_Block_cfg_out","","",N,N],[5,"get_Block_cfg_out_ex","","",N,N],[5,"get_Block_cfg_out_ka","","",N,N],[5,"irg_out_walk","","",N,N],[5,"irg_out_block_walk","","",N,N],[5,"compute_irg_outs","","",N,N],[5,"assure_irg_outs","","",N,N],[5,"free_irg_outs","","",N,N],[5,"ir_printf","","",N,N],[5,"ir_fprintf","","",N,N],[5,"ir_snprintf","","",N,N],[5,"ir_vprintf","","",N,N],[5,"ir_vfprintf","","",N,N],[5,"ir_vsnprintf","","",N,N],[5,"ir_obst_vprintf","","",N,N],[5,"tarval_snprintf","","",N,N],[7,"irp","","",N,N],[5,"irp_reserve_resources","","",N,N],[5,"irp_free_resources","","",N,N],[5,"irp_resources_reserved","","",N,N],[5,"get_irp","","",N,N],[5,"set_irp","","",N,N],[5,"new_ir_prog","","",N,N],[5,"free_ir_prog","","",N,N],[5,"set_irp_prog_name","","",N,N],[5,"irp_prog_name_is_set","","",N,N],[5,"get_irp_ident","","",N,N],[5,"get_irp_name","","",N,N],[5,"get_irp_main_irg","","",N,N],[5,"set_irp_main_irg","","",N,N],[5,"get_irp_last_idx","","",N,N],[5,"get_irp_n_irgs","","",N,N],[5,"get_irp_irg","","",N,N],[5,"set_irp_irg","","",N,N],[5,"get_segment_type","","",N,N],[5,"set_segment_type","","",N,N],[5,"get_glob_type","","",N,N],[5,"get_tls_type","","",N,N],[5,"ir_get_global","","",N,N],[5,"get_irp_n_types","","",N,N],[5,"get_irp_type","","",N,N],[5,"set_irp_type","","",N,N],[5,"get_const_code_irg","","",N,N],[5,"get_irp_callee_info_state","","",N,N],[5,"set_irp_callee_info_state","","",N,N],[5,"get_irp_next_label_nr","","",N,N],[5,"add_irp_asm","","",N,N],[5,"get_irp_n_asms","","",N,N],[5,"get_irp_asm","","",N,N],[5,"irn_verify","","",N,N],[5,"irg_verify","","",N,N],[5,"irg_assert_verify","","",N,N],[5,"lower_CopyB","","",N,N],[5,"lower_switch","","",N,N],[5,"lower_highlevel_graph","","",N,N],[5,"lower_highlevel","","",N,N],[5,"lower_const_code","","",N,N],[5,"lower_mux","","",N,N],[5,"ir_create_intrinsics_map","","",N,N],[5,"ir_free_intrinsics_map","","",N,N],[5,"ir_lower_intrinsics","","",N,N],[5,"i_mapper_abs","","",N,N],[5,"i_mapper_sqrt","","",N,N],[5,"i_mapper_cbrt","","",N,N],[5,"i_mapper_pow","","",N,N],[5,"i_mapper_exp","","",N,N],[5,"i_mapper_exp2","","",N,N],[5,"i_mapper_exp10","","",N,N],[5,"i_mapper_log","","",N,N],[5,"i_mapper_log2","","",N,N],[5,"i_mapper_log10","","",N,N],[5,"i_mapper_sin","","",N,N],[5,"i_mapper_cos","","",N,N],[5,"i_mapper_tan","","",N,N],[5,"i_mapper_asin","","",N,N],[5,"i_mapper_acos","","",N,N],[5,"i_mapper_atan","","",N,N],[5,"i_mapper_sinh","","",N,N],[5,"i_mapper_cosh","","",N,N],[5,"i_mapper_tanh","","",N,N],[5,"i_mapper_strcmp","","",N,N],[5,"i_mapper_strncmp","","",N,N],[5,"i_mapper_strcpy","","",N,N],[5,"i_mapper_strlen","","",N,N],[5,"i_mapper_memcpy","","",N,N],[5,"i_mapper_memmove","","",N,N],[5,"i_mapper_memset","","",N,N],[5,"i_mapper_memcmp","","",N,N],[5,"ir_target_set","","",N,N],[5,"ir_target_set_triple","","",N,N],[5,"ir_target_option","","",N,N],[5,"ir_target_init","","",N,N],[5,"ir_target_experimental","","",N,N],[5,"ir_target_big_endian","","",N,N],[5,"ir_target_biggest_alignment","","",N,N],[5,"ir_target_pointer_size","","",N,N],[5,"ir_target_supports_pic","","",N,N],[5,"ir_target_fast_unaligned_memaccess","","",N,N],[5,"ir_target_float_arithmetic_mode","","",N,N],[5,"ir_target_float_int_overflow_style","","",N,N],[5,"ir_platform_long_long_and_double_struct_align_override","","",N,N],[5,"ir_platform_pic_is_default","","",N,N],[5,"ir_platform_supports_thread_local_storage","","",N,N],[5,"ir_platform_define_value","","",N,N],[5,"ir_platform_wchar_type","","",N,N],[5,"ir_platform_wchar_is_signed","","",N,N],[5,"ir_platform_intptr_type","","",N,N],[5,"ir_platform_type_size","","",N,N],[5,"ir_platform_type_align","","",N,N],[5,"ir_platform_type_mode","","",N,N],[5,"ir_platform_va_list_type","","",N,N],[5,"ir_platform_user_label_prefix","","",N,N],[5,"ir_platform_default_exe_name","","",N,N],[5,"ir_platform_mangle_global","","",N,N],[5,"ir_platform_define_first","","",N,N],[5,"ir_platform_define_next","","",N,N],[5,"ir_platform_define_name","","",N,N],[5,"ir_parse_machine_triple","","",N,N],[5,"ir_get_host_machine_triple","","",N,N],[5,"ir_triple_get_cpu_type","","",N,N],[5,"ir_triple_get_manufacturer","","",N,N],[5,"ir_triple_get_operating_system","","",N,N],[5,"ir_triple_set_cpu_type","","",N,N],[5,"ir_free_machine_triple","","",N,N],[5,"ir_timer_enter_high_priority","","",N,N],[5,"ir_timer_leave_high_priority","","",N,N],[5,"ir_timer_new","","",N,N],[5,"ir_timer_free","","",N,N],[5,"ir_timer_start","","",N,N],[5,"ir_timer_reset_and_start","","",N,N],[5,"ir_timer_reset","","",N,N],[5,"ir_timer_stop","","",N,N],[5,"ir_timer_init_parent","","",N,N],[5,"ir_timer_push","","",N,N],[5,"ir_timer_pop","","",N,N],[5,"ir_timer_elapsed_msec","","",N,N],[5,"ir_timer_elapsed_usec","","",N,N],[5,"ir_timer_elapsed_sec","","",N,N],[5,"new_tarval_from_str","","",N,N],[5,"new_integer_tarval_from_str","","",N,N],[5,"new_tarval_from_long","","",N,N],[5,"new_tarval_from_bytes","","",N,N],[5,"new_tarval_nan","","",N,N],[5,"tarval_to_bytes","","",N,N],[5,"get_tarval_long","","",N,N],[5,"tarval_is_long","","",N,N],[5,"new_tarval_from_double","","",N,N],[5,"new_tarval_from_long_double","","",N,N],[5,"get_tarval_double","","",N,N],[5,"get_tarval_long_double","","",N,N],[5,"tarval_is_double","","",N,N],[5,"get_tarval_mode","","",N,N],[5,"tarval_is_negative","","",N,N],[5,"tarval_is_null","","",N,N],[5,"tarval_is_one","","",N,N],[5,"tarval_is_all_one","","",N,N],[5,"tarval_is_constant","","",N,N],[7,"tarval_bad","","",N,N],[5,"get_tarval_bad","","",N,N],[7,"tarval_unknown","","",N,N],[5,"get_tarval_unknown","","",N,N],[7,"tarval_b_false","","",N,N],[5,"get_tarval_b_false","","",N,N],[7,"tarval_b_true","","",N,N],[5,"get_tarval_b_true","","",N,N],[5,"tarval_set_wrap_on_overflow","","",N,N],[5,"tarval_get_wrap_on_overflow","","",N,N],[5,"tarval_cmp","","",N,N],[5,"tarval_convert_to","","",N,N],[5,"tarval_bitcast","","",N,N],[5,"tarval_not","","",N,N],[5,"tarval_neg","","",N,N],[5,"tarval_add","","",N,N],[5,"tarval_sub","","",N,N],[5,"tarval_mul","","",N,N],[5,"tarval_div","","",N,N],[5,"tarval_mod","","",N,N],[5,"tarval_divmod","","",N,N],[5,"tarval_abs","","",N,N],[5,"tarval_and","","",N,N],[5,"tarval_andnot","","",N,N],[5,"tarval_or","","",N,N],[5,"tarval_ornot","","",N,N],[5,"tarval_eor","","",N,N],[5,"tarval_shl","","",N,N],[5,"tarval_shl_unsigned","","",N,N],[5,"tarval_shr","","",N,N],[5,"tarval_shr_unsigned","","",N,N],[5,"tarval_shrs","","",N,N],[5,"tarval_shrs_unsigned","","",N,N],[5,"get_tarval_sub_bits","","",N,N],[5,"get_tarval_popcount","","",N,N],[5,"get_tarval_lowest_bit","","",N,N],[5,"get_tarval_highest_bit","","",N,N],[5,"tarval_zero_mantissa","","",N,N],[5,"tarval_get_exponent","","",N,N],[5,"tarval_ieee754_can_conv_lossless","","",N,N],[5,"tarval_ieee754_get_exact","","",N,N],[5,"tarval_is_nan","","",N,N],[5,"tarval_is_quiet_nan","","",N,N],[5,"tarval_is_signaling_nan","","",N,N],[5,"tarval_is_finite","","",N,N],[5,"set_vrp_data","","",N,N],[5,"free_vrp_data","","",N,N],[5,"vrp_cmp","","",N,N],[5,"vrp_get_info","","",N,N],[0,"ir_relation","","",N,N],[6,"Type","libfirm_rs_bindings::ir_relation","",N,N],[17,"False","","",N,N],[17,"Equal","","",N,N],[17,"Less","","",N,N],[17,"Greater","","",N,N],[17,"Unordered","","",N,N],[17,"LessEqual","","",N,N],[17,"GreaterEqual","","",N,N],[17,"LessGreater","","",N,N],[17,"LessEqualGreater","","",N,N],[17,"UnorderedEqual","","",N,N],[17,"UnorderedLess","","",N,N],[17,"UnorderedLessEqual","","",N,N],[17,"UnorderedGreater","","",N,N],[17,"UnorderedGreaterEqual","","",N,N],[17,"UnorderedLessGreater","","",N,N],[17,"True","","",N,N],[0,"ir_cons_flags","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::ir_cons_flags","",N,N],[17,"None","","",N,N],[17,"Volatile","","",N,N],[17,"Unaligned","","",N,N],[17,"Floats","","",N,N],[17,"ThrowsException","","",N,N],[0,"op_pin_state","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::op_pin_state","",N,N],[17,"Floats","","",N,N],[17,"Pinned","","",N,N],[17,"ExcPinned","","",N,N],[0,"cond_jmp_predicate","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::cond_jmp_predicate","",N,N],[17,"None","","",N,N],[17,"True","","",N,N],[17,"False","","",N,N],[0,"mtp_additional_properties","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::mtp_additional_properties","",N,N],[17,"NoProperty","","",N,N],[17,"PropertyNoWrite","","",N,N],[17,"PropertyPure","","",N,N],[17,"PropertyNoreturn","","",N,N],[17,"PropertyTerminates","","",N,N],[17,"PropertyNothrow","","",N,N],[17,"PropertyNaked","","",N,N],[17,"PropertyMalloc","","",N,N],[17,"PropertyReturnsTwice","","",N,N],[17,"PropertyPrivate","","",N,N],[17,"PropertyAlwaysInline","","",N,N],[17,"PropertyNoinline","","",N,N],[17,"PropertyInlineRecommended","","",N,N],[17,"Temporary","","",N,N],[0,"ir_builtin_kind","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::ir_builtin_kind","",N,N],[17,"Trap","","",N,N],[17,"Debugbreak","","",N,N],[17,"ReturnAddress","","",N,N],[17,"FrameAddress","","",N,N],[17,"Prefetch","","",N,N],[17,"Ffs","","",N,N],[17,"Clz","","",N,N],[17,"Ctz","","",N,N],[17,"Popcount","","",N,N],[17,"Parity","","",N,N],[17,"Bswap","","",N,N],[17,"Inport","","",N,N],[17,"Outport","","",N,N],[17,"SaturatingIncrement","","",N,N],[17,"CompareSwap","","",N,N],[17,"MayAlias","","",N,N],[17,"VaStart","","",N,N],[17,"VaArg","","",N,N],[17,"Last","","",N,N],[0,"ir_volatility","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::ir_volatility","",N,N],[17,"NonVolatile","","",N,N],[17,"IsVolatile","","",N,N],[0,"ir_align","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::ir_align","",N,N],[17,"IsAligned","","",N,N],[17,"NonAligned","","",N,N],[0,"float_int_conversion_overflow_style_t","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::float_int_conversion_overflow_style_t","",N,N],[17,"Indefinite","","",N,N],[17,"MinMax","","",N,N],[0,"ir_visibility","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::ir_visibility","",N,N],[17,"External","","",N,N],[17,"ExternalPrivate","","",N,N],[17,"ExternalProtected","","",N,N],[17,"Local","","",N,N],[17,"Private","","",N,N],[0,"ir_linkage","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::ir_linkage","",N,N],[17,"Default","","",N,N],[17,"Constant","","",N,N],[17,"Weak","","",N,N],[17,"GarbageCollect","","",N,N],[17,"Merge","","",N,N],[17,"HiddenUser","","",N,N],[17,"NoCodegen","","",N,N],[17,"NoIdentity","","",N,N],[0,"ir_entity_usage","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::ir_entity_usage","",N,N],[17,"None","","",N,N],[17,"AddressTaken","","",N,N],[17,"Write","","",N,N],[17,"Read","","",N,N],[17,"ReinterpretCast","","",N,N],[17,"Unknown","","",N,N],[0,"ir_initializer_kind_t","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::ir_initializer_kind_t","",N,N],[17,"Const","","",N,N],[17,"Tarval","","",N,N],[17,"Null","","",N,N],[17,"Compound","","",N,N],[0,"ptr_access_kind","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::ptr_access_kind","",N,N],[17,"None","","",N,N],[17,"Read","","",N,N],[17,"Write","","",N,N],[17,"Rw","","",N,N],[17,"Store","","",N,N],[17,"All","","",N,N],[0,"tp_opcode","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::tp_opcode","",N,N],[17,"Uninitialized","","",N,N],[17,"Struct","","",N,N],[17,"Union","","",N,N],[17,"Class","","",N,N],[17,"Segment","","",N,N],[17,"Method","","",N,N],[17,"Array","","",N,N],[17,"Pointer","","",N,N],[17,"Primitive","","",N,N],[17,"Code","","",N,N],[17,"Unknown","","",N,N],[17,"Last","","",N,N],[0,"inh_transitive_closure_state","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::inh_transitive_closure_state","",N,N],[17,"None","","",N,N],[17,"Valid","","",N,N],[17,"Invalid","","",N,N],[17,"Max","","",N,N],[0,"ir_type_state","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::ir_type_state","",N,N],[17,"Undefined","","",N,N],[17,"Fixed","","",N,N],[0,"calling_convention","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::calling_convention","",N,N],[17,"RegParam","","",N,N],[17,"LastOnTop","","",N,N],[17,"CalleeClearStk","","",N,N],[17,"ThisCall","","",N,N],[17,"CompoundRet","","",N,N],[17,"FrameOnCallerStk","","",N,N],[17,"FpregParam","","",N,N],[0,"__codecvt_result","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::__codecvt_result","",N,N],[17,"Ok","","",N,N],[17,"Partial","","",N,N],[17,"Error","","",N,N],[17,"Noconv","","",N,N],[0,"osr_flags","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::osr_flags","",N,N],[17,"None","","",N,N],[17,"LftrWithOvCheck","","",N,N],[17,"IgnoreX86Shift","","",N,N],[17,"KeepRegPressure","","",N,N],[0,"ir_mode_arithmetic","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::ir_mode_arithmetic","",N,N],[17,"None","","",N,N],[17,"TwosComplement","","",N,N],[17,"Ieee754","","",N,N],[17,"X86ExtendedFloat","","",N,N],[17,"Last","","",N,N],[0,"asm_constraint_flags_t","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::asm_constraint_flags_t","",N,N],[17,"None","","",N,N],[17,"SupportsRegister","","",N,N],[17,"SupportsMemop","","",N,N],[17,"SupportsImmediate","","",N,N],[17,"SupportsAny","","",N,N],[17,"NoSupport","","",N,N],[17,"ModifierWrite","","",N,N],[17,"ModifierRead","","",N,N],[17,"ModifierEarlyclobber","","",N,N],[17,"ModifierCommutative","","",N,N],[17,"Invalid","","",N,N],[0,"dwarf_source_language","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::dwarf_source_language","",N,N],[17,"C89","","",N,N],[17,"C","","",N,N],[17,"Ada83","","",N,N],[17,"CPlusPlus","","",N,N],[17,"Cobol74","","",N,N],[17,"Cobol85","","",N,N],[17,"Fortran77","","",N,N],[17,"Fortran90","","",N,N],[17,"Pascal83","","",N,N],[17,"Modula2","","",N,N],[17,"Java","","",N,N],[17,"C99","","",N,N],[17,"Ada95","","",N,N],[17,"Fortran95","","",N,N],[17,"Pli","","",N,N],[17,"ObjC","","",N,N],[17,"ObjCPlusPlus","","",N,N],[17,"Upc","","",N,N],[17,"D","","",N,N],[17,"Python","","",N,N],[17,"Go","","",N,N],[0,"irp_callgraph_state","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::irp_callgraph_state","",N,N],[17,"None","","",N,N],[17,"Consistent","","",N,N],[17,"Inconsistent","","",N,N],[17,"AndCalltreeConsistent","","",N,N],[0,"loop_nesting_depth_state","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::loop_nesting_depth_state","",N,N],[17,"None","","",N,N],[17,"Consistent","","",N,N],[17,"Inconsistent","","",N,N],[0,"dbg_action","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::dbg_action","",N,N],[17,"Error","","",N,N],[17,"OptSsa","","",N,N],[17,"OptAuxnode","","",N,N],[17,"ConstEval","","",N,N],[17,"OptCse","","",N,N],[17,"Straightening","","",N,N],[17,"IfSimplification","","",N,N],[17,"AlgebraicSimplification","","",N,N],[17,"WriteAfterWrite","","",N,N],[17,"WriteAfterRead","","",N,N],[17,"ReadAfterWrite","","",N,N],[17,"ReadAfterRead","","",N,N],[17,"ReadAConst","","",N,N],[17,"DeadCode","","",N,N],[17,"OptConfirm","","",N,N],[17,"GvnPre","","",N,N],[17,"Combo","","",N,N],[17,"Jumpthreading","","",N,N],[17,"Backend","","",N,N],[17,"Max","","",N,N],[0,"firm_kind","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::firm_kind","",N,N],[17,"Bad","","",N,N],[17,"Entity","","",N,N],[17,"Type","","",N,N],[17,"IrGraph","","",N,N],[17,"IrNode","","",N,N],[17,"IrMode","","",N,N],[17,"Tarval","","",N,N],[17,"IrLoop","","",N,N],[17,"IrMax","","",N,N],[0,"op_arity","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::op_arity","",N,N],[17,"Invalid","","",N,N],[17,"Binary","","",N,N],[17,"Dynamic","","",N,N],[17,"Any","","",N,N],[0,"irop_flags","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::irop_flags","",N,N],[17,"None","","",N,N],[17,"Commutative","","",N,N],[17,"Cfopcode","","",N,N],[17,"Fragile","","",N,N],[17,"Forking","","",N,N],[17,"Constlike","","",N,N],[17,"Keep","","",N,N],[17,"StartBlock","","",N,N],[17,"UsesMemory","","",N,N],[17,"DumpNoblock","","",N,N],[17,"UnknownJump","","",N,N],[17,"ConstMemory","","",N,N],[0,"dump_reason_t","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::dump_reason_t","",N,N],[17,"OpcodeTxt","","",N,N],[17,"ModeTxt","","",N,N],[17,"NodeattrTxt","","",N,N],[17,"InfoTxt","","",N,N],[0,"ir_opcode","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::ir_opcode","",N,N],[17,"Asm","","",N,N],[17,"Add","","",N,N],[17,"Address","","",N,N],[17,"Align","","",N,N],[17,"Alloc","","",N,N],[17,"Anchor","","",N,N],[17,"And","","",N,N],[17,"Bad","","",N,N],[17,"Bitcast","","",N,N],[17,"Block","","",N,N],[17,"Builtin","","",N,N],[17,"Call","","",N,N],[17,"Cmp","","",N,N],[17,"Cond","","",N,N],[17,"Confirm","","",N,N],[17,"Const","","",N,N],[17,"Conv","","",N,N],[17,"CopyB","","",N,N],[17,"Deleted","","",N,N],[17,"Div","","",N,N],[17,"Dummy","","",N,N],[17,"End","","",N,N],[17,"Eor","","",N,N],[17,"Free","","",N,N],[17,"Ijmp","","",N,N],[17,"Id","","",N,N],[17,"Jmp","","",N,N],[17,"Load","","",N,N],[17,"Member","","",N,N],[17,"Minus","","",N,N],[17,"Mod","","",N,N],[17,"Mul","","",N,N],[17,"Mulh","","",N,N],[17,"Mux","","",N,N],[17,"NoMem","","",N,N],[17,"Not","","",N,N],[17,"Offset","","",N,N],[17,"Or","","",N,N],[17,"Phi","","",N,N],[17,"Pin","","",N,N],[17,"Proj","","",N,N],[17,"Raise","","",N,N],[17,"Return","","",N,N],[17,"Sel","","",N,N],[17,"Shl","","",N,N],[17,"Shr","","",N,N],[17,"Shrs","","",N,N],[17,"Size","","",N,N],[17,"Start","","",N,N],[17,"Store","","",N,N],[17,"Sub","","",N,N],[17,"Switch","","",N,N],[17,"Sync","","",N,N],[17,"Tuple","","",N,N],[17,"Unknown","","",N,N],[17,"First","","",N,N],[17,"Last","","",N,N],[0,"n_ASM","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::n_ASM","",N,N],[17,"Mem","","",N,N],[17,"Max","","",N,N],[0,"pn_ASM","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::pn_ASM","",N,N],[17,"M","","",N,N],[17,"FirstOut","","",N,N],[17,"Max","","",N,N],[0,"n_Add","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::n_Add","",N,N],[17,"Left","","",N,N],[17,"Right","","",N,N],[17,"Max","","",N,N],[0,"n_Alloc","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::n_Alloc","",N,N],[17,"Mem","","",N,N],[17,"Size","","",N,N],[17,"Max","","",N,N],[0,"pn_Alloc","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::pn_Alloc","",N,N],[17,"M","","",N,N],[17,"Res","","",N,N],[17,"Max","","",N,N],[0,"n_Anchor","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::n_Anchor","",N,N],[17,"EndBlock","","",N,N],[17,"StartBlock","","",N,N],[17,"End","","",N,N],[17,"Start","","",N,N],[17,"Frame","","",N,N],[17,"InitialMem","","",N,N],[17,"Args","","",N,N],[17,"NoMem","","",N,N],[17,"Max","","",N,N],[0,"n_And","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::n_And","",N,N],[17,"Left","","",N,N],[17,"Right","","",N,N],[17,"Max","","",N,N],[0,"n_Bitcast","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::n_Bitcast","",N,N],[17,"Op","","",N,N],[17,"Max","","",N,N],[0,"n_Builtin","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::n_Builtin","",N,N],[17,"Mem","","",N,N],[17,"Max","","",N,N],[0,"pn_Builtin","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::pn_Builtin","",N,N],[17,"M","","",N,N],[17,"Max","","",N,N],[0,"n_Call","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::n_Call","",N,N],[17,"Mem","","",N,N],[17,"Ptr","","",N,N],[17,"Max","","",N,N],[0,"pn_Call","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::pn_Call","",N,N],[17,"M","","",N,N],[17,"TResult","","",N,N],[17,"XRegular","","",N,N],[17,"XExcept","","",N,N],[17,"Max","","",N,N],[0,"n_Cmp","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::n_Cmp","",N,N],[17,"Left","","",N,N],[17,"Right","","",N,N],[17,"Max","","",N,N],[0,"n_Cond","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::n_Cond","",N,N],[17,"Selector","","",N,N],[17,"Max","","",N,N],[0,"pn_Cond","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::pn_Cond","",N,N],[17,"False","","",N,N],[17,"True","","",N,N],[17,"Max","","",N,N],[0,"n_Confirm","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::n_Confirm","",N,N],[17,"Value","","",N,N],[17,"Bound","","",N,N],[17,"Max","","",N,N],[0,"n_Conv","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::n_Conv","",N,N],[17,"Op","","",N,N],[17,"Max","","",N,N],[0,"n_CopyB","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::n_CopyB","",N,N],[17,"Mem","","",N,N],[17,"Dst","","",N,N],[17,"Src","","",N,N],[17,"Max","","",N,N],[0,"n_Div","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::n_Div","",N,N],[17,"Mem","","",N,N],[17,"Left","","",N,N],[17,"Right","","",N,N],[17,"Max","","",N,N],[0,"pn_Div","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::pn_Div","",N,N],[17,"M","","",N,N],[17,"Res","","",N,N],[17,"XRegular","","",N,N],[17,"XExcept","","",N,N],[17,"Max","","",N,N],[0,"n_Eor","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::n_Eor","",N,N],[17,"Left","","",N,N],[17,"Right","","",N,N],[17,"Max","","",N,N],[0,"n_Free","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::n_Free","",N,N],[17,"Mem","","",N,N],[17,"Ptr","","",N,N],[17,"Max","","",N,N],[0,"n_IJmp","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::n_IJmp","",N,N],[17,"Target","","",N,N],[17,"Max","","",N,N],[0,"n_Id","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::n_Id","",N,N],[17,"Pred","","",N,N],[17,"Max","","",N,N],[0,"n_Load","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::n_Load","",N,N],[17,"Mem","","",N,N],[17,"Ptr","","",N,N],[17,"Max","","",N,N],[0,"pn_Load","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::pn_Load","",N,N],[17,"M","","",N,N],[17,"Res","","",N,N],[17,"XRegular","","",N,N],[17,"XExcept","","",N,N],[17,"Max","","",N,N],[0,"n_Member","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::n_Member","",N,N],[17,"Ptr","","",N,N],[17,"Max","","",N,N],[0,"n_Minus","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::n_Minus","",N,N],[17,"Op","","",N,N],[17,"Max","","",N,N],[0,"n_Mod","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::n_Mod","",N,N],[17,"Mem","","",N,N],[17,"Left","","",N,N],[17,"Right","","",N,N],[17,"Max","","",N,N],[0,"pn_Mod","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::pn_Mod","",N,N],[17,"M","","",N,N],[17,"Res","","",N,N],[17,"XRegular","","",N,N],[17,"XExcept","","",N,N],[17,"Max","","",N,N],[0,"n_Mul","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::n_Mul","",N,N],[17,"Left","","",N,N],[17,"Right","","",N,N],[17,"Max","","",N,N],[0,"n_Mulh","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::n_Mulh","",N,N],[17,"Left","","",N,N],[17,"Right","","",N,N],[17,"Max","","",N,N],[0,"n_Mux","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::n_Mux","",N,N],[17,"Sel","","",N,N],[17,"False","","",N,N],[17,"True","","",N,N],[17,"Max","","",N,N],[0,"n_Not","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::n_Not","",N,N],[17,"Op","","",N,N],[17,"Max","","",N,N],[0,"n_Or","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::n_Or","",N,N],[17,"Left","","",N,N],[17,"Right","","",N,N],[17,"Max","","",N,N],[0,"n_Pin","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::n_Pin","",N,N],[17,"Op","","",N,N],[17,"Max","","",N,N],[0,"n_Proj","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::n_Proj","",N,N],[17,"Pred","","",N,N],[17,"Max","","",N,N],[0,"n_Raise","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::n_Raise","",N,N],[17,"Mem","","",N,N],[17,"ExoPtr","","",N,N],[17,"Max","","",N,N],[0,"pn_Raise","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::pn_Raise","",N,N],[17,"M","","",N,N],[17,"X","","",N,N],[17,"Max","","",N,N],[0,"n_Return","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::n_Return","",N,N],[17,"Mem","","",N,N],[17,"Max","","",N,N],[0,"n_Sel","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::n_Sel","",N,N],[17,"Ptr","","",N,N],[17,"Index","","",N,N],[17,"Max","","",N,N],[0,"n_Shl","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::n_Shl","",N,N],[17,"Left","","",N,N],[17,"Right","","",N,N],[17,"Max","","",N,N],[0,"n_Shr","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::n_Shr","",N,N],[17,"Left","","",N,N],[17,"Right","","",N,N],[17,"Max","","",N,N],[0,"n_Shrs","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::n_Shrs","",N,N],[17,"Left","","",N,N],[17,"Right","","",N,N],[17,"Max","","",N,N],[0,"pn_Start","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::pn_Start","",N,N],[17,"M","","",N,N],[17,"PFrameBase","","",N,N],[17,"TArgs","","",N,N],[17,"Max","","",N,N],[0,"n_Store","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::n_Store","",N,N],[17,"Mem","","",N,N],[17,"Ptr","","",N,N],[17,"Value","","",N,N],[17,"Max","","",N,N],[0,"pn_Store","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::pn_Store","",N,N],[17,"M","","",N,N],[17,"XRegular","","",N,N],[17,"XExcept","","",N,N],[17,"Max","","",N,N],[0,"n_Sub","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::n_Sub","",N,N],[17,"Left","","",N,N],[17,"Right","","",N,N],[17,"Max","","",N,N],[0,"n_Switch","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::n_Switch","",N,N],[17,"Selector","","",N,N],[17,"Max","","",N,N],[0,"pn_Switch","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::pn_Switch","",N,N],[17,"Default","","",N,N],[17,"Max","","",N,N],[0,"ir_dump_verbosity_t","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::ir_dump_verbosity_t","",N,N],[17,"Onlynames","","",N,N],[17,"Fields","","",N,N],[17,"Methods","","",N,N],[17,"Nostatic","","",N,N],[17,"Typeattrs","","",N,N],[17,"Entattrs","","",N,N],[17,"Entconsts","","",N,N],[17,"AccessStats","","",N,N],[17,"Max","","",N,N],[0,"ir_dump_flags_t","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::ir_dump_flags_t","",N,N],[17,"BlocksAsSubgraphs","","",N,N],[17,"WithTypegraph","","",N,N],[17,"DisableEdgeLabels","","",N,N],[17,"ConstsLocal","","",N,N],[17,"IdxLabel","","",N,N],[17,"NumberLabel","","",N,N],[17,"KeepaliveEdges","","",N,N],[17,"OutEdges","","",N,N],[17,"Dominance","","",N,N],[17,"Loops","","",N,N],[17,"BackEdges","","",N,N],[17,"Iredges","","",N,N],[17,"AllAnchors","","",N,N],[17,"ShowMarks","","",N,N],[17,"NoEntityValues","","",N,N],[17,"LdNames","","",N,N],[17,"EntitiesInHierarchy","","",N,N],[0,"ir_edge_kind_t","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::ir_edge_kind_t","",N,N],[17,"Normal","","",N,N],[17,"First","","",N,N],[17,"Block","","",N,N],[17,"Last","","",N,N],[0,"irg_callee_info_state","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::irg_callee_info_state","",N,N],[17,"None","","",N,N],[17,"Consistent","","",N,N],[17,"Inconsistent","","",N,N],[0,"ir_resources_t","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::ir_resources_t","",N,N],[17,"None","","",N,N],[17,"BlockVisited","","",N,N],[17,"BlockMark","","",N,N],[17,"IrnVisited","","",N,N],[17,"IrnLink","","",N,N],[17,"LoopLink","","",N,N],[17,"PhiList","","",N,N],[0,"ir_graph_constraints_t","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::ir_graph_constraints_t","",N,N],[17,"ArchDep","","",N,N],[17,"ModebLowered","","",N,N],[17,"Normalisation2","","",N,N],[17,"OptimizeUnreachableCode","","",N,N],[17,"Construction","","",N,N],[17,"TargetLowered","","",N,N],[17,"Backend","","",N,N],[0,"ir_graph_properties_t","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::ir_graph_properties_t","",N,N],[17,"IrGraphPropertiesNone","","",N,N],[17,"NoCriticalEdges","","",N,N],[17,"NoBads","","",N,N],[17,"NoTuples","","",N,N],[17,"NoUnreachableCode","","",N,N],[17,"OneReturn","","",N,N],[17,"ConsistentDominance","","",N,N],[17,"ConsistentPostdominance","","",N,N],[17,"ConsistentDominanceFrontiers","","",N,N],[17,"ConsistentOutEdges","","",N,N],[17,"ConsistentOuts","","",N,N],[17,"ConsistentLoopinfo","","",N,N],[17,"ConsistentEntityUsage","","",N,N],[17,"ManyReturns","","",N,N],[17,"IrGraphPropertiesControlFlow","","",N,N],[17,"IrGraphPropertiesAll","","",N,N],[0,"ir_alias_relation","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::ir_alias_relation","",N,N],[17,"NoAlias","","",N,N],[17,"MayAlias","","",N,N],[17,"SureAlias","","",N,N],[0,"ir_entity_usage_computed_state","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::ir_entity_usage_computed_state","",N,N],[17,"NotComputed","","",N,N],[17,"Computed","","",N,N],[0,"ir_disambiguator_options","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::ir_disambiguator_options","",N,N],[17,"None","","",N,N],[17,"AlwaysAlias","","",N,N],[17,"TypeBased","","",N,N],[17,"ByteTypeMayAlias","","",N,N],[17,"NoAlias","","",N,N],[17,"Inherited","","",N,N],[0,"ir_segment_t","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::ir_segment_t","",N,N],[17,"First","","",N,N],[17,"Global","","",N,N],[17,"ThreadLocal","","",N,N],[17,"Constructors","","",N,N],[17,"Destructors","","",N,N],[17,"Jcr","","",N,N],[17,"Last","","",N,N],[0,"irp_resources_t","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::irp_resources_t","",N,N],[17,"None","","",N,N],[17,"IrgLink","","",N,N],[17,"EntityLink","","",N,N],[17,"TypeVisited","","",N,N],[17,"TypeLink","","",N,N],[0,"ikind","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::ikind","",N,N],[17,"Call","","",N,N],[17,"Instr","","",N,N],[0,"ir_platform_type_t","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::ir_platform_type_t","",N,N],[17,"Bool","","",N,N],[17,"Char","","",N,N],[17,"Short","","",N,N],[17,"Int","","",N,N],[17,"Long","","",N,N],[17,"LongLong","","",N,N],[17,"Float","","",N,N],[17,"Double","","",N,N],[17,"LongDouble","","",N,N],[0,"range_types","libfirm_rs_bindings","",N,N],[6,"Type","libfirm_rs_bindings::range_types","",N,N],[17,"Undefined","","",N,N],[17,"Range","","",N,N],[17,"Antirange","","",N,N],[17,"Varying","","",N,N],[0,"mode","libfirm_rs_bindings","A little more idiomatic access to the mode_* statics.",N,N],[6,"Type","libfirm_rs_bindings::mode","",N,N],[0,"op","libfirm_rs_bindings","A little more idiomatic access to the op_* statics.",N,N],[6,"ir_visited_t","","",N,N],[6,"ir_label_t","","",N,N],[6,"ident","","",N,N],[6,"irg_walk_func","","",N,N],[6,"uninitialized_local_variable_func_t","","",N,N],[6,"hook_entry_t","","",N,N],[6,"wchar_t","","",N,N],[6,"compare_types_func_t","","",N,N],[6,"type_walk_func","","",N,N],[6,"class_walk_func","","",N,N],[6,"entity_walk_func","","",N,N],[6,"__u_char","","",N,N],[6,"__u_short","","",N,N],[6,"__u_int","","",N,N],[6,"__u_long","","",N,N],[6,"__int8_t","","",N,N],[6,"__uint8_t","","",N,N],[6,"__int16_t","","",N,N],[6,"__uint16_t","","",N,N],[6,"__int32_t","","",N,N],[6,"__uint32_t","","",N,N],[6,"__int64_t","","",N,N],[6,"__uint64_t","","",N,N],[6,"__quad_t","","",N,N],[6,"__u_quad_t","","",N,N],[6,"__dev_t","","",N,N],[6,"__uid_t","","",N,N],[6,"__gid_t","","",N,N],[6,"__ino_t","","",N,N],[6,"__ino64_t","","",N,N],[6,"__mode_t","","",N,N],[6,"__nlink_t","","",N,N],[6,"__off_t","","",N,N],[6,"__off64_t","","",N,N],[6,"__pid_t","","",N,N],[6,"__clock_t","","",N,N],[6,"__rlim_t","","",N,N],[6,"__rlim64_t","","",N,N],[6,"__id_t","","",N,N],[6,"__time_t","","",N,N],[6,"__useconds_t","","",N,N],[6,"__suseconds_t","","",N,N],[6,"__daddr_t","","",N,N],[6,"__key_t","","",N,N],[6,"__clockid_t","","",N,N],[6,"__timer_t","","",N,N],[6,"__blksize_t","","",N,N],[6,"__blkcnt_t","","",N,N],[6,"__blkcnt64_t","","",N,N],[6,"__fsblkcnt_t","","",N,N],[6,"__fsblkcnt64_t","","",N,N],[6,"__fsfilcnt_t","","",N,N],[6,"__fsfilcnt64_t","","",N,N],[6,"__fsword_t","","",N,N],[6,"__ssize_t","","",N,N],[6,"__syscall_slong_t","","",N,N],[6,"__syscall_ulong_t","","",N,N],[6,"__loff_t","","",N,N],[6,"__qaddr_t","","",N,N],[6,"__caddr_t","","",N,N],[6,"__intptr_t","","",N,N],[6,"__socklen_t","","",N,N],[6,"FILE","","",N,N],[6,"__FILE","","",N,N],[6,"va_list","","",N,N],[6,"__gnuc_va_list","","",N,N],[6,"_IO_lock_t","","",N,N],[6,"__io_read_fn","","",N,N],[6,"__io_write_fn","","",N,N],[6,"__io_seek_fn","","",N,N],[6,"__io_close_fn","","",N,N],[6,"off_t","","",N,N],[6,"fpos_t","","",N,N],[6,"check_alloc_entity_func","","",N,N],[6,"arch_allow_ifconv_func","","",N,N],[6,"opt_ptr","","",N,N],[6,"after_transform_func","","",N,N],[6,"callgraph_walk_func","","",N,N],[6,"merge_pair_func","","",N,N],[6,"merge_sets_func","","",N,N],[6,"retrieve_dbg_func","","",N,N],[6,"retrieve_type_dbg_func","","",N,N],[6,"op_func","","",N,N],[6,"hash_func","","",N,N],[6,"computed_value_func","","",N,N],[6,"equivalent_node_func","","",N,N],[6,"transform_node_func","","",N,N],[6,"node_attrs_equal_func","","",N,N],[6,"reassociate_func","","",N,N],[6,"copy_attr_func","","",N,N],[6,"get_type_attr_func","","",N,N],[6,"get_entity_attr_func","","",N,N],[6,"verify_node_func","","",N,N],[6,"verify_proj_node_func","","",N,N],[6,"dump_node_func","","",N,N],[6,"ir_prog_dump_func","","",N,N],[6,"ir_graph_dump_func","","",N,N],[6,"dump_node_vcgattr_func","","",N,N],[6,"dump_edge_vcgattr_func","","",N,N],[6,"dump_node_edge_func","","",N,N],[6,"dump_node_info_cb_t","","",N,N],[6,"optimization_state_t","","",N,N],[6,"lower_mux_callback","","",N,N],[6,"i_mapper_func","","",N,N],[6,"__builtin_va_list","","",N,N],[17,"cc_bits","","",N,N],[17,"cc_cdecl_set","","",N,N],[17,"_STDIO_H","","",N,N],[17,"_FEATURES_H","","",N,N],[17,"_DEFAULT_SOURCE","","",N,N],[17,"_BSD_SOURCE","","",N,N],[17,"_SVID_SOURCE","","",N,N],[17,"__USE_ISOC11","","",N,N],[17,"__USE_ISOC99","","",N,N],[17,"__USE_ISOC95","","",N,N],[17,"__USE_POSIX_IMPLICITLY","","",N,N],[17,"_POSIX_SOURCE","","",N,N],[17,"_POSIX_C_SOURCE","","",N,N],[17,"__USE_POSIX","","",N,N],[17,"__USE_POSIX2","","",N,N],[17,"__USE_POSIX199309","","",N,N],[17,"__USE_POSIX199506","","",N,N],[17,"__USE_XOPEN2K","","",N,N],[17,"__USE_XOPEN2K8","","",N,N],[17,"_ATFILE_SOURCE","","",N,N],[17,"__USE_MISC","","",N,N],[17,"__USE_BSD","","",N,N],[17,"__USE_SVID","","",N,N],[17,"__USE_ATFILE","","",N,N],[17,"__USE_FORTIFY_LEVEL","","",N,N],[17,"_STDC_PREDEF_H","","",N,N],[17,"__STDC_IEC_559__","","",N,N],[17,"__STDC_IEC_559_COMPLEX__","","",N,N],[17,"__STDC_ISO_10646__","","",N,N],[17,"__STDC_NO_THREADS__","","",N,N],[17,"__GNU_LIBRARY__","","",N,N],[17,"__GLIBC__","","",N,N],[17,"__GLIBC_MINOR__","","",N,N],[17,"_SYS_CDEFS_H","","",N,N],[17,"__WORDSIZE","","",N,N],[17,"__WORDSIZE_TIME64_COMPAT32","","",N,N],[17,"__SYSCALL_WORDSIZE","","",N,N],[17,"_BITS_TYPES_H","","",N,N],[17,"_BITS_TYPESIZES_H","","",N,N],[17,"__OFF_T_MATCHES_OFF64_T","","",N,N],[17,"__INO_T_MATCHES_INO64_T","","",N,N],[17,"__FD_SETSIZE","","",N,N],[17,"__FILE_defined","","",N,N],[17,"____FILE_defined","","",N,N],[17,"_G_config_h","","",N,N],[17,"____mbstate_t_defined","","",N,N],[17,"_G_HAVE_MMAP","","",N,N],[17,"_G_HAVE_MREMAP","","",N,N],[17,"_G_IO_IO_FILE_VERSION","","",N,N],[17,"_G_BUFSIZ","","",N,N],[17,"_IO_BUFSIZ","","",N,N],[17,"__GNUC_VA_LIST","","",N,N],[17,"_IO_UNIFIED_JUMPTABLES","","",N,N],[17,"EOF","","",N,N],[17,"_IOS_INPUT","","",N,N],[17,"_IOS_OUTPUT","","",N,N],[17,"_IOS_ATEND","","",N,N],[17,"_IOS_APPEND","","",N,N],[17,"_IOS_TRUNC","","",N,N],[17,"_IOS_NOCREATE","","",N,N],[17,"_IOS_NOREPLACE","","",N,N],[17,"_IOS_BIN","","",N,N],[17,"_IO_MAGIC","","",N,N],[17,"_OLD_STDIO_MAGIC","","",N,N],[17,"_IO_MAGIC_MASK","","",N,N],[17,"_IO_USER_BUF","","",N,N],[17,"_IO_UNBUFFERED","","",N,N],[17,"_IO_NO_READS","","",N,N],[17,"_IO_NO_WRITES","","",N,N],[17,"_IO_EOF_SEEN","","",N,N],[17,"_IO_ERR_SEEN","","",N,N],[17,"_IO_DELETE_DONT_CLOSE","","",N,N],[17,"_IO_LINKED","","",N,N],[17,"_IO_IN_BACKUP","","",N,N],[17,"_IO_LINE_BUF","","",N,N],[17,"_IO_TIED_PUT_GET","","",N,N],[17,"_IO_CURRENTLY_PUTTING","","",N,N],[17,"_IO_IS_APPENDING","","",N,N],[17,"_IO_IS_FILEBUF","","",N,N],[17,"_IO_BAD_SEEN","","",N,N],[17,"_IO_USER_LOCK","","",N,N],[17,"_IO_FLAGS2_MMAP","","",N,N],[17,"_IO_FLAGS2_NOTCANCEL","","",N,N],[17,"_IO_FLAGS2_USER_WBUF","","",N,N],[17,"_IO_SKIPWS","","",N,N],[17,"_IO_LEFT","","",N,N],[17,"_IO_RIGHT","","",N,N],[17,"_IO_INTERNAL","","",N,N],[17,"_IO_DEC","","",N,N],[17,"_IO_OCT","","",N,N],[17,"_IO_HEX","","",N,N],[17,"_IO_SHOWBASE","","",N,N],[17,"_IO_SHOWPOINT","","",N,N],[17,"_IO_UPPERCASE","","",N,N],[17,"_IO_SHOWPOS","","",N,N],[17,"_IO_SCIENTIFIC","","",N,N],[17,"_IO_FIXED","","",N,N],[17,"_IO_UNITBUF","","",N,N],[17,"_IO_STDIO","","",N,N],[17,"_IO_DONT_CLOSE","","",N,N],[17,"_IO_BOOLALPHA","","",N,N],[17,"_IOFBF","","",N,N],[17,"_IOLBF","","",N,N],[17,"_IONBF","","",N,N],[17,"BUFSIZ","","",N,N],[17,"SEEK_SET","","",N,N],[17,"SEEK_CUR","","",N,N],[17,"SEEK_END","","",N,N],[17,"P_tmpdir","","",N,N],[17,"L_tmpnam","","",N,N],[17,"TMP_MAX","","",N,N],[17,"FILENAME_MAX","","",N,N],[17,"L_ctermid","","",N,N],[17,"FOPEN_MAX","","",N,N],[17,"DEFAULT_CLONE_THRESHOLD","","",N,N],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,N],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,N],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,N],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,N],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,N],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,N],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,N],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,N],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,N],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,N],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,N],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,N],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"clone","","",15,[[["self"]],["dbg_info"]]],[11,"clone","","",16,[[["self"]],["type_dbg_info"]]],[11,"clone","","",17,[[["self"]],["ir_node"]]],[11,"clone","","",18,[[["self"]],["ir_op"]]],[11,"clone","","",19,[[["self"]],["ir_mode"]]],[11,"clone","","",20,[[["self"]],["ir_edge_t"]]],[11,"clone","","",21,[[["self"]],["ir_heights_t"]]],[11,"clone","","",22,[[["self"]],["ir_tarval"]]],[11,"clone","","",23,[[["self"]],["ir_type"]]],[11,"clone","","",24,[[["self"]],["ir_graph"]]],[11,"clone","","",25,[[["self"]],["ir_prog"]]],[11,"clone","","",26,[[["self"]],["ir_loop"]]],[11,"clone","","",27,[[["self"]],["ir_entity"]]],[11,"clone","","",28,[[["self"]],["ir_cdep"]]],[11,"clone","","",29,[[["self"]],["ir_initializer_t"]]],[11,"clone","","",30,[[["self"]],["ir_machine_triple_t"]]],[11,"clone","","",31,[[["self"]],["ir_switch_table"]]],[11,"clone","","",0,[[["self"]],["ir_asm_constraint"]]],[11,"clone","","",32,[[["self"]],["hook_entry"]]],[11,"clone","","",1,[[["self"]],["__fsid_t"]]],[11,"clone","","",2,[[["self"]],["__mbstate_t"]]],[11,"clone","","",12,[[["self"]],["__mbstate_t__bindgen_ty_1"]]],[11,"clone","","",3,[[["self"]],["_g_fpos_t"]]],[11,"clone","","",4,[[["self"]],["_g_fpos64_t"]]],[11,"clone","","",33,[[["self"]],["_io_jump_t"]]],[11,"clone","","",5,[[["self"]],["_io_marker"]]],[11,"clone","","",6,[[["self"]],["_io_file"]]],[11,"clone","","",34,[[["self"]],["_io_file_plus"]]],[11,"clone","","",7,[[["self"]],["src_loc_t"]]],[11,"clone","","",13,[[["self"]],["loop_element"]]],[11,"clone","","",35,[[["self"]],["obstack"]]],[11,"clone","","",8,[[["self"]],["i_call_record"]]],[11,"clone","","",9,[[["self"]],["i_instr_record"]]],[11,"clone","","",14,[[["self"]],["i_record"]]],[11,"clone","","",36,[[["self"]],["ir_intrinsics_map"]]],[11,"clone","","",37,[[["self"]],["ir_platform_define_t"]]],[11,"clone","","",38,[[["self"]],["ir_timer_t"]]],[11,"clone","","",10,[[["self"]],["vrp_attr"]]],[11,"clone","","",11,[[["self"]],["__va_list_tag"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]]],"paths":[[3,"ir_asm_constraint"],[3,"__fsid_t"],[3,"__mbstate_t"],[3,"_G_fpos_t"],[3,"_G_fpos64_t"],[3,"_IO_marker"],[3,"_IO_FILE"],[3,"src_loc_t"],[3,"i_call_record"],[3,"i_instr_record"],[3,"vrp_attr"],[3,"__va_list_tag"],[19,"__mbstate_t__bindgen_ty_1"],[19,"loop_element"],[19,"i_record"],[3,"dbg_info"],[3,"type_dbg_info"],[3,"ir_node"],[3,"ir_op"],[3,"ir_mode"],[3,"ir_edge_t"],[3,"ir_heights_t"],[3,"ir_tarval"],[3,"ir_type"],[3,"ir_graph"],[3,"ir_prog"],[3,"ir_loop"],[3,"ir_entity"],[3,"ir_cdep"],[3,"ir_initializer_t"],[3,"ir_machine_triple_t"],[3,"ir_switch_table"],[3,"hook_entry"],[3,"_IO_jump_t"],[3,"_IO_FILE_plus"],[3,"obstack"],[3,"ir_intrinsics_map"],[3,"ir_platform_define_t"],[3,"ir_timer_t"]]};
searchIndex["linked_hash_map"]={"doc":"A `HashMap` wrapper that holds key-value pairs in…","items":[[3,"LinkedHashMap","linked_hash_map","A linked hash map.",N,N],[3,"Iter","","An insertion-order iterator over a `LinkedHashMap`'s…",N,N],[3,"IterMut","","An insertion-order iterator over a `LinkedHashMap`'s…",N,N],[3,"IntoIter","","A consuming insertion-order iterator over a…",N,N],[3,"Entries","","An insertion-order iterator over a `LinkedHashMap`'s…",N,N],[3,"Keys","","An insertion-order iterator over a `LinkedHashMap`'s keys.",N,N],[3,"Values","","An insertion-order iterator over a `LinkedHashMap`'s values.",N,N],[3,"OccupiedEntry","","A view into a single occupied location in a `LinkedHashMap`.",N,N],[3,"VacantEntry","","A view into a single empty location in a `LinkedHashMap`.",N,N],[4,"Entry","","A view into a single location in a map, which may be…",N,N],[13,"Occupied","","An occupied Entry.",0,N],[13,"Vacant","","A vacant Entry.",0,N],[11,"new","","Creates a linked hash map.",1,[[],["self"]]],[11,"with_capacity","","Creates an empty linked hash map with the given initial…",1,[[["usize"]],["self"]]],[11,"with_hasher","","Creates an empty linked hash map with the given initial…",1,[[["s"]],["self"]]],[11,"with_capacity_and_hasher","","Creates an empty linked hash map with the given initial…",1,[[["usize"],["s"]],["self"]]],[11,"reserve","","Reserves capacity for at least `additional` more elements…",1,[[["self"],["usize"]]]],[11,"shrink_to_fit","","Shrinks the capacity of the map as much as possible. It…",1,[[["self"]]]],[11,"entry","","Gets the given key's corresponding entry in the map for…",1,[[["self"],["k"]],["entry"]]],[11,"entries","","Returns an iterator visiting all entries in insertion…",1,[[["self"]],["entries"]]],[11,"insert","","Inserts a key-value pair into the map. If the key already…",1,[[["self"],["k"],["v"]],["option"]]],[11,"contains_key","","Checks if the map contains the given key.",1,[[["self"],["q"]],["bool"]]],[11,"get","","Returns the value corresponding to the key in the map.",1,[[["self"],["q"]],["option"]]],[11,"get_mut","","Returns the mutable reference corresponding to the key in…",1,[[["self"],["q"]],["option"]]],[11,"get_refresh","","Returns the value corresponding to the key in the map.",1,[[["self"],["q"]],["option"]]],[11,"remove","","Removes and returns the value corresponding to the key…",1,[[["self"],["q"]],["option"]]],[11,"capacity","","Returns the maximum number of key-value pairs the map can…",1,[[["self"]],["usize"]]],[11,"pop_front","","Removes the first entry.",1,[[["self"]],["option"]]],[11,"front","","Gets the first entry.",1,[[["self"]],["option"]]],[11,"pop_back","","Removes the last entry.",1,[[["self"]],["option"]]],[11,"back","","Gets the last entry.",1,[[["self"]],["option"]]],[11,"len","","Returns the number of key-value pairs in the map.",1,[[["self"]],["usize"]]],[11,"is_empty","","Returns whether the map is currently empty.",1,[[["self"]],["bool"]]],[11,"hasher","","Returns a reference to the map's hasher.",1,[[["self"]],["s"]]],[11,"clear","","Clears the map of all key-value pairs.",1,[[["self"]]]],[11,"iter","","Returns a double-ended iterator visiting all key-value…",1,[[["self"]],["iter"]]],[11,"iter_mut","","Returns a double-ended iterator visiting all key-value…",1,[[["self"]],["itermut"]]],[11,"keys","","Returns a double-ended iterator visiting all key in order…",1,[[["self"]],["keys"]]],[11,"values","","Returns a double-ended iterator visiting all values in…",1,[[["self"]],["values"]]],[11,"key","","Returns the entry key",0,[[["self"]],["k"]]],[11,"or_insert","","Ensures a value is in the entry by inserting the default…",0,[[["self"],["v"]],["v"]]],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of…",0,[[["self"],["f"]],["v"]]],[11,"key","","Gets a reference to the entry key",2,[[["self"]],["k"]]],[11,"get","","Gets a reference to the value in the entry.",2,[[["self"]],["v"]]],[11,"get_mut","","Gets a mutable reference to the value in the entry.",2,[[["self"]],["v"]]],[11,"into_mut","","Converts the OccupiedEntry into a mutable reference to the…",2,[[["self"]],["v"]]],[11,"insert","","Sets the value of the entry, and returns the entry's old…",2,[[["self"],["v"]],["v"]]],[11,"remove","","Takes the value out of the entry, and returns it",2,[[["self"]],["v"]]],[11,"key","","Gets a reference to the entry key",3,[[["self"]],["k"]]],[11,"insert","","Sets the value of the entry with the VacantEntry's key,…",3,[[["self"],["v"]],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into_iter","","",1,[[["self"]],["i"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into_iter","","",4,[[["self"]],["i"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into_iter","","",5,[[["self"]],["i"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into_iter","","",6,[[["self"]],["i"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into_iter","","",7,[[["self"]],["i"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into_iter","","",8,[[["self"]],["i"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into_iter","","",9,[[["self"]],["i"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"next_back","","",4,[[["self"]],["option"]]],[11,"next_back","","",5,[[["self"]],["option"]]],[11,"next_back","","",6,[[["self"]],["option"]]],[11,"next_back","","",8,[[["self"]],["option"]]],[11,"next_back","","",9,[[["self"]],["option"]]],[11,"cmp","","",1,[[["self"],["self"]],["ordering"]]],[11,"eq","","",1,[[["self"],["self"]],["bool"]]],[11,"clone","","",1,[[["self"]],["self"]]],[11,"clone","","",4,[[["self"]],["self"]]],[11,"clone","","",6,[[["self"]],["self"]]],[11,"clone","","",8,[[["self"]],["self"]]],[11,"clone","","",9,[[["self"]],["self"]]],[11,"into_iter","","",1,[[["self"]],["intoiter"]]],[11,"extend","","",1,[[["self"],["i"]]]],[11,"extend","","",1,[[["self"],["i"]]]],[11,"drop","","",1,[[["self"]]]],[11,"drop","","",6,[[["self"]]]],[11,"partial_cmp","","",1,[[["self"],["self"]],["option",["ordering"]]]],[11,"lt","","",1,[[["self"],["self"]],["bool"]]],[11,"le","","",1,[[["self"],["self"]],["bool"]]],[11,"ge","","",1,[[["self"],["self"]],["bool"]]],[11,"gt","","",1,[[["self"],["self"]],["bool"]]],[11,"len","","",4,[[["self"]],["usize"]]],[11,"len","","",5,[[["self"]],["usize"]]],[11,"len","","",6,[[["self"]],["usize"]]],[11,"len","","",8,[[["self"]],["usize"]]],[11,"len","","",9,[[["self"]],["usize"]]],[11,"next","","",4,[[["self"]],["option"]]],[11,"size_hint","","",4,N],[11,"next","","",5,[[["self"]],["option"]]],[11,"size_hint","","",5,N],[11,"next","","",6,[[["self"]],["option"]]],[11,"size_hint","","",6,N],[11,"next","","",7,[[["self"]],["option",["occupiedentry"]]]],[11,"size_hint","","",7,N],[11,"next","","",8,[[["self"]],["option"]]],[11,"size_hint","","",8,N],[11,"next","","",9,[[["self"]],["option"]]],[11,"size_hint","","",9,N],[11,"default","","",1,[[],["self"]]],[11,"fmt","","Returns a string that lists the key-value pairs in…",1,[[["self"],["formatter"]],["result"]]],[11,"index","","",1,[[["self"],["q"]],["v"]]],[11,"index_mut","","",1,[[["self"],["q"]],["v"]]],[11,"hash","","",1,[[["self"],["h"]]]],[11,"from_iter","","",1,[[["i"]],["self"]]]],"paths":[[4,"Entry"],[3,"LinkedHashMap"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Entries"],[3,"Keys"],[3,"Values"]]};
searchIndex["lock_api"]={"doc":"This library provides type-safe and fully-featured `Mutex`…","items":[[3,"GuardSend","lock_api","Marker type which indicates that the Guard type for a lock…",N,N],[3,"GuardNoSend","","Marker type which indicates that the Guard type for a lock…",N,N],[3,"Mutex","","A mutual exclusion primitive useful for protecting shared…",N,N],[3,"MutexGuard","","An RAII implementation of a \"scoped lock\" of a mutex. When…",N,N],[3,"MappedMutexGuard","","An RAII mutex guard returned by `MutexGuard::map`, which…",N,N],[3,"ReentrantMutex","","A mutex which can be recursively locked by a single thread.",N,N],[3,"ReentrantMutexGuard","","An RAII implementation of a \"scoped lock\" of a reentrant…",N,N],[3,"MappedReentrantMutexGuard","","An RAII mutex guard returned by…",N,N],[3,"RwLock","","A reader-writer lock",N,N],[3,"RwLockReadGuard","","RAII structure used to release the shared read access of a…",N,N],[3,"RwLockWriteGuard","","RAII structure used to release the exclusive write access…",N,N],[3,"RwLockUpgradableReadGuard","","RAII structure used to release the upgradable read access…",N,N],[3,"MappedRwLockReadGuard","","An RAII read lock guard returned by…",N,N],[3,"MappedRwLockWriteGuard","","An RAII write lock guard returned by…",N,N],[11,"new","","Creates a new mutex in an unlocked state ready for use.",0,[[["t"]],["mutex"]]],[11,"into_inner","","Consumes this mutex, returning the underlying data.",0,[[["self"]],["t"]]],[11,"lock","","Acquires a mutex, blocking the current thread until it is…",0,[[["self"]],["mutexguard"]]],[11,"try_lock","","Attempts to acquire this lock.",0,[[["self"]],["option",["mutexguard"]]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",0,[[["self"]],["t"]]],[11,"force_unlock","","Forcibly unlocks the mutex.",0,[[["self"]]]],[11,"raw","","Returns the underlying raw mutex object.",0,[[["self"]],["r"]]],[11,"force_unlock_fair","","Forcibly unlocks the mutex using a fair unlock procotol.",0,[[["self"]]]],[11,"try_lock_for","","Attempts to acquire this lock until a timeout is reached.",0,N],[11,"try_lock_until","","Attempts to acquire this lock until a timeout is reached.",0,N],[11,"mutex","","Returns a reference to the original `Mutex` object.",1,[[["self"]],["mutex"]]],[11,"map","","Makes a new `MappedMutexGuard` for a component of the…",1,[[["self"],["f"]],["mappedmutexguard"]]],[11,"try_map","","Attempts to make a new `MappedMutexGuard` for a component…",1,[[["self"],["f"]],["result",["mappedmutexguard"]]]],[11,"unlocked","","Temporarily unlocks the mutex to execute the given function.",1,[[["self"],["f"]],["u"]]],[11,"unlock_fair","","Unlocks the mutex using a fair unlock protocol.",1,[[["self"]]]],[11,"unlocked_fair","","Temporarily unlocks the mutex to execute the given function.",1,[[["self"],["f"]],["u"]]],[11,"bump","","Temporarily yields the mutex to a waiting thread if there…",1,[[["self"]]]],[11,"map","","Makes a new `MappedMutexGuard` for a component of the…",2,[[["self"],["f"]],["mappedmutexguard"]]],[11,"try_map","","Attempts to make a new `MappedMutexGuard` for a component…",2,[[["self"],["f"]],["result",["mappedmutexguard"]]]],[11,"unlock_fair","","Unlocks the mutex using a fair unlock protocol.",2,[[["self"]]]],[11,"new","","Creates a new reentrant mutex in an unlocked state ready…",3,[[["t"]],["reentrantmutex"]]],[11,"into_inner","","Consumes this mutex, returning the underlying data.",3,[[["self"]],["t"]]],[11,"lock","","Acquires a reentrant mutex, blocking the current thread…",3,[[["self"]],["reentrantmutexguard"]]],[11,"try_lock","","Attempts to acquire this lock.",3,[[["self"]],["option",["reentrantmutexguard"]]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",3,[[["self"]],["t"]]],[11,"force_unlock","","Forcibly unlocks the mutex.",3,[[["self"]]]],[11,"raw","","Returns the underlying raw mutex object.",3,[[["self"]],["r"]]],[11,"force_unlock_fair","","Forcibly unlocks the mutex using a fair unlock protocol.",3,[[["self"]]]],[11,"try_lock_for","","Attempts to acquire this lock until a timeout is reached.",3,N],[11,"try_lock_until","","Attempts to acquire this lock until a timeout is reached.",3,N],[11,"remutex","","Returns a reference to the original `ReentrantMutex` object.",4,[[["self"]],["reentrantmutex"]]],[11,"map","","Makes a new `MappedReentrantMutexGuard` for a component of…",4,[[["self"],["f"]],["mappedreentrantmutexguard"]]],[11,"try_map","","Attempts to make a new `MappedReentrantMutexGuard` for a…",4,[[["self"],["f"]],["result",["mappedreentrantmutexguard"]]]],[11,"unlocked","","Temporarily unlocks the mutex to execute the given function.",4,[[["self"],["f"]],["u"]]],[11,"unlock_fair","","Unlocks the mutex using a fair unlock protocol.",4,[[["self"]]]],[11,"unlocked_fair","","Temporarily unlocks the mutex to execute the given function.",4,[[["self"],["f"]],["u"]]],[11,"bump","","Temporarily yields the mutex to a waiting thread if there…",4,[[["self"]]]],[11,"map","","Makes a new `MappedReentrantMutexGuard` for a component of…",5,[[["self"],["f"]],["mappedreentrantmutexguard"]]],[11,"try_map","","Attempts to make a new `MappedReentrantMutexGuard` for a…",5,[[["self"],["f"]],["result",["mappedreentrantmutexguard"]]]],[11,"unlock_fair","","Unlocks the mutex using a fair unlock protocol.",5,[[["self"]]]],[11,"new","","Creates a new instance of an `RwLock<T>` which is unlocked.",6,[[["t"]],["rwlock"]]],[11,"into_inner","","Consumes this `RwLock`, returning the underlying data.",6,[[["self"]],["t"]]],[11,"read","","Locks this `RwLock` with shared read access, blocking the…",6,[[["self"]],["rwlockreadguard"]]],[11,"try_read","","Attempts to acquire this `RwLock` with shared read access.",6,[[["self"]],["option",["rwlockreadguard"]]]],[11,"write","","Locks this `RwLock` with exclusive write access, blocking…",6,[[["self"]],["rwlockwriteguard"]]],[11,"try_write","","Attempts to lock this `RwLock` with exclusive write access.",6,[[["self"]],["option",["rwlockwriteguard"]]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",6,[[["self"]],["t"]]],[11,"force_unlock_read","","Forcibly unlocks a read lock.",6,[[["self"]]]],[11,"force_unlock_write","","Forcibly unlocks a write lock.",6,[[["self"]]]],[11,"raw","","Returns the underlying raw reader-writer lock object.",6,[[["self"]],["r"]]],[11,"force_unlock_read_fair","","Forcibly unlocks a read lock using a fair unlock procotol.",6,[[["self"]]]],[11,"force_unlock_write_fair","","Forcibly unlocks a write lock using a fair unlock procotol.",6,[[["self"]]]],[11,"try_read_for","","Attempts to acquire this `RwLock` with shared read access…",6,N],[11,"try_read_until","","Attempts to acquire this `RwLock` with shared read access…",6,N],[11,"try_write_for","","Attempts to acquire this `RwLock` with exclusive write…",6,N],[11,"try_write_until","","Attempts to acquire this `RwLock` with exclusive write…",6,N],[11,"read_recursive","","Locks this `RwLock` with shared read access, blocking the…",6,[[["self"]],["rwlockreadguard"]]],[11,"try_read_recursive","","Attempts to acquire this `RwLock` with shared read access.",6,[[["self"]],["option",["rwlockreadguard"]]]],[11,"try_read_recursive_for","","Attempts to acquire this `RwLock` with shared read access…",6,N],[11,"try_read_recursive_until","","Attempts to acquire this `RwLock` with shared read access…",6,N],[11,"upgradable_read","","Locks this `RwLock` with upgradable read access, blocking…",6,[[["self"]],["rwlockupgradablereadguard"]]],[11,"try_upgradable_read","","Attempts to acquire this `RwLock` with upgradable read…",6,[[["self"]],["option",["rwlockupgradablereadguard"]]]],[11,"try_upgradable_read_for","","Attempts to acquire this `RwLock` with upgradable read…",6,N],[11,"try_upgradable_read_until","","Attempts to acquire this `RwLock` with upgradable read…",6,N],[11,"rwlock","","Returns a reference to the original reader-writer lock…",7,[[["self"]],["rwlock"]]],[11,"map","","Make a new `MappedRwLockReadGuard` for a component of the…",7,[[["self"],["f"]],["mappedrwlockreadguard"]]],[11,"try_map","","Attempts to make a new `MappedRwLockReadGuard` for a…",7,[[["self"],["f"]],["result",["mappedrwlockreadguard"]]]],[11,"unlocked","","Temporarily unlocks the `RwLock` to execute the given…",7,[[["self"],["f"]],["u"]]],[11,"unlock_fair","","Unlocks the `RwLock` using a fair unlock protocol.",7,[[["self"]]]],[11,"unlocked_fair","","Temporarily unlocks the `RwLock` to execute the given…",7,[[["self"],["f"]],["u"]]],[11,"bump","","Temporarily yields the `RwLock` to a waiting thread if…",7,[[["self"]]]],[11,"rwlock","","Returns a reference to the original reader-writer lock…",8,[[["self"]],["rwlock"]]],[11,"map","","Make a new `MappedRwLockWriteGuard` for a component of the…",8,[[["self"],["f"]],["mappedrwlockwriteguard"]]],[11,"try_map","","Attempts to make a new `MappedRwLockWriteGuard` for a…",8,[[["self"],["f"]],["result",["mappedrwlockwriteguard"]]]],[11,"unlocked","","Temporarily unlocks the `RwLock` to execute the given…",8,[[["self"],["f"]],["u"]]],[11,"downgrade","","Atomically downgrades a write lock into a read lock…",8,[[["self"]],["rwlockreadguard"]]],[11,"downgrade_to_upgradable","","Atomically downgrades a write lock into an upgradable read…",8,[[["self"]],["rwlockupgradablereadguard"]]],[11,"unlock_fair","","Unlocks the `RwLock` using a fair unlock protocol.",8,[[["self"]]]],[11,"unlocked_fair","","Temporarily unlocks the `RwLock` to execute the given…",8,[[["self"],["f"]],["u"]]],[11,"bump","","Temporarily yields the `RwLock` to a waiting thread if…",8,[[["self"]]]],[11,"rwlock","","Returns a reference to the original reader-writer lock…",9,[[["self"]],["rwlock"]]],[11,"unlocked","","Temporarily unlocks the `RwLock` to execute the given…",9,[[["self"],["f"]],["u"]]],[11,"upgrade","","Atomically upgrades an upgradable read lock lock into a…",9,[[["self"]],["rwlockwriteguard"]]],[11,"try_upgrade","","Tries to atomically upgrade an upgradable read lock into a…",9,[[["self"]],["result",["rwlockwriteguard"]]]],[11,"unlock_fair","","Unlocks the `RwLock` using a fair unlock protocol.",9,[[["self"]]]],[11,"unlocked_fair","","Temporarily unlocks the `RwLock` to execute the given…",9,[[["self"],["f"]],["u"]]],[11,"bump","","Temporarily yields the `RwLock` to a waiting thread if…",9,[[["self"]]]],[11,"downgrade","","Atomically downgrades an upgradable read lock lock into a…",9,[[["self"]],["rwlockreadguard"]]],[11,"try_upgrade_for","","Tries to atomically upgrade an upgradable read lock into a…",9,N],[11,"try_upgrade_until","","Tries to atomically upgrade an upgradable read lock into a…",9,N],[11,"map","","Make a new `MappedRwLockReadGuard` for a component of the…",10,[[["self"],["f"]],["mappedrwlockreadguard"]]],[11,"try_map","","Attempts to make a new `MappedRwLockReadGuard` for a…",10,[[["self"],["f"]],["result",["mappedrwlockreadguard"]]]],[11,"unlock_fair","","Unlocks the `RwLock` using a fair unlock protocol.",10,[[["self"]]]],[11,"map","","Make a new `MappedRwLockWriteGuard` for a component of the…",11,[[["self"],["f"]],["mappedrwlockwriteguard"]]],[11,"try_map","","Attempts to make a new `MappedRwLockWriteGuard` for a…",11,[[["self"],["f"]],["result",["mappedrwlockwriteguard"]]]],[11,"downgrade","","Atomically downgrades a write lock into a read lock…",11,[[["self"]],["mappedrwlockreadguard"]]],[11,"unlock_fair","","Unlocks the `RwLock` using a fair unlock protocol.",11,[[["self"]]]],[8,"RawMutex","","Basic operations for a mutex.",N,N],[18,"INIT","","Initial value for an unlocked mutex.",12,N],[16,"GuardMarker","","Marker type which determines whether a lock guard should…",12,N],[10,"lock","","Acquires this mutex, blocking the current thread until it…",12,[[["self"]]]],[10,"try_lock","","Attempts to acquire this mutex without blocking.",12,[[["self"]],["bool"]]],[10,"unlock","","Unlocks this mutex.",12,[[["self"]]]],[8,"RawMutexFair","","Additional methods for mutexes which support fair unlocking.",N,N],[10,"unlock_fair","","Unlocks this mutex using a fair unlock protocol.",13,[[["self"]]]],[11,"bump","","Temporarily yields the mutex to a waiting thread if there…",13,[[["self"]]]],[8,"RawMutexTimed","","Additional methods for mutexes which support locking with…",N,N],[16,"Duration","","Duration type used for `try_lock_for`.",14,N],[16,"Instant","","Instant type used for `try_lock_until`.",14,N],[10,"try_lock_for","","Attempts to acquire this lock until a timeout is reached.",14,N],[10,"try_lock_until","","Attempts to acquire this lock until a timeout is reached.",14,N],[8,"GetThreadId","","Helper trait which returns a non-zero thread ID.",N,N],[18,"INIT","","Initial value.",15,N],[10,"nonzero_thread_id","","Returns a non-zero thread ID which identifies the current…",15,[[["self"]],["usize"]]],[8,"RawRwLock","","Basic operations for a reader-writer lock.",N,N],[18,"INIT","","Initial value for an unlocked `RwLock`.",16,N],[16,"GuardMarker","","Marker type which determines whether a lock guard should…",16,N],[10,"lock_shared","","Acquires a shared lock, blocking the current thread until…",16,[[["self"]]]],[10,"try_lock_shared","","Attempts to acquire a shared lock without blocking.",16,[[["self"]],["bool"]]],[10,"unlock_shared","","Releases a shared lock.",16,[[["self"]]]],[10,"lock_exclusive","","Acquires an exclusive lock, blocking the current thread…",16,[[["self"]]]],[10,"try_lock_exclusive","","Attempts to acquire an exclusive lock without blocking.",16,[[["self"]],["bool"]]],[10,"unlock_exclusive","","Releases an exclusive lock.",16,[[["self"]]]],[8,"RawRwLockFair","","Additional methods for RwLocks which support fair unlocking.",N,N],[10,"unlock_shared_fair","","Releases a shared lock using a fair unlock protocol.",17,[[["self"]]]],[10,"unlock_exclusive_fair","","Releases an exclusive lock using a fair unlock protocol.",17,[[["self"]]]],[11,"bump_shared","","Temporarily yields a shared lock to a waiting thread if…",17,[[["self"]]]],[11,"bump_exclusive","","Temporarily yields an exclusive lock to a waiting thread…",17,[[["self"]]]],[8,"RawRwLockDowngrade","","Additional methods for RwLocks which support atomically…",N,N],[10,"downgrade","","Atomically downgrades an exclusive lock into a shared lock…",18,[[["self"]]]],[8,"RawRwLockTimed","","Additional methods for RwLocks which support locking with…",N,N],[16,"Duration","","Duration type used for `try_lock_for`.",19,N],[16,"Instant","","Instant type used for `try_lock_until`.",19,N],[10,"try_lock_shared_for","","Attempts to acquire a shared lock until a timeout is…",19,N],[10,"try_lock_shared_until","","Attempts to acquire a shared lock until a timeout is…",19,N],[10,"try_lock_exclusive_for","","Attempts to acquire an exclusive lock until a timeout is…",19,N],[10,"try_lock_exclusive_until","","Attempts to acquire an exclusive lock until a timeout is…",19,N],[8,"RawRwLockRecursive","","Additional methods for RwLocks which support recursive…",N,N],[10,"lock_shared_recursive","","Acquires a shared lock without deadlocking in case of a…",20,[[["self"]]]],[10,"try_lock_shared_recursive","","Attempts to acquire a shared lock without deadlocking in…",20,[[["self"]],["bool"]]],[8,"RawRwLockRecursiveTimed","","Additional methods for RwLocks which support recursive…",N,N],[10,"try_lock_shared_recursive_for","","Attempts to acquire a shared lock until a timeout is…",21,N],[10,"try_lock_shared_recursive_until","","Attempts to acquire a shared lock until a timeout is…",21,N],[8,"RawRwLockUpgrade","","Additional methods for RwLocks which support atomically…",N,N],[10,"lock_upgradable","","Acquires an upgradable lock, blocking the current thread…",22,[[["self"]]]],[10,"try_lock_upgradable","","Attempts to acquire an upgradable lock without blocking.",22,[[["self"]],["bool"]]],[10,"unlock_upgradable","","Releases an upgradable lock.",22,[[["self"]]]],[10,"upgrade","","Upgrades an upgradable lock to an exclusive lock.",22,[[["self"]]]],[10,"try_upgrade","","Attempts to upgrade an upgradable lock to an exclusive…",22,[[["self"]],["bool"]]],[8,"RawRwLockUpgradeFair","","Additional methods for RwLocks which support upgradable…",N,N],[10,"unlock_upgradable_fair","","Releases an upgradable lock using a fair unlock protocol.",23,[[["self"]]]],[11,"bump_upgradable","","Temporarily yields an upgradable lock to a waiting thread…",23,[[["self"]]]],[8,"RawRwLockUpgradeDowngrade","","Additional methods for RwLocks which support upgradable…",N,N],[10,"downgrade_upgradable","","Downgrades an upgradable lock to a shared lock.",24,[[["self"]]]],[10,"downgrade_to_upgradable","","Downgrades an exclusive lock to an upgradable lock.",24,[[["self"]]]],[8,"RawRwLockUpgradeTimed","","Additional methods for RwLocks which support upgradable…",N,N],[10,"try_lock_upgradable_for","","Attempts to acquire an upgradable lock until a timeout is…",25,N],[10,"try_lock_upgradable_until","","Attempts to acquire an upgradable lock until a timeout is…",25,N],[10,"try_upgrade_for","","Attempts to upgrade an upgradable lock to an exclusive…",25,N],[10,"try_upgrade_until","","Attempts to upgrade an upgradable lock to an exclusive…",25,N],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"deref","","",1,[[["self"]],["t"]]],[11,"deref","","",2,[[["self"]],["t"]]],[11,"deref","","",4,[[["self"]],["t"]]],[11,"deref","","",5,[[["self"]],["t"]]],[11,"deref","","",7,[[["self"]],["t"]]],[11,"deref","","",8,[[["self"]],["t"]]],[11,"deref","","",9,[[["self"]],["t"]]],[11,"deref","","",10,[[["self"]],["t"]]],[11,"deref","","",11,[[["self"]],["t"]]],[11,"deref_mut","","",1,[[["self"]],["t"]]],[11,"deref_mut","","",2,[[["self"]],["t"]]],[11,"deref_mut","","",8,[[["self"]],["t"]]],[11,"deref_mut","","",11,[[["self"]],["t"]]],[11,"drop","","",1,[[["self"]]]],[11,"drop","","",2,[[["self"]]]],[11,"drop","","",4,[[["self"]]]],[11,"drop","","",5,[[["self"]]]],[11,"drop","","",7,[[["self"]]]],[11,"drop","","",8,[[["self"]]]],[11,"drop","","",9,[[["self"]]]],[11,"drop","","",10,[[["self"]]]],[11,"drop","","",11,[[["self"]]]],[11,"from","","",0,[[["t"]],["mutex"]]],[11,"from","","",3,[[["t"]],["reentrantmutex"]]],[11,"from","","",6,[[["t"]],["rwlock"]]],[11,"default","","",0,[[],["mutex"]]],[11,"default","","",3,[[],["reentrantmutex"]]],[11,"default","","",6,[[],["rwlock"]]],[18,"INIT","","Initial value for an unlocked mutex.",12,N],[11,"bump","","Temporarily yields the mutex to a waiting thread if there…",13,[[["self"]]]],[18,"INIT","","Initial value.",15,N],[18,"INIT","","Initial value for an unlocked `RwLock`.",16,N],[11,"bump_shared","","Temporarily yields a shared lock to a waiting thread if…",17,[[["self"]]]],[11,"bump_exclusive","","Temporarily yields an exclusive lock to a waiting thread…",17,[[["self"]]]],[11,"bump_upgradable","","Temporarily yields an upgradable lock to a waiting thread…",23,[[["self"]]]]],"paths":[[3,"Mutex"],[3,"MutexGuard"],[3,"MappedMutexGuard"],[3,"ReentrantMutex"],[3,"ReentrantMutexGuard"],[3,"MappedReentrantMutexGuard"],[3,"RwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"RwLockUpgradableReadGuard"],[3,"MappedRwLockReadGuard"],[3,"MappedRwLockWriteGuard"],[8,"RawMutex"],[8,"RawMutexFair"],[8,"RawMutexTimed"],[8,"GetThreadId"],[8,"RawRwLock"],[8,"RawRwLockFair"],[8,"RawRwLockDowngrade"],[8,"RawRwLockTimed"],[8,"RawRwLockRecursive"],[8,"RawRwLockRecursiveTimed"],[8,"RawRwLockUpgrade"],[8,"RawRwLockUpgradeFair"],[8,"RawRwLockUpgradeDowngrade"],[8,"RawRwLockUpgradeTimed"],[3,"GuardSend"],[3,"GuardNoSend"]]};
searchIndex["log"]={"doc":"A lightweight logging facade.","items":[[3,"LogRecord","log","The \"payload\" of a log message.",N,N],[3,"LogMetadata","","Metadata about a log message.",N,N],[3,"LogLocation","","The location of a log message.",N,N],[3,"MaxLogLevelFilter","","A token providing read and write access to the global…",N,N],[3,"SetLoggerError","","The type returned by `set_logger` if `set_logger` has…",N,N],[3,"ShutdownLoggerError","","The type returned by `shutdown_logger_raw` if…",N,N],[4,"LogLevel","","An enum representing the available verbosity levels of the…",N,N],[13,"Error","","The \"error\" level.",0,N],[13,"Warn","","The \"warn\" level.",0,N],[13,"Info","","The \"info\" level.",0,N],[13,"Debug","","The \"debug\" level.",0,N],[13,"Trace","","The \"trace\" level.",0,N],[4,"LogLevelFilter","","An enum representing the available verbosity level filters…",N,N],[13,"Off","","A level lower than all log levels.",1,N],[13,"Error","","Corresponds to the `Error` log level.",1,N],[13,"Warn","","Corresponds to the `Warn` log level.",1,N],[13,"Info","","Corresponds to the `Info` log level.",1,N],[13,"Debug","","Corresponds to the `Debug` log level.",1,N],[13,"Trace","","Corresponds to the `Trace` log level.",1,N],[5,"max_log_level","","Returns the current maximum log level.",N,[[],["loglevelfilter"]]],[5,"set_logger","","Sets the global logger.",N,[[["m"]],["result",["setloggererror"]]]],[5,"set_logger_raw","","Sets the global logger from a raw pointer.",N,[[["m"]],["result",["setloggererror"]]]],[5,"shutdown_logger","","Shuts down the global logger.",N,[[],["result",["box","shutdownloggererror"]]]],[5,"shutdown_logger_raw","","Shuts down the global logger.",N,[[],["result",["shutdownloggererror"]]]],[8,"Log","","A trait encapsulating the operations required of a logger",N,N],[10,"enabled","","Determines if a log message with the specified metadata…",2,[[["self"],["logmetadata"]],["bool"]]],[10,"log","","Logs the `LogRecord`.",2,[[["self"],["logrecord"]]]],[11,"max","","Returns the most verbose logging level.",0,[[],["loglevel"]]],[11,"to_log_level_filter","","Converts the `LogLevel` to the equivalent `LogLevelFilter`.",0,[[["self"]],["loglevelfilter"]]],[11,"max","","Returns the most verbose logging level filter.",1,[[],["loglevelfilter"]]],[11,"to_log_level","","Converts `self` to the equivalent `LogLevel`.",1,[[["self"]],["option",["loglevel"]]]],[11,"args","","The message body.",3,[[["self"]],["arguments"]]],[11,"metadata","","Metadata about the log directive.",3,[[["self"]],["logmetadata"]]],[11,"location","","The location of the log directive.",3,[[["self"]],["loglocation"]]],[11,"level","","The verbosity level of the message.",3,[[["self"]],["loglevel"]]],[11,"target","","The name of the target of the directive.",3,[[["self"]],["str"]]],[11,"level","","The verbosity level of the message.",4,[[["self"]],["loglevel"]]],[11,"target","","The name of the target of the directive.",4,[[["self"]],["str"]]],[11,"module_path","","The module path of the message.",5,[[["self"]],["str"]]],[11,"file","","The source file containing the message.",5,[[["self"]],["str"]]],[11,"line","","The line containing the message.",5,[[["self"]],["u32"]]],[11,"get","","Gets the current maximum log level filter.",6,[[["self"]],["loglevelfilter"]]],[11,"set","","Sets the maximum log level.",6,[[["self"],["loglevelfilter"]]]],[14,"log","","The standard logging macro.",N,N],[14,"error","","Logs a message at the error level.",N,N],[14,"warn","","Logs a message at the warn level.",N,N],[14,"info","","Logs a message at the info level.",N,N],[14,"debug","","Logs a message at the debug level.",N,N],[14,"trace","","Logs a message at the trace level.",N,N],[14,"log_enabled","","Determines if a message logged at the specified level in…",N,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"cmp","","",0,[[["self"],["loglevel"]],["ordering"]]],[11,"cmp","","",1,[[["self"],["loglevelfilter"]],["ordering"]]],[11,"eq","","",0,[[["self"],["loglevel"]],["bool"]]],[11,"eq","","",0,[[["self"],["loglevelfilter"]],["bool"]]],[11,"eq","","",1,[[["self"],["loglevelfilter"]],["bool"]]],[11,"eq","","",1,[[["self"],["loglevel"]],["bool"]]],[11,"clone","","",0,[[["self"]],["loglevel"]]],[11,"clone","","",1,[[["self"]],["loglevelfilter"]]],[11,"clone","","",5,[[["self"]],["loglocation"]]],[11,"partial_cmp","","",0,[[["self"],["loglevel"]],["option",["ordering"]]]],[11,"partial_cmp","","",0,[[["self"],["loglevelfilter"]],["option",["ordering"]]]],[11,"partial_cmp","","",1,[[["self"],["loglevelfilter"]],["option",["ordering"]]]],[11,"partial_cmp","","",1,[[["self"],["loglevel"]],["option",["ordering"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"from_str","","",0,[[["str"]],["result",["loglevel"]]]],[11,"from_str","","",1,[[["str"]],["result",["loglevelfilter"]]]],[11,"description","","",7,[[["self"]],["str"]]],[11,"description","","",8,[[["self"]],["str"]]]],"paths":[[4,"LogLevel"],[4,"LogLevelFilter"],[8,"Log"],[3,"LogRecord"],[3,"LogMetadata"],[3,"LogLocation"],[3,"MaxLogLevelFilter"],[3,"SetLoggerError"],[3,"ShutdownLoggerError"]]};
searchIndex["lowering"]={"doc":"","items":[[5,"run_backend","lowering","",N,N],[14,"derive_ptr_debug","","",N,N]],"paths":[]};
searchIndex["matches"]={"doc":"","items":[[14,"matches","matches","Check if an expression matches a refutable pattern.",N,N],[14,"assert_matches","","Assert that an expression matches a refutable pattern.",N,N],[14,"debug_assert_matches","","Assert that an expression matches a refutable pattern…",N,N]],"paths":[]};
searchIndex["memchr"]={"doc":"The `memchr` crate provides heavily optimized routines for…","items":[[3,"Memchr","memchr","An iterator for `memchr`.",N,N],[3,"Memchr2","","An iterator for `memchr2`.",N,N],[3,"Memchr3","","An iterator for `memchr3`.",N,N],[5,"memchr_iter","","An iterator over all occurrences of the needle in a…",N,N],[5,"memchr2_iter","","An iterator over all occurrences of the needles in a…",N,N],[5,"memchr3_iter","","An iterator over all occurrences of the needles in a…",N,N],[5,"memrchr_iter","","An iterator over all occurrences of the needle in a…",N,N],[5,"memrchr2_iter","","An iterator over all occurrences of the needles in a…",N,N],[5,"memrchr3_iter","","An iterator over all occurrences of the needles in a…",N,N],[5,"memchr","","Search for the first occurrence of a byte in a slice.",N,N],[5,"memchr2","","Like `memchr`, but searches for two bytes instead of one.",N,N],[5,"memchr3","","Like `memchr`, but searches for three bytes instead of one.",N,N],[5,"memrchr","","Search for the last occurrence of a byte in a slice.",N,N],[5,"memrchr2","","Like `memrchr`, but searches for two bytes instead of one.",N,N],[5,"memrchr3","","Like `memrchr`, but searches for three bytes instead of one.",N,N],[11,"new","","Creates a new iterator that yields all positions of needle…",0,N],[11,"new","","Creates a new iterator that yields all positions of needle…",1,N],[11,"new","","Create a new `Memchr3` that's initialized to zero with a…",2,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"into_iter","","",0,[[["self"]],["i"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into_iter","","",1,[[["self"]],["i"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into_iter","","",2,[[["self"]],["i"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"next_back","","",0,[[["self"]],["option"]]],[11,"next_back","","",1,[[["self"]],["option"]]],[11,"next_back","","",2,[[["self"]],["option"]]],[11,"next","","",0,[[["self"]],["option",["usize"]]]],[11,"size_hint","","",0,N],[11,"next","","",1,[[["self"]],["option",["usize"]]]],[11,"size_hint","","",1,N],[11,"next","","",2,[[["self"]],["option",["usize"]]]],[11,"size_hint","","",2,N]],"paths":[[3,"Memchr"],[3,"Memchr2"],[3,"Memchr3"]]};
searchIndex["memmap"]={"doc":"A cross-platform Rust API for memory mapped buffers.","items":[[3,"MmapOptions","memmap","A memory map builder, providing advanced options and flags…",N,N],[3,"Mmap","","An immutable memory mapped buffer.",N,N],[3,"MmapMut","","A mutable memory mapped buffer.",N,N],[11,"new","","Creates a new set of options for configuring and creating…",0,[[],["mmapoptions"]]],[11,"offset","","Configures the memory map to start at byte `offset` from…",0,[[["self"],["u64"]],["self"]]],[11,"len","","Configures the created memory mapped buffer to be `len`…",0,[[["self"],["usize"]],["self"]]],[11,"stack","","Configures the anonymous memory map to be suitable for a…",0,[[["self"]],["self"]]],[11,"map","","Creates a read-only memory map backed by a file.",0,[[["self"],["file"]],["result",["mmap"]]]],[11,"map_exec","","Creates a readable and executable memory map backed by a…",0,[[["self"],["file"]],["result",["mmap"]]]],[11,"map_mut","","Creates a writeable memory map backed by a file.",0,[[["self"],["file"]],["result",["mmapmut"]]]],[11,"map_copy","","Creates a copy-on-write memory map backed by a file.",0,[[["self"],["file"]],["result",["mmapmut"]]]],[11,"map_anon","","Creates an anonymous memory map.",0,[[["self"]],["result",["mmapmut"]]]],[11,"map","","Creates a read-only memory map backed by a file.",1,[[["file"]],["result",["mmap"]]]],[11,"make_mut","","Transition the memory map to be writable.",1,[[["self"]],["result",["mmapmut"]]]],[11,"map_mut","","Creates a writeable memory map backed by a file.",2,[[["file"]],["result",["mmapmut"]]]],[11,"map_anon","","Creates an anonymous memory map.",2,[[["usize"]],["result",["mmapmut"]]]],[11,"flush","","Flushes outstanding memory map modifications to disk.",2,[[["self"]],["result"]]],[11,"flush_async","","Asynchronously flushes outstanding memory map…",2,[[["self"]],["result"]]],[11,"flush_range","","Flushes outstanding memory map modifications in the range…",2,[[["self"],["usize"],["usize"]],["result"]]],[11,"flush_async_range","","Asynchronously flushes outstanding memory map…",2,[[["self"],["usize"],["usize"]],["result"]]],[11,"make_read_only","","Returns an immutable version of this memory mapped buffer.",2,[[["self"]],["result",["mmap"]]]],[11,"make_exec","","Transition the memory map to be readable and executable.",2,[[["self"]],["result",["mmap"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["mmapoptions"]]],[11,"as_mut","","",2,N],[11,"as_ref","","",1,N],[11,"as_ref","","",2,N],[11,"default","","",0,[[],["mmapoptions"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"deref","","",1,N],[11,"deref","","",2,N],[11,"deref_mut","","",2,N]],"paths":[[3,"MmapOptions"],[3,"Mmap"],[3,"MmapMut"]]};
searchIndex["mime"]={"doc":"Mime","items":[[3,"Mime","mime","Mime, or Media Type. Encapsulates common registers types.",N,N],[12,"0","","",0,N],[12,"1","","",0,N],[12,"2","","",0,N],[4,"TopLevel","","",N,N],[13,"Star","","",1,N],[13,"Text","","",1,N],[13,"Image","","",1,N],[13,"Audio","","",1,N],[13,"Video","","",1,N],[13,"Application","","",1,N],[13,"Multipart","","",1,N],[13,"Message","","",1,N],[13,"Model","","",1,N],[13,"Ext","","",1,N],[4,"SubLevel","","",N,N],[13,"Star","","",2,N],[13,"Plain","","",2,N],[13,"Html","","",2,N],[13,"Xml","","",2,N],[13,"Javascript","","",2,N],[13,"Css","","",2,N],[13,"EventStream","","",2,N],[13,"Json","","",2,N],[13,"WwwFormUrlEncoded","","",2,N],[13,"Msgpack","","",2,N],[13,"OctetStream","","",2,N],[13,"FormData","","",2,N],[13,"Png","","",2,N],[13,"Gif","","",2,N],[13,"Bmp","","",2,N],[13,"Jpeg","","",2,N],[13,"Mpeg","","",2,N],[13,"Mp4","","",2,N],[13,"Ogg","","",2,N],[13,"Ext","","",2,N],[4,"Attr","","",N,N],[13,"Charset","","",3,N],[13,"Boundary","","",3,N],[13,"Q","","",3,N],[13,"Ext","","",3,N],[4,"Value","","",N,N],[13,"Utf8","","",4,N],[13,"Ext","","",4,N],[6,"Param","","",N,N],[11,"as_str","","",1,[[["self"]],["str"]]],[11,"as_str","","",2,[[["self"]],["str"]]],[11,"as_str","","",3,[[["self"]],["str"]]],[11,"as_str","","",4,[[["self"]],["str"]]],[11,"get_param","","",0,[[["self"],["a"]],["option",["value"]]]],[14,"mime","","Easily create a Mime without having to import so many enums.",N,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"cmp","","",0,[[["self"],["mime"]],["ordering"]]],[11,"cmp","","",1,[[["self"],["toplevel"]],["ordering"]]],[11,"cmp","","",2,[[["self"],["sublevel"]],["ordering"]]],[11,"cmp","","",3,[[["self"],["attr"]],["ordering"]]],[11,"cmp","","",4,[[["self"],["value"]],["ordering"]]],[11,"eq","","",0,[[["self"],["mime"]],["bool"]]],[11,"eq","","",1,[[["self"],["toplevel"]],["bool"]]],[11,"eq","","",1,[[["self"],["string"]],["bool"]]],[11,"eq","","",1,[[["self"],["str"]],["bool"]]],[11,"eq","","",1,[[["self"],["str"]],["bool"]]],[11,"eq","","",2,[[["self"],["sublevel"]],["bool"]]],[11,"eq","","",2,[[["self"],["string"]],["bool"]]],[11,"eq","","",2,[[["self"],["str"]],["bool"]]],[11,"eq","","",2,[[["self"],["str"]],["bool"]]],[11,"eq","","",3,[[["self"],["attr"]],["bool"]]],[11,"eq","","",3,[[["self"],["string"]],["bool"]]],[11,"eq","","",3,[[["self"],["str"]],["bool"]]],[11,"eq","","",3,[[["self"],["str"]],["bool"]]],[11,"eq","","",4,[[["self"],["value"]],["bool"]]],[11,"eq","","",4,[[["self"],["string"]],["bool"]]],[11,"eq","","",4,[[["self"],["str"]],["bool"]]],[11,"eq","","",4,[[["self"],["str"]],["bool"]]],[11,"clone","","",0,[[["self"]],["mime"]]],[11,"clone","","",1,[[["self"]],["toplevel"]]],[11,"clone","","",2,[[["self"]],["sublevel"]]],[11,"clone","","",3,[[["self"]],["attr"]]],[11,"clone","","",4,[[["self"]],["value"]]],[11,"partial_cmp","","",0,[[["self"],["mime"]],["option",["ordering"]]]],[11,"lt","","",0,[[["self"],["mime"]],["bool"]]],[11,"le","","",0,[[["self"],["mime"]],["bool"]]],[11,"gt","","",0,[[["self"],["mime"]],["bool"]]],[11,"ge","","",0,[[["self"],["mime"]],["bool"]]],[11,"partial_cmp","","",1,[[["self"],["toplevel"]],["option",["ordering"]]]],[11,"lt","","",1,[[["self"],["toplevel"]],["bool"]]],[11,"le","","",1,[[["self"],["toplevel"]],["bool"]]],[11,"gt","","",1,[[["self"],["toplevel"]],["bool"]]],[11,"ge","","",1,[[["self"],["toplevel"]],["bool"]]],[11,"partial_cmp","","",2,[[["self"],["sublevel"]],["option",["ordering"]]]],[11,"lt","","",2,[[["self"],["sublevel"]],["bool"]]],[11,"le","","",2,[[["self"],["sublevel"]],["bool"]]],[11,"gt","","",2,[[["self"],["sublevel"]],["bool"]]],[11,"ge","","",2,[[["self"],["sublevel"]],["bool"]]],[11,"partial_cmp","","",3,[[["self"],["attr"]],["option",["ordering"]]]],[11,"lt","","",3,[[["self"],["attr"]],["bool"]]],[11,"le","","",3,[[["self"],["attr"]],["bool"]]],[11,"gt","","",3,[[["self"],["attr"]],["bool"]]],[11,"ge","","",3,[[["self"],["attr"]],["bool"]]],[11,"partial_cmp","","",4,[[["self"],["value"]],["option",["ordering"]]]],[11,"lt","","",4,[[["self"],["value"]],["bool"]]],[11,"le","","",4,[[["self"],["value"]],["bool"]]],[11,"gt","","",4,[[["self"],["value"]],["bool"]]],[11,"ge","","",4,[[["self"],["value"]],["bool"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"from_str","","",1,[[["str"]],["result",["toplevel"]]]],[11,"from_str","","",2,[[["str"]],["result",["sublevel"]]]],[11,"from_str","","",3,[[["str"]],["result",["attr"]]]],[11,"from_str","","",4,[[["str"]],["result",["value"]]]],[11,"from_str","","",0,[[["str"]],["result",["mime"]]]],[11,"deref","","",1,[[["self"]],["str"]]],[11,"deref","","",2,[[["self"]],["str"]]],[11,"deref","","",3,[[["self"]],["str"]]],[11,"deref","","",4,[[["self"]],["str"]]],[11,"hash","","",0,N],[11,"hash","","",1,N],[11,"hash","","",2,N],[11,"hash","","",3,N],[11,"hash","","",4,N]],"paths":[[3,"Mime"],[4,"TopLevel"],[4,"SubLevel"],[4,"Attr"],[4,"Value"]]};
searchIndex["mio"]={"doc":"A fast, low-level IO library for Rust focusing on…","items":[[3,"Poll","mio","Polls for readiness events on all registered values.",N,N],[3,"Registration","","Handle to a user space `Poll` registration.",N,N],[3,"SetReadiness","","Updates the readiness state of the associated…",N,N],[3,"PollOpt","","Options supplied when registering an `Evented` handle with…",N,N],[3,"Ready","","A set of readiness event kinds",N,N],[3,"Token","","Associates readiness notifications with [`Evented`] handles.",N,N],[12,"0","","",0,N],[3,"Events","","A collection of readiness events.",N,N],[11,"empty","","Return a `PollOpt` representing no set options.",1,[[],["pollopt"]]],[11,"edge","","Return a `PollOpt` representing edge-triggered…",1,[[],["pollopt"]]],[11,"level","","Return a `PollOpt` representing level-triggered…",1,[[],["pollopt"]]],[11,"oneshot","","Return a `PollOpt` representing oneshot notifications.",1,[[],["pollopt"]]],[11,"is_edge","","Returns true if the options include edge-triggered…",1,[[["self"]],["bool"]]],[11,"is_level","","Returns true if the options include level-triggered…",1,[[["self"]],["bool"]]],[11,"is_oneshot","","Returns true if the options includes oneshot.",1,[[["self"]],["bool"]]],[11,"contains","","Returns true if `self` is a superset of `other`.",1,[[["self"],["pollopt"]],["bool"]]],[11,"insert","","Adds all options represented by `other` into `self`.",1,[[["self"],["pollopt"]]]],[11,"remove","","Removes all options represented by `other` from `self`.",1,[[["self"],["pollopt"]]]],[11,"empty","","Returns the empty `Ready` set.",2,[[],["ready"]]],[11,"readable","","Returns a `Ready` representing readable readiness.",2,[[],["ready"]]],[11,"writable","","Returns a `Ready` representing writable readiness.",2,[[],["ready"]]],[11,"all","","Returns a `Ready` representing readiness for all operations.",2,[[],["ready"]]],[11,"is_empty","","Returns true if `Ready` is the empty set",2,[[["self"]],["bool"]]],[11,"is_readable","","Returns true if the value includes readable readiness",2,[[["self"]],["bool"]]],[11,"is_writable","","Returns true if the value includes writable readiness",2,[[["self"]],["bool"]]],[11,"insert","","Adds all readiness represented by `other` into `self`.",2,[[["self"],["t"]]]],[11,"remove","","Removes all options represented by `other` from `self`.",2,[[["self"],["t"]]]],[11,"contains","","Returns true if `self` is a superset of `other`.",2,[[["self"],["t"]],["bool"]]],[11,"from_usize","","Create a `Ready` instance using the given `usize`…",2,[[["usize"]],["ready"]]],[11,"as_usize","","Returns a `usize` representation of the `Ready` value.",2,[[["self"]],["usize"]]],[11,"new","","Return a new `Poll` handle.",3,[[],["result",["poll"]]]],[11,"register","","Register an `Evented` handle with the `Poll` instance.",3,[[["self"],["e"],["token"],["ready"],["pollopt"]],["result"]]],[11,"reregister","","Re-register an `Evented` handle with the `Poll` instance.",3,[[["self"],["e"],["token"],["ready"],["pollopt"]],["result"]]],[11,"deregister","","Deregister an `Evented` handle with the `Poll` instance.",3,[[["self"],["e"]],["result"]]],[11,"poll","","Wait for readiness events",3,[[["self"],["events"],["option",["duration"]]],["result",["usize"]]]],[11,"poll_interruptible","","Like `poll`, but may be interrupted by a signal",3,[[["self"],["events"],["option",["duration"]]],["result",["usize"]]]],[11,"with_capacity","","Return a new `Events` capable of holding up to `capacity`…",4,[[["usize"]],["events"]]],[11,"capacity","","Returns the number of `Event` values that `self` can hold.",4,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if `self` contains no `Event` values.",4,[[["self"]],["bool"]]],[11,"iter","","Returns an iterator over the `Event` values.",4,[[["self"]],["iter"]]],[11,"clear","","Clearing all `Event` values from container explicitly.",4,[[["self"]]]],[11,"new2","","Create and return a new `Registration` and the associated…",5,N],[11,"readiness","","Returns the registration's current readiness.",6,[[["self"]],["ready"]]],[11,"set_readiness","","Set the registration's readiness",6,[[["self"],["ready"]],["result"]]],[0,"net","","Networking primitives",N,N],[3,"TcpListener","mio::net","A structure representing a socket server",N,N],[3,"TcpStream","","A non-blocking TCP stream between a local socket and a…",N,N],[3,"UdpSocket","","A User Datagram Protocol socket.",N,N],[11,"connect","","Create a new TCP stream and issue a non-blocking connect…",7,[[["socketaddr"]],["result",["tcpstream"]]]],[11,"connect_stream","","Creates a new `TcpStream` from the pending socket inside…",7,[[["tcpstream"],["socketaddr"]],["result",["tcpstream"]]]],[11,"from_stream","","Creates a new `TcpStream` from a standard `net::TcpStream`.",7,[[["tcpstream"]],["result",["tcpstream"]]]],[11,"peer_addr","","Returns the socket address of the remote peer of this TCP…",7,[[["self"]],["result",["socketaddr"]]]],[11,"local_addr","","Returns the socket address of the local half of this TCP…",7,[[["self"]],["result",["socketaddr"]]]],[11,"try_clone","","Creates a new independently owned handle to the underlying…",7,[[["self"]],["result",["tcpstream"]]]],[11,"shutdown","","Shuts down the read, write, or both halves of this…",7,[[["self"],["shutdown"]],["result"]]],[11,"set_nodelay","","Sets the value of the `TCP_NODELAY` option on this socket.",7,[[["self"],["bool"]],["result"]]],[11,"nodelay","","Gets the value of the `TCP_NODELAY` option on this socket.",7,[[["self"]],["result",["bool"]]]],[11,"set_recv_buffer_size","","Sets the value of the `SO_RCVBUF` option on this socket.",7,[[["self"],["usize"]],["result"]]],[11,"recv_buffer_size","","Gets the value of the `SO_RCVBUF` option on this socket.",7,[[["self"]],["result",["usize"]]]],[11,"set_send_buffer_size","","Sets the value of the `SO_SNDBUF` option on this socket.",7,[[["self"],["usize"]],["result"]]],[11,"send_buffer_size","","Gets the value of the `SO_SNDBUF` option on this socket.",7,[[["self"]],["result",["usize"]]]],[11,"set_keepalive","","Sets whether keepalive messages are enabled to be sent on…",7,[[["self"],["option",["duration"]]],["result"]]],[11,"keepalive","","Returns whether keepalive messages are enabled on this…",7,[[["self"]],["result",["option"]]]],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",7,[[["self"],["u32"]],["result"]]],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",7,[[["self"]],["result",["u32"]]]],[11,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",7,[[["self"],["bool"]],["result"]]],[11,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",7,[[["self"]],["result",["bool"]]]],[11,"set_linger","","Sets the value for the `SO_LINGER` option on this socket.",7,[[["self"],["option",["duration"]]],["result"]]],[11,"linger","","Gets the value of the `SO_LINGER` option on this socket.",7,[[["self"]],["result",["option"]]]],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",7,[[["self"]],["result",["option"]]]],[11,"peek","","Receives data on the socket from the remote address to…",7,N],[11,"read_bufs","","Read in a list of buffers all at once.",7,N],[11,"write_bufs","","Write a list of buffers all at once.",7,N],[11,"bind","","Convenience method to bind a new TCP listener to the…",8,[[["socketaddr"]],["result",["tcplistener"]]]],[11,"from_std","","Creates a new `TcpListener` from an instance of a…",8,[[["tcplistener"]],["result",["tcplistener"]]]],[11,"accept","","Accepts a new `TcpStream`.",8,[[["self"]],["result"]]],[11,"accept_std","","Accepts a new `std::net::TcpStream`.",8,[[["self"]],["result"]]],[11,"local_addr","","Returns the local socket address of this listener.",8,[[["self"]],["result",["socketaddr"]]]],[11,"try_clone","","Creates a new independently owned handle to the underlying…",8,[[["self"]],["result",["tcplistener"]]]],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",8,[[["self"],["u32"]],["result"]]],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",8,[[["self"]],["result",["u32"]]]],[11,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",8,[[["self"],["bool"]],["result"]]],[11,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",8,[[["self"]],["result",["bool"]]]],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",8,[[["self"]],["result",["option"]]]],[11,"bind","","Creates a UDP socket from the given address.",9,[[["socketaddr"]],["result",["udpsocket"]]]],[11,"from_socket","","Creates a new mio-wrapped socket from an underlying and…",9,[[["udpsocket"]],["result",["udpsocket"]]]],[11,"local_addr","","Returns the socket address that this socket was created…",9,[[["self"]],["result",["socketaddr"]]]],[11,"try_clone","","Creates a new independently owned handle to the underlying…",9,[[["self"]],["result",["udpsocket"]]]],[11,"send_to","","Sends data on the socket to the given address. On success,…",9,N],[11,"recv_from","","Receives data from the socket. On success, returns the…",9,N],[11,"send","","Sends data on the socket to the address previously bound…",9,N],[11,"recv","","Receives data from the socket previously bound with…",9,N],[11,"connect","","Connects the UDP socket setting the default destination…",9,[[["self"],["socketaddr"]],["result"]]],[11,"set_broadcast","","Sets the value of the `SO_BROADCAST` option for this socket.",9,[[["self"],["bool"]],["result"]]],[11,"broadcast","","Gets the value of the `SO_BROADCAST` option for this socket.",9,[[["self"]],["result",["bool"]]]],[11,"set_multicast_loop_v4","","Sets the value of the `IP_MULTICAST_LOOP` option for this…",9,[[["self"],["bool"]],["result"]]],[11,"multicast_loop_v4","","Gets the value of the `IP_MULTICAST_LOOP` option for this…",9,[[["self"]],["result",["bool"]]]],[11,"set_multicast_ttl_v4","","Sets the value of the `IP_MULTICAST_TTL` option for this…",9,[[["self"],["u32"]],["result"]]],[11,"multicast_ttl_v4","","Gets the value of the `IP_MULTICAST_TTL` option for this…",9,[[["self"]],["result",["u32"]]]],[11,"set_multicast_loop_v6","","Sets the value of the `IPV6_MULTICAST_LOOP` option for…",9,[[["self"],["bool"]],["result"]]],[11,"multicast_loop_v6","","Gets the value of the `IPV6_MULTICAST_LOOP` option for…",9,[[["self"]],["result",["bool"]]]],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",9,[[["self"],["u32"]],["result"]]],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",9,[[["self"]],["result",["u32"]]]],[11,"join_multicast_v4","","Executes an operation of the `IP_ADD_MEMBERSHIP` type.",9,[[["self"],["ipv4addr"],["ipv4addr"]],["result"]]],[11,"join_multicast_v6","","Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.",9,[[["self"],["ipv6addr"],["u32"]],["result"]]],[11,"leave_multicast_v4","","Executes an operation of the `IP_DROP_MEMBERSHIP` type.",9,[[["self"],["ipv4addr"],["ipv4addr"]],["result"]]],[11,"leave_multicast_v6","","Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.",9,[[["self"],["ipv6addr"],["u32"]],["result"]]],[11,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",9,[[["self"],["bool"]],["result"]]],[11,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",9,[[["self"]],["result",["bool"]]]],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",9,[[["self"]],["result",["option"]]]],[0,"event","mio","Readiness event types and utilities.",N,N],[3,"Events","mio::event","A collection of readiness events.",N,N],[3,"Iter","","[`Events`] iterator.",N,N],[3,"Event","","An readiness event returned by [`Poll::poll`].",N,N],[8,"Evented","","A value that may be registered with `Poll`",N,N],[10,"register","","Register `self` with the given `Poll` instance.",10,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[10,"reregister","","Re-register `self` with the given `Poll` instance.",10,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[10,"deregister","","Deregister `self` from the given `Poll` instance",10,[[["self"],["poll"]],["result"]]],[0,"unix","mio","Unix only extensions",N,N],[3,"EventedFd","mio::unix","Adapter for `RawFd` providing an [`Evented`] implementation.",N,N],[12,"0","","",11,N],[3,"UnixReady","","Unix specific extensions to `Ready`",N,N],[11,"from","mio","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into_iter","","",4,[[["self"]],["i"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","mio::event","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into_iter","","",13,[[["self"]],["i"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","mio::unix","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","mio::net","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"register","mio","",5,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"reregister","","",5,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"deregister","","",5,[[["self"],["poll"]],["result"]]],[11,"register","mio::unix","",11,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"reregister","","",11,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"deregister","","",11,[[["self"],["poll"]],["result"]]],[11,"register","mio::net","",7,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"reregister","","",7,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"deregister","","",7,[[["self"],["poll"]],["result"]]],[11,"register","","",8,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"reregister","","",8,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"deregister","","",8,[[["self"],["poll"]],["result"]]],[11,"register","","",9,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"reregister","","",9,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"deregister","","",9,[[["self"],["poll"]],["result"]]],[11,"cmp","mio","",1,[[["self"],["pollopt"]],["ordering"]]],[11,"cmp","","",2,[[["self"],["ready"]],["ordering"]]],[11,"cmp","mio::unix","",14,[[["self"],["unixready"]],["ordering"]]],[11,"cmp","mio","",0,[[["self"],["token"]],["ordering"]]],[11,"eq","","",1,[[["self"],["pollopt"]],["bool"]]],[11,"ne","","",1,[[["self"],["pollopt"]],["bool"]]],[11,"eq","","",2,[[["self"],["ready"]],["bool"]]],[11,"ne","","",2,[[["self"],["ready"]],["bool"]]],[11,"eq","mio::event","",12,[[["self"],["event"]],["bool"]]],[11,"ne","","",12,[[["self"],["event"]],["bool"]]],[11,"eq","mio::unix","",14,[[["self"],["unixready"]],["bool"]]],[11,"ne","","",14,[[["self"],["unixready"]],["bool"]]],[11,"eq","mio","",0,[[["self"],["token"]],["bool"]]],[11,"ne","","",0,[[["self"],["token"]],["bool"]]],[11,"from","mio::unix","",14,[[["ready"]],["unixready"]]],[11,"from","mio","",2,[[["unixready"]],["ready"]]],[11,"from","","",0,[[["usize"]],["token"]]],[11,"clone","","",1,[[["self"]],["pollopt"]]],[11,"clone","","",2,[[["self"]],["ready"]]],[11,"clone","mio::event","",12,[[["self"]],["event"]]],[11,"clone","mio","",6,[[["self"]],["setreadiness"]]],[11,"clone","mio::event","",13,[[["self"]],["iter"]]],[11,"clone","mio::unix","",14,[[["self"]],["unixready"]]],[11,"clone","mio","",0,[[["self"]],["token"]]],[11,"into_iter","","",4,N],[11,"drop","","",5,[[["self"]]]],[11,"partial_cmp","","",1,[[["self"],["pollopt"]],["option",["ordering"]]]],[11,"lt","","",1,[[["self"],["pollopt"]],["bool"]]],[11,"le","","",1,[[["self"],["pollopt"]],["bool"]]],[11,"gt","","",1,[[["self"],["pollopt"]],["bool"]]],[11,"ge","","",1,[[["self"],["pollopt"]],["bool"]]],[11,"partial_cmp","","",2,[[["self"],["ready"]],["option",["ordering"]]]],[11,"lt","","",2,[[["self"],["ready"]],["bool"]]],[11,"le","","",2,[[["self"],["ready"]],["bool"]]],[11,"gt","","",2,[[["self"],["ready"]],["bool"]]],[11,"ge","","",2,[[["self"],["ready"]],["bool"]]],[11,"partial_cmp","mio::unix","",14,[[["self"],["unixready"]],["option",["ordering"]]]],[11,"lt","","",14,[[["self"],["unixready"]],["bool"]]],[11,"le","","",14,[[["self"],["unixready"]],["bool"]]],[11,"gt","","",14,[[["self"],["unixready"]],["bool"]]],[11,"ge","","",14,[[["self"],["unixready"]],["bool"]]],[11,"partial_cmp","mio","",0,[[["self"],["token"]],["option",["ordering"]]]],[11,"lt","","",0,[[["self"],["token"]],["bool"]]],[11,"le","","",0,[[["self"],["token"]],["bool"]]],[11,"gt","","",0,[[["self"],["token"]],["bool"]]],[11,"ge","","",0,[[["self"],["token"]],["bool"]]],[11,"next","mio::event","",13,[[["self"]],["option",["event"]]]],[11,"fmt","mio","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","mio::event","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","mio","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","mio::event","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","mio","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","mio::unix","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","mio","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","mio::net","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"sub","mio","",1,[[["self"],["pollopt"]],["pollopt"]]],[11,"sub","","",2,[[["self"],["t"]],["ready"]]],[11,"sub","mio::unix","",14,[[["self"],["unixready"]],["unixready"]]],[11,"sub_assign","mio","",2,[[["self"],["t"]]]],[11,"bitand","","",1,[[["self"],["pollopt"]],["pollopt"]]],[11,"bitand","","",2,[[["self"],["t"]],["ready"]]],[11,"bitand","mio::unix","",14,[[["self"],["unixready"]],["unixready"]]],[11,"bitor","mio","",1,[[["self"],["pollopt"]],["pollopt"]]],[11,"bitor","","",2,[[["self"],["t"]],["ready"]]],[11,"bitor","mio::unix","",14,[[["self"],["unixready"]],["unixready"]]],[11,"bitxor","mio","",1,[[["self"],["pollopt"]],["pollopt"]]],[11,"bitxor","","",2,[[["self"],["t"]],["ready"]]],[11,"bitxor","mio::unix","",14,[[["self"],["unixready"]],["unixready"]]],[11,"bitand_assign","mio","",2,[[["self"],["t"]]]],[11,"bitor_assign","","",2,[[["self"],["t"]]]],[11,"bitxor_assign","","",2,[[["self"],["t"]]]],[11,"deref","mio::unix","",14,[[["self"]],["ready"]]],[11,"deref_mut","","",14,[[["self"]],["ready"]]],[11,"hash","mio","",0,N],[11,"read","mio::net","",7,N],[11,"write","","",7,N],[11,"flush","","",7,[[["self"]],["result"]]],[11,"from_raw_fd","","",7,[[["rawfd"]],["tcpstream"]]],[11,"from_raw_fd","","",8,[[["rawfd"]],["tcplistener"]]],[11,"from_raw_fd","","",9,[[["rawfd"]],["udpsocket"]]],[11,"as_raw_fd","mio","",3,[[["self"]],["rawfd"]]],[11,"as_raw_fd","mio::net","",7,[[["self"]],["rawfd"]]],[11,"as_raw_fd","","",8,[[["self"]],["rawfd"]]],[11,"as_raw_fd","","",9,[[["self"]],["rawfd"]]],[11,"into_raw_fd","","",7,[[["self"]],["rawfd"]]],[11,"into_raw_fd","","",8,[[["self"]],["rawfd"]]],[11,"into_raw_fd","","",9,[[["self"]],["rawfd"]]],[11,"new","mio::event","Creates a new `Event` containing `readiness` and `token`",12,[[["ready"],["token"]],["event"]]],[11,"readiness","","Returns the event's readiness.",12,[[["self"]],["ready"]]],[11,"token","","Returns the event's token.",12,[[["self"]],["token"]]],[11,"error","mio::unix","Returns a `Ready` representing error readiness.",14,[[],["unixready"]]],[11,"hup","","Returns a `Ready` representing HUP readiness.",14,[[],["unixready"]]],[11,"priority","","Returns a `Ready` representing priority (`EPOLLPRI`)…",14,[[],["unixready"]]],[11,"is_error","","Returns true if the value includes error readiness",14,[[["self"]],["bool"]]],[11,"is_hup","","Returns true if the value includes HUP readiness",14,[[["self"]],["bool"]]],[11,"is_priority","","Returns true if `Ready` contains priority (`EPOLLPRI`)…",14,[[["self"]],["bool"]]]],"paths":[[3,"Token"],[3,"PollOpt"],[3,"Ready"],[3,"Poll"],[3,"Events"],[3,"Registration"],[3,"SetReadiness"],[3,"TcpStream"],[3,"TcpListener"],[3,"UdpSocket"],[8,"Evented"],[3,"EventedFd"],[3,"Event"],[3,"Iter"],[3,"UnixReady"]]};
searchIndex["mio_extras"]={"doc":"Extra components for use with Mio.","items":[[0,"channel","mio_extras","Thread safe communication channel implementing `Evented`",N,N],[3,"Sender","mio_extras::channel","The sending half of a channel.",N,N],[3,"SyncSender","","The sending half of a synchronous channel.",N,N],[3,"Receiver","","The receiving half of a channel.",N,N],[4,"SendError","","An error returned from the `Sender::send` or…",N,N],[13,"Io","","An IO error.",0,N],[13,"Disconnected","","The receiving half of the channel has disconnected.",0,N],[4,"TrySendError","","An error returned from the `SyncSender::try_send` function.",N,N],[13,"Io","","An IO error.",1,N],[13,"Full","","Data could not be sent because it would require the callee…",1,N],[13,"Disconnected","","The receiving half of the channel has disconnected.",1,N],[5,"channel","","Creates a new asynchronous channel, where the `Receiver`…",N,N],[5,"sync_channel","","Creates a new synchronous, bounded channel where the…",N,N],[11,"send","","Attempts to send a value on this channel, returning it…",2,[[["self"],["t"]],["result",["senderror"]]]],[11,"send","","Sends a value on this synchronous channel.",3,[[["self"],["t"]],["result",["senderror"]]]],[11,"try_send","","Attempts to send a value on this channel without blocking.",3,[[["self"],["t"]],["result",["trysenderror"]]]],[11,"try_recv","","Attempts to return a pending value on this receiver…",4,[[["self"]],["result",["tryrecverror"]]]],[0,"timer","mio_extras","Timer optimized for I/O related operations",N,N],[3,"Timer","mio_extras::timer","A timer.",N,N],[3,"Builder","","Used to create a `Timer`.",N,N],[3,"Timeout","","A timeout, as returned by `Timer::set_timeout`.",N,N],[11,"tick_duration","","Set the tick duration.  Default is 100ms.",5,[[["self"],["duration"]],["builder"]]],[11,"num_slots","","Set the number of slots.  Default is 256.",5,[[["self"],["usize"]],["builder"]]],[11,"capacity","","Set the capacity.  Default is 65536.",5,[[["self"],["usize"]],["builder"]]],[11,"build","","Build a `Timer` with the parameters set on this `Builder`.",5,[[["self"]],["timer"]]],[11,"set_timeout","","Set a timeout.",6,[[["self"],["duration"],["t"]],["timeout"]]],[11,"cancel_timeout","","Cancel a timeout.",6,[[["self"],["timeout"]],["option"]]],[11,"poll","","Poll for an expired timer.",6,[[["self"]],["option"]]],[11,"from","mio_extras::channel","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","mio_extras::timer","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","mio_extras::channel","",0,[[["senderror"]],["senderror"]]],[11,"from","","",0,[[["error"]],["senderror"]]],[11,"from","","",1,[[["trysenderror"]],["trysenderror"]]],[11,"from","","",1,[[["senderror"]],["trysenderror"]]],[11,"from","","",1,[[["error"]],["trysenderror"]]],[11,"clone","","",2,[[["self"]],["sender"]]],[11,"clone","","",3,[[["self"]],["syncsender"]]],[11,"clone","mio_extras::timer","",7,[[["self"]],["timeout"]]],[11,"default","","",5,[[],["builder"]]],[11,"default","","",6,[[],["timer"]]],[11,"fmt","mio_extras::channel","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","mio_extras::timer","",7,[[["self"],["formatter"]],["result"]]],[11,"description","mio_extras::channel","",0,[[["self"]],["str"]]],[11,"description","","",1,[[["self"]],["str"]]],[11,"register","","",4,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"reregister","","",4,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"deregister","","",4,[[["self"],["poll"]],["result"]]],[11,"register","mio_extras::timer","",6,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"reregister","","",6,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"deregister","","",6,[[["self"],["poll"]],["result"]]]],"paths":[[4,"SendError"],[4,"TrySendError"],[3,"Sender"],[3,"SyncSender"],[3,"Receiver"],[3,"Builder"],[3,"Timer"],[3,"Timeout"]]};
searchIndex["mjrt"]={"doc":"","items":[[17,"STATIC_LIB","mjrt","",N,N],[17,"LINKER_FLAGS","","",N,N],[17,"LINKER_LIBS","","",N,N]],"paths":[]};
searchIndex["mjtest"]={"doc":"","items":[[4,"SyntaxAndSemanticFilePath","mjtest","",N,N],[13,"Valid","","",0,N],[13,"Invalid","","",0,N],[4,"SyntaxTestCase","","",N,N],[13,"Valid","","",1,N],[13,"Invalid","","",1,N],[4,"SemanticTestCase","","",N,N],[13,"Valid","","",2,N],[13,"Invalid","","",2,N],[8,"QuotingWormhole","","",N,N],[11,"to_json","","",3,[[["self"]],["string"]]],[11,"from_json","","",3,[[["str"]],["self"]]],[11,"path","","",0,[[["self"]],["pathbuf"]]],[11,"file_name","","",0,[[["self"]],["str"]]],[11,"all","","",1,[[],["result",["vec","error"]]]],[11,"all","","",2,[[],["result",["vec","error"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",1,[[["syntaxandsemanticfilepath"]],["self"]]],[11,"from","","",2,[[["syntaxandsemanticfilepath"]],["self"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"deref","","",1,N],[11,"deref","","",2,N],[11,"serialize","","",0,[[["self"],["__s"]],["result"]]],[11,"serialize","","",1,[[["self"],["__s"]],["result"]]],[11,"serialize","","",2,[[["self"],["__s"]],["result"]]],[11,"deserialize","","",0,[[["__d"]],["result"]]],[11,"deserialize","","",1,[[["__d"]],["result"]]],[11,"deserialize","","",2,[[["__d"]],["result"]]],[11,"to_tokens","","",1,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",2,[[["self"],["tokenstream"]]]]],"paths":[[4,"SyntaxAndSemanticFilePath"],[4,"SyntaxTestCase"],[4,"SemanticTestCase"],[8,"QuotingWormhole"]]};
searchIndex["mjtest_macros"]={"doc":"","items":[[14,"gen_syntax_tests","mjtest_macros","",N,N],[14,"gen_semantic_tests","","",N,N]],"paths":[]};
searchIndex["net2"]={"doc":"Extensions to `std::net` networking types.","items":[[3,"TcpBuilder","net2","An \"in progress\" TCP socket which has not yet been…",N,N],[3,"UdpBuilder","","An \"in progress\" UDP socket which has not yet been…",N,N],[11,"new_v4","","Constructs a new TcpBuilder with the `AF_INET` domain, the…",0,[[],["result",["tcpbuilder"]]]],[11,"new_v6","","Constructs a new TcpBuilder with the `AF_INET6` domain,…",0,[[],["result",["tcpbuilder"]]]],[11,"bind","","Binds this socket to the specified address.",0,[[["self"],["t"]],["result",["tcpbuilder"]]]],[11,"listen","","Mark a socket as ready to accept incoming connection…",0,[[["self"],["i32"]],["result",["tcplistener"]]]],[11,"connect","","Initiate a connection on this socket to the specified…",0,[[["self"],["t"]],["result",["tcpstream"]]]],[11,"to_tcp_stream","","Converts this builder into a `TcpStream`",0,[[["self"]],["result",["tcpstream"]]]],[11,"to_tcp_listener","","Converts this builder into a `TcpListener`",0,[[["self"]],["result",["tcplistener"]]]],[11,"local_addr","","Returns the address of the local half of this TCP socket.",0,[[["self"]],["result",["socketaddr"]]]],[11,"new_v4","","Constructs a new UdpBuilder with the `AF_INET` domain, the…",1,[[],["result",["udpbuilder"]]]],[11,"new_v6","","Constructs a new UdpBuilder with the `AF_INET6` domain,…",1,[[],["result",["udpbuilder"]]]],[11,"bind","","Binds this socket to the specified address.",1,[[["self"],["t"]],["result",["udpsocket"]]]],[11,"ttl","","Sets the value for the `IP_TTL` option on this socket.",0,[[["self"],["u32"]],["result"]]],[11,"only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",0,[[["self"],["bool"]],["result"]]],[11,"reuse_address","","Set value for the `SO_REUSEADDR` option on this socket.",0,[[["self"],["bool"]],["result"]]],[11,"get_reuse_address","","Check the `SO_REUSEADDR` option on this socket.",0,[[["self"]],["result",["bool"]]]],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",0,[[["self"]],["result",["option"]]]],[11,"ttl","","Sets the value for the `IP_TTL` option on this socket.",1,[[["self"],["u32"]],["result"]]],[11,"only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",1,[[["self"],["bool"]],["result"]]],[11,"reuse_address","","Set value for the `SO_REUSEADDR` option on this socket.",1,[[["self"],["bool"]],["result"]]],[11,"get_reuse_address","","Check the `SO_REUSEADDR` option on this socket.",1,[[["self"]],["result",["bool"]]]],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",1,[[["self"]],["result",["option"]]]],[0,"unix","","Unix-specific extensions to the `std::net` types.",N,N],[8,"UnixTcpBuilderExt","net2::unix","Unix-specific extensions for the `TcpBuilder` type in this…",N,N],[10,"reuse_port","","Set value for the `SO_REUSEPORT` option on this socket.",2,[[["self"],["bool"]],["result"]]],[10,"get_reuse_port","","Check the value of the `SO_REUSEPORT` option on this socket.",2,[[["self"]],["result",["bool"]]]],[8,"UnixUdpBuilderExt","","Unix-specific extensions for the `UdpBuilder` type in this…",N,N],[10,"reuse_port","","Set value for the `SO_REUSEPORT` option on this socket.",3,[[["self"],["bool"]],["result"]]],[10,"get_reuse_port","","Check the value of the `SO_REUSEPORT` option on this socket.",3,[[["self"]],["result",["bool"]]]],[8,"TcpStreamExt","net2","Extension methods for the standard [`TcpStream`…",N,N],[10,"set_nodelay","","Sets the value of the `TCP_NODELAY` option on this socket.",4,[[["self"],["bool"]],["result"]]],[10,"nodelay","","Gets the value of the `TCP_NODELAY` option on this socket.",4,[[["self"]],["result",["bool"]]]],[10,"set_recv_buffer_size","","Sets the value of the `SO_RCVBUF` option on this socket.",4,[[["self"],["usize"]],["result"]]],[10,"recv_buffer_size","","Gets the value of the `SO_RCVBUF` option on this socket.",4,[[["self"]],["result",["usize"]]]],[10,"set_send_buffer_size","","Sets the value of the `SO_SNDBUF` option on this socket.",4,[[["self"],["usize"]],["result"]]],[10,"send_buffer_size","","Gets the value of the `SO_SNDBUF` option on this socket.",4,[[["self"]],["result",["usize"]]]],[10,"set_keepalive_ms","","Sets whether keepalive messages are enabled to be sent on…",4,[[["self"],["option",["u32"]]],["result"]]],[10,"keepalive_ms","","Returns whether keepalive messages are enabled on this…",4,[[["self"]],["result",["option"]]]],[10,"set_keepalive","","Sets whether keepalive messages are enabled to be sent on…",4,[[["self"],["option",["duration"]]],["result"]]],[10,"keepalive","","Returns whether keepalive messages are enabled on this…",4,[[["self"]],["result",["option"]]]],[10,"set_read_timeout_ms","","Sets the `SO_RCVTIMEO` option for this socket.",4,[[["self"],["option",["u32"]]],["result"]]],[10,"set_read_timeout","","Sets the `SO_RCVTIMEO` option for this socket.",4,[[["self"],["option",["duration"]]],["result"]]],[10,"read_timeout_ms","","Gets the value of the `SO_RCVTIMEO` option for this socket.",4,[[["self"]],["result",["option"]]]],[10,"read_timeout","","Gets the value of the `SO_RCVTIMEO` option for this socket.",4,[[["self"]],["result",["option"]]]],[10,"set_write_timeout_ms","","Sets the `SO_SNDTIMEO` option for this socket.",4,[[["self"],["option",["u32"]]],["result"]]],[10,"set_write_timeout","","Sets the `SO_SNDTIMEO` option for this socket.",4,[[["self"],["option",["duration"]]],["result"]]],[10,"write_timeout_ms","","Gets the value of the `SO_SNDTIMEO` option for this socket.",4,[[["self"]],["result",["option"]]]],[10,"write_timeout","","Gets the value of the `SO_SNDTIMEO` option for this socket.",4,[[["self"]],["result",["option"]]]],[10,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",4,[[["self"],["u32"]],["result"]]],[10,"ttl","","Gets the value of the `IP_TTL` option for this socket.",4,[[["self"]],["result",["u32"]]]],[10,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",4,[[["self"],["bool"]],["result"]]],[10,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",4,[[["self"]],["result",["bool"]]]],[10,"connect","","Executes a `connect` operation on this socket,…",4,[[["self"],["t"]],["result"]]],[10,"take_error","","Get the value of the `SO_ERROR` option on this socket.",4,[[["self"]],["result",["option"]]]],[10,"set_nonblocking","","Moves this TCP stream into or out of nonblocking mode.",4,[[["self"],["bool"]],["result"]]],[10,"set_linger","","Sets the linger duration of this socket by setting the…",4,[[["self"],["option",["duration"]]],["result"]]],[10,"linger","","reads the linger duration for this socket by getting the…",4,[[["self"]],["result",["option"]]]],[8,"TcpListenerExt","","Extension methods for the standard [`TcpListener`…",N,N],[10,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",5,[[["self"],["u32"]],["result"]]],[10,"ttl","","Gets the value of the `IP_TTL` option for this socket.",5,[[["self"]],["result",["u32"]]]],[10,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",5,[[["self"],["bool"]],["result"]]],[10,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",5,[[["self"]],["result",["bool"]]]],[10,"take_error","","Get the value of the `SO_ERROR` option on this socket.",5,[[["self"]],["result",["option"]]]],[10,"set_nonblocking","","Moves this TCP listener into or out of nonblocking mode.",5,[[["self"],["bool"]],["result"]]],[10,"set_linger","","Sets the linger duration of this socket by setting the…",5,[[["self"],["option",["duration"]]],["result"]]],[10,"linger","","reads the linger duration for this socket by getting the…",5,[[["self"]],["result",["option"]]]],[8,"UdpSocketExt","","Extension methods for the standard [`UdpSocket`…",N,N],[10,"set_recv_buffer_size","","Sets the value of the `SO_RCVBUF` option on this socket.",6,[[["self"],["usize"]],["result"]]],[10,"recv_buffer_size","","Gets the value of the `SO_RCVBUF` option on this socket.",6,[[["self"]],["result",["usize"]]]],[10,"set_send_buffer_size","","Sets the value of the `SO_SNDBUF` option on this socket.",6,[[["self"],["usize"]],["result"]]],[10,"send_buffer_size","","Gets the value of the `SO_SNDBUF` option on this socket.",6,[[["self"]],["result",["usize"]]]],[10,"set_broadcast","","Sets the value of the `SO_BROADCAST` option for this socket.",6,[[["self"],["bool"]],["result"]]],[10,"broadcast","","Gets the value of the `SO_BROADCAST` option for this socket.",6,[[["self"]],["result",["bool"]]]],[10,"set_multicast_loop_v4","","Sets the value of the `IP_MULTICAST_LOOP` option for this…",6,[[["self"],["bool"]],["result"]]],[10,"multicast_loop_v4","","Gets the value of the `IP_MULTICAST_LOOP` option for this…",6,[[["self"]],["result",["bool"]]]],[10,"set_multicast_ttl_v4","","Sets the value of the `IP_MULTICAST_TTL` option for this…",6,[[["self"],["u32"]],["result"]]],[10,"multicast_ttl_v4","","Gets the value of the `IP_MULTICAST_TTL` option for this…",6,[[["self"]],["result",["u32"]]]],[10,"set_multicast_hops_v6","","Sets the value of the `IPV6_MULTICAST_HOPS` option for…",6,[[["self"],["u32"]],["result"]]],[10,"multicast_hops_v6","","Gets the value of the `IPV6_MULTICAST_HOPS` option for…",6,[[["self"]],["result",["u32"]]]],[10,"set_multicast_loop_v6","","Sets the value of the `IPV6_MULTICAST_LOOP` option for…",6,[[["self"],["bool"]],["result"]]],[10,"multicast_loop_v6","","Gets the value of the `IPV6_MULTICAST_LOOP` option for…",6,[[["self"]],["result",["bool"]]]],[10,"set_multicast_if_v4","","Sets the value of the `IP_MULTICAST_IF` option for this…",6,[[["self"],["ipv4addr"]],["result"]]],[10,"multicast_if_v4","","Gets the value of the `IP_MULTICAST_IF` option for this…",6,[[["self"]],["result",["ipv4addr"]]]],[10,"set_multicast_if_v6","","Sets the value of the `IPV6_MULTICAST_IF` option for this…",6,[[["self"],["u32"]],["result"]]],[10,"multicast_if_v6","","Gets the value of the `IPV6_MULTICAST_IF` option for this…",6,[[["self"]],["result",["u32"]]]],[10,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",6,[[["self"],["u32"]],["result"]]],[10,"ttl","","Gets the value of the `IP_TTL` option for this socket.",6,[[["self"]],["result",["u32"]]]],[10,"set_unicast_hops_v6","","Sets the value for the `IPV6_UNICAST_HOPS` option on this…",6,[[["self"],["u32"]],["result"]]],[10,"unicast_hops_v6","","Gets the value of the `IPV6_UNICAST_HOPS` option for this…",6,[[["self"]],["result",["u32"]]]],[10,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",6,[[["self"],["bool"]],["result"]]],[10,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",6,[[["self"]],["result",["bool"]]]],[10,"join_multicast_v4","","Executes an operation of the `IP_ADD_MEMBERSHIP` type.",6,[[["self"],["ipv4addr"],["ipv4addr"]],["result"]]],[10,"join_multicast_v6","","Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.",6,[[["self"],["ipv6addr"],["u32"]],["result"]]],[10,"leave_multicast_v4","","Executes an operation of the `IP_DROP_MEMBERSHIP` type.",6,[[["self"],["ipv4addr"],["ipv4addr"]],["result"]]],[10,"leave_multicast_v6","","Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.",6,[[["self"],["ipv6addr"],["u32"]],["result"]]],[10,"set_read_timeout_ms","","Sets the `SO_RCVTIMEO` option for this socket.",6,[[["self"],["option",["u32"]]],["result"]]],[10,"set_read_timeout","","Sets the `SO_RCVTIMEO` option for this socket.",6,[[["self"],["option",["duration"]]],["result"]]],[10,"read_timeout_ms","","Gets the value of the `SO_RCVTIMEO` option for this socket.",6,[[["self"]],["result",["option"]]]],[10,"read_timeout","","Gets the value of the `SO_RCVTIMEO` option for this socket.",6,[[["self"]],["result",["option"]]]],[10,"set_write_timeout_ms","","Sets the `SO_SNDTIMEO` option for this socket.",6,[[["self"],["option",["u32"]]],["result"]]],[10,"set_write_timeout","","Sets the `SO_SNDTIMEO` option for this socket.",6,[[["self"],["option",["duration"]]],["result"]]],[10,"write_timeout_ms","","Gets the value of the `SO_SNDTIMEO` option for this socket.",6,[[["self"]],["result",["option"]]]],[10,"write_timeout","","Gets the value of the `SO_SNDTIMEO` option for this socket.",6,[[["self"]],["result",["option"]]]],[10,"take_error","","Get the value of the `SO_ERROR` option on this socket.",6,[[["self"]],["result",["option"]]]],[10,"connect","","Connects this UDP socket to a remote address, allowing the…",6,[[["self"],["a"]],["result"]]],[10,"send","","Sends data on the socket to the remote address to which it…",6,N],[10,"recv","","Receives data on the socket from the remote address to…",6,N],[10,"set_nonblocking","","Moves this UDP socket into or out of nonblocking mode.",6,[[["self"],["bool"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"reuse_port","","",0,[[["self"],["bool"]],["result"]]],[11,"get_reuse_port","","",0,[[["self"]],["result",["bool"]]]],[11,"reuse_port","","",1,[[["self"],["bool"]],["result"]]],[11,"get_reuse_port","","",1,[[["self"]],["result",["bool"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"from_raw_fd","","",0,[[["c_int"]],["tcpbuilder"]]],[11,"from_raw_fd","","",1,[[["c_int"]],["udpbuilder"]]],[11,"as_raw_fd","","",0,[[["self"]],["c_int"]]],[11,"as_raw_fd","","",1,[[["self"]],["c_int"]]]],"paths":[[3,"TcpBuilder"],[3,"UdpBuilder"],[8,"UnixTcpBuilderExt"],[8,"UnixUdpBuilderExt"],[8,"TcpStreamExt"],[8,"TcpListenerExt"],[8,"UdpSocketExt"]]};
searchIndex["notify"]={"doc":"Cross-platform file system notification library","items":[[3,"RawEvent","notify","Event delivered when action occurs on a watched path in…",N,N],[12,"path","","Path where the event originated.",0,N],[12,"op","","Operation detected on that path.",0,N],[12,"cookie","","Unique cookie associating related events (for `RENAME`…",0,N],[4,"DebouncedEvent","","Event delivered when action occurs on a watched path in…",N,N],[13,"NoticeWrite","","`NoticeWrite` is emitted immediately after the first write…",1,N],[13,"NoticeRemove","","`NoticeRemove` is emitted immediately after a remove or…",1,N],[13,"Create","","`Create` is emitted when a file or directory has been…",1,N],[13,"Write","","`Write` is emitted when a file has been written to and no…",1,N],[13,"Chmod","","`Chmod` is emitted when attributes have been changed and…",1,N],[13,"Remove","","`Remove` is emitted when a file or directory has been…",1,N],[13,"Rename","","`Rename` is emitted when a file or directory has been…",1,N],[13,"Rescan","","`Rescan` is emitted immediately after a problem has been…",1,N],[13,"Error","","`Error` is emitted immediately after a error has been…",1,N],[4,"Error","","Errors generated from the `notify` crate",N,N],[13,"Generic","","Generic error",2,N],[13,"Io","","I/O errors",2,N],[13,"PathNotFound","","The provided path does not exist",2,N],[13,"WatchNotFound","","Attempted to remove a watch that does not exist",2,N],[4,"RecursiveMode","","Indicates whether only the provided directory or its…",N,N],[13,"Recursive","","Watch all sub-directories as well, including directories…",3,N],[13,"NonRecursive","","Watch only the provided directory",3,N],[5,"raw_watcher","","Convenience method for creating the `RecommendedWatcher`…",N,[[["sender",["rawevent"]]],["result",["recommendedwatcher"]]]],[5,"watcher","","Convenience method for creating the `RecommendedWatcher`…",N,[[["sender",["debouncedevent"]],["duration"]],["result",["recommendedwatcher"]]]],[0,"inotify","","Watcher implementation for the inotify Linux API",N,N],[3,"INotifyWatcher","notify::inotify","Watcher implementation based on inotify",N,N],[0,"null","notify","Stub Watcher implementation",N,N],[3,"NullWatcher","notify::null","Stub `Watcher` implementation",N,N],[0,"poll","notify","Generic Watcher implementation based on polling",N,N],[3,"PollWatcher","notify::poll","Polling based `Watcher` implementation",N,N],[11,"with_delay_ms","","Create a PollWatcher which polls every `delay` milliseconds",4,[[["sender",["rawevent"]],["u32"]],["result",["pollwatcher"]]]],[0,"op","notify","Contains the `Op` type which describes the actions for an…",N,N],[3,"Op","notify::op","Holds a set of bit flags representing the actions for the…",N,N],[17,"CHMOD","","",N,N],[17,"CREATE","","",N,N],[17,"REMOVE","","",N,N],[17,"RENAME","","",N,N],[17,"WRITE","","",N,N],[17,"CLOSE_WRITE","","",N,N],[17,"RESCAN","","",N,N],[18,"CHMOD","","Attributes changed",5,N],[18,"CREATE","","Created",5,N],[18,"REMOVE","","Removed",5,N],[18,"RENAME","","Renamed",5,N],[18,"WRITE","","Written",5,N],[18,"CLOSE_WRITE","","File opened for writing was closed",5,N],[18,"RESCAN","","Directories need to be rescanned",5,N],[11,"empty","","Returns an empty set of flags.",5,[[],["op"]]],[11,"all","","Returns the set containing all flags.",5,[[],["op"]]],[11,"bits","","Returns the raw value of the flags currently stored.",5,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",5,[[["u32"]],["option",["op"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",5,[[["u32"]],["op"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",5,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",5,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",5,[[["self"],["op"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",5,[[["self"],["op"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",5,[[["self"],["op"]]]],[11,"remove","","Removes the specified flags in-place.",5,[[["self"],["op"]]]],[11,"toggle","","Toggles the specified flags in-place.",5,[[["self"],["op"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",5,[[["self"],["op"],["bool"]]]],[6,"Result","notify","Type alias to use this library's `Error` type in a Result",N,N],[6,"RecommendedWatcher","","The recommended `Watcher` implementation for the current…",N,N],[8,"Watcher","","Type that can deliver file activity notifications",N,N],[10,"new_raw","","Create a new watcher in raw mode.",6,[[["sender",["rawevent"]]],["result"]]],[10,"new","","Create a new debounced watcher with a `delay`.",6,[[["sender",["debouncedevent"]],["duration"]],["result"]]],[10,"watch","","Begin watching a new path.",6,[[["self"],["p"],["recursivemode"]],["result"]]],[10,"unwatch","","Stop watching a path.",6,[[["self"],["p"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","notify::inotify","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","notify::null","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","notify::poll","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","notify::op","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"new_raw","notify::inotify","",7,[[["sender",["rawevent"]]],["result",["inotifywatcher"]]]],[11,"new","","",7,[[["sender",["debouncedevent"]],["duration"]],["result",["inotifywatcher"]]]],[11,"watch","","",7,[[["self"],["p"],["recursivemode"]],["result"]]],[11,"unwatch","","",7,[[["self"],["p"]],["result"]]],[11,"new_raw","notify::null","",8,[[["sender",["rawevent"]]],["result",["nullwatcher"]]]],[11,"new","","",8,[[["sender",["debouncedevent"]],["duration"]],["result",["nullwatcher"]]]],[11,"watch","","",8,[[["self"],["p"],["recursivemode"]],["result"]]],[11,"unwatch","","",8,[[["self"],["p"]],["result"]]],[11,"new_raw","notify::poll","",4,[[["sender",["rawevent"]]],["result",["pollwatcher"]]]],[11,"new","","",4,[[["sender",["debouncedevent"]],["duration"]],["result",["pollwatcher"]]]],[11,"watch","","",4,[[["self"],["p"],["recursivemode"]],["result"]]],[11,"unwatch","","",4,[[["self"],["p"]],["result"]]],[11,"cmp","notify::op","",5,[[["self"],["op"]],["ordering"]]],[11,"cmp","notify","",3,[[["self"],["recursivemode"]],["ordering"]]],[11,"eq","notify::op","",5,[[["self"],["op"]],["bool"]]],[11,"ne","","",5,[[["self"],["op"]],["bool"]]],[11,"eq","notify","",1,[[["self"],["debouncedevent"]],["bool"]]],[11,"eq","","",3,[[["self"],["recursivemode"]],["bool"]]],[11,"from","","",2,[[["error"]],["error"]]],[11,"clone","notify::op","",5,[[["self"]],["op"]]],[11,"clone","notify","",3,[[["self"]],["recursivemode"]]],[11,"extend","notify::op","",5,[[["self"],["t"]]]],[11,"drop","notify::inotify","",7,[[["self"]]]],[11,"drop","notify::poll","",4,[[["self"]]]],[11,"partial_cmp","notify::op","",5,[[["self"],["op"]],["option",["ordering"]]]],[11,"lt","","",5,[[["self"],["op"]],["bool"]]],[11,"le","","",5,[[["self"],["op"]],["bool"]]],[11,"gt","","",5,[[["self"],["op"]],["bool"]]],[11,"ge","","",5,[[["self"],["op"]],["bool"]]],[11,"partial_cmp","notify","",3,[[["self"],["recursivemode"]],["option",["ordering"]]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","notify::op","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","notify","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"sub","notify::op","Returns the set difference of the two sets of flags.",5,[[["self"],["op"]],["op"]]],[11,"sub_assign","","Disables all flags enabled in the set.",5,[[["self"],["op"]]]],[11,"not","","Returns the complement of this set of flags.",5,[[["self"]],["op"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",5,[[["self"],["op"]],["op"]]],[11,"bitor","","Returns the union of the two sets of flags.",5,[[["self"],["op"]],["op"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",5,[[["self"],["op"]],["op"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",5,[[["self"],["op"]]]],[11,"bitor_assign","","Adds the set of flags.",5,[[["self"],["op"]]]],[11,"bitxor_assign","","Toggles the set of flags.",5,[[["self"],["op"]]]],[11,"hash","","",5,N],[11,"from_iter","","",5,[[["t"]],["op"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"description","notify","",2,[[["self"]],["str"]]],[11,"cause","","",2,[[["self"]],["option",["stderror"]]]]],"paths":[[3,"RawEvent"],[4,"DebouncedEvent"],[4,"Error"],[4,"RecursiveMode"],[3,"PollWatcher"],[3,"Op"],[8,"Watcher"],[3,"INotifyWatcher"],[3,"NullWatcher"]]};
searchIndex["num"]={"doc":"A collection of numeric types and traits for Rust.","items":[[3,"BigInt","num","A big signed integer type.",N,N],[3,"BigUint","","A big unsigned integer type.",N,N],[6,"Rational","","Alias for a `Ratio` of machine-sized integers.",N,N],[6,"BigRational","","Alias for arbitrary precision rationals.",N,N],[3,"Complex","","A complex number in Cartesian form.",N,N],[12,"re","","Real portion of the complex number",0,N],[12,"im","","Imaginary portion of the complex number",0,N],[8,"Integer","","",N,N],[10,"div_floor","","Floored integer division.",1,[[["self"],["self"]],["self"]]],[10,"mod_floor","","Floored integer modulo, satisfying:",1,[[["self"],["self"]],["self"]]],[10,"gcd","","Greatest Common Divisor (GCD).",1,[[["self"],["self"]],["self"]]],[10,"lcm","","Lowest Common Multiple (LCM).",1,[[["self"],["self"]],["self"]]],[10,"divides","","Deprecated, use `is_multiple_of` instead.",1,[[["self"],["self"]],["bool"]]],[10,"is_multiple_of","","Returns `true` if `self` is a multiple of `other`.",1,[[["self"],["self"]],["bool"]]],[10,"is_even","","Returns `true` if the number is even.",1,[[["self"]],["bool"]]],[10,"is_odd","","Returns `true` if the number is odd.",1,[[["self"]],["bool"]]],[10,"div_rem","","Simultaneous truncated integer division and modulus.…",1,N],[11,"div_mod_floor","","Simultaneous floored integer division and modulus. Returns…",1,N],[5,"range","","Returns an iterator over the given range [start, stop)…",N,[[["a"],["a"]],["range"]]],[5,"range_inclusive","","Return an iterator over the range [start, stop]",N,[[["a"],["a"]],["rangeinclusive"]]],[5,"range_step","","Return an iterator over the range [start, stop) by `step`.…",N,[[["a"],["a"],["a"]],["rangestep"]]],[5,"range_step_inclusive","","Return an iterator over the range [start, stop] by `step`.…",N,[[["a"],["a"],["a"]],["rangestepinclusive"]]],[8,"Num","","The base trait for numeric types, covering `0` and `1`…",N,N],[16,"FromStrRadixErr","","",2,N],[10,"from_str_radix","","Convert from a string and radix <= 36.",2,[[["str"],["u32"]],["result"]]],[8,"Zero","","Defines an additive identity element for `Self`.",N,N],[10,"zero","","Returns the additive identity element of `Self`, `0`.",3,[[],["self"]]],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",3,[[["self"]],["bool"]]],[8,"One","","Defines a multiplicative identity element for `Self`.",N,N],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",4,[[],["self"]]],[11,"is_one","","Returns `true` if `self` is equal to the multiplicative…",4,[[["self"]],["bool"]]],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can…",N,N],[10,"abs","","Computes the absolute value.",5,[[["self"]],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",5,[[["self"],["self"]],["self"]]],[10,"signum","","Returns the sign of the number.",5,[[["self"]],["self"]]],[10,"is_positive","","Returns true if the number is positive and false if the…",5,[[["self"]],["bool"]]],[10,"is_negative","","Returns true if the number is negative and false if the…",5,[[["self"]],["bool"]]],[8,"Unsigned","","A trait for values which cannot be negative",N,N],[8,"Bounded","","Numbers which have upper and lower bounds",N,N],[10,"min_value","","returns the smallest finite number this type can represent",6,[[],["self"]]],[10,"max_value","","returns the largest finite number this type can represent",6,[[],["self"]]],[5,"one","","Returns the multiplicative identity, `1`.",N,[[],["t"]]],[5,"zero","","Returns the additive identity, `0`.",N,[[],["t"]]],[5,"abs","","Computes the absolute value.",N,[[["t"]],["t"]]],[5,"abs_sub","","The positive difference of two numbers.",N,[[["t"],["t"]],["t"]]],[5,"signum","","Returns the sign of the number.",N,[[["t"]],["t"]]],[8,"Saturating","","Saturating math operations",N,N],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at…",7,[[["self"],["self"]],["self"]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating…",7,[[["self"],["self"]],["self"]]],[8,"CheckedAdd","","Performs addition that returns `None` instead of wrapping…",N,N],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow…",8,[[["self"],["self"]],["option"]]],[8,"CheckedSub","","Performs subtraction that returns `None` instead of…",N,N],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If…",9,[[["self"],["self"]],["option"]]],[8,"CheckedMul","","Performs multiplication that returns `None` instead of…",N,N],[10,"checked_mul","","Multiplies two numbers, checking for underflow or…",10,[[["self"],["self"]],["option"]]],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking…",N,N],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and…",11,[[["self"],["self"]],["option"]]],[8,"PrimInt","","",N,N],[10,"count_ones","","Returns the number of ones in the binary representation of…",12,[[["self"]],["u32"]]],[10,"count_zeros","","Returns the number of zeros in the binary representation…",12,[[["self"]],["u32"]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary…",12,[[["self"]],["u32"]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary…",12,[[["self"]],["u32"]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount,…",12,[[["self"],["u32"]],["self"]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount,…",12,[[["self"],["u32"]],["self"]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount,…",12,[[["self"],["u32"]],["self"]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount,…",12,[[["self"],["u32"]],["self"]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount,…",12,[[["self"],["u32"]],["self"]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount,…",12,[[["self"],["u32"]],["self"]]],[10,"swap_bytes","","Reverses the byte order of the integer.",12,[[["self"]],["self"]]],[10,"from_be","","Convert an integer from big endian to the target's…",12,[[["self"]],["self"]]],[10,"from_le","","Convert an integer from little endian to the target's…",12,[[["self"]],["self"]]],[10,"to_be","","Convert `self` to big endian from the target's endianness.",12,[[["self"]],["self"]]],[10,"to_le","","Convert `self` to little endian from the target's…",12,[[["self"]],["self"]]],[10,"pow","","Raises self to the power of `exp`, using exponentiation by…",12,[[["self"],["u32"]],["self"]]],[8,"Float","","Generic trait for floating point numbers",N,N],[10,"nan","","Returns the `NaN` value.",13,[[],["self"]]],[10,"infinity","","Returns the infinite value.",13,[[],["self"]]],[10,"neg_infinity","","Returns the negative infinite value.",13,[[],["self"]]],[10,"neg_zero","","Returns `-0.0`.",13,[[],["self"]]],[10,"min_value","","Returns the smallest finite value that this type can…",13,[[],["self"]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",13,[[],["self"]]],[11,"epsilon","","Returns epsilon, a small positive value.",13,[[],["self"]]],[10,"max_value","","Returns the largest finite value that this type can…",13,[[],["self"]]],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",13,[[["self"]],["bool"]]],[10,"is_infinite","","Returns `true` if this value is positive infinity or…",13,[[["self"]],["bool"]]],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",13,[[["self"]],["bool"]]],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,…",13,[[["self"]],["bool"]]],[10,"classify","","Returns the floating point category of the number. If only…",13,[[["self"]],["fpcategory"]]],[10,"floor","","Returns the largest integer less than or equal to a number.",13,[[["self"]],["self"]]],[10,"ceil","","Returns the smallest integer greater than or equal to a…",13,[[["self"]],["self"]]],[10,"round","","Returns the nearest integer to a number. Round half-way…",13,[[["self"]],["self"]]],[10,"trunc","","Return the integer part of a number.",13,[[["self"]],["self"]]],[10,"fract","","Returns the fractional part of a number.",13,[[["self"]],["self"]]],[10,"abs","","Computes the absolute value of `self`. Returns…",13,[[["self"]],["self"]]],[10,"signum","","Returns a number that represents the sign of `self`.",13,[[["self"]],["self"]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`,…",13,[[["self"]],["bool"]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`,…",13,[[["self"]],["bool"]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only…",13,[[["self"],["self"],["self"]],["self"]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",13,[[["self"]],["self"]]],[10,"powi","","Raise a number to an integer power.",13,[[["self"],["i32"]],["self"]]],[10,"powf","","Raise a number to a floating point power.",13,[[["self"],["self"]],["self"]]],[10,"sqrt","","Take the square root of a number.",13,[[["self"]],["self"]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",13,[[["self"]],["self"]]],[10,"exp2","","Returns `2^(self)`.",13,[[["self"]],["self"]]],[10,"ln","","Returns the natural logarithm of the number.",13,[[["self"]],["self"]]],[10,"log","","Returns the logarithm of the number with respect to an…",13,[[["self"],["self"]],["self"]]],[10,"log2","","Returns the base 2 logarithm of the number.",13,[[["self"]],["self"]]],[10,"log10","","Returns the base 10 logarithm of the number.",13,[[["self"]],["self"]]],[11,"to_degrees","","Converts radians to degrees.",13,[[["self"]],["self"]]],[11,"to_radians","","Converts degrees to radians.",13,[[["self"]],["self"]]],[10,"max","","Returns the maximum of the two numbers.",13,[[["self"],["self"]],["self"]]],[10,"min","","Returns the minimum of the two numbers.",13,[[["self"],["self"]],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",13,[[["self"],["self"]],["self"]]],[10,"cbrt","","Take the cubic root of a number.",13,[[["self"]],["self"]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle…",13,[[["self"],["self"]],["self"]]],[10,"sin","","Computes the sine of a number (in radians).",13,[[["self"]],["self"]]],[10,"cos","","Computes the cosine of a number (in radians).",13,[[["self"]],["self"]]],[10,"tan","","Computes the tangent of a number (in radians).",13,[[["self"]],["self"]]],[10,"asin","","Computes the arcsine of a number. Return value is in…",13,[[["self"]],["self"]]],[10,"acos","","Computes the arccosine of a number. Return value is in…",13,[[["self"]],["self"]]],[10,"atan","","Computes the arctangent of a number. Return value is in…",13,[[["self"]],["self"]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and…",13,[[["self"],["self"]],["self"]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number,…",13,N],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if…",13,[[["self"]],["self"]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than…",13,[[["self"]],["self"]]],[10,"sinh","","Hyperbolic sine function.",13,[[["self"]],["self"]]],[10,"cosh","","Hyperbolic cosine function.",13,[[["self"]],["self"]]],[10,"tanh","","Hyperbolic tangent function.",13,[[["self"]],["self"]]],[10,"asinh","","Inverse hyperbolic sine function.",13,[[["self"]],["self"]]],[10,"acosh","","Inverse hyperbolic cosine function.",13,[[["self"]],["self"]]],[10,"atanh","","Inverse hyperbolic tangent function.",13,[[["self"]],["self"]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",13,N],[8,"ToPrimitive","","A generic trait for converting a value to a number.",N,N],[11,"to_isize","","Converts the value of `self` to an `isize`.",14,[[["self"]],["option",["isize"]]]],[11,"to_i8","","Converts the value of `self` to an `i8`.",14,[[["self"]],["option",["i8"]]]],[11,"to_i16","","Converts the value of `self` to an `i16`.",14,[[["self"]],["option",["i16"]]]],[11,"to_i32","","Converts the value of `self` to an `i32`.",14,[[["self"]],["option",["i32"]]]],[10,"to_i64","","Converts the value of `self` to an `i64`.",14,[[["self"]],["option",["i64"]]]],[11,"to_i128","","Converts the value of `self` to an `i128`.",14,[[["self"]],["option",["i128"]]]],[11,"to_usize","","Converts the value of `self` to a `usize`.",14,[[["self"]],["option",["usize"]]]],[11,"to_u8","","Converts the value of `self` to an `u8`.",14,[[["self"]],["option",["u8"]]]],[11,"to_u16","","Converts the value of `self` to an `u16`.",14,[[["self"]],["option",["u16"]]]],[11,"to_u32","","Converts the value of `self` to an `u32`.",14,[[["self"]],["option",["u32"]]]],[10,"to_u64","","Converts the value of `self` to an `u64`.",14,[[["self"]],["option",["u64"]]]],[11,"to_u128","","Converts the value of `self` to an `u128`.",14,[[["self"]],["option",["u128"]]]],[11,"to_f32","","Converts the value of `self` to an `f32`.",14,[[["self"]],["option",["f32"]]]],[11,"to_f64","","Converts the value of `self` to an `f64`.",14,[[["self"]],["option",["f64"]]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",N,N],[11,"from_isize","","Convert an `isize` to return an optional value of this…",15,[[["isize"]],["option"]]],[11,"from_i8","","Convert an `i8` to return an optional value of this type.…",15,[[["i8"]],["option"]]],[11,"from_i16","","Convert an `i16` to return an optional value of this type.…",15,[[["i16"]],["option"]]],[11,"from_i32","","Convert an `i32` to return an optional value of this type.…",15,[[["i32"]],["option"]]],[10,"from_i64","","Convert an `i64` to return an optional value of this type.…",15,[[["i64"]],["option"]]],[11,"from_i128","","Convert an `i128` to return an optional value of this…",15,[[["i128"]],["option"]]],[11,"from_usize","","Convert a `usize` to return an optional value of this…",15,[[["usize"]],["option"]]],[11,"from_u8","","Convert an `u8` to return an optional value of this type.…",15,[[["u8"]],["option"]]],[11,"from_u16","","Convert an `u16` to return an optional value of this type.…",15,[[["u16"]],["option"]]],[11,"from_u32","","Convert an `u32` to return an optional value of this type.…",15,[[["u32"]],["option"]]],[10,"from_u64","","Convert an `u64` to return an optional value of this type.…",15,[[["u64"]],["option"]]],[11,"from_u128","","Convert an `u128` to return an optional value of this…",15,[[["u128"]],["option"]]],[11,"from_f32","","Convert a `f32` to return an optional value of this type.…",15,[[["f32"]],["option"]]],[11,"from_f64","","Convert a `f64` to return an optional value of this type.…",15,[[["f64"]],["option"]]],[8,"NumCast","","An interface for casting between machine scalars.",N,N],[10,"from","","Creates a number from another value that can be converted…",16,[[["t"]],["option"]]],[0,"cast","","",N,N],[8,"ToPrimitive","num::cast","A generic trait for converting a value to a number.",N,N],[11,"to_isize","","Converts the value of `self` to an `isize`.",14,[[["self"]],["option",["isize"]]]],[11,"to_i8","","Converts the value of `self` to an `i8`.",14,[[["self"]],["option",["i8"]]]],[11,"to_i16","","Converts the value of `self` to an `i16`.",14,[[["self"]],["option",["i16"]]]],[11,"to_i32","","Converts the value of `self` to an `i32`.",14,[[["self"]],["option",["i32"]]]],[10,"to_i64","","Converts the value of `self` to an `i64`.",14,[[["self"]],["option",["i64"]]]],[11,"to_i128","","Converts the value of `self` to an `i128`.",14,[[["self"]],["option",["i128"]]]],[11,"to_usize","","Converts the value of `self` to a `usize`.",14,[[["self"]],["option",["usize"]]]],[11,"to_u8","","Converts the value of `self` to an `u8`.",14,[[["self"]],["option",["u8"]]]],[11,"to_u16","","Converts the value of `self` to an `u16`.",14,[[["self"]],["option",["u16"]]]],[11,"to_u32","","Converts the value of `self` to an `u32`.",14,[[["self"]],["option",["u32"]]]],[10,"to_u64","","Converts the value of `self` to an `u64`.",14,[[["self"]],["option",["u64"]]]],[11,"to_u128","","Converts the value of `self` to an `u128`.",14,[[["self"]],["option",["u128"]]]],[11,"to_f32","","Converts the value of `self` to an `f32`.",14,[[["self"]],["option",["f32"]]]],[11,"to_f64","","Converts the value of `self` to an `f64`.",14,[[["self"]],["option",["f64"]]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",N,N],[11,"from_isize","","Convert an `isize` to return an optional value of this…",15,[[["isize"]],["option"]]],[11,"from_i8","","Convert an `i8` to return an optional value of this type.…",15,[[["i8"]],["option"]]],[11,"from_i16","","Convert an `i16` to return an optional value of this type.…",15,[[["i16"]],["option"]]],[11,"from_i32","","Convert an `i32` to return an optional value of this type.…",15,[[["i32"]],["option"]]],[10,"from_i64","","Convert an `i64` to return an optional value of this type.…",15,[[["i64"]],["option"]]],[11,"from_i128","","Convert an `i128` to return an optional value of this…",15,[[["i128"]],["option"]]],[11,"from_usize","","Convert a `usize` to return an optional value of this…",15,[[["usize"]],["option"]]],[11,"from_u8","","Convert an `u8` to return an optional value of this type.…",15,[[["u8"]],["option"]]],[11,"from_u16","","Convert an `u16` to return an optional value of this type.…",15,[[["u16"]],["option"]]],[11,"from_u32","","Convert an `u32` to return an optional value of this type.…",15,[[["u32"]],["option"]]],[10,"from_u64","","Convert an `u64` to return an optional value of this type.…",15,[[["u64"]],["option"]]],[11,"from_u128","","Convert an `u128` to return an optional value of this…",15,[[["u128"]],["option"]]],[11,"from_f32","","Convert a `f32` to return an optional value of this type.…",15,[[["f32"]],["option"]]],[11,"from_f64","","Convert a `f64` to return an optional value of this type.…",15,[[["f64"]],["option"]]],[5,"cast","","Cast from one machine scalar to another.",N,[[["t"]],["option"]]],[8,"NumCast","","An interface for casting between machine scalars.",N,N],[10,"from","","Creates a number from another value that can be converted…",16,[[["t"]],["option"]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars…",N,N],[10,"as_","","Convert a value to another, using the `as` operator.",17,[[["self"]],["t"]]],[5,"cast","num","Cast from one machine scalar to another.",N,[[["t"]],["option"]]],[0,"pow","","",N,N],[8,"Pow","num::pow","Binary operator for raising a value to a power.",N,N],[16,"Output","","The result after applying the operator.",18,N],[10,"pow","","Returns `self` to the power `rhs`.",18,N],[5,"pow","","Raises a value to the power of exp, using exponentiation…",N,[[["t"],["usize"]],["t"]]],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an…",N,[[["t"],["usize"]],["option"]]],[5,"pow","num","Raises a value to the power of exp, using exponentiation…",N,[[["t"],["usize"]],["t"]]],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an…",N,[[["t"],["usize"]],["option"]]],[5,"clamp","","A value bounded by a minimum and a maximum",N,[[["t"],["t"],["t"]],["t"]]],[0,"bigint","","",N,N],[4,"ParseBigIntError","num::bigint","",N,N],[13,"ParseInt","","",19,N],[13,"Other","","",19,N],[8,"RandBigInt","","",N,N],[10,"gen_biguint","","Generate a random `BigUint` of the given bit size.",20,[[["self"],["usize"]],["biguint"]]],[10,"gen_bigint","","Generate a random BigInt of the given bit size.",20,[[["self"],["usize"]],["bigint"]]],[10,"gen_biguint_below","","Generate a random `BigUint` less than the given bound.…",20,[[["self"],["biguint"]],["biguint"]]],[10,"gen_biguint_range","","Generate a random `BigUint` within the given range. The…",20,[[["self"],["biguint"],["biguint"]],["biguint"]]],[10,"gen_bigint_range","","Generate a random `BigInt` within the given range. The…",20,[[["self"],["bigint"],["bigint"]],["bigint"]]],[6,"DoubleBigDigit","","A `DoubleBigDigit` is the internal type used to do the…",N,N],[17,"ZERO_BIG_DIGIT","","",N,N],[8,"ToBigInt","","A generic trait for converting a value to a `BigInt`.",N,N],[10,"to_bigint","","Converts the value of `self` to a `BigInt`.",21,[[["self"]],["option",["bigint"]]]],[6,"BigDigit","","A `BigDigit` is a `BigUint`'s composing element.",N,N],[3,"BigUint","","A big unsigned integer type.",N,N],[3,"BigInt","","A big signed integer type.",N,N],[0,"big_digit","","",N,N],[17,"BITS","num::bigint::big_digit","",N,N],[17,"BASE","","",N,N],[5,"from_doublebigdigit","","Split one `DoubleBigDigit` into two `BigDigit`s.",N,N],[5,"to_doublebigdigit","","Join two `BigDigit`s into one `DoubleBigDigit`",N,[[["u32"],["u32"]],["u64"]]],[8,"ToBigUint","num::bigint","A generic trait for converting a value to a `BigUint`.",N,N],[10,"to_biguint","","Converts the value of `self` to a `BigUint`.",22,[[["self"]],["option",["biguint"]]]],[4,"Sign","","A Sign is a `BigInt`'s composing element.",N,N],[13,"Minus","","",23,N],[13,"NoSign","","",23,N],[13,"Plus","","",23,N],[0,"complex","num","",N,N],[3,"Complex","num::complex","A complex number in Cartesian form.",N,N],[12,"re","","Real portion of the complex number",0,N],[12,"im","","Imaginary portion of the complex number",0,N],[6,"Complex32","","",N,N],[6,"Complex64","","",N,N],[3,"ParseComplexError","","",N,N],[0,"integer","num","",N,N],[8,"Integer","num::integer","",N,N],[10,"div_floor","","Floored integer division.",1,[[["self"],["self"]],["self"]]],[10,"mod_floor","","Floored integer modulo, satisfying:",1,[[["self"],["self"]],["self"]]],[10,"gcd","","Greatest Common Divisor (GCD).",1,[[["self"],["self"]],["self"]]],[10,"lcm","","Lowest Common Multiple (LCM).",1,[[["self"],["self"]],["self"]]],[10,"divides","","Deprecated, use `is_multiple_of` instead.",1,[[["self"],["self"]],["bool"]]],[10,"is_multiple_of","","Returns `true` if `self` is a multiple of `other`.",1,[[["self"],["self"]],["bool"]]],[10,"is_even","","Returns `true` if the number is even.",1,[[["self"]],["bool"]]],[10,"is_odd","","Returns `true` if the number is odd.",1,[[["self"]],["bool"]]],[10,"div_rem","","Simultaneous truncated integer division and modulus.…",1,N],[11,"div_mod_floor","","Simultaneous floored integer division and modulus. Returns…",1,N],[5,"div_rem","","Simultaneous integer division and modulus",N,N],[5,"div_floor","","Floored integer division",N,[[["t"],["t"]],["t"]]],[5,"mod_floor","","Floored integer modulus",N,[[["t"],["t"]],["t"]]],[5,"div_mod_floor","","Simultaneous floored integer division and modulus",N,N],[5,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number…",N,[[["t"],["t"]],["t"]]],[5,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number…",N,[[["t"],["t"]],["t"]]],[3,"IterBinomial","","An iterator over binomial coefficients.",N,N],[5,"binomial","","Calculate the binomial coefficient.",N,[[["t"],["t"]],["t"]]],[5,"multinomial","","Calculate the multinomial coefficient.",N,N],[5,"nth_root","","Returns the truncated principal `n`th root of an integer…",N,[[["t"],["u32"]],["t"]]],[5,"cbrt","","Returns the truncated principal cube root of an integer --…",N,[[["t"]],["t"]]],[8,"Roots","","Provides methods to compute an integer's square root, cube…",N,N],[10,"nth_root","","Returns the truncated principal `n`th root of an integer…",24,[[["self"],["u32"]],["self"]]],[11,"sqrt","","Returns the truncated principal square root of an integer…",24,[[["self"]],["self"]]],[11,"cbrt","","Returns the truncated principal cube root of an integer --…",24,[[["self"]],["self"]]],[5,"sqrt","","Returns the truncated principal square root of an integer…",N,[[["t"]],["t"]]],[0,"iter","num","",N,N],[3,"Range","num::iter","An iterator over the range [start, stop)",N,N],[5,"range","","Returns an iterator over the given range [start, stop)…",N,[[["a"],["a"]],["range"]]],[3,"RangeInclusive","","An iterator over the range [start, stop]",N,N],[5,"range_inclusive","","Return an iterator over the range [start, stop]",N,[[["a"],["a"]],["rangeinclusive"]]],[3,"RangeStep","","An iterator over the range [start, stop) by `step`. It…",N,N],[5,"range_step","","Return an iterator over the range [start, stop) by `step`.…",N,[[["a"],["a"],["a"]],["rangestep"]]],[3,"RangeStepInclusive","","An iterator over the range [start, stop] by `step`. It…",N,N],[5,"range_step_inclusive","","Return an iterator over the range [start, stop] by `step`.…",N,[[["a"],["a"],["a"]],["rangestepinclusive"]]],[0,"traits","num","",N,N],[0,"bounds","num::traits","",N,N],[8,"Bounded","num::traits::bounds","Numbers which have upper and lower bounds",N,N],[10,"min_value","","returns the smallest finite number this type can represent",6,[[],["self"]]],[10,"max_value","","returns the largest finite number this type can represent",6,[[],["self"]]],[0,"cast","num::traits","",N,N],[8,"ToPrimitive","num::traits::cast","A generic trait for converting a value to a number.",N,N],[11,"to_isize","","Converts the value of `self` to an `isize`.",14,[[["self"]],["option",["isize"]]]],[11,"to_i8","","Converts the value of `self` to an `i8`.",14,[[["self"]],["option",["i8"]]]],[11,"to_i16","","Converts the value of `self` to an `i16`.",14,[[["self"]],["option",["i16"]]]],[11,"to_i32","","Converts the value of `self` to an `i32`.",14,[[["self"]],["option",["i32"]]]],[10,"to_i64","","Converts the value of `self` to an `i64`.",14,[[["self"]],["option",["i64"]]]],[11,"to_i128","","Converts the value of `self` to an `i128`.",14,[[["self"]],["option",["i128"]]]],[11,"to_usize","","Converts the value of `self` to a `usize`.",14,[[["self"]],["option",["usize"]]]],[11,"to_u8","","Converts the value of `self` to an `u8`.",14,[[["self"]],["option",["u8"]]]],[11,"to_u16","","Converts the value of `self` to an `u16`.",14,[[["self"]],["option",["u16"]]]],[11,"to_u32","","Converts the value of `self` to an `u32`.",14,[[["self"]],["option",["u32"]]]],[10,"to_u64","","Converts the value of `self` to an `u64`.",14,[[["self"]],["option",["u64"]]]],[11,"to_u128","","Converts the value of `self` to an `u128`.",14,[[["self"]],["option",["u128"]]]],[11,"to_f32","","Converts the value of `self` to an `f32`.",14,[[["self"]],["option",["f32"]]]],[11,"to_f64","","Converts the value of `self` to an `f64`.",14,[[["self"]],["option",["f64"]]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",N,N],[11,"from_isize","","Convert an `isize` to return an optional value of this…",15,[[["isize"]],["option"]]],[11,"from_i8","","Convert an `i8` to return an optional value of this type.…",15,[[["i8"]],["option"]]],[11,"from_i16","","Convert an `i16` to return an optional value of this type.…",15,[[["i16"]],["option"]]],[11,"from_i32","","Convert an `i32` to return an optional value of this type.…",15,[[["i32"]],["option"]]],[10,"from_i64","","Convert an `i64` to return an optional value of this type.…",15,[[["i64"]],["option"]]],[11,"from_i128","","Convert an `i128` to return an optional value of this…",15,[[["i128"]],["option"]]],[11,"from_usize","","Convert a `usize` to return an optional value of this…",15,[[["usize"]],["option"]]],[11,"from_u8","","Convert an `u8` to return an optional value of this type.…",15,[[["u8"]],["option"]]],[11,"from_u16","","Convert an `u16` to return an optional value of this type.…",15,[[["u16"]],["option"]]],[11,"from_u32","","Convert an `u32` to return an optional value of this type.…",15,[[["u32"]],["option"]]],[10,"from_u64","","Convert an `u64` to return an optional value of this type.…",15,[[["u64"]],["option"]]],[11,"from_u128","","Convert an `u128` to return an optional value of this…",15,[[["u128"]],["option"]]],[11,"from_f32","","Convert a `f32` to return an optional value of this type.…",15,[[["f32"]],["option"]]],[11,"from_f64","","Convert a `f64` to return an optional value of this type.…",15,[[["f64"]],["option"]]],[5,"cast","","Cast from one machine scalar to another.",N,[[["t"]],["option"]]],[8,"NumCast","","An interface for casting between machine scalars.",N,N],[10,"from","","Creates a number from another value that can be converted…",16,[[["t"]],["option"]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars…",N,N],[10,"as_","","Convert a value to another, using the `as` operator.",17,[[["self"]],["t"]]],[0,"float","num::traits","",N,N],[8,"FloatCore","num::traits::float","Generic trait for floating point numbers that works with…",N,N],[10,"infinity","","Returns positive infinity.",25,[[],["self"]]],[10,"neg_infinity","","Returns negative infinity.",25,[[],["self"]]],[10,"nan","","Returns NaN.",25,[[],["self"]]],[10,"neg_zero","","Returns `-0.0`.",25,[[],["self"]]],[10,"min_value","","Returns the smallest finite value that this type can…",25,[[],["self"]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",25,[[],["self"]]],[10,"epsilon","","Returns epsilon, a small positive value.",25,[[],["self"]]],[10,"max_value","","Returns the largest finite value that this type can…",25,[[],["self"]]],[11,"is_nan","","Returns `true` if the number is NaN.",25,[[["self"]],["bool"]]],[11,"is_infinite","","Returns `true` if the number is infinite.",25,[[["self"]],["bool"]]],[11,"is_finite","","Returns `true` if the number is neither infinite or NaN.",25,[[["self"]],["bool"]]],[11,"is_normal","","Returns `true` if the number is neither zero, infinite,…",25,[[["self"]],["bool"]]],[10,"classify","","Returns the floating point category of the number. If only…",25,[[["self"]],["fpcategory"]]],[11,"floor","","Returns the largest integer less than or equal to a number.",25,[[["self"]],["self"]]],[11,"ceil","","Returns the smallest integer greater than or equal to a…",25,[[["self"]],["self"]]],[11,"round","","Returns the nearest integer to a number. Round half-way…",25,[[["self"]],["self"]]],[11,"trunc","","Return the integer part of a number.",25,[[["self"]],["self"]]],[11,"fract","","Returns the fractional part of a number.",25,[[["self"]],["self"]]],[11,"abs","","Computes the absolute value of `self`. Returns…",25,[[["self"]],["self"]]],[11,"signum","","Returns a number that represents the sign of `self`.",25,[[["self"]],["self"]]],[11,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and…",25,[[["self"]],["bool"]]],[11,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and…",25,[[["self"]],["bool"]]],[11,"min","","Returns the minimum of the two numbers.",25,[[["self"],["self"]],["self"]]],[11,"max","","Returns the maximum of the two numbers.",25,[[["self"],["self"]],["self"]]],[11,"recip","","Returns the reciprocal (multiplicative inverse) of the…",25,[[["self"]],["self"]]],[11,"powi","","Raise a number to an integer power.",25,[[["self"],["i32"]],["self"]]],[10,"to_degrees","","Converts to degrees, assuming the number is in radians.",25,[[["self"]],["self"]]],[10,"to_radians","","Converts to radians, assuming the number is in degrees.",25,[[["self"]],["self"]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",25,N],[8,"Float","","Generic trait for floating point numbers",N,N],[10,"nan","","Returns the `NaN` value.",13,[[],["self"]]],[10,"infinity","","Returns the infinite value.",13,[[],["self"]]],[10,"neg_infinity","","Returns the negative infinite value.",13,[[],["self"]]],[10,"neg_zero","","Returns `-0.0`.",13,[[],["self"]]],[10,"min_value","","Returns the smallest finite value that this type can…",13,[[],["self"]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",13,[[],["self"]]],[11,"epsilon","","Returns epsilon, a small positive value.",13,[[],["self"]]],[10,"max_value","","Returns the largest finite value that this type can…",13,[[],["self"]]],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",13,[[["self"]],["bool"]]],[10,"is_infinite","","Returns `true` if this value is positive infinity or…",13,[[["self"]],["bool"]]],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",13,[[["self"]],["bool"]]],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,…",13,[[["self"]],["bool"]]],[10,"classify","","Returns the floating point category of the number. If only…",13,[[["self"]],["fpcategory"]]],[10,"floor","","Returns the largest integer less than or equal to a number.",13,[[["self"]],["self"]]],[10,"ceil","","Returns the smallest integer greater than or equal to a…",13,[[["self"]],["self"]]],[10,"round","","Returns the nearest integer to a number. Round half-way…",13,[[["self"]],["self"]]],[10,"trunc","","Return the integer part of a number.",13,[[["self"]],["self"]]],[10,"fract","","Returns the fractional part of a number.",13,[[["self"]],["self"]]],[10,"abs","","Computes the absolute value of `self`. Returns…",13,[[["self"]],["self"]]],[10,"signum","","Returns a number that represents the sign of `self`.",13,[[["self"]],["self"]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`,…",13,[[["self"]],["bool"]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`,…",13,[[["self"]],["bool"]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only…",13,[[["self"],["self"],["self"]],["self"]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",13,[[["self"]],["self"]]],[10,"powi","","Raise a number to an integer power.",13,[[["self"],["i32"]],["self"]]],[10,"powf","","Raise a number to a floating point power.",13,[[["self"],["self"]],["self"]]],[10,"sqrt","","Take the square root of a number.",13,[[["self"]],["self"]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",13,[[["self"]],["self"]]],[10,"exp2","","Returns `2^(self)`.",13,[[["self"]],["self"]]],[10,"ln","","Returns the natural logarithm of the number.",13,[[["self"]],["self"]]],[10,"log","","Returns the logarithm of the number with respect to an…",13,[[["self"],["self"]],["self"]]],[10,"log2","","Returns the base 2 logarithm of the number.",13,[[["self"]],["self"]]],[10,"log10","","Returns the base 10 logarithm of the number.",13,[[["self"]],["self"]]],[11,"to_degrees","","Converts radians to degrees.",13,[[["self"]],["self"]]],[11,"to_radians","","Converts degrees to radians.",13,[[["self"]],["self"]]],[10,"max","","Returns the maximum of the two numbers.",13,[[["self"],["self"]],["self"]]],[10,"min","","Returns the minimum of the two numbers.",13,[[["self"],["self"]],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",13,[[["self"],["self"]],["self"]]],[10,"cbrt","","Take the cubic root of a number.",13,[[["self"]],["self"]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle…",13,[[["self"],["self"]],["self"]]],[10,"sin","","Computes the sine of a number (in radians).",13,[[["self"]],["self"]]],[10,"cos","","Computes the cosine of a number (in radians).",13,[[["self"]],["self"]]],[10,"tan","","Computes the tangent of a number (in radians).",13,[[["self"]],["self"]]],[10,"asin","","Computes the arcsine of a number. Return value is in…",13,[[["self"]],["self"]]],[10,"acos","","Computes the arccosine of a number. Return value is in…",13,[[["self"]],["self"]]],[10,"atan","","Computes the arctangent of a number. Return value is in…",13,[[["self"]],["self"]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and…",13,[[["self"],["self"]],["self"]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number,…",13,N],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if…",13,[[["self"]],["self"]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than…",13,[[["self"]],["self"]]],[10,"sinh","","Hyperbolic sine function.",13,[[["self"]],["self"]]],[10,"cosh","","Hyperbolic cosine function.",13,[[["self"]],["self"]]],[10,"tanh","","Hyperbolic tangent function.",13,[[["self"]],["self"]]],[10,"asinh","","Inverse hyperbolic sine function.",13,[[["self"]],["self"]]],[10,"acosh","","Inverse hyperbolic cosine function.",13,[[["self"]],["self"]]],[10,"atanh","","Inverse hyperbolic tangent function.",13,[[["self"]],["self"]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",13,N],[8,"FloatConst","","",N,N],[10,"E","","Return Euler’s number.",26,[[],["self"]]],[10,"FRAC_1_PI","","Return `1.0 / π`.",26,[[],["self"]]],[10,"FRAC_1_SQRT_2","","Return `1.0 / sqrt(2.0)`.",26,[[],["self"]]],[10,"FRAC_2_PI","","Return `2.0 / π`.",26,[[],["self"]]],[10,"FRAC_2_SQRT_PI","","Return `2.0 / sqrt(π)`.",26,[[],["self"]]],[10,"FRAC_PI_2","","Return `π / 2.0`.",26,[[],["self"]]],[10,"FRAC_PI_3","","Return `π / 3.0`.",26,[[],["self"]]],[10,"FRAC_PI_4","","Return `π / 4.0`.",26,[[],["self"]]],[10,"FRAC_PI_6","","Return `π / 6.0`.",26,[[],["self"]]],[10,"FRAC_PI_8","","Return `π / 8.0`.",26,[[],["self"]]],[10,"LN_10","","Return `ln(10.0)`.",26,[[],["self"]]],[10,"LN_2","","Return `ln(2.0)`.",26,[[],["self"]]],[10,"LOG10_E","","Return `log10(e)`.",26,[[],["self"]]],[10,"LOG2_E","","Return `log2(e)`.",26,[[],["self"]]],[10,"PI","","Return Archimedes’ constant.",26,[[],["self"]]],[10,"SQRT_2","","Return `sqrt(2.0)`.",26,[[],["self"]]],[0,"identities","num::traits","",N,N],[8,"Zero","num::traits::identities","Defines an additive identity element for `Self`.",N,N],[10,"zero","","Returns the additive identity element of `Self`, `0`.",3,[[],["self"]]],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",3,[[["self"]],["bool"]]],[8,"One","","Defines a multiplicative identity element for `Self`.",N,N],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",4,[[],["self"]]],[11,"is_one","","Returns `true` if `self` is equal to the multiplicative…",4,[[["self"]],["bool"]]],[5,"zero","","Returns the additive identity, `0`.",N,[[],["t"]]],[5,"one","","Returns the multiplicative identity, `1`.",N,[[],["t"]]],[0,"int","num::traits","",N,N],[8,"PrimInt","num::traits::int","",N,N],[10,"count_ones","","Returns the number of ones in the binary representation of…",12,[[["self"]],["u32"]]],[10,"count_zeros","","Returns the number of zeros in the binary representation…",12,[[["self"]],["u32"]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary…",12,[[["self"]],["u32"]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary…",12,[[["self"]],["u32"]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount,…",12,[[["self"],["u32"]],["self"]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount,…",12,[[["self"],["u32"]],["self"]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount,…",12,[[["self"],["u32"]],["self"]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount,…",12,[[["self"],["u32"]],["self"]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount,…",12,[[["self"],["u32"]],["self"]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount,…",12,[[["self"],["u32"]],["self"]]],[10,"swap_bytes","","Reverses the byte order of the integer.",12,[[["self"]],["self"]]],[10,"from_be","","Convert an integer from big endian to the target's…",12,[[["self"]],["self"]]],[10,"from_le","","Convert an integer from little endian to the target's…",12,[[["self"]],["self"]]],[10,"to_be","","Convert `self` to big endian from the target's endianness.",12,[[["self"]],["self"]]],[10,"to_le","","Convert `self` to little endian from the target's…",12,[[["self"]],["self"]]],[10,"pow","","Raises self to the power of `exp`, using exponentiation by…",12,[[["self"],["u32"]],["self"]]],[0,"ops","num::traits","",N,N],[0,"checked","num::traits::ops","",N,N],[8,"CheckedAdd","num::traits::ops::checked","Performs addition that returns `None` instead of wrapping…",N,N],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow…",8,[[["self"],["self"]],["option"]]],[8,"CheckedSub","","Performs subtraction that returns `None` instead of…",N,N],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If…",9,[[["self"],["self"]],["option"]]],[8,"CheckedMul","","Performs multiplication that returns `None` instead of…",N,N],[10,"checked_mul","","Multiplies two numbers, checking for underflow or…",10,[[["self"],["self"]],["option"]]],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking…",N,N],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and…",11,[[["self"],["self"]],["option"]]],[8,"CheckedRem","","Performs an integral remainder that returns `None` instead…",N,N],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for…",27,[[["self"],["self"]],["option"]]],[8,"CheckedNeg","","Performs negation that returns `None` if the result can't…",N,N],[10,"checked_neg","","Negates a number, returning `None` for results that can't…",28,[[["self"]],["option"]]],[8,"CheckedShl","","Performs a left shift that returns `None` on overflow.",N,N],[10,"checked_shl","","Shifts a number to the left, checking for overflow. If…",29,[[["self"],["u32"]],["option"]]],[8,"CheckedShr","","Performs a right shift that returns `None` on overflow.",N,N],[10,"checked_shr","","Shifts a number to the left, checking for overflow. If…",30,[[["self"],["u32"]],["option"]]],[0,"inv","num::traits::ops","",N,N],[8,"Inv","num::traits::ops::inv","Unary operator for retrieving the multiplicative inverse,…",N,N],[16,"Output","","The result after applying the operator.",31,N],[10,"inv","","Returns the multiplicative inverse of `self`.",31,N],[0,"mul_add","num::traits::ops","",N,N],[8,"MulAdd","num::traits::ops::mul_add","Fused multiply-add. Computes `(self * a) + b` with only…",N,N],[16,"Output","","The resulting type after applying the fused multiply-add.",32,N],[10,"mul_add","","Performs the fused multiply-add operation.",32,N],[8,"MulAddAssign","","The fused multiply-add assignment operation.",N,N],[10,"mul_add_assign","","Performs the fused multiply-add operation.",33,N],[0,"saturating","num::traits::ops","",N,N],[8,"Saturating","num::traits::ops::saturating","Saturating math operations",N,N],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at…",7,[[["self"],["self"]],["self"]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating…",7,[[["self"],["self"]],["self"]]],[0,"wrapping","num::traits::ops","",N,N],[8,"WrappingAdd","num::traits::ops::wrapping","Performs addition that wraps around on overflow.",N,N],[10,"wrapping_add","","Wrapping (modular) addition. Computes `self + other`,…",34,[[["self"],["self"]],["self"]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",N,N],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes `self - other`,…",35,[[["self"],["self"]],["self"]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",N,N],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes `self *…",36,[[["self"],["self"]],["self"]]],[8,"WrappingShl","","Performs a left shift that does not panic.",N,N],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields `self << mask(rhs)`,…",37,[[["self"],["u32"]],["self"]]],[8,"WrappingShr","","Performs a right shift that does not panic.",N,N],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields `self >>…",38,[[["self"],["u32"]],["self"]]],[0,"pow","num::traits","",N,N],[8,"Pow","num::traits::pow","Binary operator for raising a value to a power.",N,N],[16,"Output","","The result after applying the operator.",18,N],[10,"pow","","Returns `self` to the power `rhs`.",18,N],[5,"pow","","Raises a value to the power of exp, using exponentiation…",N,[[["t"],["usize"]],["t"]]],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an…",N,[[["t"],["usize"]],["option"]]],[0,"real","num::traits","",N,N],[8,"Real","num::traits::real","A trait for real number types that do not necessarily have…",N,N],[10,"min_value","","Returns the smallest finite value that this type can…",39,[[],["self"]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",39,[[],["self"]]],[10,"epsilon","","Returns epsilon, a small positive value.",39,[[],["self"]]],[10,"max_value","","Returns the largest finite value that this type can…",39,[[],["self"]]],[10,"floor","","Returns the largest integer less than or equal to a number.",39,[[["self"]],["self"]]],[10,"ceil","","Returns the smallest integer greater than or equal to a…",39,[[["self"]],["self"]]],[10,"round","","Returns the nearest integer to a number. Round half-way…",39,[[["self"]],["self"]]],[10,"trunc","","Return the integer part of a number.",39,[[["self"]],["self"]]],[10,"fract","","Returns the fractional part of a number.",39,[[["self"]],["self"]]],[10,"abs","","Computes the absolute value of `self`. Returns…",39,[[["self"]],["self"]]],[10,"signum","","Returns a number that represents the sign of `self`.",39,[[["self"]],["self"]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`,…",39,[[["self"]],["bool"]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`,…",39,[[["self"]],["bool"]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only…",39,[[["self"],["self"],["self"]],["self"]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",39,[[["self"]],["self"]]],[10,"powi","","Raise a number to an integer power.",39,[[["self"],["i32"]],["self"]]],[10,"powf","","Raise a number to a real number power.",39,[[["self"],["self"]],["self"]]],[10,"sqrt","","Take the square root of a number.",39,[[["self"]],["self"]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",39,[[["self"]],["self"]]],[10,"exp2","","Returns `2^(self)`.",39,[[["self"]],["self"]]],[10,"ln","","Returns the natural logarithm of the number.",39,[[["self"]],["self"]]],[10,"log","","Returns the logarithm of the number with respect to an…",39,[[["self"],["self"]],["self"]]],[10,"log2","","Returns the base 2 logarithm of the number.",39,[[["self"]],["self"]]],[10,"log10","","Returns the base 10 logarithm of the number.",39,[[["self"]],["self"]]],[10,"to_degrees","","Converts radians to degrees.",39,[[["self"]],["self"]]],[10,"to_radians","","Converts degrees to radians.",39,[[["self"]],["self"]]],[10,"max","","Returns the maximum of the two numbers.",39,[[["self"],["self"]],["self"]]],[10,"min","","Returns the minimum of the two numbers.",39,[[["self"],["self"]],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",39,[[["self"],["self"]],["self"]]],[10,"cbrt","","Take the cubic root of a number.",39,[[["self"]],["self"]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle…",39,[[["self"],["self"]],["self"]]],[10,"sin","","Computes the sine of a number (in radians).",39,[[["self"]],["self"]]],[10,"cos","","Computes the cosine of a number (in radians).",39,[[["self"]],["self"]]],[10,"tan","","Computes the tangent of a number (in radians).",39,[[["self"]],["self"]]],[10,"asin","","Computes the arcsine of a number. Return value is in…",39,[[["self"]],["self"]]],[10,"acos","","Computes the arccosine of a number. Return value is in…",39,[[["self"]],["self"]]],[10,"atan","","Computes the arctangent of a number. Return value is in…",39,[[["self"]],["self"]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and…",39,[[["self"],["self"]],["self"]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number,…",39,N],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if…",39,[[["self"]],["self"]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than…",39,[[["self"]],["self"]]],[10,"sinh","","Hyperbolic sine function.",39,[[["self"]],["self"]]],[10,"cosh","","Hyperbolic cosine function.",39,[[["self"]],["self"]]],[10,"tanh","","Hyperbolic tangent function.",39,[[["self"]],["self"]]],[10,"asinh","","Inverse hyperbolic sine function.",39,[[["self"]],["self"]]],[10,"acosh","","Inverse hyperbolic cosine function.",39,[[["self"]],["self"]]],[10,"atanh","","Inverse hyperbolic tangent function.",39,[[["self"]],["self"]]],[0,"sign","num::traits","",N,N],[8,"Signed","num::traits::sign","Useful functions for signed numbers (i.e. numbers that can…",N,N],[10,"abs","","Computes the absolute value.",5,[[["self"]],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",5,[[["self"],["self"]],["self"]]],[10,"signum","","Returns the sign of the number.",5,[[["self"]],["self"]]],[10,"is_positive","","Returns true if the number is positive and false if the…",5,[[["self"]],["bool"]]],[10,"is_negative","","Returns true if the number is negative and false if the…",5,[[["self"]],["bool"]]],[5,"abs","","Computes the absolute value.",N,[[["t"]],["t"]]],[5,"abs_sub","","The positive difference of two numbers.",N,[[["t"],["t"]],["t"]]],[5,"signum","","Returns the sign of the number.",N,[[["t"]],["t"]]],[8,"Unsigned","","A trait for values which cannot be negative",N,N],[8,"Num","num::traits","The base trait for numeric types, covering `0` and `1`…",N,N],[16,"FromStrRadixErr","","",2,N],[10,"from_str_radix","","Convert from a string and radix <= 36.",2,[[["str"],["u32"]],["result"]]],[8,"NumOps","","The trait for types implementing basic numeric operations",N,N],[8,"NumRef","","The trait for `Num` types which also implement numeric…",N,N],[8,"RefNum","","The trait for references which implement numeric…",N,N],[8,"NumAssignOps","","The trait for types implementing numeric assignment…",N,N],[8,"NumAssign","","The trait for `Num` types which also implement assignment…",N,N],[8,"NumAssignRef","","The trait for `NumAssign` types which also implement…",N,N],[4,"FloatErrorKind","","",N,N],[13,"Empty","","",40,N],[13,"Invalid","","",40,N],[3,"ParseFloatError","","",N,N],[12,"kind","","",41,N],[5,"clamp","","A value bounded by a minimum and a maximum",N,[[["t"],["t"],["t"]],["t"]]],[0,"rational","num","",N,N],[3,"Ratio","num::rational","Represents the ratio between 2 numbers.",N,N],[6,"Rational","","Alias for a `Ratio` of machine-sized integers.",N,N],[6,"Rational32","","",N,N],[6,"Rational64","","",N,N],[6,"BigRational","","Alias for arbitrary precision rationals.",N,N],[3,"ParseRatioError","","",N,N],[11,"from","num::bigint","",42,[[["t"]],["t"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,N],[11,"to_string","","",42,[[["self"]],["string"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"to_string","","",43,[[["self"]],["string"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"from","num::complex","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","num::bigint","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_string","","",19,[[["self"]],["string"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"from","num::complex","",44,[[["t"]],["t"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"to_string","","",44,[[["self"]],["string"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"from","num::integer","",45,[[["t"]],["t"]]],[11,"into_iter","","",45,[[["self"]],["i"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"from","num::iter","",46,[[["t"]],["t"]]],[11,"into_iter","","",46,[[["self"]],["i"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,N],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into_iter","","",47,[[["self"]],["i"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,N],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into_iter","","",48,[[["self"]],["i"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,N],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into_iter","","",49,[[["self"]],["i"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,N],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"from","num::traits","",40,[[["t"]],["t"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"to_string","","",41,[[["self"]],["string"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"from","num::rational","",50,[[["t"]],["t"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,N],[11,"to_string","","",50,[[["self"]],["string"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,N],[11,"to_string","","",51,[[["self"]],["string"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"fmt","num::traits","",41,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result",["error"]]]],[11,"next","num::integer","",45,[[["self"]],["option"]]],[11,"next_back","num::iter","",46,[[["self"]],["option"]]],[11,"next_back","","",47,[[["self"]],["option"]]],[11,"next","","",47,[[["self"]],["option"]]],[11,"size_hint","","",47,N],[11,"next","","",48,[[["self"]],["option"]]],[11,"next","","",49,[[["self"]],["option"]]],[11,"next","","",46,[[["self"]],["option"]]],[11,"size_hint","","",46,N],[11,"clone","","",47,[[["self"]],["rangeinclusive"]]],[11,"clone","","",46,[[["self"]],["range"]]],[11,"clone","","",49,[[["self"]],["rangestepinclusive"]]],[11,"clone","","",48,[[["self"]],["rangestep"]]],[11,"one","num::complex","",0,[[],["complex"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"zero","","",0,[[],["complex"]]],[11,"is_zero","","",0,[[["self"]],["bool"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"encode","","",0,[[["self"],["__st"]],["result"]]],[11,"neg","","",0,[[["self"]],["complex"]]],[11,"eq","","",44,[[["self"],["parsecomplexerror"]],["bool"]]],[11,"ne","","",44,[[["self"],["parsecomplexerror"]],["bool"]]],[11,"eq","","",0,[[["self"],["complex"]],["bool"]]],[11,"ne","","",0,[[["self"],["complex"]],["bool"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"mul","","",0,[[["self"],["t"]],["complex"]]],[11,"mul","","",0,[[["self"],["complex"]],["complex"]]],[11,"mul","","",0,[[["self"],["t"]],["complex"]]],[11,"mul","","",0,[[["self"],["complex"]],["complex"]]],[11,"rem_assign","","",0,N],[11,"rem_assign","","",0,N],[11,"rem_assign","","",0,N],[11,"rem_assign","","",0,N],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"decode","","",0,[[["__dt"]],["result",["complex"]]]],[11,"div","","",0,[[["self"],["complex"]],["complex"]]],[11,"div","","",0,[[["self"],["complex"]],["complex"]]],[11,"div","","",0,[[["self"],["t"]],["complex"]]],[11,"div","","",0,[[["self"],["t"]],["complex"]]],[11,"clone","","",0,[[["self"]],["complex"]]],[11,"from_str_radix","","Parses `a +/- bi`; `ai +/- b`; `a`; or `bi` where `a` and…",0,[[["str"],["u32"]],["result",["complex"]]]],[11,"add","","",0,[[["self"],["complex"]],["complex"]]],[11,"add","","",0,[[["self"],["t"]],["complex"]]],[11,"add","","",0,[[["self"],["complex"]],["complex"]]],[11,"add","","",0,[[["self"],["t"]],["complex"]]],[11,"default","","",0,[[],["complex"]]],[11,"sub","","",0,[[["self"],["complex"]],["complex"]]],[11,"sub","","",0,[[["self"],["t"]],["complex"]]],[11,"sub","","",0,[[["self"],["complex"]],["complex"]]],[11,"sub","","",0,[[["self"],["t"]],["complex"]]],[11,"description","","",44,[[["self"]],["str"]]],[11,"from_str","","Parses `a +/- bi`; `ai +/- b`; `a`; or `bi` where `a` and…",0,[[["str"]],["result",["complex"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"rem","","",0,[[["self"],["t"]],["complex"]]],[11,"rem","","",0,[[["self"],["complex"]],["complex"]]],[11,"rem","","",0,[[["self"],["complex"]],["complex"]]],[11,"rem","","",0,[[["self"],["t"]],["complex"]]],[11,"from","","",0,[[["t"]],["complex"]]],[11,"from","","",0,[[["t"]],["complex"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"sub_assign","","",0,N],[11,"sub_assign","","",0,N],[11,"sub_assign","","",0,N],[11,"sub_assign","","",0,N],[11,"add_assign","","",0,N],[11,"add_assign","","",0,N],[11,"add_assign","","",0,N],[11,"add_assign","","",0,N],[11,"div_assign","","",0,N],[11,"div_assign","","",0,N],[11,"div_assign","","",0,N],[11,"div_assign","","",0,N],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"mul_assign","","",0,N],[11,"mul_assign","","",0,N],[11,"mul_assign","","",0,N],[11,"mul_assign","","",0,N],[11,"hash","","",0,N],[11,"hash","num::bigint","",23,N],[11,"hash","","",42,N],[11,"hash","","",43,N],[11,"mul_assign","","",43,N],[11,"mul_assign","","",43,N],[11,"mul_assign","","",43,N],[11,"mul_assign","","",43,N],[11,"mul_assign","","",43,N],[11,"mul_assign","","",43,N],[11,"mul_assign","","",43,N],[11,"to_bigint","","",42,[[["self"]],["option",["bigint"]]]],[11,"to_bigint","","",43,[[["self"]],["option",["bigint"]]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result",["error"]]]],[11,"bitand","","",43,[[["self"],["biguint"]],["biguint"]]],[11,"bitand","","",43,[[["self"],["biguint"]],["biguint"]]],[11,"checked_mul","","",43,[[["self"],["biguint"]],["option",["biguint"]]]],[11,"checked_mul","","",42,[[["self"],["bigint"]],["option",["bigint"]]]],[11,"bitor_assign","","",43,N],[11,"bitor_assign","","",43,N],[11,"cmp","","",42,[[["self"],["bigint"]],["ordering"]]],[11,"cmp","","",43,[[["self"],["biguint"]],["ordering"]]],[11,"cmp","","",23,[[["self"],["sign"]],["ordering"]]],[11,"from_i64","","",42,[[["i64"]],["option",["bigint"]]]],[11,"from_u64","","",42,[[["u64"]],["option",["bigint"]]]],[11,"from_f64","","",42,[[["f64"]],["option",["bigint"]]]],[11,"from_i64","","",43,[[["i64"]],["option",["biguint"]]]],[11,"from_u64","","",43,[[["u64"]],["option",["biguint"]]]],[11,"from_f64","","",43,[[["f64"]],["option",["biguint"]]]],[11,"neg","","Negate Sign value.",23,[[["self"]],["sign"]]],[11,"neg","","",42,[[["self"]],["bigint"]]],[11,"neg","","",43,[[["self"]],["biguint"]]],[11,"eq","","",43,[[["self"],["biguint"]],["bool"]]],[11,"eq","","",19,[[["self"],["parsebiginterror"]],["bool"]]],[11,"ne","","",19,[[["self"],["parsebiginterror"]],["bool"]]],[11,"eq","","",42,[[["self"],["bigint"]],["bool"]]],[11,"eq","","",23,[[["self"],["sign"]],["bool"]]],[11,"bitor","","",43,[[["self"],["biguint"]],["biguint"]]],[11,"bitor","","",43,[[["self"],["biguint"]],["biguint"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result",["error"]]]],[11,"from_str_radix","","Creates and initializes a `BigUint`.",43,[[["str"],["u32"]],["result",["biguint","parsebiginterror"]]]],[11,"from_str_radix","","Creates and initializes a BigInt.",42,[[["str"],["u32"]],["result",["bigint","parsebiginterror"]]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result",["error"]]]],[11,"mul","","",43,[[["self"],["u64"]],["biguint"]]],[11,"mul","","",42,[[["self"],["u64"]],["bigint"]]],[11,"mul","","",43,[[["self"],["usize"]],["biguint"]]],[11,"mul","","",42,[[["self"],["bigint"]],["bigint"]]],[11,"mul","","",23,[[["self"],["sign"]],["sign"]]],[11,"mul","","",42,[[["self"],["i32"]],["bigint"]]],[11,"mul","","",42,[[["self"],["u16"]],["bigint"]]],[11,"mul","","",42,[[["self"],["usize"]],["bigint"]]],[11,"mul","","",43,[[["self"],["u16"]],["biguint"]]],[11,"mul","","",43,[[["self"],["u32"]],["biguint"]]],[11,"mul","","",42,[[["self"],["isize"]],["bigint"]]],[11,"mul","","",42,[[["self"],["i8"]],["bigint"]]],[11,"mul","","",42,[[["self"],["isize"]],["bigint"]]],[11,"mul","","",43,[[["self"],["usize"]],["biguint"]]],[11,"mul","","",42,[[["self"],["bigint"]],["bigint"]]],[11,"mul","","",43,[[["self"],["u64"]],["biguint"]]],[11,"mul","","",43,[[["self"],["u8"]],["biguint"]]],[11,"mul","","",42,[[["self"],["usize"]],["bigint"]]],[11,"mul","","",43,[[["self"],["u16"]],["biguint"]]],[11,"mul","","",42,[[["self"],["i32"]],["bigint"]]],[11,"mul","","",42,[[["self"],["u16"]],["bigint"]]],[11,"mul","","",43,[[["self"],["biguint"]],["biguint"]]],[11,"mul","","",42,[[["self"],["u32"]],["bigint"]]],[11,"mul","","",43,[[["self"],["biguint"]],["biguint"]]],[11,"mul","","",42,[[["self"],["u8"]],["bigint"]]],[11,"mul","","",43,[[["self"],["u8"]],["biguint"]]],[11,"mul","","",42,[[["self"],["i64"]],["bigint"]]],[11,"mul","","",43,[[["self"],["u32"]],["biguint"]]],[11,"mul","","",42,[[["self"],["u32"]],["bigint"]]],[11,"mul","","",42,[[["self"],["i8"]],["bigint"]]],[11,"mul","","",42,[[["self"],["i64"]],["bigint"]]],[11,"mul","","",42,[[["self"],["u8"]],["bigint"]]],[11,"mul","","",42,[[["self"],["i16"]],["bigint"]]],[11,"mul","","",42,[[["self"],["i16"]],["bigint"]]],[11,"mul","","",42,[[["self"],["u64"]],["bigint"]]],[11,"rem_assign","","",43,N],[11,"rem_assign","","",43,N],[11,"rem_assign","","",43,N],[11,"rem_assign","","",43,N],[11,"rem_assign","","",43,N],[11,"rem_assign","","",43,N],[11,"rem_assign","","",43,N],[11,"shr","","",43,[[["self"],["usize"]],["biguint"]]],[11,"shr","","",42,[[["self"],["usize"]],["bigint"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result",["error"]]]],[11,"checked_sub","","",42,[[["self"],["bigint"]],["option",["bigint"]]]],[11,"checked_sub","","",43,[[["self"],["biguint"]],["option",["biguint"]]]],[11,"abs","","",42,[[["self"]],["bigint"]]],[11,"abs_sub","","",42,[[["self"],["bigint"]],["bigint"]]],[11,"signum","","",42,[[["self"]],["bigint"]]],[11,"is_positive","","",42,[[["self"]],["bool"]]],[11,"is_negative","","",42,[[["self"]],["bool"]]],[11,"shl_assign","","",43,N],[11,"div","","",42,[[["self"],["u16"]],["bigint"]]],[11,"div","","",43,[[["self"],["u32"]],["biguint"]]],[11,"div","","",42,[[["self"],["i8"]],["bigint"]]],[11,"div","","",43,[[["self"],["u8"]],["biguint"]]],[11,"div","","",42,[[["self"],["u8"]],["bigint"]]],[11,"div","","",42,[[["self"],["i16"]],["bigint"]]],[11,"div","","",42,[[["self"],["usize"]],["bigint"]]],[11,"div","","",43,[[["self"],["biguint"]],["biguint"]]],[11,"div","","",42,[[["self"],["i32"]],["bigint"]]],[11,"div","","",42,[[["self"],["i8"]],["bigint"]]],[11,"div","","",43,[[["self"],["u64"]],["biguint"]]],[11,"div","","",42,[[["self"],["isize"]],["bigint"]]],[11,"div","","",42,[[["self"],["u64"]],["bigint"]]],[11,"div","","",43,[[["self"],["u64"]],["biguint"]]],[11,"div","","",42,[[["self"],["bigint"]],["bigint"]]],[11,"div","","",43,[[["self"],["u16"]],["biguint"]]],[11,"div","","",43,[[["self"],["biguint"]],["biguint"]]],[11,"div","","",42,[[["self"],["i16"]],["bigint"]]],[11,"div","","",42,[[["self"],["i64"]],["bigint"]]],[11,"div","","",42,[[["self"],["isize"]],["bigint"]]],[11,"div","","",42,[[["self"],["bigint"]],["bigint"]]],[11,"div","","",42,[[["self"],["u64"]],["bigint"]]],[11,"div","","",43,[[["self"],["usize"]],["biguint"]]],[11,"div","","",43,[[["self"],["usize"]],["biguint"]]],[11,"div","","",42,[[["self"],["i32"]],["bigint"]]],[11,"div","","",42,[[["self"],["u8"]],["bigint"]]],[11,"div","","",42,[[["self"],["u32"]],["bigint"]]],[11,"div","","",43,[[["self"],["u16"]],["biguint"]]],[11,"div","","",42,[[["self"],["i64"]],["bigint"]]],[11,"div","","",42,[[["self"],["u16"]],["bigint"]]],[11,"div","","",43,[[["self"],["u32"]],["biguint"]]],[11,"div","","",43,[[["self"],["u8"]],["biguint"]]],[11,"div","","",42,[[["self"],["usize"]],["bigint"]]],[11,"div","","",42,[[["self"],["u32"]],["bigint"]]],[11,"bitxor_assign","","",43,N],[11,"bitxor_assign","","",43,N],[11,"clone","","",42,[[["self"]],["bigint"]]],[11,"clone","","",23,[[["self"]],["sign"]]],[11,"clone","","",43,[[["self"]],["biguint"]]],[11,"partial_cmp","","",23,[[["self"],["sign"]],["option",["ordering"]]]],[11,"partial_cmp","","",42,[[["self"],["bigint"]],["option",["ordering"]]]],[11,"partial_cmp","","",43,[[["self"],["biguint"]],["option",["ordering"]]]],[11,"to_i64","","",42,[[["self"]],["option",["i64"]]]],[11,"to_u64","","",42,[[["self"]],["option",["u64"]]]],[11,"to_f32","","",42,[[["self"]],["option",["f32"]]]],[11,"to_f64","","",42,[[["self"]],["option",["f64"]]]],[11,"to_i64","","",43,[[["self"]],["option",["i64"]]]],[11,"to_u64","","",43,[[["self"]],["option",["u64"]]]],[11,"to_f32","","",43,[[["self"]],["option",["f32"]]]],[11,"to_f64","","",43,[[["self"]],["option",["f64"]]]],[11,"div_rem","","",42,N],[11,"div_floor","","",42,[[["self"],["bigint"]],["bigint"]]],[11,"mod_floor","","",42,[[["self"],["bigint"]],["bigint"]]],[11,"div_mod_floor","","",42,N],[11,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number…",42,[[["self"],["bigint"]],["bigint"]]],[11,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number…",42,[[["self"],["bigint"]],["bigint"]]],[11,"divides","","Deprecated, use `is_multiple_of` instead.",42,[[["self"],["bigint"]],["bool"]]],[11,"is_multiple_of","","Returns `true` if the number is a multiple of `other`.",42,[[["self"],["bigint"]],["bool"]]],[11,"is_even","","Returns `true` if the number is divisible by `2`.",42,[[["self"]],["bool"]]],[11,"is_odd","","Returns `true` if the number is not divisible by `2`.",42,[[["self"]],["bool"]]],[11,"div_rem","","",43,N],[11,"div_floor","","",43,[[["self"],["biguint"]],["biguint"]]],[11,"mod_floor","","",43,[[["self"],["biguint"]],["biguint"]]],[11,"div_mod_floor","","",43,N],[11,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number…",43,[[["self"],["biguint"]],["biguint"]]],[11,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number…",43,[[["self"],["biguint"]],["biguint"]]],[11,"divides","","Deprecated, use `is_multiple_of` instead.",43,[[["self"],["biguint"]],["bool"]]],[11,"is_multiple_of","","Returns `true` if the number is a multiple of `other`.",43,[[["self"],["biguint"]],["bool"]]],[11,"is_even","","Returns `true` if the number is divisible by `2`.",43,[[["self"]],["bool"]]],[11,"is_odd","","Returns `true` if the number is not divisible by `2`.",43,[[["self"]],["bool"]]],[11,"shr_assign","","",43,N],[11,"add","","",42,[[["self"],["i16"]],["bigint"]]],[11,"add","","",42,[[["self"],["i64"]],["bigint"]]],[11,"add","","",42,[[["self"],["usize"]],["bigint"]]],[11,"add","","",43,[[["self"],["u16"]],["biguint"]]],[11,"add","","",42,[[["self"],["i16"]],["bigint"]]],[11,"add","","",42,[[["self"],["bigint"]],["bigint"]]],[11,"add","","",42,[[["self"],["u8"]],["bigint"]]],[11,"add","","",42,[[["self"],["i32"]],["bigint"]]],[11,"add","","",42,[[["self"],["u64"]],["bigint"]]],[11,"add","","",42,[[["self"],["isize"]],["bigint"]]],[11,"add","","",43,[[["self"],["u32"]],["biguint"]]],[11,"add","","",42,[[["self"],["u16"]],["bigint"]]],[11,"add","","",42,[[["self"],["u8"]],["bigint"]]],[11,"add","","",43,[[["self"],["u8"]],["biguint"]]],[11,"add","","",42,[[["self"],["u32"]],["bigint"]]],[11,"add","","",42,[[["self"],["usize"]],["bigint"]]],[11,"add","","",43,[[["self"],["usize"]],["biguint"]]],[11,"add","","",43,[[["self"],["u16"]],["biguint"]]],[11,"add","","",42,[[["self"],["u64"]],["bigint"]]],[11,"add","","",42,[[["self"],["i32"]],["bigint"]]],[11,"add","","",42,[[["self"],["bigint"]],["bigint"]]],[11,"add","","",43,[[["self"],["u64"]],["biguint"]]],[11,"add","","",43,[[["self"],["u8"]],["biguint"]]],[11,"add","","",43,[[["self"],["biguint"]],["biguint"]]],[11,"add","","",43,[[["self"],["usize"]],["biguint"]]],[11,"add","","",42,[[["self"],["u32"]],["bigint"]]],[11,"add","","",43,[[["self"],["u32"]],["biguint"]]],[11,"add","","",43,[[["self"],["biguint"]],["biguint"]]],[11,"add","","",42,[[["self"],["i8"]],["bigint"]]],[11,"add","","",42,[[["self"],["i8"]],["bigint"]]],[11,"add","","",42,[[["self"],["isize"]],["bigint"]]],[11,"add","","",42,[[["self"],["u16"]],["bigint"]]],[11,"add","","",42,[[["self"],["i64"]],["bigint"]]],[11,"add","","",43,[[["self"],["u64"]],["biguint"]]],[11,"to_biguint","","",42,[[["self"]],["option",["biguint"]]]],[11,"to_biguint","","",43,[[["self"]],["option",["biguint"]]]],[11,"default","","",42,[[],["bigint"]]],[11,"default","","",43,[[],["biguint"]]],[11,"bitand_assign","","",43,N],[11,"bitand_assign","","",43,N],[11,"one","","",43,[[],["biguint"]]],[11,"one","","",42,[[],["bigint"]]],[11,"sub","","",43,[[["self"],["u64"]],["biguint"]]],[11,"sub","","",42,[[["self"],["isize"]],["bigint"]]],[11,"sub","","",42,[[["self"],["u16"]],["bigint"]]],[11,"sub","","",43,[[["self"],["usize"]],["biguint"]]],[11,"sub","","",42,[[["self"],["i16"]],["bigint"]]],[11,"sub","","",43,[[["self"],["u64"]],["biguint"]]],[11,"sub","","",42,[[["self"],["u64"]],["bigint"]]],[11,"sub","","",42,[[["self"],["i32"]],["bigint"]]],[11,"sub","","",42,[[["self"],["u8"]],["bigint"]]],[11,"sub","","",43,[[["self"],["u32"]],["biguint"]]],[11,"sub","","",43,[[["self"],["biguint"]],["biguint"]]],[11,"sub","","",42,[[["self"],["u16"]],["bigint"]]],[11,"sub","","",43,[[["self"],["biguint"]],["biguint"]]],[11,"sub","","",42,[[["self"],["u32"]],["bigint"]]],[11,"sub","","",42,[[["self"],["u32"]],["bigint"]]],[11,"sub","","",43,[[["self"],["usize"]],["biguint"]]],[11,"sub","","",43,[[["self"],["u8"]],["biguint"]]],[11,"sub","","",43,[[["self"],["u32"]],["biguint"]]],[11,"sub","","",43,[[["self"],["u8"]],["biguint"]]],[11,"sub","","",43,[[["self"],["u16"]],["biguint"]]],[11,"sub","","",43,[[["self"],["u16"]],["biguint"]]],[11,"sub","","",42,[[["self"],["bigint"]],["bigint"]]],[11,"sub","","",42,[[["self"],["u64"]],["bigint"]]],[11,"sub","","",42,[[["self"],["u8"]],["bigint"]]],[11,"sub","","",42,[[["self"],["i32"]],["bigint"]]],[11,"sub","","",42,[[["self"],["i64"]],["bigint"]]],[11,"sub","","",42,[[["self"],["bigint"]],["bigint"]]],[11,"sub","","",42,[[["self"],["usize"]],["bigint"]]],[11,"sub","","",42,[[["self"],["usize"]],["bigint"]]],[11,"sub","","",42,[[["self"],["i8"]],["bigint"]]],[11,"sub","","",42,[[["self"],["i8"]],["bigint"]]],[11,"sub","","",42,[[["self"],["isize"]],["bigint"]]],[11,"sub","","",42,[[["self"],["i64"]],["bigint"]]],[11,"sub","","",42,[[["self"],["i16"]],["bigint"]]],[11,"zero","","",43,[[],["biguint"]]],[11,"is_zero","","",43,[[["self"]],["bool"]]],[11,"zero","","",42,[[],["bigint"]]],[11,"is_zero","","",42,[[["self"]],["bool"]]],[11,"description","","",19,[[["self"]],["str"]]],[11,"checked_div","","",42,[[["self"],["bigint"]],["option",["bigint"]]]],[11,"checked_div","","",43,[[["self"],["biguint"]],["option",["biguint"]]]],[11,"from_str","","",42,[[["str"]],["result",["bigint","parsebiginterror"]]]],[11,"from_str","","",43,[[["str"]],["result",["biguint","parsebiginterror"]]]],[11,"bitxor","","",43,[[["self"],["biguint"]],["biguint"]]],[11,"bitxor","","",43,[[["self"],["biguint"]],["biguint"]]],[11,"rem","","",42,[[["self"],["bigint"]],["bigint"]]],[11,"rem","","",43,[[["self"],["biguint"]],["biguint"]]],[11,"rem","","",42,[[["self"],["isize"]],["bigint"]]],[11,"rem","","",42,[[["self"],["u32"]],["bigint"]]],[11,"rem","","",43,[[["self"],["u16"]],["biguint"]]],[11,"rem","","",42,[[["self"],["isize"]],["bigint"]]],[11,"rem","","",43,[[["self"],["biguint"]],["biguint"]]],[11,"rem","","",42,[[["self"],["bigint"]],["bigint"]]],[11,"rem","","",43,[[["self"],["usize"]],["biguint"]]],[11,"rem","","",42,[[["self"],["u8"]],["bigint"]]],[11,"rem","","",42,[[["self"],["usize"]],["bigint"]]],[11,"rem","","",42,[[["self"],["i16"]],["bigint"]]],[11,"rem","","",42,[[["self"],["i8"]],["bigint"]]],[11,"rem","","",42,[[["self"],["i64"]],["bigint"]]],[11,"rem","","",43,[[["self"],["u8"]],["biguint"]]],[11,"rem","","",42,[[["self"],["i32"]],["bigint"]]],[11,"rem","","",42,[[["self"],["i64"]],["bigint"]]],[11,"rem","","",42,[[["self"],["u8"]],["bigint"]]],[11,"rem","","",42,[[["self"],["u16"]],["bigint"]]],[11,"rem","","",42,[[["self"],["i16"]],["bigint"]]],[11,"rem","","",42,[[["self"],["u64"]],["bigint"]]],[11,"rem","","",43,[[["self"],["u32"]],["biguint"]]],[11,"rem","","",42,[[["self"],["i32"]],["bigint"]]],[11,"rem","","",42,[[["self"],["u32"]],["bigint"]]],[11,"rem","","",43,[[["self"],["u32"]],["biguint"]]],[11,"rem","","",42,[[["self"],["u16"]],["bigint"]]],[11,"rem","","",42,[[["self"],["i8"]],["bigint"]]],[11,"rem","","",42,[[["self"],["usize"]],["bigint"]]],[11,"rem","","",43,[[["self"],["u64"]],["biguint"]]],[11,"rem","","",43,[[["self"],["u64"]],["biguint"]]],[11,"rem","","",43,[[["self"],["usize"]],["biguint"]]],[11,"rem","","",43,[[["self"],["u16"]],["biguint"]]],[11,"rem","","",42,[[["self"],["u64"]],["bigint"]]],[11,"rem","","",43,[[["self"],["u8"]],["biguint"]]],[11,"from","","",42,[[["i8"]],["bigint"]]],[11,"from","","",42,[[["i16"]],["bigint"]]],[11,"from","","",42,[[["usize"]],["bigint"]]],[11,"from","","",42,[[["biguint"]],["bigint"]]],[11,"from","","",43,[[["u8"]],["biguint"]]],[11,"from","","",42,[[["i32"]],["bigint"]]],[11,"from","","",42,[[["i64"]],["bigint"]]],[11,"from","","",42,[[["u8"]],["bigint"]]],[11,"from","","",19,[[["parseinterror"]],["parsebiginterror"]]],[11,"from","","",43,[[["usize"]],["biguint"]]],[11,"from","","",42,[[["isize"]],["bigint"]]],[11,"from","","",43,[[["u64"]],["biguint"]]],[11,"from","","",43,[[["u16"]],["biguint"]]],[11,"from","","",42,[[["u64"]],["bigint"]]],[11,"from","","",43,[[["u32"]],["biguint"]]],[11,"from","","",42,[[["u16"]],["bigint"]]],[11,"from","","",42,[[["u32"]],["bigint"]]],[11,"checked_add","","",42,[[["self"],["bigint"]],["option",["bigint"]]]],[11,"checked_add","","",43,[[["self"],["biguint"]],["option",["biguint"]]]],[11,"encode","","",43,[[["self"],["__s"]],["result"]]],[11,"encode","","",23,[[["self"],["__s"]],["result"]]],[11,"encode","","",42,[[["self"],["__s"]],["result"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result",["error"]]]],[11,"sub_assign","","",43,N],[11,"sub_assign","","",43,N],[11,"sub_assign","","",43,N],[11,"sub_assign","","",43,N],[11,"sub_assign","","",43,N],[11,"sub_assign","","",43,N],[11,"sub_assign","","",43,N],[11,"shl","","",43,[[["self"],["usize"]],["biguint"]]],[11,"shl","","",42,[[["self"],["usize"]],["bigint"]]],[11,"add_assign","","",43,N],[11,"add_assign","","",43,N],[11,"add_assign","","",43,N],[11,"add_assign","","",43,N],[11,"add_assign","","",43,N],[11,"add_assign","","",43,N],[11,"add_assign","","",43,N],[11,"decode","","",23,[[["__d"]],["result",["sign"]]]],[11,"decode","","",43,[[["__d"]],["result",["biguint"]]]],[11,"decode","","",42,[[["__d"]],["result",["bigint"]]]],[11,"div_assign","","",43,N],[11,"div_assign","","",43,N],[11,"div_assign","","",43,N],[11,"div_assign","","",43,N],[11,"div_assign","","",43,N],[11,"div_assign","","",43,N],[11,"div_assign","","",43,N],[11,"fmt","","",43,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result",["error"]]]],[11,"zero","num::rational","",50,[[],["ratio"]]],[11,"is_zero","","",50,[[["self"]],["bool"]]],[11,"checked_div","","",50,[[["self"],["ratio"]],["option",["ratio"]]]],[11,"cmp","","",50,[[["self"],["ratio"]],["ordering"]]],[11,"neg","","",50,[[["self"]],["ratio"]]],[11,"eq","","",51,[[["self"],["parseratioerror"]],["bool"]]],[11,"ne","","",51,[[["self"],["parseratioerror"]],["bool"]]],[11,"eq","","",50,[[["self"],["ratio"]],["bool"]]],[11,"fmt","","Renders as `numer/denom`. If denom=1, renders as numer.",50,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",50,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result",["error"]]]],[11,"decode","","",50,[[["__dt"]],["result",["ratio"]]]],[11,"mul","","",50,[[["self"],["t"]],["ratio"]]],[11,"mul","","",50,[[["self"],["ratio"]],["ratio"]]],[11,"mul","","",50,[[["self"],["t"]],["ratio"]]],[11,"mul","","",50,[[["self"],["ratio"]],["ratio"]]],[11,"rem_assign","","",50,N],[11,"rem_assign","","",50,N],[11,"rem_assign","","",50,N],[11,"rem_assign","","",50,N],[11,"encode","","",50,[[["self"],["__st"]],["result"]]],[11,"one","","",50,[[],["ratio"]]],[11,"into","","",50,N],[11,"div","","",50,[[["self"],["t"]],["ratio"]]],[11,"div","","",50,[[["self"],["t"]],["ratio"]]],[11,"div","","",50,[[["self"],["ratio"]],["ratio"]]],[11,"div","","",50,[[["self"],["ratio"]],["ratio"]]],[11,"clone","","",50,[[["self"]],["ratio"]]],[11,"clone","","",51,[[["self"]],["parseratioerror"]]],[11,"partial_cmp","","",50,[[["self"],["ratio"]],["option",["ordering"]]]],[11,"from_str_radix","","Parses `numer/denom` where the numbers are in base `radix`.",50,[[["str"],["u32"]],["result",["ratio","parseratioerror"]]]],[11,"add","","",50,[[["self"],["ratio"]],["ratio"]]],[11,"add","","",50,[[["self"],["t"]],["ratio"]]],[11,"add","","",50,[[["self"],["t"]],["ratio"]]],[11,"add","","",50,[[["self"],["ratio"]],["ratio"]]],[11,"checked_sub","","",50,[[["self"],["ratio"]],["option",["ratio"]]]],[11,"abs","","",50,[[["self"]],["ratio"]]],[11,"abs_sub","","",50,[[["self"],["ratio"]],["ratio"]]],[11,"signum","","",50,[[["self"]],["ratio"]]],[11,"is_positive","","",50,[[["self"]],["bool"]]],[11,"is_negative","","",50,[[["self"]],["bool"]]],[11,"sub","","",50,[[["self"],["t"]],["ratio"]]],[11,"sub","","",50,[[["self"],["ratio"]],["ratio"]]],[11,"sub","","",50,[[["self"],["t"]],["ratio"]]],[11,"sub","","",50,[[["self"],["ratio"]],["ratio"]]],[11,"description","","",51,[[["self"]],["str"]]],[11,"from_str","","Parses `numer/denom` or just `numer`.",50,[[["str"]],["result",["ratio","parseratioerror"]]]],[11,"rem","","",50,[[["self"],["ratio"]],["ratio"]]],[11,"rem","","",50,[[["self"],["t"]],["ratio"]]],[11,"rem","","",50,[[["self"],["t"]],["ratio"]]],[11,"rem","","",50,[[["self"],["ratio"]],["ratio"]]],[11,"from","","",50,N],[11,"from","","",50,[[["t"]],["ratio"]]],[11,"sub_assign","","",50,N],[11,"sub_assign","","",50,N],[11,"sub_assign","","",50,N],[11,"sub_assign","","",50,N],[11,"from_i64","","",50,[[["i64"]],["option",["ratio"]]]],[11,"from_u64","","",50,[[["u64"]],["option",["ratio"]]]],[11,"from_f32","","",50,[[["f32"]],["option",["ratio"]]]],[11,"from_f64","","",50,[[["f64"]],["option",["ratio"]]]],[11,"from_i64","","",50,[[["i64"]],["option",["ratio"]]]],[11,"from_u64","","",50,[[["u64"]],["option",["ratio"]]]],[11,"from_f32","","",50,[[["f32"]],["option",["ratio"]]]],[11,"from_f64","","",50,[[["f64"]],["option",["ratio"]]]],[11,"from_i64","","",50,[[["i64"]],["option",["ratio"]]]],[11,"from_u64","","",50,[[["u64"]],["option",["ratio"]]]],[11,"from_f32","","",50,[[["f32"]],["option",["ratio"]]]],[11,"from_f64","","",50,[[["f64"]],["option",["ratio"]]]],[11,"from_i64","","",50,[[["i64"]],["option",["ratio"]]]],[11,"from_u64","","",50,[[["u64"]],["option",["ratio"]]]],[11,"from_f32","","",50,[[["f32"]],["option",["ratio"]]]],[11,"from_f64","","",50,[[["f64"]],["option",["ratio"]]]],[11,"from_i64","","",50,[[["i64"]],["option",["ratio"]]]],[11,"from_u64","","",50,[[["u64"]],["option",["ratio"]]]],[11,"from_f32","","",50,[[["f32"]],["option",["ratio"]]]],[11,"from_f64","","",50,[[["f64"]],["option",["ratio"]]]],[11,"from_i64","","",50,[[["i64"]],["option",["ratio"]]]],[11,"from_u64","","",50,[[["u64"]],["option",["ratio"]]]],[11,"from_f32","","",50,[[["f32"]],["option",["ratio"]]]],[11,"from_f64","","",50,[[["f64"]],["option",["ratio"]]]],[11,"from_i64","","",50,[[["i64"]],["option",["ratio"]]]],[11,"from_u64","","",50,[[["u64"]],["option",["ratio"]]]],[11,"from_f32","","",50,[[["f32"]],["option",["ratio"]]]],[11,"from_f64","","",50,[[["f64"]],["option",["ratio"]]]],[11,"from_i64","","",50,[[["i64"]],["option",["ratio"]]]],[11,"from_u64","","",50,[[["u64"]],["option",["ratio"]]]],[11,"from_f32","","",50,[[["f32"]],["option",["ratio"]]]],[11,"from_f64","","",50,[[["f64"]],["option",["ratio"]]]],[11,"from_i64","","",50,[[["i64"]],["option",["ratio"]]]],[11,"from_u64","","",50,[[["u64"]],["option",["ratio"]]]],[11,"from_f32","","",50,[[["f32"]],["option",["ratio"]]]],[11,"from_f64","","",50,[[["f64"]],["option",["ratio"]]]],[11,"from_i64","","",50,[[["i64"]],["option",["ratio"]]]],[11,"from_u64","","",50,[[["u64"]],["option",["ratio"]]]],[11,"from_f32","","",50,[[["f32"]],["option",["ratio"]]]],[11,"from_f64","","",50,[[["f64"]],["option",["ratio"]]]],[11,"from_i64","","",50,[[["i64"]],["option",["ratio"]]]],[11,"from_u64","","",50,[[["u64"]],["option",["ratio"]]]],[11,"from_f32","","",50,[[["f32"]],["option",["ratio"]]]],[11,"from_f64","","",50,[[["f64"]],["option",["ratio"]]]],[11,"add_assign","","",50,N],[11,"add_assign","","",50,N],[11,"add_assign","","",50,N],[11,"add_assign","","",50,N],[11,"checked_add","","",50,[[["self"],["ratio"]],["option",["ratio"]]]],[11,"checked_mul","","",50,[[["self"],["ratio"]],["option",["ratio"]]]],[11,"div_assign","","",50,N],[11,"div_assign","","",50,N],[11,"div_assign","","",50,N],[11,"div_assign","","",50,N],[11,"mul_assign","","",50,N],[11,"mul_assign","","",50,N],[11,"mul_assign","","",50,N],[11,"mul_assign","","",50,N],[11,"hash","","",50,N],[11,"new","num::bigint","Creates and initializes a BigInt.",42,[[["sign"],["vec",["u32"]]],["bigint"]]],[11,"from_biguint","","Creates and initializes a `BigInt`.",42,[[["sign"],["biguint"]],["bigint"]]],[11,"from_slice","","Creates and initializes a `BigInt`.",42,N],[11,"assign_from_slice","","Reinitializes a `BigInt`.",42,N],[11,"from_bytes_be","","Creates and initializes a `BigInt`.",42,N],[11,"from_bytes_le","","Creates and initializes a `BigInt`.",42,N],[11,"from_signed_bytes_be","","Creates and initializes a `BigInt` from an array of bytes…",42,N],[11,"from_signed_bytes_le","","Creates and initializes a `BigInt` from an array of bytes…",42,N],[11,"parse_bytes","","Creates and initializes a `BigInt`.",42,N],[11,"from_radix_be","","Creates and initializes a `BigInt`. Each u8 of the input…",42,N],[11,"from_radix_le","","Creates and initializes a `BigInt`. Each u8 of the input…",42,N],[11,"to_bytes_be","","Returns the sign and the byte representation of the…",42,N],[11,"to_bytes_le","","Returns the sign and the byte representation of the…",42,N],[11,"to_signed_bytes_be","","Returns the two's complement byte representation of the…",42,[[["self"]],["vec",["u8"]]]],[11,"to_signed_bytes_le","","Returns the two's complement byte representation of the…",42,[[["self"]],["vec",["u8"]]]],[11,"to_str_radix","","Returns the integer formatted as a string in the given…",42,[[["self"],["u32"]],["string"]]],[11,"to_radix_be","","Returns the integer in the requested base in big-endian…",42,N],[11,"to_radix_le","","Returns the integer in the requested base in little-endian…",42,N],[11,"sign","","Returns the sign of the `BigInt` as a `Sign`.",42,[[["self"]],["sign"]]],[11,"bits","","Determines the fewest bits necessary to express the…",42,[[["self"]],["usize"]]],[11,"to_biguint","","Converts this `BigInt` into a `BigUint`, if it's not…",42,[[["self"]],["option",["biguint"]]]],[11,"checked_add","","",42,[[["self"],["bigint"]],["option",["bigint"]]]],[11,"checked_sub","","",42,[[["self"],["bigint"]],["option",["bigint"]]]],[11,"checked_mul","","",42,[[["self"],["bigint"]],["option",["bigint"]]]],[11,"checked_div","","",42,[[["self"],["bigint"]],["option",["bigint"]]]],[11,"modpow","","Returns `(self ^ exponent) mod modulus`",42,[[["self"],["bigint"],["bigint"]],["bigint"]]],[11,"new","","Creates and initializes a `BigUint`.",43,[[["vec",["u32"]]],["biguint"]]],[11,"from_slice","","Creates and initializes a `BigUint`.",43,N],[11,"assign_from_slice","","Assign a value to a `BigUint`.",43,N],[11,"from_bytes_be","","Creates and initializes a `BigUint`.",43,N],[11,"from_bytes_le","","Creates and initializes a `BigUint`.",43,N],[11,"parse_bytes","","Creates and initializes a `BigUint`. The input slice must…",43,N],[11,"from_radix_be","","Creates and initializes a `BigUint`. Each u8 of the input…",43,N],[11,"from_radix_le","","Creates and initializes a `BigUint`. Each u8 of the input…",43,N],[11,"to_bytes_be","","Returns the byte representation of the `BigUint` in…",43,[[["self"]],["vec",["u8"]]]],[11,"to_bytes_le","","Returns the byte representation of the `BigUint` in…",43,[[["self"]],["vec",["u8"]]]],[11,"to_str_radix","","Returns the integer formatted as a string in the given…",43,[[["self"],["u32"]],["string"]]],[11,"to_radix_be","","Returns the integer in the requested base in big-endian…",43,[[["self"],["u32"]],["vec",["u8"]]]],[11,"to_radix_le","","Returns the integer in the requested base in little-endian…",43,[[["self"],["u32"]],["vec",["u8"]]]],[11,"bits","","Determines the fewest bits necessary to express the…",43,[[["self"]],["usize"]]],[11,"modpow","","Returns `(self ^ exponent) % modulus`.",43,[[["self"],["biguint"],["biguint"]],["biguint"]]],[11,"new","num::complex","Create a new Complex",0,[[["t"],["t"]],["complex"]]],[11,"i","","Returns imaginary unit",0,[[],["complex"]]],[11,"norm_sqr","","Returns the square of the norm (since `T` doesn't…",0,[[["self"]],["t"]]],[11,"scale","","Multiplies `self` by the scalar `t`.",0,[[["self"],["t"]],["complex"]]],[11,"unscale","","Divides `self` by the scalar `t`.",0,[[["self"],["t"]],["complex"]]],[11,"conj","","Returns the complex conjugate. i.e. `re - i im`",0,[[["self"]],["complex"]]],[11,"inv","","Returns `1/self`",0,[[["self"]],["complex"]]],[11,"norm","","Calculate |self|",0,[[["self"]],["t"]]],[11,"arg","","Calculate the principal Arg of self.",0,[[["self"]],["t"]]],[11,"to_polar","","Convert to polar form (r, theta), such that `self = r *…",0,N],[11,"from_polar","","Convert a polar representation into a complex number.",0,[[["t"],["t"]],["complex"]]],[11,"exp","","Computes `e^(self)`, where `e` is the base of the natural…",0,[[["self"]],["complex"]]],[11,"ln","","Computes the principal value of natural logarithm of `self`.",0,[[["self"]],["complex"]]],[11,"sqrt","","Computes the principal value of the square root of `self`.",0,[[["self"]],["complex"]]],[11,"powf","","Raises `self` to a floating point power.",0,[[["self"],["t"]],["complex"]]],[11,"log","","Returns the logarithm of `self` with respect to an…",0,[[["self"],["t"]],["complex"]]],[11,"powc","","Raises `self` to a complex power.",0,[[["self"],["complex"]],["complex"]]],[11,"expf","","Raises a floating point number to the complex power `self`.",0,[[["self"],["t"]],["complex"]]],[11,"sin","","Computes the sine of `self`.",0,[[["self"]],["complex"]]],[11,"cos","","Computes the cosine of `self`.",0,[[["self"]],["complex"]]],[11,"tan","","Computes the tangent of `self`.",0,[[["self"]],["complex"]]],[11,"asin","","Computes the principal value of the inverse sine of `self`.",0,[[["self"]],["complex"]]],[11,"acos","","Computes the principal value of the inverse cosine of…",0,[[["self"]],["complex"]]],[11,"atan","","Computes the principal value of the inverse tangent of…",0,[[["self"]],["complex"]]],[11,"sinh","","Computes the hyperbolic sine of `self`.",0,[[["self"]],["complex"]]],[11,"cosh","","Computes the hyperbolic cosine of `self`.",0,[[["self"]],["complex"]]],[11,"tanh","","Computes the hyperbolic tangent of `self`.",0,[[["self"]],["complex"]]],[11,"asinh","","Computes the principal value of inverse hyperbolic sine of…",0,[[["self"]],["complex"]]],[11,"acosh","","Computes the principal value of inverse hyperbolic cosine…",0,[[["self"]],["complex"]]],[11,"atanh","","Computes the principal value of inverse hyperbolic tangent…",0,[[["self"]],["complex"]]],[11,"is_nan","","Checks if the given complex number is NaN",0,[[["self"]],["bool"]]],[11,"is_infinite","","Checks if the given complex number is infinite",0,[[["self"]],["bool"]]],[11,"is_finite","","Checks if the given complex number is finite",0,[[["self"]],["bool"]]],[11,"is_normal","","Checks if the given complex number is normal",0,[[["self"]],["bool"]]],[11,"new","num::integer","For a given n, iterate over all binomial coefficients…",45,[[["t"]],["iterbinomial"]]],[11,"new","num::rational","Creates a new `Ratio`. Fails if `denom` is zero.",50,[[["t"],["t"]],["ratio"]]],[11,"from_integer","","Creates a `Ratio` representing the integer `t`.",50,[[["t"]],["ratio"]]],[11,"new_raw","","Creates a `Ratio` without checking for `denom == 0` or…",50,[[["t"],["t"]],["ratio"]]],[11,"to_integer","","Converts to an integer, rounding towards zero.",50,[[["self"]],["t"]]],[11,"numer","","Gets an immutable reference to the numerator.",50,[[["self"]],["t"]]],[11,"denom","","Gets an immutable reference to the denominator.",50,[[["self"]],["t"]]],[11,"is_integer","","Returns true if the rational number is an integer…",50,[[["self"]],["bool"]]],[11,"reduced","","Returns a reduced copy of self.",50,[[["self"]],["ratio"]]],[11,"recip","","Returns the reciprocal.",50,[[["self"]],["ratio"]]],[11,"floor","","Rounds towards minus infinity.",50,[[["self"]],["ratio"]]],[11,"ceil","","Rounds towards plus infinity.",50,[[["self"]],["ratio"]]],[11,"round","","Rounds to the nearest integer. Rounds half-way cases away…",50,[[["self"]],["ratio"]]],[11,"trunc","","Rounds towards zero.",50,[[["self"]],["ratio"]]],[11,"fract","","Returns the fractional part of a number, with division…",50,[[["self"]],["ratio"]]],[11,"pow","","Raises the `Ratio` to the power of an exponent.",50,[[["self"],["i32"]],["ratio"]]],[11,"from_float","","Converts a float into a rational number.",50,[[["t"]],["option",["ratio"]]]],[11,"approximate_float","","",50,[[["f"]],["option",["ratio"]]]]],"paths":[[3,"Complex"],[8,"Integer"],[8,"Num"],[8,"Zero"],[8,"One"],[8,"Signed"],[8,"Bounded"],[8,"Saturating"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"PrimInt"],[8,"Float"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"AsPrimitive"],[8,"Pow"],[4,"ParseBigIntError"],[8,"RandBigInt"],[8,"ToBigInt"],[8,"ToBigUint"],[4,"Sign"],[8,"Roots"],[8,"FloatCore"],[8,"FloatConst"],[8,"CheckedRem"],[8,"CheckedNeg"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"Inv"],[8,"MulAdd"],[8,"MulAddAssign"],[8,"WrappingAdd"],[8,"WrappingSub"],[8,"WrappingMul"],[8,"WrappingShl"],[8,"WrappingShr"],[8,"Real"],[4,"FloatErrorKind"],[3,"ParseFloatError"],[3,"BigInt"],[3,"BigUint"],[3,"ParseComplexError"],[3,"IterBinomial"],[3,"Range"],[3,"RangeInclusive"],[3,"RangeStep"],[3,"RangeStepInclusive"],[3,"Ratio"],[3,"ParseRatioError"]]};
searchIndex["num_bigint"]={"doc":"A Big integer (signed version: `BigInt`, unsigned version:…","items":[[3,"BigUint","num_bigint","A big unsigned integer type.",N,N],[3,"BigInt","","A big signed integer type.",N,N],[4,"ParseBigIntError","","",N,N],[13,"ParseInt","","",0,N],[13,"Other","","",0,N],[4,"Sign","","A Sign is a `BigInt`'s composing element.",N,N],[13,"Minus","","",1,N],[13,"NoSign","","",1,N],[13,"Plus","","",1,N],[11,"new","","Creates and initializes a `BigUint`.",2,[[["vec",["bigdigit"]]],["biguint"]]],[11,"from_slice","","Creates and initializes a `BigUint`.",2,N],[11,"assign_from_slice","","Assign a value to a `BigUint`.",2,N],[11,"from_bytes_be","","Creates and initializes a `BigUint`.",2,N],[11,"from_bytes_le","","Creates and initializes a `BigUint`.",2,N],[11,"parse_bytes","","Creates and initializes a `BigUint`. The input slice must…",2,N],[11,"from_radix_be","","Creates and initializes a `BigUint`. Each u8 of the input…",2,N],[11,"from_radix_le","","Creates and initializes a `BigUint`. Each u8 of the input…",2,N],[11,"to_bytes_be","","Returns the byte representation of the `BigUint` in…",2,[[["self"]],["vec",["u8"]]]],[11,"to_bytes_le","","Returns the byte representation of the `BigUint` in…",2,[[["self"]],["vec",["u8"]]]],[11,"to_str_radix","","Returns the integer formatted as a string in the given…",2,[[["self"],["u32"]],["string"]]],[11,"to_radix_be","","Returns the integer in the requested base in big-endian…",2,[[["self"],["u32"]],["vec",["u8"]]]],[11,"to_radix_le","","Returns the integer in the requested base in little-endian…",2,[[["self"],["u32"]],["vec",["u8"]]]],[11,"bits","","Determines the fewest bits necessary to express the…",2,[[["self"]],["usize"]]],[11,"modpow","","Returns `(self ^ exponent) % modulus`.",2,[[["self"],["self"],["self"]],["self"]]],[11,"new","","Creates and initializes a BigInt.",3,[[["sign"],["vec",["bigdigit"]]],["bigint"]]],[11,"from_biguint","","Creates and initializes a `BigInt`.",3,[[["sign"],["biguint"]],["bigint"]]],[11,"from_slice","","Creates and initializes a `BigInt`.",3,N],[11,"assign_from_slice","","Reinitializes a `BigInt`.",3,N],[11,"from_bytes_be","","Creates and initializes a `BigInt`.",3,N],[11,"from_bytes_le","","Creates and initializes a `BigInt`.",3,N],[11,"from_signed_bytes_be","","Creates and initializes a `BigInt` from an array of bytes…",3,N],[11,"from_signed_bytes_le","","Creates and initializes a `BigInt` from an array of bytes…",3,N],[11,"parse_bytes","","Creates and initializes a `BigInt`.",3,N],[11,"from_radix_be","","Creates and initializes a `BigInt`. Each u8 of the input…",3,N],[11,"from_radix_le","","Creates and initializes a `BigInt`. Each u8 of the input…",3,N],[11,"to_bytes_be","","Returns the sign and the byte representation of the…",3,N],[11,"to_bytes_le","","Returns the sign and the byte representation of the…",3,N],[11,"to_signed_bytes_be","","Returns the two's complement byte representation of the…",3,[[["self"]],["vec",["u8"]]]],[11,"to_signed_bytes_le","","Returns the two's complement byte representation of the…",3,[[["self"]],["vec",["u8"]]]],[11,"to_str_radix","","Returns the integer formatted as a string in the given…",3,[[["self"],["u32"]],["string"]]],[11,"to_radix_be","","Returns the integer in the requested base in big-endian…",3,N],[11,"to_radix_le","","Returns the integer in the requested base in little-endian…",3,N],[11,"sign","","Returns the sign of the `BigInt` as a `Sign`.",3,[[["self"]],["sign"]]],[11,"bits","","Determines the fewest bits necessary to express the…",3,[[["self"]],["usize"]]],[11,"to_biguint","","Converts this `BigInt` into a `BigUint`, if it's not…",3,[[["self"]],["option",["biguint"]]]],[11,"checked_add","","",3,[[["self"],["bigint"]],["option",["bigint"]]]],[11,"checked_sub","","",3,[[["self"],["bigint"]],["option",["bigint"]]]],[11,"checked_mul","","",3,[[["self"],["bigint"]],["option",["bigint"]]]],[11,"checked_div","","",3,[[["self"],["bigint"]],["option",["bigint"]]]],[11,"modpow","","Returns `(self ^ exponent) mod modulus`",3,[[["self"],["self"],["self"]],["self"]]],[0,"big_digit","","",N,N],[5,"from_doublebigdigit","num_bigint::big_digit","Split one `DoubleBigDigit` into two `BigDigit`s.",N,N],[5,"to_doublebigdigit","","Join two `BigDigit`s into one `DoubleBigDigit`",N,[[["bigdigit"],["bigdigit"]],["doublebigdigit"]]],[6,"BigDigit","","A `BigDigit` is a `BigUint`'s composing element.",N,N],[6,"DoubleBigDigit","","A `DoubleBigDigit` is the internal type used to do the…",N,N],[17,"ZERO_BIG_DIGIT","","",N,N],[17,"BITS","","",N,N],[17,"BASE","","",N,N],[6,"BigDigit","num_bigint","A `BigDigit` is a `BigUint`'s composing element.",N,N],[6,"DoubleBigDigit","","A `DoubleBigDigit` is the internal type used to do the…",N,N],[17,"ZERO_BIG_DIGIT","","",N,N],[8,"ToBigUint","","A generic trait for converting a value to a `BigUint`.",N,N],[10,"to_biguint","","Converts the value of `self` to a `BigUint`.",4,[[["self"]],["option",["biguint"]]]],[8,"ToBigInt","","A generic trait for converting a value to a `BigInt`.",N,N],[10,"to_bigint","","Converts the value of `self` to a `BigInt`.",5,[[["self"]],["option",["bigint"]]]],[8,"RandBigInt","","",N,N],[10,"gen_biguint","","Generate a random `BigUint` of the given bit size.",6,[[["self"],["usize"]],["biguint"]]],[10,"gen_bigint","","Generate a random BigInt of the given bit size.",6,[[["self"],["usize"]],["bigint"]]],[10,"gen_biguint_below","","Generate a random `BigUint` less than the given bound.…",6,[[["self"],["biguint"]],["biguint"]]],[10,"gen_biguint_range","","Generate a random `BigUint` within the given range. The…",6,[[["self"],["biguint"],["biguint"]],["biguint"]]],[10,"gen_bigint_range","","Generate a random `BigInt` within the given range. The…",6,[[["self"],["bigint"],["bigint"]],["bigint"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_biguint","","",2,[[["self"]],["option",["biguint"]]]],[11,"to_biguint","","",3,[[["self"]],["option",["biguint"]]]],[11,"to_bigint","","",3,[[["self"]],["option",["bigint"]]]],[11,"to_bigint","","",2,[[["self"]],["option",["bigint"]]]],[11,"cmp","","",2,[[["self"],["biguint"]],["ordering"]]],[11,"cmp","","",1,[[["self"],["sign"]],["ordering"]]],[11,"cmp","","",3,[[["self"],["bigint"]],["ordering"]]],[11,"eq","","",0,[[["self"],["parsebiginterror"]],["bool"]]],[11,"ne","","",0,[[["self"],["parsebiginterror"]],["bool"]]],[11,"eq","","",2,[[["self"],["biguint"]],["bool"]]],[11,"eq","","",1,[[["self"],["sign"]],["bool"]]],[11,"eq","","",3,[[["self"],["bigint"]],["bool"]]],[11,"from","","",0,[[["parseinterror"]],["parsebiginterror"]]],[11,"from","","",2,[[["u64"]],["self"]]],[11,"from","","",2,[[["u8"]],["self"]]],[11,"from","","",2,[[["u16"]],["self"]]],[11,"from","","",2,[[["u32"]],["self"]]],[11,"from","","",2,[[["usize"]],["self"]]],[11,"from","","",3,[[["i64"]],["self"]]],[11,"from","","",3,[[["i8"]],["self"]]],[11,"from","","",3,[[["i16"]],["self"]]],[11,"from","","",3,[[["i32"]],["self"]]],[11,"from","","",3,[[["isize"]],["self"]]],[11,"from","","",3,[[["u64"]],["self"]]],[11,"from","","",3,[[["u8"]],["self"]]],[11,"from","","",3,[[["u16"]],["self"]]],[11,"from","","",3,[[["u32"]],["self"]]],[11,"from","","",3,[[["usize"]],["self"]]],[11,"from","","",3,[[["biguint"]],["self"]]],[11,"clone","","",2,[[["self"]],["biguint"]]],[11,"clone","","",1,[[["self"]],["sign"]]],[11,"clone","","",3,[[["self"]],["bigint"]]],[11,"partial_cmp","","",2,[[["self"],["biguint"]],["option",["ordering"]]]],[11,"partial_cmp","","",1,[[["self"],["sign"]],["option",["ordering"]]]],[11,"partial_cmp","","",3,[[["self"],["bigint"]],["option",["ordering"]]]],[11,"default","","",2,[[],["biguint"]]],[11,"default","","",3,[[],["bigint"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"rem","","",2,[[["self"],["biguint"]],["biguint"]]],[11,"rem","","",2,[[["self"],["biguint"]],["biguint"]]],[11,"rem","","",2,[[["self"],["u8"]],["biguint"]]],[11,"rem","","",2,[[["self"],["u8"]],["biguint"]]],[11,"rem","","",2,[[["self"],["u16"]],["biguint"]]],[11,"rem","","",2,[[["self"],["u16"]],["biguint"]]],[11,"rem","","",2,[[["self"],["usize"]],["biguint"]]],[11,"rem","","",2,[[["self"],["usize"]],["biguint"]]],[11,"rem","","",2,[[["self"],["bigdigit"]],["biguint"]]],[11,"rem","","",7,[[["self"],["biguint"]],["biguint"]]],[11,"rem","","",2,[[["self"],["doublebigdigit"]],["biguint"]]],[11,"rem","","",8,[[["self"],["biguint"]],["biguint"]]],[11,"rem","","",2,[[["self"],["bigdigit"]],["biguint"]]],[11,"rem","","",7,[[["self"],["biguint"]],["biguint"]]],[11,"rem","","",2,[[["self"],["doublebigdigit"]],["biguint"]]],[11,"rem","","",8,[[["self"],["biguint"]],["biguint"]]],[11,"rem","","",3,[[["self"],["bigint"]],["bigint"]]],[11,"rem","","",3,[[["self"],["bigint"]],["bigint"]]],[11,"rem","","",3,[[["self"],["u8"]],["bigint"]]],[11,"rem","","",3,[[["self"],["u8"]],["bigint"]]],[11,"rem","","",3,[[["self"],["u16"]],["bigint"]]],[11,"rem","","",3,[[["self"],["u16"]],["bigint"]]],[11,"rem","","",3,[[["self"],["usize"]],["bigint"]]],[11,"rem","","",3,[[["self"],["usize"]],["bigint"]]],[11,"rem","","",3,[[["self"],["i8"]],["bigint"]]],[11,"rem","","",3,[[["self"],["i8"]],["bigint"]]],[11,"rem","","",3,[[["self"],["i16"]],["bigint"]]],[11,"rem","","",3,[[["self"],["i16"]],["bigint"]]],[11,"rem","","",3,[[["self"],["isize"]],["bigint"]]],[11,"rem","","",3,[[["self"],["isize"]],["bigint"]]],[11,"rem","","",3,[[["self"],["bigdigit"]],["bigint"]]],[11,"rem","","",7,[[["self"],["bigint"]],["bigint"]]],[11,"rem","","",3,[[["self"],["doublebigdigit"]],["bigint"]]],[11,"rem","","",8,[[["self"],["bigint"]],["bigint"]]],[11,"rem","","",3,[[["self"],["bigdigit"]],["bigint"]]],[11,"rem","","",7,[[["self"],["bigint"]],["bigint"]]],[11,"rem","","",3,[[["self"],["doublebigdigit"]],["bigint"]]],[11,"rem","","",8,[[["self"],["bigint"]],["bigint"]]],[11,"rem","","",3,[[["self"],["i32"]],["bigint"]]],[11,"rem","","",3,[[["self"],["i64"]],["bigint"]]],[11,"rem","","",3,[[["self"],["i32"]],["bigint"]]],[11,"rem","","",3,[[["self"],["i64"]],["bigint"]]],[11,"div","","",2,[[["self"],["biguint"]],["biguint"]]],[11,"div","","",2,[[["self"],["biguint"]],["biguint"]]],[11,"div","","",2,[[["self"],["u8"]],["biguint"]]],[11,"div","","",2,[[["self"],["u8"]],["biguint"]]],[11,"div","","",2,[[["self"],["u16"]],["biguint"]]],[11,"div","","",2,[[["self"],["u16"]],["biguint"]]],[11,"div","","",2,[[["self"],["usize"]],["biguint"]]],[11,"div","","",2,[[["self"],["usize"]],["biguint"]]],[11,"div","","",2,[[["self"],["bigdigit"]],["biguint"]]],[11,"div","","",7,[[["self"],["biguint"]],["biguint"]]],[11,"div","","",2,[[["self"],["doublebigdigit"]],["biguint"]]],[11,"div","","",8,[[["self"],["biguint"]],["biguint"]]],[11,"div","","",2,[[["self"],["bigdigit"]],["biguint"]]],[11,"div","","",7,[[["self"],["biguint"]],["biguint"]]],[11,"div","","",2,[[["self"],["doublebigdigit"]],["biguint"]]],[11,"div","","",8,[[["self"],["biguint"]],["biguint"]]],[11,"div","","",3,[[["self"],["bigint"]],["bigint"]]],[11,"div","","",3,[[["self"],["bigint"]],["bigint"]]],[11,"div","","",3,[[["self"],["u8"]],["bigint"]]],[11,"div","","",3,[[["self"],["u8"]],["bigint"]]],[11,"div","","",3,[[["self"],["u16"]],["bigint"]]],[11,"div","","",3,[[["self"],["u16"]],["bigint"]]],[11,"div","","",3,[[["self"],["usize"]],["bigint"]]],[11,"div","","",3,[[["self"],["usize"]],["bigint"]]],[11,"div","","",3,[[["self"],["i8"]],["bigint"]]],[11,"div","","",3,[[["self"],["i8"]],["bigint"]]],[11,"div","","",3,[[["self"],["i16"]],["bigint"]]],[11,"div","","",3,[[["self"],["i16"]],["bigint"]]],[11,"div","","",3,[[["self"],["isize"]],["bigint"]]],[11,"div","","",3,[[["self"],["isize"]],["bigint"]]],[11,"div","","",3,[[["self"],["bigdigit"]],["bigint"]]],[11,"div","","",7,[[["self"],["bigint"]],["bigint"]]],[11,"div","","",3,[[["self"],["doublebigdigit"]],["bigint"]]],[11,"div","","",8,[[["self"],["bigint"]],["bigint"]]],[11,"div","","",3,[[["self"],["bigdigit"]],["bigint"]]],[11,"div","","",7,[[["self"],["bigint"]],["bigint"]]],[11,"div","","",3,[[["self"],["doublebigdigit"]],["bigint"]]],[11,"div","","",8,[[["self"],["bigint"]],["bigint"]]],[11,"div","","",3,[[["self"],["i32"]],["bigint"]]],[11,"div","","",3,[[["self"],["i64"]],["bigint"]]],[11,"div","","",3,[[["self"],["i32"]],["bigint"]]],[11,"div","","",3,[[["self"],["i64"]],["bigint"]]],[11,"from_str","","",2,[[["str"]],["result",["biguint","parsebiginterror"]]]],[11,"from_str","","",3,[[["str"]],["result",["bigint","parsebiginterror"]]]],[11,"add","","",2,[[["self"],["biguint"]],["biguint"]]],[11,"add","","",2,[[["self"],["biguint"]],["biguint"]]],[11,"add","","",2,[[["self"],["u8"]],["biguint"]]],[11,"add","","",2,[[["self"],["u8"]],["biguint"]]],[11,"add","","",2,[[["self"],["u16"]],["biguint"]]],[11,"add","","",2,[[["self"],["u16"]],["biguint"]]],[11,"add","","",2,[[["self"],["usize"]],["biguint"]]],[11,"add","","",2,[[["self"],["usize"]],["biguint"]]],[11,"add","","",7,[[["self"],["biguint"]],["biguint"]]],[11,"add","","",2,[[["self"],["bigdigit"]],["biguint"]]],[11,"add","","",7,[[["self"],["biguint"]],["biguint"]]],[11,"add","","",8,[[["self"],["biguint"]],["biguint"]]],[11,"add","","",2,[[["self"],["doublebigdigit"]],["biguint"]]],[11,"add","","",8,[[["self"],["biguint"]],["biguint"]]],[11,"add","","",2,[[["self"],["bigdigit"]],["biguint"]]],[11,"add","","",2,[[["self"],["doublebigdigit"]],["biguint"]]],[11,"add","","",3,[[["self"],["bigint"]],["bigint"]]],[11,"add","","",3,[[["self"],["bigint"]],["bigint"]]],[11,"add","","",3,[[["self"],["u8"]],["bigint"]]],[11,"add","","",3,[[["self"],["u8"]],["bigint"]]],[11,"add","","",3,[[["self"],["u16"]],["bigint"]]],[11,"add","","",3,[[["self"],["u16"]],["bigint"]]],[11,"add","","",3,[[["self"],["usize"]],["bigint"]]],[11,"add","","",3,[[["self"],["usize"]],["bigint"]]],[11,"add","","",3,[[["self"],["i8"]],["bigint"]]],[11,"add","","",3,[[["self"],["i8"]],["bigint"]]],[11,"add","","",3,[[["self"],["i16"]],["bigint"]]],[11,"add","","",3,[[["self"],["i16"]],["bigint"]]],[11,"add","","",3,[[["self"],["isize"]],["bigint"]]],[11,"add","","",3,[[["self"],["isize"]],["bigint"]]],[11,"add","","",7,[[["self"],["bigint"]],["bigint"]]],[11,"add","","",3,[[["self"],["bigdigit"]],["bigint"]]],[11,"add","","",7,[[["self"],["bigint"]],["bigint"]]],[11,"add","","",8,[[["self"],["bigint"]],["bigint"]]],[11,"add","","",3,[[["self"],["doublebigdigit"]],["bigint"]]],[11,"add","","",8,[[["self"],["bigint"]],["bigint"]]],[11,"add","","",3,[[["self"],["bigdigit"]],["bigint"]]],[11,"add","","",3,[[["self"],["doublebigdigit"]],["bigint"]]],[11,"add","","",3,[[["self"],["i32"]],["bigint"]]],[11,"add","","",3,[[["self"],["i64"]],["bigint"]]],[11,"add","","",3,[[["self"],["i32"]],["bigint"]]],[11,"add","","",3,[[["self"],["i64"]],["bigint"]]],[11,"sub","","",2,[[["self"],["biguint"]],["biguint"]]],[11,"sub","","",2,[[["self"],["biguint"]],["biguint"]]],[11,"sub","","",2,[[["self"],["u8"]],["biguint"]]],[11,"sub","","",2,[[["self"],["u8"]],["biguint"]]],[11,"sub","","",2,[[["self"],["u16"]],["biguint"]]],[11,"sub","","",2,[[["self"],["u16"]],["biguint"]]],[11,"sub","","",2,[[["self"],["usize"]],["biguint"]]],[11,"sub","","",2,[[["self"],["usize"]],["biguint"]]],[11,"sub","","",2,[[["self"],["bigdigit"]],["biguint"]]],[11,"sub","","",7,[[["self"],["biguint"]],["biguint"]]],[11,"sub","","",2,[[["self"],["doublebigdigit"]],["biguint"]]],[11,"sub","","",8,[[["self"],["biguint"]],["biguint"]]],[11,"sub","","",2,[[["self"],["bigdigit"]],["biguint"]]],[11,"sub","","",7,[[["self"],["biguint"]],["biguint"]]],[11,"sub","","",2,[[["self"],["doublebigdigit"]],["biguint"]]],[11,"sub","","",8,[[["self"],["biguint"]],["biguint"]]],[11,"sub","","",3,[[["self"],["bigint"]],["bigint"]]],[11,"sub","","",3,[[["self"],["bigint"]],["bigint"]]],[11,"sub","","",3,[[["self"],["u8"]],["bigint"]]],[11,"sub","","",3,[[["self"],["u8"]],["bigint"]]],[11,"sub","","",3,[[["self"],["u16"]],["bigint"]]],[11,"sub","","",3,[[["self"],["u16"]],["bigint"]]],[11,"sub","","",3,[[["self"],["usize"]],["bigint"]]],[11,"sub","","",3,[[["self"],["usize"]],["bigint"]]],[11,"sub","","",3,[[["self"],["i8"]],["bigint"]]],[11,"sub","","",3,[[["self"],["i8"]],["bigint"]]],[11,"sub","","",3,[[["self"],["i16"]],["bigint"]]],[11,"sub","","",3,[[["self"],["i16"]],["bigint"]]],[11,"sub","","",3,[[["self"],["isize"]],["bigint"]]],[11,"sub","","",3,[[["self"],["isize"]],["bigint"]]],[11,"sub","","",3,[[["self"],["bigdigit"]],["bigint"]]],[11,"sub","","",7,[[["self"],["bigint"]],["bigint"]]],[11,"sub","","",3,[[["self"],["doublebigdigit"]],["bigint"]]],[11,"sub","","",8,[[["self"],["bigint"]],["bigint"]]],[11,"sub","","",3,[[["self"],["bigdigit"]],["bigint"]]],[11,"sub","","",7,[[["self"],["bigint"]],["bigint"]]],[11,"sub","","",3,[[["self"],["doublebigdigit"]],["bigint"]]],[11,"sub","","",8,[[["self"],["bigint"]],["bigint"]]],[11,"sub","","",3,[[["self"],["i32"]],["bigint"]]],[11,"sub","","",3,[[["self"],["i64"]],["bigint"]]],[11,"sub","","",3,[[["self"],["i32"]],["bigint"]]],[11,"sub","","",3,[[["self"],["i64"]],["bigint"]]],[11,"mul","","",2,[[["self"],["biguint"]],["biguint"]]],[11,"mul","","",2,[[["self"],["biguint"]],["biguint"]]],[11,"mul","","",2,[[["self"],["u8"]],["biguint"]]],[11,"mul","","",2,[[["self"],["u8"]],["biguint"]]],[11,"mul","","",2,[[["self"],["u16"]],["biguint"]]],[11,"mul","","",2,[[["self"],["u16"]],["biguint"]]],[11,"mul","","",2,[[["self"],["usize"]],["biguint"]]],[11,"mul","","",2,[[["self"],["usize"]],["biguint"]]],[11,"mul","","",7,[[["self"],["biguint"]],["biguint"]]],[11,"mul","","",2,[[["self"],["bigdigit"]],["biguint"]]],[11,"mul","","",7,[[["self"],["biguint"]],["biguint"]]],[11,"mul","","",8,[[["self"],["biguint"]],["biguint"]]],[11,"mul","","",2,[[["self"],["doublebigdigit"]],["biguint"]]],[11,"mul","","",8,[[["self"],["biguint"]],["biguint"]]],[11,"mul","","",2,[[["self"],["bigdigit"]],["biguint"]]],[11,"mul","","",2,[[["self"],["doublebigdigit"]],["biguint"]]],[11,"mul","","",1,[[["self"],["sign"]],["sign"]]],[11,"mul","","",3,[[["self"],["bigint"]],["bigint"]]],[11,"mul","","",3,[[["self"],["bigint"]],["bigint"]]],[11,"mul","","",3,[[["self"],["u8"]],["bigint"]]],[11,"mul","","",3,[[["self"],["u8"]],["bigint"]]],[11,"mul","","",3,[[["self"],["u16"]],["bigint"]]],[11,"mul","","",3,[[["self"],["u16"]],["bigint"]]],[11,"mul","","",3,[[["self"],["usize"]],["bigint"]]],[11,"mul","","",3,[[["self"],["usize"]],["bigint"]]],[11,"mul","","",3,[[["self"],["i8"]],["bigint"]]],[11,"mul","","",3,[[["self"],["i8"]],["bigint"]]],[11,"mul","","",3,[[["self"],["i16"]],["bigint"]]],[11,"mul","","",3,[[["self"],["i16"]],["bigint"]]],[11,"mul","","",3,[[["self"],["isize"]],["bigint"]]],[11,"mul","","",3,[[["self"],["isize"]],["bigint"]]],[11,"mul","","",7,[[["self"],["bigint"]],["bigint"]]],[11,"mul","","",3,[[["self"],["bigdigit"]],["bigint"]]],[11,"mul","","",7,[[["self"],["bigint"]],["bigint"]]],[11,"mul","","",8,[[["self"],["bigint"]],["bigint"]]],[11,"mul","","",3,[[["self"],["doublebigdigit"]],["bigint"]]],[11,"mul","","",8,[[["self"],["bigint"]],["bigint"]]],[11,"mul","","",3,[[["self"],["bigdigit"]],["bigint"]]],[11,"mul","","",3,[[["self"],["doublebigdigit"]],["bigint"]]],[11,"mul","","",3,[[["self"],["i32"]],["bigint"]]],[11,"mul","","",3,[[["self"],["i64"]],["bigint"]]],[11,"mul","","",3,[[["self"],["i32"]],["bigint"]]],[11,"mul","","",3,[[["self"],["i64"]],["bigint"]]],[11,"neg","","",2,[[["self"]],["biguint"]]],[11,"neg","","Negate Sign value.",1,[[["self"]],["sign"]]],[11,"neg","","",3,[[["self"]],["bigint"]]],[11,"add_assign","","",2,[[["self"],["biguint"]]]],[11,"add_assign","","",2,[[["self"],["biguint"]]]],[11,"add_assign","","",2,[[["self"],["u8"]]]],[11,"add_assign","","",2,[[["self"],["u16"]]]],[11,"add_assign","","",2,[[["self"],["usize"]]]],[11,"add_assign","","",2,[[["self"],["bigdigit"]]]],[11,"add_assign","","",2,[[["self"],["doublebigdigit"]]]],[11,"sub_assign","","",2,[[["self"],["biguint"]]]],[11,"sub_assign","","",2,[[["self"],["biguint"]]]],[11,"sub_assign","","",2,[[["self"],["u8"]]]],[11,"sub_assign","","",2,[[["self"],["u16"]]]],[11,"sub_assign","","",2,[[["self"],["usize"]]]],[11,"sub_assign","","",2,[[["self"],["bigdigit"]]]],[11,"sub_assign","","",2,[[["self"],["doublebigdigit"]]]],[11,"mul_assign","","",2,[[["self"],["biguint"]]]],[11,"mul_assign","","",2,[[["self"],["biguint"]]]],[11,"mul_assign","","",2,[[["self"],["u8"]]]],[11,"mul_assign","","",2,[[["self"],["u16"]]]],[11,"mul_assign","","",2,[[["self"],["usize"]]]],[11,"mul_assign","","",2,[[["self"],["bigdigit"]]]],[11,"mul_assign","","",2,[[["self"],["doublebigdigit"]]]],[11,"div_assign","","",2,[[["self"],["biguint"]]]],[11,"div_assign","","",2,[[["self"],["biguint"]]]],[11,"div_assign","","",2,[[["self"],["u8"]]]],[11,"div_assign","","",2,[[["self"],["u16"]]]],[11,"div_assign","","",2,[[["self"],["usize"]]]],[11,"div_assign","","",2,[[["self"],["bigdigit"]]]],[11,"div_assign","","",2,[[["self"],["doublebigdigit"]]]],[11,"rem_assign","","",2,[[["self"],["biguint"]]]],[11,"rem_assign","","",2,[[["self"],["biguint"]]]],[11,"rem_assign","","",2,[[["self"],["u8"]]]],[11,"rem_assign","","",2,[[["self"],["u16"]]]],[11,"rem_assign","","",2,[[["self"],["usize"]]]],[11,"rem_assign","","",2,[[["self"],["bigdigit"]]]],[11,"rem_assign","","",2,[[["self"],["doublebigdigit"]]]],[11,"bitand","","",2,[[["self"],["biguint"]],["biguint"]]],[11,"bitand","","",2,[[["self"],["biguint"]],["biguint"]]],[11,"bitor","","",2,[[["self"],["biguint"]],["biguint"]]],[11,"bitor","","",2,[[["self"],["biguint"]],["biguint"]]],[11,"bitxor","","",2,[[["self"],["biguint"]],["biguint"]]],[11,"bitxor","","",2,[[["self"],["biguint"]],["biguint"]]],[11,"shl","","",2,[[["self"],["usize"]],["biguint"]]],[11,"shl","","",3,[[["self"],["usize"]],["bigint"]]],[11,"shr","","",2,[[["self"],["usize"]],["biguint"]]],[11,"shr","","",3,[[["self"],["usize"]],["bigint"]]],[11,"bitand_assign","","",2,[[["self"],["biguint"]]]],[11,"bitand_assign","","",2,[[["self"],["biguint"]]]],[11,"bitor_assign","","",2,[[["self"],["biguint"]]]],[11,"bitor_assign","","",2,[[["self"],["biguint"]]]],[11,"bitxor_assign","","",2,[[["self"],["biguint"]]]],[11,"bitxor_assign","","",2,[[["self"],["biguint"]]]],[11,"shl_assign","","",2,[[["self"],["usize"]]]],[11,"shr_assign","","",2,[[["self"],["usize"]]]],[11,"hash","","",2,N],[11,"hash","","",1,N],[11,"hash","","",3,N],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"description","","",0,[[["self"]],["str"]]],[11,"encode","","",2,[[["self"],["__s"]],["result"]]],[11,"encode","","",1,[[["self"],["__s"]],["result"]]],[11,"encode","","",3,[[["self"],["__s"]],["result"]]],[11,"decode","","",2,[[["__d"]],["result",["biguint"]]]],[11,"decode","","",1,[[["__d"]],["result",["sign"]]]],[11,"decode","","",3,[[["__d"]],["result",["bigint"]]]],[11,"div_rem","","",2,N],[11,"div_floor","","",2,[[["self"],["biguint"]],["biguint"]]],[11,"mod_floor","","",2,[[["self"],["biguint"]],["biguint"]]],[11,"div_mod_floor","","",2,N],[11,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number…",2,[[["self"],["self"]],["self"]]],[11,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number…",2,[[["self"],["biguint"]],["biguint"]]],[11,"divides","","Deprecated, use `is_multiple_of` instead.",2,[[["self"],["biguint"]],["bool"]]],[11,"is_multiple_of","","Returns `true` if the number is a multiple of `other`.",2,[[["self"],["biguint"]],["bool"]]],[11,"is_even","","Returns `true` if the number is divisible by `2`.",2,[[["self"]],["bool"]]],[11,"is_odd","","Returns `true` if the number is not divisible by `2`.",2,[[["self"]],["bool"]]],[11,"div_rem","","",3,N],[11,"div_floor","","",3,[[["self"],["bigint"]],["bigint"]]],[11,"mod_floor","","",3,[[["self"],["bigint"]],["bigint"]]],[11,"div_mod_floor","","",3,N],[11,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number…",3,[[["self"],["bigint"]],["bigint"]]],[11,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number…",3,[[["self"],["bigint"]],["bigint"]]],[11,"divides","","Deprecated, use `is_multiple_of` instead.",3,[[["self"],["bigint"]],["bool"]]],[11,"is_multiple_of","","Returns `true` if the number is a multiple of `other`.",3,[[["self"],["bigint"]],["bool"]]],[11,"is_even","","Returns `true` if the number is divisible by `2`.",3,[[["self"]],["bool"]]],[11,"is_odd","","Returns `true` if the number is not divisible by `2`.",3,[[["self"]],["bool"]]],[11,"from_str_radix","","Creates and initializes a `BigUint`.",2,[[["str"],["u32"]],["result",["biguint","parsebiginterror"]]]],[11,"from_str_radix","","Creates and initializes a BigInt.",3,[[["str"],["u32"]],["result",["bigint","parsebiginterror"]]]],[11,"abs","","",3,[[["self"]],["bigint"]]],[11,"abs_sub","","",3,[[["self"],["bigint"]],["bigint"]]],[11,"signum","","",3,[[["self"]],["bigint"]]],[11,"is_positive","","",3,[[["self"]],["bool"]]],[11,"is_negative","","",3,[[["self"]],["bool"]]],[11,"to_i64","","",2,[[["self"]],["option",["i64"]]]],[11,"to_u64","","",2,[[["self"]],["option",["u64"]]]],[11,"to_f32","","",2,[[["self"]],["option",["f32"]]]],[11,"to_f64","","",2,[[["self"]],["option",["f64"]]]],[11,"to_i64","","",3,[[["self"]],["option",["i64"]]]],[11,"to_u64","","",3,[[["self"]],["option",["u64"]]]],[11,"to_f32","","",3,[[["self"]],["option",["f32"]]]],[11,"to_f64","","",3,[[["self"]],["option",["f64"]]]],[11,"from_i64","","",2,[[["i64"]],["option",["biguint"]]]],[11,"from_u64","","",2,[[["u64"]],["option",["biguint"]]]],[11,"from_f64","","",2,[[["f64"]],["option",["biguint"]]]],[11,"from_i64","","",3,[[["i64"]],["option",["bigint"]]]],[11,"from_u64","","",3,[[["u64"]],["option",["bigint"]]]],[11,"from_f64","","",3,[[["f64"]],["option",["bigint"]]]],[11,"zero","","",2,[[],["biguint"]]],[11,"is_zero","","",2,[[["self"]],["bool"]]],[11,"zero","","",3,[[],["bigint"]]],[11,"is_zero","","",3,[[["self"]],["bool"]]],[11,"one","","",2,[[],["biguint"]]],[11,"one","","",3,[[],["bigint"]]],[11,"checked_mul","","",2,[[["self"],["biguint"]],["option",["biguint"]]]],[11,"checked_mul","","",3,[[["self"],["bigint"]],["option",["bigint"]]]],[11,"checked_div","","",2,[[["self"],["biguint"]],["option",["biguint"]]]],[11,"checked_div","","",3,[[["self"],["bigint"]],["option",["bigint"]]]],[11,"checked_sub","","",2,[[["self"],["biguint"]],["option",["biguint"]]]],[11,"checked_sub","","",3,[[["self"],["bigint"]],["option",["bigint"]]]],[11,"checked_add","","",2,[[["self"],["biguint"]],["option",["biguint"]]]],[11,"checked_add","","",3,[[["self"],["bigint"]],["option",["bigint"]]]]],"paths":[[4,"ParseBigIntError"],[4,"Sign"],[3,"BigUint"],[3,"BigInt"],[8,"ToBigUint"],[8,"ToBigInt"],[8,"RandBigInt"],[6,"BigDigit"],[6,"DoubleBigDigit"]]};
searchIndex["num_complex"]={"doc":"Complex numbers.","items":[[3,"Complex","num_complex","A complex number in Cartesian form.",N,N],[12,"re","","Real portion of the complex number",0,N],[12,"im","","Imaginary portion of the complex number",0,N],[3,"ParseComplexError","","",N,N],[6,"Complex32","","",N,N],[6,"Complex64","","",N,N],[11,"new","","Create a new Complex",0,[[["t"],["t"]],["complex"]]],[11,"i","","Returns imaginary unit",0,[[],["complex"]]],[11,"norm_sqr","","Returns the square of the norm (since `T` doesn't…",0,[[["self"]],["t"]]],[11,"scale","","Multiplies `self` by the scalar `t`.",0,[[["self"],["t"]],["complex"]]],[11,"unscale","","Divides `self` by the scalar `t`.",0,[[["self"],["t"]],["complex"]]],[11,"conj","","Returns the complex conjugate. i.e. `re - i im`",0,[[["self"]],["complex"]]],[11,"inv","","Returns `1/self`",0,[[["self"]],["complex"]]],[11,"norm","","Calculate |self|",0,[[["self"]],["t"]]],[11,"arg","","Calculate the principal Arg of self.",0,[[["self"]],["t"]]],[11,"to_polar","","Convert to polar form (r, theta), such that `self = r *…",0,N],[11,"from_polar","","Convert a polar representation into a complex number.",0,[[["t"],["t"]],["complex"]]],[11,"exp","","Computes `e^(self)`, where `e` is the base of the natural…",0,[[["self"]],["complex"]]],[11,"ln","","Computes the principal value of natural logarithm of `self`.",0,[[["self"]],["complex"]]],[11,"sqrt","","Computes the principal value of the square root of `self`.",0,[[["self"]],["complex"]]],[11,"powf","","Raises `self` to a floating point power.",0,[[["self"],["t"]],["complex"]]],[11,"log","","Returns the logarithm of `self` with respect to an…",0,[[["self"],["t"]],["complex"]]],[11,"powc","","Raises `self` to a complex power.",0,[[["self"],["complex"]],["complex"]]],[11,"expf","","Raises a floating point number to the complex power `self`.",0,[[["self"],["t"]],["complex"]]],[11,"sin","","Computes the sine of `self`.",0,[[["self"]],["complex"]]],[11,"cos","","Computes the cosine of `self`.",0,[[["self"]],["complex"]]],[11,"tan","","Computes the tangent of `self`.",0,[[["self"]],["complex"]]],[11,"asin","","Computes the principal value of the inverse sine of `self`.",0,[[["self"]],["complex"]]],[11,"acos","","Computes the principal value of the inverse cosine of…",0,[[["self"]],["complex"]]],[11,"atan","","Computes the principal value of the inverse tangent of…",0,[[["self"]],["complex"]]],[11,"sinh","","Computes the hyperbolic sine of `self`.",0,[[["self"]],["complex"]]],[11,"cosh","","Computes the hyperbolic cosine of `self`.",0,[[["self"]],["complex"]]],[11,"tanh","","Computes the hyperbolic tangent of `self`.",0,[[["self"]],["complex"]]],[11,"asinh","","Computes the principal value of inverse hyperbolic sine of…",0,[[["self"]],["complex"]]],[11,"acosh","","Computes the principal value of inverse hyperbolic cosine…",0,[[["self"]],["complex"]]],[11,"atanh","","Computes the principal value of inverse hyperbolic tangent…",0,[[["self"]],["complex"]]],[11,"is_nan","","Checks if the given complex number is NaN",0,[[["self"]],["bool"]]],[11,"is_infinite","","Checks if the given complex number is infinite",0,[[["self"]],["bool"]]],[11,"is_finite","","Checks if the given complex number is finite",0,[[["self"]],["bool"]]],[11,"is_normal","","Checks if the given complex number is normal",0,[[["self"]],["bool"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"eq","","",0,[[["self"],["complex"]],["bool"]]],[11,"ne","","",0,[[["self"],["complex"]],["bool"]]],[11,"eq","","",1,[[["self"],["parsecomplexerror"]],["bool"]]],[11,"ne","","",1,[[["self"],["parsecomplexerror"]],["bool"]]],[11,"from","","",0,[[["t"]],["complex"]]],[11,"from","","",0,[[["t"]],["complex"]]],[11,"clone","","",0,[[["self"]],["complex"]]],[11,"default","","",0,[[],["complex"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"rem","","",0,[[["self"],["complex"]],["complex"]]],[11,"rem","","",0,[[["self"],["complex"]],["self"]]],[11,"rem","","",0,[[["self"],["t"]],["complex"]]],[11,"rem","","",0,[[["self"],["t"]],["complex"]]],[11,"div","","",0,[[["self"],["complex"]],["complex"]]],[11,"div","","",0,[[["self"],["complex"]],["complex"]]],[11,"div","","",0,[[["self"],["t"]],["complex"]]],[11,"div","","",0,[[["self"],["t"]],["complex"]]],[11,"from_str","","Parses `a +/- bi`; `ai +/- b`; `a`; or `bi` where `a` and…",0,[[["str"]],["result"]]],[11,"add","","",0,[[["self"],["complex"]],["complex"]]],[11,"add","","",0,[[["self"],["complex"]],["complex"]]],[11,"add","","",0,[[["self"],["t"]],["complex"]]],[11,"add","","",0,[[["self"],["t"]],["complex"]]],[11,"sub","","",0,[[["self"],["complex"]],["complex"]]],[11,"sub","","",0,[[["self"],["complex"]],["complex"]]],[11,"sub","","",0,[[["self"],["t"]],["complex"]]],[11,"sub","","",0,[[["self"],["t"]],["complex"]]],[11,"mul","","",0,[[["self"],["complex"]],["complex"]]],[11,"mul","","",0,[[["self"],["complex"]],["complex"]]],[11,"mul","","",0,[[["self"],["t"]],["complex"]]],[11,"mul","","",0,[[["self"],["t"]],["complex"]]],[11,"neg","","",0,[[["self"]],["complex"]]],[11,"add_assign","","",0,[[["self"],["complex"]]]],[11,"add_assign","","",0,[[["self"],["t"]]]],[11,"add_assign","","",0,[[["self"],["complex"]]]],[11,"add_assign","","",0,[[["self"],["t"]]]],[11,"sub_assign","","",0,[[["self"],["complex"]]]],[11,"sub_assign","","",0,[[["self"],["t"]]]],[11,"sub_assign","","",0,[[["self"],["complex"]]]],[11,"sub_assign","","",0,[[["self"],["t"]]]],[11,"mul_assign","","",0,[[["self"],["complex"]]]],[11,"mul_assign","","",0,[[["self"],["t"]]]],[11,"mul_assign","","",0,[[["self"],["complex"]]]],[11,"mul_assign","","",0,[[["self"],["t"]]]],[11,"div_assign","","",0,[[["self"],["complex"]]]],[11,"div_assign","","",0,[[["self"],["t"]]]],[11,"div_assign","","",0,[[["self"],["complex"]]]],[11,"div_assign","","",0,[[["self"],["t"]]]],[11,"rem_assign","","",0,[[["self"],["complex"]]]],[11,"rem_assign","","",0,[[["self"],["t"]]]],[11,"rem_assign","","",0,[[["self"],["complex"]]]],[11,"rem_assign","","",0,[[["self"],["t"]]]],[11,"hash","","",0,N],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"description","","",1,[[["self"]],["str"]]],[11,"from_str_radix","","Parses `a +/- bi`; `ai +/- b`; `a`; or `bi` where `a` and…",0,[[["str"],["u32"]],["result"]]],[11,"zero","","",0,[[],["complex"]]],[11,"is_zero","","",0,[[["self"]],["bool"]]],[11,"one","","",0,[[],["complex"]]],[11,"encode","","",0,[[["self"],["__st"]],["result"]]],[11,"decode","","",0,[[["__dt"]],["result",["complex"]]]]],"paths":[[3,"Complex"],[3,"ParseComplexError"]]};
searchIndex["num_cpus"]={"doc":"A crate with utilities to determine the number of CPUs…","items":[[5,"get","num_cpus","Returns the number of available CPUs of the current system.",N,[[],["usize"]]],[5,"get_physical","","Returns the number of physical cores of the current system.",N,[[],["usize"]]]],"paths":[]};
searchIndex["num_integer"]={"doc":"Integer trait and functions.","items":[[3,"IterBinomial","num_integer","An iterator over binomial coefficients.",N,N],[5,"sqrt","","Returns the truncated principal square root of an integer…",N,[[["t"]],["t"]]],[5,"cbrt","","Returns the truncated principal cube root of an integer --…",N,[[["t"]],["t"]]],[5,"nth_root","","Returns the truncated principal `n`th root of an integer…",N,[[["t"],["u32"]],["t"]]],[5,"div_rem","","Simultaneous integer division and modulus",N,N],[5,"div_floor","","Floored integer division",N,[[["t"],["t"]],["t"]]],[5,"mod_floor","","Floored integer modulus",N,[[["t"],["t"]],["t"]]],[5,"div_mod_floor","","Simultaneous floored integer division and modulus",N,N],[5,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number…",N,[[["t"],["t"]],["t"]]],[5,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number…",N,[[["t"],["t"]],["t"]]],[5,"binomial","","Calculate the binomial coefficient.",N,[[["t"],["t"]],["t"]]],[5,"multinomial","","Calculate the multinomial coefficient.",N,N],[8,"Roots","","Provides methods to compute an integer's square root, cube…",N,N],[10,"nth_root","","Returns the truncated principal `n`th root of an integer…",0,[[["self"],["u32"]],["self"]]],[11,"sqrt","","Returns the truncated principal square root of an integer…",0,[[["self"]],["self"]]],[11,"cbrt","","Returns the truncated principal cube root of an integer --…",0,[[["self"]],["self"]]],[8,"Integer","","",N,N],[10,"div_floor","","Floored integer division.",1,[[["self"],["self"]],["self"]]],[10,"mod_floor","","Floored integer modulo, satisfying:",1,[[["self"],["self"]],["self"]]],[10,"gcd","","Greatest Common Divisor (GCD).",1,[[["self"],["self"]],["self"]]],[10,"lcm","","Lowest Common Multiple (LCM).",1,[[["self"],["self"]],["self"]]],[10,"divides","","Deprecated, use `is_multiple_of` instead.",1,[[["self"],["self"]],["bool"]]],[10,"is_multiple_of","","Returns `true` if `self` is a multiple of `other`.",1,[[["self"],["self"]],["bool"]]],[10,"is_even","","Returns `true` if the number is even.",1,[[["self"]],["bool"]]],[10,"is_odd","","Returns `true` if the number is odd.",1,[[["self"]],["bool"]]],[10,"div_rem","","Simultaneous truncated integer division and modulus.…",1,N],[11,"div_mod_floor","","Simultaneous floored integer division and modulus. Returns…",1,N],[11,"new","","For a given n, iterate over all binomial coefficients…",2,[[["t"]],["iterbinomial"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into_iter","","",2,[[["self"]],["i"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"next","","",2,[[["self"]],["option"]]],[11,"sqrt","","Returns the truncated principal square root of an integer…",0,[[["self"]],["self"]]],[11,"cbrt","","Returns the truncated principal cube root of an integer --…",0,[[["self"]],["self"]]]],"paths":[[8,"Roots"],[8,"Integer"],[3,"IterBinomial"]]};
searchIndex["num_iter"]={"doc":"External iterators for generic mathematics","items":[[3,"Range","num_iter","An iterator over the range [start, stop)",N,N],[3,"RangeInclusive","","An iterator over the range [start, stop]",N,N],[3,"RangeStep","","An iterator over the range [start, stop) by `step`. It…",N,N],[3,"RangeStepInclusive","","An iterator over the range [start, stop] by `step`. It…",N,N],[5,"range","","Returns an iterator over the given range [start, stop)…",N,[[["a"],["a"]],["range"]]],[5,"range_inclusive","","Return an iterator over the range [start, stop]",N,[[["a"],["a"]],["rangeinclusive"]]],[5,"range_step","","Return an iterator over the range [start, stop) by `step`.…",N,[[["a"],["a"],["a"]],["rangestep"]]],[5,"range_step_inclusive","","Return an iterator over the range [start, stop] by `step`.…",N,[[["a"],["a"],["a"]],["rangestepinclusive"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into_iter","","",0,[[["self"]],["i"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into_iter","","",1,[[["self"]],["i"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into_iter","","",2,[[["self"]],["i"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into_iter","","",3,[[["self"]],["i"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"next_back","","",0,[[["self"]],["option"]]],[11,"next_back","","",1,[[["self"]],["option"]]],[11,"next","","",0,[[["self"]],["option"]]],[11,"size_hint","","",0,N],[11,"next","","",1,[[["self"]],["option"]]],[11,"size_hint","","",1,N],[11,"next","","",2,[[["self"]],["option"]]],[11,"next","","",3,[[["self"]],["option"]]],[11,"clone","","",0,[[["self"]],["range"]]],[11,"clone","","",1,[[["self"]],["rangeinclusive"]]],[11,"clone","","",2,[[["self"]],["rangestep"]]],[11,"clone","","",3,[[["self"]],["rangestepinclusive"]]]],"paths":[[3,"Range"],[3,"RangeInclusive"],[3,"RangeStep"],[3,"RangeStepInclusive"]]};
searchIndex["num_rational"]={"doc":"Rational numbers","items":[[3,"Ratio","num_rational","Represents the ratio between 2 numbers.",N,N],[3,"ParseRatioError","","",N,N],[6,"Rational","","Alias for a `Ratio` of machine-sized integers.",N,N],[6,"Rational32","","",N,N],[6,"Rational64","","",N,N],[6,"BigRational","","Alias for arbitrary precision rationals.",N,N],[11,"new","","Creates a new `Ratio`. Fails if `denom` is zero.",0,[[["t"],["t"]],["ratio"]]],[11,"from_integer","","Creates a `Ratio` representing the integer `t`.",0,[[["t"]],["ratio"]]],[11,"new_raw","","Creates a `Ratio` without checking for `denom == 0` or…",0,[[["t"],["t"]],["ratio"]]],[11,"to_integer","","Converts to an integer, rounding towards zero.",0,[[["self"]],["t"]]],[11,"numer","","Gets an immutable reference to the numerator.",0,[[["self"]],["t"]]],[11,"denom","","Gets an immutable reference to the denominator.",0,[[["self"]],["t"]]],[11,"is_integer","","Returns true if the rational number is an integer…",0,[[["self"]],["bool"]]],[11,"reduced","","Returns a reduced copy of self.",0,[[["self"]],["ratio"]]],[11,"recip","","Returns the reciprocal.",0,[[["self"]],["ratio"]]],[11,"floor","","Rounds towards minus infinity.",0,[[["self"]],["ratio"]]],[11,"ceil","","Rounds towards plus infinity.",0,[[["self"]],["ratio"]]],[11,"round","","Rounds to the nearest integer. Rounds half-way cases away…",0,[[["self"]],["ratio"]]],[11,"trunc","","Rounds towards zero.",0,[[["self"]],["ratio"]]],[11,"fract","","Returns the fractional part of a number, with division…",0,[[["self"]],["ratio"]]],[11,"pow","","Raises the `Ratio` to the power of an exponent.",0,[[["self"],["i32"]],["ratio"]]],[11,"from_float","","Converts a float into a rational number.",0,[[["t"]],["option",["bigrational"]]]],[11,"approximate_float","","",0,[[["f"]],["option",["ratio"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"cmp","","",0,[[["self"],["self"]],["ordering"]]],[11,"eq","","",0,[[["self"],["self"]],["bool"]]],[11,"eq","","",1,[[["self"],["parseratioerror"]],["bool"]]],[11,"ne","","",1,[[["self"],["parseratioerror"]],["bool"]]],[11,"from","","",0,[[["t"]],["ratio"]]],[11,"from","","",0,N],[11,"clone","","",0,[[["self"]],["ratio"]]],[11,"clone","","",1,[[["self"]],["parseratioerror"]]],[11,"into","","",0,N],[11,"partial_cmp","","",0,[[["self"],["self"]],["option",["ordering"]]]],[11,"fmt","","Renders as `numer/denom`. If denom=1, renders as numer.",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"rem","","",0,[[["self"],["ratio"]],["ratio"]]],[11,"rem","","",0,[[["self"],["t"]],["ratio"]]],[11,"rem","","",0,[[["self"],["ratio"]],["ratio"]]],[11,"rem","","",0,[[["self"],["t"]],["ratio"]]],[11,"div","","",0,[[["self"],["ratio"]],["ratio"]]],[11,"div","","",0,[[["self"],["t"]],["ratio"]]],[11,"div","","",0,[[["self"],["ratio"]],["ratio"]]],[11,"div","","",0,[[["self"],["t"]],["ratio"]]],[11,"from_str","","Parses `numer/denom` or just `numer`.",0,[[["str"]],["result",["ratio","parseratioerror"]]]],[11,"add","","",0,[[["self"],["ratio"]],["ratio"]]],[11,"add","","",0,[[["self"],["t"]],["ratio"]]],[11,"add","","",0,[[["self"],["ratio"]],["ratio"]]],[11,"add","","",0,[[["self"],["t"]],["ratio"]]],[11,"sub","","",0,[[["self"],["ratio"]],["ratio"]]],[11,"sub","","",0,[[["self"],["t"]],["ratio"]]],[11,"sub","","",0,[[["self"],["ratio"]],["ratio"]]],[11,"sub","","",0,[[["self"],["t"]],["ratio"]]],[11,"mul","","",0,[[["self"],["ratio"]],["ratio"]]],[11,"mul","","",0,[[["self"],["t"]],["ratio"]]],[11,"mul","","",0,[[["self"],["ratio"]],["ratio"]]],[11,"mul","","",0,[[["self"],["t"]],["ratio"]]],[11,"neg","","",0,[[["self"]],["ratio"]]],[11,"add_assign","","",0,[[["self"],["ratio"]]]],[11,"add_assign","","",0,[[["self"],["t"]]]],[11,"add_assign","","",0,[[["self"],["ratio"]]]],[11,"add_assign","","",0,[[["self"],["t"]]]],[11,"sub_assign","","",0,[[["self"],["ratio"]]]],[11,"sub_assign","","",0,[[["self"],["t"]]]],[11,"sub_assign","","",0,[[["self"],["ratio"]]]],[11,"sub_assign","","",0,[[["self"],["t"]]]],[11,"mul_assign","","",0,[[["self"],["ratio"]]]],[11,"mul_assign","","",0,[[["self"],["t"]]]],[11,"mul_assign","","",0,[[["self"],["ratio"]]]],[11,"mul_assign","","",0,[[["self"],["t"]]]],[11,"div_assign","","",0,[[["self"],["ratio"]]]],[11,"div_assign","","",0,[[["self"],["t"]]]],[11,"div_assign","","",0,[[["self"],["ratio"]]]],[11,"div_assign","","",0,[[["self"],["t"]]]],[11,"rem_assign","","",0,[[["self"],["ratio"]]]],[11,"rem_assign","","",0,[[["self"],["t"]]]],[11,"rem_assign","","",0,[[["self"],["ratio"]]]],[11,"rem_assign","","",0,[[["self"],["t"]]]],[11,"hash","","",0,[[["self"],["h"]]]],[11,"description","","",1,[[["self"]],["str"]]],[11,"encode","","",0,[[["self"],["__st"]],["result"]]],[11,"decode","","",0,[[["__dt"]],["result",["ratio"]]]],[11,"zero","","",0,[[],["ratio"]]],[11,"is_zero","","",0,[[["self"]],["bool"]]],[11,"one","","",0,[[],["ratio"]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"from_str_radix","","Parses `numer/denom` where the numbers are in base `radix`.",0,[[["str"],["u32"]],["result",["ratio","parseratioerror"]]]],[11,"checked_mul","","",0,[[["self"],["ratio"]],["option",["ratio"]]]],[11,"checked_div","","",0,[[["self"],["ratio"]],["option",["ratio"]]]],[11,"checked_sub","","",0,[[["self"],["ratio"]],["option",["ratio"]]]],[11,"checked_add","","",0,[[["self"],["ratio"]],["option",["ratio"]]]],[11,"abs","","",0,[[["self"]],["ratio"]]],[11,"abs_sub","","",0,[[["self"],["ratio"]],["ratio"]]],[11,"signum","","",0,[[["self"]],["ratio"]]],[11,"is_positive","","",0,[[["self"]],["bool"]]],[11,"is_negative","","",0,[[["self"]],["bool"]]]],"paths":[[3,"Ratio"],[3,"ParseRatioError"]]};
searchIndex["num_traits"]={"doc":"Numeric traits for generic mathematics","items":[[3,"ParseFloatError","num_traits","",N,N],[12,"kind","","",0,N],[4,"FloatErrorKind","","",N,N],[13,"Empty","","",1,N],[13,"Invalid","","",1,N],[5,"clamp","","A value bounded by a minimum and a maximum",N,[[["t"],["t"],["t"]],["t"]]],[0,"bounds","","",N,N],[8,"Bounded","num_traits::bounds","Numbers which have upper and lower bounds",N,N],[10,"min_value","","returns the smallest finite number this type can represent",2,[[],["self"]]],[10,"max_value","","returns the largest finite number this type can represent",2,[[],["self"]]],[0,"cast","num_traits","",N,N],[5,"cast","num_traits::cast","Cast from one machine scalar to another.",N,[[["t"]],["option"]]],[8,"ToPrimitive","","A generic trait for converting a value to a number.",N,N],[11,"to_isize","","Converts the value of `self` to an `isize`.",3,[[["self"]],["option",["isize"]]]],[11,"to_i8","","Converts the value of `self` to an `i8`.",3,[[["self"]],["option",["i8"]]]],[11,"to_i16","","Converts the value of `self` to an `i16`.",3,[[["self"]],["option",["i16"]]]],[11,"to_i32","","Converts the value of `self` to an `i32`.",3,[[["self"]],["option",["i32"]]]],[10,"to_i64","","Converts the value of `self` to an `i64`.",3,[[["self"]],["option",["i64"]]]],[11,"to_i128","","Converts the value of `self` to an `i128`.",3,[[["self"]],["option",["i128"]]]],[11,"to_usize","","Converts the value of `self` to a `usize`.",3,[[["self"]],["option",["usize"]]]],[11,"to_u8","","Converts the value of `self` to an `u8`.",3,[[["self"]],["option",["u8"]]]],[11,"to_u16","","Converts the value of `self` to an `u16`.",3,[[["self"]],["option",["u16"]]]],[11,"to_u32","","Converts the value of `self` to an `u32`.",3,[[["self"]],["option",["u32"]]]],[10,"to_u64","","Converts the value of `self` to an `u64`.",3,[[["self"]],["option",["u64"]]]],[11,"to_u128","","Converts the value of `self` to an `u128`.",3,[[["self"]],["option",["u128"]]]],[11,"to_f32","","Converts the value of `self` to an `f32`.",3,[[["self"]],["option",["f32"]]]],[11,"to_f64","","Converts the value of `self` to an `f64`.",3,[[["self"]],["option",["f64"]]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",N,N],[11,"from_isize","","Convert an `isize` to return an optional value of this…",4,[[["isize"]],["option"]]],[11,"from_i8","","Convert an `i8` to return an optional value of this type.…",4,[[["i8"]],["option"]]],[11,"from_i16","","Convert an `i16` to return an optional value of this type.…",4,[[["i16"]],["option"]]],[11,"from_i32","","Convert an `i32` to return an optional value of this type.…",4,[[["i32"]],["option"]]],[10,"from_i64","","Convert an `i64` to return an optional value of this type.…",4,[[["i64"]],["option"]]],[11,"from_i128","","Convert an `i128` to return an optional value of this…",4,[[["i128"]],["option"]]],[11,"from_usize","","Convert a `usize` to return an optional value of this…",4,[[["usize"]],["option"]]],[11,"from_u8","","Convert an `u8` to return an optional value of this type.…",4,[[["u8"]],["option"]]],[11,"from_u16","","Convert an `u16` to return an optional value of this type.…",4,[[["u16"]],["option"]]],[11,"from_u32","","Convert an `u32` to return an optional value of this type.…",4,[[["u32"]],["option"]]],[10,"from_u64","","Convert an `u64` to return an optional value of this type.…",4,[[["u64"]],["option"]]],[11,"from_u128","","Convert an `u128` to return an optional value of this…",4,[[["u128"]],["option"]]],[11,"from_f32","","Convert a `f32` to return an optional value of this type.…",4,[[["f32"]],["option"]]],[11,"from_f64","","Convert a `f64` to return an optional value of this type.…",4,[[["f64"]],["option"]]],[8,"NumCast","","An interface for casting between machine scalars.",N,N],[10,"from","","Creates a number from another value that can be converted…",5,[[["t"]],["option"]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars…",N,N],[10,"as_","","Convert a value to another, using the `as` operator.",6,[[["self"]],["t"]]],[0,"float","num_traits","",N,N],[8,"FloatCore","num_traits::float","Generic trait for floating point numbers that works with…",N,N],[10,"infinity","","Returns positive infinity.",7,[[],["self"]]],[10,"neg_infinity","","Returns negative infinity.",7,[[],["self"]]],[10,"nan","","Returns NaN.",7,[[],["self"]]],[10,"neg_zero","","Returns `-0.0`.",7,[[],["self"]]],[10,"min_value","","Returns the smallest finite value that this type can…",7,[[],["self"]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",7,[[],["self"]]],[10,"epsilon","","Returns epsilon, a small positive value.",7,[[],["self"]]],[10,"max_value","","Returns the largest finite value that this type can…",7,[[],["self"]]],[11,"is_nan","","Returns `true` if the number is NaN.",7,[[["self"]],["bool"]]],[11,"is_infinite","","Returns `true` if the number is infinite.",7,[[["self"]],["bool"]]],[11,"is_finite","","Returns `true` if the number is neither infinite or NaN.",7,[[["self"]],["bool"]]],[11,"is_normal","","Returns `true` if the number is neither zero, infinite,…",7,[[["self"]],["bool"]]],[10,"classify","","Returns the floating point category of the number. If only…",7,[[["self"]],["fpcategory"]]],[11,"floor","","Returns the largest integer less than or equal to a number.",7,[[["self"]],["self"]]],[11,"ceil","","Returns the smallest integer greater than or equal to a…",7,[[["self"]],["self"]]],[11,"round","","Returns the nearest integer to a number. Round half-way…",7,[[["self"]],["self"]]],[11,"trunc","","Return the integer part of a number.",7,[[["self"]],["self"]]],[11,"fract","","Returns the fractional part of a number.",7,[[["self"]],["self"]]],[11,"abs","","Computes the absolute value of `self`. Returns…",7,[[["self"]],["self"]]],[11,"signum","","Returns a number that represents the sign of `self`.",7,[[["self"]],["self"]]],[11,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and…",7,[[["self"]],["bool"]]],[11,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and…",7,[[["self"]],["bool"]]],[11,"min","","Returns the minimum of the two numbers.",7,[[["self"],["self"]],["self"]]],[11,"max","","Returns the maximum of the two numbers.",7,[[["self"],["self"]],["self"]]],[11,"recip","","Returns the reciprocal (multiplicative inverse) of the…",7,[[["self"]],["self"]]],[11,"powi","","Raise a number to an integer power.",7,[[["self"],["i32"]],["self"]]],[10,"to_degrees","","Converts to degrees, assuming the number is in radians.",7,[[["self"]],["self"]]],[10,"to_radians","","Converts to radians, assuming the number is in degrees.",7,[[["self"]],["self"]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",7,N],[8,"Float","","Generic trait for floating point numbers",N,N],[10,"nan","","Returns the `NaN` value.",8,[[],["self"]]],[10,"infinity","","Returns the infinite value.",8,[[],["self"]]],[10,"neg_infinity","","Returns the negative infinite value.",8,[[],["self"]]],[10,"neg_zero","","Returns `-0.0`.",8,[[],["self"]]],[10,"min_value","","Returns the smallest finite value that this type can…",8,[[],["self"]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",8,[[],["self"]]],[11,"epsilon","","Returns epsilon, a small positive value.",8,[[],["self"]]],[10,"max_value","","Returns the largest finite value that this type can…",8,[[],["self"]]],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",8,[[["self"]],["bool"]]],[10,"is_infinite","","Returns `true` if this value is positive infinity or…",8,[[["self"]],["bool"]]],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",8,[[["self"]],["bool"]]],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,…",8,[[["self"]],["bool"]]],[10,"classify","","Returns the floating point category of the number. If only…",8,[[["self"]],["fpcategory"]]],[10,"floor","","Returns the largest integer less than or equal to a number.",8,[[["self"]],["self"]]],[10,"ceil","","Returns the smallest integer greater than or equal to a…",8,[[["self"]],["self"]]],[10,"round","","Returns the nearest integer to a number. Round half-way…",8,[[["self"]],["self"]]],[10,"trunc","","Return the integer part of a number.",8,[[["self"]],["self"]]],[10,"fract","","Returns the fractional part of a number.",8,[[["self"]],["self"]]],[10,"abs","","Computes the absolute value of `self`. Returns…",8,[[["self"]],["self"]]],[10,"signum","","Returns a number that represents the sign of `self`.",8,[[["self"]],["self"]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`,…",8,[[["self"]],["bool"]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`,…",8,[[["self"]],["bool"]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only…",8,[[["self"],["self"],["self"]],["self"]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",8,[[["self"]],["self"]]],[10,"powi","","Raise a number to an integer power.",8,[[["self"],["i32"]],["self"]]],[10,"powf","","Raise a number to a floating point power.",8,[[["self"],["self"]],["self"]]],[10,"sqrt","","Take the square root of a number.",8,[[["self"]],["self"]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",8,[[["self"]],["self"]]],[10,"exp2","","Returns `2^(self)`.",8,[[["self"]],["self"]]],[10,"ln","","Returns the natural logarithm of the number.",8,[[["self"]],["self"]]],[10,"log","","Returns the logarithm of the number with respect to an…",8,[[["self"],["self"]],["self"]]],[10,"log2","","Returns the base 2 logarithm of the number.",8,[[["self"]],["self"]]],[10,"log10","","Returns the base 10 logarithm of the number.",8,[[["self"]],["self"]]],[11,"to_degrees","","Converts radians to degrees.",8,[[["self"]],["self"]]],[11,"to_radians","","Converts degrees to radians.",8,[[["self"]],["self"]]],[10,"max","","Returns the maximum of the two numbers.",8,[[["self"],["self"]],["self"]]],[10,"min","","Returns the minimum of the two numbers.",8,[[["self"],["self"]],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",8,[[["self"],["self"]],["self"]]],[10,"cbrt","","Take the cubic root of a number.",8,[[["self"]],["self"]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle…",8,[[["self"],["self"]],["self"]]],[10,"sin","","Computes the sine of a number (in radians).",8,[[["self"]],["self"]]],[10,"cos","","Computes the cosine of a number (in radians).",8,[[["self"]],["self"]]],[10,"tan","","Computes the tangent of a number (in radians).",8,[[["self"]],["self"]]],[10,"asin","","Computes the arcsine of a number. Return value is in…",8,[[["self"]],["self"]]],[10,"acos","","Computes the arccosine of a number. Return value is in…",8,[[["self"]],["self"]]],[10,"atan","","Computes the arctangent of a number. Return value is in…",8,[[["self"]],["self"]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and…",8,[[["self"],["self"]],["self"]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number,…",8,N],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if…",8,[[["self"]],["self"]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than…",8,[[["self"]],["self"]]],[10,"sinh","","Hyperbolic sine function.",8,[[["self"]],["self"]]],[10,"cosh","","Hyperbolic cosine function.",8,[[["self"]],["self"]]],[10,"tanh","","Hyperbolic tangent function.",8,[[["self"]],["self"]]],[10,"asinh","","Inverse hyperbolic sine function.",8,[[["self"]],["self"]]],[10,"acosh","","Inverse hyperbolic cosine function.",8,[[["self"]],["self"]]],[10,"atanh","","Inverse hyperbolic tangent function.",8,[[["self"]],["self"]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",8,N],[8,"FloatConst","","",N,N],[10,"E","","Return Euler’s number.",9,[[],["self"]]],[10,"FRAC_1_PI","","Return `1.0 / π`.",9,[[],["self"]]],[10,"FRAC_1_SQRT_2","","Return `1.0 / sqrt(2.0)`.",9,[[],["self"]]],[10,"FRAC_2_PI","","Return `2.0 / π`.",9,[[],["self"]]],[10,"FRAC_2_SQRT_PI","","Return `2.0 / sqrt(π)`.",9,[[],["self"]]],[10,"FRAC_PI_2","","Return `π / 2.0`.",9,[[],["self"]]],[10,"FRAC_PI_3","","Return `π / 3.0`.",9,[[],["self"]]],[10,"FRAC_PI_4","","Return `π / 4.0`.",9,[[],["self"]]],[10,"FRAC_PI_6","","Return `π / 6.0`.",9,[[],["self"]]],[10,"FRAC_PI_8","","Return `π / 8.0`.",9,[[],["self"]]],[10,"LN_10","","Return `ln(10.0)`.",9,[[],["self"]]],[10,"LN_2","","Return `ln(2.0)`.",9,[[],["self"]]],[10,"LOG10_E","","Return `log10(e)`.",9,[[],["self"]]],[10,"LOG2_E","","Return `log2(e)`.",9,[[],["self"]]],[10,"PI","","Return Archimedes’ constant.",9,[[],["self"]]],[10,"SQRT_2","","Return `sqrt(2.0)`.",9,[[],["self"]]],[0,"identities","num_traits","",N,N],[5,"zero","num_traits::identities","Returns the additive identity, `0`.",N,[[],["t"]]],[5,"one","","Returns the multiplicative identity, `1`.",N,[[],["t"]]],[8,"Zero","","Defines an additive identity element for `Self`.",N,N],[10,"zero","","Returns the additive identity element of `Self`, `0`.",10,[[],["self"]]],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",10,[[["self"]],["bool"]]],[8,"One","","Defines a multiplicative identity element for `Self`.",N,N],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",11,[[],["self"]]],[11,"is_one","","Returns `true` if `self` is equal to the multiplicative…",11,[[["self"]],["bool"]]],[0,"int","num_traits","",N,N],[8,"PrimInt","num_traits::int","",N,N],[10,"count_ones","","Returns the number of ones in the binary representation of…",12,[[["self"]],["u32"]]],[10,"count_zeros","","Returns the number of zeros in the binary representation…",12,[[["self"]],["u32"]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary…",12,[[["self"]],["u32"]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary…",12,[[["self"]],["u32"]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount,…",12,[[["self"],["u32"]],["self"]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount,…",12,[[["self"],["u32"]],["self"]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount,…",12,[[["self"],["u32"]],["self"]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount,…",12,[[["self"],["u32"]],["self"]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount,…",12,[[["self"],["u32"]],["self"]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount,…",12,[[["self"],["u32"]],["self"]]],[10,"swap_bytes","","Reverses the byte order of the integer.",12,[[["self"]],["self"]]],[10,"from_be","","Convert an integer from big endian to the target's…",12,[[["self"]],["self"]]],[10,"from_le","","Convert an integer from little endian to the target's…",12,[[["self"]],["self"]]],[10,"to_be","","Convert `self` to big endian from the target's endianness.",12,[[["self"]],["self"]]],[10,"to_le","","Convert `self` to little endian from the target's…",12,[[["self"]],["self"]]],[10,"pow","","Raises self to the power of `exp`, using exponentiation by…",12,[[["self"],["u32"]],["self"]]],[0,"ops","num_traits","",N,N],[0,"checked","num_traits::ops","",N,N],[8,"CheckedAdd","num_traits::ops::checked","Performs addition that returns `None` instead of wrapping…",N,N],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow…",13,[[["self"],["self"]],["option"]]],[8,"CheckedSub","","Performs subtraction that returns `None` instead of…",N,N],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If…",14,[[["self"],["self"]],["option"]]],[8,"CheckedMul","","Performs multiplication that returns `None` instead of…",N,N],[10,"checked_mul","","Multiplies two numbers, checking for underflow or…",15,[[["self"],["self"]],["option"]]],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking…",N,N],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and…",16,[[["self"],["self"]],["option"]]],[8,"CheckedRem","","Performs an integral remainder that returns `None` instead…",N,N],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for…",17,[[["self"],["self"]],["option"]]],[8,"CheckedNeg","","Performs negation that returns `None` if the result can't…",N,N],[10,"checked_neg","","Negates a number, returning `None` for results that can't…",18,[[["self"]],["option"]]],[8,"CheckedShl","","Performs a left shift that returns `None` on overflow.",N,N],[10,"checked_shl","","Shifts a number to the left, checking for overflow. If…",19,[[["self"],["u32"]],["option"]]],[8,"CheckedShr","","Performs a right shift that returns `None` on overflow.",N,N],[10,"checked_shr","","Shifts a number to the left, checking for overflow. If…",20,[[["self"],["u32"]],["option"]]],[0,"inv","num_traits::ops","",N,N],[8,"Inv","num_traits::ops::inv","Unary operator for retrieving the multiplicative inverse,…",N,N],[16,"Output","","The result after applying the operator.",21,N],[10,"inv","","Returns the multiplicative inverse of `self`.",21,N],[0,"mul_add","num_traits::ops","",N,N],[8,"MulAdd","num_traits::ops::mul_add","Fused multiply-add. Computes `(self * a) + b` with only…",N,N],[16,"Output","","The resulting type after applying the fused multiply-add.",22,N],[10,"mul_add","","Performs the fused multiply-add operation.",22,N],[8,"MulAddAssign","","The fused multiply-add assignment operation.",N,N],[10,"mul_add_assign","","Performs the fused multiply-add operation.",23,[[["self"],["a"],["b"]]]],[0,"saturating","num_traits::ops","",N,N],[8,"Saturating","num_traits::ops::saturating","Saturating math operations",N,N],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at…",24,[[["self"],["self"]],["self"]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating…",24,[[["self"],["self"]],["self"]]],[0,"wrapping","num_traits::ops","",N,N],[8,"WrappingAdd","num_traits::ops::wrapping","Performs addition that wraps around on overflow.",N,N],[10,"wrapping_add","","Wrapping (modular) addition. Computes `self + other`,…",25,[[["self"],["self"]],["self"]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",N,N],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes `self - other`,…",26,[[["self"],["self"]],["self"]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",N,N],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes `self *…",27,[[["self"],["self"]],["self"]]],[8,"WrappingShl","","Performs a left shift that does not panic.",N,N],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields `self << mask(rhs)`,…",28,[[["self"],["u32"]],["self"]]],[8,"WrappingShr","","Performs a right shift that does not panic.",N,N],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields `self >>…",29,[[["self"],["u32"]],["self"]]],[0,"pow","num_traits","",N,N],[5,"pow","num_traits::pow","Raises a value to the power of exp, using exponentiation…",N,[[["t"],["usize"]],["t"]]],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an…",N,[[["t"],["usize"]],["option"]]],[8,"Pow","","Binary operator for raising a value to a power.",N,N],[16,"Output","","The result after applying the operator.",30,N],[10,"pow","","Returns `self` to the power `rhs`.",30,N],[0,"real","num_traits","",N,N],[8,"Real","num_traits::real","A trait for real number types that do not necessarily have…",N,N],[10,"min_value","","Returns the smallest finite value that this type can…",31,[[],["self"]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",31,[[],["self"]]],[10,"epsilon","","Returns epsilon, a small positive value.",31,[[],["self"]]],[10,"max_value","","Returns the largest finite value that this type can…",31,[[],["self"]]],[10,"floor","","Returns the largest integer less than or equal to a number.",31,[[["self"]],["self"]]],[10,"ceil","","Returns the smallest integer greater than or equal to a…",31,[[["self"]],["self"]]],[10,"round","","Returns the nearest integer to a number. Round half-way…",31,[[["self"]],["self"]]],[10,"trunc","","Return the integer part of a number.",31,[[["self"]],["self"]]],[10,"fract","","Returns the fractional part of a number.",31,[[["self"]],["self"]]],[10,"abs","","Computes the absolute value of `self`. Returns…",31,[[["self"]],["self"]]],[10,"signum","","Returns a number that represents the sign of `self`.",31,[[["self"]],["self"]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`,…",31,[[["self"]],["bool"]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`,…",31,[[["self"]],["bool"]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only…",31,[[["self"],["self"],["self"]],["self"]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",31,[[["self"]],["self"]]],[10,"powi","","Raise a number to an integer power.",31,[[["self"],["i32"]],["self"]]],[10,"powf","","Raise a number to a real number power.",31,[[["self"],["self"]],["self"]]],[10,"sqrt","","Take the square root of a number.",31,[[["self"]],["self"]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",31,[[["self"]],["self"]]],[10,"exp2","","Returns `2^(self)`.",31,[[["self"]],["self"]]],[10,"ln","","Returns the natural logarithm of the number.",31,[[["self"]],["self"]]],[10,"log","","Returns the logarithm of the number with respect to an…",31,[[["self"],["self"]],["self"]]],[10,"log2","","Returns the base 2 logarithm of the number.",31,[[["self"]],["self"]]],[10,"log10","","Returns the base 10 logarithm of the number.",31,[[["self"]],["self"]]],[10,"to_degrees","","Converts radians to degrees.",31,[[["self"]],["self"]]],[10,"to_radians","","Converts degrees to radians.",31,[[["self"]],["self"]]],[10,"max","","Returns the maximum of the two numbers.",31,[[["self"],["self"]],["self"]]],[10,"min","","Returns the minimum of the two numbers.",31,[[["self"],["self"]],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",31,[[["self"],["self"]],["self"]]],[10,"cbrt","","Take the cubic root of a number.",31,[[["self"]],["self"]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle…",31,[[["self"],["self"]],["self"]]],[10,"sin","","Computes the sine of a number (in radians).",31,[[["self"]],["self"]]],[10,"cos","","Computes the cosine of a number (in radians).",31,[[["self"]],["self"]]],[10,"tan","","Computes the tangent of a number (in radians).",31,[[["self"]],["self"]]],[10,"asin","","Computes the arcsine of a number. Return value is in…",31,[[["self"]],["self"]]],[10,"acos","","Computes the arccosine of a number. Return value is in…",31,[[["self"]],["self"]]],[10,"atan","","Computes the arctangent of a number. Return value is in…",31,[[["self"]],["self"]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and…",31,[[["self"],["self"]],["self"]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number,…",31,N],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if…",31,[[["self"]],["self"]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than…",31,[[["self"]],["self"]]],[10,"sinh","","Hyperbolic sine function.",31,[[["self"]],["self"]]],[10,"cosh","","Hyperbolic cosine function.",31,[[["self"]],["self"]]],[10,"tanh","","Hyperbolic tangent function.",31,[[["self"]],["self"]]],[10,"asinh","","Inverse hyperbolic sine function.",31,[[["self"]],["self"]]],[10,"acosh","","Inverse hyperbolic cosine function.",31,[[["self"]],["self"]]],[10,"atanh","","Inverse hyperbolic tangent function.",31,[[["self"]],["self"]]],[0,"sign","num_traits","",N,N],[5,"abs","num_traits::sign","Computes the absolute value.",N,[[["t"]],["t"]]],[5,"abs_sub","","The positive difference of two numbers.",N,[[["t"],["t"]],["t"]]],[5,"signum","","Returns the sign of the number.",N,[[["t"]],["t"]]],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can…",N,N],[10,"abs","","Computes the absolute value.",32,[[["self"]],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",32,[[["self"],["self"]],["self"]]],[10,"signum","","Returns the sign of the number.",32,[[["self"]],["self"]]],[10,"is_positive","","Returns true if the number is positive and false if the…",32,[[["self"]],["bool"]]],[10,"is_negative","","Returns true if the number is negative and false if the…",32,[[["self"]],["bool"]]],[8,"Unsigned","","A trait for values which cannot be negative",N,N],[8,"Num","num_traits","The base trait for numeric types, covering `0` and `1`…",N,N],[16,"FromStrRadixErr","","",33,N],[10,"from_str_radix","","Convert from a string and radix <= 36.",33,[[["str"],["u32"]],["result"]]],[8,"NumOps","","The trait for types implementing basic numeric operations",N,N],[8,"NumRef","","The trait for `Num` types which also implement numeric…",N,N],[8,"RefNum","","The trait for references which implement numeric…",N,N],[8,"NumAssignOps","","The trait for types implementing numeric assignment…",N,N],[8,"NumAssign","","The trait for `Num` types which also implement assignment…",N,N],[8,"NumAssignRef","","The trait for `NumAssign` types which also implement…",N,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]]],"paths":[[3,"ParseFloatError"],[4,"FloatErrorKind"],[8,"Bounded"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"AsPrimitive"],[8,"FloatCore"],[8,"Float"],[8,"FloatConst"],[8,"Zero"],[8,"One"],[8,"PrimInt"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"CheckedRem"],[8,"CheckedNeg"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"Inv"],[8,"MulAdd"],[8,"MulAddAssign"],[8,"Saturating"],[8,"WrappingAdd"],[8,"WrappingSub"],[8,"WrappingMul"],[8,"WrappingShl"],[8,"WrappingShr"],[8,"Pow"],[8,"Real"],[8,"Signed"],[8,"Num"]]};
searchIndex["optimization"]={"doc":"","items":[[3,"RemoveCriticalEdges","optimization","",N,N],[3,"CommonSubExpr","","",N,N],[3,"Optimization","","",N,N],[12,"kind","","",0,N],[12,"flags","","",0,N],[3,"OutcomeCollector","","",N,N],[4,"Kind","","All available optimizations",N,N],[13,"ConstantFolding","","",1,N],[13,"Inline","","",1,N],[13,"ControlFlow","","",1,N],[13,"RemoveCriticalEdges","","",1,N],[13,"EarliestPlacement","","",1,N],[13,"CostMinimizingPlacement","","",1,N],[13,"CodePlacement","","",1,N],[13,"CommonSubExprElim","","",1,N],[4,"Level","","These are predefined sequences of optimizations (in clang…",N,N],[13,"None","","This level compiles the fastest and generates the most…",2,N],[13,"Moderate","","Moderate level of optimization which enables most…",2,N],[13,"Aggressive","","Enables optimizations that take longer to perform or that…",2,N],[13,"Custom","","A user-defined sequence of optimizations",2,N],[4,"Flag","","These are options that can be attached to any optimization",N,N],[13,"DumpVcg","","Dump a 'Visualization of Compiler Graph' (VCG) file that…",3,N],[13,"Gui","","Start the interactive web-based graphical debugger",3,N],[4,"Outcome","","",N,N],[13,"Unchanged","","",4,N],[13,"Changed","","",4,N],[0,"compile_time_assertions","","Injects the class 'Assert' into the mini java runtime,…",N,N],[3,"CompileTimeAssertions","optimization::compile_time_assertions","",N,N],[3,"Phase","","",N,N],[12,"opt_idx","","",5,N],[12,"opt_kind","","",5,N],[12,"is_already_applied","","",5,N],[17,"ENV_VAR_NAME","","Set this environment variable to enable these special…",N,N],[11,"new","","",6,[[],["self"]]],[11,"check_program","","",6,[[["self"],["firmprogram"],["phase"]]]],[11,"check_call","","Check if a call is a match for the given test",6,[[["self"],["str"],["t"],["call"],["phase"]]]],[11,"check_graph","","",6,[[["self"],["graph"],["phase"]]]],[8,"Interprocedural","optimization","An optimization that optimizes the whole program by…",N,N],[10,"optimize","","",7,[[["firmprogram"]],["outcome"]]],[8,"Local","","An optimization that only works on a single graph and…",N,N],[10,"optimize_function","","",8,[[["graph"]],["outcome"]]],[11,"new","","",9,[[],["outcomecollector"]]],[11,"push","","",9,[[["self"],["outcome"]]]],[11,"result","","",9,[[["self"]],["outcome"]]],[11,"run_all","","run the list of optimizations defined by the optimization…",2,[[["self"],["firmprogram"]]]],[11,"optimize","","",10,[[["firmprogram"]],["outcome"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"into_collection","","",10,[[["self"]],["smallvec"]]],[11,"mapped","","",10,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",10,[[["self"]],["result",["parseerr"]]]],[11,"optimize","","",11,[[["firmprogram"]],["outcome"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"into_collection","","",11,[[["self"]],["smallvec"]]],[11,"mapped","","",11,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",11,[[["self"]],["result",["parseerr"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into_collection","","",0,[[["self"]],["smallvec"]]],[11,"mapped","","",0,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",0,[[["self"]],["result",["parseerr"]]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into_collection","","",9,[[["self"]],["smallvec"]]],[11,"mapped","","",9,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",9,[[["self"]],["result",["parseerr"]]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into_collection","","",1,[[["self"]],["smallvec"]]],[11,"mapped","","",1,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",1,[[["self"]],["result",["parseerr"]]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into_collection","","",2,[[["self"]],["smallvec"]]],[11,"mapped","","",2,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",2,[[["self"]],["result",["parseerr"]]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into_collection","","",3,[[["self"]],["smallvec"]]],[11,"mapped","","",3,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",3,[[["self"]],["result",["parseerr"]]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into_collection","","",4,[[["self"]],["smallvec"]]],[11,"mapped","","",4,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",4,[[["self"]],["result",["parseerr"]]]],[11,"from","optimization::compile_time_assertions","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into_collection","","",6,[[["self"]],["smallvec"]]],[11,"mapped","","",6,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",6,[[["self"]],["result",["parseerr"]]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into_collection","","",5,[[["self"]],["smallvec"]]],[11,"mapped","","",5,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",5,[[["self"]],["result",["parseerr"]]]],[11,"optimize_function","optimization","",10,[[["graph"]],["outcome"]]],[11,"optimize_function","","",11,[[["graph"]],["outcome"]]],[11,"eq","","",3,[[["self"],["flag"]],["bool"]]],[11,"eq","","",4,[[["self"],["outcome"]],["bool"]]],[11,"clone","optimization::compile_time_assertions","",6,[[["self"]],["compiletimeassertions"]]],[11,"clone","","",5,[[["self"]],["phase"]]],[11,"clone","optimization","",1,[[["self"]],["kind"]]],[11,"clone","","",2,[[["self"]],["level"]]],[11,"clone","","",3,[[["self"]],["flag"]]],[11,"clone","","",0,[[["self"]],["optimization"]]],[11,"clone","","",4,[[["self"]],["outcome"]]],[11,"default","optimization::compile_time_assertions","",6,[[],["compiletimeassertions"]]],[11,"default","optimization","",2,[[],["level"]]],[11,"default","","",9,[[],["outcomecollector"]]],[11,"fmt","optimization::compile_time_assertions","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","optimization","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","optimization::compile_time_assertions","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","optimization","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"from_str","","",1,[[["str"]],["result",["kind"]]]],[11,"serialize","","",1,[[["self"],["__s"]],["result"]]],[11,"deserialize","","",1,[[["__d"]],["result"]]]],"paths":[[3,"Optimization"],[4,"Kind"],[4,"Level"],[4,"Flag"],[4,"Outcome"],[3,"Phase"],[3,"CompileTimeAssertions"],[8,"Interprocedural"],[8,"Local"],[3,"OutcomeCollector"],[3,"RemoveCriticalEdges"],[3,"CommonSubExpr"]]};
searchIndex["ordermap"]={"doc":"[`OrderMap`] is a hash table where the iteration order of…","items":[[3,"OrderMap","ordermap","A hash table where the iteration order of the key-value…",N,N],[3,"OccupiedEntry","","",N,N],[3,"VacantEntry","","",N,N],[3,"Keys","","",N,N],[3,"Values","","",N,N],[3,"ValuesMut","","",N,N],[3,"Iter","","",N,N],[3,"IterMut","","",N,N],[3,"IntoIter","","",N,N],[3,"Drain","","",N,N],[4,"Entry","","Entry for an existing key-value pair or a vacant location…",N,N],[13,"Occupied","","Existing slot with equivalent key.",0,N],[13,"Vacant","","Vacant slot (no equivalent key in the map).",0,N],[0,"set","","A hash set implemented using `OrderMap`",N,N],[3,"OrderSet","ordermap::set","A hash set where the iteration order of the values is…",N,N],[3,"IntoIter","","",N,N],[3,"Iter","","",N,N],[3,"Drain","","",N,N],[3,"Difference","","",N,N],[3,"Intersection","","",N,N],[3,"SymmetricDifference","","",N,N],[3,"Union","","",N,N],[11,"new","","Create a new set. (Does not allocate.)",1,[[],["self"]]],[11,"with_capacity","","Create a new set with capacity for `n` elements. (Does not…",1,[[["usize"]],["self"]]],[11,"with_capacity_and_hasher","","Create a new set with capacity for `n` elements. (Does not…",1,[[["usize"],["s"]],["self"]]],[11,"len","","Return the number of elements in the set.",1,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the set contains no elements.",1,[[["self"]],["bool"]]],[11,"with_hasher","","Create a new set with `hash_builder`",1,[[["s"]],["self"]]],[11,"hasher","","Return a reference to the set's `BuildHasher`.",1,[[["self"]],["s"]]],[11,"capacity","","Computes in O(1) time.",1,[[["self"]],["usize"]]],[11,"clear","","Remove all elements in the set, while preserving its…",1,[[["self"]]]],[11,"reserve","","FIXME Not implemented fully yet",1,[[["self"],["usize"]]]],[11,"insert","","Insert the value into the set.",1,[[["self"],["t"]],["bool"]]],[11,"iter","","Return an iterator over the values of the set, in their…",1,[[["self"]],["iter"]]],[11,"difference","","Return an iterator over the values that are in `self` but…",1,[[["self"],["orderset"]],["difference"]]],[11,"symmetric_difference","","Return an iterator over the values that are in `self` or…",1,[[["self"],["orderset"]],["symmetricdifference"]]],[11,"intersection","","Return an iterator over the values that are in both `self`…",1,[[["self"],["orderset"]],["intersection"]]],[11,"union","","Return an iterator over all values that are in `self` or…",1,[[["self"],["orderset"]],["union"]]],[11,"contains","","Return `true` if an equivalent to `value` exists in the set.",1,[[["self"],["q"]],["bool"]]],[11,"get","","Return a reference to the value stored in the set, if it…",1,[[["self"],["q"]],["option"]]],[11,"get_full","","Return item index and value",1,[[["self"],["q"]],["option"]]],[11,"replace","","Adds a value to the set, replacing the existing value, if…",1,[[["self"],["t"]],["option"]]],[11,"remove","","FIXME Same as .swap_remove",1,[[["self"],["q"]],["bool"]]],[11,"swap_remove","","Remove the value from the set, and return `true` if it was…",1,[[["self"],["q"]],["bool"]]],[11,"take","","FIXME Same as .swap_take",1,[[["self"],["q"]],["option"]]],[11,"swap_take","","Removes and returns the value in the set, if any, that is…",1,[[["self"],["q"]],["option"]]],[11,"swap_remove_full","","Remove the value from the set return it and the index it…",1,[[["self"],["q"]],["option"]]],[11,"pop","","Remove the last value",1,[[["self"]],["option"]]],[11,"retain","","Scan through each value in the set and keep those where…",1,[[["self"],["f"]]]],[11,"sort","","Sort the set’s values by their default ordering.",1,[[["self"]]]],[11,"sort_by","","Sort the set’s values in place using the comparison…",1,[[["self"],["f"]]]],[11,"sorted_by","","Sort the values of the set and return a by value iterator…",1,[[["self"],["f"]],["intoiter"]]],[11,"drain","","Clears the `OrderSet`, returning all values as a drain…",1,[[["self"],["rangefull"]],["drain"]]],[11,"get_index","","Get a value by index",1,[[["self"],["usize"]],["option"]]],[11,"swap_remove_index","","Remove the key-value pair by index",1,[[["self"],["usize"]],["option"]]],[11,"is_disjoint","","Returns `true` if `self` has no elements in common with…",1,[[["self"],["orderset"]],["bool"]]],[11,"is_subset","","Returns `true` if all elements of `self` are contained in…",1,[[["self"],["orderset"]],["bool"]]],[11,"is_superset","","Returns `true` if all elements of `other` are contained in…",1,[[["self"],["orderset"]],["bool"]]],[8,"Equivalent","ordermap","Key equivalence trait.",N,N],[10,"equivalent","","Compare self to `key` and return `true` if they are equal.",2,[[["self"],["k"]],["bool"]]],[8,"MutableKeys","","Opt-in mutable access to keys.",N,N],[16,"Key","","",3,N],[16,"Value","","",3,N],[10,"get_full_mut2","","Return item index, mutable reference to key and value",3,[[["self"],["q"]],["option"]]],[10,"retain2","","Scan through each key-value pair in the map and keep those…",3,[[["self"],["f"]]]],[10,"__private_marker","","This method is not useful in itself – it is there to…",3,[[["self"]],["privatemarker"]]],[11,"new","","Create a new map. (Does not allocate.)",4,[[],["self"]]],[11,"with_capacity","","Create a new map with capacity for `n` key-value pairs.…",4,[[["usize"]],["self"]]],[11,"with_capacity_and_hasher","","Create a new map with capacity for `n` key-value pairs.…",4,[[["usize"],["s"]],["self"]]],[11,"len","","Return the number of key-value pairs in the map.",4,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the map contains no elements.",4,[[["self"]],["bool"]]],[11,"with_hasher","","Create a new map with `hash_builder`",4,[[["s"]],["self"]]],[11,"hasher","","Return a reference to the map's `BuildHasher`.",4,[[["self"]],["s"]]],[11,"capacity","","Computes in O(1) time.",4,[[["self"]],["usize"]]],[11,"or_insert","","Computes in O(1) time (amortized average).",0,[[["self"],["v"]],["v"]]],[11,"or_insert_with","","Computes in O(1) time (amortized average).",0,[[["self"],["f"]],["v"]]],[11,"key","","",0,[[["self"]],["k"]]],[11,"index","","Return the index where the key-value pair exists or will…",0,[[["self"]],["usize"]]],[11,"key","","",5,[[["self"]],["k"]]],[11,"get","","",5,[[["self"]],["v"]]],[11,"get_mut","","",5,[[["self"]],["v"]]],[11,"index","","Return the index of the key-value pair",5,[[["self"]],["usize"]]],[11,"into_mut","","",5,[[["self"]],["v"]]],[11,"insert","","",5,[[["self"],["v"]],["v"]]],[11,"remove","","",5,[[["self"]],["v"]]],[11,"remove_entry","","Remove and return the key, value pair stored in the map…",5,N],[11,"key","","",6,[[["self"]],["k"]]],[11,"into_key","","",6,[[["self"]],["k"]]],[11,"index","","Return the index where the key-value pair will be inserted.",6,[[["self"]],["usize"]]],[11,"insert","","",6,[[["self"],["v"]],["v"]]],[11,"clear","","Remove all key-value pairs in the map, while preserving…",4,[[["self"]]]],[11,"reserve","","Reserve capacity for `additional` more key-value pairs.",4,[[["self"],["usize"]]]],[11,"insert","","Insert a key-value pair in the map.",4,[[["self"],["k"],["v"]],["option"]]],[11,"entry","","Get the given key’s corresponding entry in the map for…",4,[[["self"],["k"]],["entry"]]],[11,"iter","","Return an iterator over the key-value pairs of the map, in…",4,[[["self"]],["iter"]]],[11,"iter_mut","","Return an iterator over the key-value pairs of the map, in…",4,[[["self"]],["itermut"]]],[11,"keys","","Return an iterator over the keys of the map, in their order",4,[[["self"]],["keys"]]],[11,"values","","Return an iterator over the values of the map, in their…",4,[[["self"]],["values"]]],[11,"values_mut","","Return an iterator over mutable references to the the…",4,[[["self"]],["valuesmut"]]],[11,"contains_key","","Return `true` if and equivalent to `key` exists in the map.",4,[[["self"],["q"]],["bool"]]],[11,"get","","Return a reference to the value stored for `key`, if it is…",4,[[["self"],["q"]],["option"]]],[11,"get_full","","Return item index, key and value",4,[[["self"],["q"]],["option"]]],[11,"get_mut","","",4,[[["self"],["q"]],["option"]]],[11,"get_full_mut","","",4,[[["self"],["q"]],["option"]]],[11,"remove","","NOTE: Same as .swap_remove",4,[[["self"],["q"]],["option"]]],[11,"swap_remove","","Remove the key-value pair equivalent to `key` and return…",4,[[["self"],["q"]],["option"]]],[11,"swap_remove_full","","Remove the key-value pair equivalent to `key` and return…",4,[[["self"],["q"]],["option"]]],[11,"pop","","Remove the last key-value pair",4,[[["self"]],["option"]]],[11,"retain","","Scan through each key-value pair in the map and keep those…",4,[[["self"],["f"]]]],[11,"sort_keys","","Sort the map’s key-value pairs by the default ordering of…",4,[[["self"]]]],[11,"sort_by","","Sort the map’s key-value pairs in place using the…",4,[[["self"],["f"]]]],[11,"sorted_by","","Sort the key-value pairs of the map and return a by value…",4,[[["self"],["f"]],["intoiter"]]],[11,"drain","","Clears the `OrderMap`, returning all key-value pairs as a…",4,[[["self"],["rangefull"]],["drain"]]],[11,"get_index","","Get a key-value pair by index",4,[[["self"],["usize"]],["option"]]],[11,"get_index_mut","","Get a key-value pair by index",4,[[["self"],["usize"]],["option"]]],[11,"swap_remove_index","","Remove the key-value pair by index",4,[[["self"],["usize"]],["option"]]],[14,"ordermap","","Create an `OrderMap` from a list of key-value pairs",N,N],[14,"orderset","","Create an `OrderSet` from a list of values",N,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"into_iter","","",4,[[["self"]],["i"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into_iter","","",7,[[["self"]],["i"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into_iter","","",8,[[["self"]],["i"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into_iter","","",9,[[["self"]],["i"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into_iter","","",10,[[["self"]],["i"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into_iter","","",11,[[["self"]],["i"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into_iter","","",12,[[["self"]],["i"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into_iter","","",13,[[["self"]],["i"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","ordermap::set","",1,[[["t"]],["t"]]],[11,"into_iter","","",1,[[["self"]],["i"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into_iter","","",14,[[["self"]],["i"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into_iter","","",15,[[["self"]],["i"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into_iter","","",16,[[["self"]],["i"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into_iter","","",17,[[["self"]],["i"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into_iter","","",18,[[["self"]],["i"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into_iter","","",19,[[["self"]],["i"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into_iter","","",20,[[["self"]],["i"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"get_full_mut2","ordermap","",4,[[["self"],["q"]],["option"]]],[11,"retain2","","",4,[[["self"],["f"]]]],[11,"__private_marker","","",4,[[["self"]],["privatemarker"]]],[11,"next_back","ordermap::set","",14,[[["self"]],["option"]]],[11,"next_back","","",15,[[["self"]],["option"]]],[11,"next_back","","",16,[[["self"]],["option"]]],[11,"next_back","","",17,[[["self"]],["option"]]],[11,"next_back","","",18,[[["self"]],["option"]]],[11,"next_back","","",19,[[["self"]],["option"]]],[11,"next_back","","",20,[[["self"]],["option"]]],[11,"next_back","ordermap","",7,[[["self"]],["option"]]],[11,"next_back","","",8,[[["self"]],["option"]]],[11,"next_back","","",9,[[["self"]],["option"]]],[11,"next_back","","",10,[[["self"]],["option"]]],[11,"next_back","","",11,[[["self"]],["option"]]],[11,"next_back","","",12,[[["self"]],["option"]]],[11,"next_back","","",13,[[["self"]],["option"]]],[11,"eq","ordermap::set","",1,[[["self"],["orderset"]],["bool"]]],[11,"eq","ordermap","",4,[[["self"],["ordermap"]],["bool"]]],[11,"clone","ordermap::set","",1,[[["self"]],["orderset"]]],[11,"clone","ordermap","",4,[[["self"]],["ordermap"]]],[11,"into_iter","ordermap::set","",1,N],[11,"into_iter","ordermap","",4,N],[11,"extend","ordermap::set","",1,[[["self"],["i"]]]],[11,"extend","","",1,[[["self"],["i"]]]],[11,"extend","ordermap","Extend the map with all key-value pairs in the iterable.",4,[[["self"],["i"]]]],[11,"extend","","Extend the map with all key-value pairs in the iterable.",4,[[["self"],["i"]]]],[11,"len","ordermap::set","",14,[[["self"]],["usize"]]],[11,"len","","",15,[[["self"]],["usize"]]],[11,"len","ordermap","",7,[[["self"]],["usize"]]],[11,"len","","",8,[[["self"]],["usize"]]],[11,"len","","",9,[[["self"]],["usize"]]],[11,"len","","",10,[[["self"]],["usize"]]],[11,"len","","",11,[[["self"]],["usize"]]],[11,"len","","",12,[[["self"]],["usize"]]],[11,"next","ordermap::set","",14,[[["self"]],["option"]]],[11,"size_hint","","",14,N],[11,"count","","",14,[[["self"]],["usize"]]],[11,"nth","","",14,[[["self"],["usize"]],["option"]]],[11,"last","","",14,[[["self"]],["option"]]],[11,"collect","","",14,[[["self"]],["c"]]],[11,"next","","",15,[[["self"]],["option"]]],[11,"size_hint","","",15,N],[11,"count","","",15,[[["self"]],["usize"]]],[11,"nth","","",15,[[["self"],["usize"]],["option"]]],[11,"last","","",15,[[["self"]],["option"]]],[11,"collect","","",15,[[["self"]],["c"]]],[11,"next","","",16,[[["self"]],["option"]]],[11,"size_hint","","",16,N],[11,"count","","",16,[[["self"]],["usize"]]],[11,"nth","","",16,[[["self"],["usize"]],["option"]]],[11,"last","","",16,[[["self"]],["option"]]],[11,"collect","","",16,[[["self"]],["c"]]],[11,"next","","",17,[[["self"]],["option"]]],[11,"size_hint","","",17,N],[11,"next","","",18,[[["self"]],["option"]]],[11,"size_hint","","",18,N],[11,"next","","",19,[[["self"]],["option"]]],[11,"size_hint","","",19,N],[11,"fold","","",19,[[["self"],["b"],["f"]],["b"]]],[11,"next","","",20,[[["self"]],["option"]]],[11,"size_hint","","",20,N],[11,"fold","","",20,[[["self"],["b"],["f"]],["b"]]],[11,"next","ordermap","",7,[[["self"]],["option"]]],[11,"size_hint","","",7,N],[11,"count","","",7,[[["self"]],["usize"]]],[11,"nth","","",7,[[["self"],["usize"]],["option"]]],[11,"last","","",7,[[["self"]],["option"]]],[11,"collect","","",7,[[["self"]],["c"]]],[11,"next","","",8,[[["self"]],["option"]]],[11,"size_hint","","",8,N],[11,"count","","",8,[[["self"]],["usize"]]],[11,"nth","","",8,[[["self"],["usize"]],["option"]]],[11,"last","","",8,[[["self"]],["option"]]],[11,"collect","","",8,[[["self"]],["c"]]],[11,"next","","",9,[[["self"]],["option"]]],[11,"size_hint","","",9,N],[11,"count","","",9,[[["self"]],["usize"]]],[11,"nth","","",9,[[["self"],["usize"]],["option"]]],[11,"last","","",9,[[["self"]],["option"]]],[11,"collect","","",9,[[["self"]],["c"]]],[11,"next","","",10,[[["self"]],["option"]]],[11,"size_hint","","",10,N],[11,"count","","",10,[[["self"]],["usize"]]],[11,"nth","","",10,[[["self"],["usize"]],["option"]]],[11,"last","","",10,[[["self"]],["option"]]],[11,"collect","","",10,[[["self"]],["c"]]],[11,"next","","",11,[[["self"]],["option"]]],[11,"size_hint","","",11,N],[11,"count","","",11,[[["self"]],["usize"]]],[11,"nth","","",11,[[["self"],["usize"]],["option"]]],[11,"last","","",11,[[["self"]],["option"]]],[11,"collect","","",11,[[["self"]],["c"]]],[11,"next","","",12,[[["self"]],["option"]]],[11,"size_hint","","",12,N],[11,"count","","",12,[[["self"]],["usize"]]],[11,"nth","","",12,[[["self"],["usize"]],["option"]]],[11,"last","","",12,[[["self"]],["option"]]],[11,"collect","","",12,[[["self"]],["c"]]],[11,"next","","",13,[[["self"]],["option"]]],[11,"size_hint","","",13,N],[11,"count","","",13,[[["self"]],["usize"]]],[11,"nth","","",13,[[["self"],["usize"]],["option"]]],[11,"last","","",13,[[["self"]],["option"]]],[11,"collect","","",13,[[["self"]],["c"]]],[11,"default","ordermap::set","Return an empty `OrderSet`",1,[[],["self"]]],[11,"default","ordermap","Return an empty `OrderMap`",4,[[],["self"]]],[11,"fmt","ordermap::set","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","ordermap","",4,[[["self"],["formatter"]],["result"]]],[11,"index","","Panics if `key` is not present in the map.",4,[[["self"],["q"]],["v"]]],[11,"index_mut","","Panics if `key` is not present in the map.",4,[[["self"],["q"]],["v"]]],[11,"from_iter","ordermap::set","",1,[[["i"]],["self"]]],[11,"from_iter","ordermap","Create an `OrderMap` from the sequence of key-value pairs…",4,[[["i"]],["self"]]]],"paths":[[4,"Entry"],[3,"OrderSet"],[8,"Equivalent"],[8,"MutableKeys"],[3,"OrderMap"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"Keys"],[3,"Values"],[3,"ValuesMut"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[3,"IntoIter"],[3,"Iter"],[3,"Drain"],[3,"Difference"],[3,"Intersection"],[3,"SymmetricDifference"],[3,"Union"]]};
searchIndex["owning_ref"]={"doc":"An owning reference.","items":[[8,"StableAddress","owning_ref","An unsafe marker trait for types that deref to a stable…",N,N],[8,"CloneStableAddress","","An unsafe marker trait for types where clones deref to the…",N,N],[3,"OwningRef","","An owning reference.",N,N],[3,"OwningRefMut","","An mutable owning reference.",N,N],[3,"OwningHandle","","`OwningHandle` is a complement to `OwningRef`. Where…",N,N],[6,"BoxRef","","Typedef of a owning reference that uses a `Box` as the…",N,N],[6,"VecRef","","Typedef of a owning reference that uses a `Vec` as the…",N,N],[6,"StringRef","","Typedef of a owning reference that uses a `String` as the…",N,N],[6,"RcRef","","Typedef of a owning reference that uses a `Rc` as the owner.",N,N],[6,"ArcRef","","Typedef of a owning reference that uses a `Arc` as the…",N,N],[6,"RefRef","","Typedef of a owning reference that uses a `Ref` as the…",N,N],[6,"RefMutRef","","Typedef of a owning reference that uses a `RefMut` as the…",N,N],[6,"MutexGuardRef","","Typedef of a owning reference that uses a `MutexGuard` as…",N,N],[6,"RwLockReadGuardRef","","Typedef of a owning reference that uses a…",N,N],[6,"RwLockWriteGuardRef","","Typedef of a owning reference that uses a…",N,N],[6,"BoxRefMut","","Typedef of a mutable owning reference that uses a `Box` as…",N,N],[6,"VecRefMut","","Typedef of a mutable owning reference that uses a `Vec` as…",N,N],[6,"StringRefMut","","Typedef of a mutable owning reference that uses a `String`…",N,N],[6,"RefMutRefMut","","Typedef of a mutable owning reference that uses a `RefMut`…",N,N],[6,"MutexGuardRefMut","","Typedef of a mutable owning reference that uses a…",N,N],[6,"RwLockWriteGuardRefMut","","Typedef of a mutable owning reference that uses a…",N,N],[6,"ErasedBoxRef","","Typedef of a owning reference that uses an erased `Box` as…",N,N],[6,"ErasedRcRef","","Typedef of a owning reference that uses an erased `Rc` as…",N,N],[6,"ErasedArcRef","","Typedef of a owning reference that uses an erased `Arc` as…",N,N],[6,"ErasedBoxRefMut","","Typedef of a mutable owning reference that uses an erased…",N,N],[8,"Erased","","Helper trait for an erased concrete type an owner…",N,N],[8,"IntoErased","","Helper trait for erasing the concrete type of what an…",N,N],[16,"Erased","","Owner with the dereference type substituted to `Erased`.",0,N],[10,"into_erased","","Perform the type erasure.",0,N],[8,"ToHandle","","Trait to implement the conversion of owner to handle for…",N,N],[16,"Handle","","The type of handle to be encapsulated by the OwningHandle.",1,N],[10,"to_handle","","Given an appropriately-long-lived pointer to ourselves,…",1,N],[8,"ToHandleMut","","Trait to implement the conversion of owner to mutable…",N,N],[16,"HandleMut","","The type of handle to be encapsulated by the OwningHandle.",2,N],[10,"to_handle_mut","","Given an appropriately-long-lived pointer to ourselves,…",2,N],[11,"new","","Creates a new owning reference from a owner initialized to…",3,[[["o"]],["self"]]],[11,"new_assert_stable_address","","Like `new`, but doesn’t require `O` to implement the…",3,[[["o"]],["self"]]],[11,"map","","Converts `self` into a new owning reference that points at…",3,[[["self"],["f"]],["owningref"]]],[11,"try_map","","Tries to convert `self` into a new owning reference that…",3,[[["self"],["f"]],["result",["owningref"]]]],[11,"map_owner","","Converts `self` into a new owning reference with a…",3,[[["self"],["f"]],["owningref"]]],[11,"map_owner_box","","Converts `self` into a new owning reference where the…",3,[[["self"]],["owningref",["box"]]]],[11,"erase_owner","","Erases the concrete base type of the owner with a trait…",3,[[["self"]],["owningref"]]],[11,"as_owner","","A reference to the underlying owner.",3,[[["self"]],["o"]]],[11,"into_owner","","Discards the reference and retrieves the owner.",3,[[["self"]],["o"]]],[11,"new","","Creates a new owning reference from a owner initialized to…",4,[[["o"]],["self"]]],[11,"new_assert_stable_address","","Like `new`, but doesn’t require `O` to implement the…",4,[[["o"]],["self"]]],[11,"map","","Converts `self` into a new shared owning reference that…",4,[[["self"],["f"]],["owningref"]]],[11,"map_mut","","Converts `self` into a new mutable owning reference that…",4,[[["self"],["f"]],["owningrefmut"]]],[11,"try_map","","Tries to convert `self` into a new shared owning reference…",4,[[["self"],["f"]],["result",["owningref"]]]],[11,"try_map_mut","","Tries to convert `self` into a new mutable owning…",4,[[["self"],["f"]],["result",["owningrefmut"]]]],[11,"map_owner","","Converts `self` into a new owning reference with a…",4,[[["self"],["f"]],["owningrefmut"]]],[11,"map_owner_box","","Converts `self` into a new owning reference where the…",4,[[["self"]],["owningrefmut",["box"]]]],[11,"erase_owner","","Erases the concrete base type of the owner with a trait…",4,[[["self"]],["owningrefmut"]]],[11,"as_owner","","A reference to the underlying owner.",4,[[["self"]],["o"]]],[11,"as_owner_mut","","A mutable reference to the underlying owner.",4,[[["self"]],["o"]]],[11,"into_owner","","Discards the reference and retrieves the owner.",4,[[["self"]],["o"]]],[11,"new","","Create a new `OwningHandle` for a type that implements…",5,[[["o"]],["self"]]],[11,"new_mut","","Create a new mutable `OwningHandle` for a type that…",5,[[["o"]],["self"]]],[11,"new_with_fn","","Create a new OwningHandle. The provided callback will be…",5,[[["o"],["f"]],["self"]]],[11,"try_new","","Create a new OwningHandle. The provided callback will be…",5,[[["o"],["f"]],["result"]]],[11,"as_owner","","A getter for the underlying owner.",5,[[["self"]],["o"]]],[11,"into_owner","","Discards the dependent object and returns the owner.",5,[[["self"]],["o"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"cmp","","",3,[[["self"],["self"]],["ordering"]]],[11,"cmp","","",4,[[["self"],["self"]],["ordering"]]],[11,"eq","","",3,[[["self"],["self"]],["bool"]]],[11,"eq","","",4,[[["self"],["self"]],["bool"]]],[11,"from","","",3,[[["o"]],["self"]]],[11,"from","","",4,[[["o"]],["self"]]],[11,"from","","",3,[[["owningrefmut"]],["self"]]],[11,"clone","","",3,[[["self"]],["self"]]],[11,"partial_cmp","","",3,[[["self"],["self"]],["option",["ordering"]]]],[11,"partial_cmp","","",4,[[["self"],["self"]],["option",["ordering"]]]],[11,"as_mut","","",4,[[["self"]],["t"]]],[11,"as_ref","","",3,[[["self"]],["t"]]],[11,"as_ref","","",4,[[["self"]],["t"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result",["error"]]]],[11,"deref","","",5,N],[11,"deref","","",3,[[["self"]],["t"]]],[11,"deref","","",4,[[["self"]],["t"]]],[11,"deref_mut","","",5,N],[11,"deref_mut","","",4,[[["self"]],["t"]]],[11,"hash","","",3,[[["self"],["h"]]]],[11,"hash","","",4,[[["self"],["h"]]]],[11,"borrow","","",3,[[["self"]],["t"]]]],"paths":[[8,"IntoErased"],[8,"ToHandle"],[8,"ToHandleMut"],[3,"OwningRef"],[3,"OwningRefMut"],[3,"OwningHandle"],[8,"Erased"]]};
searchIndex["parking_lot"]={"doc":"This library provides implementations of `Mutex`,…","items":[[3,"Condvar","parking_lot","A Condition Variable",N,N],[3,"WaitTimeoutResult","","A type indicating whether a timed wait on a condition…",N,N],[3,"Once","","A synchronization primitive which can be used to run a…",N,N],[3,"RawMutex","","Raw mutex type backed by the parking lot.",N,N],[3,"RawRwLock","","Raw reader-writer lock type backed by the parking lot.",N,N],[3,"RawThreadId","","Implementation of the `GetThreadId` trait for…",N,N],[4,"OnceState","","Current state of a `Once`.",N,N],[13,"New","","A closure has not been executed yet",0,N],[13,"Poisoned","","A closure was executed but panicked.",0,N],[13,"InProgress","","A thread is currently executing a closure.",0,N],[13,"Done","","A closure has completed sucessfully.",0,N],[11,"timed_out","","Returns whether the wait was known to have timed out.",1,[[["self"]],["bool"]]],[11,"new","","Creates a new condition variable which is ready to be…",2,[[],["condvar"]]],[11,"notify_one","","Wakes up one blocked thread on this condvar.",2,[[["self"]]]],[11,"notify_all","","Wakes up all blocked threads on this condvar.",2,[[["self"]]]],[11,"wait","","Blocks the current thread until this condition variable…",2,[[["self"],["mutexguard"]]]],[11,"wait_until","","Waits on this condition variable for a notification,…",2,[[["self"],["mutexguard"],["instant"]],["waittimeoutresult"]]],[11,"wait_for","","Waits on this condition variable for a notification,…",2,[[["self"],["mutexguard"],["duration"]],["waittimeoutresult"]]],[11,"poisoned","","Returns whether the associated `Once` has been poisoned.",0,[[["self"]],["bool"]]],[11,"done","","Returns whether the associated `Once` has successfullly…",0,[[["self"]],["bool"]]],[11,"new","","Creates a new `Once` value.",3,[[],["once"]]],[11,"state","","Returns the current state of this `Once`.",3,[[["self"]],["oncestate"]]],[11,"call_once","","Performs an initialization routine once and only once. The…",3,[[["self"],["f"]]]],[11,"call_once_force","","Performs the same function as `call_once` except ignores…",3,[[["self"],["f"]]]],[6,"MappedMutexGuard","","An RAII mutex guard returned by `MutexGuard::map`, which…",N,N],[6,"Mutex","","A mutual exclusion primitive useful for protecting shared…",N,N],[6,"MutexGuard","","An RAII implementation of a \"scoped lock\" of a mutex. When…",N,N],[6,"MappedReentrantMutexGuard","","An RAII mutex guard returned by…",N,N],[6,"ReentrantMutex","","A mutex which can be recursively locked by a single thread.",N,N],[6,"ReentrantMutexGuard","","An RAII implementation of a \"scoped lock\" of a reentrant…",N,N],[6,"MappedRwLockReadGuard","","An RAII read lock guard returned by…",N,N],[6,"MappedRwLockWriteGuard","","An RAII write lock guard returned by…",N,N],[6,"RwLock","","A reader-writer lock",N,N],[6,"RwLockReadGuard","","RAII structure used to release the shared read access of a…",N,N],[6,"RwLockUpgradableReadGuard","","RAII structure used to release the upgradable read access…",N,N],[6,"RwLockWriteGuard","","RAII structure used to release the exclusive write access…",N,N],[17,"ONCE_INIT","","Initialization value for static `Once` values.",N,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"eq","","",1,[[["self"],["waittimeoutresult"]],["bool"]]],[11,"ne","","",1,[[["self"],["waittimeoutresult"]],["bool"]]],[11,"eq","","",0,[[["self"],["oncestate"]],["bool"]]],[11,"clone","","",1,[[["self"]],["waittimeoutresult"]]],[11,"clone","","",0,[[["self"]],["oncestate"]]],[11,"default","","",2,[[],["condvar"]]],[11,"default","","",3,[[],["once"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"lock","","",4,[[["self"]]]],[11,"try_lock","","",4,[[["self"]],["bool"]]],[11,"unlock","","",4,[[["self"]]]],[11,"unlock_fair","","",4,[[["self"]]]],[11,"bump","","",4,[[["self"]]]],[11,"try_lock_until","","",4,[[["self"],["instant"]],["bool"]]],[11,"try_lock_for","","",4,[[["self"],["duration"]],["bool"]]],[11,"nonzero_thread_id","","",6,[[["self"]],["usize"]]],[11,"lock_exclusive","","",5,[[["self"]]]],[11,"try_lock_exclusive","","",5,[[["self"]],["bool"]]],[11,"unlock_exclusive","","",5,[[["self"]]]],[11,"lock_shared","","",5,[[["self"]]]],[11,"try_lock_shared","","",5,[[["self"]],["bool"]]],[11,"unlock_shared","","",5,[[["self"]]]],[11,"unlock_shared_fair","","",5,[[["self"]]]],[11,"unlock_exclusive_fair","","",5,[[["self"]]]],[11,"bump_shared","","",5,[[["self"]]]],[11,"bump_exclusive","","",5,[[["self"]]]],[11,"downgrade","","",5,[[["self"]]]],[11,"try_lock_shared_for","","",5,N],[11,"try_lock_shared_until","","",5,N],[11,"try_lock_exclusive_for","","",5,[[["self"],["duration"]],["bool"]]],[11,"try_lock_exclusive_until","","",5,[[["self"],["instant"]],["bool"]]],[11,"lock_shared_recursive","","",5,[[["self"]]]],[11,"try_lock_shared_recursive","","",5,[[["self"]],["bool"]]],[11,"try_lock_shared_recursive_for","","",5,N],[11,"try_lock_shared_recursive_until","","",5,N],[11,"lock_upgradable","","",5,[[["self"]]]],[11,"try_lock_upgradable","","",5,[[["self"]],["bool"]]],[11,"unlock_upgradable","","",5,[[["self"]]]],[11,"upgrade","","",5,[[["self"]]]],[11,"try_upgrade","","",5,[[["self"]],["bool"]]],[11,"unlock_upgradable_fair","","",5,[[["self"]]]],[11,"bump_upgradable","","",5,[[["self"]]]],[11,"downgrade_upgradable","","",5,[[["self"]]]],[11,"downgrade_to_upgradable","","",5,[[["self"]]]],[11,"try_lock_upgradable_until","","",5,[[["self"],["instant"]],["bool"]]],[11,"try_lock_upgradable_for","","",5,[[["self"],["duration"]],["bool"]]],[11,"try_upgrade_until","","",5,[[["self"],["instant"]],["bool"]]],[11,"try_upgrade_for","","",5,[[["self"],["duration"]],["bool"]]]],"paths":[[4,"OnceState"],[3,"WaitTimeoutResult"],[3,"Condvar"],[3,"Once"],[3,"RawMutex"],[3,"RawRwLock"],[3,"RawThreadId"]]};
searchIndex["parking_lot_core"]={"doc":"This library exposes a low-level API for creating your own…","items":[[3,"ParkToken","parking_lot_core","A value associated with a parked thread which can be used…",N,N],[12,"0","","",0,N],[3,"UnparkResult","","Result of an unpark operation.",N,N],[12,"unparked_threads","","The number of threads that were unparked.",1,N],[12,"have_more_threads","","Whether there are any threads remaining in the queue. This…",1,N],[12,"be_fair","","This is set to true on average once every 0.5ms for any…",1,N],[3,"UnparkToken","","A value which is passed from an unparker to a parked thread.",N,N],[12,"0","","",2,N],[3,"SpinWait","","A counter used to perform exponential backoff in spin loops.",N,N],[4,"FilterOp","","Operation that `unpark_filter` should perform for each…",N,N],[13,"Unpark","","Unpark the thread and continue scanning the list of parked…",3,N],[13,"Skip","","Don't unpark the thread and continue scanning the list of…",3,N],[13,"Stop","","Don't unpark the thread and stop scanning the list of…",3,N],[4,"ParkResult","","Result of a park operation.",N,N],[13,"Unparked","","We were unparked by another thread with the given token.",4,N],[13,"Invalid","","The validation callback returned false.",4,N],[13,"TimedOut","","The timeout expired.",4,N],[4,"RequeueOp","","Operation that `unpark_requeue` should perform.",N,N],[13,"Abort","","Abort the operation without doing anything.",5,N],[13,"UnparkOneRequeueRest","","Unpark one thread and requeue the rest onto the target…",5,N],[13,"RequeueAll","","Requeue all threads onto the target queue.",5,N],[5,"park","","Parks the current thread in the queue associated with the…",N,[[["usize"],["v"],["b"],["t"],["parktoken"],["option",["instant"]]],["parkresult"]]],[5,"unpark_all","","Unparks all threads in the queue associated with the given…",N,[[["usize"],["unparktoken"]],["usize"]]],[5,"unpark_filter","","Unparks a number of threads from the front of the queue…",N,[[["usize"],["f"],["c"]],["unparkresult"]]],[5,"unpark_one","","Unparks one thread from the queue associated with the…",N,[[["usize"],["c"]],["unparkresult"]]],[5,"unpark_requeue","","Removes all threads from the queue associated with…",N,[[["usize"],["usize"],["v"],["c"]],["unparkresult"]]],[11,"is_unparked","","Returns true if we were unparked by another thread.",4,[[["self"]],["bool"]]],[11,"new","","Creates a new `SpinWait`.",6,[[],["spinwait"]]],[11,"reset","","Resets a `SpinWait` to its initial state.",6,[[["self"]]]],[11,"spin","","Spins until the sleep threshold has been reached.",6,[[["self"]],["bool"]]],[11,"spin_no_yield","","Spins without yielding the thread to the OS.",6,[[["self"]]]],[0,"deadlock","","[Experimental] Deadlock detection",N,N],[5,"acquire_resource","parking_lot_core::deadlock","Acquire a resource identified by key in the deadlock…",N,[[["usize"]]]],[5,"release_resource","","Release a resource identified by key in the deadlock…",N,[[["usize"]]]],[17,"DEFAULT_PARK_TOKEN","parking_lot_core","A default park token to use.",N,N],[17,"DEFAULT_UNPARK_TOKEN","","A default unpark token to use.",N,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"eq","","",4,[[["self"],["parkresult"]],["bool"]]],[11,"ne","","",4,[[["self"],["parkresult"]],["bool"]]],[11,"eq","","",1,[[["self"],["unparkresult"]],["bool"]]],[11,"ne","","",1,[[["self"],["unparkresult"]],["bool"]]],[11,"eq","","",5,[[["self"],["requeueop"]],["bool"]]],[11,"eq","","",3,[[["self"],["filterop"]],["bool"]]],[11,"eq","","",2,[[["self"],["unparktoken"]],["bool"]]],[11,"ne","","",2,[[["self"],["unparktoken"]],["bool"]]],[11,"eq","","",0,[[["self"],["parktoken"]],["bool"]]],[11,"ne","","",0,[[["self"],["parktoken"]],["bool"]]],[11,"clone","","",4,[[["self"]],["parkresult"]]],[11,"clone","","",1,[[["self"]],["unparkresult"]]],[11,"clone","","",5,[[["self"]],["requeueop"]]],[11,"clone","","",3,[[["self"]],["filterop"]]],[11,"clone","","",2,[[["self"]],["unparktoken"]]],[11,"clone","","",0,[[["self"]],["parktoken"]]],[11,"default","","",6,[[],["spinwait"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]]],"paths":[[3,"ParkToken"],[3,"UnparkResult"],[3,"UnparkToken"],[4,"FilterOp"],[4,"ParkResult"],[4,"RequeueOp"],[3,"SpinWait"]]};
searchIndex["parser"]={"doc":"","items":[[3,"Parser","parser","",N,N],[4,"SyntaxError","","",N,N],[13,"UnexpectedToken","","",0,N],[12,"actual","parser::SyntaxError","",0,N],[12,"expected","","",0,N],[13,"UnexpectedEOF","parser","",0,N],[0,"ast","","",N,N],[3,"Program","parser::ast","This is the top-level AST node. It stores all class…",N,N],[12,"classes","","",1,N],[12,"attrs","","",1,N],[3,"ClassDeclaration","","This AST node stores the Class declaration, which consists…",N,N],[12,"name","","",2,N],[12,"members","","",2,N],[12,"attrs","","",2,N],[3,"ClassMember","","This AST node describes a class member. Variants of class…",N,N],[12,"kind","","",3,N],[12,"name","","",3,N],[12,"attrs","","",3,N],[3,"Parameter","","This AST node represents a method parameter. A parameter…",N,N],[12,"ty","","",4,N],[12,"name","","",4,N],[3,"Type","","A `Type<'t>` is basically a `BasicType<'t>`. Optional it…",N,N],[12,"basic","","",5,N],[12,"array_depth","","Depth of the array type (number of `[]`) i.e. this means…",5,N],[3,"Block","","A `Block` in the AST is basically just a vector of…",N,N],[12,"statements","","",6,N],[4,"AST","","",N,N],[13,"Empty","","",7,N],[13,"Program","","",7,N],[4,"ASTDiscriminants","","Auto-generated discriminant enum variants",N,N],[13,"Empty","","",8,N],[13,"Program","","",8,N],[4,"ClassMemberKind","","A class member is either one of * `Field(type)`: a…",N,N],[13,"Field","","",9,N],[13,"Method","","",9,N],[13,"MainMethod","","",9,N],[4,"ClassMemberKindDiscriminants","","Auto-generated discriminant enum variants",N,N],[13,"Field","","",10,N],[13,"Method","","",10,N],[13,"MainMethod","","",10,N],[4,"BasicType","","A `BasicType<'t>` is either one of * `Int`: a 32-bit…",N,N],[13,"Int","","",11,N],[13,"Boolean","","",11,N],[13,"Void","","",11,N],[13,"Custom","","",11,N],[13,"MainParam","","",11,N],[4,"BasicTypeDiscriminants","","Auto-generated discriminant enum variants",N,N],[13,"Int","","",12,N],[13,"Boolean","","",12,N],[13,"Void","","",12,N],[13,"Custom","","",12,N],[13,"MainParam","","",12,N],[4,"Stmt","","A statement can have one of the kinds: * `Block`: A block…",N,N],[13,"Block","","",13,N],[13,"Empty","","",13,N],[13,"If","","",13,N],[13,"While","","",13,N],[13,"Expression","","",13,N],[13,"Return","","",13,N],[13,"LocalVariableDeclaration","","",13,N],[4,"StmtDiscriminants","","Auto-generated discriminant enum variants",N,N],[13,"Block","","",14,N],[13,"Empty","","",14,N],[13,"If","","",14,N],[13,"While","","",14,N],[13,"Expression","","",14,N],[13,"Return","","",14,N],[13,"LocalVariableDeclaration","","",14,N],[4,"Expr","","An expression is either one of * `Assignment`: an…",N,N],[13,"Binary","","",15,N],[13,"Unary","","",15,N],[13,"MethodInvocation","","",15,N],[13,"FieldAccess","","",15,N],[13,"ArrayAccess","","",15,N],[13,"Null","","",15,N],[13,"Boolean","","",15,N],[13,"Int","","",15,N],[13,"NegInt","","",15,N],[13,"Var","","",15,N],[13,"ThisMethodInvocation","","",15,N],[13,"This","","",15,N],[13,"NewObject","","",15,N],[13,"NewArray","","",15,N],[4,"ExprDiscriminants","","Auto-generated discriminant enum variants",N,N],[13,"Binary","","",16,N],[13,"Unary","","",16,N],[13,"MethodInvocation","","",16,N],[13,"FieldAccess","","",16,N],[13,"ArrayAccess","","",16,N],[13,"Null","","",16,N],[13,"Boolean","","",16,N],[13,"Int","","",16,N],[13,"NegInt","","",16,N],[13,"Var","","",16,N],[13,"ThisMethodInvocation","","",16,N],[13,"This","","",16,N],[13,"NewObject","","",16,N],[13,"NewArray","","",16,N],[4,"BinaryOp","","Binary operations like comparisons (`==`, `!=`, `<=`,…",N,N],[13,"Assign","","",17,N],[13,"Equals","","",17,N],[13,"NotEquals","","",17,N],[13,"LessThan","","",17,N],[13,"GreaterThan","","",17,N],[13,"LessEquals","","",17,N],[13,"GreaterEquals","","",17,N],[13,"LogicalOr","","",17,N],[13,"LogicalAnd","","",17,N],[13,"Add","","",17,N],[13,"Sub","","",17,N],[13,"Mul","","",17,N],[13,"Div","","",17,N],[13,"Mod","","",17,N],[4,"UnaryOp","","One of the unary operations `!` and `-`",N,N],[13,"Not","","",18,N],[13,"Neg","","",18,N],[4,"Attribute","","Attributes can be given to a program with `ignore…",N,N],[13,"LintLevel","","",19,N],[13,"Inline","","",19,N],[6,"ParameterList","","",N,N],[6,"ArgumentList","","",N,N],[11,"is_method","","",9,[[["self"]],["bool"]]],[11,"method_params","","",9,[[["self"]],["option",["spanned"]]]],[11,"method_body","","",9,[[["self"]],["option",["spanned"]]]],[0,"visitor","parser","The visitor module for the AST.",N,N],[4,"NodeKind","parser::visitor","",N,N],[13,"AST","","",20,N],[13,"Program","","",20,N],[13,"ClassDeclaration","","",20,N],[13,"ClassMember","","",20,N],[13,"Parameter","","",20,N],[13,"ParameterList","","",20,N],[13,"Type","","",20,N],[13,"BasicType","","",20,N],[13,"Block","","",20,N],[13,"Stmt","","",20,N],[13,"Expr","","",20,N],[13,"BinaryOp","","",20,N],[13,"UnaryOp","","",20,N],[4,"NodeKindDiscriminants","","Auto-generated discriminant enum variants",N,N],[13,"AST","","",21,N],[13,"Program","","",21,N],[13,"ClassDeclaration","","",21,N],[13,"ClassMember","","",21,N],[13,"Parameter","","",21,N],[13,"ParameterList","","",21,N],[13,"Type","","",21,N],[13,"BasicType","","",21,N],[13,"Block","","",21,N],[13,"Stmt","","",21,N],[13,"Expr","","",21,N],[13,"BinaryOp","","",21,N],[13,"UnaryOp","","",21,N],[8,"VisitResult","","",N,N],[10,"stop_visit","","",22,[[["self"]],["bool"]]],[11,"for_each_child","","Visit the children of `self`, invoking `cb` on each. If…",20,[[["self"],["fnmut"]],["option"]]],[11,"new","parser","",23,[[["i"]],["self"]]],[11,"parse","","",23,[[["self"]],["result",["ast","maybespanned"]]]],[14,"gen_nodekind_match","","",N,N],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"as_fail","","",0,[[["self"]],["fail"]]],[11,"from","parser::ast","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"to_string","","",10,[[["self"]],["string"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"to_string","","",12,[[["self"]],["string"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"to_string","","",14,[[["self"]],["string"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"to_string","","",16,[[["self"]],["string"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"from","parser::visitor","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"to_string","","",21,[[["self"]],["string"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"cmp","parser::ast","",10,[[["self"],["classmemberkinddiscriminants"]],["ordering"]]],[11,"eq","","",8,[[["self"],["astdiscriminants"]],["bool"]]],[11,"eq","","",7,[[["self"],["ast"]],["bool"]]],[11,"ne","","",7,[[["self"],["ast"]],["bool"]]],[11,"eq","","",1,[[["self"],["program"]],["bool"]]],[11,"ne","","",1,[[["self"],["program"]],["bool"]]],[11,"eq","","",2,[[["self"],["classdeclaration"]],["bool"]]],[11,"ne","","",2,[[["self"],["classdeclaration"]],["bool"]]],[11,"eq","","",3,[[["self"],["classmember"]],["bool"]]],[11,"ne","","",3,[[["self"],["classmember"]],["bool"]]],[11,"eq","","",10,[[["self"],["classmemberkinddiscriminants"]],["bool"]]],[11,"eq","","",9,[[["self"],["classmemberkind"]],["bool"]]],[11,"ne","","",9,[[["self"],["classmemberkind"]],["bool"]]],[11,"eq","","",4,[[["self"],["parameter"]],["bool"]]],[11,"ne","","",4,[[["self"],["parameter"]],["bool"]]],[11,"eq","","",5,[[["self"],["type"]],["bool"]]],[11,"ne","","",5,[[["self"],["type"]],["bool"]]],[11,"eq","","",12,[[["self"],["basictypediscriminants"]],["bool"]]],[11,"eq","","",11,[[["self"],["basictype"]],["bool"]]],[11,"ne","","",11,[[["self"],["basictype"]],["bool"]]],[11,"eq","","",6,[[["self"],["block"]],["bool"]]],[11,"ne","","",6,[[["self"],["block"]],["bool"]]],[11,"eq","","",14,[[["self"],["stmtdiscriminants"]],["bool"]]],[11,"eq","","",13,[[["self"],["stmt"]],["bool"]]],[11,"ne","","",13,[[["self"],["stmt"]],["bool"]]],[11,"eq","","",16,[[["self"],["exprdiscriminants"]],["bool"]]],[11,"eq","","",15,[[["self"],["expr"]],["bool"]]],[11,"ne","","",15,[[["self"],["expr"]],["bool"]]],[11,"eq","","",17,[[["self"],["binaryop"]],["bool"]]],[11,"eq","","",18,[[["self"],["unaryop"]],["bool"]]],[11,"eq","","",19,[[["self"],["attribute"]],["bool"]]],[11,"ne","","",19,[[["self"],["attribute"]],["bool"]]],[11,"eq","parser::visitor","",21,[[["self"],["nodekinddiscriminants"]],["bool"]]],[11,"from","parser::ast","",8,[[["ast"]],["astdiscriminants"]]],[11,"from","","",8,[[["ast"]],["astdiscriminants"]]],[11,"from","","",10,[[["classmemberkind"]],["classmemberkinddiscriminants"]]],[11,"from","","",10,[[["classmemberkind"]],["classmemberkinddiscriminants"]]],[11,"from","","",12,[[["basictype"]],["basictypediscriminants"]]],[11,"from","","",12,[[["basictype"]],["basictypediscriminants"]]],[11,"from","","",14,[[["stmt"]],["stmtdiscriminants"]]],[11,"from","","",14,[[["stmt"]],["stmtdiscriminants"]]],[11,"from","","",16,[[["expr"]],["exprdiscriminants"]]],[11,"from","","",16,[[["expr"]],["exprdiscriminants"]]],[11,"from","parser::visitor","",21,[[["nodekind"]],["nodekinddiscriminants"]]],[11,"from","","",21,[[["nodekind"]],["nodekinddiscriminants"]]],[11,"from","","",20,[[["ast"]],["self"]]],[11,"from","","",20,[[["spanned"]],["self"]]],[11,"from","","",20,[[["spanned"]],["self"]]],[11,"from","","",20,[[["spanned"]],["self"]]],[11,"from","","",20,[[["spanned"]],["self"]]],[11,"from","","",20,[[["spanned"]],["self"]]],[11,"from","","",20,[[["spanned"]],["self"]]],[11,"from","","",20,[[["spanned"]],["self"]]],[11,"from","","",20,[[["spanned"]],["self"]]],[11,"from","","",20,[[["spanned"]],["self"]]],[11,"from","","",20,[[["spanned"]],["self"]]],[11,"from","","",20,[[["binaryop"]],["self"]]],[11,"from","","",20,[[["unaryop"]],["self"]]],[11,"clone","parser::ast","",8,[[["self"]],["astdiscriminants"]]],[11,"clone","","",1,[[["self"]],["program"]]],[11,"clone","","",2,[[["self"]],["classdeclaration"]]],[11,"clone","","",3,[[["self"]],["classmember"]]],[11,"clone","","",10,[[["self"]],["classmemberkinddiscriminants"]]],[11,"clone","","",9,[[["self"]],["classmemberkind"]]],[11,"clone","","",4,[[["self"]],["parameter"]]],[11,"clone","","",5,[[["self"]],["type"]]],[11,"clone","","",12,[[["self"]],["basictypediscriminants"]]],[11,"clone","","",11,[[["self"]],["basictype"]]],[11,"clone","","",6,[[["self"]],["block"]]],[11,"clone","","",14,[[["self"]],["stmtdiscriminants"]]],[11,"clone","","",13,[[["self"]],["stmt"]]],[11,"clone","","",16,[[["self"]],["exprdiscriminants"]]],[11,"clone","","",15,[[["self"]],["expr"]]],[11,"clone","","",17,[[["self"]],["binaryop"]]],[11,"clone","","",18,[[["self"]],["unaryop"]]],[11,"clone","","",19,[[["self"]],["attribute"]]],[11,"clone","parser::visitor","",21,[[["self"]],["nodekinddiscriminants"]]],[11,"clone","parser","",0,[[["self"]],["syntaxerror"]]],[11,"partial_cmp","parser::ast","",10,[[["self"],["classmemberkinddiscriminants"]],["option",["ordering"]]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","parser::visitor","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","parser","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","parser::ast","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","parser::visitor","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","parser","",0,[[["self"],["formatter"]],["result"]]],[11,"hash","parser::ast","",10,N],[11,"cause","parser","",0,[[["self"]],["option",["fail"]]]],[11,"backtrace","","",0,[[["self"]],["option",["backtrace"]]]]],"paths":[[4,"SyntaxError"],[3,"Program"],[3,"ClassDeclaration"],[3,"ClassMember"],[3,"Parameter"],[3,"Type"],[3,"Block"],[4,"AST"],[4,"ASTDiscriminants"],[4,"ClassMemberKind"],[4,"ClassMemberKindDiscriminants"],[4,"BasicType"],[4,"BasicTypeDiscriminants"],[4,"Stmt"],[4,"StmtDiscriminants"],[4,"Expr"],[4,"ExprDiscriminants"],[4,"BinaryOp"],[4,"UnaryOp"],[4,"Attribute"],[4,"NodeKind"],[4,"NodeKindDiscriminants"],[8,"VisitResult"],[3,"Parser"]]};
searchIndex["pear"]={"doc":"","items":[[3,"Position","pear","",N,N],[12,"line","","",0,N],[12,"column","","",0,N],[12,"offset","","",0,N],[12,"snippet","","",0,N],[3,"Text","","",N,N],[3,"StringFile","","",N,N],[3,"ParseErr","","",N,N],[12,"parser","","",1,N],[12,"expected","","",1,N],[12,"context","","",1,N],[4,"Expected","","",N,N],[13,"Token","","",2,N],[13,"Slice","","",2,N],[13,"Custom","","",2,N],[13,"EOF","","",2,N],[11,"open","","",3,[[["str"]],["result",["stringfile"]]]],[11,"open_with_cap","","",3,[[["str"],["usize"]],["result",["stringfile"]]]],[11,"new","","",3,[[["file"],["usize"]],["stringfile"]]],[11,"available","","",3,[[["self"]],["usize"]]],[11,"map","","",2,[[["self"],["ft"],["fi"],["fs"]],["expected"]]],[11,"new","","",1,[[["str"],["t"]],["parseerr"]]],[11,"from_context","","",1,[[["i"],["str"],["t"]],["parseerr"]]],[0,"combinators","","",N,N],[5,"many","pear::combinators","",N,[[["i"],["f"]],["result"]]],[5,"surrounded","","",N,[[["i"],["p"],["f"]],["result"]]],[0,"parsers","pear","",N,N],[5,"error","pear::parsers","",N,[[["i"],["str"],["expected"]],["result"]]],[5,"eat","","",N,N],[5,"eat_if","","",N,[[["i"],["f"]],["result"]]],[5,"eat_slice","","",N,N],[5,"eat_any","","",N,[[["i"]],["result"]]],[5,"peek","","",N,N],[5,"peek_if","","",N,[[["i"],["f"]],["result"]]],[5,"peek_slice","","",N,N],[5,"peek_any","","",N,[[["i"]],["result"]]],[5,"skip_while","","",N,[[["i"],["f"]],["result"]]],[5,"take_some_while","","",N,[[["i"],["f"]],["result"]]],[5,"take_while","","",N,[[["i"],["f"]],["result"]]],[5,"take_some_while_until","","",N,N],[5,"take_n","","Takes at most `num` inputs.",N,[[["i"],["usize"]],["result"]]],[5,"take_n_while","","Takes at most `num` inputs as long as `condition` holds.",N,[[["i"],["usize"],["f"]],["result"]]],[5,"take_n_if","","Take exactly `num` inputs, ensuring `condition` holds.",N,[[["i"],["usize"],["f"]],["result"]]],[5,"delimited","","",N,N],[5,"enclosed","","",N,N],[5,"eof","","",N,[[["i"]],["result"]]],[5,"collection","","",N,N],[5,"series","","",N,N],[8,"Collection","","",N,N],[16,"Item","","",4,N],[10,"new","","",4,[[],["self"]]],[10,"add","","",4,N],[6,"Result","pear","",N,N],[8,"Length","","",N,N],[10,"len","","",5,[[["self"]],["usize"]]],[8,"Input","","",N,N],[16,"Token","","",6,N],[16,"Slice","","",6,N],[16,"InSlice","","",6,N],[16,"Many","","",6,N],[16,"Context","","",6,N],[10,"peek","","",6,[[["self"]],["option"]]],[10,"peek_slice","","",6,N],[10,"advance","","",6,[[["self"],["usize"]]]],[10,"is_empty","","",6,[[["self"]],["bool"]]],[10,"take_many","","",6,N],[10,"skip_many","","",6,[[["self"],["f"]],["usize"]]],[11,"context","","",6,[[["self"]],["option"]]],[8,"AsResult","","",N,N],[10,"as_result","","",7,[[["self"]],["result"]]],[14,"is_debug","","",N,N],[14,"pear_declare","","",N,N],[14,"parse","","",N,N],[14,"pear_error","","",N,N],[14,"pear_try","","FIXME: This is an issue with rustc here where if `$input`…",N,N],[14,"any","","",N,N],[14,"maybe","","",N,N],[14,"collect","","",N,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"peek","","",8,[[["self"]],["option"]]],[11,"peek_slice","","",8,N],[11,"skip_many","","",8,[[["self"],["f"]],["usize"]]],[11,"take_many","","",8,N],[11,"advance","","",8,[[["self"],["usize"]]]],[11,"is_empty","","",8,[[["self"]],["bool"]]],[11,"context","","",8,[[["self"]],["option",["position"]]]],[11,"peek","","",3,[[["self"]],["option"]]],[11,"take_many","","",3,N],[11,"skip_many","","",3,[[["self"],["f"]],["usize"]]],[11,"peek_slice","","",3,N],[11,"advance","","",3,[[["self"],["usize"]]]],[11,"is_empty","","",3,[[["self"]],["bool"]]],[11,"as_result","","",9,[[["self"]],["result"]]],[11,"eq","","",0,[[["self"],["position"]],["bool"]]],[11,"ne","","",0,[[["self"],["position"]],["bool"]]],[11,"eq","","",2,[[["self"],["expected"]],["bool"]]],[11,"ne","","",2,[[["self"],["expected"]],["bool"]]],[11,"eq","","",1,[[["self"],["parseerr"]],["bool"]]],[11,"ne","","",1,[[["self"],["parseerr"]],["bool"]]],[11,"from","","",8,[[["str"]],["text"]]],[11,"clone","","",0,[[["self"]],["position"]]],[11,"clone","","",2,[[["self"]],["expected"]]],[11,"clone","","",1,[[["self"]],["parseerr"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"hash","","",0,N],[11,"context","","",6,[[["self"]],["option"]]]],"paths":[[3,"Position"],[3,"ParseErr"],[4,"Expected"],[3,"StringFile"],[8,"Collection"],[8,"Length"],[8,"Input"],[8,"AsResult"],[3,"Text"],[6,"Result"]]};
searchIndex["pear_codegen"]={"doc":"","items":[[23,"parser","pear_codegen","",N,N],[14,"switch","","",N,N]],"paths":[]};
searchIndex["percent_encoding"]={"doc":"URLs use special chacters to indicate the parts of the…","items":[[3,"SIMPLE_ENCODE_SET","percent_encoding","This encode set is used for the path of cannot-be-a-base…",N,N],[3,"QUERY_ENCODE_SET","","This encode set is used in the URL parser for query strings.",N,N],[3,"DEFAULT_ENCODE_SET","","This encode set is used for path components.",N,N],[3,"PATH_SEGMENT_ENCODE_SET","","This encode set is used for on '/'-separated path segment",N,N],[3,"USERINFO_ENCODE_SET","","This encode set is used for username and password.",N,N],[3,"PercentEncode","","The return type of `percent_encode()` and…",N,N],[3,"PercentDecode","","The return type of `percent_decode()`.",N,N],[5,"percent_encode_byte","","Return the percent-encoding of the given bytes.",N,[[["u8"]],["str"]]],[5,"percent_encode","","Percent-encode the given bytes with the given encode set.",N,N],[5,"utf8_percent_encode","","Percent-encode the UTF-8 encoding of the given string.",N,[[["str"],["e"]],["percentencode"]]],[5,"percent_decode","","Percent-decode the given bytes.",N,N],[8,"EncodeSet","","Represents a set of characters / bytes that should be…",N,N],[10,"contains","","Called with UTF-8 bytes rather than code points. Should…",0,[[["self"],["u8"]],["bool"]]],[11,"if_any","","If the percent-decoding is different from the input,…",1,[[["self"]],["option",["vec"]]]],[11,"decode_utf8","","Decode the result of percent-decoding as UTF-8.",1,[[["self"]],["result",["cow","utf8error"]]]],[11,"decode_utf8_lossy","","Decode the result of percent-decoding as UTF-8, lossily.",1,[[["self"]],["cow",["str"]]]],[14,"define_encode_set","","Define a new struct that implements the `EncodeSet` trait,…",N,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into_iter","","",7,[[["self"]],["i"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into_iter","","",1,[[["self"]],["i"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"contains","","",2,[[["self"],["u8"]],["bool"]]],[11,"contains","","",3,[[["self"],["u8"]],["bool"]]],[11,"contains","","",4,[[["self"],["u8"]],["bool"]]],[11,"contains","","",5,[[["self"],["u8"]],["bool"]]],[11,"contains","","",6,[[["self"],["u8"]],["bool"]]],[11,"clone","","",2,[[["self"]],["simple_encode_set"]]],[11,"clone","","",3,[[["self"]],["query_encode_set"]]],[11,"clone","","",4,[[["self"]],["default_encode_set"]]],[11,"clone","","",5,[[["self"]],["path_segment_encode_set"]]],[11,"clone","","",6,[[["self"]],["userinfo_encode_set"]]],[11,"clone","","",7,[[["self"]],["percentencode"]]],[11,"clone","","",1,[[["self"]],["percentdecode"]]],[11,"next","","",7,[[["self"]],["option",["str"]]]],[11,"size_hint","","",7,N],[11,"next","","",1,[[["self"]],["option",["u8"]]]],[11,"size_hint","","",1,N],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]]],"paths":[[8,"EncodeSet"],[3,"PercentDecode"],[3,"SIMPLE_ENCODE_SET"],[3,"QUERY_ENCODE_SET"],[3,"DEFAULT_ENCODE_SET"],[3,"PATH_SEGMENT_ENCODE_SET"],[3,"USERINFO_ENCODE_SET"],[3,"PercentEncode"]]};
searchIndex["petgraph"]={"doc":"petgraph is a graph data structure library.","items":[[4,"Direction","petgraph","Edge direction.",N,N],[13,"Outgoing","","An `Outgoing` edge is an outward edge from the current node.",0,N],[13,"Incoming","","An `Incoming` edge is an inbound edge to the current node.",0,N],[4,"Directed","","Marker type for a directed graph.",N,N],[4,"Undirected","","Marker type for an undirected graph.",N,N],[0,"visit","","Graph traits and graph traversals.",N,N],[3,"NodeFiltered","petgraph::visit","A node-filtering graph adaptor.",N,N],[12,"0","","",1,N],[12,"1","","",1,N],[3,"NodeFilteredNeighbors","","A filtered neighbors iterator.",N,N],[3,"NodeFilteredNodes","","A filtered node references iterator.",N,N],[3,"NodeFilteredEdgeReferences","","A filtered edges iterator.",N,N],[3,"NodeFilteredEdges","","A filtered edges iterator.",N,N],[3,"EdgeFiltered","","An edge-filtering graph adaptor.",N,N],[12,"0","","",2,N],[12,"1","","",2,N],[3,"EdgeFilteredNeighbors","","A filtered neighbors iterator.",N,N],[3,"EdgeFilteredEdges","","A filtered edges iterator.",N,N],[3,"Reversed","","An edge-reversing graph adaptor.",N,N],[12,"0","","",3,N],[3,"ReversedEdgeReference","","A reversed edge reference",N,N],[3,"ReversedEdgeReferences","","A reversed edge references iterator.",N,N],[3,"Time","","Strictly monotonically increasing event time for a depth…",N,N],[12,"0","","",4,N],[3,"Dfs","","Visit nodes of a graph in a depth-first-search (DFS)…",N,N],[12,"stack","","The stack of nodes to visit",5,N],[12,"discovered","","The map of discovered nodes",5,N],[3,"DfsPostOrder","","Visit nodes in a depth-first-search (DFS) emitting nodes…",N,N],[12,"stack","","The stack of nodes to visit",6,N],[12,"discovered","","The map of discovered nodes",6,N],[12,"finished","","The map of finished nodes",6,N],[3,"Bfs","","A breadth first search (BFS) of a graph.",N,N],[12,"stack","","The queue of nodes to visit",7,N],[12,"discovered","","The map of discovered nodes",7,N],[3,"Topo","","A topological order traversal for a graph.",N,N],[3,"WalkerIter","","A walker and its context wrapped into an iterator.",N,N],[4,"DfsEvent","","A depth first search (DFS) visitor event.",N,N],[13,"Discover","","",8,N],[13,"TreeEdge","","An edge of the tree formed by the traversal.",8,N],[13,"BackEdge","","An edge to an already visited node.",8,N],[13,"CrossForwardEdge","","A cross or forward edge.",8,N],[13,"Finish","","",8,N],[4,"Control","","Control flow for callbacks.",N,N],[13,"Continue","","",9,N],[13,"Break","","",9,N],[5,"depth_first_search","","A recursive depth first search.",N,[[["g"],["i"],["f"]],["c"]]],[11,"breaking","","",9,[[],["control"]]],[11,"break_value","","Get the value in `Control::Break(_)`, if present.",9,[[["self"]],["option"]]],[11,"new","","Create a new Dfs, using the graph's visitor map, and put…",5,[[["g"],["n"]],["self"]]],[11,"from_parts","","Create a `Dfs` from a vector and a visit map",5,[[["vec"],["vm"]],["self"]]],[11,"reset","","Clear the visit state",5,[[["self"],["g"]]]],[11,"empty","","Create a new Dfs using the graph's visitor map, and no…",5,[[["g"]],["self"]]],[11,"move_to","","Keep the discovered map, but clear the visit stack and…",5,[[["self"],["n"]]]],[11,"next","","Return the next node in the dfs, or None if the traversal…",5,[[["self"],["g"]],["option"]]],[11,"new","","Create a new `DfsPostOrder` using the graph's visitor map,…",6,[[["g"],["n"]],["self"]]],[11,"empty","","Create a new `DfsPostOrder` using the graph's visitor map,…",6,[[["g"]],["self"]]],[11,"reset","","Clear the visit state",6,[[["self"],["g"]]]],[11,"move_to","","Keep the discovered and finished map, but clear the visit…",6,[[["self"],["n"]]]],[11,"next","","Return the next node in the traversal, or `None` if the…",6,[[["self"],["g"]],["option"]]],[11,"new","","Create a new Bfs, using the graph's visitor map, and put…",7,[[["g"],["n"]],["self"]]],[11,"next","","Return the next node in the bfs, or None if the traversal…",7,[[["self"],["g"]],["option"]]],[11,"new","","Create a new `Topo`, using the graph's visitor map, and…",10,[[["g"]],["self"]]],[11,"reset","","Clear visited state, and put all initial nodes in the to…",10,[[["self"],["g"]]]],[11,"next","","Return the next node in the current topological order…",10,[[["self"],["g"]],["option"]]],[11,"context","","",11,[[["self"]],["c"]]],[11,"inner_ref","","",11,[[["self"]],["w"]]],[11,"inner_mut","","",11,[[["self"]],["w"]]],[11,"from_fn","","Create an `NodeFiltered` adaptor from the closure `filter`.",1,[[["g"],["f"]],["self"]]],[11,"from_fn","","Create an `EdgeFiltered` adaptor from the closure `filter`.",2,[[["g"],["f"]],["self"]]],[8,"FilterNode","","A graph filter for nodes.",N,N],[10,"include_node","","Return true to have the node be part of the graph",12,[[["self"],["n"]],["bool"]]],[8,"FilterEdge","","A graph filter for edges",N,N],[10,"include_edge","","Return true to have the edge be part of the graph",13,[[["self"],["edge"]],["bool"]]],[8,"ControlFlow","","Control flow for callbacks.",N,N],[10,"continuing","","",14,[[],["self"]]],[10,"should_break","","",14,[[["self"]],["bool"]]],[8,"Walker","","A walker is a traversal state, but where part of the…",N,N],[16,"Item","","",15,N],[10,"walk_next","","Advance to the next item",15,[[["self"],["context"]],["option"]]],[11,"iter","","Create an iterator out of the walker and given `context`.",15,[[["self"],["context"]],["walkeriter"]]],[8,"GraphBase","","Base graph trait: defines the associated node identifier…",N,N],[16,"EdgeId","","edge identifier",16,N],[16,"NodeId","","node identifier",16,N],[8,"GraphRef","","A copyable reference to a graph.",N,N],[8,"IntoNeighbors","","Access to the neighbors of each node",N,N],[16,"Neighbors","","",17,N],[10,"neighbors","","Return an iterator of the neighbors of node `a`.",17,N],[8,"IntoNeighborsDirected","","Access to the neighbors of each node, through incoming or…",N,N],[16,"NeighborsDirected","","",18,N],[10,"neighbors_directed","","",18,N],[8,"IntoEdges","","Access to the edges of each node.",N,N],[16,"Edges","","",19,N],[10,"edges","","",19,N],[8,"IntoEdgesDirected","","Access to all edges of each node, in the specified…",N,N],[16,"EdgesDirected","","",20,N],[10,"edges_directed","","",20,N],[8,"IntoNodeIdentifiers","","Access to the sequence of the graph’s `NodeId`s.",N,N],[16,"NodeIdentifiers","","",21,N],[10,"node_identifiers","","",21,N],[8,"Data","","Define associated data for nodes and edges",N,N],[16,"NodeWeight","","",22,N],[16,"EdgeWeight","","",22,N],[8,"EdgeRef","","An edge reference.",N,N],[16,"NodeId","","",23,N],[16,"EdgeId","","",23,N],[16,"Weight","","",23,N],[10,"source","","The source node of the edge.",23,N],[10,"target","","The target node of the edge.",23,N],[10,"weight","","A reference to the weight of the edge.",23,N],[10,"id","","The edge’s identifier.",23,N],[8,"NodeRef","","A node reference.",N,N],[16,"NodeId","","",24,N],[16,"Weight","","",24,N],[10,"id","","",24,N],[10,"weight","","",24,N],[8,"IntoNodeReferences","","Access to the sequence of the graph’s nodes",N,N],[16,"NodeRef","","",25,N],[16,"NodeReferences","","",25,N],[10,"node_references","","",25,N],[8,"IntoEdgeReferences","","Access to the sequence of the graph’s edges",N,N],[16,"EdgeRef","","",26,N],[16,"EdgeReferences","","",26,N],[10,"edge_references","","",26,N],[8,"GraphProp","","Edge kind property (directed or undirected edges)",N,N],[16,"EdgeType","","The kind edges in the graph.",27,N],[11,"is_directed","","",27,[[["self"]],["bool"]]],[8,"NodeIndexable","","The graph’s `NodeId`s map to indices",N,N],[10,"node_bound","","Return an upper bound of the node indices in the graph…",28,[[["self"]],["usize"]]],[10,"to_index","","Convert `a` to an integer index.",28,N],[10,"from_index","","Convert `i` to a node index",28,N],[8,"NodeCount","","A graph with a known node count.",N,N],[10,"node_count","","",29,[[["self"]],["usize"]]],[8,"NodeCompactIndexable","","The graph’s `NodeId`s map to indices, in a range without…",N,N],[8,"VisitMap","","A mapping for storing the visited status for NodeId `N`.",N,N],[10,"visit","","Mark `a` as visited.",30,[[["self"],["n"]],["bool"]]],[10,"is_visited","","Return whether `a` has been visited before.",30,[[["self"],["n"]],["bool"]]],[8,"Visitable","","A graph that can create a map that tracks the visited…",N,N],[16,"Map","","The associated map type",31,N],[10,"visit_map","","Create a new visitor map",31,N],[10,"reset_map","","Reset the visitor map (and resize to new size of graph if…",31,N],[8,"GetAdjacencyMatrix","","Create or access the adjacency matrix of a graph.",N,N],[16,"AdjMatrix","","The associated adjacency matrix type",32,N],[10,"adjacency_matrix","","Create the adjacency matrix",32,N],[10,"is_adjacent","","Return true if there is an edge from `a` to `b`, false…",32,N],[0,"data","petgraph","Graph traits for associated data and graph construction.",N,N],[3,"FilterElements","petgraph::data","An iterator that filters graph elements.",N,N],[4,"Element","","A graph element.",N,N],[13,"Node","","A graph node.",33,N],[12,"weight","petgraph::data::Element","",33,N],[13,"Edge","petgraph::data","A graph edge.",33,N],[12,"source","petgraph::data::Element","",33,N],[12,"target","","",33,N],[12,"weight","","",33,N],[8,"DataMap","petgraph::data","Access node and edge weights (associated data).",N,N],[10,"node_weight","","",34,N],[10,"edge_weight","","",34,N],[8,"DataMapMut","","Access node and edge weights mutably.",N,N],[10,"node_weight_mut","","",35,N],[10,"edge_weight_mut","","",35,N],[8,"Build","","A graph that can be extended with further nodes and edges",N,N],[10,"add_node","","",36,N],[11,"add_edge","","Add a new edge. If parallel edges (duplicate) are not…",36,N],[10,"update_edge","","Add or update the edge from `a` to `b`. Return the id of…",36,N],[8,"Create","","A graph that can be created",N,N],[10,"with_capacity","","",37,[[["usize"],["usize"]],["self"]]],[8,"FromElements","","Create a graph from an iterator of elements.",N,N],[11,"from_elements","","",38,[[["i"]],["self"]]],[8,"ElementIterator","","Iterator adaptors for iterators of `Element`.",N,N],[11,"filter_elements","","Create an iterator adaptor that filters graph elements.",39,[[["self"],["f"]],["filterelements"]]],[0,"algo","petgraph","Graph algorithms.",N,N],[3,"DfsSpace","petgraph::algo","Workspace for a graph traversal.",N,N],[3,"MinSpanningTree","","An iterator producing a minimum spanning forest of a graph.",N,N],[3,"Cycle","","An algorithm error: a cycle was found in the graph.",N,N],[3,"NegativeCycle","","An algorithm error: a cycle of negative weights was found…",N,N],[5,"is_isomorphic","","[Graph] Return `true` if the graphs `g0` and `g1` are…",N,[[["graph"],["graph"]],["bool"]]],[5,"is_isomorphic_matching","","[Graph] Return `true` if the graphs `g0` and `g1` are…",N,[[["graph"],["graph"],["f"],["g"]],["bool"]]],[5,"dijkstra","","[Generic] Dijkstra's shortest path algorithm.",N,N],[5,"astar","","[Generic] A* shortest path algorithm.",N,N],[5,"connected_components","","[Generic] Return the number of connected components of the…",N,[[["g"]],["usize"]]],[5,"is_cyclic_undirected","","[Generic] Return `true` if the input graph contains a cycle.",N,[[["g"]],["bool"]]],[5,"toposort","","[Generic] Perform a topological sort of a directed graph.",N,[[["g"],["option",["dfsspace"]]],["result",["vec","cycle"]]]],[5,"is_cyclic_directed","","[Generic] Return `true` if the input directed graph…",N,[[["g"]],["bool"]]],[5,"has_path_connecting","","[Generic] Check if there exists a path starting at `from`…",N,N],[5,"scc","","Renamed to `kosaraju_scc`.",N,[[["g"]],["vec",["vec"]]]],[5,"kosaraju_scc","","[Generic] Compute the strongly connected components using…",N,[[["g"]],["vec",["vec"]]]],[5,"tarjan_scc","","[Generic] Compute the strongly connected components using…",N,[[["g"]],["vec",["vec"]]]],[5,"condensation","","[Graph] Condense every strongly connected component into a…",N,[[["graph"],["bool"]],["graph",["vec"]]]],[5,"min_spanning_tree","","[Generic] Compute a minimum spanning tree of a graph.",N,[[["g"]],["minspanningtree"]]],[5,"bellman_ford","","[Generic] Compute shortest paths from node `source` to all…",N,N],[0,"dominators","","Compute dominators of a control-flow graph.",N,N],[3,"Dominators","petgraph::algo::dominators","The dominance relation for some graph and root.",N,N],[3,"DominatorsIter","","Iterator for a node's dominators.",N,N],[5,"simple_fast","","This is an implementation of the engineered [\"Simple, Fast…",N,N],[11,"root","","Get the root node used to construct these dominance…",40,[[["self"]],["n"]]],[11,"immediate_dominator","","Get the immediate dominator of the given node.",40,[[["self"],["n"]],["option"]]],[11,"strict_dominators","","Iterate over the given node's that strict dominators.",40,[[["self"],["n"]],["option",["dominatorsiter"]]]],[11,"dominators","","Iterate over all of the given node's dominators (including…",40,[[["self"],["n"]],["option",["dominatorsiter"]]]],[8,"Measure","petgraph::algo","Associated data that can be used for measures (such as…",N,N],[8,"FloatMeasure","","A floating-point measure.",N,N],[10,"zero","","",41,[[],["self"]]],[10,"infinite","","",41,[[],["self"]]],[11,"new","","",42,[[["g"]],["self"]]],[11,"node_id","","Return a node id that participates in the cycle",43,[[["self"]],["n"]]],[0,"graphmap","petgraph","`GraphMap<N, E, Ty>` is a graph datastructure where node…",N,N],[3,"GraphMap","petgraph::graphmap","`GraphMap<N, E, Ty>` is a graph datastructure using an…",N,N],[3,"Nodes","","",N,N],[3,"Neighbors","","",N,N],[3,"NeighborsDirected","","",N,N],[3,"Edges","","",N,N],[3,"AllEdges","","",N,N],[3,"AllEdgesMut","","",N,N],[3,"Ptr","","A reference that is hashed and compared by its pointer…",N,N],[12,"0","","",44,N],[3,"NodeIdentifiers","","",N,N],[3,"NodeReferences","","",N,N],[6,"UnGraphMap","","A `GraphMap` with undirected edges.",N,N],[6,"DiGraphMap","","A `GraphMap` with directed edges.",N,N],[8,"NodeTrait","","A trait group for `GraphMap`'s node identifier.",N,N],[11,"new","","Create a new `GraphMap`",45,[[],["self"]]],[11,"with_capacity","","Create a new `GraphMap` with estimated capacity.",45,[[["usize"],["usize"]],["self"]]],[11,"capacity","","Return the current node and edge capacity of the graph.",45,N],[11,"is_directed","","Whether the graph has directed edges.",45,[[["self"]],["bool"]]],[11,"from_edges","","Create a new `GraphMap` from an iterable of edges.",45,[[["i"]],["self"]]],[11,"node_count","","Return the number of nodes in the graph.",45,[[["self"]],["usize"]]],[11,"edge_count","","Return the number of edges in the graph.",45,[[["self"]],["usize"]]],[11,"clear","","Remove all nodes and edges",45,[[["self"]]]],[11,"add_node","","Add node `n` to the graph.",45,[[["self"],["n"]],["n"]]],[11,"remove_node","","Return `true` if node `n` was removed.",45,[[["self"],["n"]],["bool"]]],[11,"contains_node","","Return `true` if the node is contained in the graph.",45,[[["self"],["n"]],["bool"]]],[11,"add_edge","","Add an edge connecting `a` and `b` to the graph, with…",45,[[["self"],["n"],["n"],["e"]],["option"]]],[11,"remove_edge","","Remove edge from `a` to `b` from the graph and return the…",45,[[["self"],["n"],["n"]],["option"]]],[11,"contains_edge","","Return `true` if the edge connecting `a` with `b` is…",45,[[["self"],["n"],["n"]],["bool"]]],[11,"nodes","","Return an iterator over the nodes of the graph.",45,[[["self"]],["nodes"]]],[11,"neighbors","","Return an iterator of all nodes with an edge starting from…",45,[[["self"],["n"]],["neighbors"]]],[11,"neighbors_directed","","Return an iterator of all neighbors that have an edge…",45,[[["self"],["n"],["direction"]],["neighborsdirected"]]],[11,"edges","","Return an iterator of target nodes with an edge starting…",45,[[["self"],["n"]],["edges"]]],[11,"edge_weight","","Return a reference to the edge weight connecting `a` with…",45,[[["self"],["n"],["n"]],["option"]]],[11,"edge_weight_mut","","Return a mutable reference to the edge weight connecting…",45,[[["self"],["n"],["n"]],["option"]]],[11,"all_edges","","Return an iterator over all edges of the graph with their…",45,[[["self"]],["alledges"]]],[11,"all_edges_mut","","Return an iterator over all edges of the graph in…",45,[[["self"]],["alledgesmut"]]],[11,"into_graph","","Return a `Graph` that corresponds to this `GraphMap`.",45,[[["self"]],["graph"]]],[0,"dot","petgraph","Simple graphviz dot file format output.",N,N],[3,"Dot","petgraph::dot","`Dot` implements output to graphviz .dot format for a graph.",N,N],[4,"Config","","`Dot` configuration.",N,N],[13,"NodeIndexLabel","","Use indices for node labels.",46,N],[13,"EdgeIndexLabel","","Use indices for edge labels.",46,N],[13,"EdgeNoLabel","","Use no edge labels.",46,N],[11,"new","","Create a `Dot` formatting wrapper with default…",47,[[["g"]],["self"]]],[11,"with_config","","Create a `Dot` formatting wrapper with custom configuration.",47,N],[0,"unionfind","petgraph","`UnionFind<K>` is a disjoint-set data structure.",N,N],[3,"UnionFind","petgraph::unionfind","`UnionFind<K>` is a disjoint-set data structure. It tracks…",N,N],[11,"new","","Create a new `UnionFind` of `n` disjoint sets.",48,[[["usize"]],["self"]]],[11,"find","","Return the representative for `x`.",48,[[["self"],["k"]],["k"]]],[11,"find_mut","","Return the representative for `x`.",48,[[["self"],["k"]],["k"]]],[11,"union","","Unify the two sets containing `x` and `y`.",48,[[["self"],["k"],["k"]],["bool"]]],[11,"into_labeling","","Return a vector mapping each element to its representative.",48,[[["self"]],["vec"]]],[0,"csr","petgraph","Compressed Sparse Row (CSR) is a sparse adjacency matrix…",N,N],[3,"Csr","petgraph::csr","Compressed Sparse Row ([`CSR`]) is a sparse adjacency…",N,N],[3,"EdgesNotSorted","","Csr creation error: edges were not in sorted order.",N,N],[3,"Edges","","",N,N],[3,"EdgeReference","","",N,N],[3,"EdgeReferences","","",N,N],[3,"Neighbors","","",N,N],[3,"NodeIdentifiers","","",N,N],[6,"NodeIndex","","Csr node index type, a plain integer.",N,N],[6,"EdgeIndex","","Csr edge index type, a plain integer.",N,N],[11,"new","","Create an empty `Csr`.",49,[[],["self"]]],[11,"with_nodes","","Create a new [`Csr`] with `n` nodes. `N` must implement…",49,[[["usize"]],["self"]]],[11,"from_sorted_edges","","Create a new `Csr` from a sorted sequence of edges",49,N],[11,"node_count","","",49,[[["self"]],["usize"]]],[11,"edge_count","","",49,[[["self"]],["usize"]]],[11,"is_directed","","",49,[[["self"]],["bool"]]],[11,"clear_edges","","Remove all edges",49,[[["self"]]]],[11,"add_node","","Adds a new node with the given weight, returning the…",49,[[["self"],["n"]],["nodeindex"]]],[11,"add_edge","","Return `true` if the edge was added",49,[[["self"],["nodeindex"],["nodeindex"],["e"]],["bool"]]],[11,"contains_edge","","Computes in O(log |V|) time.",49,[[["self"],["nodeindex"],["nodeindex"]],["bool"]]],[11,"out_degree","","Computes in O(1) time.",49,[[["self"],["nodeindex"]],["usize"]]],[11,"neighbors_slice","","Computes in O(1) time.",49,N],[11,"edges_slice","","Computes in O(1) time.",49,N],[11,"edges","","Return an iterator of all edges of `a`.",49,[[["self"],["nodeindex"]],["edges"]]],[11,"weight","","Access the edge’s weight.",50,[[["self"]],["e"]]],[0,"prelude","petgraph","Commonly used items.",N,N],[0,"graph","","`Graph<N, E, Ty, Ix>` is a graph datastructure using an…",N,N],[3,"Edge","petgraph::graph","The graph's edge type.",N,N],[12,"weight","","Associated edge data.",51,N],[3,"EdgeIndex","","Edge identifier.",N,N],[3,"EdgeIndices","","Iterator over the edge indices of a graph.",N,N],[3,"EdgeReference","","Reference to a `Graph` edge.",N,N],[3,"EdgeReferences","","Iterator over all edges of a graph.",N,N],[3,"EdgeWeightsMut","","Iterator yielding mutable access to all edge weights.",N,N],[3,"Edges","","Iterator over the edges of from or to a node",N,N],[3,"Externals","","An iterator over either the nodes without edges to them or…",N,N],[3,"Frozen","","`Frozen` is a graph wrapper.",N,N],[3,"Graph","","`Graph<N, E, Ty, Ix>` is a graph datastructure using an…",N,N],[3,"Neighbors","","Iterator over the neighbors of a node.",N,N],[3,"Node","","The graph's node type.",N,N],[12,"weight","","Associated node data.",52,N],[3,"NodeIndex","","Node identifier.",N,N],[3,"NodeIndices","","Iterator over the node indices of a graph.",N,N],[3,"NodeWeightsMut","","Iterator yielding mutable access to all node weights.",N,N],[3,"NodeReferences","","Iterator over all nodes of a graph.",N,N],[3,"WalkNeighbors","","A “walker” object that can be used to step through the…",N,N],[5,"edge_index","","Short version of `EdgeIndex::new`",N,[[["usize"]],["edgeindex"]]],[5,"node_index","","Short version of `NodeIndex::new`",N,[[["usize"]],["nodeindex"]]],[6,"DefaultIx","","The default integer type for graph indices. `u32` is the…",N,N],[6,"DiGraph","","A `Graph` with directed edges.",N,N],[6,"UnGraph","","A `Graph` with undirected edges.",N,N],[8,"GraphIndex","","A  `GraphIndex` is a node or edge index.",N,N],[8,"IndexType","","Trait for the unsigned integer type used for node and edge…",N,N],[10,"new","","",53,[[["usize"]],["self"]]],[10,"index","","",53,[[["self"]],["usize"]]],[10,"max","","",53,[[],["self"]]],[0,"stable_graph","petgraph","`StableGraph` keeps indices stable across removals.",N,N],[3,"StableGraph","petgraph::stable_graph","`StableGraph<N, E, Ty, Ix>` is a graph datastructure using…",N,N],[3,"NodeReferences","","Iterator over all nodes of a graph.",N,N],[3,"EdgeReference","","Reference to a `StableGraph` edge.",N,N],[3,"Edges","","Iterator over the edges of from or to a node",N,N],[3,"EdgeReferences","","Iterator over all edges of a graph.",N,N],[3,"Neighbors","","Iterator over the neighbors of a node.",N,N],[3,"WalkNeighbors","","A “walker” object that can be used to step through the…",N,N],[3,"NodeIndices","","Iterator over the node indices of a graph.",N,N],[3,"EdgeIndices","","Iterator over the edge indices of a graph.",N,N],[6,"StableDiGraph","","A `StableGraph` with directed edges.",N,N],[6,"StableUnGraph","","A `StableGraph` with undirected edges.",N,N],[8,"EdgeType","petgraph","A graph's edge type determines whether is has directed…",N,N],[10,"is_directed","","",54,[[],["bool"]]],[8,"IntoWeightedEdge","","Convert an element like `(i, j)` or `(i, j, w)` into a…",N,N],[16,"NodeId","","",55,N],[10,"into_weighted_edge","","",55,N],[11,"opposite","","Return the opposite `Direction`.",0,[[["self"]],["direction"]]],[11,"index","","Return `0` for `Outgoing` and `1` for `Incoming`.",0,[[["self"]],["usize"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"equivalent","","",0,[[["self"],["k"]],["bool"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,N],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,N],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"from","petgraph::visit","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into_iter","","",58,[[["self"]],["i"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into_iter","","",59,[[["self"]],["i"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into_iter","","",60,[[["self"]],["i"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into_iter","","",61,[[["self"]],["i"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into_iter","","",62,[[["self"]],["i"]]],[11,"into","","",62,[[["self"]],["u"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into_iter","","",63,[[["self"]],["i"]]],[11,"into","","",63,[[["self"]],["u"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[["self"]],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,N],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into_iter","","",65,[[["self"]],["i"]]],[11,"into","","",65,[[["self"]],["u"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"equivalent","","",4,[[["self"],["k"]],["bool"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into_iter","","",11,[[["self"]],["i"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","petgraph::data","",66,[[["t"]],["t"]]],[11,"into_iter","","",66,[[["self"]],["i"]]],[11,"into","","",66,[[["self"]],["u"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,N],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"equivalent","","",33,[[["self"],["k"]],["bool"]]],[11,"from","petgraph::algo","",42,[[["t"]],["t"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,N],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into_iter","","",67,[[["self"]],["i"]]],[11,"into","","",67,[[["self"]],["u"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[["self"]],["u"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,N],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"try_into","","",68,[[["self"]],["result"]]],[11,"get_type_id","","",68,[[["self"]],["typeid"]]],[11,"from","petgraph::algo::dominators","",40,[[["t"]],["t"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,N],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into_iter","","",69,[[["self"]],["i"]]],[11,"into","","",69,[[["self"]],["u"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"try_into","","",69,[[["self"]],["result"]]],[11,"get_type_id","","",69,[[["self"]],["typeid"]]],[11,"from","petgraph::graphmap","",45,[[["t"]],["t"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,N],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into_iter","","",70,[[["self"]],["i"]]],[11,"into","","",70,[[["self"]],["u"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"try_into","","",70,[[["self"]],["result"]]],[11,"get_type_id","","",70,[[["self"]],["typeid"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into_iter","","",71,[[["self"]],["i"]]],[11,"into","","",71,[[["self"]],["u"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"try_into","","",71,[[["self"]],["result"]]],[11,"get_type_id","","",71,[[["self"]],["typeid"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into_iter","","",72,[[["self"]],["i"]]],[11,"into","","",72,[[["self"]],["u"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"try_into","","",72,[[["self"]],["result"]]],[11,"get_type_id","","",72,[[["self"]],["typeid"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into_iter","","",73,[[["self"]],["i"]]],[11,"into","","",73,[[["self"]],["u"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"try_into","","",73,[[["self"]],["result"]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into_iter","","",74,[[["self"]],["i"]]],[11,"into","","",74,[[["self"]],["u"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"try_into","","",74,[[["self"]],["result"]]],[11,"get_type_id","","",74,[[["self"]],["typeid"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into_iter","","",75,[[["self"]],["i"]]],[11,"into","","",75,[[["self"]],["u"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"try_into","","",75,[[["self"]],["result"]]],[11,"get_type_id","","",75,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,N],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"equivalent","","",44,[[["self"],["k"]],["bool"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into_iter","","",76,[[["self"]],["i"]]],[11,"into","","",76,[[["self"]],["u"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"try_into","","",76,[[["self"]],["result"]]],[11,"get_type_id","","",76,[[["self"]],["typeid"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into_iter","","",77,[[["self"]],["i"]]],[11,"into","","",77,[[["self"]],["u"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"try_into","","",77,[[["self"]],["result"]]],[11,"get_type_id","","",77,[[["self"]],["typeid"]]],[11,"from","petgraph::graph","",78,[[["t"]],["t"]]],[11,"into","","",78,[[["self"]],["u"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,N],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"try_into","","",78,[[["self"]],["result"]]],[11,"get_type_id","","",78,[[["self"]],["typeid"]]],[11,"equivalent","","",78,[[["self"],["k"]],["bool"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[["self"]],["u"]]],[11,"to_owned","","",79,[[["self"]],["t"]]],[11,"clone_into","","",79,N],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"try_into","","",79,[[["self"]],["result"]]],[11,"get_type_id","","",79,[[["self"]],["typeid"]]],[11,"equivalent","","",79,[[["self"],["k"]],["bool"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,N],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,N],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[["self"]],["u"]]],[11,"to_owned","","",80,[[["self"]],["t"]]],[11,"clone_into","","",80,N],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"try_into","","",80,[[["self"]],["result"]]],[11,"get_type_id","","",80,[[["self"]],["typeid"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into_iter","","",81,[[["self"]],["i"]]],[11,"into","","",81,[[["self"]],["u"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"try_into","","",81,[[["self"]],["result"]]],[11,"get_type_id","","",81,[[["self"]],["typeid"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into_iter","","",82,[[["self"]],["i"]]],[11,"into","","",82,[[["self"]],["u"]]],[11,"to_owned","","",82,[[["self"]],["t"]]],[11,"clone_into","","",82,N],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"try_into","","",82,[[["self"]],["result"]]],[11,"get_type_id","","",82,[[["self"]],["typeid"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into_iter","","",83,[[["self"]],["i"]]],[11,"into","","",83,[[["self"]],["u"]]],[11,"to_owned","","",83,[[["self"]],["t"]]],[11,"clone_into","","",83,N],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"try_into","","",83,[[["self"]],["result"]]],[11,"get_type_id","","",83,[[["self"]],["typeid"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"into_iter","","",84,[[["self"]],["i"]]],[11,"into","","",84,[[["self"]],["u"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"try_into","","",84,[[["self"]],["result"]]],[11,"get_type_id","","",84,[[["self"]],["typeid"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into_iter","","",85,[[["self"]],["i"]]],[11,"into","","",85,[[["self"]],["u"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"try_into","","",85,[[["self"]],["result"]]],[11,"get_type_id","","",85,[[["self"]],["typeid"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[["self"]],["u"]]],[11,"to_owned","","",86,[[["self"]],["t"]]],[11,"clone_into","","",86,N],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"try_into","","",86,[[["self"]],["result"]]],[11,"get_type_id","","",86,[[["self"]],["typeid"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"into_iter","","",87,[[["self"]],["i"]]],[11,"into","","",87,[[["self"]],["u"]]],[11,"to_owned","","",87,[[["self"]],["t"]]],[11,"clone_into","","",87,N],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"try_into","","",87,[[["self"]],["result"]]],[11,"get_type_id","","",87,[[["self"]],["typeid"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"into_iter","","",88,[[["self"]],["i"]]],[11,"into","","",88,[[["self"]],["u"]]],[11,"to_owned","","",88,[[["self"]],["t"]]],[11,"clone_into","","",88,N],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"try_into","","",88,[[["self"]],["result"]]],[11,"get_type_id","","",88,[[["self"]],["typeid"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"into","","",89,[[["self"]],["u"]]],[11,"to_owned","","",89,[[["self"]],["t"]]],[11,"clone_into","","",89,N],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"try_into","","",89,[[["self"]],["result"]]],[11,"get_type_id","","",89,[[["self"]],["typeid"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"into_iter","","",90,[[["self"]],["i"]]],[11,"into","","",90,[[["self"]],["u"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"try_into","","",90,[[["self"]],["result"]]],[11,"get_type_id","","",90,[[["self"]],["typeid"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"into_iter","","",91,[[["self"]],["i"]]],[11,"into","","",91,[[["self"]],["u"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"try_into","","",91,[[["self"]],["result"]]],[11,"get_type_id","","",91,[[["self"]],["typeid"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"into","","",92,[[["self"]],["u"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"try_into","","",92,[[["self"]],["result"]]],[11,"get_type_id","","",92,[[["self"]],["typeid"]]],[11,"from","petgraph::stable_graph","",93,[[["t"]],["t"]]],[11,"into","","",93,[[["self"]],["u"]]],[11,"to_owned","","",93,[[["self"]],["t"]]],[11,"clone_into","","",93,N],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"try_into","","",93,[[["self"]],["result"]]],[11,"get_type_id","","",93,[[["self"]],["typeid"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"into_iter","","",94,[[["self"]],["i"]]],[11,"into","","",94,[[["self"]],["u"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"try_into","","",94,[[["self"]],["result"]]],[11,"get_type_id","","",94,[[["self"]],["typeid"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"into","","",95,[[["self"]],["u"]]],[11,"to_owned","","",95,[[["self"]],["t"]]],[11,"clone_into","","",95,N],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"try_into","","",95,[[["self"]],["result"]]],[11,"get_type_id","","",95,[[["self"]],["typeid"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"into_iter","","",96,[[["self"]],["i"]]],[11,"into","","",96,[[["self"]],["u"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"try_into","","",96,[[["self"]],["result"]]],[11,"get_type_id","","",96,[[["self"]],["typeid"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"into_iter","","",97,[[["self"]],["i"]]],[11,"into","","",97,[[["self"]],["u"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"try_into","","",97,[[["self"]],["result"]]],[11,"get_type_id","","",97,[[["self"]],["typeid"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"into_iter","","",98,[[["self"]],["i"]]],[11,"into","","",98,[[["self"]],["u"]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"try_into","","",98,[[["self"]],["result"]]],[11,"get_type_id","","",98,[[["self"]],["typeid"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"into","","",99,[[["self"]],["u"]]],[11,"to_owned","","",99,[[["self"]],["t"]]],[11,"clone_into","","",99,N],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"try_into","","",99,[[["self"]],["result"]]],[11,"get_type_id","","",99,[[["self"]],["typeid"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"into_iter","","",100,[[["self"]],["i"]]],[11,"into","","",100,[[["self"]],["u"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"try_into","","",100,[[["self"]],["result"]]],[11,"get_type_id","","",100,[[["self"]],["typeid"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"into_iter","","",101,[[["self"]],["i"]]],[11,"into","","",101,[[["self"]],["u"]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"try_into","","",101,[[["self"]],["result"]]],[11,"get_type_id","","",101,[[["self"]],["typeid"]]],[11,"from","petgraph::dot","",47,[[["t"]],["t"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"to_string","","",47,[[["self"]],["string"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"equivalent","","",46,[[["self"],["k"]],["bool"]]],[11,"from","petgraph::unionfind","",48,[[["t"]],["t"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,N],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"from","petgraph::csr","",49,[[["t"]],["t"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,N],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"into","","",102,[[["self"]],["u"]]],[11,"to_owned","","",102,[[["self"]],["t"]]],[11,"clone_into","","",102,N],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"try_into","","",102,[[["self"]],["result"]]],[11,"get_type_id","","",102,[[["self"]],["typeid"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"into_iter","","",103,[[["self"]],["i"]]],[11,"into","","",103,[[["self"]],["u"]]],[11,"to_owned","","",103,[[["self"]],["t"]]],[11,"clone_into","","",103,N],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"try_into","","",103,[[["self"]],["result"]]],[11,"get_type_id","","",103,[[["self"]],["typeid"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,N],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"into_iter","","",104,[[["self"]],["i"]]],[11,"into","","",104,[[["self"]],["u"]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"try_into","","",104,[[["self"]],["result"]]],[11,"get_type_id","","",104,[[["self"]],["typeid"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"into_iter","","",105,[[["self"]],["i"]]],[11,"into","","",105,[[["self"]],["u"]]],[11,"to_owned","","",105,[[["self"]],["t"]]],[11,"clone_into","","",105,N],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"try_into","","",105,[[["self"]],["result"]]],[11,"get_type_id","","",105,[[["self"]],["typeid"]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"into_iter","","",106,[[["self"]],["i"]]],[11,"into","","",106,[[["self"]],["u"]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"try_into","","",106,[[["self"]],["result"]]],[11,"get_type_id","","",106,[[["self"]],["typeid"]]],[11,"continuing","petgraph::visit","",9,[[],["self"]]],[11,"should_break","","",9,[[["self"]],["bool"]]],[11,"walk_next","","",5,[[["self"],["g"]],["option"]]],[11,"walk_next","","",6,[[["self"],["g"]],["option"]]],[11,"walk_next","","",7,[[["self"],["g"]],["option"]]],[11,"walk_next","","",10,[[["self"],["g"]],["option"]]],[11,"source","","",64,N],[11,"target","","",64,N],[11,"weight","","",64,N],[11,"id","","",64,N],[11,"source","petgraph::graph","",89,N],[11,"target","","",89,N],[11,"weight","","",89,[[["self"]],["e"]]],[11,"id","","",89,N],[11,"source","petgraph::stable_graph","",95,N],[11,"target","","",95,N],[11,"weight","","",95,[[["self"]],["e"]]],[11,"id","","",95,N],[11,"source","petgraph::csr","",50,N],[11,"target","","",50,N],[11,"weight","","",50,[[["self"]],["e"]]],[11,"id","","",50,N],[11,"add_node","petgraph::graph","",80,N],[11,"add_edge","","",80,N],[11,"update_edge","","",80,N],[11,"add_node","petgraph::stable_graph","",93,N],[11,"add_edge","","",93,N],[11,"update_edge","","",93,N],[11,"add_node","petgraph::graphmap","",45,N],[11,"add_edge","","",45,N],[11,"update_edge","","",45,N],[11,"with_capacity","petgraph::graph","",80,[[["usize"],["usize"]],["self"]]],[11,"with_capacity","petgraph::stable_graph","",93,[[["usize"],["usize"]],["self"]]],[11,"with_capacity","petgraph::graphmap","",45,[[["usize"],["usize"]],["self"]]],[11,"from_elements","petgraph::graph","",80,[[["i"]],["self"]]],[11,"from_elements","petgraph::stable_graph","",93,[[["i"]],["self"]]],[11,"from_elements","petgraph::graphmap","",45,[[["i"]],["self"]]],[11,"index","petgraph::graph","",78,[[["self"]],["usize"]]],[11,"is_node_index","","",78,[[],["bool"]]],[11,"index","","",79,[[["self"]],["usize"]]],[11,"is_node_index","","",79,[[],["bool"]]],[11,"is_directed","petgraph","",56,[[],["bool"]]],[11,"is_directed","","",57,[[],["bool"]]],[11,"neighbors","petgraph::visit","",3,N],[11,"neighbors_directed","","",3,N],[11,"node_identifiers","","",3,N],[11,"node_references","","",3,N],[11,"edge_references","","",3,N],[11,"node_bound","petgraph::graph","",80,[[["self"]],["usize"]]],[11,"to_index","","",80,[[["self"],["nodeindex"]],["usize"]]],[11,"from_index","","",80,N],[11,"node_bound","petgraph::visit","",1,[[["self"]],["usize"]]],[11,"to_index","","",1,N],[11,"from_index","","",1,N],[11,"node_bound","","",2,[[["self"]],["usize"]]],[11,"to_index","","",2,N],[11,"from_index","","",2,N],[11,"node_bound","","",3,[[["self"]],["usize"]]],[11,"to_index","","",3,N],[11,"from_index","","",3,N],[11,"node_bound","petgraph::graphmap","",45,[[["self"]],["usize"]]],[11,"to_index","","",45,N],[11,"from_index","","",45,N],[11,"node_bound","petgraph::stable_graph","Return an upper bound of the node indices in the graph",93,[[["self"]],["usize"]]],[11,"to_index","","",93,[[["self"],["nodeindex"]],["usize"]]],[11,"from_index","","",93,N],[11,"node_bound","petgraph::graph","",92,[[["self"]],["usize"]]],[11,"to_index","","",92,N],[11,"from_index","","",92,N],[11,"node_bound","petgraph::csr","",49,[[["self"]],["usize"]]],[11,"to_index","","",49,N],[11,"from_index","","",49,N],[11,"node_count","petgraph::graph","",80,[[["self"]],["usize"]]],[11,"node_count","petgraph::stable_graph","",93,[[["self"]],["usize"]]],[11,"node_count","petgraph::visit","",2,[[["self"]],["usize"]]],[11,"node_count","","",3,[[["self"]],["usize"]]],[11,"node_count","petgraph::graphmap","",45,[[["self"]],["usize"]]],[11,"node_count","petgraph::graph","",92,[[["self"]],["usize"]]],[11,"node_count","petgraph::csr","",49,[[["self"]],["usize"]]],[11,"visit_map","petgraph::graph","",80,[[["self"]],["fixedbitset"]]],[11,"reset_map","","",80,N],[11,"visit_map","petgraph::stable_graph","",93,[[["self"]],["fixedbitset"]]],[11,"reset_map","","",93,N],[11,"visit_map","petgraph::graphmap","",45,[[["self"]],["hashset"]]],[11,"reset_map","","",45,N],[11,"visit_map","petgraph::visit","",1,N],[11,"reset_map","","",1,N],[11,"visit_map","","",2,N],[11,"reset_map","","",2,N],[11,"visit_map","","",3,N],[11,"reset_map","","",3,N],[11,"visit_map","petgraph::graph","",92,N],[11,"reset_map","","",92,N],[11,"visit_map","petgraph::csr","",49,[[["self"]],["fixedbitset"]]],[11,"reset_map","","",49,N],[11,"adjacency_matrix","petgraph::graphmap","",45,[[["self"]]]],[11,"is_adjacent","","",45,N],[11,"adjacency_matrix","petgraph::graph","",92,N],[11,"is_adjacent","","",92,N],[11,"adjacency_matrix","","",80,[[["self"]],["fixedbitset"]]],[11,"is_adjacent","","",80,[[["self"],["fixedbitset"],["nodeindex"],["nodeindex"]],["bool"]]],[11,"adjacency_matrix","petgraph::stable_graph","",93,[[["self"]],["fixedbitset"]]],[11,"is_adjacent","","",93,[[["self"],["fixedbitset"],["nodeindex"],["nodeindex"]],["bool"]]],[11,"node_weight","petgraph::visit","",1,N],[11,"edge_weight","","",1,N],[11,"node_weight","","",3,N],[11,"edge_weight","","",3,N],[11,"node_weight","petgraph::graph","",80,N],[11,"edge_weight","","",80,N],[11,"node_weight","petgraph::stable_graph","",93,N],[11,"edge_weight","","",93,N],[11,"node_weight","petgraph::graph","",92,N],[11,"edge_weight","","",92,N],[11,"node_weight_mut","petgraph::visit","",3,N],[11,"edge_weight_mut","","",3,N],[11,"node_weight_mut","petgraph::graph","",80,N],[11,"edge_weight_mut","","",80,N],[11,"node_weight_mut","petgraph::stable_graph","",93,N],[11,"edge_weight_mut","","",93,N],[11,"node_weight_mut","petgraph::graph","",92,N],[11,"edge_weight_mut","","",92,N],[11,"next_back","petgraph::graphmap","",74,[[["self"]],["option"]]],[11,"next_back","","",75,[[["self"]],["option"]]],[11,"next_back","petgraph::graph","",87,[[["self"]],["option"]]],[11,"next_back","","",88,[[["self"]],["option"]]],[11,"next_back","","",90,[[["self"]],["option"]]],[11,"next_back","","",91,[[["self"]],["option"]]],[11,"next_back","petgraph::stable_graph","",94,[[["self"]],["option"]]],[11,"next_back","","",97,[[["self"]],["option"]]],[11,"next_back","","",100,[[["self"]],["option"]]],[11,"next_back","","",101,[[["self"]],["option"]]],[11,"cmp","petgraph::visit","",4,[[["self"],["time"]],["ordering"]]],[11,"cmp","petgraph::graphmap","Ptr is ordered by pointer value, i.e. an arbitrary but…",44,[[["self"],["ptr"]],["ordering"]]],[11,"cmp","petgraph::graph","",78,[[["self"],["nodeindex"]],["ordering"]]],[11,"cmp","","",79,[[["self"],["edgeindex"]],["ordering"]]],[11,"cmp","petgraph","",0,[[["self"],["direction"]],["ordering"]]],[11,"eq","petgraph::visit","",4,[[["self"],["time"]],["bool"]]],[11,"ne","","",4,[[["self"],["time"]],["bool"]]],[11,"eq","petgraph::data","",33,[[["self"],["element"]],["bool"]]],[11,"ne","","",33,[[["self"],["element"]],["bool"]]],[11,"eq","petgraph::algo","",43,[[["self"],["cycle"]],["bool"]]],[11,"ne","","",43,[[["self"],["cycle"]],["bool"]]],[11,"eq","","",68,[[["self"],["negativecycle"]],["bool"]]],[11,"ne","","",68,[[["self"],["negativecycle"]],["bool"]]],[11,"eq","petgraph::graphmap","Ptr compares by pointer equality, i.e if they point to the…",44,[[["self"],["ptr"]],["bool"]]],[11,"eq","petgraph::graph","",78,[[["self"],["nodeindex"]],["bool"]]],[11,"ne","","",78,[[["self"],["nodeindex"]],["bool"]]],[11,"eq","","",79,[[["self"],["edgeindex"]],["bool"]]],[11,"ne","","",79,[[["self"],["edgeindex"]],["bool"]]],[11,"eq","","",89,[[["self"],["self"]],["bool"]]],[11,"eq","petgraph::stable_graph","",95,[[["self"],["self"]],["bool"]]],[11,"eq","petgraph::dot","",46,[[["self"],["config"]],["bool"]]],[11,"ne","","",46,[[["self"],["config"]],["bool"]]],[11,"eq","petgraph","",0,[[["self"],["direction"]],["bool"]]],[11,"from","petgraph::graph","",78,[[["ix"]],["self"]]],[11,"from","petgraph::stable_graph","",93,[[["graph"]],["self"]]],[11,"from","petgraph::graph","",80,[[["stablegraph"]],["self"]]],[11,"clone","petgraph::visit","",4,[[["self"]],["time"]]],[11,"clone","","",8,[[["self"]],["dfsevent"]]],[11,"clone","","",9,[[["self"]],["control"]]],[11,"clone","","",5,[[["self"]],["dfs"]]],[11,"clone","","",6,[[["self"]],["dfspostorder"]]],[11,"clone","","",7,[[["self"]],["bfs"]]],[11,"clone","","",10,[[["self"]],["topo"]]],[11,"clone","","",11,[[["self"]],["walkeriter"]]],[11,"clone","","",1,[[["self"]],["nodefiltered"]]],[11,"clone","","",2,[[["self"]],["edgefiltered"]]],[11,"clone","","",3,[[["self"]],["reversed"]]],[11,"clone","","",64,[[["self"]],["reversededgereference"]]],[11,"clone","petgraph::data","",33,[[["self"]],["element"]]],[11,"clone","petgraph::algo::dominators","",40,[[["self"]],["dominators"]]],[11,"clone","petgraph::algo","",42,[[["self"]],["dfsspace"]]],[11,"clone","","",43,[[["self"]],["cycle"]]],[11,"clone","","",68,[[["self"]],["negativecycle"]]],[11,"clone","petgraph::graphmap","",45,[[["self"]],["graphmap"]]],[11,"clone","","",44,[[["self"]],["self"]]],[11,"clone","petgraph::graph","",78,[[["self"]],["nodeindex"]]],[11,"clone","","",79,[[["self"]],["edgeindex"]]],[11,"clone","","",52,[[["self"]],["self"]]],[11,"clone","","",51,[[["self"]],["self"]]],[11,"clone","","",80,[[["self"]],["self"]]],[11,"clone_from","","",80,[[["self"],["self"]]]],[11,"clone","","",82,[[["self"]],["self"]]],[11,"clone","","",83,[[["self"]],["self"]]],[11,"clone","","",86,[[["self"]],["self"]]],[11,"clone","","",87,[[["self"]],["nodeindices"]]],[11,"clone","","",88,[[["self"]],["edgeindices"]]],[11,"clone","","",89,[[["self"]],["self"]]],[11,"clone","petgraph::stable_graph","",93,[[["self"]],["self"]]],[11,"clone_from","","",93,[[["self"],["self"]]]],[11,"clone","","",95,[[["self"]],["self"]]],[11,"clone","","",99,[[["self"]],["self"]]],[11,"clone","petgraph::unionfind","",48,[[["self"]],["unionfind"]]],[11,"clone","petgraph::csr","",49,[[["self"]],["self"]]],[11,"clone","","",102,[[["self"]],["edgesnotsorted"]]],[11,"clone","","",103,[[["self"]],["edges"]]],[11,"clone","","",50,[[["self"]],["self"]]],[11,"clone","","",105,[[["self"]],["neighbors"]]],[11,"clone","petgraph","",0,[[["self"]],["self"]]],[11,"clone","","",56,[[["self"]],["self"]]],[11,"clone","","",57,[[["self"]],["self"]]],[11,"extend","petgraph::graphmap","",45,[[["self"],["i"]]]],[11,"partial_cmp","petgraph::visit","",4,[[["self"],["time"]],["option",["ordering"]]]],[11,"lt","","",4,[[["self"],["time"]],["bool"]]],[11,"le","","",4,[[["self"],["time"]],["bool"]]],[11,"gt","","",4,[[["self"],["time"]],["bool"]]],[11,"ge","","",4,[[["self"],["time"]],["bool"]]],[11,"partial_cmp","petgraph::graphmap","",44,[[["self"],["ptr"]],["option",["ordering"]]]],[11,"partial_cmp","petgraph::graph","",78,[[["self"],["nodeindex"]],["option",["ordering"]]]],[11,"lt","","",78,[[["self"],["nodeindex"]],["bool"]]],[11,"le","","",78,[[["self"],["nodeindex"]],["bool"]]],[11,"gt","","",78,[[["self"],["nodeindex"]],["bool"]]],[11,"ge","","",78,[[["self"],["nodeindex"]],["bool"]]],[11,"partial_cmp","","",79,[[["self"],["edgeindex"]],["option",["ordering"]]]],[11,"lt","","",79,[[["self"],["edgeindex"]],["bool"]]],[11,"le","","",79,[[["self"],["edgeindex"]],["bool"]]],[11,"gt","","",79,[[["self"],["edgeindex"]],["bool"]]],[11,"ge","","",79,[[["self"],["edgeindex"]],["bool"]]],[11,"partial_cmp","petgraph","",0,[[["self"],["direction"]],["option",["ordering"]]]],[11,"next","petgraph::visit","",11,[[["self"]],["option"]]],[11,"next","","",58,[[["self"]],["option"]]],[11,"next","","",59,[[["self"]],["option"]]],[11,"next","","",60,[[["self"]],["option"]]],[11,"next","","",61,[[["self"]],["option"]]],[11,"next","","",62,[[["self"]],["option"]]],[11,"next","","",63,[[["self"]],["option"]]],[11,"next","","",65,[[["self"]],["option"]]],[11,"next","petgraph::data","",66,[[["self"]],["option"]]],[11,"next","petgraph::algo::dominators","",69,[[["self"]],["option"]]],[11,"next","petgraph::algo","",67,[[["self"]],["option"]]],[11,"next","petgraph::graphmap","",70,[[["self"]],["option"]]],[11,"size_hint","","",70,N],[11,"next","","",71,[[["self"]],["option"]]],[11,"next","","",72,[[["self"]],["option"]]],[11,"next","","",73,[[["self"]],["option"]]],[11,"next","","",74,[[["self"]],["option"]]],[11,"size_hint","","",74,N],[11,"count","","",74,[[["self"]],["usize"]]],[11,"nth","","",74,[[["self"],["usize"]],["option"]]],[11,"last","","",74,[[["self"]],["option"]]],[11,"next","","",75,[[["self"]],["option"]]],[11,"size_hint","","",75,N],[11,"count","","",75,[[["self"]],["usize"]]],[11,"nth","","",75,[[["self"],["usize"]],["option"]]],[11,"last","","",75,[[["self"]],["option"]]],[11,"next","","",76,[[["self"]],["option"]]],[11,"next","","",77,[[["self"]],["option"]]],[11,"next","petgraph::graph","",81,[[["self"]],["option",["nodeindex"]]]],[11,"next","","",82,[[["self"]],["option",["nodeindex"]]]],[11,"next","","",83,[[["self"]],["option"]]],[11,"next","","",84,[[["self"]],["option"]]],[11,"size_hint","","",84,N],[11,"next","","",85,[[["self"]],["option"]]],[11,"size_hint","","",85,N],[11,"next","","",87,[[["self"]],["option"]]],[11,"size_hint","","",87,N],[11,"next","","",88,[[["self"]],["option"]]],[11,"size_hint","","",88,N],[11,"next","","",90,[[["self"]],["option"]]],[11,"size_hint","","",90,N],[11,"next","","",91,[[["self"]],["option"]]],[11,"size_hint","","",91,N],[11,"next","petgraph::stable_graph","",94,[[["self"]],["option"]]],[11,"size_hint","","",94,N],[11,"next","","",96,[[["self"]],["option"]]],[11,"next","","",97,[[["self"]],["option"]]],[11,"next","","",98,[[["self"]],["option",["nodeindex"]]]],[11,"next","","",100,[[["self"]],["option"]]],[11,"size_hint","","",100,N],[11,"next","","",101,[[["self"]],["option"]]],[11,"size_hint","","",101,N],[11,"next","petgraph::csr","",103,[[["self"]],["option"]]],[11,"next","","",104,[[["self"]],["option"]]],[11,"next","","",105,[[["self"]],["option"]]],[11,"size_hint","","",105,N],[11,"next","","",106,[[["self"]],["option"]]],[11,"size_hint","","",106,N],[11,"default","petgraph::visit","",4,[[],["time"]]],[11,"default","","",9,[[],["self"]]],[11,"default","petgraph::algo","",42,[[],["self"]]],[11,"default","petgraph::graphmap","",45,[[],["self"]]],[11,"default","petgraph::graph","",78,[[],["nodeindex"]]],[11,"default","","",79,[[],["edgeindex"]]],[11,"default","","",80,[[],["self"]]],[11,"default","petgraph::stable_graph","",93,[[],["self"]]],[11,"default","petgraph::csr","",49,[[],["self"]]],[11,"fmt","petgraph::dot","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","petgraph::visit","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",64,[[["self"],["formatter"]],["result"]]],[11,"fmt","petgraph::data","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","petgraph::algo::dominators","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","petgraph::algo","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",68,[[["self"],["formatter"]],["result"]]],[11,"fmt","petgraph::graphmap","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","petgraph::graph","",78,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",79,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",52,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",80,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",87,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",88,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",89,[[["self"],["formatter"]],["result"]]],[11,"fmt","petgraph::stable_graph","",93,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",95,[[["self"],["formatter"]],["result"]]],[11,"fmt","petgraph::dot","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","petgraph::unionfind","",48,[[["self"],["formatter"]],["result"]]],[11,"fmt","petgraph::csr","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",102,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",103,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",50,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",105,[[["self"],["formatter"]],["result"]]],[11,"fmt","petgraph","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",56,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",57,[[["self"],["formatter"]],["result"]]],[11,"deref","petgraph::graphmap","",44,[[["self"]],["t"]]],[11,"deref","petgraph::graph","",92,[[["self"]],["g"]]],[11,"index","petgraph::graphmap","",45,N],[11,"index","petgraph::graph","",80,[[["self"],["nodeindex"]],["n"]]],[11,"index","","",80,[[["self"],["edgeindex"]],["e"]]],[11,"index","petgraph::stable_graph","",93,[[["self"],["nodeindex"]],["n"]]],[11,"index","","",93,[[["self"],["edgeindex"]],["e"]]],[11,"index","petgraph::graph","",92,N],[11,"index","petgraph::csr","",49,[[["self"],["nodeindex"]],["n"]]],[11,"index_mut","petgraph::graphmap","",45,N],[11,"index_mut","petgraph::graph","",80,[[["self"],["nodeindex"]],["n"]]],[11,"index_mut","","",80,[[["self"],["edgeindex"]],["e"]]],[11,"index_mut","petgraph::stable_graph","",93,[[["self"],["nodeindex"]],["n"]]],[11,"index_mut","","",93,[[["self"],["edgeindex"]],["e"]]],[11,"index_mut","petgraph::graph","",92,N],[11,"index_mut","petgraph::csr","",49,[[["self"],["nodeindex"]],["n"]]],[11,"hash","petgraph::visit","",4,N],[11,"hash","petgraph::graphmap","",44,[[["self"],["h"]]]],[11,"hash","petgraph::graph","",78,N],[11,"hash","","",79,N],[11,"hash","petgraph","",0,N],[11,"from_iter","petgraph::graphmap","",45,[[["i"]],["self"]]],[11,"iter","petgraph::visit","Create an iterator out of the walker and given `context`.",15,[[["self"],["context"]],["walkeriter"]]],[11,"new","petgraph::stable_graph","Create a new `StableGraph` with directed edges.",93,[[],["self"]]],[11,"with_capacity","","Create a new `StableGraph` with estimated capacity.",93,[[["usize"],["usize"]],["self"]]],[11,"capacity","","Return the current node and edge capacity of the graph.",93,N],[11,"clear","","Remove all nodes and edges",93,[[["self"]]]],[11,"clear_edges","","Remove all edges",93,[[["self"]]]],[11,"node_count","","Return the number of nodes (vertices) in the graph.",93,[[["self"]],["usize"]]],[11,"edge_count","","Return the number of edges in the graph.",93,[[["self"]],["usize"]]],[11,"is_directed","","Whether the graph has directed edges or not.",93,[[["self"]],["bool"]]],[11,"add_node","","Add a node (also called vertex) with associated data…",93,[[["self"],["n"]],["nodeindex"]]],[11,"remove_node","","Remove `a` from the graph if it exists, and return its…",93,[[["self"],["nodeindex"]],["option"]]],[11,"contains_node","","",93,[[["self"],["nodeindex"]],["bool"]]],[11,"add_edge","","Add an edge from `a` to `b` to the graph, with its…",93,[[["self"],["nodeindex"],["nodeindex"],["e"]],["edgeindex"]]],[11,"update_edge","","Add or update an edge from `a` to `b`. If the edge already…",93,[[["self"],["nodeindex"],["nodeindex"],["e"]],["edgeindex"]]],[11,"remove_edge","","Remove an edge and return its edge weight, or `None` if it…",93,[[["self"],["edgeindex"]],["option"]]],[11,"node_weight","","Access the weight for node `a`.",93,[[["self"],["nodeindex"]],["option"]]],[11,"node_weight_mut","","Access the weight for node `a`, mutably.",93,[[["self"],["nodeindex"]],["option"]]],[11,"node_indices","","Return an iterator over the node indices of the graph",93,[[["self"]],["nodeindices"]]],[11,"edge_weight","","Access the weight for edge `e`.",93,[[["self"],["edgeindex"]],["option"]]],[11,"edge_weight_mut","","Access the weight for edge `e`, mutably",93,[[["self"],["edgeindex"]],["option"]]],[11,"edge_endpoints","","Access the source and target nodes for `e`.",93,[[["self"],["edgeindex"]],["option"]]],[11,"edge_indices","","Return an iterator over the node indices of the graph",93,[[["self"]],["edgeindices"]]],[11,"find_edge","","Lookup an edge from `a` to `b`.",93,[[["self"],["nodeindex"],["nodeindex"]],["option",["edgeindex"]]]],[11,"find_edge_undirected","","Lookup an edge between `a` and `b`, in either direction.",93,[[["self"],["nodeindex"],["nodeindex"]],["option"]]],[11,"neighbors","","Return an iterator of all nodes with an edge starting from…",93,[[["self"],["nodeindex"]],["neighbors"]]],[11,"neighbors_directed","","Return an iterator of all neighbors that have an edge…",93,[[["self"],["nodeindex"],["direction"]],["neighbors"]]],[11,"neighbors_undirected","","Return an iterator of all neighbors that have an edge…",93,[[["self"],["nodeindex"]],["neighbors"]]],[11,"edges","","Return an iterator of all edges of `a`.",93,[[["self"],["nodeindex"]],["edges"]]],[11,"edges_directed","","Return an iterator of all edges of `a`, in the specified…",93,[[["self"],["nodeindex"],["direction"]],["edges"]]],[11,"index_twice_mut","","Index the `StableGraph` by two indices, any combination of…",93,N],[11,"retain_nodes","","Keep all nodes that return `true` from the `visit`…",93,[[["self"],["f"]]]],[11,"retain_edges","","Keep all edges that return `true` from the `visit`…",93,[[["self"],["f"]]]],[11,"from_edges","","Create a new `StableGraph` from an iterable of edges.",93,[[["i"]],["self"]]],[11,"map","","Create a new `StableGraph` by mapping node and edge…",93,[[["self"],["f"],["g"]],["stablegraph"]]],[11,"filter_map","","Create a new `StableGraph` by mapping nodes and edges. A…",93,[[["self"],["f"],["g"]],["stablegraph"]]],[11,"extend_with_edges","","Extend the graph from an iterable of edges.",93,[[["self"],["i"]]]],[11,"weight","","Access the edge’s weight.",95,[[["self"]],["e"]]],[11,"detach","","Return a “walker” object that can be used to step through…",98,[[["self"]],["walkneighbors"]]],[11,"next","","Step to the next edge and its endpoint node in the walk…",99,[[["self"],["stablegraph"]],["option"]]],[11,"next_node","","",99,[[["self"],["stablegraph"]],["option",["nodeindex"]]]],[11,"next_edge","","",99,[[["self"],["stablegraph"]],["option",["edgeindex"]]]],[11,"new","petgraph::graph","Create a new `Frozen` from a mutable reference to a graph.",92,[[["g"]],["self"]]],[11,"index_twice_mut","","Index the `Graph` by two indices, any combination of node…",92,N],[11,"new","","",78,[[["usize"]],["self"]]],[11,"index","","",78,[[["self"]],["usize"]]],[11,"end","","",78,[[],["self"]]],[11,"new","","",79,[[["usize"]],["self"]]],[11,"index","","",79,[[["self"]],["usize"]]],[11,"end","","An invalid `EdgeIndex` used to denote absence of an edge,…",79,[[],["self"]]],[11,"next_edge","","Accessor for data structure internals: the first edge in…",52,[[["self"],["direction"]],["edgeindex"]]],[11,"next_edge","","Accessor for data structure internals: the next edge for…",51,[[["self"],["direction"]],["edgeindex"]]],[11,"source","","Return the source node index.",51,[[["self"]],["nodeindex"]]],[11,"target","","Return the target node index.",51,[[["self"]],["nodeindex"]]],[11,"new","","Create a new `Graph` with directed edges.",80,[[],["self"]]],[11,"new_undirected","","Create a new `Graph` with undirected edges.",80,[[],["self"]]],[11,"with_capacity","","Create a new `Graph` with estimated capacity.",80,[[["usize"],["usize"]],["self"]]],[11,"node_count","","Return the number of nodes (vertices) in the graph.",80,[[["self"]],["usize"]]],[11,"edge_count","","Return the number of edges in the graph.",80,[[["self"]],["usize"]]],[11,"is_directed","","Whether the graph has directed edges or not.",80,[[["self"]],["bool"]]],[11,"add_node","","Add a node (also called vertex) with associated data…",80,[[["self"],["n"]],["nodeindex"]]],[11,"node_weight","","Access the weight for node `a`.",80,[[["self"],["nodeindex"]],["option"]]],[11,"node_weight_mut","","Access the weight for node `a`, mutably.",80,[[["self"],["nodeindex"]],["option"]]],[11,"add_edge","","Add an edge from `a` to `b` to the graph, with its…",80,[[["self"],["nodeindex"],["nodeindex"],["e"]],["edgeindex"]]],[11,"update_edge","","Add or update an edge from `a` to `b`. If the edge already…",80,[[["self"],["nodeindex"],["nodeindex"],["e"]],["edgeindex"]]],[11,"edge_weight","","Access the weight for edge `e`.",80,[[["self"],["edgeindex"]],["option"]]],[11,"edge_weight_mut","","Access the weight for edge `e`, mutably.",80,[[["self"],["edgeindex"]],["option"]]],[11,"edge_endpoints","","Access the source and target nodes for `e`.",80,[[["self"],["edgeindex"]],["option"]]],[11,"remove_node","","Remove `a` from the graph if it exists, and return its…",80,[[["self"],["nodeindex"]],["option"]]],[11,"remove_edge","","Remove an edge and return its edge weight, or `None` if it…",80,[[["self"],["edgeindex"]],["option"]]],[11,"neighbors","","Return an iterator of all nodes with an edge starting from…",80,[[["self"],["nodeindex"]],["neighbors"]]],[11,"neighbors_directed","","Return an iterator of all neighbors that have an edge…",80,[[["self"],["nodeindex"],["direction"]],["neighbors"]]],[11,"neighbors_undirected","","Return an iterator of all neighbors that have an edge…",80,[[["self"],["nodeindex"]],["neighbors"]]],[11,"edges","","Return an iterator of all edges of `a`.",80,[[["self"],["nodeindex"]],["edges"]]],[11,"edges_directed","","Return an iterator of all edges of `a`, in the specified…",80,[[["self"],["nodeindex"],["direction"]],["edges"]]],[11,"contains_edge","","Lookup if there is an edge from `a` to `b`.",80,[[["self"],["nodeindex"],["nodeindex"]],["bool"]]],[11,"find_edge","","Lookup an edge from `a` to `b`.",80,[[["self"],["nodeindex"],["nodeindex"]],["option",["edgeindex"]]]],[11,"find_edge_undirected","","Lookup an edge between `a` and `b`, in either direction.",80,[[["self"],["nodeindex"],["nodeindex"]],["option"]]],[11,"externals","","Return an iterator over either the nodes without edges to…",80,[[["self"],["direction"]],["externals"]]],[11,"node_indices","","Return an iterator over the node indices of the graph",80,[[["self"]],["nodeindices"]]],[11,"node_weights_mut","","Return an iterator yielding mutable access to all node…",80,[[["self"]],["nodeweightsmut"]]],[11,"edge_indices","","Return an iterator over the edge indices of the graph",80,[[["self"]],["edgeindices"]]],[11,"edge_references","","Create an iterator over all edges, in indexed order.",80,[[["self"]],["edgereferences"]]],[11,"edge_weights_mut","","Return an iterator yielding mutable access to all edge…",80,[[["self"]],["edgeweightsmut"]]],[11,"raw_nodes","","Access the internal node array.",80,N],[11,"raw_edges","","Access the internal edge array.",80,N],[11,"into_nodes_edges","","Convert the graph into a vector of Nodes and a vector of…",80,N],[11,"first_edge","","Accessor for data structure internals: the first edge in…",80,[[["self"],["nodeindex"],["direction"]],["option",["edgeindex"]]]],[11,"next_edge","","Accessor for data structure internals: the next edge for…",80,[[["self"],["edgeindex"],["direction"]],["option",["edgeindex"]]]],[11,"index_twice_mut","","Index the `Graph` by two indices, any combination of node…",80,N],[11,"reverse","","Reverse the direction of all edges",80,[[["self"]]]],[11,"clear","","Remove all nodes and edges",80,[[["self"]]]],[11,"clear_edges","","Remove all edges",80,[[["self"]]]],[11,"capacity","","Return the current node and edge capacity of the graph.",80,N],[11,"reserve_nodes","","Reserves capacity for at least `additional` more nodes to…",80,[[["self"],["usize"]]]],[11,"reserve_edges","","Reserves capacity for at least `additional` more edges to…",80,[[["self"],["usize"]]]],[11,"reserve_exact_nodes","","Reserves the minimum capacity for exactly `additional`…",80,[[["self"],["usize"]]]],[11,"reserve_exact_edges","","Reserves the minimum capacity for exactly `additional`…",80,[[["self"],["usize"]]]],[11,"shrink_to_fit_nodes","","Shrinks the capacity of the underlying nodes collection as…",80,[[["self"]]]],[11,"shrink_to_fit_edges","","Shrinks the capacity of the underlying edges collection as…",80,[[["self"]]]],[11,"shrink_to_fit","","Shrinks the capacity of the graph as much as possible.",80,[[["self"]]]],[11,"retain_nodes","","Keep all nodes that return `true` from the `visit`…",80,[[["self"],["f"]]]],[11,"retain_edges","","Keep all edges that return `true` from the `visit`…",80,[[["self"],["f"]]]],[11,"from_edges","","Create a new `Graph` from an iterable of edges.",80,[[["i"]],["self"]]],[11,"extend_with_edges","","Extend the graph from an iterable of edges.",80,[[["self"],["i"]]]],[11,"map","","Create a new `Graph` by mapping node and edge weights to…",80,[[["self"],["f"],["g"]],["graph"]]],[11,"filter_map","","Create a new `Graph` by mapping nodes and edges. A node or…",80,[[["self"],["f"],["g"]],["graph"]]],[11,"into_edge_type","","Convert the graph into either undirected or directed. No…",80,[[["self"]],["graph"]]],[11,"detach","","Return a “walker” object that can be used to step through…",82,[[["self"]],["walkneighbors"]]],[11,"next","","Step to the next edge and its endpoint node in the walk…",86,[[["self"],["graph"]],["option"]]],[11,"next_node","","",86,[[["self"],["graph"]],["option",["nodeindex"]]]],[11,"next_edge","","",86,[[["self"],["graph"]],["option",["edgeindex"]]]],[11,"weight","","Access the edge’s weight.",89,[[["self"]],["e"]]]],"paths":[[4,"Direction"],[3,"NodeFiltered"],[3,"EdgeFiltered"],[3,"Reversed"],[3,"Time"],[3,"Dfs"],[3,"DfsPostOrder"],[3,"Bfs"],[4,"DfsEvent"],[4,"Control"],[3,"Topo"],[3,"WalkerIter"],[8,"FilterNode"],[8,"FilterEdge"],[8,"ControlFlow"],[8,"Walker"],[8,"GraphBase"],[8,"IntoNeighbors"],[8,"IntoNeighborsDirected"],[8,"IntoEdges"],[8,"IntoEdgesDirected"],[8,"IntoNodeIdentifiers"],[8,"Data"],[8,"EdgeRef"],[8,"NodeRef"],[8,"IntoNodeReferences"],[8,"IntoEdgeReferences"],[8,"GraphProp"],[8,"NodeIndexable"],[8,"NodeCount"],[8,"VisitMap"],[8,"Visitable"],[8,"GetAdjacencyMatrix"],[4,"Element"],[8,"DataMap"],[8,"DataMapMut"],[8,"Build"],[8,"Create"],[8,"FromElements"],[8,"ElementIterator"],[3,"Dominators"],[8,"FloatMeasure"],[3,"DfsSpace"],[3,"Cycle"],[3,"Ptr"],[3,"GraphMap"],[4,"Config"],[3,"Dot"],[3,"UnionFind"],[3,"Csr"],[3,"EdgeReference"],[3,"Edge"],[3,"Node"],[8,"IndexType"],[8,"EdgeType"],[8,"IntoWeightedEdge"],[4,"Directed"],[4,"Undirected"],[3,"NodeFilteredNeighbors"],[3,"NodeFilteredNodes"],[3,"NodeFilteredEdgeReferences"],[3,"NodeFilteredEdges"],[3,"EdgeFilteredNeighbors"],[3,"EdgeFilteredEdges"],[3,"ReversedEdgeReference"],[3,"ReversedEdgeReferences"],[3,"FilterElements"],[3,"MinSpanningTree"],[3,"NegativeCycle"],[3,"DominatorsIter"],[3,"Nodes"],[3,"Neighbors"],[3,"NeighborsDirected"],[3,"Edges"],[3,"AllEdges"],[3,"AllEdgesMut"],[3,"NodeIdentifiers"],[3,"NodeReferences"],[3,"NodeIndex"],[3,"EdgeIndex"],[3,"Graph"],[3,"Externals"],[3,"Neighbors"],[3,"Edges"],[3,"NodeWeightsMut"],[3,"EdgeWeightsMut"],[3,"WalkNeighbors"],[3,"NodeIndices"],[3,"EdgeIndices"],[3,"EdgeReference"],[3,"NodeReferences"],[3,"EdgeReferences"],[3,"Frozen"],[3,"StableGraph"],[3,"NodeReferences"],[3,"EdgeReference"],[3,"Edges"],[3,"EdgeReferences"],[3,"Neighbors"],[3,"WalkNeighbors"],[3,"NodeIndices"],[3,"EdgeIndices"],[3,"EdgesNotSorted"],[3,"Edges"],[3,"EdgeReferences"],[3,"Neighbors"],[3,"NodeIdentifiers"]]};
searchIndex["priority_queue"]={"doc":"This crate provide a priority queue backed by an hashmap…","items":[[3,"PriorityQueue","priority_queue","A priority queue with efficient change function to change…",N,N],[11,"new","","Creates an empty `PriorityQueue`",0,[[],["priorityqueue"]]],[11,"with_capacity","","Creates an empty `PriorityQueue` with the specified…",0,[[["usize"]],["priorityqueue"]]],[11,"iter","","Returns an iterator in arbitrary order over the (item,…",0,[[["self"]],["iter"]]],[11,"iter_mut","","Return n iterator in arbitrary order over the (item,…",0,[[["self"]],["itermut"]]],[11,"peek","","Returns the couple (item, priority) with the greatest…",0,[[["self"]],["option"]]],[11,"peek_mut","","Returns the couple (item, priority) with the greatest…",0,[[["self"]],["option"]]],[11,"capacity","","Returns the number of elements the internal map can hold…",0,[[["self"]],["usize"]]],[11,"reserve","","Reserves capacity for at least `additional` more elements…",0,[[["self"],["usize"]]]],[11,"shrink_to_fit","","Shrinks the capacity of the internal data structures that…",0,[[["self"]]]],[11,"pop","","Removes the item with the greatest priority from the…",0,[[["self"]],["option"]]],[11,"push","","Insert the item-priority pair into the queue.",0,[[["self"],["i"],["p"]],["option"]]],[11,"change_priority","","Change the priority of an Item returning the old value of…",0,[[["self"],["q"],["p"]],["option"]]],[11,"change_priority_by","","Change the priority of an Item using the provided…",0,[[["self"],["q"],["f"]]]],[11,"get_priority","","Get the priority of an item, or `None`, if the item is not…",0,[[["self"],["q"]],["option"]]],[11,"get","","Get the couple (item, priority) of an arbitrary element,…",0,[[["self"],["q"]],["option"]]],[11,"get_mut","","Get the couple (item, priority) of an arbitrary element,…",0,[[["self"],["q"]],["option"]]],[11,"into_vec","","Returns the items not ordered",0,[[["self"]],["vec"]]],[11,"into_sorted_vec","","Implements an HeapSort",0,[[["self"]],["vec"]]],[11,"len","","Returns the number of elements in the priority queue.",0,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the priority queue contains no elements.",0,[[["self"]],["bool"]]],[11,"clear","","Drops all items from the priority queue",0,[[["self"]]]],[11,"append","","Move all items of the `other` queue to `self` ignoring the…",0,[[["self"],["self"]]]],[11,"into_sorted_iter","","Generates a new iterator from self that will extract the…",0,[[["self"]],["intosortediter"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into_iter","","",0,[[["self"]],["i"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"equivalent","","",0,[[["self"],["k"]],["bool"]]],[11,"eq","","",0,[[["self"],["priorityqueue"]],["bool"]]],[11,"from","","",0,[[["vec"]],["priorityqueue"]]],[11,"clone","","",0,[[["self"]],["priorityqueue"]]],[11,"into_iter","","",0,[[["self"]],["intoiter"]]],[11,"extend","","",0,[[["self"],["t"]]]],[11,"default","","",0,[[],["priorityqueue"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"from_iter","","",0,[[["it"]],["priorityqueue"]]]],"paths":[[3,"PriorityQueue"]]};
searchIndex["proc_macro2"]={"doc":"A \"shim crate\" intended to multiplex the [`proc_macro`]…","items":[[3,"TokenStream","proc_macro2","An abstract stream of tokens, or more concretely a…",N,N],[3,"LexError","","Error returned from `TokenStream::from_str`.",N,N],[3,"Span","","A region of source code, along with macro expansion…",N,N],[3,"Group","","A delimited token stream.",N,N],[3,"Punct","","An `Punct` is an single punctuation character like `+`,…",N,N],[3,"Ident","","A word of Rust code, which may be a keyword or legal…",N,N],[3,"Literal","","A literal string (`\"hello\"`), byte string (`b\"hello\"`),…",N,N],[4,"TokenTree","","A single token or a delimited sequence of token trees…",N,N],[13,"Group","","A token stream surrounded by bracket delimiters.",0,N],[13,"Ident","","An identifier.",0,N],[13,"Punct","","A single punctuation character (`+`, `,`, `$`, etc.).",0,N],[13,"Literal","","A literal character (`'a'`), string (`\"hello\"`), number…",0,N],[4,"Delimiter","","Describes how a sequence of token trees is delimited.",N,N],[13,"Parenthesis","","`( ... )`",1,N],[13,"Brace","","`{ ... }`",1,N],[13,"Bracket","","`[ ... ]`",1,N],[13,"None","","`Ø ... Ø`",1,N],[4,"Spacing","","Whether an `Punct` is followed immediately by another…",N,N],[13,"Alone","","E.g. `+` is `Alone` in `+ =`, `+ident` or `+()`.",2,N],[13,"Joint","","E.g. `+` is `Joint` in `+=` or `'#`.",2,N],[0,"token_stream","","Public implementation details for the `TokenStream` type,…",N,N],[3,"IntoIter","proc_macro2::token_stream","An iterator over `TokenStream`'s `TokenTree`s.",N,N],[11,"new","proc_macro2","Returns an empty `TokenStream` containing no token trees.",3,[[],["tokenstream"]]],[11,"empty","","",3,[[],["tokenstream"]]],[11,"is_empty","","Checks if this `TokenStream` is empty.",3,[[["self"]],["bool"]]],[11,"call_site","","The span of the invocation of the current procedural macro.",4,[[],["span"]]],[11,"span","","Returns the span of this tree, delegating to the `span`…",0,[[["self"]],["span"]]],[11,"set_span","","Configures the span for only this token.",0,[[["self"],["span"]]]],[11,"new","","Creates a new `Group` with the given delimiter and token…",5,[[["delimiter"],["tokenstream"]],["group"]]],[11,"delimiter","","Returns the delimiter of this `Group`",5,[[["self"]],["delimiter"]]],[11,"stream","","Returns the `TokenStream` of tokens that are delimited in…",5,[[["self"]],["tokenstream"]]],[11,"span","","Returns the span for the delimiters of this token stream,…",5,[[["self"]],["span"]]],[11,"set_span","","Configures the span for this `Group`'s delimiters, but not…",5,[[["self"],["span"]]]],[11,"new","","Creates a new `Punct` from the given character and spacing.",6,[[["char"],["spacing"]],["punct"]]],[11,"as_char","","Returns the value of this punctuation character as `char`.",6,[[["self"]],["char"]]],[11,"spacing","","Returns the spacing of this punctuation character,…",6,[[["self"]],["spacing"]]],[11,"span","","Returns the span for this punctuation character.",6,[[["self"]],["span"]]],[11,"set_span","","Configure the span for this punctuation character.",6,[[["self"],["span"]]]],[11,"new","","Creates a new `Ident` with the given `string` as well as…",7,[[["str"],["span"]],["ident"]]],[11,"span","","Returns the span of this `Ident`.",7,[[["self"]],["span"]]],[11,"set_span","","Configures the span of this `Ident`, possibly changing its…",7,[[["self"],["span"]]]],[11,"u8_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u8"]],["literal"]]],[11,"u16_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u16"]],["literal"]]],[11,"u32_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u32"]],["literal"]]],[11,"u64_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u64"]],["literal"]]],[11,"usize_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["usize"]],["literal"]]],[11,"i8_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i8"]],["literal"]]],[11,"i16_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i16"]],["literal"]]],[11,"i32_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i32"]],["literal"]]],[11,"i64_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i64"]],["literal"]]],[11,"isize_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["isize"]],["literal"]]],[11,"u128_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u128"]],["literal"]]],[11,"i128_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i128"]],["literal"]]],[11,"u8_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u8"]],["literal"]]],[11,"u16_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u16"]],["literal"]]],[11,"u32_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u32"]],["literal"]]],[11,"u64_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u64"]],["literal"]]],[11,"usize_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["usize"]],["literal"]]],[11,"i8_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i8"]],["literal"]]],[11,"i16_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i16"]],["literal"]]],[11,"i32_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i32"]],["literal"]]],[11,"i64_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i64"]],["literal"]]],[11,"isize_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["isize"]],["literal"]]],[11,"u128_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u128"]],["literal"]]],[11,"i128_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i128"]],["literal"]]],[11,"f64_unsuffixed","","",8,[[["f64"]],["literal"]]],[11,"f64_suffixed","","",8,[[["f64"]],["literal"]]],[11,"f32_unsuffixed","","Creates a new unsuffixed floating-point literal.",8,[[["f32"]],["literal"]]],[11,"f32_suffixed","","",8,[[["f32"]],["literal"]]],[11,"string","","",8,[[["str"]],["literal"]]],[11,"character","","",8,[[["char"]],["literal"]]],[11,"byte_string","","",8,N],[11,"span","","",8,[[["self"]],["span"]]],[11,"set_span","","",8,[[["self"],["span"]]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into_iter","","",3,[[["self"]],["i"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","proc_macro2::token_stream","",10,[[["t"]],["t"]]],[11,"into_iter","","",10,[[["self"]],["i"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"cmp","proc_macro2","",7,[[["self"],["ident"]],["ordering"]]],[11,"eq","","",1,[[["self"],["delimiter"]],["bool"]]],[11,"eq","","",2,[[["self"],["spacing"]],["bool"]]],[11,"eq","","",7,[[["self"],["ident"]],["bool"]]],[11,"eq","","",7,[[["self"],["t"]],["bool"]]],[11,"from","","",4,[[["span"]],["span"]]],[11,"from","","",3,[[["tokenstream"]],["tokenstream"]]],[11,"from","","",0,[[["group"]],["tokentree"]]],[11,"from","","",0,[[["ident"]],["tokentree"]]],[11,"from","","",0,[[["punct"]],["tokentree"]]],[11,"from","","",0,[[["literal"]],["tokentree"]]],[11,"clone","","",3,[[["self"]],["tokenstream"]]],[11,"clone","","",4,[[["self"]],["span"]]],[11,"clone","","",0,[[["self"]],["tokentree"]]],[11,"clone","","",5,[[["self"]],["group"]]],[11,"clone","","",1,[[["self"]],["delimiter"]]],[11,"clone","","",6,[[["self"]],["punct"]]],[11,"clone","","",2,[[["self"]],["spacing"]]],[11,"clone","","",7,[[["self"]],["ident"]]],[11,"clone","","",8,[[["self"]],["literal"]]],[11,"into_iter","","",3,[[["self"]],["intoiter"]]],[11,"extend","","",3,[[["self"],["i"]]]],[11,"extend","","",3,[[["self"],["i"]]]],[11,"partial_cmp","","",7,[[["self"],["ident"]],["option",["ordering"]]]],[11,"next","proc_macro2::token_stream","",10,[[["self"]],["option",["tokentree"]]]],[11,"default","proc_macro2","",3,[[],["self"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","proc_macro2::token_stream","",10,[[["self"],["formatter"]],["result"]]],[11,"from_str","proc_macro2","",3,[[["str"]],["result",["tokenstream","lexerror"]]]],[11,"hash","","",7,[[["self"],["h"]]]],[11,"from_iter","","",3,[[["i"]],["self"]]],[11,"from_iter","","",3,[[["i"]],["self"]]]],"paths":[[4,"TokenTree"],[4,"Delimiter"],[4,"Spacing"],[3,"TokenStream"],[3,"Span"],[3,"Group"],[3,"Punct"],[3,"Ident"],[3,"Literal"],[3,"LexError"],[3,"IntoIter"]]};
searchIndex["quick_error"]={"doc":"A macro which makes errors easy to write","items":[[3,"Context","quick_error","Generic context type",N,N],[12,"0","","",0,N],[12,"1","","",0,N],[8,"ResultExt","","Result extension trait adding a `context` method",N,N],[10,"context","","The method is use to add context information to current…",1,[[["self"],["x"]],["result",["context"]]]],[14,"quick_error","","Main macro that does all the work",N,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]]],"paths":[[3,"Context"],[8,"ResultExt"]]};
searchIndex["quote"]={"doc":"This crate provides the [`quote!`] macro for turning Rust…","items":[[8,"TokenStreamExt","quote","TokenStream extension trait with methods for appending…",N,N],[10,"append","","",0,[[["self"],["u"]]]],[10,"append_all","","",0,[[["self"],["i"]]]],[10,"append_separated","","",0,[[["self"],["i"],["u"]]]],[10,"append_terminated","","",0,[[["self"],["i"],["u"]]]],[8,"ToTokens","","Types that can be interpolated inside a [`quote!`]…",N,N],[10,"to_tokens","","Write `self` to the given `TokenStream`.",1,[[["self"],["tokenstream"]]]],[11,"into_token_stream","","Convert `self` directly into a `TokenStream` object.",1,[[["self"]],["tokenstream"]]],[14,"quote","","The whole point.",N,N],[14,"quote_spanned","","Same as `quote!`, but applies a given span to all tokens…",N,N],[11,"into_token_stream","","Convert `self` directly into a `TokenStream` object.",1,[[["self"]],["tokenstream"]]]],"paths":[[8,"TokenStreamExt"],[8,"ToTokens"]]};
searchIndex["rand"]={"doc":"Utilities for random number generation","items":[[8,"RngCore","rand","The core of a random number generator.",N,N],[10,"next_u32","","Return the next random `u32`.",0,[[["self"]],["u32"]]],[10,"next_u64","","Return the next random `u64`.",0,[[["self"]],["u64"]]],[10,"fill_bytes","","Fill `dest` with random data.",0,N],[10,"try_fill_bytes","","Fill `dest` entirely with random data.",0,N],[8,"CryptoRng","","A marker trait used to indicate that an [`RngCore`] or…",N,N],[8,"SeedableRng","","A random number generator that can be explicitly seeded.",N,N],[16,"Seed","","Seed type, which is restricted to types…",1,N],[10,"from_seed","","Create a new PRNG using the given seed.",1,N],[11,"seed_from_u64","","Create a new PRNG using a `u64` seed.",1,[[["u64"]],["self"]]],[11,"from_rng","","Create a new PRNG seeded from another `Rng`.",1,[[["r"]],["result",["error"]]]],[4,"ErrorKind","","Error kind which can be matched over.",N,N],[13,"Unavailable","","Feature is not available; not recoverable.",2,N],[13,"Unexpected","","General failure; there may be a chance of recovery on retry.",2,N],[13,"Transient","","A transient failure which likely can be resolved or worked…",2,N],[13,"NotReady","","Not ready yet: recommended to try again a little later.",2,N],[3,"Error","","Error type of random number generators",N,N],[12,"kind","","The error kind",3,N],[12,"msg","","The error message",3,N],[5,"thread_rng","","Retrieve the lazily-initialized thread-local random number…",N,[[],["threadrng"]]],[5,"random","","Generates a random value using the thread-local random…",N,[[],["t"]]],[0,"distributions","","Generating random samples from probability distributions.",N,N],[3,"Alphanumeric","rand::distributions","Sample a `char`, uniformly distributed over ASCII letters…",N,N],[3,"Uniform","","Sample values uniformly between two bounds.",N,N],[3,"OpenClosed01","","A distribution to sample floating point numbers uniformly…",N,N],[3,"Open01","","A distribution to sample floating point numbers uniformly…",N,N],[3,"Bernoulli","","The Bernoulli distribution.",N,N],[3,"WeightedIndex","","A distribution using weighted sampling to pick a…",N,N],[3,"UnitSphereSurface","","Samples uniformly from the surface of the unit sphere in…",N,N],[3,"UnitCircle","","Samples uniformly from the edge of the unit circle in two…",N,N],[3,"Gamma","","The Gamma distribution `Gamma(shape, scale)` distribution.",N,N],[3,"ChiSquared","","The chi-squared distribution `χ²(k)`, where `k` is the…",N,N],[3,"FisherF","","The Fisher F distribution `F(m, n)`.",N,N],[3,"StudentT","","The Student t distribution, `t(nu)`, where `nu` is the…",N,N],[3,"Beta","","The Beta distribution with shape parameters `alpha` and…",N,N],[3,"Normal","","The normal distribution `N(mean, std_dev**2)`.",N,N],[3,"LogNormal","","The log-normal distribution `ln N(mean, std_dev**2)`.",N,N],[3,"StandardNormal","","Samples floating-point numbers according to the normal…",N,N],[3,"Exp","","The exponential distribution `Exp(lambda)`.",N,N],[3,"Exp1","","Samples floating-point numbers according to the…",N,N],[3,"Pareto","","Samples floating-point numbers according to the Pareto…",N,N],[3,"Poisson","","The Poisson distribution `Poisson(lambda)`.",N,N],[3,"Binomial","","The binomial distribution `Binomial(n, p)`.",N,N],[3,"Cauchy","","The Cauchy distribution `Cauchy(median, scale)`.",N,N],[3,"Dirichlet","","The dirichelet distribution `Dirichlet(alpha)`.",N,N],[3,"Triangular","","The triangular distribution.",N,N],[3,"Weibull","","Samples floating-point numbers according to the Weibull…",N,N],[3,"DistIter","","An iterator that generates random values of `T` with…",N,N],[3,"Standard","","A generic random value distribution, implemented for many…",N,N],[3,"Weighted","","A value with a particular weight for use with…",N,N],[12,"weight","","The numerical weight of this item",4,N],[12,"item","","The actual item which is being weighted",4,N],[3,"WeightedChoice","","A distribution that selects from a finite collection of…",N,N],[4,"WeightedError","","Error type returned from `WeightedIndex::new`.",N,N],[13,"NoItem","","The provided iterator contained no items.",5,N],[13,"NegativeWeight","","A weight lower than zero was used.",5,N],[13,"AllWeightsZero","","All items in the provided iterator had a weight of zero.",5,N],[0,"uniform","","A distribution uniformly sampling numbers within a given…",N,N],[3,"Uniform","rand::distributions::uniform","Sample values uniformly between two bounds.",N,N],[3,"UniformInt","","The back-end implementing [`UniformSampler`] for integer…",N,N],[3,"UniformFloat","","The back-end implementing [`UniformSampler`] for…",N,N],[3,"UniformDuration","","The back-end implementing [`UniformSampler`] for `Duration`.",N,N],[8,"SampleUniform","","Helper trait for creating objects using the correct…",N,N],[16,"Sampler","","The `UniformSampler` implementation supporting type `X`.",6,N],[8,"UniformSampler","","Helper trait handling actual uniform sampling.",N,N],[16,"X","","The type sampled by this implementation.",7,N],[10,"new","","Construct self, with inclusive lower bound and exclusive…",7,[[["b1"],["b2"]],["self"]]],[10,"new_inclusive","","Construct self, with inclusive bounds `[low, high]`.",7,[[["b1"],["b2"]],["self"]]],[10,"sample","","Sample a value.",7,N],[11,"sample_single","","Sample a single value uniformly from a range with…",7,N],[8,"SampleBorrow","","Helper trait similar to [`Borrow`] but implemented only…",N,N],[10,"borrow","","Immutably borrows from an owned value. See…",8,[[["self"]],["borrowed"]]],[11,"new","","Create a new `Uniform` instance which samples uniformly…",9,[[["b1"],["b2"]],["uniform"]]],[11,"new_inclusive","","Create a new `Uniform` instance which samples uniformly…",9,[[["b1"],["b2"]],["uniform"]]],[11,"new","rand::distributions","Construct a new `Bernoulli` with the given probability of…",10,[[["f64"]],["bernoulli"]]],[11,"from_ratio","","Construct a new `Bernoulli` with the probability of…",10,[[["u32"],["u32"]],["bernoulli"]]],[11,"new","","Creates a new a `WeightedIndex` [`Distribution`] using the…",11,[[["i"]],["result",["weightedindex","weightederror"]]]],[11,"new","","Construct a new `UnitSphereSurface` distribution.",12,[[],["unitspheresurface"]]],[11,"new","","Construct a new `UnitCircle` distribution.",13,[[],["unitcircle"]]],[11,"new","","Construct an object representing the `Gamma(shape, scale)`…",14,[[["f64"],["f64"]],["gamma"]]],[11,"new","","Create a new chi-squared distribution with…",15,[[["f64"]],["chisquared"]]],[11,"new","","Create a new `FisherF` distribution, with the given…",16,[[["f64"],["f64"]],["fisherf"]]],[11,"new","","Create a new Student t distribution with `n` degrees of…",17,[[["f64"]],["studentt"]]],[11,"new","","Construct an object representing the `Beta(alpha, beta)`…",18,[[["f64"],["f64"]],["beta"]]],[11,"new","","Construct a new `Normal` distribution with the given mean…",19,[[["f64"],["f64"]],["normal"]]],[11,"new","","Construct a new `LogNormal` distribution with the given…",20,[[["f64"],["f64"]],["lognormal"]]],[11,"new","","Construct a new `Exp` with the given shape parameter…",21,[[["f64"]],["exp"]]],[11,"new","","Construct a new Pareto distribution with given `scale` and…",22,[[["f64"],["f64"]],["pareto"]]],[11,"new","","Construct a new `Poisson` with the given shape parameter…",23,[[["f64"]],["poisson"]]],[11,"new","","Construct a new `Binomial` with the given shape parameters…",24,[[["u64"],["f64"]],["binomial"]]],[11,"new","","Construct a new `Cauchy` with the given shape parameters…",25,[[["f64"],["f64"]],["cauchy"]]],[11,"new","","Construct a new `Dirichlet` with the given alpha parameter…",26,[[["v"]],["dirichlet"]]],[11,"new_with_param","","Construct a new `Dirichlet` with the given shape parameter…",26,[[["f64"],["usize"]],["dirichlet"]]],[11,"new","","Construct a new `Triangular` with minimum `min`, maximum…",27,[[["f64"],["f64"],["f64"]],["triangular"]]],[11,"new","","Construct a new `Weibull` distribution with given `scale`…",28,[[["f64"],["f64"]],["weibull"]]],[8,"Distribution","","Types (distributions) that can be used to create a random…",N,N],[10,"sample","","Generate a random value of `T`, using `rng` as the source…",29,[[["self"],["r"]],["t"]]],[11,"sample_iter","","Create an iterator that generates random values of `T`,…",29,[[["self"],["r"]],["distiter"]]],[11,"new","","Create a new `WeightedChoice`.",30,N],[0,"prelude","rand","Convenience re-export of common members",N,N],[0,"prng","","Pseudo-random number generators.",N,N],[0,"rngs","","Random number generators and adapters for common usage:",N,N],[3,"JitterRng","rand::rngs","A true random number generator based on jitter in the CPU…",N,N],[3,"EntropyRng","","An interface returning random data from external…",N,N],[3,"SmallRng","","An RNG recommended when small state, cheap initialization…",N,N],[3,"StdRng","","The standard RNG. The PRNG algorithm in `StdRng` is chosen…",N,N],[3,"ThreadRng","","The type returned by [`thread_rng`], essentially just a…",N,N],[3,"OsRng","","A random number generator that retrieves randomness…",N,N],[4,"TimerError","","An error that can occur when [`JitterRng::test_timer`]…",N,N],[13,"NoTimer","","No timer available.",31,N],[13,"CoarseTimer","","Timer too coarse to use as an entropy source.",31,N],[13,"NotMonotonic","","Timer is not monotonically increasing.",31,N],[13,"TinyVariantions","","Variations of deltas of time too small.",31,N],[13,"TooManyStuck","","Too many stuck results (indicating no added entropy).",31,N],[0,"adapter","","Wrappers / adapters forming RNGs",N,N],[3,"ReadRng","rand::rngs::adapter","An RNG that reads random bytes straight from any type…",N,N],[3,"ReseedingRng","","A wrapper around any PRNG that implements…",N,N],[11,"new","","Create a new `ReadRng` from a `Read`.",32,[[["r"]],["readrng"]]],[11,"new","","Create a new `ReseedingRng` from an existing PRNG,…",33,[[["r"],["u64"],["rsdr"]],["self"]]],[11,"reseed","","Reseed the internal PRNG.",33,[[["self"]],["result",["error"]]]],[11,"new","rand::rngs","Create a new `EntropyRng`.",34,[[],["self"]]],[11,"new","","Create a new `JitterRng`. Makes use of `std::time` for a…",35,[[],["result",["jitterrng","timererror"]]]],[11,"new_with_timer","","Create a new `JitterRng`. A custom timer can be supplied,…",35,N],[11,"set_rounds","","Configures how many rounds are used to generate each…",35,[[["self"],["u8"]]]],[11,"test_timer","","Basic quality tests on the timer, by measuring CPU timing…",35,[[["self"]],["result",["u8","timererror"]]]],[11,"timer_stats","","Statistical test: return the timer delta of one normal run…",35,[[["self"],["bool"]],["i64"]]],[0,"mock","","Mock random number generator",N,N],[3,"StepRng","rand::rngs::mock","A simple implementation of `RngCore` for testing purposes.",N,N],[11,"new","","Create a `StepRng`, yielding an arithmetic sequence…",36,[[["u64"],["u64"]],["self"]]],[11,"new","rand::rngs","Create a new `OsRng`.",37,[[],["result",["osrng","error"]]]],[0,"seq","rand","Functions for randomly accessing and sampling sequences.",N,N],[3,"SliceChooseIter","rand::seq","Iterator over multiple choices, as returned by…",N,N],[5,"sample_iter","","Randomly sample `amount` elements from a finite iterator.",N,[[["r"],["i"],["usize"]],["result",["vec","vec"]]]],[5,"sample_slice","","Randomly sample exactly `amount` values from `slice`.",N,N],[5,"sample_slice_ref","","Randomly sample exactly `amount` references from `slice`.",N,N],[0,"index","","Index sampling",N,N],[4,"IndexVec","rand::seq::index","A vector of indices.",N,N],[4,"IndexVecIter","","Return type of `IndexVec::iter`.",N,N],[4,"IndexVecIntoIter","","Return type of `IndexVec::into_iter`.",N,N],[5,"sample","","Randomly sample exactly `amount` distinct indices from…",N,[[["r"],["usize"],["usize"]],["indexvec"]]],[11,"len","","Returns the number of indices",38,[[["self"]],["usize"]]],[11,"index","","Return the value at the given `index`.",38,[[["self"],["usize"]],["usize"]]],[11,"into_vec","","Return result as a `Vec<usize>`. Conversion may or may not…",38,[[["self"]],["vec",["usize"]]]],[11,"iter","","Iterate over the indices as a sequence of `usize` values",38,[[["self"]],["indexveciter"]]],[11,"into_iter","","Convert into an iterator over the indices as a sequence of…",38,[[["self"]],["indexvecintoiter"]]],[8,"SliceRandom","rand::seq","Extension trait on slices, providing random mutation and…",N,N],[16,"Item","","The element type.",39,N],[10,"choose","","Returns a reference to one random element of the slice, or…",39,[[["self"],["r"]],["option"]]],[10,"choose_mut","","Returns a mutable reference to one random element of the…",39,[[["self"],["r"]],["option"]]],[10,"choose_multiple","","Produces an iterator that chooses `amount` elements from…",39,[[["self"],["r"],["usize"]],["slicechooseiter"]]],[10,"choose_weighted","","Similar to [`choose`], where the likelihood of each…",39,[[["self"],["r"],["f"]],["result",["weightederror"]]]],[10,"choose_weighted_mut","","Similar to [`choose_mut`], where the likelihood of each…",39,[[["self"],["r"],["f"]],["result",["weightederror"]]]],[10,"shuffle","","Shuffle a mutable slice in place.",39,[[["self"],["r"]]]],[10,"partial_shuffle","","Shuffle a slice in place, but exit early.",39,N],[8,"IteratorRandom","","Extension trait on iterators, providing random sampling…",N,N],[11,"choose","","Choose one element at random from the iterator. If you…",40,[[["self"],["r"]],["option"]]],[11,"choose_multiple_fill","","Collects `amount` values at random from the iterator into…",40,N],[11,"choose_multiple","","Collects `amount` values at random from the iterator into…",40,[[["self"],["r"],["usize"]],["vec"]]],[8,"Rng","rand","An automatically-implemented extension trait on…",N,N],[11,"gen","","Return a random value supporting the [`Standard`]…",41,[[["self"]],["t"]]],[11,"gen_range","","Generate a random value in the range [`low`, `high`), i.e.…",41,[[["self"],["b1"],["b2"]],["t"]]],[11,"sample","","Sample a new value, using the given distribution.",41,[[["self"],["d"]],["t"]]],[11,"sample_iter","","Create an iterator that generates values using the given…",41,[[["self"],["d"]],["distiter"]]],[11,"fill","","Fill `dest` entirely with random bytes (uniform value…",41,[[["self"],["t"]]]],[11,"try_fill","","Fill `dest` entirely with random bytes (uniform value…",41,[[["self"],["t"]],["result",["error"]]]],[11,"gen_bool","","Return a bool with a probability `p` of being true.",41,[[["self"],["f64"]],["bool"]]],[11,"gen_ratio","","Return a bool with a probability of…",41,[[["self"],["u32"],["u32"]],["bool"]]],[11,"choose","","Return a random element from `values`.",41,N],[11,"choose_mut","","Return a mutable pointer to a random element from `values`.",41,N],[11,"shuffle","","Shuffle a mutable slice in place.",41,N],[8,"AsByteSliceMut","","Trait for casting types to byte slices",N,N],[10,"as_byte_slice_mut","","Return a mutable reference to self as a byte slice",42,N],[10,"to_le","","Call `to_le` on each element (i.e. byte-swap on Big Endian…",42,[[["self"]]]],[8,"FromEntropy","","A convenience extension to [`SeedableRng`] allowing…",N,N],[10,"from_entropy","","Creates a new instance, automatically seeded with fresh…",43,[[],["self"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","rand::distributions","",44,[[["t"]],["t"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"from","rand::distributions::uniform","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","rand::distributions","",45,[[["t"]],["t"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,N],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,N],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,N],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,N],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,N],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,N],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into_iter","","",49,[[["self"]],["i"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,N],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","rand::distributions::uniform","",51,[[["t"]],["t"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,N],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,N],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,N],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"from","rand::rngs","",35,[[["t"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,N],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"from_entropy","","",54,[[],["r"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,N],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"from_entropy","","",55,[[],["r"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,N],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,N],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,N],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,N],[11,"to_string","","",31,[[["self"]],["string"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"from","rand::rngs::adapter","",32,[[["t"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,N],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"from","rand::rngs::mock","",36,[[["t"]],["t"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,N],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"from","rand::seq","",57,[[["t"]],["t"]]],[11,"into_iter","","",57,[[["self"]],["i"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"from","rand::seq::index","",38,[[["t"]],["t"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,N],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into_iter","","",58,[[["self"]],["i"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into_iter","","",59,[[["self"]],["i"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,N],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"eq","rand","",2,[[["self"],["errorkind"]],["bool"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result",["error"]]]],[11,"description","","",3,[[["self"]],["str"]]],[11,"cause","","",3,[[["self"]],["option",["error"]]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result",["error"]]]],[11,"read","","",0,N],[11,"clone","","",2,[[["self"]],["errorkind"]]],[11,"new","rand::distributions::uniform","",51,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",51,[[["b1"],["b2"]],["self"]]],[11,"sample","","",51,N],[11,"sample_single","","",51,N],[11,"new","","",51,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",51,[[["b1"],["b2"]],["self"]]],[11,"sample","","",51,N],[11,"sample_single","","",51,N],[11,"new","","",51,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",51,[[["b1"],["b2"]],["self"]]],[11,"sample","","",51,N],[11,"sample_single","","",51,N],[11,"new","","",51,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",51,[[["b1"],["b2"]],["self"]]],[11,"sample","","",51,N],[11,"sample_single","","",51,N],[11,"new","","",51,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",51,[[["b1"],["b2"]],["self"]]],[11,"sample","","",51,N],[11,"sample_single","","",51,N],[11,"new","","",51,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",51,[[["b1"],["b2"]],["self"]]],[11,"sample","","",51,N],[11,"sample_single","","",51,N],[11,"new","","",51,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",51,[[["b1"],["b2"]],["self"]]],[11,"sample","","",51,N],[11,"sample_single","","",51,N],[11,"new","","",51,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",51,[[["b1"],["b2"]],["self"]]],[11,"sample","","",51,N],[11,"sample_single","","",51,N],[11,"new","","",51,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",51,[[["b1"],["b2"]],["self"]]],[11,"sample","","",51,N],[11,"sample_single","","",51,N],[11,"new","","",51,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",51,[[["b1"],["b2"]],["self"]]],[11,"sample","","",51,N],[11,"sample_single","","",51,N],[11,"new","","",51,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",51,[[["b1"],["b2"]],["self"]]],[11,"sample","","",51,N],[11,"sample_single","","",51,N],[11,"new","","",51,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",51,[[["b1"],["b2"]],["self"]]],[11,"sample","","",51,N],[11,"sample_single","","",51,N],[11,"new","","",52,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",52,[[["b1"],["b2"]],["self"]]],[11,"sample","","",52,N],[11,"sample_single","","",52,N],[11,"new","","",52,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",52,[[["b1"],["b2"]],["self"]]],[11,"sample","","",52,N],[11,"sample_single","","",52,N],[11,"new","","",53,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",53,[[["b1"],["b2"]],["self"]]],[11,"sample","","",53,[[["self"],["r"]],["duration"]]],[11,"sample","","",9,[[["self"],["r"]],["x"]]],[11,"sample","rand::distributions","",10,[[["self"],["r"]],["bool"]]],[11,"sample","","",11,[[["self"],["r"]],["usize"]]],[11,"sample","","",12,N],[11,"sample","","",13,N],[11,"sample","","",14,[[["self"],["r"]],["f64"]]],[11,"sample","","",15,[[["self"],["r"]],["f64"]]],[11,"sample","","",16,[[["self"],["r"]],["f64"]]],[11,"sample","","",17,[[["self"],["r"]],["f64"]]],[11,"sample","","",18,[[["self"],["r"]],["f64"]]],[11,"sample","","",47,[[["self"],["r"]],["f64"]]],[11,"sample","","",19,[[["self"],["r"]],["f64"]]],[11,"sample","","",20,[[["self"],["r"]],["f64"]]],[11,"sample","","",48,[[["self"],["r"]],["f64"]]],[11,"sample","","",21,[[["self"],["r"]],["f64"]]],[11,"sample","","",22,[[["self"],["r"]],["f64"]]],[11,"sample","","",23,[[["self"],["r"]],["u64"]]],[11,"sample","","",24,[[["self"],["r"]],["u64"]]],[11,"sample","","",25,[[["self"],["r"]],["f64"]]],[11,"sample","","",26,[[["self"],["r"]],["vec",["f64"]]]],[11,"sample","","",27,[[["self"],["r"]],["f64"]]],[11,"sample","","",28,[[["self"],["r"]],["f64"]]],[11,"sample","","",50,[[["self"],["r"]],["f32"]]],[11,"sample","","",45,[[["self"],["r"]],["f32"]]],[11,"sample","","",46,[[["self"],["r"]],["f32"]]],[11,"sample","","",50,[[["self"],["r"]],["f64"]]],[11,"sample","","",45,[[["self"],["r"]],["f64"]]],[11,"sample","","",46,[[["self"],["r"]],["f64"]]],[11,"sample","","",50,[[["self"],["r"]],["u8"]]],[11,"sample","","",50,[[["self"],["r"]],["u16"]]],[11,"sample","","",50,[[["self"],["r"]],["u32"]]],[11,"sample","","",50,[[["self"],["r"]],["u64"]]],[11,"sample","","",50,[[["self"],["r"]],["u128"]]],[11,"sample","","",50,[[["self"],["r"]],["usize"]]],[11,"sample","","",50,[[["self"],["r"]],["i8"]]],[11,"sample","","",50,[[["self"],["r"]],["i16"]]],[11,"sample","","",50,[[["self"],["r"]],["i32"]]],[11,"sample","","",50,[[["self"],["r"]],["i64"]]],[11,"sample","","",50,[[["self"],["r"]],["i128"]]],[11,"sample","","",50,[[["self"],["r"]],["isize"]]],[11,"sample","","",50,[[["self"],["r"]],["char"]]],[11,"sample","","",44,[[["self"],["r"]],["char"]]],[11,"sample","","",50,[[["self"],["r"]],["bool"]]],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,[[["self"],["r"]],["option"]]],[11,"sample","","",50,[[["self"],["r"]],["wrapping"]]],[11,"sample","","",30,[[["self"],["r"]],["t"]]],[11,"eq","","",5,[[["self"],["weightederror"]],["bool"]]],[11,"eq","rand::rngs","",31,[[["self"],["timererror"]],["bool"]]],[11,"eq","rand::seq::index","",38,[[["self"],["indexvec"]],["bool"]]],[11,"from","rand::distributions::uniform","",9,[[["range"]],["uniform"]]],[11,"from","","",9,[[["rangeinclusive"]],["uniform"]]],[11,"from","rand","",3,[[["timererror"]],["error"]]],[11,"from","rand::seq::index","",38,[[["vec",["u32"]]],["self"]]],[11,"from","","",38,[[["vec",["usize"]]],["self"]]],[11,"clone","rand::distributions::uniform","",9,[[["self"]],["uniform"]]],[11,"clone","","",51,[[["self"]],["uniformint"]]],[11,"clone","","",52,[[["self"]],["uniformfloat"]]],[11,"clone","","",53,[[["self"]],["uniformduration"]]],[11,"clone","rand::distributions","",10,[[["self"]],["bernoulli"]]],[11,"clone","","",11,[[["self"]],["weightedindex"]]],[11,"clone","","",5,[[["self"]],["weightederror"]]],[11,"clone","","",12,[[["self"]],["unitspheresurface"]]],[11,"clone","","",13,[[["self"]],["unitcircle"]]],[11,"clone","","",14,[[["self"]],["gamma"]]],[11,"clone","","",15,[[["self"]],["chisquared"]]],[11,"clone","","",16,[[["self"]],["fisherf"]]],[11,"clone","","",17,[[["self"]],["studentt"]]],[11,"clone","","",18,[[["self"]],["beta"]]],[11,"clone","","",47,[[["self"]],["standardnormal"]]],[11,"clone","","",19,[[["self"]],["normal"]]],[11,"clone","","",20,[[["self"]],["lognormal"]]],[11,"clone","","",48,[[["self"]],["exp1"]]],[11,"clone","","",21,[[["self"]],["exp"]]],[11,"clone","","",22,[[["self"]],["pareto"]]],[11,"clone","","",23,[[["self"]],["poisson"]]],[11,"clone","","",24,[[["self"]],["binomial"]]],[11,"clone","","",25,[[["self"]],["cauchy"]]],[11,"clone","","",26,[[["self"]],["dirichlet"]]],[11,"clone","","",27,[[["self"]],["triangular"]]],[11,"clone","","",28,[[["self"]],["weibull"]]],[11,"clone","","",45,[[["self"]],["openclosed01"]]],[11,"clone","","",46,[[["self"]],["open01"]]],[11,"clone","","",50,[[["self"]],["standard"]]],[11,"clone","","",4,[[["self"]],["weighted"]]],[11,"clone","rand::rngs::adapter","",33,[[["self"]],["reseedingrng"]]],[11,"clone","rand::rngs","",35,[[["self"]],["jitterrng"]]],[11,"clone","","",31,[[["self"]],["timererror"]]],[11,"clone","rand::rngs::mock","",36,[[["self"]],["steprng"]]],[11,"clone","rand::rngs","",54,[[["self"]],["smallrng"]]],[11,"clone","","",55,[[["self"]],["stdrng"]]],[11,"clone","","",56,[[["self"]],["threadrng"]]],[11,"clone","","",37,[[["self"]],["osrng"]]],[11,"clone","rand::seq::index","",38,[[["self"]],["indexvec"]]],[11,"clone","","",59,[[["self"]],["indexvecintoiter"]]],[11,"len","rand::seq","",57,[[["self"]],["usize"]]],[11,"next","rand::distributions","",49,[[["self"]],["option"]]],[11,"size_hint","","",49,N],[11,"next","rand::seq::index","",58,[[["self"]],["option",["usize"]]]],[11,"size_hint","","",58,N],[11,"next","","",59,[[["self"]],["option"]]],[11,"size_hint","","",59,N],[11,"next","rand::seq","",57,[[["self"]],["option"]]],[11,"size_hint","","",57,N],[11,"default","rand::rngs","",34,[[],["self"]]],[11,"fmt","rand::distributions","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::rngs","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::distributions::uniform","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",52,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",53,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::distributions","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",50,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::rngs::adapter","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::rngs","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::rngs::mock","",36,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::rngs","",54,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",55,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",56,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::seq::index","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",58,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",59,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::seq","",57,[[["self"],["formatter"]],["result"]]],[11,"description","rand::distributions","",5,[[["self"]],["str"]]],[11,"cause","","",5,[[["self"]],["option",["error"]]]],[11,"description","rand::rngs","",31,[[["self"]],["str"]]],[11,"next_u32","rand::rngs::adapter","",32,[[["self"]],["u32"]]],[11,"next_u64","","",32,[[["self"]],["u64"]]],[11,"fill_bytes","","",32,N],[11,"try_fill_bytes","","",32,N],[11,"next_u32","","",33,[[["self"]],["u32"]]],[11,"next_u64","","",33,[[["self"]],["u64"]]],[11,"fill_bytes","","",33,N],[11,"try_fill_bytes","","",33,N],[11,"next_u32","rand::rngs","",34,[[["self"]],["u32"]]],[11,"next_u64","","",34,[[["self"]],["u64"]]],[11,"fill_bytes","","",34,N],[11,"try_fill_bytes","","",34,N],[11,"next_u32","","",35,[[["self"]],["u32"]]],[11,"next_u64","","",35,[[["self"]],["u64"]]],[11,"fill_bytes","","",35,N],[11,"try_fill_bytes","","",35,N],[11,"next_u32","rand::rngs::mock","",36,[[["self"]],["u32"]]],[11,"next_u64","","",36,[[["self"]],["u64"]]],[11,"fill_bytes","","",36,N],[11,"try_fill_bytes","","",36,N],[11,"next_u32","rand::rngs","",54,[[["self"]],["u32"]]],[11,"next_u64","","",54,[[["self"]],["u64"]]],[11,"fill_bytes","","",54,N],[11,"try_fill_bytes","","",54,N],[11,"next_u32","","",55,[[["self"]],["u32"]]],[11,"next_u64","","",55,[[["self"]],["u64"]]],[11,"fill_bytes","","",55,N],[11,"try_fill_bytes","","",55,N],[11,"next_u32","","",56,[[["self"]],["u32"]]],[11,"next_u64","","",56,[[["self"]],["u64"]]],[11,"fill_bytes","","",56,N],[11,"try_fill_bytes","","",56,N],[11,"next_u32","","",37,[[["self"]],["u32"]]],[11,"next_u64","","",37,[[["self"]],["u64"]]],[11,"fill_bytes","","",37,N],[11,"try_fill_bytes","","",37,N],[11,"from_seed","","",54,N],[11,"from_rng","","",54,[[["r"]],["result",["error"]]]],[11,"from_seed","","",55,N],[11,"from_rng","","",55,[[["r"]],["result",["error"]]]],[11,"should_retry","rand","True if this kind of error may resolve itself on retry.",2,[[["self"]],["bool"]]],[11,"should_wait","","True if we should retry but wait before retrying",2,[[["self"]],["bool"]]],[11,"description","","A description of this error kind",2,[[["self"]],["str"]]],[11,"new","","Create a new instance, with specified kind and a message.",3,[[["errorkind"],["str"]],["error"]]],[11,"with_cause","","Create a new instance, with specified kind, message, and a…",3,[[["errorkind"],["str"],["e"]],["error"]]],[11,"take_cause","","Take the cause, if any. This allows the embedded cause to…",3,[[["self"]],["option",["box"]]]]],"paths":[[8,"RngCore"],[8,"SeedableRng"],[4,"ErrorKind"],[3,"Error"],[3,"Weighted"],[4,"WeightedError"],[8,"SampleUniform"],[8,"UniformSampler"],[8,"SampleBorrow"],[3,"Uniform"],[3,"Bernoulli"],[3,"WeightedIndex"],[3,"UnitSphereSurface"],[3,"UnitCircle"],[3,"Gamma"],[3,"ChiSquared"],[3,"FisherF"],[3,"StudentT"],[3,"Beta"],[3,"Normal"],[3,"LogNormal"],[3,"Exp"],[3,"Pareto"],[3,"Poisson"],[3,"Binomial"],[3,"Cauchy"],[3,"Dirichlet"],[3,"Triangular"],[3,"Weibull"],[8,"Distribution"],[3,"WeightedChoice"],[4,"TimerError"],[3,"ReadRng"],[3,"ReseedingRng"],[3,"EntropyRng"],[3,"JitterRng"],[3,"StepRng"],[3,"OsRng"],[4,"IndexVec"],[8,"SliceRandom"],[8,"IteratorRandom"],[8,"Rng"],[8,"AsByteSliceMut"],[8,"FromEntropy"],[3,"Alphanumeric"],[3,"OpenClosed01"],[3,"Open01"],[3,"StandardNormal"],[3,"Exp1"],[3,"DistIter"],[3,"Standard"],[3,"UniformInt"],[3,"UniformFloat"],[3,"UniformDuration"],[3,"SmallRng"],[3,"StdRng"],[3,"ThreadRng"],[3,"SliceChooseIter"],[4,"IndexVecIter"],[4,"IndexVecIntoIter"]]};
searchIndex["rand_chacha"]={"doc":"The ChaCha random number generator.","items":[[3,"ChaChaRng","rand_chacha","A cryptographically secure random number generator that…",N,N],[3,"ChaChaCore","","The core of `ChaChaRng`, used with `BlockRng`.",N,N],[11,"get_word_pos","","Get the offset from the start of the stream, in 32-bit…",0,[[["self"]],["u128"]]],[11,"set_word_pos","","Set the offset from the start of the stream, in 32-bit…",0,[[["self"],["u128"]]]],[11,"set_stream","","Set the stream number.",0,[[["self"],["u64"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"from","","",0,[[["chachacore"]],["self"]]],[11,"clone","","",0,[[["self"]],["chacharng"]]],[11,"clone","","",1,[[["self"]],["chachacore"]]],[11,"generate","","",1,N],[11,"next_u32","","",0,[[["self"]],["u32"]]],[11,"next_u64","","",0,[[["self"]],["u64"]]],[11,"fill_bytes","","",0,N],[11,"try_fill_bytes","","",0,N],[11,"from_seed","","",0,N],[11,"from_rng","","",0,[[["r"]],["result",["error"]]]],[11,"from_seed","","",1,N]],"paths":[[3,"ChaChaRng"],[3,"ChaChaCore"]]};
searchIndex["rand_core"]={"doc":"Random number generation traits","items":[[4,"ErrorKind","rand_core","Error kind which can be matched over.",N,N],[13,"Unavailable","","Feature is not available; not recoverable.",0,N],[13,"Unexpected","","General failure; there may be a chance of recovery on retry.",0,N],[13,"Transient","","A transient failure which likely can be resolved or worked…",0,N],[13,"NotReady","","Not ready yet: recommended to try again a little later.",0,N],[3,"Error","","Error type of random number generators",N,N],[12,"kind","","The error kind",1,N],[12,"msg","","The error message",1,N],[0,"block","","The `BlockRngCore` trait and implementation helpers",N,N],[8,"BlockRngCore","rand_core::block","A trait for RNGs which do not generate random numbers…",N,N],[16,"Item","","Results element type, e.g. `u32`.",2,N],[16,"Results","","Results type. This is the 'block' an RNG implementing…",2,N],[10,"generate","","Generate a new block of results.",2,N],[3,"BlockRng","","A wrapper type implementing [`RngCore`] for some type…",N,N],[12,"core","","The core part of the RNG, implementing the `generate`…",3,N],[3,"BlockRng64","","A wrapper type implementing [`RngCore`] for some type…",N,N],[12,"core","","The core part of the RNG, implementing the `generate`…",4,N],[0,"impls","rand_core","Helper functions for implementing `RngCore` functions.",N,N],[5,"next_u64_via_u32","rand_core::impls","Implement `next_u64` via `next_u32`, little-endian order.",N,[[["r"]],["u64"]]],[5,"fill_bytes_via_next","","Implement `fill_bytes` via `next_u64` and `next_u32`,…",N,N],[5,"fill_via_u32_chunks","","Implement `fill_bytes` by reading chunks from the output…",N,N],[5,"fill_via_u64_chunks","","Implement `fill_bytes` by reading chunks from the output…",N,N],[5,"next_u32_via_fill","","Implement `next_u32` via `fill_bytes`, little-endian order.",N,[[["r"]],["u32"]]],[5,"next_u64_via_fill","","Implement `next_u64` via `fill_bytes`, little-endian order.",N,[[["r"]],["u64"]]],[0,"le","rand_core","Little-Endian utilities",N,N],[5,"read_u32_into","rand_core::le","Reads unsigned 32 bit integers from `src` into `dst`.…",N,N],[5,"read_u64_into","","Reads unsigned 64 bit integers from `src` into `dst`.…",N,N],[8,"RngCore","rand_core","The core of a random number generator.",N,N],[10,"next_u32","","Return the next random `u32`.",5,[[["self"]],["u32"]]],[10,"next_u64","","Return the next random `u64`.",5,[[["self"]],["u64"]]],[10,"fill_bytes","","Fill `dest` with random data.",5,N],[10,"try_fill_bytes","","Fill `dest` entirely with random data.",5,N],[8,"CryptoRng","","A marker trait used to indicate that an [`RngCore`] or…",N,N],[8,"SeedableRng","","A random number generator that can be explicitly seeded.",N,N],[16,"Seed","","Seed type, which is restricted to types…",6,N],[10,"from_seed","","Create a new PRNG using the given seed.",6,N],[11,"seed_from_u64","","Create a new PRNG using a `u64` seed.",6,[[["u64"]],["self"]]],[11,"from_rng","","Create a new PRNG seeded from another `Rng`.",6,[[["r"]],["result",["error"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","rand_core::block","",3,[[["u"]],["result"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from_seed","","",3,N],[11,"seed_from_u64","","",3,[[["u64"]],["blockrng"]]],[11,"from_rng","","",3,[[["s"]],["result",["blockrng","error"]]]],[11,"from_seed","","",4,N],[11,"seed_from_u64","","",4,[[["u64"]],["blockrng64"]]],[11,"from_rng","","",4,[[["s"]],["result",["blockrng64","error"]]]],[11,"next_u32","","",4,[[["self"]],["u32"]]],[11,"next_u64","","",4,[[["self"]],["u64"]]],[11,"fill_bytes","","",4,N],[11,"try_fill_bytes","","",4,N],[11,"next_u32","","",3,[[["self"]],["u32"]]],[11,"next_u64","","",3,[[["self"]],["u64"]]],[11,"fill_bytes","","",3,N],[11,"try_fill_bytes","","",3,N],[11,"eq","rand_core","",0,[[["self"],["errorkind"]],["bool"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result",["error"]]]],[11,"description","","",1,[[["self"]],["str"]]],[11,"cause","","",1,[[["self"]],["option",["error"]]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","rand_core::block","",3,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","rand_core","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"read","","",5,N],[11,"clone","","",0,[[["self"]],["errorkind"]]],[11,"clone","rand_core::block","",3,[[["self"]],["blockrng"]]],[11,"clone","","",4,[[["self"]],["blockrng64"]]],[11,"should_retry","rand_core","True if this kind of error may resolve itself on retry.",0,[[["self"]],["bool"]]],[11,"should_wait","","True if we should retry but wait before retrying",0,[[["self"]],["bool"]]],[11,"description","","A description of this error kind",0,[[["self"]],["str"]]],[11,"new","","Create a new instance, with specified kind and a message.",1,[[["errorkind"],["str"]],["error"]]],[11,"with_cause","","Create a new instance, with specified kind, message, and a…",1,[[["errorkind"],["str"],["e"]],["error"]]],[11,"take_cause","","Take the cause, if any. This allows the embedded cause to…",1,[[["self"]],["option",["box"]]]],[11,"new","rand_core::block","Create a new `BlockRng` from an existing RNG implementing…",3,[[["r"]],["blockrng"]]],[11,"index","","Get the index into the result buffer.",3,[[["self"]],["usize"]]],[11,"reset","","Reset the number of available results. This will force a…",3,N],[11,"generate_and_set","","Generate a new set of results immediately, setting the…",3,N],[11,"new","","Create a new `BlockRng` from an existing RNG implementing…",4,[[["r"]],["blockrng64"]]],[11,"index","","Get the index into the result buffer.",4,[[["self"]],["usize"]]],[11,"reset","","Reset the number of available results. This will force a…",4,N],[11,"generate_and_set","","Generate a new set of results immediately, setting the…",4,N]],"paths":[[4,"ErrorKind"],[3,"Error"],[8,"BlockRngCore"],[3,"BlockRng"],[3,"BlockRng64"],[8,"RngCore"],[8,"SeedableRng"]]};
searchIndex["rand_hc"]={"doc":"The HC128 random number generator.","items":[[3,"Hc128Rng","rand_hc","A cryptographically secure random number generator that…",N,N],[3,"Hc128Core","","The core of `Hc128Rng`, used with `BlockRng`.",N,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"clone","","",0,[[["self"]],["hc128rng"]]],[11,"clone","","",1,[[["self"]],["hc128core"]]],[11,"generate","","",1,N],[11,"next_u32","","",0,[[["self"]],["u32"]]],[11,"next_u64","","",0,[[["self"]],["u64"]]],[11,"fill_bytes","","",0,N],[11,"try_fill_bytes","","",0,N],[11,"from_seed","","",0,N],[11,"from_rng","","",0,[[["r"]],["result",["error"]]]],[11,"from_seed","","Create an HC-128 random number generator with a seed. The…",1,N]],"paths":[[3,"Hc128Rng"],[3,"Hc128Core"]]};
searchIndex["rand_isaac"]={"doc":"The ISAAC and ISAAC-64 random number generators.","items":[[0,"isaac","rand_isaac","The ISAAC random number generator.",N,N],[3,"IsaacRng","rand_isaac::isaac","A random number generator that uses the ISAAC algorithm.",N,N],[3,"IsaacCore","","The core of `IsaacRng`, used with `BlockRng`.",N,N],[11,"new_from_u64","","Create an ISAAC random number generator using an `u64` as…",0,[[["u64"]],["self"]]],[0,"isaac64","rand_isaac","The ISAAC-64 random number generator.",N,N],[3,"Isaac64Rng","rand_isaac::isaac64","A random number generator that uses ISAAC-64, the 64-bit…",N,N],[3,"Isaac64Core","","The core of `Isaac64Rng`, used with `BlockRng`.",N,N],[11,"new_from_u64","","Create an ISAAC-64 random number generator using an `u64`…",1,[[["u64"]],["self"]]],[11,"new_from_u64","","Create an ISAAC-64 random number generator using an `u64`…",2,[[["u64"]],["self"]]],[11,"try_from","rand_isaac::isaac","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","rand_isaac::isaac64","",1,[[["u"]],["result"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"fmt","rand_isaac::isaac","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand_isaac::isaac64","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"clone","rand_isaac::isaac","",0,[[["self"]],["isaacrng"]]],[11,"clone","","",3,[[["self"]],["isaaccore"]]],[11,"clone","rand_isaac::isaac64","",1,[[["self"]],["isaac64rng"]]],[11,"clone","","",2,[[["self"]],["isaac64core"]]],[11,"generate","rand_isaac::isaac","Refills the output buffer, `results`. See also the…",3,[[["self"],["isaacarray"]]]],[11,"generate","rand_isaac::isaac64","Refills the output buffer, `results`. See also the…",2,[[["self"],["isaacarray"]]]],[11,"next_u32","rand_isaac::isaac","",0,[[["self"]],["u32"]]],[11,"next_u64","","",0,[[["self"]],["u64"]]],[11,"fill_bytes","","",0,N],[11,"try_fill_bytes","","",0,N],[11,"next_u32","rand_isaac::isaac64","",1,[[["self"]],["u32"]]],[11,"next_u64","","",1,[[["self"]],["u64"]]],[11,"fill_bytes","","",1,N],[11,"try_fill_bytes","","",1,N],[11,"from_seed","rand_isaac::isaac","",0,N],[11,"seed_from_u64","","Create an ISAAC random number generator using an `u64` as…",0,[[["u64"]],["self"]]],[11,"from_rng","","",0,[[["s"]],["result",["error"]]]],[11,"from_seed","","",3,N],[11,"seed_from_u64","","Create an ISAAC random number generator using an `u64` as…",3,[[["u64"]],["self"]]],[11,"from_rng","","",3,[[["r"]],["result",["error"]]]],[11,"from_seed","rand_isaac::isaac64","",1,N],[11,"seed_from_u64","","Create an ISAAC random number generator using an `u64` as…",1,[[["u64"]],["self"]]],[11,"from_rng","","",1,[[["s"]],["result",["error"]]]],[11,"from_seed","","",2,N],[11,"seed_from_u64","","",2,[[["u64"]],["self"]]],[11,"from_rng","","",2,[[["r"]],["result",["error"]]]]],"paths":[[3,"IsaacRng"],[3,"Isaac64Rng"],[3,"Isaac64Core"],[3,"IsaacCore"]]};
searchIndex["rand_pcg"]={"doc":"The PCG random number generators.","items":[[3,"Lcg64Xsh32","rand_pcg","A PCG random number generator (XSH RR 64/32 (LCG) variant).",N,N],[3,"Mcg128Xsl64","","A PCG random number generator (XSL 128/64 (MCG) variant).",N,N],[11,"new","","Construct an instance compatible with PCG seed and stream.",0,[[["u64"],["u64"]],["self"]]],[11,"new","","Construct an instance compatible with PCG seed.",1,[[["u128"]],["self"]]],[6,"Pcg32","","`Lcg64Xsh32` is also officially known as `pcg32`.",N,N],[6,"Pcg64Mcg","","A friendly name for `Mcg128Xsl64`.",N,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"clone","","",0,[[["self"]],["lcg64xsh32"]]],[11,"clone","","",1,[[["self"]],["mcg128xsl64"]]],[11,"next_u32","","",0,[[["self"]],["u32"]]],[11,"next_u64","","",0,[[["self"]],["u64"]]],[11,"fill_bytes","","",0,N],[11,"try_fill_bytes","","",0,N],[11,"next_u32","","",1,[[["self"]],["u32"]]],[11,"next_u64","","",1,[[["self"]],["u64"]]],[11,"fill_bytes","","",1,N],[11,"try_fill_bytes","","",1,N],[11,"from_seed","","",0,N],[11,"from_seed","","",1,N]],"paths":[[3,"Lcg64Xsh32"],[3,"Mcg128Xsl64"]]};
searchIndex["rand_xorshift"]={"doc":"The xorshift random number generator.","items":[[3,"XorShiftRng","rand_xorshift","An Xorshift random number generator.",N,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"clone","","",0,[[["self"]],["xorshiftrng"]]],[11,"next_u32","","",0,[[["self"]],["u32"]]],[11,"next_u64","","",0,[[["self"]],["u64"]]],[11,"fill_bytes","","",0,N],[11,"try_fill_bytes","","",0,N],[11,"from_seed","","",0,N],[11,"from_rng","","",0,[[["r"]],["result",["error"]]]]],"paths":[[3,"XorShiftRng"]]};
searchIndex["regex"]={"doc":"This crate provides a library for parsing, compiling, and…","items":[[3,"RegexBuilder","regex","A configurable builder for a regular expression.",N,N],[3,"RegexSetBuilder","","A configurable builder for a set of regular expressions.",N,N],[3,"RegexSet","","Match multiple (possibly overlapping) regular expressions…",N,N],[3,"SetMatches","","A set of matches returned by a regex set.",N,N],[3,"SetMatchesIntoIter","","An owned iterator over the set of matches from a regex set.",N,N],[3,"SetMatchesIter","","A borrowed iterator over the set of matches from a regex…",N,N],[3,"Regex","","A compiled regular expression for matching Unicode strings.",N,N],[3,"Match","","Match represents a single match of a regex in a haystack.",N,N],[3,"Captures","","Captures represents a group of captured strings for a…",N,N],[3,"CaptureNames","","An iterator over the names of all possible captures.",N,N],[3,"Matches","","An iterator over all non-overlapping matches for a…",N,N],[3,"CaptureMatches","","An iterator that yields all non-overlapping capture groups…",N,N],[3,"SubCaptureMatches","","An iterator that yields all capturing matches in the order…",N,N],[3,"CaptureLocations","","CaptureLocations is a low level representation of the raw…",N,N],[3,"ReplacerRef","","By-reference adaptor for a `Replacer`",N,N],[3,"NoExpand","","`NoExpand` indicates literal string replacement.",N,N],[12,"0","","",0,N],[3,"Split","","Yields all substrings delimited by a regular expression…",N,N],[3,"SplitN","","Yields at most `N` substrings delimited by a regular…",N,N],[4,"Error","","An error that occurred during parsing or compiling a…",N,N],[13,"Syntax","","A syntax error.",1,N],[13,"CompiledTooBig","","The compiled program exceeded the set size limit. The…",1,N],[5,"escape","","Escapes all regular expression meta characters in `text`.",N,[[["str"]],["string"]]],[0,"bytes","","Match regular expressions on arbitrary bytes.",N,N],[3,"RegexBuilder","regex::bytes","A configurable builder for a regular expression.",N,N],[3,"RegexSetBuilder","","A configurable builder for a set of regular expressions.",N,N],[3,"Match","","Match represents a single match of a regex in a haystack.",N,N],[3,"Regex","","A compiled regular expression for matching arbitrary bytes.",N,N],[3,"Matches","","An iterator over all non-overlapping matches for a…",N,N],[3,"CaptureMatches","","An iterator that yields all non-overlapping capture groups…",N,N],[3,"Split","","Yields all substrings delimited by a regular expression…",N,N],[3,"SplitN","","Yields at most `N` substrings delimited by a regular…",N,N],[3,"CaptureNames","","An iterator over the names of all possible captures.",N,N],[3,"CaptureLocations","","CaptureLocations is a low level representation of the raw…",N,N],[3,"Captures","","Captures represents a group of captured byte strings for a…",N,N],[3,"SubCaptureMatches","","An iterator that yields all capturing matches in the order…",N,N],[3,"ReplacerRef","","By-reference adaptor for a `Replacer`",N,N],[3,"NoExpand","","`NoExpand` indicates literal byte string replacement.",N,N],[12,"0","","",2,N],[3,"RegexSet","","Match multiple (possibly overlapping) regular expressions…",N,N],[3,"SetMatches","","A set of matches returned by a regex set.",N,N],[3,"SetMatchesIntoIter","","An owned iterator over the set of matches from a regex set.",N,N],[3,"SetMatchesIter","","A borrowed iterator over the set of matches from a regex…",N,N],[8,"Replacer","","Replacer describes types that can be used to replace…",N,N],[10,"replace_append","","Appends text to `dst` to replace the current match.",3,[[["self"],["captures"],["vec"]]]],[11,"no_expansion","","Return a fixed unchanging replacement byte string.",3,[[["self"]],["option",["cow"]]]],[11,"by_ref","","Return a `Replacer` that borrows and wraps this `Replacer`.",3,[[["self"]],["replacerref"]]],[11,"new","","Create a new regular expression builder with the given…",4,[[["str"]],["regexbuilder"]]],[11,"build","","Consume the builder and compile the regular expression.",4,[[["self"]],["result",["regex","error"]]]],[11,"case_insensitive","","Set the value for the case insensitive (`i`) flag.",4,[[["self"],["bool"]],["regexbuilder"]]],[11,"multi_line","","Set the value for the multi-line matching (`m`) flag.",4,[[["self"],["bool"]],["regexbuilder"]]],[11,"dot_matches_new_line","","Set the value for the any character (`s`) flag, where in…",4,[[["self"],["bool"]],["regexbuilder"]]],[11,"swap_greed","","Set the value for the greedy swap (`U`) flag.",4,[[["self"],["bool"]],["regexbuilder"]]],[11,"ignore_whitespace","","Set the value for the ignore whitespace (`x`) flag.",4,[[["self"],["bool"]],["regexbuilder"]]],[11,"unicode","","Set the value for the Unicode (`u`) flag.",4,[[["self"],["bool"]],["regexbuilder"]]],[11,"octal","","Whether to support octal syntax or not.",4,[[["self"],["bool"]],["regexbuilder"]]],[11,"size_limit","","Set the approximate size limit of the compiled regular…",4,[[["self"],["usize"]],["regexbuilder"]]],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",4,[[["self"],["usize"]],["regexbuilder"]]],[11,"nest_limit","","Set the nesting limit for this parser.",4,[[["self"],["u32"]],["regexbuilder"]]],[11,"new","regex","Create a new regular expression builder with the given…",5,[[["str"]],["regexbuilder"]]],[11,"build","","Consume the builder and compile the regular expression.",5,[[["self"]],["result",["regex","error"]]]],[11,"case_insensitive","","Set the value for the case insensitive (`i`) flag.",5,[[["self"],["bool"]],["regexbuilder"]]],[11,"multi_line","","Set the value for the multi-line matching (`m`) flag.",5,[[["self"],["bool"]],["regexbuilder"]]],[11,"dot_matches_new_line","","Set the value for the any character (`s`) flag, where in…",5,[[["self"],["bool"]],["regexbuilder"]]],[11,"swap_greed","","Set the value for the greedy swap (`U`) flag.",5,[[["self"],["bool"]],["regexbuilder"]]],[11,"ignore_whitespace","","Set the value for the ignore whitespace (`x`) flag.",5,[[["self"],["bool"]],["regexbuilder"]]],[11,"unicode","","Set the value for the Unicode (`u`) flag.",5,[[["self"],["bool"]],["regexbuilder"]]],[11,"octal","","Whether to support octal syntax or not.",5,[[["self"],["bool"]],["regexbuilder"]]],[11,"size_limit","","Set the approximate size limit of the compiled regular…",5,[[["self"],["usize"]],["regexbuilder"]]],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",5,[[["self"],["usize"]],["regexbuilder"]]],[11,"nest_limit","","Set the nesting limit for this parser.",5,[[["self"],["u32"]],["regexbuilder"]]],[11,"new","regex::bytes","Create a new regular expression builder with the given…",6,[[["i"]],["regexsetbuilder"]]],[11,"build","","Consume the builder and compile the regular expressions…",6,[[["self"]],["result",["regexset","error"]]]],[11,"case_insensitive","","Set the value for the case insensitive (`i`) flag.",6,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"multi_line","","Set the value for the multi-line matching (`m`) flag.",6,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"dot_matches_new_line","","Set the value for the any character (`s`) flag, where in…",6,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"swap_greed","","Set the value for the greedy swap (`U`) flag.",6,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"ignore_whitespace","","Set the value for the ignore whitespace (`x`) flag.",6,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"unicode","","Set the value for the Unicode (`u`) flag.",6,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"octal","","Whether to support octal syntax or not.",6,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"size_limit","","Set the approximate size limit of the compiled regular…",6,[[["self"],["usize"]],["regexsetbuilder"]]],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",6,[[["self"],["usize"]],["regexsetbuilder"]]],[11,"nest_limit","","Set the nesting limit for this parser.",6,[[["self"],["u32"]],["regexsetbuilder"]]],[11,"new","regex","Create a new regular expression builder with the given…",7,[[["i"]],["regexsetbuilder"]]],[11,"build","","Consume the builder and compile the regular expressions…",7,[[["self"]],["result",["regexset","error"]]]],[11,"case_insensitive","","Set the value for the case insensitive (`i`) flag.",7,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"multi_line","","Set the value for the multi-line matching (`m`) flag.",7,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"dot_matches_new_line","","Set the value for the any character (`s`) flag, where in…",7,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"swap_greed","","Set the value for the greedy swap (`U`) flag.",7,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"ignore_whitespace","","Set the value for the ignore whitespace (`x`) flag.",7,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"unicode","","Set the value for the Unicode (`u`) flag.",7,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"octal","","Whether to support octal syntax or not.",7,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"size_limit","","Set the approximate size limit of the compiled regular…",7,[[["self"],["usize"]],["regexsetbuilder"]]],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",7,[[["self"],["usize"]],["regexsetbuilder"]]],[11,"nest_limit","","Set the nesting limit for this parser.",7,[[["self"],["u32"]],["regexsetbuilder"]]],[11,"no_expansion","regex::bytes","Return a fixed unchanging replacement byte string.",3,[[["self"]],["option",["cow"]]]],[11,"by_ref","","Return a `Replacer` that borrows and wraps this `Replacer`.",3,[[["self"]],["replacerref"]]],[11,"start","","Returns the starting byte offset of the match in the…",8,[[["self"]],["usize"]]],[11,"end","","Returns the ending byte offset of the match in the haystack.",8,[[["self"]],["usize"]]],[11,"as_bytes","","Returns the matched text.",8,N],[11,"new","","Compiles a regular expression. Once compiled, it can be…",9,[[["str"]],["result",["regex","error"]]]],[11,"is_match","","Returns true if and only if the regex matches the string…",9,N],[11,"find","","Returns the start and end byte range of the leftmost-first…",9,N],[11,"find_iter","","Returns an iterator for each successive non-overlapping…",9,N],[11,"captures","","Returns the capture groups corresponding to the…",9,N],[11,"captures_iter","","Returns an iterator over all the non-overlapping capture…",9,N],[11,"split","","Returns an iterator of substrings of `text` delimited by a…",9,N],[11,"splitn","","Returns an iterator of at most `limit` substrings of…",9,N],[11,"replace","","Replaces the leftmost-first match with the replacement…",9,N],[11,"replace_all","","Replaces all non-overlapping matches in `text` with the…",9,N],[11,"replacen","","Replaces at most `limit` non-overlapping matches in `text`…",9,N],[11,"shortest_match","","Returns the end location of a match in the text given.",9,N],[11,"shortest_match_at","","Returns the same as shortest_match, but starts the search…",9,N],[11,"is_match_at","","Returns the same as is_match, but starts the search at the…",9,N],[11,"find_at","","Returns the same as find, but starts the search at the…",9,N],[11,"captures_read","","This is like `captures`, but uses `CaptureLocations`…",9,N],[11,"captures_read_at","","Returns the same as `captures_read`, but starts the search…",9,N],[11,"as_str","","Returns the original string of this regex.",9,[[["self"]],["str"]]],[11,"capture_names","","Returns an iterator over the capture names.",9,[[["self"]],["capturenames"]]],[11,"captures_len","","Returns the number of captures.",9,[[["self"]],["usize"]]],[11,"capture_locations","","Returns an empty set of capture locations that can be…",9,[[["self"]],["capturelocations"]]],[11,"get","","Returns the start and end positions of the Nth capture…",10,[[["self"],["usize"]],["option"]]],[11,"len","","Returns the total number of capturing groups.",10,[[["self"]],["usize"]]],[11,"get","","Returns the match associated with the capture group at…",11,[[["self"],["usize"]],["option",["match"]]]],[11,"name","","Returns the match for the capture group named `name`. If…",11,[[["self"],["str"]],["option",["match"]]]],[11,"iter","","An iterator that yields all capturing matches in the order…",11,[[["self"]],["subcapturematches"]]],[11,"expand","","Expands all instances of `$name` in `replacement` to the…",11,N],[11,"len","","Returns the number of captured groups.",11,[[["self"]],["usize"]]],[11,"new","regex","Create a new regex set with the given regular expressions.",12,[[["i"]],["result",["regexset","error"]]]],[11,"is_match","","Returns true if and only if one of the regexes in this set…",12,[[["self"],["str"]],["bool"]]],[11,"matches","","Returns the set of regular expressions that match in the…",12,[[["self"],["str"]],["setmatches"]]],[11,"len","","Returns the total number of regular expressions in this set.",12,[[["self"]],["usize"]]],[11,"patterns","","Returns the patterns that this set will match on.",12,N],[11,"matched_any","","Whether this set contains any matches.",13,[[["self"]],["bool"]]],[11,"matched","","Whether the regex at the given index matched.",13,[[["self"],["usize"]],["bool"]]],[11,"len","","The total number of regexes in the set that created these…",13,[[["self"]],["usize"]]],[11,"iter","","Returns an iterator over indexes in the regex that matched.",13,[[["self"]],["setmatchesiter"]]],[11,"new","regex::bytes","Create a new regex set with the given regular expressions.",14,[[["i"]],["result",["regexset","error"]]]],[11,"is_match","","Returns true if and only if one of the regexes in this set…",14,N],[11,"matches","","Returns the set of regular expressions that match in the…",14,N],[11,"len","","Returns the total number of regular expressions in this set.",14,[[["self"]],["usize"]]],[11,"patterns","","Returns the patterns that this set will match on.",14,N],[11,"matched_any","","Whether this set contains any matches.",15,[[["self"]],["bool"]]],[11,"matched","","Whether the regex at the given index matched.",15,[[["self"],["usize"]],["bool"]]],[11,"len","","The total number of regexes in the set that created these…",15,[[["self"]],["usize"]]],[11,"iter","","Returns an iterator over indexes in the regex that matched.",15,[[["self"]],["setmatchesiter"]]],[11,"start","regex","Returns the starting byte offset of the match in the…",16,[[["self"]],["usize"]]],[11,"end","","Returns the ending byte offset of the match in the haystack.",16,[[["self"]],["usize"]]],[11,"as_str","","Returns the matched text.",16,[[["self"]],["str"]]],[11,"new","","Compiles a regular expression. Once compiled, it can be…",17,[[["str"]],["result",["regex","error"]]]],[11,"is_match","","Returns true if and only if the regex matches the string…",17,[[["self"],["str"]],["bool"]]],[11,"find","","Returns the start and end byte range of the leftmost-first…",17,[[["self"],["str"]],["option",["match"]]]],[11,"find_iter","","Returns an iterator for each successive non-overlapping…",17,[[["self"],["str"]],["matches"]]],[11,"captures","","Returns the capture groups corresponding to the…",17,[[["self"],["str"]],["option",["captures"]]]],[11,"captures_iter","","Returns an iterator over all the non-overlapping capture…",17,[[["self"],["str"]],["capturematches"]]],[11,"split","","Returns an iterator of substrings of `text` delimited by a…",17,[[["self"],["str"]],["split"]]],[11,"splitn","","Returns an iterator of at most `limit` substrings of…",17,[[["self"],["str"],["usize"]],["splitn"]]],[11,"replace","","Replaces the leftmost-first match with the replacement…",17,[[["self"],["str"],["r"]],["cow",["str"]]]],[11,"replace_all","","Replaces all non-overlapping matches in `text` with the…",17,[[["self"],["str"],["r"]],["cow",["str"]]]],[11,"replacen","","Replaces at most `limit` non-overlapping matches in `text`…",17,[[["self"],["str"],["usize"],["r"]],["cow",["str"]]]],[11,"shortest_match","","Returns the end location of a match in the text given.",17,[[["self"],["str"]],["option",["usize"]]]],[11,"shortest_match_at","","Returns the same as shortest_match, but starts the search…",17,[[["self"],["str"],["usize"]],["option",["usize"]]]],[11,"is_match_at","","Returns the same as is_match, but starts the search at the…",17,[[["self"],["str"],["usize"]],["bool"]]],[11,"find_at","","Returns the same as find, but starts the search at the…",17,[[["self"],["str"],["usize"]],["option",["match"]]]],[11,"captures_read","","This is like `captures`, but uses `CaptureLocations`…",17,[[["self"],["capturelocations"],["str"]],["option",["match"]]]],[11,"captures_read_at","","Returns the same as captures, but starts the search at the…",17,[[["self"],["capturelocations"],["str"],["usize"]],["option",["match"]]]],[11,"as_str","","Returns the original string of this regex.",17,[[["self"]],["str"]]],[11,"capture_names","","Returns an iterator over the capture names.",17,[[["self"]],["capturenames"]]],[11,"captures_len","","Returns the number of captures.",17,[[["self"]],["usize"]]],[11,"capture_locations","","Returns an empty set of capture locations that can be…",17,[[["self"]],["capturelocations"]]],[11,"get","","Returns the start and end positions of the Nth capture…",18,[[["self"],["usize"]],["option"]]],[11,"len","","Returns the total number of capturing groups.",18,[[["self"]],["usize"]]],[11,"get","","Returns the match associated with the capture group at…",19,[[["self"],["usize"]],["option",["match"]]]],[11,"name","","Returns the match for the capture group named `name`. If…",19,[[["self"],["str"]],["option",["match"]]]],[11,"iter","","An iterator that yields all capturing matches in the order…",19,[[["self"]],["subcapturematches"]]],[11,"expand","","Expands all instances of `$name` in `replacement` to the…",19,[[["self"],["str"],["string"]]]],[11,"len","","Returns the number of captured groups.",19,[[["self"]],["usize"]]],[8,"Replacer","","Replacer describes types that can be used to replace…",N,N],[10,"replace_append","","Appends text to `dst` to replace the current match.",20,[[["self"],["captures"],["string"]]]],[11,"no_expansion","","Return a fixed unchanging replacement string.",20,[[["self"]],["option",["cow"]]]],[11,"by_ref","","Return a `Replacer` that borrows and wraps this `Replacer`.",20,[[["self"]],["replacerref"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into_iter","","",13,[[["self"]],["i"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into_iter","","",21,[[["self"]],["i"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into_iter","","",22,[[["self"]],["i"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"to_string","","",17,[[["self"]],["string"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into_iter","","",23,[[["self"]],["i"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into_iter","","",24,[[["self"]],["i"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into_iter","","",25,[[["self"]],["i"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into_iter","","",26,[[["self"]],["i"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into_iter","","",28,[[["self"]],["i"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into_iter","","",29,[[["self"]],["i"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","regex::bytes","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"to_string","","",9,[[["self"]],["string"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into_iter","","",30,[[["self"]],["i"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into_iter","","",31,[[["self"]],["i"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into_iter","","",32,[[["self"]],["i"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into_iter","","",33,[[["self"]],["i"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into_iter","","",34,[[["self"]],["i"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into_iter","","",35,[[["self"]],["i"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into_iter","","",15,[[["self"]],["i"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into_iter","","",37,[[["self"]],["i"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into_iter","","",38,[[["self"]],["i"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,N],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"replace_append","","",36,[[["self"],["captures"],["vec"]]]],[11,"no_expansion","","",36,[[["self"]],["option",["cow"]]]],[11,"replace_append","","",2,[[["self"],["captures"],["vec"]]]],[11,"no_expansion","","",2,[[["self"]],["option",["cow"]]]],[11,"replace_append","regex","",27,[[["self"],["captures"],["string"]]]],[11,"no_expansion","","",27,[[["self"]],["option",["cow"]]]],[11,"replace_append","","",0,[[["self"],["captures"],["string"]]]],[11,"no_expansion","","",0,[[["self"]],["option",["cow"]]]],[11,"next_back","","",21,[[["self"]],["option",["usize"]]]],[11,"next_back","","",22,[[["self"]],["option",["usize"]]]],[11,"next_back","regex::bytes","",37,[[["self"]],["option",["usize"]]]],[11,"next_back","","",38,[[["self"]],["option",["usize"]]]],[11,"eq","regex","",1,[[["self"],["error"]],["bool"]]],[11,"ne","","",1,[[["self"],["error"]],["bool"]]],[11,"eq","regex::bytes","",8,[[["self"],["match"]],["bool"]]],[11,"ne","","",8,[[["self"],["match"]],["bool"]]],[11,"eq","regex","",16,[[["self"],["match"]],["bool"]]],[11,"ne","","",16,[[["self"],["match"]],["bool"]]],[11,"clone","","",1,[[["self"]],["error"]]],[11,"clone","regex::bytes","",8,[[["self"]],["match"]]],[11,"clone","","",9,[[["self"]],["regex"]]],[11,"clone","","",10,[[["self"]],["capturelocations"]]],[11,"clone","regex","",12,[[["self"]],["regexset"]]],[11,"clone","","",13,[[["self"]],["setmatches"]]],[11,"clone","","",22,[[["self"]],["setmatchesiter"]]],[11,"clone","regex::bytes","",14,[[["self"]],["regexset"]]],[11,"clone","","",15,[[["self"]],["setmatches"]]],[11,"clone","","",38,[[["self"]],["setmatchesiter"]]],[11,"clone","regex","",16,[[["self"]],["match"]]],[11,"clone","","",17,[[["self"]],["regex"]]],[11,"clone","","",18,[[["self"]],["capturelocations"]]],[11,"into_iter","","",13,N],[11,"into_iter","regex::bytes","",15,N],[11,"next","","",30,[[["self"]],["option",["match"]]]],[11,"next","","",31,[[["self"]],["option",["captures"]]]],[11,"next","","",32,[[["self"]],["option"]]],[11,"next","","",33,[[["self"]],["option"]]],[11,"next","","",34,[[["self"]],["option",["option"]]]],[11,"size_hint","","",34,N],[11,"next","","",35,[[["self"]],["option",["option"]]]],[11,"next","regex","",21,[[["self"]],["option",["usize"]]]],[11,"size_hint","","",21,N],[11,"next","","",22,[[["self"]],["option",["usize"]]]],[11,"size_hint","","",22,N],[11,"next","regex::bytes","",37,[[["self"]],["option",["usize"]]]],[11,"size_hint","","",37,N],[11,"next","","",38,[[["self"]],["option",["usize"]]]],[11,"size_hint","","",38,N],[11,"next","regex","",23,[[["self"]],["option",["option"]]]],[11,"size_hint","","",23,N],[11,"next","","",28,[[["self"]],["option",["str"]]]],[11,"next","","",29,[[["self"]],["option",["str"]]]],[11,"next","","",26,[[["self"]],["option",["option"]]]],[11,"next","","",25,[[["self"]],["option",["captures"]]]],[11,"next","","",24,[[["self"]],["option",["match"]]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","regex::bytes","Shows the original regular expression.",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","regex","Shows the original regular expression.",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","regex::bytes","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","Shows the original regular expression.",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result"]]],[11,"fmt","regex","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","regex::bytes","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","regex","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","Shows the original regular expression.",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"from_str","regex::bytes","Attempts to parse a string into a regular expression",9,[[["str"]],["result",["regex","error"]]]],[11,"from_str","regex","Attempts to parse a string into a regular expression",17,[[["str"]],["result",["regex","error"]]]],[11,"index","regex::bytes","",11,N],[11,"index","","",11,N],[11,"index","regex","",19,[[["self"],["usize"]],["str"]]],[11,"index","","",19,[[["self"],["str"]],["str"]]],[11,"description","","",1,[[["self"]],["str"]]],[11,"cause","","",1,[[["self"]],["option",["error"]]]],[11,"no_expansion","","Return a fixed unchanging replacement string.",20,[[["self"]],["option",["cow"]]]],[11,"by_ref","","Return a `Replacer` that borrows and wraps this `Replacer`.",20,[[["self"]],["replacerref"]]]],"paths":[[3,"NoExpand"],[4,"Error"],[3,"NoExpand"],[8,"Replacer"],[3,"RegexBuilder"],[3,"RegexBuilder"],[3,"RegexSetBuilder"],[3,"RegexSetBuilder"],[3,"Match"],[3,"Regex"],[3,"CaptureLocations"],[3,"Captures"],[3,"RegexSet"],[3,"SetMatches"],[3,"RegexSet"],[3,"SetMatches"],[3,"Match"],[3,"Regex"],[3,"CaptureLocations"],[3,"Captures"],[8,"Replacer"],[3,"SetMatchesIntoIter"],[3,"SetMatchesIter"],[3,"CaptureNames"],[3,"Matches"],[3,"CaptureMatches"],[3,"SubCaptureMatches"],[3,"ReplacerRef"],[3,"Split"],[3,"SplitN"],[3,"Matches"],[3,"CaptureMatches"],[3,"Split"],[3,"SplitN"],[3,"CaptureNames"],[3,"SubCaptureMatches"],[3,"ReplacerRef"],[3,"SetMatchesIntoIter"],[3,"SetMatchesIter"]]};
searchIndex["regex_syntax"]={"doc":"This crate provides a robust regular expression parser.","items":[[3,"Parser","regex_syntax","A convenience parser for regular expressions.",N,N],[3,"ParserBuilder","","A builder for a regular expression parser.",N,N],[4,"Error","","This error type encompasses any error that can be returned…",N,N],[13,"Parse","","An error that occurred while translating concrete syntax…",0,N],[13,"Translate","","An error that occurred while translating abstract syntax…",0,N],[5,"escape","","Escapes all regular expression meta characters in `text`.",N,[[["str"]],["string"]]],[5,"escape_into","","Escapes all meta characters in `text` and writes the…",N,[[["str"],["string"]]]],[5,"is_meta_character","","Returns true if the give character has significance in a…",N,[[["char"]],["bool"]]],[5,"is_word_character","","Returns true if and only if the given character is a…",N,[[["char"]],["bool"]]],[5,"is_word_byte","","Returns true if and only if the given character is an…",N,[[["u8"]],["bool"]]],[0,"ast","","Defines an abstract syntax for regular expressions.",N,N],[3,"Error","regex_syntax::ast","An error that occurred while parsing a regular expression…",N,N],[3,"Span","","Span represents the position information of a single AST…",N,N],[12,"start","","The start byte offset.",1,N],[12,"end","","The end byte offset.",1,N],[3,"Position","","A single position in a regular expression.",N,N],[12,"offset","","The absolute offset of this position, starting at `0` from…",2,N],[12,"line","","The line number, starting at `1`.",2,N],[12,"column","","The approximate column number, starting at `1`.",2,N],[3,"WithComments","","An abstract syntax tree for a singular expression along…",N,N],[12,"ast","","The actual ast.",3,N],[12,"comments","","All comments found in the original regular expression.",3,N],[3,"Comment","","A comment from a regular expression with an associated span.",N,N],[12,"span","","The span of this comment, including the beginning `#` and…",4,N],[12,"comment","","The comment text, starting with the first character…",4,N],[3,"Alternation","","An alternation of regular expressions.",N,N],[12,"span","","The span of this alternation.",5,N],[12,"asts","","The alternate regular expressions.",5,N],[3,"Concat","","A concatenation of regular expressions.",N,N],[12,"span","","The span of this concatenation.",6,N],[12,"asts","","The concatenation regular expressions.",6,N],[3,"Literal","","A single literal expression.",N,N],[12,"span","","The span of this literal.",7,N],[12,"kind","","The kind of this literal.",7,N],[12,"c","","The Unicode scalar value corresponding to this literal.",7,N],[3,"ClassPerl","","A Perl character class.",N,N],[12,"span","","The span of this class.",8,N],[12,"kind","","The kind of Perl class.",8,N],[12,"negated","","Whether the class is negated or not. e.g., `\\d` is not…",8,N],[3,"ClassAscii","","An ASCII character class.",N,N],[12,"span","","The span of this class.",9,N],[12,"kind","","The kind of ASCII class.",9,N],[12,"negated","","Whether the class is negated or not. e.g., `[[:alpha:]]`…",9,N],[3,"ClassUnicode","","A Unicode character class.",N,N],[12,"span","","The span of this class.",10,N],[12,"negated","","Whether this class is negated or not.",10,N],[12,"kind","","The kind of Unicode class.",10,N],[3,"ClassBracketed","","A bracketed character class, e.g., `[a-z0-9]`.",N,N],[12,"span","","The span of this class.",11,N],[12,"negated","","Whether this class is negated or not. e.g., `[a]` is not…",11,N],[12,"kind","","The type of this set. A set is either a normal union of…",11,N],[3,"ClassSetRange","","A single character class range in a set.",N,N],[12,"span","","The span of this range.",12,N],[12,"start","","The start of this range.",12,N],[12,"end","","The end of this range.",12,N],[3,"ClassSetUnion","","A union of items inside a character class set.",N,N],[12,"span","","The span of the items in this operation. e.g., the…",13,N],[12,"items","","The sequence of items that make up this union.",13,N],[3,"ClassSetBinaryOp","","A Unicode character class set operation.",N,N],[12,"span","","The span of this operation. e.g., the `a-z--[h-p]` in…",14,N],[12,"kind","","The type of this set operation.",14,N],[12,"lhs","","The left hand side of the operation.",14,N],[12,"rhs","","The right hand side of the operation.",14,N],[3,"Assertion","","A single zero-width assertion.",N,N],[12,"span","","The span of this assertion.",15,N],[12,"kind","","The assertion kind, e.g., `\\b` or `^`.",15,N],[3,"Repetition","","A repetition operation applied to a regular expression.",N,N],[12,"span","","The span of this operation.",16,N],[12,"op","","The actual operation.",16,N],[12,"greedy","","Whether this operation was applied greedily or not.",16,N],[12,"ast","","The regular expression under repetition.",16,N],[3,"RepetitionOp","","The repetition operator itself.",N,N],[12,"span","","The span of this operator. This includes things like `+`,…",17,N],[12,"kind","","The type of operation.",17,N],[3,"Group","","A grouped regular expression.",N,N],[12,"span","","The span of this group.",18,N],[12,"kind","","The kind of this group.",18,N],[12,"ast","","The regular expression in this group.",18,N],[3,"CaptureName","","A capture name.",N,N],[12,"span","","The span of this capture name.",19,N],[12,"name","","The capture name.",19,N],[12,"index","","The capture index.",19,N],[3,"SetFlags","","A group of flags that is not applied to a particular…",N,N],[12,"span","","The span of these flags, including the grouping parentheses.",20,N],[12,"flags","","The actual sequence of flags.",20,N],[3,"Flags","","A group of flags.",N,N],[12,"span","","The span of this group of flags.",21,N],[12,"items","","A sequence of flag items. Each item is either a flag or a…",21,N],[3,"FlagsItem","","A single item in a group of flags.",N,N],[12,"span","","The span of this item.",22,N],[12,"kind","","The kind of this item.",22,N],[4,"ErrorKind","","The type of an error that occurred while building an AST.",N,N],[13,"CaptureLimitExceeded","","The capturing group limit was exceeded.",23,N],[13,"ClassEscapeInvalid","","An invalid escape sequence was found in a character class…",23,N],[13,"ClassRangeInvalid","","An invalid character class range was found. An invalid…",23,N],[13,"ClassRangeLiteral","","An invalid range boundary was found in a character class.…",23,N],[13,"ClassUnclosed","","An opening `[` was found with no corresponding closing `]`.",23,N],[13,"DecimalEmpty","","An empty decimal number was given where one was expected.",23,N],[13,"DecimalInvalid","","An invalid decimal number was given where one was expected.",23,N],[13,"EscapeHexEmpty","","A bracketed hex literal was empty.",23,N],[13,"EscapeHexInvalid","","A bracketed hex literal did not correspond to a Unicode…",23,N],[13,"EscapeHexInvalidDigit","","An invalid hexadecimal digit was found.",23,N],[13,"EscapeUnexpectedEof","","EOF was found before an escape sequence was completed.",23,N],[13,"EscapeUnrecognized","","An unrecognized escape sequence.",23,N],[13,"FlagDanglingNegation","","A dangling negation was used when setting flags, e.g., `i-`.",23,N],[13,"FlagDuplicate","","A flag was used twice, e.g., `i-i`.",23,N],[12,"original","regex_syntax::ast::ErrorKind","The position of the original flag. The error position…",23,N],[13,"FlagRepeatedNegation","regex_syntax::ast","The negation operator was used twice, e.g., `-i-s`.",23,N],[12,"original","regex_syntax::ast::ErrorKind","The position of the original negation operator. The error…",23,N],[13,"FlagUnexpectedEof","regex_syntax::ast","Expected a flag but got EOF, e.g., `(?`.",23,N],[13,"FlagUnrecognized","","Unrecognized flag, e.g., `a`.",23,N],[13,"GroupNameDuplicate","","A duplicate capture name was found.",23,N],[12,"original","regex_syntax::ast::ErrorKind","The position of the initial occurrence of the capture…",23,N],[13,"GroupNameEmpty","regex_syntax::ast","A capture group name is empty, e.g., `(?P<>abc)`.",23,N],[13,"GroupNameInvalid","","An invalid character was seen for a capture group name.…",23,N],[13,"GroupNameUnexpectedEof","","A closing `>` could not be found for a capture group name.",23,N],[13,"GroupUnclosed","","An unclosed group, e.g., `(ab`.",23,N],[13,"GroupUnopened","","An unopened group, e.g., `ab)`.",23,N],[13,"NestLimitExceeded","","The nest limit was exceeded. The limit stored here is the…",23,N],[13,"RepetitionCountInvalid","","The range provided in a counted repetition operator is…",23,N],[13,"RepetitionCountUnclosed","","An opening `{` was found with no corresponding closing `}`.",23,N],[13,"RepetitionMissing","","A repetition operator was applied to a missing…",23,N],[13,"UnsupportedBackreference","","When octal support is disabled, this error is produced…",23,N],[13,"UnsupportedLookAround","","When syntax similar to PCRE's look-around is used, this…",23,N],[4,"Ast","","An abstract syntax tree for a single regular expression.",N,N],[13,"Empty","","An empty regex that matches everything.",24,N],[13,"Flags","","A set of flags, e.g., `(?is)`.",24,N],[13,"Literal","","A single character literal, which includes escape sequences.",24,N],[13,"Dot","","The \"any character\" class.",24,N],[13,"Assertion","","A single zero-width assertion.",24,N],[13,"Class","","A single character class. This includes all forms of…",24,N],[13,"Repetition","","A repetition operator applied to an arbitrary regular…",24,N],[13,"Group","","A grouped regular expression.",24,N],[13,"Alternation","","An alternation of regular expressions.",24,N],[13,"Concat","","A concatenation of regular expressions.",24,N],[4,"LiteralKind","","The kind of a single literal expression.",N,N],[13,"Verbatim","","The literal is written verbatim, e.g., `a` or `☃`.",25,N],[13,"Punctuation","","The literal is written as an escape because it is…",25,N],[13,"Octal","","The literal is written as an octal escape, e.g., `\\141`.",25,N],[13,"HexFixed","","The literal is written as a hex code with a fixed number…",25,N],[13,"HexBrace","","The literal is written as a hex code with a bracketed…",25,N],[13,"Special","","The literal is written as a specially recognized escape,…",25,N],[4,"SpecialLiteralKind","","The type of a special literal.",N,N],[13,"Bell","","Bell, spelled `\\a` (`\\x07`).",26,N],[13,"FormFeed","","Form feed, spelled `\\f` (`\\x0C`).",26,N],[13,"Tab","","Tab, spelled `\\t` (`\\x09`).",26,N],[13,"LineFeed","","Line feed, spelled `\\n` (`\\x0A`).",26,N],[13,"CarriageReturn","","Carriage return, spelled `\\r` (`\\x0D`).",26,N],[13,"VerticalTab","","Vertical tab, spelled `\\v` (`\\x0B`).",26,N],[13,"Space","","Space, spelled `\\` (`\\x20`). Note that this can only…",26,N],[4,"HexLiteralKind","","The type of a Unicode hex literal.",N,N],[13,"X","","A `\\x` prefix. When used without brackets, this form is…",27,N],[13,"UnicodeShort","","A `\\u` prefix. When used without brackets, this form is…",27,N],[13,"UnicodeLong","","A `\\U` prefix. When used without brackets, this form is…",27,N],[4,"Class","","A single character class expression.",N,N],[13,"Unicode","","A Unicode character class, e.g., `\\pL` or `\\p{Greek}`.",28,N],[13,"Perl","","A perl character class, e.g., `\\d` or `\\W`.",28,N],[13,"Bracketed","","A bracketed character class set, which may contain zero or…",28,N],[4,"ClassPerlKind","","The available Perl character classes.",N,N],[13,"Digit","","Decimal numbers.",29,N],[13,"Space","","Whitespace.",29,N],[13,"Word","","Word characters.",29,N],[4,"ClassAsciiKind","","The available ASCII character classes.",N,N],[13,"Alnum","","`[0-9A-Za-z]`",30,N],[13,"Alpha","","`[A-Za-z]`",30,N],[13,"Ascii","","`[\\x00-\\x7F]`",30,N],[13,"Blank","","`[ \\t]`",30,N],[13,"Cntrl","","`[\\x00-\\x1F\\x7F]`",30,N],[13,"Digit","","`[0-9]`",30,N],[13,"Graph","","`[!-~]`",30,N],[13,"Lower","","`[a-z]`",30,N],[13,"Print","","`[ -~]`",30,N],[13,"Punct","","`[!-/:-@\\[-`{-~]`",30,N],[13,"Space","","`[\\t\\n\\v\\f\\r ]`",30,N],[13,"Upper","","`[A-Z]`",30,N],[13,"Word","","`[0-9A-Za-z_]`",30,N],[13,"Xdigit","","`[0-9A-Fa-f]`",30,N],[4,"ClassUnicodeKind","","The available forms of Unicode character classes.",N,N],[13,"OneLetter","","A one letter abbreviated class, e.g., `\\pN`.",31,N],[13,"Named","","A binary property, general category or script. The string…",31,N],[13,"NamedValue","","A property name and an associated value.",31,N],[12,"op","regex_syntax::ast::ClassUnicodeKind","The type of Unicode op used to associate `name` with…",31,N],[12,"name","","The property name (which may be empty).",31,N],[12,"value","","The property value (which may be empty).",31,N],[4,"ClassUnicodeOpKind","regex_syntax::ast","The type of op used in a Unicode character class.",N,N],[13,"Equal","","A property set to a specific value, e.g.,…",32,N],[13,"Colon","","A property set to a specific value using a colon, e.g.,…",32,N],[13,"NotEqual","","A property that isn't a particular value, e.g.,…",32,N],[4,"ClassSet","","A character class set.",N,N],[13,"Item","","An item, which can be a single literal, range, nested…",33,N],[13,"BinaryOp","","A single binary operation (i.e., &&, -- or ~~).",33,N],[4,"ClassSetItem","","A single component of a character class set.",N,N],[13,"Empty","","An empty item.",34,N],[13,"Literal","","A single literal.",34,N],[13,"Range","","A range between two literals.",34,N],[13,"Ascii","","An ASCII character class, e.g., `[:alnum:]` or `[:punct:]`.",34,N],[13,"Unicode","","A Unicode character class, e.g., `\\pL` or `\\p{Greek}`.",34,N],[13,"Perl","","A perl character class, e.g., `\\d` or `\\W`.",34,N],[13,"Bracketed","","A bracketed character class set, which may contain zero or…",34,N],[13,"Union","","A union of items.",34,N],[4,"ClassSetBinaryOpKind","","The type of a Unicode character class set operation.",N,N],[13,"Intersection","","The intersection of two sets, e.g., `\\pN&&[a-z]`.",35,N],[13,"Difference","","The difference of two sets, e.g., `\\pN--[0-9]`.",35,N],[13,"SymmetricDifference","","The symmetric difference of two sets. The symmetric…",35,N],[4,"AssertionKind","","An assertion kind.",N,N],[13,"StartLine","","`^`",36,N],[13,"EndLine","","`$`",36,N],[13,"StartText","","`\\A`",36,N],[13,"EndText","","`\\z`",36,N],[13,"WordBoundary","","`\\b`",36,N],[13,"NotWordBoundary","","`\\B`",36,N],[4,"RepetitionKind","","The kind of a repetition operator.",N,N],[13,"ZeroOrOne","","`?`",37,N],[13,"ZeroOrMore","","`*`",37,N],[13,"OneOrMore","","`+`",37,N],[13,"Range","","`{m,n}`",37,N],[4,"RepetitionRange","","A range repetition operator.",N,N],[13,"Exactly","","`{m}`",38,N],[13,"AtLeast","","`{m,}`",38,N],[13,"Bounded","","`{m,n}`",38,N],[4,"GroupKind","","The kind of a group.",N,N],[13,"CaptureIndex","","`(a)`",39,N],[13,"CaptureName","","`(?P<name>a)`",39,N],[13,"NonCapturing","","`(?:a)` and `(?i:a)`",39,N],[4,"FlagsItemKind","","The kind of an item in a group of flags.",N,N],[13,"Negation","","A negation operator applied to all subsequent flags in the…",40,N],[13,"Flag","","A single flag in a group.",40,N],[4,"Flag","","A single flag.",N,N],[13,"CaseInsensitive","","`i`",41,N],[13,"MultiLine","","`m`",41,N],[13,"DotMatchesNewLine","","`s`",41,N],[13,"SwapGreed","","`U`",41,N],[13,"Unicode","","`u`",41,N],[13,"IgnoreWhitespace","","`x`",41,N],[5,"visit","","Executes an implementation of `Visitor` in constant stack…",N,[[["ast"],["v"]],["result"]]],[0,"parse","","This module provides a regular expression parser.",N,N],[3,"ParserBuilder","regex_syntax::ast::parse","A builder for a regular expression parser.",N,N],[3,"Parser","","A regular expression parser.",N,N],[11,"new","","Create a new parser builder with a default configuration.",42,[[],["parserbuilder"]]],[11,"build","","Build a parser from this configuration with the given…",42,[[["self"]],["parser"]]],[11,"nest_limit","","Set the nesting limit for this parser.",42,[[["self"],["u32"]],["parserbuilder"]]],[11,"octal","","Whether to support octal syntax or not.",42,[[["self"],["bool"]],["parserbuilder"]]],[11,"ignore_whitespace","","Enable verbose mode in the regular expression.",42,[[["self"],["bool"]],["parserbuilder"]]],[11,"new","","Create a new parser with a default configuration.",43,[[],["parser"]]],[11,"parse","","Parse the regular expression into an abstract syntax tree.",43,[[["self"],["str"]],["result",["ast","error"]]]],[11,"parse_with_comments","","Parse the regular expression and return an abstract syntax…",43,[[["self"],["str"]],["result",["withcomments","error"]]]],[0,"print","regex_syntax::ast","This module provides a regular expression printer for `Ast`.",N,N],[3,"Printer","regex_syntax::ast::print","A printer for a regular expression abstract syntax tree.",N,N],[11,"new","","Create a new printer.",44,[[],["printer"]]],[11,"print","","Print the given `Ast` to the given writer. The writer must…",44,[[["self"],["ast"],["w"]],["result"]]],[8,"Visitor","regex_syntax::ast","A trait for visiting an abstract syntax tree (AST) in…",N,N],[16,"Output","","The result of visiting an AST.",45,N],[16,"Err","","An error that visiting an AST might return.",45,N],[10,"finish","","All implementors of `Visitor` must provide a `finish`…",45,[[["self"]],["result"]]],[11,"start","","This method is called before beginning traversal of the AST.",45,[[["self"]]]],[11,"visit_pre","","This method is called on an `Ast` before descending into…",45,[[["self"],["ast"]],["result"]]],[11,"visit_post","","This method is called on an `Ast` after descending all of…",45,[[["self"],["ast"]],["result"]]],[11,"visit_alternation_in","","This method is called between child nodes of an…",45,[[["self"]],["result"]]],[11,"visit_class_set_item_pre","","This method is called on every `ClassSetItem` before…",45,[[["self"],["classsetitem"]],["result"]]],[11,"visit_class_set_item_post","","This method is called on every `ClassSetItem` after…",45,[[["self"],["classsetitem"]],["result"]]],[11,"visit_class_set_binary_op_pre","","This method is called on every `ClassSetBinaryOp` before…",45,[[["self"],["classsetbinaryop"]],["result"]]],[11,"visit_class_set_binary_op_post","","This method is called on every `ClassSetBinaryOp` after…",45,[[["self"],["classsetbinaryop"]],["result"]]],[11,"visit_class_set_binary_op_in","","This method is called between the left hand and right hand…",45,[[["self"],["classsetbinaryop"]],["result"]]],[11,"kind","","Return the type of this error.",46,[[["self"]],["errorkind"]]],[11,"pattern","","The original pattern string in which this error occurred.",46,[[["self"]],["str"]]],[11,"span","","Return the span at which this error occurred.",46,[[["self"]],["span"]]],[11,"auxiliary_span","","Return an auxiliary span. This span exists only for some…",46,[[["self"]],["option",["span"]]]],[11,"new","","Create a new span with the given positions.",1,[[["position"],["position"]],["span"]]],[11,"splat","","Create a new span using the given position as the start…",1,[[["position"]],["span"]]],[11,"with_start","","Create a new span by replacing the starting the position…",1,[[["self"],["position"]],["span"]]],[11,"with_end","","Create a new span by replacing the ending the position…",1,[[["self"],["position"]],["span"]]],[11,"is_one_line","","Returns true if and only if this span occurs on a single…",1,[[["self"]],["bool"]]],[11,"is_empty","","Returns true if and only if this span is empty. That is,…",1,[[["self"]],["bool"]]],[11,"new","","Create a new position with the given information.",2,[[["usize"],["usize"],["usize"]],["position"]]],[11,"span","","Return the span of this abstract syntax tree.",24,[[["self"]],["span"]]],[11,"is_empty","","Return true if and only if this Ast is empty.",24,[[["self"]],["bool"]]],[11,"into_ast","","Return this alternation as an AST.",5,[[["self"]],["ast"]]],[11,"into_ast","","Return this concatenation as an AST.",6,[[["self"]],["ast"]]],[11,"byte","","If this literal was written as a `\\x` hex escape, then…",7,[[["self"]],["option",["u8"]]]],[11,"digits","","The number of digits that must be used with this literal…",27,[[["self"]],["u32"]]],[11,"span","","Return the span of this character class.",28,[[["self"]],["span"]]],[11,"from_name","","Return the corresponding ClassAsciiKind variant for the…",30,[[["str"]],["option",["classasciikind"]]]],[11,"is_negated","","Returns true if this class has been negated.",10,[[["self"]],["bool"]]],[11,"is_equal","","Whether the op is an equality op or not.",32,[[["self"]],["bool"]]],[11,"union","","Build a set from a union.",33,[[["classsetunion"]],["classset"]]],[11,"span","","Return the span of this character class set.",33,[[["self"]],["span"]]],[11,"span","","Return the span of this character class set item.",34,[[["self"]],["span"]]],[11,"is_valid","","Returns true if and only if this character class range is…",12,[[["self"]],["bool"]]],[11,"push","","Push a new item in this union.",13,[[["self"],["classsetitem"]]]],[11,"into_item","","Return this union as a character class set item.",13,[[["self"]],["classsetitem"]]],[11,"is_valid","","Returns true if and only if this repetition range is valid.",38,[[["self"]],["bool"]]],[11,"flags","","If this group is non-capturing, then this returns the…",18,[[["self"]],["option",["flags"]]]],[11,"is_capturing","","Returns true if and only if this group is capturing.",18,[[["self"]],["bool"]]],[11,"capture_index","","Returns the capture index of this group, if this is a…",18,[[["self"]],["option",["u32"]]]],[11,"add_item","","Add the given item to this sequence of flags.",21,[[["self"],["flagsitem"]],["option",["usize"]]]],[11,"flag_state","","Returns the state of the given flag in this set.",21,[[["self"],["flag"]],["option",["bool"]]]],[11,"is_negation","","Returns true if and only if this item is a negation…",40,[[["self"]],["bool"]]],[0,"hir","regex_syntax","Defines a high-level intermediate representation for…",N,N],[3,"Error","regex_syntax::hir","An error that can occur while translating an `Ast` to a…",N,N],[3,"Hir","","A high-level intermediate representation (HIR) for a…",N,N],[3,"ClassUnicode","","A set of characters represented by Unicode scalar values.",N,N],[3,"ClassUnicodeIter","","An iterator over all ranges in a Unicode character class.",N,N],[3,"ClassUnicodeRange","","A single range of characters represented by Unicode scalar…",N,N],[3,"ClassBytes","","A set of characters represented by arbitrary bytes (where…",N,N],[3,"ClassBytesIter","","An iterator over all ranges in a byte character class.",N,N],[3,"ClassBytesRange","","A single range of characters represented by arbitrary bytes.",N,N],[3,"Group","","The high-level intermediate representation for a group.",N,N],[12,"kind","","The kind of this group. If it is a capturing group, then…",47,N],[12,"hir","","The expression inside the capturing group, which may be…",47,N],[3,"Repetition","","The high-level intermediate representation of a repetition…",N,N],[12,"kind","","The kind of this repetition operator.",48,N],[12,"greedy","","Whether this repetition operator is greedy or not. A…",48,N],[12,"hir","","The expression being repeated.",48,N],[4,"ErrorKind","","The type of an error that occurred while building an `Hir`.",N,N],[13,"UnicodeNotAllowed","","This error occurs when a Unicode feature is used when…",49,N],[13,"InvalidUtf8","","This error occurs when translating a pattern that could…",49,N],[13,"UnicodePropertyNotFound","","This occurs when an unrecognized Unicode property name…",49,N],[13,"UnicodePropertyValueNotFound","","This occurs when an unrecognized Unicode property value…",49,N],[13,"EmptyClassNotAllowed","","This occurs when the translator attempts to construct a…",49,N],[4,"HirKind","","The kind of an arbitrary `Hir` expression.",N,N],[13,"Empty","","The empty regular expression, which matches everything,…",50,N],[13,"Literal","","A single literal character that matches exactly this…",50,N],[13,"Class","","A single character class that matches any of the…",50,N],[13,"Anchor","","An anchor assertion. An anchor assertion match always has…",50,N],[13,"WordBoundary","","A word boundary assertion, which may or may not be Unicode…",50,N],[13,"Repetition","","A repetition operation applied to a child expression.",50,N],[13,"Group","","A possibly capturing group, which contains a child…",50,N],[13,"Concat","","A concatenation of expressions. A concatenation always has…",50,N],[13,"Alternation","","An alternation of expressions. An alternation always has…",50,N],[4,"Literal","","The high-level intermediate representation of a literal.",N,N],[13,"Unicode","","A single character represented by a Unicode scalar value.",51,N],[13,"Byte","","A single character represented by an arbitrary byte.",51,N],[4,"Class","","The high-level intermediate representation of a character…",N,N],[13,"Unicode","","A set of characters represented by Unicode scalar values.",52,N],[13,"Bytes","","A set of characters represented by arbitrary bytes (one…",52,N],[4,"Anchor","","The high-level intermediate representation for an anchor…",N,N],[13,"StartLine","","Match the beginning of a line or the beginning of text.…",53,N],[13,"EndLine","","Match the end of a line or the end of text. Specifically,…",53,N],[13,"StartText","","Match the beginning of text. Specifically, this matches at…",53,N],[13,"EndText","","Match the end of text. Specifically, this matches at the…",53,N],[4,"WordBoundary","","The high-level intermediate representation for a…",N,N],[13,"Unicode","","Match a Unicode-aware word boundary. That is, this matches…",54,N],[13,"UnicodeNegate","","Match a Unicode-aware negation of a word boundary.",54,N],[13,"Ascii","","Match an ASCII-only word boundary. That is, this matches a…",54,N],[13,"AsciiNegate","","Match an ASCII-only negation of a word boundary.",54,N],[4,"GroupKind","","The kind of group.",N,N],[13,"CaptureIndex","","A normal unnamed capturing group.",55,N],[13,"CaptureName","","A named capturing group.",55,N],[12,"name","regex_syntax::hir::GroupKind","The name of the group.",55,N],[12,"index","","The capture index of the group.",55,N],[13,"NonCapturing","regex_syntax::hir","A non-capturing group.",55,N],[4,"RepetitionKind","","The kind of a repetition operator.",N,N],[13,"ZeroOrOne","","Matches a sub-expression zero or one times.",56,N],[13,"ZeroOrMore","","Matches a sub-expression zero or more times.",56,N],[13,"OneOrMore","","Matches a sub-expression one or more times.",56,N],[13,"Range","","Matches a sub-expression within a bounded range of times.",56,N],[4,"RepetitionRange","","The kind of a counted repetition operator.",N,N],[13,"Exactly","","Matches a sub-expression exactly this many times.",57,N],[13,"AtLeast","","Matches a sub-expression at least this many times.",57,N],[13,"Bounded","","Matches a sub-expression at least `m` times and at most…",57,N],[5,"visit","","Executes an implementation of `Visitor` in constant stack…",N,[[["hir"],["v"]],["result"]]],[0,"literal","","Provides routines for extracting literal prefixes and…",N,N],[3,"Literals","regex_syntax::hir::literal","A set of literal byte strings extracted from a regular…",N,N],[3,"Literal","","A single member of a set of literals extracted from a…",N,N],[11,"empty","","Returns a new empty set of literals using default limits.",58,[[],["literals"]]],[11,"prefixes","","Returns a set of literal prefixes extracted from the given…",58,[[["hir"]],["literals"]]],[11,"suffixes","","Returns a set of literal suffixes extracted from the given…",58,[[["hir"]],["literals"]]],[11,"limit_size","","Get the approximate size limit (in bytes) of this set.",58,[[["self"]],["usize"]]],[11,"set_limit_size","","Set the approximate size limit (in bytes) of this set.",58,[[["self"],["usize"]],["literals"]]],[11,"limit_class","","Get the character class size limit for this set.",58,[[["self"]],["usize"]]],[11,"set_limit_class","","Limits the size of character(or byte) classes considered.",58,[[["self"],["usize"]],["literals"]]],[11,"literals","","Returns the set of literals as a slice. Its order is…",58,N],[11,"min_len","","Returns the length of the smallest literal.",58,[[["self"]],["option",["usize"]]]],[11,"all_complete","","Returns true if all members in this set are complete.",58,[[["self"]],["bool"]]],[11,"any_complete","","Returns true if any member in this set is complete.",58,[[["self"]],["bool"]]],[11,"contains_empty","","Returns true if this set contains an empty literal.",58,[[["self"]],["bool"]]],[11,"is_empty","","Returns true if this set is empty or if all of its members…",58,[[["self"]],["bool"]]],[11,"to_empty","","Returns a new empty set of literals using this set's limits.",58,[[["self"]],["literals"]]],[11,"longest_common_prefix","","Returns the longest common prefix of all members in this…",58,N],[11,"longest_common_suffix","","Returns the longest common suffix of all members in this…",58,N],[11,"trim_suffix","","Returns a new set of literals with the given number of…",58,[[["self"],["usize"]],["option",["literals"]]]],[11,"unambiguous_prefixes","","Returns a new set of prefixes of this set of literals that…",58,[[["self"]],["literals"]]],[11,"unambiguous_suffixes","","Returns a new set of suffixes of this set of literals that…",58,[[["self"]],["literals"]]],[11,"union_prefixes","","Unions the prefixes from the given expression to this set.",58,[[["self"],["hir"]],["bool"]]],[11,"union_suffixes","","Unions the suffixes from the given expression to this set.",58,[[["self"],["hir"]],["bool"]]],[11,"union","","Unions this set with another set.",58,[[["self"],["literals"]],["bool"]]],[11,"cross_product","","Extends this set with another set.",58,[[["self"],["literals"]],["bool"]]],[11,"cross_add","","Extends each literal in this set with the bytes given.",58,N],[11,"add","","Adds the given literal to this set.",58,[[["self"],["literal"]],["bool"]]],[11,"add_char_class","","Extends each literal in this set with the character class…",58,[[["self"],["classunicode"]],["bool"]]],[11,"add_byte_class","","Extends each literal in this set with the byte class given.",58,[[["self"],["classbytes"]],["bool"]]],[11,"cut","","Cuts every member of this set. When a member is cut, it…",58,[[["self"]]]],[11,"reverse","","Reverses all members in place.",58,[[["self"]]]],[11,"clear","","Clears this set of all members.",58,[[["self"]]]],[11,"new","","Returns a new complete literal with the bytes given.",59,[[["vec",["u8"]]],["literal"]]],[11,"empty","","Returns a new complete empty literal.",59,[[],["literal"]]],[11,"is_cut","","Returns true if this literal was \"cut.\"",59,[[["self"]],["bool"]]],[11,"cut","","Cuts this literal.",59,[[["self"]]]],[0,"print","regex_syntax::hir","This module provides a regular expression printer for `Hir`.",N,N],[3,"Printer","regex_syntax::hir::print","A printer for a regular expression's high-level…",N,N],[11,"new","","Create a new printer.",60,[[],["printer"]]],[11,"print","","Print the given `Ast` to the given writer. The writer must…",60,[[["self"],["hir"],["w"]],["result"]]],[0,"translate","regex_syntax::hir","Defines a translator that converts an `Ast` to an `Hir`.",N,N],[3,"TranslatorBuilder","regex_syntax::hir::translate","A builder for constructing an AST->HIR translator.",N,N],[3,"Translator","","A translator maps abstract syntax to a high level…",N,N],[11,"new","","Create a new translator builder with a default c…",61,[[],["translatorbuilder"]]],[11,"build","","Build a translator using the current configuration.",61,[[["self"]],["translator"]]],[11,"allow_invalid_utf8","","When enabled, translation will permit the construction of…",61,[[["self"],["bool"]],["translatorbuilder"]]],[11,"case_insensitive","","Enable or disable the case insensitive flag (`i`) by…",61,[[["self"],["bool"]],["translatorbuilder"]]],[11,"multi_line","","Enable or disable the multi-line matching flag (`m`) by…",61,[[["self"],["bool"]],["translatorbuilder"]]],[11,"dot_matches_new_line","","Enable or disable the \"dot matches any character\" flag…",61,[[["self"],["bool"]],["translatorbuilder"]]],[11,"swap_greed","","Enable or disable the \"swap greed\" flag (`U`) by default.",61,[[["self"],["bool"]],["translatorbuilder"]]],[11,"unicode","","Enable or disable the Unicode flag (`u`) by default.",61,[[["self"],["bool"]],["translatorbuilder"]]],[11,"new","","Create a new translator using the default configuration.",62,[[],["translator"]]],[11,"translate","","Translate the given abstract syntax tree (AST) into a high…",62,[[["self"],["str"],["ast"]],["result",["hir","error"]]]],[8,"Visitor","regex_syntax::hir","A trait for visiting the high-level IR (HIR) in depth…",N,N],[16,"Output","","The result of visiting an HIR.",63,N],[16,"Err","","An error that visiting an HIR might return.",63,N],[10,"finish","","All implementors of `Visitor` must provide a `finish`…",63,[[["self"]],["result"]]],[11,"start","","This method is called before beginning traversal of the HIR.",63,[[["self"]]]],[11,"visit_pre","","This method is called on an `Hir` before descending into…",63,[[["self"],["hir"]],["result"]]],[11,"visit_post","","This method is called on an `Hir` after descending all of…",63,[[["self"],["hir"]],["result"]]],[11,"visit_alternation_in","","This method is called between child nodes of an alternation.",63,[[["self"]],["result"]]],[11,"kind","","Return the type of this error.",64,[[["self"]],["errorkind"]]],[11,"pattern","","The original pattern string in which this error occurred.",64,[[["self"]],["str"]]],[11,"span","","Return the span at which this error occurred.",64,[[["self"]],["span"]]],[11,"kind","","Returns a reference to the underlying HIR kind.",65,[[["self"]],["hirkind"]]],[11,"into_kind","","Consumes ownership of this HIR expression and returns its…",65,[[["self"]],["hirkind"]]],[11,"empty","","Returns an empty HIR expression.",65,[[],["hir"]]],[11,"literal","","Creates a literal HIR expression.",65,[[["literal"]],["hir"]]],[11,"class","","Creates a class HIR expression.",65,[[["class"]],["hir"]]],[11,"anchor","","Creates an anchor assertion HIR expression.",65,[[["anchor"]],["hir"]]],[11,"word_boundary","","Creates a word boundary assertion HIR expression.",65,[[["wordboundary"]],["hir"]]],[11,"repetition","","Creates a repetition HIR expression.",65,[[["repetition"]],["hir"]]],[11,"group","","Creates a group HIR expression.",65,[[["group"]],["hir"]]],[11,"concat","","Returns the concatenation of the given expressions.",65,[[["vec",["hir"]]],["hir"]]],[11,"alternation","","Returns the alternation of the given expressions.",65,[[["vec",["hir"]]],["hir"]]],[11,"dot","","Build an HIR expression for `.`.",65,[[["bool"]],["hir"]]],[11,"any","","Build an HIR expression for `(?s).`.",65,[[["bool"]],["hir"]]],[11,"is_always_utf8","","Return true if and only if this HIR will always match…",65,[[["self"]],["bool"]]],[11,"is_all_assertions","","Returns true if and only if this entire HIR expression is…",65,[[["self"]],["bool"]]],[11,"is_anchored_start","","Return true if and only if this HIR is required to match…",65,[[["self"]],["bool"]]],[11,"is_anchored_end","","Return true if and only if this HIR is required to match…",65,[[["self"]],["bool"]]],[11,"is_any_anchored_start","","Return true if and only if this HIR contains any…",65,[[["self"]],["bool"]]],[11,"is_any_anchored_end","","Return true if and only if this HIR contains any…",65,[[["self"]],["bool"]]],[11,"is_match_empty","","Return true if and only if the empty string is part of the…",65,[[["self"]],["bool"]]],[11,"is_empty","","Return true if and only if this HIR is the empty regular…",50,[[["self"]],["bool"]]],[11,"has_subexprs","","Returns true if and only if this kind has any (including…",50,[[["self"]],["bool"]]],[11,"is_unicode","","Returns true if and only if this literal corresponds to a…",51,[[["self"]],["bool"]]],[11,"case_fold_simple","","Apply Unicode simple case folding to this character class,…",52,[[["self"]]]],[11,"negate","","Negate this character class in place.",52,[[["self"]]]],[11,"is_always_utf8","","Returns true if and only if this character class will only…",52,[[["self"]],["bool"]]],[11,"new","","Create a new class from a sequence of ranges.",66,[[["i"]],["classunicode"]]],[11,"empty","","Create a new class with no ranges.",66,[[],["classunicode"]]],[11,"push","","Add a new range to this set.",66,[[["self"],["classunicoderange"]]]],[11,"iter","","Return an iterator over all ranges in this class.",66,[[["self"]],["classunicodeiter"]]],[11,"ranges","","Return the underlying ranges as a slice.",66,N],[11,"case_fold_simple","","Expand this character class such that it contains all case…",66,[[["self"]]]],[11,"negate","","Negate this character class.",66,[[["self"]]]],[11,"union","","Union this character class with the given character class,…",66,[[["self"],["classunicode"]]]],[11,"intersect","","Intersect this character class with the given character…",66,[[["self"],["classunicode"]]]],[11,"difference","","Subtract the given character class from this character…",66,[[["self"],["classunicode"]]]],[11,"symmetric_difference","","Compute the symmetric difference of the given character…",66,[[["self"],["classunicode"]]]],[11,"new","","Create a new Unicode scalar value range for a character…",67,[[["char"],["char"]],["classunicoderange"]]],[11,"start","","Return the start of this range.",67,[[["self"]],["char"]]],[11,"end","","Return the end of this range.",67,[[["self"]],["char"]]],[11,"new","","Create a new class from a sequence of ranges.",68,[[["i"]],["classbytes"]]],[11,"empty","","Create a new class with no ranges.",68,[[],["classbytes"]]],[11,"push","","Add a new range to this set.",68,[[["self"],["classbytesrange"]]]],[11,"iter","","Return an iterator over all ranges in this class.",68,[[["self"]],["classbytesiter"]]],[11,"ranges","","Return the underlying ranges as a slice.",68,N],[11,"case_fold_simple","","Expand this character class such that it contains all case…",68,[[["self"]]]],[11,"negate","","Negate this byte class.",68,[[["self"]]]],[11,"union","","Union this byte class with the given byte class, in place.",68,[[["self"],["classbytes"]]]],[11,"intersect","","Intersect this byte class with the given byte class, in…",68,[[["self"],["classbytes"]]]],[11,"difference","","Subtract the given byte class from this byte class, in…",68,[[["self"],["classbytes"]]]],[11,"symmetric_difference","","Compute the symmetric difference of the given byte…",68,[[["self"],["classbytes"]]]],[11,"is_all_ascii","","Returns true if and only if this character class will…",68,[[["self"]],["bool"]]],[11,"new","","Create a new byte range for a character class.",69,[[["u8"],["u8"]],["classbytesrange"]]],[11,"start","","Return the start of this range.",69,[[["self"]],["u8"]]],[11,"end","","Return the end of this range.",69,[[["self"]],["u8"]]],[11,"is_negated","","Returns true if and only if this word boundary assertion…",54,[[["self"]],["bool"]]],[11,"is_match_empty","","Returns true if and only if this repetition operator makes…",48,[[["self"]],["bool"]]],[11,"new","regex_syntax","Create a new parser builder with a default configuration.",70,[[],["parserbuilder"]]],[11,"build","","Build a parser from this configuration with the given…",70,[[["self"]],["parser"]]],[11,"nest_limit","","Set the nesting limit for this parser.",70,[[["self"],["u32"]],["parserbuilder"]]],[11,"octal","","Whether to support octal syntax or not.",70,[[["self"],["bool"]],["parserbuilder"]]],[11,"allow_invalid_utf8","","When enabled, the parser will permit the construction of a…",70,[[["self"],["bool"]],["parserbuilder"]]],[11,"ignore_whitespace","","Enable verbose mode in the regular expression.",70,[[["self"],["bool"]],["parserbuilder"]]],[11,"case_insensitive","","Enable or disable the case insensitive flag by default.",70,[[["self"],["bool"]],["parserbuilder"]]],[11,"multi_line","","Enable or disable the multi-line matching flag by default.",70,[[["self"],["bool"]],["parserbuilder"]]],[11,"dot_matches_new_line","","Enable or disable the \"dot matches any character\" flag by…",70,[[["self"],["bool"]],["parserbuilder"]]],[11,"swap_greed","","Enable or disable the \"swap greed\" flag by default.",70,[[["self"],["bool"]],["parserbuilder"]]],[11,"unicode","","Enable or disable the Unicode flag (`u`) by default.",70,[[["self"],["bool"]],["parserbuilder"]]],[11,"new","","Create a new parser with a default configuration.",71,[[],["parser"]]],[11,"parse","","Parse the regular expression into a high level…",71,[[["self"],["str"]],["result",["hir"]]]],[6,"Result","","A type alias for dealing with errors returned by this crate.",N,N],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[["self"]],["u"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,N],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"try_into","","",71,[[["self"]],["result"]]],[11,"get_type_id","","",71,[[["self"]],["typeid"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[["self"]],["u"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,N],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"try_into","","",70,[[["self"]],["result"]]],[11,"get_type_id","","",70,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","regex_syntax::ast","",46,[[["t"]],["t"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,N],[11,"to_string","","",46,[[["self"]],["string"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"to_string","","",23,[[["self"]],["string"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"to_string","","",24,[[["self"]],["string"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,N],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,N],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,N],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,N],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,N],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,N],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,N],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,N],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,N],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,N],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,N],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,N],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,N],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,N],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,N],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"from","regex_syntax::ast::parse","",42,[[["t"]],["t"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,N],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"from","regex_syntax::ast::print","",44,[[["t"]],["t"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"from","regex_syntax::hir","",64,[[["t"]],["t"]]],[11,"into","","",64,[[["self"]],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,N],[11,"to_string","","",64,[[["self"]],["string"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[["self"]],["u"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,N],[11,"to_string","","",65,[[["self"]],["string"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[["self"]],["u"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,N],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into_iter","","",72,[[["self"]],["i"]]],[11,"into","","",72,[[["self"]],["u"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"try_into","","",72,[[["self"]],["result"]]],[11,"get_type_id","","",72,[[["self"]],["typeid"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[["self"]],["u"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,N],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[["self"]],["u"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,N],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"try_into","","",68,[[["self"]],["result"]]],[11,"get_type_id","","",68,[[["self"]],["typeid"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into_iter","","",73,[[["self"]],["i"]]],[11,"into","","",73,[[["self"]],["u"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"try_into","","",73,[[["self"]],["result"]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[["self"]],["u"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,N],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"try_into","","",69,[[["self"]],["result"]]],[11,"get_type_id","","",69,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,N],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,N],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,N],[11,"to_string","","",49,[[["self"]],["string"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,N],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,N],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,N],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,N],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,N],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,N],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,N],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,N],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"from","regex_syntax::hir::literal","",58,[[["t"]],["t"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,N],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,N],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"from","regex_syntax::hir::print","",60,[[["t"]],["t"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"from","regex_syntax::hir::translate","",61,[[["t"]],["t"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,N],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[["self"]],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,N],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"cmp","regex_syntax::ast","",1,[[["self"],["span"]],["ordering"]]],[11,"cmp","","",2,[[["self"],["position"]],["ordering"]]],[11,"cmp","regex_syntax::hir::literal","",59,[[["self"],["literal"]],["ordering"]]],[11,"cmp","regex_syntax::hir","",67,[[["self"],["classunicoderange"]],["ordering"]]],[11,"cmp","","",69,[[["self"],["classbytesrange"]],["ordering"]]],[11,"eq","regex_syntax::ast","",46,[[["self"],["error"]],["bool"]]],[11,"ne","","",46,[[["self"],["error"]],["bool"]]],[11,"eq","","",23,[[["self"],["errorkind"]],["bool"]]],[11,"ne","","",23,[[["self"],["errorkind"]],["bool"]]],[11,"eq","","",1,[[["self"],["span"]],["bool"]]],[11,"ne","","",1,[[["self"],["span"]],["bool"]]],[11,"eq","","",2,[[["self"],["position"]],["bool"]]],[11,"ne","","",2,[[["self"],["position"]],["bool"]]],[11,"eq","","",3,[[["self"],["withcomments"]],["bool"]]],[11,"ne","","",3,[[["self"],["withcomments"]],["bool"]]],[11,"eq","","",4,[[["self"],["comment"]],["bool"]]],[11,"ne","","",4,[[["self"],["comment"]],["bool"]]],[11,"eq","","",24,[[["self"],["ast"]],["bool"]]],[11,"ne","","",24,[[["self"],["ast"]],["bool"]]],[11,"eq","","",5,[[["self"],["alternation"]],["bool"]]],[11,"ne","","",5,[[["self"],["alternation"]],["bool"]]],[11,"eq","","",6,[[["self"],["concat"]],["bool"]]],[11,"ne","","",6,[[["self"],["concat"]],["bool"]]],[11,"eq","","",7,[[["self"],["literal"]],["bool"]]],[11,"ne","","",7,[[["self"],["literal"]],["bool"]]],[11,"eq","","",25,[[["self"],["literalkind"]],["bool"]]],[11,"ne","","",25,[[["self"],["literalkind"]],["bool"]]],[11,"eq","","",26,[[["self"],["specialliteralkind"]],["bool"]]],[11,"eq","","",27,[[["self"],["hexliteralkind"]],["bool"]]],[11,"eq","","",28,[[["self"],["class"]],["bool"]]],[11,"ne","","",28,[[["self"],["class"]],["bool"]]],[11,"eq","","",8,[[["self"],["classperl"]],["bool"]]],[11,"ne","","",8,[[["self"],["classperl"]],["bool"]]],[11,"eq","","",29,[[["self"],["classperlkind"]],["bool"]]],[11,"eq","","",9,[[["self"],["classascii"]],["bool"]]],[11,"ne","","",9,[[["self"],["classascii"]],["bool"]]],[11,"eq","","",30,[[["self"],["classasciikind"]],["bool"]]],[11,"eq","","",10,[[["self"],["classunicode"]],["bool"]]],[11,"ne","","",10,[[["self"],["classunicode"]],["bool"]]],[11,"eq","","",31,[[["self"],["classunicodekind"]],["bool"]]],[11,"ne","","",31,[[["self"],["classunicodekind"]],["bool"]]],[11,"eq","","",32,[[["self"],["classunicodeopkind"]],["bool"]]],[11,"eq","","",11,[[["self"],["classbracketed"]],["bool"]]],[11,"ne","","",11,[[["self"],["classbracketed"]],["bool"]]],[11,"eq","","",33,[[["self"],["classset"]],["bool"]]],[11,"ne","","",33,[[["self"],["classset"]],["bool"]]],[11,"eq","","",34,[[["self"],["classsetitem"]],["bool"]]],[11,"ne","","",34,[[["self"],["classsetitem"]],["bool"]]],[11,"eq","","",12,[[["self"],["classsetrange"]],["bool"]]],[11,"ne","","",12,[[["self"],["classsetrange"]],["bool"]]],[11,"eq","","",13,[[["self"],["classsetunion"]],["bool"]]],[11,"ne","","",13,[[["self"],["classsetunion"]],["bool"]]],[11,"eq","","",14,[[["self"],["classsetbinaryop"]],["bool"]]],[11,"ne","","",14,[[["self"],["classsetbinaryop"]],["bool"]]],[11,"eq","","",35,[[["self"],["classsetbinaryopkind"]],["bool"]]],[11,"eq","","",15,[[["self"],["assertion"]],["bool"]]],[11,"ne","","",15,[[["self"],["assertion"]],["bool"]]],[11,"eq","","",36,[[["self"],["assertionkind"]],["bool"]]],[11,"eq","","",16,[[["self"],["repetition"]],["bool"]]],[11,"ne","","",16,[[["self"],["repetition"]],["bool"]]],[11,"eq","","",17,[[["self"],["repetitionop"]],["bool"]]],[11,"ne","","",17,[[["self"],["repetitionop"]],["bool"]]],[11,"eq","","",37,[[["self"],["repetitionkind"]],["bool"]]],[11,"ne","","",37,[[["self"],["repetitionkind"]],["bool"]]],[11,"eq","","",38,[[["self"],["repetitionrange"]],["bool"]]],[11,"ne","","",38,[[["self"],["repetitionrange"]],["bool"]]],[11,"eq","","",18,[[["self"],["group"]],["bool"]]],[11,"ne","","",18,[[["self"],["group"]],["bool"]]],[11,"eq","","",39,[[["self"],["groupkind"]],["bool"]]],[11,"ne","","",39,[[["self"],["groupkind"]],["bool"]]],[11,"eq","","",19,[[["self"],["capturename"]],["bool"]]],[11,"ne","","",19,[[["self"],["capturename"]],["bool"]]],[11,"eq","","",20,[[["self"],["setflags"]],["bool"]]],[11,"ne","","",20,[[["self"],["setflags"]],["bool"]]],[11,"eq","","",21,[[["self"],["flags"]],["bool"]]],[11,"ne","","",21,[[["self"],["flags"]],["bool"]]],[11,"eq","","",22,[[["self"],["flagsitem"]],["bool"]]],[11,"ne","","",22,[[["self"],["flagsitem"]],["bool"]]],[11,"eq","","",40,[[["self"],["flagsitemkind"]],["bool"]]],[11,"ne","","",40,[[["self"],["flagsitemkind"]],["bool"]]],[11,"eq","","",41,[[["self"],["flag"]],["bool"]]],[11,"eq","regex_syntax","",0,[[["self"],["error"]],["bool"]]],[11,"ne","","",0,[[["self"],["error"]],["bool"]]],[11,"eq","regex_syntax::hir::literal","",58,[[["self"],["literals"]],["bool"]]],[11,"ne","","",58,[[["self"],["literals"]],["bool"]]],[11,"eq","","",59,[[["self"],["literal"]],["bool"]]],[11,"eq","regex_syntax::hir","",64,[[["self"],["error"]],["bool"]]],[11,"ne","","",64,[[["self"],["error"]],["bool"]]],[11,"eq","","",49,[[["self"],["errorkind"]],["bool"]]],[11,"eq","","",65,[[["self"],["hir"]],["bool"]]],[11,"ne","","",65,[[["self"],["hir"]],["bool"]]],[11,"eq","","",50,[[["self"],["hirkind"]],["bool"]]],[11,"ne","","",50,[[["self"],["hirkind"]],["bool"]]],[11,"eq","","",51,[[["self"],["literal"]],["bool"]]],[11,"ne","","",51,[[["self"],["literal"]],["bool"]]],[11,"eq","","",52,[[["self"],["class"]],["bool"]]],[11,"ne","","",52,[[["self"],["class"]],["bool"]]],[11,"eq","","",66,[[["self"],["classunicode"]],["bool"]]],[11,"ne","","",66,[[["self"],["classunicode"]],["bool"]]],[11,"eq","","",67,[[["self"],["classunicoderange"]],["bool"]]],[11,"ne","","",67,[[["self"],["classunicoderange"]],["bool"]]],[11,"eq","","",68,[[["self"],["classbytes"]],["bool"]]],[11,"ne","","",68,[[["self"],["classbytes"]],["bool"]]],[11,"eq","","",69,[[["self"],["classbytesrange"]],["bool"]]],[11,"ne","","",69,[[["self"],["classbytesrange"]],["bool"]]],[11,"eq","","",53,[[["self"],["anchor"]],["bool"]]],[11,"eq","","",54,[[["self"],["wordboundary"]],["bool"]]],[11,"eq","","",47,[[["self"],["group"]],["bool"]]],[11,"ne","","",47,[[["self"],["group"]],["bool"]]],[11,"eq","","",55,[[["self"],["groupkind"]],["bool"]]],[11,"ne","","",55,[[["self"],["groupkind"]],["bool"]]],[11,"eq","","",48,[[["self"],["repetition"]],["bool"]]],[11,"ne","","",48,[[["self"],["repetition"]],["bool"]]],[11,"eq","","",56,[[["self"],["repetitionkind"]],["bool"]]],[11,"ne","","",56,[[["self"],["repetitionkind"]],["bool"]]],[11,"eq","","",57,[[["self"],["repetitionrange"]],["bool"]]],[11,"ne","","",57,[[["self"],["repetitionrange"]],["bool"]]],[11,"from","regex_syntax","",0,[[["error"]],["error"]]],[11,"from","","",0,[[["error"]],["error"]]],[11,"clone","regex_syntax::ast::parse","",42,[[["self"]],["parserbuilder"]]],[11,"clone","","",43,[[["self"]],["parser"]]],[11,"clone","regex_syntax::ast","",46,[[["self"]],["error"]]],[11,"clone","","",23,[[["self"]],["errorkind"]]],[11,"clone","","",1,[[["self"]],["span"]]],[11,"clone","","",2,[[["self"]],["position"]]],[11,"clone","","",3,[[["self"]],["withcomments"]]],[11,"clone","","",4,[[["self"]],["comment"]]],[11,"clone","","",24,[[["self"]],["ast"]]],[11,"clone","","",5,[[["self"]],["alternation"]]],[11,"clone","","",6,[[["self"]],["concat"]]],[11,"clone","","",7,[[["self"]],["literal"]]],[11,"clone","","",25,[[["self"]],["literalkind"]]],[11,"clone","","",26,[[["self"]],["specialliteralkind"]]],[11,"clone","","",27,[[["self"]],["hexliteralkind"]]],[11,"clone","","",28,[[["self"]],["class"]]],[11,"clone","","",8,[[["self"]],["classperl"]]],[11,"clone","","",29,[[["self"]],["classperlkind"]]],[11,"clone","","",9,[[["self"]],["classascii"]]],[11,"clone","","",30,[[["self"]],["classasciikind"]]],[11,"clone","","",10,[[["self"]],["classunicode"]]],[11,"clone","","",31,[[["self"]],["classunicodekind"]]],[11,"clone","","",32,[[["self"]],["classunicodeopkind"]]],[11,"clone","","",11,[[["self"]],["classbracketed"]]],[11,"clone","","",33,[[["self"]],["classset"]]],[11,"clone","","",34,[[["self"]],["classsetitem"]]],[11,"clone","","",12,[[["self"]],["classsetrange"]]],[11,"clone","","",13,[[["self"]],["classsetunion"]]],[11,"clone","","",14,[[["self"]],["classsetbinaryop"]]],[11,"clone","","",35,[[["self"]],["classsetbinaryopkind"]]],[11,"clone","","",15,[[["self"]],["assertion"]]],[11,"clone","","",36,[[["self"]],["assertionkind"]]],[11,"clone","","",16,[[["self"]],["repetition"]]],[11,"clone","","",17,[[["self"]],["repetitionop"]]],[11,"clone","","",37,[[["self"]],["repetitionkind"]]],[11,"clone","","",38,[[["self"]],["repetitionrange"]]],[11,"clone","","",18,[[["self"]],["group"]]],[11,"clone","","",39,[[["self"]],["groupkind"]]],[11,"clone","","",19,[[["self"]],["capturename"]]],[11,"clone","","",20,[[["self"]],["setflags"]]],[11,"clone","","",21,[[["self"]],["flags"]]],[11,"clone","","",22,[[["self"]],["flagsitem"]]],[11,"clone","","",40,[[["self"]],["flagsitemkind"]]],[11,"clone","","",41,[[["self"]],["flag"]]],[11,"clone","regex_syntax","",0,[[["self"]],["error"]]],[11,"clone","regex_syntax::hir::literal","",58,[[["self"]],["literals"]]],[11,"clone","","",59,[[["self"]],["literal"]]],[11,"clone","regex_syntax::hir::translate","",61,[[["self"]],["translatorbuilder"]]],[11,"clone","","",62,[[["self"]],["translator"]]],[11,"clone","regex_syntax::hir","",64,[[["self"]],["error"]]],[11,"clone","","",49,[[["self"]],["errorkind"]]],[11,"clone","","",65,[[["self"]],["hir"]]],[11,"clone","","",50,[[["self"]],["hirkind"]]],[11,"clone","","",51,[[["self"]],["literal"]]],[11,"clone","","",52,[[["self"]],["class"]]],[11,"clone","","",66,[[["self"]],["classunicode"]]],[11,"clone","","",67,[[["self"]],["classunicoderange"]]],[11,"clone","","",68,[[["self"]],["classbytes"]]],[11,"clone","","",69,[[["self"]],["classbytesrange"]]],[11,"clone","","",53,[[["self"]],["anchor"]]],[11,"clone","","",54,[[["self"]],["wordboundary"]]],[11,"clone","","",47,[[["self"]],["group"]]],[11,"clone","","",55,[[["self"]],["groupkind"]]],[11,"clone","","",48,[[["self"]],["repetition"]]],[11,"clone","","",56,[[["self"]],["repetitionkind"]]],[11,"clone","","",57,[[["self"]],["repetitionrange"]]],[11,"clone","regex_syntax","",70,[[["self"]],["parserbuilder"]]],[11,"clone","","",71,[[["self"]],["parser"]]],[11,"drop","regex_syntax::ast","",24,[[["self"]]]],[11,"drop","","",33,[[["self"]]]],[11,"drop","regex_syntax::hir","",65,[[["self"]]]],[11,"partial_cmp","regex_syntax::ast","",1,[[["self"],["span"]],["option",["ordering"]]]],[11,"partial_cmp","","",2,[[["self"],["position"]],["option",["ordering"]]]],[11,"partial_cmp","regex_syntax::hir::literal","",59,[[["self"],["literal"]],["option",["ordering"]]]],[11,"partial_cmp","regex_syntax::hir","",67,[[["self"],["classunicoderange"]],["option",["ordering"]]]],[11,"lt","","",67,[[["self"],["classunicoderange"]],["bool"]]],[11,"le","","",67,[[["self"],["classunicoderange"]],["bool"]]],[11,"gt","","",67,[[["self"],["classunicoderange"]],["bool"]]],[11,"ge","","",67,[[["self"],["classunicoderange"]],["bool"]]],[11,"partial_cmp","","",69,[[["self"],["classbytesrange"]],["option",["ordering"]]]],[11,"lt","","",69,[[["self"],["classbytesrange"]],["bool"]]],[11,"le","","",69,[[["self"],["classbytesrange"]],["bool"]]],[11,"gt","","",69,[[["self"],["classbytesrange"]],["bool"]]],[11,"ge","","",69,[[["self"],["classbytesrange"]],["bool"]]],[11,"next","","",72,[[["self"]],["option",["classunicoderange"]]]],[11,"next","","",73,[[["self"]],["option",["classbytesrange"]]]],[11,"as_ref","regex_syntax::hir::literal","",59,N],[11,"default","regex_syntax::ast::parse","",42,[[],["parserbuilder"]]],[11,"default","regex_syntax::hir::translate","",61,[[],["translatorbuilder"]]],[11,"default","regex_syntax::hir","",67,[[],["classunicoderange"]]],[11,"default","","",69,[[],["classbytesrange"]]],[11,"default","regex_syntax","",70,[[],["parserbuilder"]]],[11,"fmt","regex_syntax::ast","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","regex_syntax","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","regex_syntax::hir","",64,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",65,[[["self"],["formatter"]],["result"]]],[11,"fmt","regex_syntax::ast::parse","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","regex_syntax::ast::print","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","regex_syntax::ast","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","regex_syntax","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","regex_syntax::hir::literal","",58,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",59,[[["self"],["formatter"]],["result"]]],[11,"fmt","regex_syntax::hir::print","",60,[[["self"],["formatter"]],["result"]]],[11,"fmt","regex_syntax::hir::translate","",61,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",62,[[["self"],["formatter"]],["result"]]],[11,"fmt","regex_syntax::hir","",64,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",65,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",50,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",52,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",66,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",72,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",67,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",68,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",73,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",69,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",53,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",54,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",55,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",56,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",57,[[["self"],["formatter"]],["result"]]],[11,"fmt","regex_syntax","",70,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",71,[[["self"],["formatter"]],["result"]]],[11,"deref","regex_syntax::hir::literal","",59,[[["self"]],["vec"]]],[11,"deref_mut","","",59,[[["self"]],["vec"]]],[11,"description","regex_syntax::ast","",46,[[["self"]],["str"]]],[11,"description","regex_syntax","",0,[[["self"]],["str"]]],[11,"description","regex_syntax::hir","",64,[[["self"]],["str"]]],[11,"start","regex_syntax::ast","This method is called before beginning traversal of the AST.",45,[[["self"]]]],[11,"visit_pre","","This method is called on an `Ast` before descending into…",45,[[["self"],["ast"]],["result"]]],[11,"visit_post","","This method is called on an `Ast` after descending all of…",45,[[["self"],["ast"]],["result"]]],[11,"visit_alternation_in","","This method is called between child nodes of an…",45,[[["self"]],["result"]]],[11,"visit_class_set_item_pre","","This method is called on every `ClassSetItem` before…",45,[[["self"],["classsetitem"]],["result"]]],[11,"visit_class_set_item_post","","This method is called on every `ClassSetItem` after…",45,[[["self"],["classsetitem"]],["result"]]],[11,"visit_class_set_binary_op_pre","","This method is called on every `ClassSetBinaryOp` before…",45,[[["self"],["classsetbinaryop"]],["result"]]],[11,"visit_class_set_binary_op_post","","This method is called on every `ClassSetBinaryOp` after…",45,[[["self"],["classsetbinaryop"]],["result"]]],[11,"visit_class_set_binary_op_in","","This method is called between the left hand and right hand…",45,[[["self"],["classsetbinaryop"]],["result"]]],[11,"start","regex_syntax::hir","This method is called before beginning traversal of the HIR.",63,[[["self"]]]],[11,"visit_pre","","This method is called on an `Hir` before descending into…",63,[[["self"],["hir"]],["result"]]],[11,"visit_post","","This method is called on an `Hir` after descending all of…",63,[[["self"],["hir"]],["result"]]],[11,"visit_alternation_in","","This method is called between child nodes of an alternation.",63,[[["self"]],["result"]]]],"paths":[[4,"Error"],[3,"Span"],[3,"Position"],[3,"WithComments"],[3,"Comment"],[3,"Alternation"],[3,"Concat"],[3,"Literal"],[3,"ClassPerl"],[3,"ClassAscii"],[3,"ClassUnicode"],[3,"ClassBracketed"],[3,"ClassSetRange"],[3,"ClassSetUnion"],[3,"ClassSetBinaryOp"],[3,"Assertion"],[3,"Repetition"],[3,"RepetitionOp"],[3,"Group"],[3,"CaptureName"],[3,"SetFlags"],[3,"Flags"],[3,"FlagsItem"],[4,"ErrorKind"],[4,"Ast"],[4,"LiteralKind"],[4,"SpecialLiteralKind"],[4,"HexLiteralKind"],[4,"Class"],[4,"ClassPerlKind"],[4,"ClassAsciiKind"],[4,"ClassUnicodeKind"],[4,"ClassUnicodeOpKind"],[4,"ClassSet"],[4,"ClassSetItem"],[4,"ClassSetBinaryOpKind"],[4,"AssertionKind"],[4,"RepetitionKind"],[4,"RepetitionRange"],[4,"GroupKind"],[4,"FlagsItemKind"],[4,"Flag"],[3,"ParserBuilder"],[3,"Parser"],[3,"Printer"],[8,"Visitor"],[3,"Error"],[3,"Group"],[3,"Repetition"],[4,"ErrorKind"],[4,"HirKind"],[4,"Literal"],[4,"Class"],[4,"Anchor"],[4,"WordBoundary"],[4,"GroupKind"],[4,"RepetitionKind"],[4,"RepetitionRange"],[3,"Literals"],[3,"Literal"],[3,"Printer"],[3,"TranslatorBuilder"],[3,"Translator"],[8,"Visitor"],[3,"Error"],[3,"Hir"],[3,"ClassUnicode"],[3,"ClassUnicodeRange"],[3,"ClassBytes"],[3,"ClassBytesRange"],[3,"ParserBuilder"],[3,"Parser"],[3,"ClassUnicodeIter"],[3,"ClassBytesIter"]]};
searchIndex["remove_dir_all"]={"doc":"","items":[[5,"remove_dir_all","remove_dir_all","Removes a directory at this path, after removing all its…",N,[[["p"]],["result",["error"]]]]],"paths":[]};
searchIndex["ring"]={"doc":"Safe, fast, small crypto using Rust with BoringSSL's…","items":[[0,"aead","ring","Authenticated Encryption with Associated Data (AEAD).",N,N],[3,"OpeningKey","ring::aead","A key for authenticating and decrypting (“opening”)…",N,N],[3,"SealingKey","","A key for encrypting and signing (“sealing”) data.",N,N],[3,"Algorithm","","An AEAD Algorithm.",N,N],[5,"open_in_place","","Authenticates and decrypts (“opens”) data in place.",N,N],[5,"seal_in_place","","Encrypts and signs (“seals”) data in place.",N,N],[0,"chacha20_poly1305_openssh","","The [chacha20-poly1305@openssh.com] AEAD-ish construct.",N,N],[3,"SealingKey","ring::aead::chacha20_poly1305_openssh","A key for sealing packets.",N,N],[3,"OpeningKey","","A key for opening packets.",N,N],[17,"KEY_LEN","","The length of key.",N,N],[17,"TAG_LEN","","The length of a tag.",N,N],[17,"PACKET_LENGTH_LEN","","The length in bytes of the `packet_length` field in a SSH…",N,N],[11,"new","","Constructs a new `SealingKey`.",0,N],[11,"seal_in_place","","Seals (encrypts and signs) a packet.",0,N],[11,"new","","Constructs a new `OpeningKey`.",1,N],[11,"decrypt_packet_length","","Returns the decrypted, but unauthenticated, packet length.",1,N],[11,"open_in_place","","Opens (authenticates and decrypts) a packet.",1,N],[7,"CHACHA20_POLY1305","ring::aead","ChaCha20-Poly1305 as described in [RFC 7539].",N,N],[7,"AES_128_GCM","","AES-128 in GCM mode with 128-bit tags and 96 bit nonces.",N,N],[7,"AES_256_GCM","","AES-256 in GCM mode with 128-bit tags and 96 bit nonces.",N,N],[17,"MAX_TAG_LEN","","The maximum length of a tag for the algorithms in this…",N,N],[11,"new","","Create a new opening key.",2,N],[11,"algorithm","","The key's AEAD algorithm.",2,[[["self"]],["algorithm"]]],[11,"new","","C analogs: `EVP_AEAD_CTX_init_with_direction` with…",3,N],[11,"algorithm","","The key's AEAD algorithm.",3,[[["self"]],["algorithm"]]],[11,"key_len","","The length of the key.",4,[[["self"]],["usize"]]],[11,"tag_len","","The length of a tag.",4,[[["self"]],["usize"]]],[11,"nonce_len","","The length of the nonces.",4,[[["self"]],["usize"]]],[0,"agreement","ring","Key Agreement: ECDH, including X25519.",N,N],[3,"Algorithm","ring::agreement","A key agreement algorithm.",N,N],[3,"EphemeralPrivateKey","","An ephemeral private key for use (only) with…",N,N],[5,"agree_ephemeral","","Performs a key agreement with an ephemeral private key and…",N,[[["ephemeralprivatekey"],["algorithm"],["input"],["e"],["f"]],["result"]]],[7,"ECDH_P256","","ECDH using the NSA Suite B P-256 (secp256r1) curve.",N,N],[7,"ECDH_P384","","ECDH using the NSA Suite B P-384 (secp384r1) curve.",N,N],[7,"X25519","","X25519 (ECDH using Curve25519) as described in [RFC 7748].",N,N],[17,"PUBLIC_KEY_MAX_LEN","","The maximum length, in bytes, of an encoded public key.",N,N],[11,"generate","","Generate a new ephemeral private key for the given…",5,[[["algorithm"],["securerandom"]],["result",["ephemeralprivatekey","unspecified"]]]],[11,"algorithm","","The key exchange algorithm.",5,[[["self"]],["algorithm"]]],[11,"public_key_len","","The size in bytes of the encoded public key.",5,[[["self"]],["usize"]]],[11,"compute_public_key","","Computes the public key from the private key's value and…",5,N],[0,"constant_time","ring","Constant-time operations.",N,N],[5,"verify_slices_are_equal","ring::constant_time","Returns `Ok(())` if `a == b` and `Err(error::Unspecified)`…",N,N],[0,"digest","ring","SHA-2 and the legacy SHA-1 digest algorithm.",N,N],[3,"Context","ring::digest","A context for multi-step (Init-Update-Finish) digest…",N,N],[12,"algorithm","","The context's algorithm.",6,N],[3,"Digest","","A calculated digest value.",N,N],[3,"Algorithm","","A digest algorithm.",N,N],[12,"output_len","","C analog: `EVP_MD_size`",7,N],[12,"chaining_len","","The size of the chaining value of the digest function, in…",7,N],[12,"block_len","","C analog: `EVP_MD_block_size`",7,N],[5,"digest","","Returns the digest of `data` using the given digest…",N,N],[7,"SHA1","","SHA-1 as specified in [FIPS 180-4]. Deprecated.",N,N],[7,"SHA256","","SHA-256 as specified in [FIPS 180-4].",N,N],[7,"SHA384","","SHA-384 as specified in [FIPS 180-4].",N,N],[7,"SHA512","","SHA-512 as specified in [FIPS 180-4].",N,N],[7,"SHA512_256","","SHA-512/256 as specified in [FIPS 180-4].",N,N],[17,"MAX_BLOCK_LEN","","The maximum block length (`Algorithm::block_len`) of all…",N,N],[17,"MAX_OUTPUT_LEN","","The maximum output length (`Algorithm::output_len`) of all…",N,N],[17,"MAX_CHAINING_LEN","","The maximum chaining length (`Algorithm::chaining_len`) of…",N,N],[17,"SHA1_OUTPUT_LEN","","The length of the output of SHA-1, in bytes.",N,N],[17,"SHA256_OUTPUT_LEN","","The length of the output of SHA-256, in bytes.",N,N],[17,"SHA384_OUTPUT_LEN","","The length of the output of SHA-384, in bytes.",N,N],[17,"SHA512_OUTPUT_LEN","","The length of the output of SHA-512, in bytes.",N,N],[17,"SHA512_256_OUTPUT_LEN","","The length of the output of SHA-512/256, in bytes.",N,N],[11,"new","","Constructs a new context.",6,[[["algorithm"]],["context"]]],[11,"update","","Updates the digest with all the data in `data`. `update`…",6,N],[11,"finish","","Finalizes the digest calculation and returns the digest…",6,[[["self"]],["digest"]]],[11,"algorithm","","The algorithm that this context is using.",6,[[["self"]],["algorithm"]]],[11,"algorithm","","The algorithm that was used to calculate the digest value.",8,[[["self"]],["algorithm"]]],[0,"error","ring","Error reporting.",N,N],[3,"Unspecified","ring::error","An error with absolutely no details.",N,N],[0,"hkdf","ring","HMAC-based Extract-and-Expand Key Derivation Function.",N,N],[5,"extract_and_expand","ring::hkdf","Fills `out` with the output of the HKDF Extract-and-Expand…",N,N],[5,"extract","","The HKDF-Extract operation.",N,N],[5,"expand","","Fills `out` with the output of the HKDF-Expand operation…",N,N],[0,"hmac","ring","HMAC is specified in [RFC 2104].",N,N],[3,"Signature","ring::hmac","An HMAC signature.",N,N],[3,"SigningKey","","A key to use for HMAC signing.",N,N],[3,"SigningContext","","A context for multi-step (Init-Update-Finish) HMAC signing.",N,N],[3,"VerificationKey","","A key to use for HMAC authentication.",N,N],[5,"sign","","Calculates the HMAC of `data` using the key `key` in one…",N,N],[5,"verify","","Calculates the HMAC of `data` using the key `key`, and…",N,N],[5,"verify_with_own_key","","Calculates the HMAC of `data` using the signing key `key`,…",N,N],[5,"recommended_key_len","","Returns the recommended key length for HMAC using the…",N,[[["algorithm"]],["usize"]]],[11,"generate","","Generate an HMAC signing key using the given digest…",9,[[["algorithm"],["securerandom"]],["result",["signingkey","unspecified"]]]],[11,"generate_serializable","","Generate an HMAC signing key using the given digest…",9,N],[11,"new","","Construct an HMAC signing key using the given digest…",9,N],[11,"digest_algorithm","","The digest algorithm for the key.",9,[[["self"]],["algorithm"]]],[11,"with_key","","Constructs a new HMAC signing context using the given…",10,[[["signingkey"]],["signingcontext"]]],[11,"update","","Updates the HMAC with all the data in `data`. `update` may…",10,N],[11,"sign","","Finalizes the HMAC calculation and returns the HMAC value.…",10,[[["self"]],["signature"]]],[11,"new","","Construct an HMAC verification key using the given digest…",11,N],[11,"digest_algorithm","","The digest algorithm for the key.",11,[[["self"]],["algorithm"]]],[0,"pbkdf2","ring","PBKDF2 derivation and verification.",N,N],[5,"derive","ring::pbkdf2","Fills `out` with the key derived using PBKDF2 with the…",N,N],[5,"verify","","Verifies that a previously-derived (e.g., using `derive`)…",N,N],[0,"rand","ring","Cryptographic pseudo-random number generation.",N,N],[3,"SystemRandom","ring::rand","A secure random number generator where the random values…",N,N],[8,"SecureRandom","","A secure random number generator.",N,N],[10,"fill","","Fills `dest` with random bytes.",12,N],[11,"new","","Constructs a new `SystemRandom`.",13,[[],["systemrandom"]]],[0,"signature","ring","Public key signatures: signing and verification.",N,N],[3,"ECDSAKeyPair","ring::signature","An ECDSA key pair, used for signing.",N,N],[3,"ECDSAVerification","","An ECDSA verification algorithm.",N,N],[3,"EdDSAParameters","","Parameters for EdDSA signing and verification.",N,N],[3,"Ed25519KeyPair","","An Ed25519 key pair, for signing.",N,N],[3,"RSAParameters","","Parameters for RSA verification.",N,N],[3,"Signature","","A public key signature returned from a signing operation.",N,N],[3,"KeyPair","","A key pair for signing.",N,N],[5,"key_pair_from_pkcs8","","Returns a key for signing that is parsed from a PKCS#8…",N,[[["signingalgorithm"],["input"]],["result",["keypair","unspecified"]]]],[5,"sign","","Returns a signature of the given data using the given key.…",N,[[["keypair"],["securerandom"],["input"]],["result",["signature","unspecified"]]]],[5,"verify","","Verify the signature `signature` of message `msg` with the…",N,[[["verificationalgorithm"],["input"],["input"],["input"]],["result",["unspecified"]]]],[0,"primitive","","Lower-level verification primitives. Usage of…",N,N],[5,"verify_rsa","ring::signature::primitive","Lower-level API for the verification of RSA signatures.",N,N],[7,"ECDSA_P256_SHA256_ASN1_SIGNING","ring::signature","Signing of ASN.1 DER-encoded ECDSA signatures using the…",N,N],[7,"ECDSA_P256_SHA256_FIXED_SIGNING","","Signing of fixed-length (PKCS#11 style) ECDSA signatures…",N,N],[7,"ECDSA_P384_SHA384_ASN1_SIGNING","","Signing of ASN.1 DER-encoded ECDSA signatures using the…",N,N],[7,"ECDSA_P384_SHA384_FIXED_SIGNING","","Signing of fixed-length (PKCS#11 style) ECDSA signatures…",N,N],[7,"ECDSA_P256_SHA256_ASN1","","Verification of ASN.1 DER-encoded ECDSA signatures using…",N,N],[7,"ECDSA_P256_SHA256_FIXED","","Verification of fixed-length (PKCS#11 style) ECDSA…",N,N],[7,"ECDSA_P256_SHA384_ASN1","","Not recommended. Verification of ASN.1 DER-encoded ECDSA…",N,N],[7,"ECDSA_P384_SHA256_ASN1","","Not recommended. Verification of ASN.1 DER-encoded ECDSA…",N,N],[7,"ECDSA_P384_SHA384_ASN1","","Verification of ASN.1 DER-encoded ECDSA signatures using…",N,N],[7,"ECDSA_P384_SHA384_FIXED","","Verification of fixed-length (PKCS#11 style) ECDSA…",N,N],[7,"ED25519","","Verification of [Ed25519] signatures.",N,N],[7,"RSA_PKCS1_2048_8192_SHA1","","Verification of signatures using RSA keys of 2048-8192…",N,N],[7,"RSA_PKCS1_2048_8192_SHA256","","Verification of signatures using RSA keys of 2048-8192…",N,N],[7,"RSA_PKCS1_2048_8192_SHA384","","Verification of signatures using RSA keys of 2048-8192…",N,N],[7,"RSA_PKCS1_2048_8192_SHA512","","Verification of signatures using RSA keys of 2048-8192…",N,N],[7,"RSA_PKCS1_3072_8192_SHA384","","Verification of signatures using RSA keys of 3072-8192…",N,N],[7,"RSA_PSS_2048_8192_SHA256","","Verification of signatures using RSA keys of 2048-8192…",N,N],[7,"RSA_PSS_2048_8192_SHA384","","Verification of signatures using RSA keys of 2048-8192…",N,N],[7,"RSA_PSS_2048_8192_SHA512","","Verification of signatures using RSA keys of 2048-8192…",N,N],[17,"ED25519_PUBLIC_KEY_LEN","","The length of an Ed25519 public key.",N,N],[17,"ED25519_PKCS8_V2_LEN","","The length of a Ed25519 PKCS#8 (v2) private key generated…",N,N],[8,"SigningAlgorithm","","An algorithm for signing.",N,N],[10,"from_pkcs8","","Parses the key out of the given PKCS#8 document, verifying…",14,[[["self"],["input"]],["result",["keypair","unspecified"]]]],[8,"VerificationAlgorithm","","A signature verification algorithm.",N,N],[10,"verify","","Verify the signature `signature` of message `msg` with the…",15,[[["self"],["input"],["input"],["input"]],["result",["unspecified"]]]],[0,"test","ring","Testing framework.",N,N],[3,"TestCase","ring::test","A test case. A test case consists of a set of named…",N,N],[5,"compile_time_assert_clone","","`compile_time_assert_clone::<T>();` fails to compile if…",N,[[]]],[5,"compile_time_assert_copy","","`compile_time_assert_copy::<T>();` fails to compile if `T`…",N,[[]]],[5,"compile_time_assert_send","","`compile_time_assert_send::<T>();` fails to compile if `T`…",N,[[]]],[5,"compile_time_assert_sync","","`compile_time_assert_sync::<T>();` fails to compile if `T`…",N,[[]]],[5,"compile_time_assert_debug","","`compile_time_assert_debug::<T>();` fails to compile if…",N,[[]]],[5,"ring_src_path","","Returns the path for ring source code root.",N,[[],["pathbuf"]]],[5,"from_file","","Reads test cases out of the file with the path given by…",N,[[["str"],["f"]]]],[5,"from_hex","","Decode an string of hex digits into a sequence of bytes.…",N,[[["str"]],["result",["vec","string"]]]],[0,"rand","","Deterministic implementations of `ring::rand::SecureRandom`.",N,N],[3,"FixedByteRandom","ring::test::rand","An implementation of `SecureRandom` that always fills the…",N,N],[12,"byte","","",16,N],[3,"FixedSliceRandom","","An implementation of `SecureRandom` that always fills the…",N,N],[12,"bytes","","",17,N],[3,"FixedSliceSequenceRandom","","An implementation of `SecureRandom` where each slice in…",N,N],[12,"bytes","","The value.",18,N],[12,"current","","",18,N],[11,"consume_bool","ring::test","Maps the string \"true\" to true and the string \"false\" to…",19,[[["self"],["str"]],["bool"]]],[11,"consume_digest_alg","","Maps the strings \"SHA1\", \"SHA256\", \"SHA384\", and \"SHA512\"…",19,[[["self"],["str"]],["option",["algorithm"]]]],[11,"consume_bytes","","Returns the value of an attribute that is encoded as a…",19,[[["self"],["str"]],["vec",["u8"]]]],[11,"consume_usize","","Returns the value of an attribute that is an integer, in…",19,[[["self"],["str"]],["usize"]]],[11,"consume_usize_bits","","Returns the value of an attribute that is an integer, in…",19,[[["self"],["str"]],["bitlength"]]],[11,"consume_string","","Returns the raw value of an attribute, without any…",19,[[["self"],["str"]],["string"]]],[11,"consume_optional_string","","Like `consume_string()` except it returns `None` if the…",19,[[["self"],["str"]],["option",["string"]]]],[11,"try_from","ring::aead","",2,[[["u"]],["result"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"try_from","ring::aead::chacha20_poly1305_openssh","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_from","ring::agreement","",20,[[["u"]],["result"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"try_from","ring::digest","",6,[[["u"]],["result"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"try_from","ring::signature","",21,[[["u"]],["result"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"try_from","ring::error","",25,[[["u"]],["result"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"to_string","","",25,[[["self"]],["string"]]],[11,"try_from","ring::hmac","",26,[[["u"]],["result"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"try_from","ring::rand","",13,[[["u"]],["result"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"try_from","ring::signature","",27,[[["u"]],["result"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,N],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"try_from","ring::test","",19,[[["u"]],["result"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"try_from","ring::test::rand","",16,[[["u"]],["result"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"fill","ring::rand","",13,N],[11,"fill","ring::test::rand","",16,N],[11,"fill","","",17,N],[11,"fill","","",18,N],[11,"verify","ring::signature","",22,[[["self"],["input"],["input"],["input"]],["result",["unspecified"]]]],[11,"verify","","",24,[[["self"],["input"],["input"],["input"]],["result",["unspecified"]]]],[11,"verify","","",27,[[["self"],["input"],["input"],["input"]],["result",["unspecified"]]]],[11,"eq","ring::aead","",4,[[["self"],["self"]],["bool"]]],[11,"eq","ring::agreement","",20,[[["self"],["algorithm"]],["bool"]]],[11,"ne","","",20,[[["self"],["algorithm"]],["bool"]]],[11,"eq","ring::digest","",7,[[["self"],["self"]],["bool"]]],[11,"eq","ring::error","",25,[[["self"],["unspecified"]],["bool"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","ring::aead","",4,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","ring::agreement","",20,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","ring::digest","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","ring::signature","",22,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","ring::error","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","ring::hmac","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","ring::signature","",27,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","ring::test","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","ring::test::rand","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"drop","","",18,[[["self"]]]],[11,"from","ring::error","",25,[[["endofinput"]],["self"]]],[11,"clone","ring::digest","",6,[[["self"]],["context"]]],[11,"clone","","",8,[[["self"]],["digest"]]],[11,"clone","ring::error","",25,[[["self"]],["unspecified"]]],[11,"clone","ring::hmac","",26,[[["self"]],["signature"]]],[11,"clone","","",10,[[["self"]],["signingcontext"]]],[11,"clone","ring::signature","",28,[[["self"]],["signature"]]],[11,"as_ref","ring::digest","",8,N],[11,"as_ref","ring::hmac","",26,N],[11,"as_ref","ring::signature","",28,N],[11,"cause","ring::error","",25,[[["self"]],["option",["error"]]]],[11,"description","","",25,[[["self"]],["str"]]],[11,"generate_pkcs8","ring::signature","Generates a new key pair and returns the key pair…",21,[[["securerandom"]],["result",["unspecified"]]]],[11,"from_pkcs8","","Constructs an Ed25519 key pair by parsing an unencrypted…",21,[[["input"]],["result",["unspecified"]]]],[11,"from_pkcs8_maybe_unchecked","","Constructs an Ed25519 key pair by parsing an unencrypted…",21,[[["input"]],["result",["unspecified"]]]],[11,"from_seed_and_public_key","","Constructs an Ed25519 key pair from the private key seed…",21,[[["input"],["input"]],["result",["unspecified"]]]],[11,"from_seed_unchecked","","Constructs a Ed25519 key pair from the private key seed…",21,[[["input"]],["result",["unspecified"]]]],[11,"public_key_bytes","","Returns a reference to the little-endian-encoded public…",21,N],[11,"sign","","Returns the signature of the message `msg`.",21,N],[11,"generate_pkcs8","","Generates a new key pair and returns the key pair…",23,[[["algorithm"],["securerandom"]],["result",["document","unspecified"]]]],[11,"from_pkcs8","","Constructs an ECDSA key pair by parsing an unencrypted…",23,[[["algorithm"],["input"]],["result",["unspecified"]]]],[11,"from_private_key_and_public_key","","Constructs an ECDSA key pair directly from the…",23,[[["algorithm"],["input"],["input"]],["result",["unspecified"]]]],[11,"sign","","Deprecated.",23,[[["self"],["input"],["securerandom"]],["result",["signature","unspecified"]]]]],"paths":[[3,"SealingKey"],[3,"OpeningKey"],[3,"OpeningKey"],[3,"SealingKey"],[3,"Algorithm"],[3,"EphemeralPrivateKey"],[3,"Context"],[3,"Algorithm"],[3,"Digest"],[3,"SigningKey"],[3,"SigningContext"],[3,"VerificationKey"],[8,"SecureRandom"],[3,"SystemRandom"],[8,"SigningAlgorithm"],[8,"VerificationAlgorithm"],[3,"FixedByteRandom"],[3,"FixedSliceRandom"],[3,"FixedSliceSequenceRandom"],[3,"TestCase"],[3,"Algorithm"],[3,"Ed25519KeyPair"],[3,"EdDSAParameters"],[3,"ECDSAKeyPair"],[3,"ECDSAVerification"],[3,"Unspecified"],[3,"Signature"],[3,"RSAParameters"],[3,"Signature"],[3,"KeyPair"]]};
searchIndex["rocket"]={"doc":"Rocket - Core API Documentation","items":[[3,"Response","rocket","A response, as returned by types implementing [`Responder`].",N,N],[3,"Data","","Type representing the data in the body of an incoming…",N,N],[3,"Config","","Structure for Rocket application configuration.",N,N],[12,"environment","","The environment that this configuration corresponds to.",0,N],[12,"address","","The address to serve on.",0,N],[12,"port","","The port to serve on.",0,N],[12,"workers","","The number of workers to run concurrently.",0,N],[12,"keep_alive","","Keep-alive timeout in seconds or None if disabled.",0,N],[12,"log_level","","How much information to log.",0,N],[12,"limits","","Streaming read size limits.",0,N],[12,"extras","","Extra parameters that aren't part of Rocket's core config.",0,N],[3,"Route","","A route: a method, its handler, path, rank, and…",N,N],[12,"name","","The name of this route, if one was given.",1,N],[12,"method","","The method this route matches against.",1,N],[12,"handler","","The function that should be called when the route matches.",1,N],[12,"base","","The base mount point of this `Route`.",1,N],[12,"uri","","The uri (in Rocket's route format) that should be matched…",1,N],[12,"rank","","The rank of this route. Lower ranks have higher priorities.",1,N],[12,"format","","The media type this route matches against, if any.",1,N],[3,"Request","","The type of an incoming web request.",N,N],[3,"State","","Request guard to retrieve managed state.",N,N],[3,"Catcher","","An error catching route.",N,N],[12,"code","","The HTTP status code to match against.",2,N],[12,"handler","","The catcher's associated handler.",2,N],[3,"Rocket","","The main `Rocket` type: used to mount routes and catchers…",N,N],[4,"Outcome","","An enum representing success (`Success`), failure…",N,N],[13,"Success","","Contains the success value.",3,N],[13,"Failure","","Contains the failure error value.",3,N],[13,"Forward","","Contains the value to forward on.",3,N],[5,"ignite","","Alias to [`Rocket::ignite()`] Creates a new instance of…",N,[[],["rocket"]]],[5,"custom","","Alias to [`Rocket::custom()`]. Creates a new instance of…",N,[[["config"]],["rocket"]]],[0,"local","","Structures for local dispatching of requests, primarily…",N,N],[3,"LocalResponse","rocket::local","A structure representing a response from dispatching a…",N,N],[3,"LocalRequest","","A structure representing a local request as created by…",N,N],[3,"Client","","A structure to construct requests for local dispatching.",N,N],[11,"inner","","Retrieves the inner `Request` as seen by Rocket.",4,[[["self"]],["request"]]],[11,"header","","Add a header to this request.",4,[[["self"],["h"]],["self"]]],[11,"add_header","","Adds a header to this request without consuming `self`.",4,[[["self"],["h"]]]],[11,"remote","","Set the remote address of this request.",4,[[["self"],["socketaddr"]],["self"]]],[11,"cookie","","Add a cookie to this request.",4,[[["self"],["cookie"]],["self"]]],[11,"cookies","","Add all of the cookies in `cookies` to this request.",4,[[["self"],["vec",["cookie"]]],["self"]]],[11,"private_cookie","","Add a [private cookie] to this request.",4,[[["self"],["cookie"]],["self"]]],[11,"body","","Set the body (data) of the request.",4,[[["self"],["s"]],["self"]]],[11,"set_body","","Set the body (data) of the request without consuming `self`.",4,[[["self"],["s"]]]],[11,"dispatch","","Dispatches the request, returning the response.",4,[[["self"]],["localresponse"]]],[11,"mut_dispatch","","Dispatches the request, returning the response.",4,[[["self"]],["localresponse"]]],[11,"new","","Construct a new `Client` from an instance of `Rocket` with…",5,[[["rocket"]],["result",["client","launcherror"]]]],[11,"untracked","","Construct a new `Client` from an instance of `Rocket`…",5,[[["rocket"]],["result",["client","launcherror"]]]],[11,"rocket","","Returns the instance of `Rocket` this client is creating…",5,[[["self"]],["rocket"]]],[11,"get","","Create a local `GET` request to the URI `uri`.",5,[[["self"],["u"]],["localrequest"]]],[11,"put","","Create a local `PUT` request to the URI `uri`.",5,[[["self"],["u"]],["localrequest"]]],[11,"post","","Create a local `POST` request to the URI `uri`.",5,[[["self"],["u"]],["localrequest"]]],[11,"delete","","Create a local `DELETE` request to the URI `uri`.",5,[[["self"],["u"]],["localrequest"]]],[11,"options","","Create a local `OPTIONS` request to the URI `uri`.",5,[[["self"],["u"]],["localrequest"]]],[11,"head","","Create a local `HEAD` request to the URI `uri`.",5,[[["self"],["u"]],["localrequest"]]],[11,"patch","","Create a local `PATCH` request to the URI `uri`.",5,[[["self"],["u"]],["localrequest"]]],[11,"req","","Create a local request with method `method` to the URI…",5,[[["self"],["method"],["u"]],["localrequest"]]],[0,"request","rocket","Types and traits for request parsing and handling.",N,N],[3,"Request","rocket::request","The type of an incoming web request.",N,N],[3,"Form","","A data guard for parsing [`FromForm`] types strictly.",N,N],[12,"0","","",6,N],[3,"LenientForm","","A data gaurd for parsing [`FromForm`] types leniently.",N,N],[12,"0","","",7,N],[3,"FormItem","","A form items returned by the [`FormItems`] iterator.",N,N],[12,"raw","","The full, nonempty string for the item, not including `&`…",8,N],[12,"key","","The key for the item, which may be empty if `value` is…",8,N],[12,"value","","The value for the item, which may be empty if `key` is…",8,N],[3,"State","","Request guard to retrieve managed state.",N,N],[3,"Query","","Iterator over form items in a query string.",N,N],[4,"FormItems","","Iterator over the key/value pairs of a given HTTP form…",N,N],[4,"FormParseError","","Error returned by the `FromForm` derive on form parsing…",N,N],[13,"BadValue","","The field named `.0` with value `.1` failed to parse or…",9,N],[13,"Unknown","","The parse was strict and the field named `.0` with value…",9,N],[13,"Missing","","The field named `.0` was expected but is missing in the…",9,N],[4,"FormDataError","","Error returned by the `FromData` implementations of `Form`…",N,N],[13,"Io","","An I/O error occurred while reading reading the data…",10,N],[13,"Malformed","","The form string (in `.0`) is malformed and was unable to…",10,N],[13,"Parse","","The form string (in `.1`) failed to parse as the intended…",10,N],[11,"method","rocket","Retrieve the method from `self`.",11,[[["self"]],["method"]]],[11,"set_method","","Set the method of `self`.",11,[[["self"],["method"]]]],[11,"uri","","Borrow the [`Origin`] URI from `self`.",11,[[["self"]],["origin"]]],[11,"set_uri","","Set the URI in `self` to `uri`.",11,[[["self"],["origin"]]]],[11,"remote","","Returns the address of the remote connection that…",11,[[["self"]],["option",["socketaddr"]]]],[11,"set_remote","","Sets the remote address of `self` to `address`.",11,[[["self"],["socketaddr"]]]],[11,"real_ip","","Returns the IP address in the \"X-Real-IP\" header of the…",11,[[["self"]],["option",["ipaddr"]]]],[11,"client_ip","","Attempts to return the client's IP address by first…",11,[[["self"]],["option",["ipaddr"]]]],[11,"cookies","","Returns a wrapped borrow to the cookies in `self`.",11,[[["self"]],["cookies"]]],[11,"headers","","Returns a [`HeaderMap`] of all of the headers in `self`.",11,[[["self"]],["headermap"]]],[11,"add_header","","Add `header` to `self`'s headers. The type of `header` can…",11,[[["self"],["h"]]]],[11,"replace_header","","Replaces the value of the header with name `header.name`…",11,[[["self"],["h"]]]],[11,"content_type","","Returns the Content-Type header of `self`. If the header…",11,[[["self"]],["option",["contenttype"]]]],[11,"accept","","Returns the Accept header of `self`. If the header is not…",11,[[["self"]],["option",["accept"]]]],[11,"format","","Returns the media type \"format\" of the request.",11,[[["self"]],["option",["mediatype"]]]],[11,"limits","","Returns the configured application receive limits.",11,[[["self"]],["limits"]]],[11,"route","","Get the presently matched route, if any.",11,[[["self"]],["option",["route"]]]],[11,"guard","","Invokes the request guard implementation for `T`,…",11,[[["self"]],["outcome"]]],[11,"local_cache","","Retrieves the cached value for type `T` from the…",11,[[["self"],["f"]],["t"]]],[11,"get_param","","Retrieves and parses into `T` the 0-indexed `n`th segment…",11,[[["self"],["usize"]],["option",["result"]]]],[11,"get_segments","","Retrieves and parses into `T` all of the path segments in…",11,[[["self"],["usize"]],["option",["result"]]]],[11,"get_query_value","","Retrieves and parses into `T` the query value with key…",11,[[["self"],["str"]],["option",["result"]]]],[11,"key_value","rocket::request","Extracts the raw `key` and `value` as a tuple.",8,N],[11,"key_value_decoded","","Extracts and lossy URL decodes the `key` and `value` as a…",8,N],[11,"explode","","Extracts `raw` and the raw `key` and `value` as a triple.",8,N],[11,"completed","","Returns `true` if the form string was parsed to…",12,[[["self"]],["bool"]]],[11,"exhaust","","Parses all remaining key/value pairs and returns `true` if…",12,[[["self"]],["bool"]]],[11,"into_inner","","Consumes `self` and returns the parsed value.",7,[[["self"]],["t"]]],[11,"into_inner","","Consumes `self` and returns the parsed value.",6,[[["self"]],["t"]]],[11,"inner","rocket","Retrieve a borrow to the underlying value with a lifetime…",13,[[["self"]],["t"]]],[11,"from","","Returns the managed state value in `rocket` for the type…",13,[[["rocket"]],["option"]]],[6,"Outcome","rocket::request","Type alias for the `Outcome` of a `FromRequest` conversion.",N,N],[6,"FormError","","Alias to the type of form errors returned by the…",N,N],[6,"FlashMessage","","Type alias to retrieve [`Flash`] messages from a request.",N,N],[8,"FromRequest","","Trait implemented by request guards to derive a value from…",N,N],[16,"Error","","The associated error to be returned if derivation fails.",14,N],[10,"from_request","","Derives an instance of `Self` from the incoming request…",14,[[["request"]],["outcome"]]],[8,"FromParam","","Trait to convert a dynamic path segment string to a…",N,N],[16,"Error","","The associated error to be returned if parsing/validation…",15,N],[10,"from_param","","Parses and validates an instance of `Self` from a path…",15,[[["rawstr"]],["result"]]],[8,"FromSegments","","Trait to convert many dynamic path segment strings to a…",N,N],[16,"Error","","The associated error to be returned when parsing fails.",16,N],[10,"from_segments","","Parses an instance of `Self` from many dynamic path…",16,[[["segments"]],["result"]]],[8,"FromForm","","Trait to create an instance of some type from an HTTP…",N,N],[16,"Error","","The associated error to be returned when parsing fails.",17,N],[10,"from_form","","Parses an instance of `Self` from the iterator of form…",17,[[["formitems"],["bool"]],["result"]]],[8,"FromFormValue","","Trait to parse a typed value from a form value.",N,N],[16,"Error","","The associated error which can be returned from parsing.…",18,N],[10,"from_form_value","","Parses an instance of `Self` from an HTTP form field value…",18,[[["rawstr"]],["result"]]],[11,"default","","Returns a default value to be used when the form field…",18,[[],["option"]]],[8,"FromQuery","","Trait implemented by query guards to derive a value from a…",N,N],[16,"Error","","The associated error to be returned if parsing/validation…",19,N],[10,"from_query","","Parses and validates an instance of `Self` from a query or…",19,[[["query"]],["result"]]],[0,"response","rocket","Types and traits to build and send responses.",N,N],[3,"Response","rocket::response","A response, as returned by types implementing [`Responder`].",N,N],[3,"ResponseBuilder","","Type for easily building `Response`s.",N,N],[3,"Redirect","","An empty redirect response to a given URL.",N,N],[3,"Flash","","Sets a \"flash\" cookie that will be removed when it is…",N,N],[3,"NamedFile","","A file with an associated name; responds with the…",N,N],[3,"Stream","","Streams a response to a client from an arbitrary `Read`er…",N,N],[3,"Content","","Sets the Content-Type of a `Responder` to a chosen value.",N,N],[12,"0","","",20,N],[12,"1","","",20,N],[4,"Body","","The body of a response: can be sized or streamed/chunked.",N,N],[13,"Sized","","A fixed-size body.",21,N],[13,"Chunked","","A streamed/chunked body, akin to `Transfer-Encoding:…",21,N],[11,"to","","Construct a temporary \"see other\" (303) redirect response.…",22,[[["u"]],["redirect"]]],[11,"temporary","","Construct a \"temporary\" (307) redirect response. This…",22,[[["u"]],["redirect"]]],[11,"permanent","","Construct a \"permanent\" (308) redirect response. This…",22,[[["u"]],["redirect"]]],[11,"found","","Construct a temporary \"found\" (302) redirect response.…",22,[[["u"]],["redirect"]]],[11,"moved","","Construct a permanent \"moved\" (301) redirect response.…",22,[[["u"]],["redirect"]]],[11,"open","","Attempts to open a file in read-only mode.",23,[[["p"]],["result",["namedfile"]]]],[11,"file","","Retrieve the underlying `File`.",23,[[["self"]],["file"]]],[11,"take_file","","Take the underlying `File`.",23,[[["self"]],["file"]]],[11,"file_mut","","Retrieve a mutable borrow to the underlying `File`.",23,[[["self"]],["file"]]],[11,"path","","Retrieve the path of this file.",23,[[["self"]],["path"]]],[11,"chunked","","Create a new stream from the given `reader` and sets the…",24,[[["t"],["u64"]],["stream"]]],[11,"as_mut","","Returns a new `Body` with a mutable borrow to `self`'s…",21,[[["self"]],["body"]]],[11,"map","","Consumes `self`. Passes the inner type as a parameter to…",21,[[["self"],["f"]],["body"]]],[11,"into_inner","","Consumes `self` and returns the inner body.",21,[[["self"]],["t"]]],[11,"is_sized","","Returns `true` if `self` is a `Body::Sized`.",21,[[["self"]],["bool"]]],[11,"is_chunked","","Returns `true` if `self` is a `Body::Chunked`.",21,[[["self"]],["bool"]]],[11,"into_bytes","","Attempts to read `self` into a `Vec` and returns it. If…",21,[[["self"]],["option",["vec"]]]],[11,"into_string","","Attempts to read `self` into a `String` and returns it. If…",21,[[["self"]],["option",["string"]]]],[11,"new","","Creates a new `ResponseBuilder` that will build on top of…",25,[[["response"]],["responsebuilder"]]],[11,"status","","Sets the status of the `Response` being built to `status`.",25,[[["self"],["status"]],["responsebuilder"]]],[11,"raw_status","","Sets the status of the `Response` being built to a custom…",25,[[["self"],["u16"],["str"]],["responsebuilder"]]],[11,"header","","Adds `header` to the `Response`, replacing any header with…",25,[[["self"],["h"]],["responsebuilder"]]],[11,"header_adjoin","","Adds `header` to the `Response` by adjoining the header…",25,[[["self"],["h"]],["responsebuilder"]]],[11,"raw_header","","Adds a custom header to the `Response` with the given name…",25,[[["self"],["n"],["v"]],["responsebuilder"]]],[11,"raw_header_adjoin","","Adds custom header to the `Response` with the given name…",25,[[["self"],["n"],["v"]],["responsebuilder"]]],[11,"sized_body","","Sets the body of the `Response` to be the fixed-sized…",25,[[["self"],["b"]],["responsebuilder"]]],[11,"streamed_body","","Sets the body of the `Response` to be the streamed `body`.",25,[[["self"],["b"]],["responsebuilder"]]],[11,"chunked_body","","Sets the body of the `Response` to be the streamed `body`…",25,[[["self"],["b"],["u64"]],["responsebuilder"]]],[11,"raw_body","","Sets the body of `self` to be `body`. This method should…",25,[[["self"],["body"]],["responsebuilder"]]],[11,"merge","","Merges the `other` `Response` into `self` by setting any…",25,[[["self"],["response"]],["responsebuilder"]]],[11,"join","","Joins the `other` `Response` into `self` by setting any…",25,[[["self"],["response"]],["responsebuilder"]]],[11,"finalize","","Retrieve the built `Response`.",25,[[["self"]],["response"]]],[11,"ok","","Retrieve the built `Response` wrapped in `Ok`.",25,[[["self"]],["result",["response"]]]],[11,"new","rocket","Creates a new, empty `Response` without a status, body, or…",26,[[],["response"]]],[11,"build","","Returns a `ResponseBuilder` with a base of…",26,[[],["responsebuilder"]]],[11,"build_from","","Returns a `ResponseBuilder` with a base of `other`.",26,[[["response"]],["responsebuilder"]]],[11,"status","","Returns the status of `self`.",26,[[["self"]],["status"]]],[11,"set_status","","Sets the status of `self` to `status`.",26,[[["self"],["status"]]]],[11,"content_type","","Returns the Content-Type header of `self`. If the header…",26,[[["self"]],["option",["contenttype"]]]],[11,"set_raw_status","","Sets the status of `self` to a custom `status` with status…",26,[[["self"],["u16"],["str"]]]],[11,"cookies","","Returns a vector of the cookies set in `self` as…",26,[[["self"]],["vec",["cookie"]]]],[11,"headers","","Returns a [`HeaderMap`] of all of the headers in `self`.",26,[[["self"]],["headermap"]]],[11,"set_header","","Sets the header `header` in `self`. Any existing headers…",26,[[["self"],["h"]],["bool"]]],[11,"set_raw_header","","Sets the custom header with name `name` and value `value`…",26,[[["self"],["n"],["v"]],["bool"]]],[11,"adjoin_header","","Adds the header `header` to `self`. If `self` contains…",26,[[["self"],["h"]]]],[11,"adjoin_raw_header","","Adds a custom header with name `name` and value `value` to…",26,[[["self"],["n"],["v"]]]],[11,"remove_header","","Removes all headers with the name `name`.",26,[[["self"],["str"]]]],[11,"body","","Returns a mutable borrow of the body of `self`, if there…",26,[[["self"]],["option",["body"]]]],[11,"body_string","","Consumes `self's` body and reads it into a string. If…",26,[[["self"]],["option",["string"]]]],[11,"body_bytes","","Consumes `self's` body and reads it into a `Vec` of `u8`…",26,[[["self"]],["option",["vec"]]]],[11,"take_body","","Moves the body of `self` out and returns it, if there is…",26,[[["self"]],["option",["body"]]]],[11,"set_sized_body","","Sets the body of `self` to be the fixed-sized `body`. The…",26,[[["self"],["b"]]]],[11,"set_streamed_body","","Sets the body of `self` to be `body`, which will be…",26,[[["self"],["b"]]]],[11,"set_chunked_body","","Sets the body of `self` to be `body`, which will be…",26,[[["self"],["b"],["u64"]]]],[11,"set_raw_body","","Sets the body of `self` to be `body`. This method should…",26,[[["self"],["body"]]]],[11,"merge","","Replaces this response's status and body with that of…",26,[[["self"],["response"]]]],[11,"join","","Sets `self`'s status and body to that of `other` if they…",26,[[["self"],["response"]]]],[11,"new","rocket::response","Constructs a new `Flash` message with the given `name`,…",27,[[["r"],["n"],["m"]],["flash"]]],[11,"success","","Constructs a \"success\" `Flash` message with the given…",27,[[["r"],["s"]],["flash"]]],[11,"warning","","Constructs a \"warning\" `Flash` message with the given…",27,[[["r"],["s"]],["flash"]]],[11,"error","","Constructs an \"error\" `Flash` message with the given…",27,[[["r"],["s"]],["flash"]]],[11,"name","","Returns the `name` of this message.",27,[[["self"]],["str"]]],[11,"msg","","Returns the `msg` contents of this message.",27,[[["self"]],["str"]]],[0,"content","","Contains types that set the Content-Type of a response.",N,N],[3,"Content","rocket::response::content","Sets the Content-Type of a `Responder` to a chosen value.",N,N],[12,"0","","",20,N],[12,"1","","",20,N],[3,"Json","","Override the `Content-Type` of the response to JSON , or…",N,N],[12,"0","","",28,N],[3,"Xml","","Override the `Content-Type` of the response to XML , or…",N,N],[12,"0","","",29,N],[3,"MsgPack","","Override the `Content-Type` of the response to MessagePack…",N,N],[12,"0","","",30,N],[3,"Html","","Override the `Content-Type` of the response to HTML , or…",N,N],[12,"0","","",31,N],[3,"Plain","","Override the `Content-Type` of the response to plain text…",N,N],[12,"0","","",32,N],[3,"Css","","Override the `Content-Type` of the response to CSS , or…",N,N],[12,"0","","",33,N],[3,"JavaScript","","Override the `Content-Type` of the response to JavaScript…",N,N],[12,"0","","",34,N],[0,"status","rocket::response","Contains types that set the status code and corresponding…",N,N],[3,"Created","rocket::response::status","Sets the status of the response to 201 (Created).",N,N],[12,"0","","",35,N],[12,"1","","",35,N],[3,"Accepted","","Sets the status of the response to 202 (Accepted).",N,N],[12,"0","","",36,N],[3,"BadRequest","","Sets the status of the response to 400 (Bad Request).",N,N],[12,"0","","",37,N],[3,"NotFound","","Sets the status of the response to 404 (Not Found).",N,N],[12,"0","","",38,N],[3,"Custom","","Creates a response with the given status code and…",N,N],[12,"0","","",39,N],[12,"1","","",39,N],[6,"Result","rocket::response","Type alias for the `Result` of a `Responder::respond` call.",N,N],[17,"DEFAULT_CHUNK_SIZE","","The default size, in bytes, of a chunk for streamed…",N,N],[8,"Responder","","Trait implemented by types that generate responses for…",N,N],[10,"respond_to","","Returns `Ok` if a `Response` could be generated…",40,[[["self"],["request"]],["result"]]],[0,"outcome","rocket","Success, failure, and forward handling.",N,N],[4,"Outcome","rocket::outcome","An enum representing success (`Success`), failure…",N,N],[13,"Success","","Contains the success value.",3,N],[13,"Failure","","Contains the failure error value.",3,N],[13,"Forward","","Contains the value to forward on.",3,N],[8,"IntoOutcome","","Conversion trait from some type into an Outcome type.",N,N],[16,"Failure","","The type to use when returning an `Outcome::Failure`.",41,N],[16,"Forward","","The type to use when returning an `Outcome::Forward`.",41,N],[10,"into_outcome","","Converts `self` into an `Outcome`. If `self` represents a…",41,N],[10,"or_forward","","Converts `self` into an `Outcome`. If `self` represents a…",41,N],[11,"unwrap","","Unwraps the Outcome, yielding the contents of a Success.",3,[[["self"]],["s"]]],[11,"expect","","Unwraps the Outcome, yielding the contents of a Success.",3,[[["self"],["str"]],["s"]]],[11,"is_success","","Return true if this `Outcome` is a `Success`.",3,[[["self"]],["bool"]]],[11,"is_failure","","Return true if this `Outcome` is a `Failure`.",3,[[["self"]],["bool"]]],[11,"is_forward","","Return true if this `Outcome` is a `Forward`.",3,[[["self"]],["bool"]]],[11,"succeeded","","Converts from `Outcome<S, E, F>` to `Option<S>`.",3,[[["self"]],["option"]]],[11,"failed","","Converts from `Outcome<S, E, F>` to `Option<E>`.",3,[[["self"]],["option"]]],[11,"forwarded","","Converts from `Outcome<S, E, F>` to `Option<F>`.",3,[[["self"]],["option"]]],[11,"success_or","","Converts from `Outcome<S, E, F>` to `Result<S, T>` for a…",3,[[["self"],["t"]],["result"]]],[11,"success_or_else","","Converts from `Outcome<S, E, F>` to `Result<S, T>` for a…",3,[[["self"],["v"]],["result"]]],[11,"as_ref","","Converts from `Outcome<S, E, F>` to `Outcome<&S, &E, &F>`.",3,[[["self"]],["outcome"]]],[11,"map","","Maps an `Outcome<S, E, F>` to an `Outcome<T, E, F>` by…",3,[[["self"],["m"]],["outcome"]]],[11,"map_failure","","Maps an `Outcome<S, E, F>` to an `Outcome<S, T, F>` by…",3,[[["self"],["m"]],["outcome"]]],[11,"map_forward","","Maps an `Outcome<S, E, F>` to an `Outcome<S, E, T>` by…",3,[[["self"],["m"]],["outcome"]]],[11,"and_then","","Maps an `Outcome<S, E, F>` to an `Outcome<T, E, F>` by…",3,[[["self"],["m"]],["outcome"]]],[11,"failure_then","","Maps an `Outcome<S, E, F>` to an `Outcome<S, T, F>` by…",3,[[["self"],["m"]],["outcome"]]],[11,"forward_then","","Maps an `Outcome<S, E, F>` to an `Outcome<S, E, T>` by…",3,[[["self"],["m"]],["outcome"]]],[11,"as_mut","","Converts from `Outcome<S, E, F>` to `Outcome<&mut S, &mut…",3,[[["self"]],["outcome"]]],[0,"config","rocket","Application configuration and configuration parameter…",N,N],[6,"Array","rocket::config","Type representing a TOML array, payload of the…",N,N],[6,"Table","","Type representing a TOML table, payload of the…",N,N],[4,"Value","","Representation of a TOML value.",N,N],[13,"String","","Represents a TOML string",42,N],[13,"Integer","","Represents a TOML integer",42,N],[13,"Float","","Represents a TOML float",42,N],[13,"Boolean","","Represents a TOML boolean",42,N],[13,"Datetime","","Represents a TOML datetime",42,N],[13,"Array","","Represents a TOML array",42,N],[13,"Table","","Represents a TOML table",42,N],[3,"Datetime","","A parsed TOML datetime value",N,N],[3,"Limits","","Mapping from data type to size limits.",N,N],[3,"Config","","Structure for Rocket application configuration.",N,N],[12,"environment","","The environment that this configuration corresponds to.",0,N],[12,"address","","The address to serve on.",0,N],[12,"port","","The port to serve on.",0,N],[12,"workers","","The number of workers to run concurrently.",0,N],[12,"keep_alive","","Keep-alive timeout in seconds or None if disabled.",0,N],[12,"log_level","","How much information to log.",0,N],[12,"limits","","Streaming read size limits.",0,N],[12,"extras","","Extra parameters that aren't part of Rocket's core config.",0,N],[3,"ConfigBuilder","","Structure following the builder pattern for building…",N,N],[12,"environment","","The environment that this configuration corresponds to.",43,N],[12,"address","","The address to serve on.",43,N],[12,"port","","The port to serve on.",43,N],[12,"workers","","The number of workers to run in parallel.",43,N],[12,"keep_alive","","Keep-alive timeout in seconds or disabled if 0.",43,N],[12,"log_level","","How much information to log.",43,N],[12,"secret_key","","The secret key.",43,N],[12,"tls","","TLS configuration (path to certificates file, path to…",43,N],[12,"limits","","Size limits.",43,N],[12,"extras","","Any extra parameters that aren't part of Rocket's config.",43,N],[12,"root","","The root directory of this config, if any.",43,N],[4,"ConfigError","","The type of a configuration error.",N,N],[13,"NotFound","","The configuration file was not found.",44,N],[13,"IoError","","There was an I/O error while reading the configuration file.",44,N],[13,"Io","","There was an I/O error while setting a configuration…",44,N],[13,"BadFilePath","","The path at which the configuration file was found was…",44,N],[13,"BadEnv","","An environment specified in `ROCKET_ENV` is invalid.",44,N],[13,"BadEntry","","An environment specified as a table `[environment]` is…",44,N],[13,"BadType","","A config key was specified with a value of the wrong type.",44,N],[13,"ParseError","","There was a TOML parsing error.",44,N],[13,"BadEnvVal","","There was a TOML parsing error in a config environment…",44,N],[13,"UnknownKey","","The entry (key) is unknown.",44,N],[13,"Missing","","The entry (key) was expected but was missing.",44,N],[4,"Environment","","An enum corresponding to the valid configuration…",N,N],[13,"Development","","The development environment.",45,N],[13,"Staging","","The staging environment.",45,N],[13,"Production","","The production environment.",45,N],[4,"LoggingLevel","","Defines the different levels for log messages.",N,N],[13,"Critical","","Only shows errors, warnings, and launch information.",46,N],[13,"Normal","","Shows everything except debug and trace information.",46,N],[13,"Debug","","Shows everything.",46,N],[13,"Off","","Shows nothing.",46,N],[11,"pretty_print","","Prints this configuration error with Rocket formatting.",44,[[["self"]]]],[11,"is_not_found","","Returns `true` if `self` is of `NotFound` variant.",44,[[["self"]],["bool"]]],[11,"active","","Retrieves the \"active\" environment as determined by the…",45,[[],["result",["environment","configerror"]]]],[11,"is_dev","","Returns `true` if `self` is `Environment::Development`.",45,[[["self"]],["bool"]]],[11,"is_stage","","Returns `true` if `self` is `Environment::Staging`.",45,[[["self"]],["bool"]]],[11,"is_prod","","Returns `true` if `self` is `Environment::Production`.",45,[[["self"]],["bool"]]],[11,"build","rocket","Returns a builder for `Config` structure where the default…",0,[[["environment"]],["configbuilder"]]],[11,"new","","Returns a `Config` with the parameters for the environment…",0,[[["environment"]],["config"]]],[11,"active","","Returns a `Config` with the default parameters of the…",0,[[],["result",["config"]]]],[11,"development","","Returns a `Config` with the default parameters of the…",0,[[],["config"]]],[11,"staging","","Returns a `Config` with the default parameters of the…",0,[[],["config"]]],[11,"production","","Returns a `Config` with the default parameters of the…",0,[[],["config"]]],[11,"set_root","","Sets the root directory of this configuration to `root`.",0,[[["self"],["p"]]]],[11,"set_address","","Sets the address of `self` to `address`.",0,[[["self"],["a"]],["result"]]],[11,"set_port","","Sets the `port` of `self` to `port`.",0,[[["self"],["u16"]]]],[11,"set_workers","","Sets the number of `workers` in `self` to `workers`.",0,[[["self"],["u16"]]]],[11,"set_keep_alive","","Sets the keep-alive timeout to `timeout` seconds. If…",0,[[["self"],["u32"]]]],[11,"set_secret_key","","Sets the `secret_key` in `self` to `key` which must be a…",0,[[["self"],["k"]],["result"]]],[11,"set_log_level","","Sets the logging level for `self` to `log_level`.",0,[[["self"],["logginglevel"]]]],[11,"set_limits","","Sets the receive limits in `self` to `limits`.",0,[[["self"],["limits"]]]],[11,"set_extras","","Sets the extras for `self` to be the key/value pairs in…",0,[[["self"],["hashmap",["string","value"]]]]],[11,"extras","","Returns an iterator over the names and values of all of…",0,N],[11,"tls_enabled","","Returns `true` if TLS is enabled.",0,[[["self"]],["bool"]]],[11,"get_extra","","Attempts to retrieve the extra named `name` as a raw value.",0,[[["self"],["str"]],["result",["value"]]]],[11,"get_str","","Attempts to retrieve the extra named `name` as a borrowed…",0,[[["self"],["str"]],["result",["str"]]]],[11,"get_string","","Attempts to retrieve the extra named `name` as an owned…",0,[[["self"],["str"]],["result",["string"]]]],[11,"get_int","","Attempts to retrieve the extra named `name` as an integer.",0,[[["self"],["str"]],["result",["i64"]]]],[11,"get_bool","","Attempts to retrieve the extra named `name` as a boolean.",0,[[["self"],["str"]],["result",["bool"]]]],[11,"get_float","","Attempts to retrieve the extra named `name` as a float.",0,[[["self"],["str"]],["result",["f64"]]]],[11,"get_slice","","Attempts to retrieve the extra named `name` as a slice of…",0,[[["self"],["str"]],["result",["array"]]]],[11,"get_table","","Attempts to retrieve the extra named `name` as a table.",0,[[["self"],["str"]],["result",["table"]]]],[11,"get_datetime","","Attempts to retrieve the extra named `name` as a datetime…",0,[[["self"],["str"]],["result",["datetime"]]]],[11,"root","","Returns the root path of the configuration, if one is known.",0,[[["self"]],["option",["path"]]]],[11,"root_relative","","Returns `path` relative to this configuration.",0,[[["self"],["p"]],["pathbuf"]]],[11,"new","rocket::config","Create a new `ConfigBuilder` instance using the default…",43,[[["environment"]],["configbuilder"]]],[11,"address","","Sets the `address` in the configuration being built.",43,[[["self"],["a"]],["self"]]],[11,"port","","Sets the `port` in the configuration being built.",43,[[["self"],["u16"]],["self"]]],[11,"workers","","Sets `workers` in the configuration being built.",43,[[["self"],["u16"]],["self"]]],[11,"keep_alive","","Sets the keep-alive timeout to `timeout` seconds. If…",43,[[["self"],["u32"]],["self"]]],[11,"log_level","","Sets the `log_level` in the configuration being built.",43,[[["self"],["logginglevel"]],["self"]]],[11,"secret_key","","Sets the `secret_key` in the configuration being built.",43,[[["self"],["k"]],["self"]]],[11,"limits","","Sets the `limits` in the configuration being built.",43,[[["self"],["limits"]],["self"]]],[11,"tls","","Sets the TLS configuration in the configuration being built.",43,[[["self"],["c"],["k"]],["self"]]],[11,"environment","","Sets the `environment` in the configuration being built.",43,[[["self"],["environment"]],["self"]]],[11,"root","","Sets the `root` in the configuration being built.",43,[[["self"],["p"]],["self"]]],[11,"extra","","Adds an extra configuration parameter with `name` and…",43,[[["self"],["str"],["v"]],["self"]]],[11,"finalize","","Return the `Config` structure that was being built by this…",43,[[["self"]],["result",["config"]]]],[11,"unwrap","","Return the `Config` structure that was being built by this…",43,[[["self"]],["config"]]],[11,"expect","","Returns the `Config` structure that was being built by…",43,[[["self"],["str"]],["config"]]],[11,"new","","Construct a new `Limits` structure with the default limits…",47,[[],["self"]]],[11,"limit","","Adds or replaces a limit in `self`, consuming `self` and…",47,[[["self"],["s"],["u64"]],["self"]]],[11,"get","","Retrieve the set limit, if any, for the data type with…",47,[[["self"],["str"]],["option",["u64"]]]],[6,"Result","","Wraps `std::result` with the error type of [`ConfigError`].",N,N],[0,"data","rocket","Types and traits for handling incoming body data.",N,N],[3,"Data","rocket::data","Type representing the data in the body of an incoming…",N,N],[3,"DataStream","","Raw data stream of a request body.",N,N],[4,"Transform","","Indicates how incoming data should be transformed before…",N,N],[13,"Owned","","Indicates that data should be or has been transformed into…",48,N],[13,"Borrowed","","Indicates that data should be or has been transformed into…",48,N],[11,"open","rocket","Returns the raw data stream.",49,[[["self"]],["datastream"]]],[11,"peek","","Retrieve the `peek` buffer.",49,N],[11,"peek_complete","","Returns true if the `peek` buffer contains all of the data…",49,[[["self"]],["bool"]]],[11,"stream_to","","A helper method to write the body of the request to any…",49,[[["self"],["w"]],["result",["u64"]]]],[11,"stream_to_file","","A helper method to write the body of the request to a file…",49,[[["self"],["p"]],["result",["u64"]]]],[11,"owned","rocket::data","Returns the `Owned` value if `self` is `Owned`.",48,[[["self"]],["t"]]],[11,"borrowed","","Returns the `Borrowed` value if `self` is `Borrowed`.",48,[[["self"]],["b"]]],[6,"Outcome","","Type alias for the `Outcome` of a `FromData` conversion.",N,N],[6,"Transformed","","Type alias to the `outcome` input type of…",N,N],[8,"FromData","","Trait implemented by data guards to derive a value from…",N,N],[16,"Error","","The associated error to be returned when the guard fails.",50,N],[16,"Owned","","The owned type returned from [`FromData::transform()`].",50,N],[16,"Borrowed","","The borrowed type consumed by [`FromData::from_data()`]…",50,N],[10,"transform","","Transforms `data` into a value of type `Self::Owned`.",50,[[["request"],["data"]],["transform",["outcome"]]]],[10,"from_data","","Validates, parses, and converts the incoming request body…",50,[[["request"],["transformed"]],["outcome"]]],[8,"FromDataSimple","","A simple, less complex variant of [`FromData`].",N,N],[16,"Error","","The associated error to be returned when the guard fails.",51,N],[10,"from_data","","Validates, parses, and converts an instance of `Self` from…",51,[[["request"],["data"]],["outcome"]]],[0,"handler","rocket","Types and traits for request and error handlers and their…",N,N],[6,"Outcome","rocket::handler","Type alias for the `Outcome` of a `Handler`.",N,N],[6,"ErrorHandler","","The type of an error handler.",N,N],[8,"Handler","","Trait implemented by types that can handle requests.",N,N],[10,"handle","","Called by Rocket when a `Request` with its associated…",52,[[["self"],["request"],["data"]],["outcome"]]],[8,"Cloneable","","Unfortunate but necessary hack to be able to clone a…",N,N],[10,"clone_handler","","Clones `self`.",53,[[["self"]],["box",["handler"]]]],[11,"from","","Return the `Outcome` of response to `req` from `responder`.",54,[[["request"],["t"]],["outcome"]]],[11,"failure","","Return an `Outcome` of `Failure` with the status code…",54,[[["status"]],["outcome"]]],[11,"forward","","Return an `Outcome` of `Forward` with the data `data`.…",54,[[["data"]],["outcome"]]],[0,"fairing","rocket","Fairings: callbacks at attach, launch, request, and…",N,N],[3,"AdHoc","rocket::fairing","A ad-hoc fairing that can be created from a function or…",N,N],[3,"Info","","Information about a `Fairing`.",N,N],[12,"name","","The name of the fairing.",55,N],[12,"kind","","A set representing the callbacks the fairing wishes to…",55,N],[3,"Kind","","A bitset representing the kinds of callbacks a `Fairing`…",N,N],[11,"on_attach","","Constructs an `AdHoc` attach fairing named `name`. The…",56,[[["str"],["f"]],["adhoc"]]],[11,"on_launch","","Constructs an `AdHoc` launch fairing named `name`. The…",56,[[["str"],["f"]],["adhoc"]]],[11,"on_request","","Constructs an `AdHoc` request fairing named `name`. The…",56,[[["str"],["f"]],["adhoc"]]],[11,"on_response","","Constructs an `AdHoc` response fairing named `name`. The…",56,[[["str"],["f"]],["adhoc"]]],[18,"Attach","","`Kind` flag representing a request for an 'attach' callback.",57,N],[18,"Launch","","`Kind` flag representing a request for a 'launch' callback.",57,N],[18,"Request","","`Kind` flag representing a request for a 'request' callback.",57,N],[18,"Response","","`Kind` flag representing a request for a 'response'…",57,N],[11,"is","","Returns `true` if `self` is a superset of `other`. In…",57,[[["self"],["kind"]],["bool"]]],[11,"is_exactly","","Returns `true` if `self` is exactly `other`.",57,[[["self"],["kind"]],["bool"]]],[8,"Fairing","","Trait implemented by fairings: Rocket's structured…",N,N],[10,"info","","Returns an [`Info`] structure containing the `name` and…",58,[[["self"]],["info"]]],[11,"on_attach","","The attach callback. Returns `Ok` if launch should proceed…",58,[[["self"],["rocket"]],["result",["rocket","rocket"]]]],[11,"on_launch","","The launch callback.",58,[[["self"],["rocket"]]]],[11,"on_request","","The request callback.",58,[[["self"],["request"],["data"]]]],[11,"on_response","","The response callback.",58,[[["self"],["request"],["response"]]]],[0,"error","rocket","Types representing various errors that can occur in a…",N,N],[3,"LaunchError","rocket::error","An error that occurs during launch.",N,N],[4,"LaunchErrorKind","","The kind of launch error that occurred.",N,N],[13,"Bind","","Binding to the provided address/port failed.",59,N],[13,"Io","","An I/O error occurred during launch.",59,N],[13,"Collision","","Route collisions were detected.",59,N],[13,"FailedFairings","","A launch fairing reported an error.",59,N],[13,"Unknown","","An otherwise uncategorized error occurred during launch.",59,N],[4,"RouteUriError","","Error returned by `set_uri()` on invalid URIs.",N,N],[13,"Segment","","The base (mount point) or route path contains invalid…",60,N],[13,"Uri","","The route URI is not a valid URI.",60,N],[13,"DynamicBase","","The base (mount point) contains dynamic segments.",60,N],[11,"kind","","Retrieve the `kind` of the launch error.",61,[[["self"]],["launcherrorkind"]]],[0,"http","rocket","Types that map to concepts in HTTP.",N,N],[0,"hyper","rocket::http","Re-exported hyper HTTP library types.",N,N],[0,"header","rocket::http::hyper","Reexported Hyper header types.",N,N],[3,"HttpDate","rocket::http::hyper::header","A `time::Time` with HTTP formatting and parsing",N,N],[12,"0","","",62,N],[3,"AccessControlMaxAge","","`Access-Control-Max-Age` header, part of CORS",N,N],[12,"0","","",63,N],[3,"AcceptCharset","","`Accept-Charset` header, defined in RFC7231",N,N],[12,"0","","",64,N],[4,"Pragma","","The `Pragma` header defined by HTTP/1.0.",N,N],[13,"NoCache","","Corresponds to the `no-cache` value.",65,N],[13,"Ext","","Every value other than `no-cache`.",65,N],[8,"Scheme","","An Authorization scheme to be used in the header.",N,N],[10,"scheme","","An optional Scheme name.",66,[[],["option",["str"]]]],[10,"fmt_scheme","","Format the Scheme data into a header value.",66,[[["self"],["formatter"]],["result",["error"]]]],[3,"Protocol","","Protocols that appear in the `Upgrade` header field",N,N],[12,"name","","The protocol identifier",67,N],[12,"version","","The optional version of the protocol, often in the format…",67,N],[3,"Connection","","`Connection` header, defined in RFC7230",N,N],[12,"0","","",68,N],[4,"Encoding","","A value to represent an encoding used in…",N,N],[13,"Chunked","","The `chunked` encoding.",69,N],[13,"Gzip","","The `gzip` encoding.",69,N],[13,"Deflate","","The `deflate` encoding.",69,N],[13,"Compress","","The `compress` encoding.",69,N],[13,"Identity","","The `identity` encoding.",69,N],[13,"EncodingExt","","Some other encoding that is less common, can be any String.",69,N],[3,"AccessControlExposeHeaders","","`Access-Control-Expose-Headers` header, part of CORS",N,N],[12,"0","","",70,N],[3,"EntityTag","","An entity tag, defined in RFC7232",N,N],[12,"weak","","Weakness indicator for the tag",71,N],[3,"LastModified","","`Last-Modified` header, defined in RFC7232",N,N],[12,"0","","",72,N],[4,"Range","","`Range` header, defined in RFC7233",N,N],[13,"Bytes","","Byte range",73,N],[13,"Unregistered","","Custom range, with unit not registered at IANA…",73,N],[3,"StrictTransportSecurity","","`StrictTransportSecurity` header, defined in RFC6797",N,N],[12,"include_subdomains","","Signals the UA that the HSTS Policy applies to this HSTS…",74,N],[12,"max_age","","Specifies the number of seconds, after the reception of…",74,N],[3,"From","","`From` header, defined in RFC7231",N,N],[12,"0","","",75,N],[4,"DispositionType","","The implied disposition of the content of the HTTP body",N,N],[13,"Inline","","Inline implies default processing",76,N],[13,"Attachment","","Attachment implies that the recipient should prompt the…",76,N],[13,"Ext","","Extension type. Should be handled by recipients the same…",76,N],[4,"Charset","","A Mime charset.",N,N],[13,"Us_Ascii","","US ASCII",77,N],[13,"Iso_8859_1","","ISO-8859-1",77,N],[13,"Iso_8859_2","","ISO-8859-2",77,N],[13,"Iso_8859_3","","ISO-8859-3",77,N],[13,"Iso_8859_4","","ISO-8859-4",77,N],[13,"Iso_8859_5","","ISO-8859-5",77,N],[13,"Iso_8859_6","","ISO-8859-6",77,N],[13,"Iso_8859_7","","ISO-8859-7",77,N],[13,"Iso_8859_8","","ISO-8859-8",77,N],[13,"Iso_8859_9","","ISO-8859-9",77,N],[13,"Iso_8859_10","","ISO-8859-10",77,N],[13,"Shift_Jis","","Shift_JIS",77,N],[13,"Euc_Jp","","EUC-JP",77,N],[13,"Iso_2022_Kr","","ISO-2022-KR",77,N],[13,"Euc_Kr","","EUC-KR",77,N],[13,"Iso_2022_Jp","","ISO-2022-JP",77,N],[13,"Iso_2022_Jp_2","","ISO-2022-JP-2",77,N],[13,"Iso_8859_6_E","","ISO-8859-6-E",77,N],[13,"Iso_8859_6_I","","ISO-8859-6-I",77,N],[13,"Iso_8859_8_E","","ISO-8859-8-E",77,N],[13,"Iso_8859_8_I","","ISO-8859-8-I",77,N],[13,"Gb2312","","GB2312",77,N],[13,"Big5","","Big5",77,N],[13,"Koi8_R","","KOI8-R",77,N],[13,"Ext","","An arbitrary charset specified as a string",77,N],[3,"ETag","","`ETag` header, defined in RFC7232",N,N],[12,"0","","",78,N],[3,"AcceptRanges","","`Accept-Ranges` header, defined in RFC7233",N,N],[12,"0","","",79,N],[3,"AccessControlRequestMethod","","`Access-Control-Request-Method` header, part of CORS",N,N],[12,"0","","",80,N],[5,"qitem","","Convinience function to wrap a value in a `QualityItem`…",N,[[["t"]],["qualityitem"]]],[3,"Referer","","`Referer` header, defined in RFC7231",N,N],[12,"0","","",81,N],[3,"ContentLanguage","","`Content-Language` header, defined in RFC7231",N,N],[12,"0","","",82,N],[3,"Headers","","A map of header fields on requests and responses.",N,N],[3,"Prefer","","`Prefer` header, defined in RFC7240",N,N],[12,"0","","",83,N],[4,"DispositionParam","","A parameter to the disposition type",N,N],[13,"Filename","","A Filename consisting of a Charset, an optional…",84,N],[13,"Ext","","Extension type consisting of token and value. Recipients…",84,N],[3,"Date","","`Date` header, defined in RFC7231",N,N],[12,"0","","",85,N],[3,"AcceptLanguage","","`Accept-Language` header, defined in RFC7231",N,N],[12,"0","","",86,N],[3,"Basic","","Credential holder for Basic Authentication",N,N],[12,"username","","The username as a possibly empty string",87,N],[12,"password","","The password. `None` if the `:` delimiter character was…",87,N],[3,"ContentLength","","`Content-Length` header, defined in RFC7230",N,N],[12,"0","","",88,N],[3,"Accept","","`Accept` header, defined in RFC7231",N,N],[12,"0","","",89,N],[3,"IfModifiedSince","","`If-Modified-Since` header, defined in RFC7232",N,N],[12,"0","","",90,N],[3,"AccessControlRequestHeaders","","`Access-Control-Request-Headers` header, part of CORS",N,N],[12,"0","","",91,N],[4,"CacheDirective","","`CacheControl` contains a list of these directives.",N,N],[13,"NoCache","","\"no-cache\"",92,N],[13,"NoStore","","\"no-store\"",92,N],[13,"NoTransform","","\"no-transform\"",92,N],[13,"OnlyIfCached","","\"only-if-cached\"",92,N],[13,"MaxAge","","\"max-age=delta\"",92,N],[13,"MaxStale","","\"max-stale=delta\"",92,N],[13,"MinFresh","","\"min-fresh=delta\"",92,N],[13,"MustRevalidate","","\"must-revalidate\"",92,N],[13,"Public","","\"public\"",92,N],[13,"Private","","\"private\"",92,N],[13,"ProxyRevalidate","","\"proxy-revalidate\"",92,N],[13,"SMaxAge","","\"s-maxage=delta\"",92,N],[13,"Extension","","Extension directives. Optionally include an argument.",92,N],[3,"AcceptEncoding","","`Accept-Encoding` header, defined in RFC7231",N,N],[12,"0","","",93,N],[4,"Expect","","The `Expect` header.",N,N],[13,"Continue","","The value `100-continue`.",94,N],[4,"AccessControlAllowOrigin","","The `Access-Control-Allow-Origin` response header, part of…",N,N],[13,"Any","","Allow all origins",95,N],[13,"Null","","A hidden origin",95,N],[13,"Value","","Allow one particular origin",95,N],[3,"ContentType","","`Content-Type` header, defined in RFC7231",N,N],[12,"0","","",96,N],[3,"Expires","","`Expires` header, defined in RFC7234",N,N],[12,"0","","",97,N],[3,"Location","","`Location` header, defined in RFC7231",N,N],[12,"0","","",98,N],[3,"Authorization","","`Authorization` header, defined in RFC7235",N,N],[12,"0","","",99,N],[3,"Host","","The `Host` header.",N,N],[12,"hostname","","The hostname, such a example.domain.",100,N],[12,"port","","An optional port number.",100,N],[4,"IfRange","","`If-Range` header, defined in RFC7233",N,N],[13,"EntityTag","","The entity-tag the client has of the resource",101,N],[13,"Date","","The date when the client retrieved the resource",101,N],[3,"Allow","","`Allow` header, defined in RFC7231",N,N],[12,"0","","",102,N],[4,"Vary","","`Vary` header, defined in RFC7231",N,N],[13,"Any","","Any value is a match",103,N],[13,"Items","","Only the listed items are a match",103,N],[3,"UserAgent","","`User-Agent` header, defined in RFC7231",N,N],[12,"0","","",104,N],[3,"CacheControl","","`Cache-Control` header, defined in RFC7234",N,N],[12,"0","","",105,N],[3,"AccessControlAllowMethods","","`Access-Control-Allow-Methods` header, part of CORS",N,N],[12,"0","","",106,N],[4,"IfNoneMatch","","`If-None-Match` header, defined in RFC7232",N,N],[13,"Any","","Any value is a match",107,N],[13,"Items","","Only the listed items are a match",107,N],[3,"PreferenceApplied","","`Preference-Applied` header, defined in RFC7240",N,N],[12,"0","","",108,N],[3,"Upgrade","","`Upgrade` header, defined in RFC7230",N,N],[12,"0","","",109,N],[4,"ProtocolName","","A protocol name used to identify a spefic protocol. Names…",N,N],[13,"Http","","`HTTP` value, Hypertext Transfer Protocol",110,N],[13,"Tls","","`TLS` value, Transport Layer Security RFC2817",110,N],[13,"WebSocket","","`WebSocket` value, matched case insensitively,Web Socket…",110,N],[13,"H2c","","`h2c` value, HTTP/2 over cleartext TCP",110,N],[13,"Unregistered","","Any other protocol name not known to hyper",110,N],[3,"IfUnmodifiedSince","","`If-Unmodified-Since` header, defined in RFC7232",N,N],[12,"0","","",111,N],[3,"Bearer","","Token holder for Bearer Authentication, most often seen…",N,N],[12,"token","","Actual bearer token as a string",112,N],[5,"q","","Convenience function to create a `Quality` from a float.",N,[[["f32"]],["quality"]]],[4,"Preference","","Prefer contains a list of these preferences.",N,N],[13,"RespondAsync","","\"respond-async\"",113,N],[13,"ReturnRepresentation","","\"return=representation\"",113,N],[13,"ReturnMinimal","","\"return=minimal\"",113,N],[13,"HandlingStrict","","\"handling=strict\"",113,N],[13,"HandlingLeniant","","\"handling=leniant\"",113,N],[13,"Wait","","\"wait=delta\"",113,N],[13,"Extension","","Extension preferences. Always has a value, if none is…",113,N],[3,"QualityItem","","Represents an item with a quality value as defined in…",N,N],[12,"item","","The actual contents of the field.",114,N],[12,"quality","","The quality (client or server preference) for the value.",114,N],[3,"ContentEncoding","","`Content-Encoding` header, defined in RFC7231",N,N],[12,"0","","",115,N],[3,"AccessControlAllowHeaders","","`Access-Control-Allow-Headers` header, part of CORS",N,N],[12,"0","","",116,N],[4,"IfMatch","","`If-Match` header, defined in RFC7232",N,N],[13,"Any","","Any value is a match",117,N],[13,"Items","","Only the listed items are a match",117,N],[4,"ByteRangeSpec","","Each `Range::Bytes` header can contain one or more…",N,N],[13,"FromTo","","Get all bytes between x and y (\"x-y\")",118,N],[13,"AllFrom","","Get all bytes starting from x (\"x-\")",118,N],[13,"Last","","Get last x bytes (\"-x\")",118,N],[4,"ReferrerPolicy","","`Referrer-Policy` header, part of Referrer Policy",N,N],[13,"NoReferrer","","`no-referrer`",119,N],[13,"NoReferrerWhenDowngrade","","`no-referrer-when-downgrade`",119,N],[13,"SameOrigin","","`same-origin`",119,N],[13,"Origin","","`origin`",119,N],[13,"OriginWhenCrossOrigin","","`origin-when-cross-origin`",119,N],[13,"UnsafeUrl","","`unsafe-url`",119,N],[13,"StrictOrigin","","`strict-origin`",119,N],[13,"StrictOriginWhenCrossOrigin","","`strict-origin-when-cross-origin`",119,N],[3,"ContentDisposition","","A `Content-Disposition` header, (re)defined in RFC6266",N,N],[12,"disposition","","The disposition",120,N],[12,"parameters","","Disposition parameters",120,N],[4,"ContentRangeSpec","","Content-Range, described in RFC7233",N,N],[13,"Bytes","","Byte range",121,N],[12,"range","rocket::http::hyper::header::ContentRangeSpec","First and last bytes of the range, omitted if request…",121,N],[12,"instance_length","","Total length of the instance, can be omitted if unknown",121,N],[13,"Unregistered","rocket::http::hyper::header","Custom range, with unit not registered at IANA",121,N],[12,"unit","rocket::http::hyper::header::ContentRangeSpec","other-range-unit",121,N],[12,"resp","","other-range-resp",121,N],[3,"AccessControlAllowCredentials","rocket::http::hyper::header","`Access-Control-Allow-Credentials` header, part of CORS",N,N],[3,"ContentRange","","`Content-Range` header, defined in RFC7233",N,N],[12,"0","","",122,N],[3,"Origin","","The `Origin` header.",N,N],[12,"scheme","","The scheme, such as http or https",123,N],[12,"host","","The host, such as Host{hostname: \"hyper.rs\".to_owned(),…",123,N],[4,"RangeUnit","","Range Units, described in RFC7233",N,N],[13,"Bytes","","Indicating byte-range requests are supported.",124,N],[13,"None","","Reserved as keyword, indicating no ranges are supported.",124,N],[13,"Unregistered","","The given range unit is not registered at IANA.",124,N],[3,"Quality","","Represents a quality used in quality values.",N,N],[12,"0","","",125,N],[3,"TransferEncoding","","`Transfer-Encoding` header, defined in RFC7230",N,N],[12,"0","","",126,N],[4,"ConnectionOption","","Values that can be in the `Connection` header.",N,N],[13,"KeepAlive","","The `keep-alive` connection value.",127,N],[13,"Close","","The `close` connection value.",127,N],[13,"ConnectionHeader","","Values in the Connection header that are supposed to be…",127,N],[0,"h1","rocket::http::hyper","Adapts the HTTP/1.1 implementation into the `HttpMessage`…",N,N],[3,"Http11Message","rocket::http::hyper::h1","An implementation of the `HttpMessage` trait for HTTP/1.1.",N,N],[3,"Http11Protocol","","The `Protocol` implementation provides HTTP/1.1 messages.",N,N],[4,"HttpReader","","Readers to handle different Transfer-Encodings.",N,N],[13,"SizedReader","","A Reader used when a Content-Length header is passed with…",128,N],[13,"ChunkedReader","","A Reader used when Transfer-Encoding is `chunked`.",128,N],[13,"EofReader","","A Reader used for responses that don't indicate a length…",128,N],[13,"EmptyReader","","A Reader used for messages that should never have a body.",128,N],[4,"HttpWriter","","Writers to handle different Transfer-Encodings.",N,N],[13,"ThroughWriter","","A no-op Writer, used initially before Transfer-Encoding is…",129,N],[13,"ChunkedWriter","","A Writer for when Transfer-Encoding includes `chunked`.",129,N],[13,"SizedWriter","","A Writer for when Content-Length is set.",129,N],[13,"EmptyWriter","","A writer that should not write any body.",129,N],[3,"EndError","","",N,N],[5,"parse_request","","Parses a request into an Incoming message head.",N,[[["bufreader"]],["result",["incoming","error"]]]],[5,"parse_response","","Parses a response into an Incoming message head.",N,[[["bufreader"]],["result",["incoming","error"]]]],[3,"Incoming","","An Incoming Message head. Includes request/status line,…",N,N],[12,"version","","HTTP version of the message.",130,N],[12,"subject","","Subject (request line or status line) of Incoming message.",130,N],[12,"headers","","Headers of the Incoming message.",130,N],[17,"CR","","The `\\r` byte.",N,N],[17,"LF","","The `\\n` byte.",N,N],[17,"LINE_ENDING","","The bytes `\\r\\n`.",N,N],[0,"mime","rocket::http::hyper","Re-exporting the mime crate, for convenience.",N,N],[4,"TopLevel","rocket::http::hyper::mime","",N,N],[13,"Star","","",131,N],[13,"Text","","",131,N],[13,"Image","","",131,N],[13,"Audio","","",131,N],[13,"Video","","",131,N],[13,"Application","","",131,N],[13,"Multipart","","",131,N],[13,"Message","","",131,N],[13,"Model","","",131,N],[13,"Ext","","",131,N],[6,"Param","","",N,N],[4,"Value","","",N,N],[13,"Utf8","","",132,N],[13,"Ext","","",132,N],[3,"Mime","","Mime, or Media Type. Encapsulates common registers types.",N,N],[12,"0","","",133,N],[12,"1","","",133,N],[12,"2","","",133,N],[14,"mime","","Easily create a Mime without having to import so many enums.",N,N],[4,"Attr","","",N,N],[13,"Charset","","",134,N],[13,"Boundary","","",134,N],[13,"Q","","",134,N],[13,"Ext","","",134,N],[4,"SubLevel","","",N,N],[13,"Star","","",135,N],[13,"Plain","","",135,N],[13,"Html","","",135,N],[13,"Xml","","",135,N],[13,"Javascript","","",135,N],[13,"Css","","",135,N],[13,"EventStream","","",135,N],[13,"Json","","",135,N],[13,"WwwFormUrlEncoded","","",135,N],[13,"Msgpack","","",135,N],[13,"OctetStream","","",135,N],[13,"FormData","","",135,N],[13,"Png","","",135,N],[13,"Gif","","",135,N],[13,"Bmp","","",135,N],[13,"Jpeg","","",135,N],[13,"Mpeg","","",135,N],[13,"Mp4","","",135,N],[13,"Ogg","","",135,N],[13,"Ext","","",135,N],[3,"Response","rocket::http::hyper","The outgoing half for a Tcp connection, created by a…",N,N],[12,"version","","The HTTP version of this response.",136,N],[4,"StatusCode","","An HTTP status code (`status-code` in RFC 7230 et al.).",N,N],[13,"Continue","","100 Continue [RFC7231, Section 6.2.1]",137,N],[13,"SwitchingProtocols","","101 Switching Protocols [RFC7231, Section 6.2.2]",137,N],[13,"Processing","","102 Processing [RFC2518]",137,N],[13,"Ok","","200 OK [RFC7231, Section 6.3.1]",137,N],[13,"Created","","201 Created [RFC7231, Section 6.3.2]",137,N],[13,"Accepted","","202 Accepted [RFC7231, Section 6.3.3]",137,N],[13,"NonAuthoritativeInformation","","203 Non-Authoritative Information [RFC7231, Section 6.3.4]",137,N],[13,"NoContent","","204 No Content [RFC7231, Section 6.3.5]",137,N],[13,"ResetContent","","205 Reset Content [RFC7231, Section 6.3.6]",137,N],[13,"PartialContent","","206 Partial Content [RFC7233, Section 4.1]",137,N],[13,"MultiStatus","","207 Multi-Status [RFC4918]",137,N],[13,"AlreadyReported","","208 Already Reported [RFC5842]",137,N],[13,"ImUsed","","226 IM Used [RFC3229]",137,N],[13,"MultipleChoices","","300 Multiple Choices [RFC7231, Section 6.4.1]",137,N],[13,"MovedPermanently","","301 Moved Permanently [RFC7231, Section 6.4.2]",137,N],[13,"Found","","302 Found [RFC7231, Section 6.4.3]",137,N],[13,"SeeOther","","303 See Other [RFC7231, Section 6.4.4]",137,N],[13,"NotModified","","304 Not Modified [RFC7232, Section 4.1]",137,N],[13,"UseProxy","","305 Use Proxy [RFC7231, Section 6.4.5]",137,N],[13,"TemporaryRedirect","","307 Temporary Redirect [RFC7231, Section 6.4.7]",137,N],[13,"PermanentRedirect","","308 Permanent Redirect [RFC7238]",137,N],[13,"BadRequest","","400 Bad Request [RFC7231, Section 6.5.1]",137,N],[13,"Unauthorized","","401 Unauthorized [RFC7235, Section 3.1]",137,N],[13,"PaymentRequired","","402 Payment Required [RFC7231, Section 6.5.2]",137,N],[13,"Forbidden","","403 Forbidden [RFC7231, Section 6.5.3]",137,N],[13,"NotFound","","404 Not Found [RFC7231, Section 6.5.4]",137,N],[13,"MethodNotAllowed","","405 Method Not Allowed [RFC7231, Section 6.5.5]",137,N],[13,"NotAcceptable","","406 Not Acceptable [RFC7231, Section 6.5.6]",137,N],[13,"ProxyAuthenticationRequired","","407 Proxy Authentication Required [RFC7235, Section 3.2]",137,N],[13,"RequestTimeout","","408 Request Timeout [RFC7231, Section 6.5.7]",137,N],[13,"Conflict","","409 Conflict [RFC7231, Section 6.5.8]",137,N],[13,"Gone","","410 Gone [RFC7231, Section 6.5.9]",137,N],[13,"LengthRequired","","411 Length Required [RFC7231, Section 6.5.10]",137,N],[13,"PreconditionFailed","","412 Precondition Failed [RFC7232, Section 4.2]",137,N],[13,"PayloadTooLarge","","413 Payload Too Large [RFC7231, Section 6.5.11]",137,N],[13,"UriTooLong","","414 URI Too Long [RFC7231, Section 6.5.12]",137,N],[13,"UnsupportedMediaType","","415 Unsupported Media Type [RFC7231, Section 6.5.13]",137,N],[13,"RangeNotSatisfiable","","416 Range Not Satisfiable [RFC7233, Section 4.4]",137,N],[13,"ExpectationFailed","","417 Expectation Failed [RFC7231, Section 6.5.14]",137,N],[13,"ImATeapot","","418 I'm a teapot [curiously, not registered by IANA, but…",137,N],[13,"MisdirectedRequest","","421 Misdirected Request RFC7540, Section 9.1.2",137,N],[13,"UnprocessableEntity","","422 Unprocessable Entity [RFC4918]",137,N],[13,"Locked","","423 Locked [RFC4918]",137,N],[13,"FailedDependency","","424 Failed Dependency [RFC4918]",137,N],[13,"UpgradeRequired","","426 Upgrade Required [RFC7231, Section 6.5.15]",137,N],[13,"PreconditionRequired","","428 Precondition Required [RFC6585]",137,N],[13,"TooManyRequests","","429 Too Many Requests [RFC6585]",137,N],[13,"RequestHeaderFieldsTooLarge","","431 Request Header Fields Too Large [RFC6585]",137,N],[13,"UnavailableForLegalReasons","","451 Unavailable For Legal Reasons [RFC7725]",137,N],[13,"InternalServerError","","500 Internal Server Error [RFC7231, Section 6.6.1]",137,N],[13,"NotImplemented","","501 Not Implemented [RFC7231, Section 6.6.2]",137,N],[13,"BadGateway","","502 Bad Gateway [RFC7231, Section 6.6.3]",137,N],[13,"ServiceUnavailable","","503 Service Unavailable [RFC7231, Section 6.6.4]",137,N],[13,"GatewayTimeout","","504 Gateway Timeout [RFC7231, Section 6.6.5]",137,N],[13,"HttpVersionNotSupported","","505 HTTP Version Not Supported [RFC7231, Section 6.6.6]",137,N],[13,"VariantAlsoNegotiates","","506 Variant Also Negotiates [RFC2295]",137,N],[13,"InsufficientStorage","","507 Insufficient Storage [RFC4918]",137,N],[13,"LoopDetected","","508 Loop Detected [RFC5842]",137,N],[13,"NotExtended","","510 Not Extended [RFC2774]",137,N],[13,"NetworkAuthenticationRequired","","511 Network Authentication Required [RFC6585]",137,N],[13,"Unregistered","","A status code not in the IANA HTTP status code registry or…",137,N],[4,"Error","","A set of errors that can occur parsing HTTP streams.",N,N],[13,"Method","","An invalid `Method`, such as `GE,T`.",138,N],[13,"Uri","","An invalid `RequestUri`, such as `exam ple.domain`.",138,N],[13,"Version","","An invalid `HttpVersion`, such as `HTP/1.1`",138,N],[13,"Header","","An invalid `Header`.",138,N],[13,"TooLarge","","A message head is too large to be reasonable.",138,N],[13,"Status","","An invalid `Status`, such as `1337 ELITE`.",138,N],[13,"Io","","An `io::Error` that occurred while trying to read or write…",138,N],[13,"Ssl","","An error from a SSL library.",138,N],[13,"Utf8","","Parsing a field as string failed",138,N],[8,"Handler","","A handler that can handle incoming requests for a server.",N,N],[10,"handle","","Receives a `Request`/`Response` pair, and should perform…",139,N],[11,"check_continue","","Called when a Request includes a `Expect: 100-continue`…",139,N],[11,"on_connection_start","","This is run after a connection is received, on a…",139,N],[11,"on_connection_end","","This is run before a connection is closed, on a…",139,N],[0,"net","","A collection of traits abstracting over Listeners and…",N,N],[4,"Fresh","rocket::http::hyper::net","The write-status indicating headers have not been written.",N,N],[4,"Streaming","","The write-status indicating headers have been written.",N,N],[8,"NetworkListener","","An abstraction to listen for connections on a certain port.",N,N],[16,"Stream","","The stream produced for each connection.",140,N],[10,"accept","","Returns an iterator of streams.",140,[[["self"]],["result",["error"]]]],[10,"local_addr","","Get the address this Listener ended up listening on.",140,[[["self"]],["result",["socketaddr","error"]]]],[11,"incoming","","Returns an iterator over incoming connections.",140,[[["self"]],["networkconnections"]]],[11,"set_read_timeout","","Sets the read timeout for all streams that are accepted",140,N],[11,"set_write_timeout","","Sets the write timeout for all streams that are accepted",140,N],[3,"NetworkConnections","","An iterator wrapper over a `NetworkAcceptor`.",N,N],[8,"NetworkStream","","An abstraction over streams that a `Server` can utilize.",N,N],[10,"peer_addr","","Get the remote address of the underlying connection.",141,[[["self"]],["result",["socketaddr","error"]]]],[10,"set_read_timeout","","Set the maximum time to wait for a read to complete.",141,[[["self"],["option",["duration"]]],["result",["error"]]]],[10,"set_write_timeout","","Set the maximum time to wait for a write to complete.",141,[[["self"],["option",["duration"]]],["result",["error"]]]],[11,"close","","This will be called when Stream should no longer be kept…",141,[[["self"],["shutdown"]],["result",["error"]]]],[8,"NetworkConnector","","A connector creates a NetworkStream.",N,N],[16,"Stream","","Type of `Stream` to create",142,N],[10,"connect","","Connect to a remote address.",142,[[["self"],["str"],["u16"],["str"]],["result",["error"]]]],[3,"HttpListener","","A `NetworkListener` for `HttpStream`s.",N,N],[3,"HttpStream","","A wrapper around a `TcpStream`.",N,N],[12,"0","","",143,N],[3,"HttpConnector","","A connector that will produce HttpStreams.",N,N],[8,"SslClient","","An abstraction to allow any SSL implementation to be used…",N,N],[16,"Stream","","The protected stream.",144,N],[10,"wrap_client","","Wrap a client stream with SSL.",144,[[["self"],["t"],["str"]],["result",["error"]]]],[8,"SslServer","","An abstraction to allow any SSL implementation to be used…",N,N],[16,"Stream","","The protected stream.",145,N],[10,"wrap_server","","Wrap a server stream with SSL.",145,[[["self"],["t"]],["result",["error"]]]],[4,"HttpsStream","","A stream over the HTTP protocol, possibly protected by SSL.",N,N],[13,"Http","","A plain text stream.",146,N],[13,"Https","","A stream protected by SSL.",146,N],[3,"HttpsListener","","A Http Listener over SSL.",N,N],[3,"HttpsConnector","","A connector that can protect HTTP streams using SSL.",N,N],[4,"Method","rocket::http::hyper","The Request Method (VERB)",N,N],[13,"Options","","OPTIONS",147,N],[13,"Get","","GET",147,N],[13,"Post","","POST",147,N],[13,"Put","","PUT",147,N],[13,"Delete","","DELETE",147,N],[13,"Head","","HEAD",147,N],[13,"Trace","","TRACE",147,N],[13,"Connect","","CONNECT",147,N],[13,"Patch","","PATCH",147,N],[13,"Extension","","Method extensions. An example would be `let m =…",147,N],[3,"Server","","A server can listen on a TCP socket.",N,N],[3,"Request","","A request bundles several parts of an incoming…",N,N],[12,"remote_addr","","The IP address of the remote connection.",148,N],[12,"method","","The `Method`, such as `Get`, `Post`, etc.",148,N],[12,"headers","","The headers of the incoming request.",148,N],[12,"uri","","The target request-uri for this request.",148,N],[12,"version","","The version of HTTP for this request.",148,N],[4,"RequestUri","","The Request-URI of a Request's StartLine.",N,N],[13,"AbsolutePath","","The most common request target, an absolute path and…",149,N],[13,"AbsoluteUri","","An absolute URI. Used in conjunction with proxies.",149,N],[13,"Authority","","The authority form is only for use with `CONNECT` requests.",149,N],[13,"Star","","The star is used to target the entire server, instead of a…",149,N],[0,"uri","rocket::http","Types for URIs and traits for rendering URI components.",N,N],[8,"UriPart","rocket::http::uri","Marker trait for types that mark a part of a URI.",N,N],[18,"DELIMITER","","",150,N],[4,"Path","","Marker type indicating use of a type for the path…",N,N],[4,"Query","","Marker type indicating use of a type for the query…",N,N],[3,"Error","","Error emitted on URI parse failure.",N,N],[3,"Authority","","A URI with an authority only: `user:pass@host:8000`.",N,N],[3,"Segments","","Iterator over the segments of an absolute URI path. Skips…",N,N],[12,"0","","",151,N],[4,"SegmentError","","Errors which can occur when attempting to interpret a…",N,N],[13,"Utf8","","The segment contained invalid UTF8 characters when percent…",152,N],[13,"BadStart","","The segment started with the wrapped invalid character.",152,N],[13,"BadChar","","The segment contained the wrapped invalid character.",152,N],[13,"BadEnd","","The segment ended with the wrapped invalid character.",152,N],[4,"Uri","","An `enum` encapsulating any of the possible URI variants.",N,N],[13,"Origin","","An origin URI.",153,N],[13,"Authority","","An authority URI.",153,N],[13,"Absolute","","An absolute URI.",153,N],[13,"Asterisk","","An asterisk: exactly `*`.",153,N],[8,"FromUriParam","","Conversion trait for parameters used in [`uri!`]…",N,N],[16,"Target","","The resulting type of this conversion.",154,N],[10,"from_uri_param","","Converts a value of type `T` into a value of type…",154,N],[8,"UriDisplay","","Trait implemented by types that can be displayed as part…",N,N],[10,"fmt","","Formats `self` in a URI-safe manner using the given…",155,[[["self"],["formatter"]],["result",["error"]]]],[3,"Origin","","A URI with an absolute path and optional query:…",N,N],[8,"Ignorable","","Trait implemented by types that can be ignored in `uri!`.",N,N],[3,"Formatter","","A struct used to format strings for [`UriDisplay`].",N,N],[3,"Absolute","","A URI with a scheme, authority, path, and query:…",N,N],[0,"ext","rocket::http","Extension traits implemented by several HTTP types.",N,N],[8,"IntoCollection","rocket::http::ext","Trait implemented by types that can be converted into a…",N,N],[10,"into_collection","","Converts `self` into a collection.",156,[[["self"]],["smallvec"]]],[8,"IntoOwned","","Trait implemented by types that can be converted into…",N,N],[16,"Owned","","The owned version of the type.",157,N],[10,"into_owned","","Converts `self` into an owned version of itself.",157,N],[0,"uncased","rocket::http","Contains types that encapsulate uncased ASCII strings.",N,N],[3,"UncasedStr","rocket::http::uncased","A reference to an uncased (case-preserving) ASCII string.…",N,N],[3,"Uncased","","An uncased (case-preserving), owned or borrowed ASCII…",N,N],[5,"uncased_eq","","Returns true if `s1` and `s2` are equal without…",N,[[["s1"],["s2"]],["bool"]]],[3,"Cookie","rocket::http","Representation of an HTTP cookie.",N,N],[4,"StatusClass","","Enumeration of HTTP status classes.",N,N],[13,"Informational","","Indicates a provisional response: a status code of 1XX.",158,N],[13,"Success","","Indicates that a request has succeeded: a status code of…",158,N],[13,"Redirection","","Indicates that further action needs to be taken by the…",158,N],[13,"ClientError","","Intended for cases in which the client seems to have…",158,N],[13,"ServerError","","Indicates cases in which the server is aware that it has…",158,N],[13,"Unknown","","Indicates that the status code is nonstandard and unknown:…",158,N],[3,"MediaType","","An HTTP media type.",N,N],[4,"Method","","Representation of HTTP methods.",N,N],[13,"Get","","",159,N],[13,"Put","","",159,N],[13,"Post","","",159,N],[13,"Delete","","",159,N],[13,"Options","","",159,N],[13,"Head","","",159,N],[13,"Trace","","",159,N],[13,"Connect","","",159,N],[13,"Patch","","",159,N],[3,"Status","","Structure representing an HTTP status: an integer code and…",N,N],[12,"code","","The HTTP status code associated with this status.",160,N],[12,"reason","","The HTTP reason phrase associated with this status.",160,N],[3,"RawStr","","A reference to a string inside of a raw HTTP message.",N,N],[4,"Cookies","","Collection of one or more HTTP cookies.",N,N],[3,"QMediaType","","A `MediaType` with an associated quality value.",N,N],[12,"0","","",161,N],[12,"1","","",161,N],[3,"HeaderMap","","A collection of headers, mapping a header name to its many…",N,N],[14,"impl_from_uri_param_identity","","Macro to automatically generated identity [`FromUriParam`]…",N,N],[4,"SameSite","","The `SameSite` cookie attribute.",N,N],[13,"Strict","","The \"Strict\" `SameSite` attribute.",162,N],[13,"Lax","","The \"Lax\" `SameSite` attribute.",162,N],[13,"None","","No `SameSite` attribute.",162,N],[3,"Accept","","The HTTP Accept header.",N,N],[3,"Header","","Simple representation of an HTTP header.",N,N],[12,"name","","The name of the header.",163,N],[12,"value","","The value of the header.",163,N],[3,"ContentType","","Representation of HTTP Content-Types.",N,N],[12,"0","","",164,N],[11,"new","rocket","Creates a new route with the given method, path, and…",1,[[["method"],["s"],["h"]],["route"]]],[11,"ranked","","Creates a new route with the given rank, method, path, and…",1,[[["isize"],["method"],["s"],["h"]],["route"]]],[11,"base","","Retrieves the path of the base mount point of this route…",1,[[["self"]],["str"]]],[11,"set_uri","","Sets the base mount point of the route to `base` and sets…",1,[[["self"],["origin"],["origin"]],["result",["routeurierror"]]]],[11,"ignite","","Create a new `Rocket` application using the configuration…",165,[[],["rocket"]]],[11,"custom","","Creates a new `Rocket` application using the supplied…",165,[[["config"]],["rocket"]]],[11,"mount","","Mounts all of the routes in the supplied vector at the…",165,[[["self"],["str"],["r"]],["self"]]],[11,"register","","Registers all of the catchers in the supplied vector.",165,[[["self"],["vec",["catcher"]]],["self"]]],[11,"manage","","Add `state` to the state managed by this instance of Rocket.",165,[[["self"],["t"]],["self"]]],[11,"attach","","Attaches a fairing to this instance of Rocket. If the…",165,[[["self"],["f"]],["self"]]],[11,"launch","","Starts the application server and begins listening for and…",165,[[["self"]],["launcherror"]]],[11,"routes","","Returns an iterator over all of the routes mounted on this…",165,N],[11,"state","","Returns `Some` of the managed state value for the type `T`…",165,[[["self"]],["option"]]],[11,"config","","Returns the active configuration.",165,[[["self"]],["config"]]],[11,"new","","Creates a catcher for the given status code using the…",2,[[["u16"],["errorhandler"]],["catcher"]]],[6,"ErrorHandler","","The type of an error handler.",N,N],[8,"Handler","","Trait implemented by types that can handle requests.",N,N],[10,"handle","","Called by Rocket when a `Request` with its associated…",52,[[["self"],["request"],["data"]],["outcome"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"into_collection","","",26,[[["self"]],["smallvec"]]],[11,"mapped","","",26,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",26,[[["self"]],["result",["parseerr"]]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"into_collection","","",49,[[["self"]],["smallvec"]]],[11,"mapped","","",49,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",49,[[["self"]],["result",["parseerr"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into_collection","","",0,[[["self"]],["smallvec"]]],[11,"mapped","","",0,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",0,[[["self"]],["result",["parseerr"]]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into_collection","","",1,[[["self"]],["smallvec"]]],[11,"mapped","","",1,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",1,[[["self"]],["result",["parseerr"]]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"to_string","","",11,[[["self"]],["string"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"into_collection","","",11,[[["self"]],["smallvec"]]],[11,"mapped","","",11,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",11,[[["self"]],["result",["parseerr"]]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"into_collection","","",13,[[["self"]],["smallvec"]]],[11,"mapped","","",13,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",13,[[["self"]],["result",["parseerr"]]]],[11,"equivalent","","",13,[[["self"],["k"]],["bool"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into_collection","","",2,[[["self"]],["smallvec"]]],[11,"mapped","","",2,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",2,[[["self"]],["result",["parseerr"]]]],[11,"from","","",165,[[["t"]],["t"]]],[11,"into","","",165,[[["self"]],["u"]]],[11,"try_from","","",165,[[["u"]],["result"]]],[11,"borrow","","",165,[[["self"]],["t"]]],[11,"borrow_mut","","",165,[[["self"]],["t"]]],[11,"try_into","","",165,[[["self"]],["result"]]],[11,"get_type_id","","",165,[[["self"]],["typeid"]]],[11,"handle","","",165,N],[11,"into_collection","","",165,[[["self"]],["smallvec"]]],[11,"mapped","","",165,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",165,[[["self"]],["result",["parseerr"]]]],[11,"from","rocket::outcome","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into_collection","","",3,[[["self"]],["smallvec"]]],[11,"mapped","","",3,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",3,[[["self"]],["result",["parseerr"]]]],[11,"equivalent","","",3,[[["self"],["k"]],["bool"]]],[11,"from","rocket::config","",46,[[["t"]],["t"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,N],[11,"to_string","","",46,[[["self"]],["string"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"into_collection","","",46,[[["self"]],["smallvec"]]],[11,"mapped","","",46,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",46,[[["self"]],["result",["parseerr"]]]],[11,"equivalent","","",46,[[["self"],["k"]],["bool"]]],[11,"from","rocket::local","",166,[[["t"]],["t"]]],[11,"into","","",166,[[["self"]],["u"]]],[11,"try_from","","",166,[[["u"]],["result"]]],[11,"borrow","","",166,[[["self"]],["t"]]],[11,"borrow_mut","","",166,[[["self"]],["t"]]],[11,"try_into","","",166,[[["self"]],["result"]]],[11,"get_type_id","","",166,[[["self"]],["typeid"]]],[11,"into_collection","","",166,[[["self"]],["smallvec"]]],[11,"mapped","","",166,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",166,[[["self"]],["result",["parseerr"]]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into_collection","","",4,[[["self"]],["smallvec"]]],[11,"mapped","","",4,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",4,[[["self"]],["result",["parseerr"]]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into_collection","","",5,[[["self"]],["smallvec"]]],[11,"mapped","","",5,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",5,[[["self"]],["result",["parseerr"]]]],[11,"from","rocket::request","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into_collection","","",6,[[["self"]],["smallvec"]]],[11,"mapped","","",6,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",6,[[["self"]],["result",["parseerr"]]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into_collection","","",7,[[["self"]],["smallvec"]]],[11,"mapped","","",7,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",7,[[["self"]],["result",["parseerr"]]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into_collection","","",8,[[["self"]],["smallvec"]]],[11,"mapped","","",8,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",8,[[["self"]],["result",["parseerr"]]]],[11,"equivalent","","",8,[[["self"],["k"]],["bool"]]],[11,"from","","",167,[[["t"]],["t"]]],[11,"into_iter","","",167,[[["self"]],["i"]]],[11,"into","","",167,[[["self"]],["u"]]],[11,"to_owned","","",167,[[["self"]],["t"]]],[11,"clone_into","","",167,N],[11,"try_from","","",167,[[["u"]],["result"]]],[11,"borrow","","",167,[[["self"]],["t"]]],[11,"borrow_mut","","",167,[[["self"]],["t"]]],[11,"try_into","","",167,[[["self"]],["result"]]],[11,"get_type_id","","",167,[[["self"]],["typeid"]]],[11,"into_collection","","",167,[[["self"]],["smallvec"]]],[11,"mapped","","",167,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",167,[[["self"]],["result",["parseerr"]]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into_iter","","",12,[[["self"]],["i"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"into_collection","","",12,[[["self"]],["smallvec"]]],[11,"mapped","","",12,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",12,[[["self"]],["result",["parseerr"]]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into_collection","","",9,[[["self"]],["smallvec"]]],[11,"mapped","","",9,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",9,[[["self"]],["result",["parseerr"]]]],[11,"equivalent","","",9,[[["self"],["k"]],["bool"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"into_collection","","",10,[[["self"]],["smallvec"]]],[11,"mapped","","",10,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",10,[[["self"]],["result",["parseerr"]]]],[11,"from","rocket::response","",25,[[["t"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"into_collection","","",25,[[["self"]],["smallvec"]]],[11,"mapped","","",25,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",25,[[["self"]],["result",["parseerr"]]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"into_collection","","",22,[[["self"]],["smallvec"]]],[11,"mapped","","",22,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",22,[[["self"]],["result",["parseerr"]]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"into_collection","","",27,[[["self"]],["smallvec"]]],[11,"mapped","","",27,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",27,[[["self"]],["result",["parseerr"]]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"into_collection","","",23,[[["self"]],["smallvec"]]],[11,"mapped","","",23,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",23,[[["self"]],["result",["parseerr"]]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"into_collection","","",24,[[["self"]],["smallvec"]]],[11,"mapped","","",24,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",24,[[["self"]],["result",["parseerr"]]]],[11,"from","rocket::response::content","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"into_collection","","",20,[[["self"]],["smallvec"]]],[11,"mapped","","",20,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",20,[[["self"]],["result",["parseerr"]]]],[11,"from","rocket::response","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"into_collection","","",21,[[["self"]],["smallvec"]]],[11,"mapped","","",21,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",21,[[["self"]],["result",["parseerr"]]]],[11,"from","rocket::response::content","",28,[[["t"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,N],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"into_collection","","",28,[[["self"]],["smallvec"]]],[11,"mapped","","",28,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",28,[[["self"]],["result",["parseerr"]]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,N],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"into_collection","","",29,[[["self"]],["smallvec"]]],[11,"mapped","","",29,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",29,[[["self"]],["result",["parseerr"]]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,N],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"into_collection","","",30,[[["self"]],["smallvec"]]],[11,"mapped","","",30,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",30,[[["self"]],["result",["parseerr"]]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,N],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"into_collection","","",31,[[["self"]],["smallvec"]]],[11,"mapped","","",31,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",31,[[["self"]],["result",["parseerr"]]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,N],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"into_collection","","",32,[[["self"]],["smallvec"]]],[11,"mapped","","",32,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",32,[[["self"]],["result",["parseerr"]]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,N],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"into_collection","","",33,[[["self"]],["smallvec"]]],[11,"mapped","","",33,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",33,[[["self"]],["result",["parseerr"]]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,N],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"into_collection","","",34,[[["self"]],["smallvec"]]],[11,"mapped","","",34,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",34,[[["self"]],["result",["parseerr"]]]],[11,"from","rocket::response::status","",35,[[["t"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,N],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"into_collection","","",35,[[["self"]],["smallvec"]]],[11,"mapped","","",35,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",35,[[["self"]],["result",["parseerr"]]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,N],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"into_collection","","",36,[[["self"]],["smallvec"]]],[11,"mapped","","",36,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",36,[[["self"]],["result",["parseerr"]]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,N],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"into_collection","","",37,[[["self"]],["smallvec"]]],[11,"mapped","","",37,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",37,[[["self"]],["result",["parseerr"]]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,N],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"into_collection","","",38,[[["self"]],["smallvec"]]],[11,"mapped","","",38,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",38,[[["self"]],["result",["parseerr"]]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,N],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"into_collection","","",39,[[["self"]],["smallvec"]]],[11,"mapped","","",39,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",39,[[["self"]],["result",["parseerr"]]]],[11,"from","rocket::config","",42,[[["t"]],["t"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,N],[11,"to_string","","",42,[[["self"]],["string"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"into_collection","","",42,[[["self"]],["smallvec"]]],[11,"mapped","","",42,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",42,[[["self"]],["result",["parseerr"]]]],[11,"from","","",168,[[["t"]],["t"]]],[11,"into","","",168,[[["self"]],["u"]]],[11,"to_owned","","",168,[[["self"]],["t"]]],[11,"clone_into","","",168,N],[11,"to_string","","",168,[[["self"]],["string"]]],[11,"try_from","","",168,[[["u"]],["result"]]],[11,"borrow","","",168,[[["self"]],["t"]]],[11,"borrow_mut","","",168,[[["self"]],["t"]]],[11,"try_into","","",168,[[["self"]],["result"]]],[11,"get_type_id","","",168,[[["self"]],["typeid"]]],[11,"into_collection","","",168,[[["self"]],["smallvec"]]],[11,"mapped","","",168,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",168,[[["self"]],["result",["parseerr"]]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,N],[11,"to_string","","",47,[[["self"]],["string"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"into_collection","","",47,[[["self"]],["smallvec"]]],[11,"mapped","","",47,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",47,[[["self"]],["result",["parseerr"]]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"into_collection","","",43,[[["self"]],["smallvec"]]],[11,"mapped","","",43,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",43,[[["self"]],["result",["parseerr"]]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"to_string","","",44,[[["self"]],["string"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"into_collection","","",44,[[["self"]],["smallvec"]]],[11,"mapped","","",44,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",44,[[["self"]],["result",["parseerr"]]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,N],[11,"to_string","","",45,[[["self"]],["string"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"into_collection","","",45,[[["self"]],["smallvec"]]],[11,"mapped","","",45,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",45,[[["self"]],["result",["parseerr"]]]],[11,"equivalent","","",45,[[["self"],["k"]],["bool"]]],[11,"from","rocket::data","",169,[[["t"]],["t"]]],[11,"into","","",169,[[["self"]],["u"]]],[11,"try_from","","",169,[[["u"]],["result"]]],[11,"borrow","","",169,[[["self"]],["t"]]],[11,"borrow_mut","","",169,[[["self"]],["t"]]],[11,"try_into","","",169,[[["self"]],["result"]]],[11,"get_type_id","","",169,[[["self"]],["typeid"]]],[11,"into_collection","","",169,[[["self"]],["smallvec"]]],[11,"mapped","","",169,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",169,[[["self"]],["result",["parseerr"]]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"into_collection","","",48,[[["self"]],["smallvec"]]],[11,"mapped","","",48,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",48,[[["self"]],["result",["parseerr"]]]],[11,"from","rocket::fairing","",56,[[["t"]],["t"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"into_collection","","",56,[[["self"]],["smallvec"]]],[11,"mapped","","",56,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",56,[[["self"]],["result",["parseerr"]]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"into_collection","","",55,[[["self"]],["smallvec"]]],[11,"mapped","","",55,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",55,[[["self"]],["result",["parseerr"]]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,N],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"into_collection","","",57,[[["self"]],["smallvec"]]],[11,"mapped","","",57,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",57,[[["self"]],["result",["parseerr"]]]],[11,"from","rocket::error","",61,[[["t"]],["t"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"to_string","","",61,[[["self"]],["string"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"into_collection","","",61,[[["self"]],["smallvec"]]],[11,"mapped","","",61,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",61,[[["self"]],["result",["parseerr"]]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"to_string","","",59,[[["self"]],["string"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"into_collection","","",59,[[["self"]],["smallvec"]]],[11,"mapped","","",59,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",59,[[["self"]],["result",["parseerr"]]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"to_string","","",60,[[["self"]],["string"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"into_collection","","",60,[[["self"]],["smallvec"]]],[11,"mapped","","",60,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",60,[[["self"]],["result",["parseerr"]]]],[11,"from","rocket::http::hyper::header","",62,[[["t"]],["t"]]],[11,"into","","",62,[[["self"]],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,N],[11,"to_string","","",62,[[["self"]],["string"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"into_collection","","",62,[[["self"]],["smallvec"]]],[11,"mapped","","",62,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",62,[[["self"]],["result",["parseerr"]]]],[11,"equivalent","","",62,[[["self"],["k"]],["bool"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[["self"]],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,N],[11,"to_string","","",63,[[["self"]],["string"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"into_collection","","",63,[[["self"]],["smallvec"]]],[11,"mapped","","",63,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",63,[[["self"]],["result",["parseerr"]]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[["self"]],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,N],[11,"to_string","","",64,[[["self"]],["string"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"into_collection","","",64,[[["self"]],["smallvec"]]],[11,"mapped","","",64,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",64,[[["self"]],["result",["parseerr"]]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[["self"]],["u"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,N],[11,"to_string","","",65,[[["self"]],["string"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"into_collection","","",65,[[["self"]],["smallvec"]]],[11,"mapped","","",65,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",65,[[["self"]],["result",["parseerr"]]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[["self"]],["u"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,N],[11,"to_string","","",67,[[["self"]],["string"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"into_collection","","",67,[[["self"]],["smallvec"]]],[11,"mapped","","",67,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",67,[[["self"]],["result",["parseerr"]]]],[11,"equivalent","","",67,[[["self"],["k"]],["bool"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[["self"]],["u"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,N],[11,"to_string","","",68,[[["self"]],["string"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"try_into","","",68,[[["self"]],["result"]]],[11,"get_type_id","","",68,[[["self"]],["typeid"]]],[11,"into_collection","","",68,[[["self"]],["smallvec"]]],[11,"mapped","","",68,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",68,[[["self"]],["result",["parseerr"]]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[["self"]],["u"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,N],[11,"to_string","","",69,[[["self"]],["string"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"try_into","","",69,[[["self"]],["result"]]],[11,"get_type_id","","",69,[[["self"]],["typeid"]]],[11,"into_collection","","",69,[[["self"]],["smallvec"]]],[11,"mapped","","",69,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",69,[[["self"]],["result",["parseerr"]]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[["self"]],["u"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,N],[11,"to_string","","",70,[[["self"]],["string"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"try_into","","",70,[[["self"]],["result"]]],[11,"get_type_id","","",70,[[["self"]],["typeid"]]],[11,"into_collection","","",70,[[["self"]],["smallvec"]]],[11,"mapped","","",70,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",70,[[["self"]],["result",["parseerr"]]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[["self"]],["u"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,N],[11,"to_string","","",71,[[["self"]],["string"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"try_into","","",71,[[["self"]],["result"]]],[11,"get_type_id","","",71,[[["self"]],["typeid"]]],[11,"into_collection","","",71,[[["self"]],["smallvec"]]],[11,"mapped","","",71,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",71,[[["self"]],["result",["parseerr"]]]],[11,"equivalent","","",71,[[["self"],["k"]],["bool"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[["self"]],["u"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,N],[11,"to_string","","",72,[[["self"]],["string"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"try_into","","",72,[[["self"]],["result"]]],[11,"get_type_id","","",72,[[["self"]],["typeid"]]],[11,"into_collection","","",72,[[["self"]],["smallvec"]]],[11,"mapped","","",72,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",72,[[["self"]],["result",["parseerr"]]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[["self"]],["u"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,N],[11,"to_string","","",73,[[["self"]],["string"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"try_into","","",73,[[["self"]],["result"]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"into_collection","","",73,[[["self"]],["smallvec"]]],[11,"mapped","","",73,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",73,[[["self"]],["result",["parseerr"]]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[["self"]],["u"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,N],[11,"to_string","","",74,[[["self"]],["string"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"try_into","","",74,[[["self"]],["result"]]],[11,"get_type_id","","",74,[[["self"]],["typeid"]]],[11,"into_collection","","",74,[[["self"]],["smallvec"]]],[11,"mapped","","",74,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",74,[[["self"]],["result",["parseerr"]]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[["self"]],["u"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,N],[11,"to_string","","",75,[[["self"]],["string"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"try_into","","",75,[[["self"]],["result"]]],[11,"get_type_id","","",75,[[["self"]],["typeid"]]],[11,"into_collection","","",75,[[["self"]],["smallvec"]]],[11,"mapped","","",75,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",75,[[["self"]],["result",["parseerr"]]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[["self"]],["u"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,N],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"try_into","","",76,[[["self"]],["result"]]],[11,"get_type_id","","",76,[[["self"]],["typeid"]]],[11,"into_collection","","",76,[[["self"]],["smallvec"]]],[11,"mapped","","",76,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",76,[[["self"]],["result",["parseerr"]]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[["self"]],["u"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,N],[11,"to_string","","",77,[[["self"]],["string"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"try_into","","",77,[[["self"]],["result"]]],[11,"get_type_id","","",77,[[["self"]],["typeid"]]],[11,"into_collection","","",77,[[["self"]],["smallvec"]]],[11,"mapped","","",77,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",77,[[["self"]],["result",["parseerr"]]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[["self"]],["u"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,N],[11,"to_string","","",78,[[["self"]],["string"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"try_into","","",78,[[["self"]],["result"]]],[11,"get_type_id","","",78,[[["self"]],["typeid"]]],[11,"into_collection","","",78,[[["self"]],["smallvec"]]],[11,"mapped","","",78,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",78,[[["self"]],["result",["parseerr"]]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[["self"]],["u"]]],[11,"to_owned","","",79,[[["self"]],["t"]]],[11,"clone_into","","",79,N],[11,"to_string","","",79,[[["self"]],["string"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"try_into","","",79,[[["self"]],["result"]]],[11,"get_type_id","","",79,[[["self"]],["typeid"]]],[11,"into_collection","","",79,[[["self"]],["smallvec"]]],[11,"mapped","","",79,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",79,[[["self"]],["result",["parseerr"]]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[["self"]],["u"]]],[11,"to_owned","","",80,[[["self"]],["t"]]],[11,"clone_into","","",80,N],[11,"to_string","","",80,[[["self"]],["string"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"try_into","","",80,[[["self"]],["result"]]],[11,"get_type_id","","",80,[[["self"]],["typeid"]]],[11,"into_collection","","",80,[[["self"]],["smallvec"]]],[11,"mapped","","",80,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",80,[[["self"]],["result",["parseerr"]]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[["self"]],["u"]]],[11,"to_owned","","",81,[[["self"]],["t"]]],[11,"clone_into","","",81,N],[11,"to_string","","",81,[[["self"]],["string"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"try_into","","",81,[[["self"]],["result"]]],[11,"get_type_id","","",81,[[["self"]],["typeid"]]],[11,"into_collection","","",81,[[["self"]],["smallvec"]]],[11,"mapped","","",81,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",81,[[["self"]],["result",["parseerr"]]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[["self"]],["u"]]],[11,"to_owned","","",82,[[["self"]],["t"]]],[11,"clone_into","","",82,N],[11,"to_string","","",82,[[["self"]],["string"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"try_into","","",82,[[["self"]],["result"]]],[11,"get_type_id","","",82,[[["self"]],["typeid"]]],[11,"into_collection","","",82,[[["self"]],["smallvec"]]],[11,"mapped","","",82,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",82,[[["self"]],["result",["parseerr"]]]],[11,"from","","",170,[[["t"]],["t"]]],[11,"into","","",170,[[["self"]],["u"]]],[11,"to_owned","","",170,[[["self"]],["t"]]],[11,"clone_into","","",170,N],[11,"to_string","","",170,[[["self"]],["string"]]],[11,"try_from","","",170,[[["u"]],["result"]]],[11,"borrow","","",170,[[["self"]],["t"]]],[11,"borrow_mut","","",170,[[["self"]],["t"]]],[11,"try_into","","",170,[[["self"]],["result"]]],[11,"get_type_id","","",170,[[["self"]],["typeid"]]],[11,"into_collection","","",170,[[["self"]],["smallvec"]]],[11,"mapped","","",170,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",170,[[["self"]],["result",["parseerr"]]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[["self"]],["u"]]],[11,"to_owned","","",83,[[["self"]],["t"]]],[11,"clone_into","","",83,N],[11,"to_string","","",83,[[["self"]],["string"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"try_into","","",83,[[["self"]],["result"]]],[11,"get_type_id","","",83,[[["self"]],["typeid"]]],[11,"into_collection","","",83,[[["self"]],["smallvec"]]],[11,"mapped","","",83,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",83,[[["self"]],["result",["parseerr"]]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[["self"]],["u"]]],[11,"to_owned","","",84,[[["self"]],["t"]]],[11,"clone_into","","",84,N],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"try_into","","",84,[[["self"]],["result"]]],[11,"get_type_id","","",84,[[["self"]],["typeid"]]],[11,"into_collection","","",84,[[["self"]],["smallvec"]]],[11,"mapped","","",84,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",84,[[["self"]],["result",["parseerr"]]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[["self"]],["u"]]],[11,"to_owned","","",85,[[["self"]],["t"]]],[11,"clone_into","","",85,N],[11,"to_string","","",85,[[["self"]],["string"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"try_into","","",85,[[["self"]],["result"]]],[11,"get_type_id","","",85,[[["self"]],["typeid"]]],[11,"into_collection","","",85,[[["self"]],["smallvec"]]],[11,"mapped","","",85,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",85,[[["self"]],["result",["parseerr"]]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[["self"]],["u"]]],[11,"to_owned","","",86,[[["self"]],["t"]]],[11,"clone_into","","",86,N],[11,"to_string","","",86,[[["self"]],["string"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"try_into","","",86,[[["self"]],["result"]]],[11,"get_type_id","","",86,[[["self"]],["typeid"]]],[11,"into_collection","","",86,[[["self"]],["smallvec"]]],[11,"mapped","","",86,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",86,[[["self"]],["result",["parseerr"]]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[["self"]],["u"]]],[11,"to_owned","","",87,[[["self"]],["t"]]],[11,"clone_into","","",87,N],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"try_into","","",87,[[["self"]],["result"]]],[11,"get_type_id","","",87,[[["self"]],["typeid"]]],[11,"into_collection","","",87,[[["self"]],["smallvec"]]],[11,"mapped","","",87,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",87,[[["self"]],["result",["parseerr"]]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"into","","",88,[[["self"]],["u"]]],[11,"to_owned","","",88,[[["self"]],["t"]]],[11,"clone_into","","",88,N],[11,"to_string","","",88,[[["self"]],["string"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"try_into","","",88,[[["self"]],["result"]]],[11,"get_type_id","","",88,[[["self"]],["typeid"]]],[11,"into_collection","","",88,[[["self"]],["smallvec"]]],[11,"mapped","","",88,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",88,[[["self"]],["result",["parseerr"]]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"into","","",89,[[["self"]],["u"]]],[11,"to_owned","","",89,[[["self"]],["t"]]],[11,"clone_into","","",89,N],[11,"to_string","","",89,[[["self"]],["string"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"try_into","","",89,[[["self"]],["result"]]],[11,"get_type_id","","",89,[[["self"]],["typeid"]]],[11,"into_collection","","",89,[[["self"]],["smallvec"]]],[11,"mapped","","",89,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",89,[[["self"]],["result",["parseerr"]]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[["self"]],["u"]]],[11,"to_owned","","",90,[[["self"]],["t"]]],[11,"clone_into","","",90,N],[11,"to_string","","",90,[[["self"]],["string"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"try_into","","",90,[[["self"]],["result"]]],[11,"get_type_id","","",90,[[["self"]],["typeid"]]],[11,"into_collection","","",90,[[["self"]],["smallvec"]]],[11,"mapped","","",90,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",90,[[["self"]],["result",["parseerr"]]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"into","","",91,[[["self"]],["u"]]],[11,"to_owned","","",91,[[["self"]],["t"]]],[11,"clone_into","","",91,N],[11,"to_string","","",91,[[["self"]],["string"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"try_into","","",91,[[["self"]],["result"]]],[11,"get_type_id","","",91,[[["self"]],["typeid"]]],[11,"into_collection","","",91,[[["self"]],["smallvec"]]],[11,"mapped","","",91,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",91,[[["self"]],["result",["parseerr"]]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"into","","",92,[[["self"]],["u"]]],[11,"to_owned","","",92,[[["self"]],["t"]]],[11,"clone_into","","",92,N],[11,"to_string","","",92,[[["self"]],["string"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"try_into","","",92,[[["self"]],["result"]]],[11,"get_type_id","","",92,[[["self"]],["typeid"]]],[11,"into_collection","","",92,[[["self"]],["smallvec"]]],[11,"mapped","","",92,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",92,[[["self"]],["result",["parseerr"]]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"into","","",93,[[["self"]],["u"]]],[11,"to_owned","","",93,[[["self"]],["t"]]],[11,"clone_into","","",93,N],[11,"to_string","","",93,[[["self"]],["string"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"try_into","","",93,[[["self"]],["result"]]],[11,"get_type_id","","",93,[[["self"]],["typeid"]]],[11,"into_collection","","",93,[[["self"]],["smallvec"]]],[11,"mapped","","",93,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",93,[[["self"]],["result",["parseerr"]]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"into","","",94,[[["self"]],["u"]]],[11,"to_owned","","",94,[[["self"]],["t"]]],[11,"clone_into","","",94,N],[11,"to_string","","",94,[[["self"]],["string"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"try_into","","",94,[[["self"]],["result"]]],[11,"get_type_id","","",94,[[["self"]],["typeid"]]],[11,"into_collection","","",94,[[["self"]],["smallvec"]]],[11,"mapped","","",94,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",94,[[["self"]],["result",["parseerr"]]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"into","","",95,[[["self"]],["u"]]],[11,"to_owned","","",95,[[["self"]],["t"]]],[11,"clone_into","","",95,N],[11,"to_string","","",95,[[["self"]],["string"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"try_into","","",95,[[["self"]],["result"]]],[11,"get_type_id","","",95,[[["self"]],["typeid"]]],[11,"into_collection","","",95,[[["self"]],["smallvec"]]],[11,"mapped","","",95,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",95,[[["self"]],["result",["parseerr"]]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"into","","",96,[[["self"]],["u"]]],[11,"to_owned","","",96,[[["self"]],["t"]]],[11,"clone_into","","",96,N],[11,"to_string","","",96,[[["self"]],["string"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"try_into","","",96,[[["self"]],["result"]]],[11,"get_type_id","","",96,[[["self"]],["typeid"]]],[11,"into_collection","","",96,[[["self"]],["smallvec"]]],[11,"mapped","","",96,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",96,[[["self"]],["result",["parseerr"]]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"into","","",97,[[["self"]],["u"]]],[11,"to_owned","","",97,[[["self"]],["t"]]],[11,"clone_into","","",97,N],[11,"to_string","","",97,[[["self"]],["string"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"try_into","","",97,[[["self"]],["result"]]],[11,"get_type_id","","",97,[[["self"]],["typeid"]]],[11,"into_collection","","",97,[[["self"]],["smallvec"]]],[11,"mapped","","",97,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",97,[[["self"]],["result",["parseerr"]]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"into","","",98,[[["self"]],["u"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,N],[11,"to_string","","",98,[[["self"]],["string"]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"try_into","","",98,[[["self"]],["result"]]],[11,"get_type_id","","",98,[[["self"]],["typeid"]]],[11,"into_collection","","",98,[[["self"]],["smallvec"]]],[11,"mapped","","",98,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",98,[[["self"]],["result",["parseerr"]]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"into","","",99,[[["self"]],["u"]]],[11,"to_owned","","",99,[[["self"]],["t"]]],[11,"clone_into","","",99,N],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"try_into","","",99,[[["self"]],["result"]]],[11,"get_type_id","","",99,[[["self"]],["typeid"]]],[11,"into_collection","","",99,[[["self"]],["smallvec"]]],[11,"mapped","","",99,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",99,[[["self"]],["result",["parseerr"]]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"into","","",100,[[["self"]],["u"]]],[11,"to_owned","","",100,[[["self"]],["t"]]],[11,"clone_into","","",100,N],[11,"to_string","","",100,[[["self"]],["string"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"try_into","","",100,[[["self"]],["result"]]],[11,"get_type_id","","",100,[[["self"]],["typeid"]]],[11,"into_collection","","",100,[[["self"]],["smallvec"]]],[11,"mapped","","",100,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",100,[[["self"]],["result",["parseerr"]]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"into","","",101,[[["self"]],["u"]]],[11,"to_owned","","",101,[[["self"]],["t"]]],[11,"clone_into","","",101,N],[11,"to_string","","",101,[[["self"]],["string"]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"try_into","","",101,[[["self"]],["result"]]],[11,"get_type_id","","",101,[[["self"]],["typeid"]]],[11,"into_collection","","",101,[[["self"]],["smallvec"]]],[11,"mapped","","",101,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",101,[[["self"]],["result",["parseerr"]]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"into","","",102,[[["self"]],["u"]]],[11,"to_owned","","",102,[[["self"]],["t"]]],[11,"clone_into","","",102,N],[11,"to_string","","",102,[[["self"]],["string"]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"try_into","","",102,[[["self"]],["result"]]],[11,"get_type_id","","",102,[[["self"]],["typeid"]]],[11,"into_collection","","",102,[[["self"]],["smallvec"]]],[11,"mapped","","",102,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",102,[[["self"]],["result",["parseerr"]]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"into","","",103,[[["self"]],["u"]]],[11,"to_owned","","",103,[[["self"]],["t"]]],[11,"clone_into","","",103,N],[11,"to_string","","",103,[[["self"]],["string"]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"try_into","","",103,[[["self"]],["result"]]],[11,"get_type_id","","",103,[[["self"]],["typeid"]]],[11,"into_collection","","",103,[[["self"]],["smallvec"]]],[11,"mapped","","",103,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",103,[[["self"]],["result",["parseerr"]]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"into","","",104,[[["self"]],["u"]]],[11,"to_owned","","",104,[[["self"]],["t"]]],[11,"clone_into","","",104,N],[11,"to_string","","",104,[[["self"]],["string"]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"try_into","","",104,[[["self"]],["result"]]],[11,"get_type_id","","",104,[[["self"]],["typeid"]]],[11,"into_collection","","",104,[[["self"]],["smallvec"]]],[11,"mapped","","",104,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",104,[[["self"]],["result",["parseerr"]]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"into","","",105,[[["self"]],["u"]]],[11,"to_owned","","",105,[[["self"]],["t"]]],[11,"clone_into","","",105,N],[11,"to_string","","",105,[[["self"]],["string"]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"try_into","","",105,[[["self"]],["result"]]],[11,"get_type_id","","",105,[[["self"]],["typeid"]]],[11,"into_collection","","",105,[[["self"]],["smallvec"]]],[11,"mapped","","",105,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",105,[[["self"]],["result",["parseerr"]]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"into","","",106,[[["self"]],["u"]]],[11,"to_owned","","",106,[[["self"]],["t"]]],[11,"clone_into","","",106,N],[11,"to_string","","",106,[[["self"]],["string"]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"try_into","","",106,[[["self"]],["result"]]],[11,"get_type_id","","",106,[[["self"]],["typeid"]]],[11,"into_collection","","",106,[[["self"]],["smallvec"]]],[11,"mapped","","",106,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",106,[[["self"]],["result",["parseerr"]]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"into","","",107,[[["self"]],["u"]]],[11,"to_owned","","",107,[[["self"]],["t"]]],[11,"clone_into","","",107,N],[11,"to_string","","",107,[[["self"]],["string"]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"try_into","","",107,[[["self"]],["result"]]],[11,"get_type_id","","",107,[[["self"]],["typeid"]]],[11,"into_collection","","",107,[[["self"]],["smallvec"]]],[11,"mapped","","",107,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",107,[[["self"]],["result",["parseerr"]]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"into","","",108,[[["self"]],["u"]]],[11,"to_owned","","",108,[[["self"]],["t"]]],[11,"clone_into","","",108,N],[11,"to_string","","",108,[[["self"]],["string"]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"try_into","","",108,[[["self"]],["result"]]],[11,"get_type_id","","",108,[[["self"]],["typeid"]]],[11,"into_collection","","",108,[[["self"]],["smallvec"]]],[11,"mapped","","",108,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",108,[[["self"]],["result",["parseerr"]]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"into","","",109,[[["self"]],["u"]]],[11,"to_owned","","",109,[[["self"]],["t"]]],[11,"clone_into","","",109,N],[11,"to_string","","",109,[[["self"]],["string"]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"try_into","","",109,[[["self"]],["result"]]],[11,"get_type_id","","",109,[[["self"]],["typeid"]]],[11,"into_collection","","",109,[[["self"]],["smallvec"]]],[11,"mapped","","",109,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",109,[[["self"]],["result",["parseerr"]]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"into","","",110,[[["self"]],["u"]]],[11,"to_owned","","",110,[[["self"]],["t"]]],[11,"clone_into","","",110,N],[11,"to_string","","",110,[[["self"]],["string"]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"try_into","","",110,[[["self"]],["result"]]],[11,"get_type_id","","",110,[[["self"]],["typeid"]]],[11,"into_collection","","",110,[[["self"]],["smallvec"]]],[11,"mapped","","",110,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",110,[[["self"]],["result",["parseerr"]]]],[11,"equivalent","","",110,[[["self"],["k"]],["bool"]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"into","","",111,[[["self"]],["u"]]],[11,"to_owned","","",111,[[["self"]],["t"]]],[11,"clone_into","","",111,N],[11,"to_string","","",111,[[["self"]],["string"]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"try_into","","",111,[[["self"]],["result"]]],[11,"get_type_id","","",111,[[["self"]],["typeid"]]],[11,"into_collection","","",111,[[["self"]],["smallvec"]]],[11,"mapped","","",111,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",111,[[["self"]],["result",["parseerr"]]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"into","","",112,[[["self"]],["u"]]],[11,"to_owned","","",112,[[["self"]],["t"]]],[11,"clone_into","","",112,N],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"try_into","","",112,[[["self"]],["result"]]],[11,"get_type_id","","",112,[[["self"]],["typeid"]]],[11,"into_collection","","",112,[[["self"]],["smallvec"]]],[11,"mapped","","",112,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",112,[[["self"]],["result",["parseerr"]]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"into","","",113,[[["self"]],["u"]]],[11,"to_owned","","",113,[[["self"]],["t"]]],[11,"clone_into","","",113,N],[11,"to_string","","",113,[[["self"]],["string"]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"try_into","","",113,[[["self"]],["result"]]],[11,"get_type_id","","",113,[[["self"]],["typeid"]]],[11,"into_collection","","",113,[[["self"]],["smallvec"]]],[11,"mapped","","",113,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",113,[[["self"]],["result",["parseerr"]]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"into","","",114,[[["self"]],["u"]]],[11,"to_owned","","",114,[[["self"]],["t"]]],[11,"clone_into","","",114,N],[11,"to_string","","",114,[[["self"]],["string"]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"try_into","","",114,[[["self"]],["result"]]],[11,"get_type_id","","",114,[[["self"]],["typeid"]]],[11,"into_collection","","",114,[[["self"]],["smallvec"]]],[11,"mapped","","",114,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",114,[[["self"]],["result",["parseerr"]]]],[11,"from","","",115,[[["t"]],["t"]]],[11,"into","","",115,[[["self"]],["u"]]],[11,"to_owned","","",115,[[["self"]],["t"]]],[11,"clone_into","","",115,N],[11,"to_string","","",115,[[["self"]],["string"]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"try_into","","",115,[[["self"]],["result"]]],[11,"get_type_id","","",115,[[["self"]],["typeid"]]],[11,"into_collection","","",115,[[["self"]],["smallvec"]]],[11,"mapped","","",115,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",115,[[["self"]],["result",["parseerr"]]]],[11,"from","","",116,[[["t"]],["t"]]],[11,"into","","",116,[[["self"]],["u"]]],[11,"to_owned","","",116,[[["self"]],["t"]]],[11,"clone_into","","",116,N],[11,"to_string","","",116,[[["self"]],["string"]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"try_into","","",116,[[["self"]],["result"]]],[11,"get_type_id","","",116,[[["self"]],["typeid"]]],[11,"into_collection","","",116,[[["self"]],["smallvec"]]],[11,"mapped","","",116,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",116,[[["self"]],["result",["parseerr"]]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"into","","",117,[[["self"]],["u"]]],[11,"to_owned","","",117,[[["self"]],["t"]]],[11,"clone_into","","",117,N],[11,"to_string","","",117,[[["self"]],["string"]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"try_into","","",117,[[["self"]],["result"]]],[11,"get_type_id","","",117,[[["self"]],["typeid"]]],[11,"into_collection","","",117,[[["self"]],["smallvec"]]],[11,"mapped","","",117,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",117,[[["self"]],["result",["parseerr"]]]],[11,"from","","",118,[[["t"]],["t"]]],[11,"into","","",118,[[["self"]],["u"]]],[11,"to_owned","","",118,[[["self"]],["t"]]],[11,"clone_into","","",118,N],[11,"to_string","","",118,[[["self"]],["string"]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"try_into","","",118,[[["self"]],["result"]]],[11,"get_type_id","","",118,[[["self"]],["typeid"]]],[11,"into_collection","","",118,[[["self"]],["smallvec"]]],[11,"mapped","","",118,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",118,[[["self"]],["result",["parseerr"]]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"into","","",119,[[["self"]],["u"]]],[11,"to_owned","","",119,[[["self"]],["t"]]],[11,"clone_into","","",119,N],[11,"to_string","","",119,[[["self"]],["string"]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"try_into","","",119,[[["self"]],["result"]]],[11,"get_type_id","","",119,[[["self"]],["typeid"]]],[11,"into_collection","","",119,[[["self"]],["smallvec"]]],[11,"mapped","","",119,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",119,[[["self"]],["result",["parseerr"]]]],[11,"equivalent","","",119,[[["self"],["k"]],["bool"]]],[11,"from","","",120,[[["t"]],["t"]]],[11,"into","","",120,[[["self"]],["u"]]],[11,"to_owned","","",120,[[["self"]],["t"]]],[11,"clone_into","","",120,N],[11,"to_string","","",120,[[["self"]],["string"]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"try_into","","",120,[[["self"]],["result"]]],[11,"get_type_id","","",120,[[["self"]],["typeid"]]],[11,"into_collection","","",120,[[["self"]],["smallvec"]]],[11,"mapped","","",120,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",120,[[["self"]],["result",["parseerr"]]]],[11,"from","","",121,[[["t"]],["t"]]],[11,"into","","",121,[[["self"]],["u"]]],[11,"to_owned","","",121,[[["self"]],["t"]]],[11,"clone_into","","",121,N],[11,"to_string","","",121,[[["self"]],["string"]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"try_into","","",121,[[["self"]],["result"]]],[11,"get_type_id","","",121,[[["self"]],["typeid"]]],[11,"into_collection","","",121,[[["self"]],["smallvec"]]],[11,"mapped","","",121,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",121,[[["self"]],["result",["parseerr"]]]],[11,"from","","",171,[[["t"]],["t"]]],[11,"into","","",171,[[["self"]],["u"]]],[11,"to_owned","","",171,[[["self"]],["t"]]],[11,"clone_into","","",171,N],[11,"to_string","","",171,[[["self"]],["string"]]],[11,"try_from","","",171,[[["u"]],["result"]]],[11,"borrow","","",171,[[["self"]],["t"]]],[11,"borrow_mut","","",171,[[["self"]],["t"]]],[11,"try_into","","",171,[[["self"]],["result"]]],[11,"get_type_id","","",171,[[["self"]],["typeid"]]],[11,"into_collection","","",171,[[["self"]],["smallvec"]]],[11,"mapped","","",171,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",171,[[["self"]],["result",["parseerr"]]]],[11,"from","","",122,[[["t"]],["t"]]],[11,"into","","",122,[[["self"]],["u"]]],[11,"to_owned","","",122,[[["self"]],["t"]]],[11,"clone_into","","",122,N],[11,"to_string","","",122,[[["self"]],["string"]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"try_into","","",122,[[["self"]],["result"]]],[11,"get_type_id","","",122,[[["self"]],["typeid"]]],[11,"into_collection","","",122,[[["self"]],["smallvec"]]],[11,"mapped","","",122,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",122,[[["self"]],["result",["parseerr"]]]],[11,"from","","",123,[[["t"]],["t"]]],[11,"into","","",123,[[["self"]],["u"]]],[11,"to_owned","","",123,[[["self"]],["t"]]],[11,"clone_into","","",123,N],[11,"to_string","","",123,[[["self"]],["string"]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"try_into","","",123,[[["self"]],["result"]]],[11,"get_type_id","","",123,[[["self"]],["typeid"]]],[11,"into_collection","","",123,[[["self"]],["smallvec"]]],[11,"mapped","","",123,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",123,[[["self"]],["result",["parseerr"]]]],[11,"from","","",124,[[["t"]],["t"]]],[11,"into","","",124,[[["self"]],["u"]]],[11,"to_owned","","",124,[[["self"]],["t"]]],[11,"clone_into","","",124,N],[11,"to_string","","",124,[[["self"]],["string"]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"try_into","","",124,[[["self"]],["result"]]],[11,"get_type_id","","",124,[[["self"]],["typeid"]]],[11,"into_collection","","",124,[[["self"]],["smallvec"]]],[11,"mapped","","",124,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",124,[[["self"]],["result",["parseerr"]]]],[11,"equivalent","","",124,[[["self"],["k"]],["bool"]]],[11,"from","","",125,[[["t"]],["t"]]],[11,"into","","",125,[[["self"]],["u"]]],[11,"to_owned","","",125,[[["self"]],["t"]]],[11,"clone_into","","",125,N],[11,"to_string","","",125,[[["self"]],["string"]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"try_into","","",125,[[["self"]],["result"]]],[11,"get_type_id","","",125,[[["self"]],["typeid"]]],[11,"into_collection","","",125,[[["self"]],["smallvec"]]],[11,"mapped","","",125,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",125,[[["self"]],["result",["parseerr"]]]],[11,"equivalent","","",125,[[["self"],["k"]],["bool"]]],[11,"from","","",126,[[["t"]],["t"]]],[11,"into","","",126,[[["self"]],["u"]]],[11,"to_owned","","",126,[[["self"]],["t"]]],[11,"clone_into","","",126,N],[11,"to_string","","",126,[[["self"]],["string"]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"try_into","","",126,[[["self"]],["result"]]],[11,"get_type_id","","",126,[[["self"]],["typeid"]]],[11,"into_collection","","",126,[[["self"]],["smallvec"]]],[11,"mapped","","",126,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",126,[[["self"]],["result",["parseerr"]]]],[11,"from","","",127,[[["t"]],["t"]]],[11,"into","","",127,[[["self"]],["u"]]],[11,"to_owned","","",127,[[["self"]],["t"]]],[11,"clone_into","","",127,N],[11,"to_string","","",127,[[["self"]],["string"]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"try_into","","",127,[[["self"]],["result"]]],[11,"get_type_id","","",127,[[["self"]],["typeid"]]],[11,"into_collection","","",127,[[["self"]],["smallvec"]]],[11,"mapped","","",127,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",127,[[["self"]],["result",["parseerr"]]]],[11,"from","rocket::http::hyper::h1","",172,[[["t"]],["t"]]],[11,"into","","",172,[[["self"]],["u"]]],[11,"try_from","","",172,[[["u"]],["result"]]],[11,"borrow","","",172,[[["self"]],["t"]]],[11,"borrow_mut","","",172,[[["self"]],["t"]]],[11,"try_into","","",172,[[["self"]],["result"]]],[11,"get_type_id","","",172,[[["self"]],["typeid"]]],[11,"into_collection","","",172,[[["self"]],["smallvec"]]],[11,"mapped","","",172,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",172,[[["self"]],["result",["parseerr"]]]],[11,"from","","",173,[[["t"]],["t"]]],[11,"into","","",173,[[["self"]],["u"]]],[11,"try_from","","",173,[[["u"]],["result"]]],[11,"borrow","","",173,[[["self"]],["t"]]],[11,"borrow_mut","","",173,[[["self"]],["t"]]],[11,"try_into","","",173,[[["self"]],["result"]]],[11,"get_type_id","","",173,[[["self"]],["typeid"]]],[11,"into_collection","","",173,[[["self"]],["smallvec"]]],[11,"mapped","","",173,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",173,[[["self"]],["result",["parseerr"]]]],[11,"from","","",128,[[["t"]],["t"]]],[11,"into","","",128,[[["self"]],["u"]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"try_into","","",128,[[["self"]],["result"]]],[11,"get_type_id","","",128,[[["self"]],["typeid"]]],[11,"into_collection","","",128,[[["self"]],["smallvec"]]],[11,"mapped","","",128,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",128,[[["self"]],["result",["parseerr"]]]],[11,"from","","",129,[[["t"]],["t"]]],[11,"into","","",129,[[["self"]],["u"]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"try_into","","",129,[[["self"]],["result"]]],[11,"get_type_id","","",129,[[["self"]],["typeid"]]],[11,"into_collection","","",129,[[["self"]],["smallvec"]]],[11,"mapped","","",129,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",129,[[["self"]],["result",["parseerr"]]]],[11,"from","","",174,[[["t"]],["t"]]],[11,"into","","",174,[[["self"]],["u"]]],[11,"try_from","","",174,[[["u"]],["result"]]],[11,"borrow","","",174,[[["self"]],["t"]]],[11,"borrow_mut","","",174,[[["self"]],["t"]]],[11,"try_into","","",174,[[["self"]],["result"]]],[11,"get_type_id","","",174,[[["self"]],["typeid"]]],[11,"into_collection","","",174,[[["self"]],["smallvec"]]],[11,"mapped","","",174,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",174,[[["self"]],["result",["parseerr"]]]],[11,"from","","",130,[[["t"]],["t"]]],[11,"into","","",130,[[["self"]],["u"]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"try_into","","",130,[[["self"]],["result"]]],[11,"get_type_id","","",130,[[["self"]],["typeid"]]],[11,"into_collection","","",130,[[["self"]],["smallvec"]]],[11,"mapped","","",130,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",130,[[["self"]],["result",["parseerr"]]]],[11,"from","rocket::http::hyper::mime","",131,[[["t"]],["t"]]],[11,"into","","",131,[[["self"]],["u"]]],[11,"to_owned","","",131,[[["self"]],["t"]]],[11,"clone_into","","",131,N],[11,"to_string","","",131,[[["self"]],["string"]]],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"try_into","","",131,[[["self"]],["result"]]],[11,"get_type_id","","",131,[[["self"]],["typeid"]]],[11,"into_collection","","",131,[[["self"]],["smallvec"]]],[11,"mapped","","",131,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",131,[[["self"]],["result",["parseerr"]]]],[11,"equivalent","","",131,[[["self"],["k"]],["bool"]]],[11,"from","","",132,[[["t"]],["t"]]],[11,"into","","",132,[[["self"]],["u"]]],[11,"to_owned","","",132,[[["self"]],["t"]]],[11,"clone_into","","",132,N],[11,"to_string","","",132,[[["self"]],["string"]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"try_into","","",132,[[["self"]],["result"]]],[11,"get_type_id","","",132,[[["self"]],["typeid"]]],[11,"into_collection","","",132,[[["self"]],["smallvec"]]],[11,"mapped","","",132,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",132,[[["self"]],["result",["parseerr"]]]],[11,"equivalent","","",132,[[["self"],["k"]],["bool"]]],[11,"from","","",133,[[["t"]],["t"]]],[11,"into","","",133,[[["self"]],["u"]]],[11,"to_owned","","",133,[[["self"]],["t"]]],[11,"clone_into","","",133,N],[11,"to_string","","",133,[[["self"]],["string"]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"try_into","","",133,[[["self"]],["result"]]],[11,"get_type_id","","",133,[[["self"]],["typeid"]]],[11,"into_collection","","",133,[[["self"]],["smallvec"]]],[11,"mapped","","",133,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",133,[[["self"]],["result",["parseerr"]]]],[11,"equivalent","","",133,[[["self"],["k"]],["bool"]]],[11,"from","","",134,[[["t"]],["t"]]],[11,"into","","",134,[[["self"]],["u"]]],[11,"to_owned","","",134,[[["self"]],["t"]]],[11,"clone_into","","",134,N],[11,"to_string","","",134,[[["self"]],["string"]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"try_into","","",134,[[["self"]],["result"]]],[11,"get_type_id","","",134,[[["self"]],["typeid"]]],[11,"into_collection","","",134,[[["self"]],["smallvec"]]],[11,"mapped","","",134,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",134,[[["self"]],["result",["parseerr"]]]],[11,"equivalent","","",134,[[["self"],["k"]],["bool"]]],[11,"from","","",135,[[["t"]],["t"]]],[11,"into","","",135,[[["self"]],["u"]]],[11,"to_owned","","",135,[[["self"]],["t"]]],[11,"clone_into","","",135,N],[11,"to_string","","",135,[[["self"]],["string"]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"try_into","","",135,[[["self"]],["result"]]],[11,"get_type_id","","",135,[[["self"]],["typeid"]]],[11,"into_collection","","",135,[[["self"]],["smallvec"]]],[11,"mapped","","",135,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",135,[[["self"]],["result",["parseerr"]]]],[11,"equivalent","","",135,[[["self"],["k"]],["bool"]]],[11,"from","rocket::http::hyper","",136,[[["t"]],["t"]]],[11,"into","","",136,[[["self"]],["u"]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"try_into","","",136,[[["self"]],["result"]]],[11,"get_type_id","","",136,[[["self"]],["typeid"]]],[11,"into_collection","","",136,[[["self"]],["smallvec"]]],[11,"mapped","","",136,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",136,[[["self"]],["result",["parseerr"]]]],[11,"from","","",137,[[["t"]],["t"]]],[11,"into","","",137,[[["self"]],["u"]]],[11,"to_owned","","",137,[[["self"]],["t"]]],[11,"clone_into","","",137,N],[11,"to_string","","",137,[[["self"]],["string"]]],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"try_into","","",137,[[["self"]],["result"]]],[11,"get_type_id","","",137,[[["self"]],["typeid"]]],[11,"into_collection","","",137,[[["self"]],["smallvec"]]],[11,"mapped","","",137,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",137,[[["self"]],["result",["parseerr"]]]],[11,"equivalent","","",137,[[["self"],["k"]],["bool"]]],[11,"from","","",138,[[["t"]],["t"]]],[11,"into","","",138,[[["self"]],["u"]]],[11,"to_string","","",138,[[["self"]],["string"]]],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"try_into","","",138,[[["self"]],["result"]]],[11,"get_type_id","","",138,[[["self"]],["typeid"]]],[11,"into_collection","","",138,[[["self"]],["smallvec"]]],[11,"mapped","","",138,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",138,[[["self"]],["result",["parseerr"]]]],[11,"from","rocket::http::hyper::net","",175,[[["t"]],["t"]]],[11,"into","","",175,[[["self"]],["u"]]],[11,"try_from","","",175,[[["u"]],["result"]]],[11,"borrow","","",175,[[["self"]],["t"]]],[11,"borrow_mut","","",175,[[["self"]],["t"]]],[11,"try_into","","",175,[[["self"]],["result"]]],[11,"get_type_id","","",175,[[["self"]],["typeid"]]],[11,"into_collection","","",175,[[["self"]],["smallvec"]]],[11,"mapped","","",175,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",175,[[["self"]],["result",["parseerr"]]]],[11,"from","","",176,[[["t"]],["t"]]],[11,"into","","",176,[[["self"]],["u"]]],[11,"try_from","","",176,[[["u"]],["result"]]],[11,"borrow","","",176,[[["self"]],["t"]]],[11,"borrow_mut","","",176,[[["self"]],["t"]]],[11,"try_into","","",176,[[["self"]],["result"]]],[11,"get_type_id","","",176,[[["self"]],["typeid"]]],[11,"into_collection","","",176,[[["self"]],["smallvec"]]],[11,"mapped","","",176,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",176,[[["self"]],["result",["parseerr"]]]],[11,"from","","",177,[[["t"]],["t"]]],[11,"into_iter","","",177,[[["self"]],["i"]]],[11,"into","","",177,[[["self"]],["u"]]],[11,"try_from","","",177,[[["u"]],["result"]]],[11,"borrow","","",177,[[["self"]],["t"]]],[11,"borrow_mut","","",177,[[["self"]],["t"]]],[11,"try_into","","",177,[[["self"]],["result"]]],[11,"get_type_id","","",177,[[["self"]],["typeid"]]],[11,"into_collection","","",177,[[["self"]],["smallvec"]]],[11,"mapped","","",177,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",177,[[["self"]],["result",["parseerr"]]]],[11,"from","","",178,[[["t"]],["t"]]],[11,"into","","",178,[[["self"]],["u"]]],[11,"to_owned","","",178,[[["self"]],["t"]]],[11,"clone_into","","",178,N],[11,"try_from","","",178,[[["u"]],["result"]]],[11,"borrow","","",178,[[["self"]],["t"]]],[11,"borrow_mut","","",178,[[["self"]],["t"]]],[11,"try_into","","",178,[[["self"]],["result"]]],[11,"get_type_id","","",178,[[["self"]],["typeid"]]],[11,"into_collection","","",178,[[["self"]],["smallvec"]]],[11,"mapped","","",178,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",178,[[["self"]],["result",["parseerr"]]]],[11,"from","","",143,[[["t"]],["t"]]],[11,"into","","",143,[[["self"]],["u"]]],[11,"to_owned","","",143,[[["self"]],["t"]]],[11,"clone_into","","",143,N],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"try_into","","",143,[[["self"]],["result"]]],[11,"get_type_id","","",143,[[["self"]],["typeid"]]],[11,"into_collection","","",143,[[["self"]],["smallvec"]]],[11,"mapped","","",143,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",143,[[["self"]],["result",["parseerr"]]]],[11,"from","","",179,[[["t"]],["t"]]],[11,"into","","",179,[[["self"]],["u"]]],[11,"to_owned","","",179,[[["self"]],["t"]]],[11,"clone_into","","",179,N],[11,"try_from","","",179,[[["u"]],["result"]]],[11,"borrow","","",179,[[["self"]],["t"]]],[11,"borrow_mut","","",179,[[["self"]],["t"]]],[11,"try_into","","",179,[[["self"]],["result"]]],[11,"get_type_id","","",179,[[["self"]],["typeid"]]],[11,"connect","","",179,[[["self"],["str"],["u16"],["str"]],["result",["httpstream","error"]]]],[11,"into_collection","","",179,[[["self"]],["smallvec"]]],[11,"mapped","","",179,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",179,[[["self"]],["result",["parseerr"]]]],[11,"from","","",146,[[["t"]],["t"]]],[11,"into","","",146,[[["self"]],["u"]]],[11,"to_owned","","",146,[[["self"]],["t"]]],[11,"clone_into","","",146,N],[11,"try_from","","",146,[[["u"]],["result"]]],[11,"borrow","","",146,[[["self"]],["t"]]],[11,"borrow_mut","","",146,[[["self"]],["t"]]],[11,"try_into","","",146,[[["self"]],["result"]]],[11,"get_type_id","","",146,[[["self"]],["typeid"]]],[11,"into_collection","","",146,[[["self"]],["smallvec"]]],[11,"mapped","","",146,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",146,[[["self"]],["result",["parseerr"]]]],[11,"from","","",180,[[["t"]],["t"]]],[11,"into","","",180,[[["self"]],["u"]]],[11,"to_owned","","",180,[[["self"]],["t"]]],[11,"clone_into","","",180,N],[11,"try_from","","",180,[[["u"]],["result"]]],[11,"borrow","","",180,[[["self"]],["t"]]],[11,"borrow_mut","","",180,[[["self"]],["t"]]],[11,"try_into","","",180,[[["self"]],["result"]]],[11,"get_type_id","","",180,[[["self"]],["typeid"]]],[11,"into_collection","","",180,[[["self"]],["smallvec"]]],[11,"mapped","","",180,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",180,[[["self"]],["result",["parseerr"]]]],[11,"from","","",181,[[["t"]],["t"]]],[11,"into","","",181,[[["self"]],["u"]]],[11,"try_from","","",181,[[["u"]],["result"]]],[11,"borrow","","",181,[[["self"]],["t"]]],[11,"borrow_mut","","",181,[[["self"]],["t"]]],[11,"try_into","","",181,[[["self"]],["result"]]],[11,"get_type_id","","",181,[[["self"]],["typeid"]]],[11,"connect","","",181,[[["self"],["str"],["u16"],["str"]],["result",["httpstream","error"]]]],[11,"into_collection","","",181,[[["self"]],["smallvec"]]],[11,"mapped","","",181,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",181,[[["self"]],["result",["parseerr"]]]],[11,"from","rocket::http::hyper","",147,[[["t"]],["t"]]],[11,"into","","",147,[[["self"]],["u"]]],[11,"to_owned","","",147,[[["self"]],["t"]]],[11,"clone_into","","",147,N],[11,"to_string","","",147,[[["self"]],["string"]]],[11,"try_from","","",147,[[["u"]],["result"]]],[11,"borrow","","",147,[[["self"]],["t"]]],[11,"borrow_mut","","",147,[[["self"]],["t"]]],[11,"try_into","","",147,[[["self"]],["result"]]],[11,"get_type_id","","",147,[[["self"]],["typeid"]]],[11,"into_collection","","",147,[[["self"]],["smallvec"]]],[11,"mapped","","",147,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",147,[[["self"]],["result",["parseerr"]]]],[11,"equivalent","","",147,[[["self"],["k"]],["bool"]]],[11,"from","","",182,[[["t"]],["t"]]],[11,"into","","",182,[[["self"]],["u"]]],[11,"try_from","","",182,[[["u"]],["result"]]],[11,"borrow","","",182,[[["self"]],["t"]]],[11,"borrow_mut","","",182,[[["self"]],["t"]]],[11,"try_into","","",182,[[["self"]],["result"]]],[11,"get_type_id","","",182,[[["self"]],["typeid"]]],[11,"into_collection","","",182,[[["self"]],["smallvec"]]],[11,"mapped","","",182,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",182,[[["self"]],["result",["parseerr"]]]],[11,"from","","",148,[[["t"]],["t"]]],[11,"into","","",148,[[["self"]],["u"]]],[11,"try_from","","",148,[[["u"]],["result"]]],[11,"borrow","","",148,[[["self"]],["t"]]],[11,"borrow_mut","","",148,[[["self"]],["t"]]],[11,"try_into","","",148,[[["self"]],["result"]]],[11,"get_type_id","","",148,[[["self"]],["typeid"]]],[11,"into_collection","","",148,[[["self"]],["smallvec"]]],[11,"mapped","","",148,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",148,[[["self"]],["result",["parseerr"]]]],[11,"from","","",149,[[["t"]],["t"]]],[11,"into","","",149,[[["self"]],["u"]]],[11,"to_owned","","",149,[[["self"]],["t"]]],[11,"clone_into","","",149,N],[11,"to_string","","",149,[[["self"]],["string"]]],[11,"try_from","","",149,[[["u"]],["result"]]],[11,"borrow","","",149,[[["self"]],["t"]]],[11,"borrow_mut","","",149,[[["self"]],["t"]]],[11,"try_into","","",149,[[["self"]],["result"]]],[11,"get_type_id","","",149,[[["self"]],["typeid"]]],[11,"into_collection","","",149,[[["self"]],["smallvec"]]],[11,"mapped","","",149,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",149,[[["self"]],["result",["parseerr"]]]],[11,"from","rocket::http::uri","",183,[[["t"]],["t"]]],[11,"into","","",183,[[["self"]],["u"]]],[11,"try_from","","",183,[[["u"]],["result"]]],[11,"borrow","","",183,[[["self"]],["t"]]],[11,"borrow_mut","","",183,[[["self"]],["t"]]],[11,"try_into","","",183,[[["self"]],["result"]]],[11,"get_type_id","","",183,[[["self"]],["typeid"]]],[11,"into_collection","","",183,[[["self"]],["smallvec"]]],[11,"mapped","","",183,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",183,[[["self"]],["result",["parseerr"]]]],[11,"from","","",184,[[["t"]],["t"]]],[11,"into","","",184,[[["self"]],["u"]]],[11,"try_from","","",184,[[["u"]],["result"]]],[11,"borrow","","",184,[[["self"]],["t"]]],[11,"borrow_mut","","",184,[[["self"]],["t"]]],[11,"try_into","","",184,[[["self"]],["result"]]],[11,"get_type_id","","",184,[[["self"]],["typeid"]]],[11,"into_collection","","",184,[[["self"]],["smallvec"]]],[11,"mapped","","",184,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",184,[[["self"]],["result",["parseerr"]]]],[11,"from","","",185,[[["t"]],["t"]]],[11,"into","","",185,[[["self"]],["u"]]],[11,"to_string","","",185,[[["self"]],["string"]]],[11,"try_from","","",185,[[["u"]],["result"]]],[11,"borrow","","",185,[[["self"]],["t"]]],[11,"borrow_mut","","",185,[[["self"]],["t"]]],[11,"try_into","","",185,[[["self"]],["result"]]],[11,"get_type_id","","",185,[[["self"]],["typeid"]]],[11,"into_collection","","",185,[[["self"]],["smallvec"]]],[11,"mapped","","",185,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",185,[[["self"]],["result",["parseerr"]]]],[11,"from","","",186,[[["t"]],["t"]]],[11,"into","","",186,[[["self"]],["u"]]],[11,"to_owned","","",186,[[["self"]],["t"]]],[11,"clone_into","","",186,N],[11,"to_string","","",186,[[["self"]],["string"]]],[11,"try_from","","",186,[[["u"]],["result"]]],[11,"borrow","","",186,[[["self"]],["t"]]],[11,"borrow_mut","","",186,[[["self"]],["t"]]],[11,"try_into","","",186,[[["self"]],["result"]]],[11,"get_type_id","","",186,[[["self"]],["typeid"]]],[11,"into_collection","","",186,[[["self"]],["smallvec"]]],[11,"mapped","","",186,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",186,[[["self"]],["result",["parseerr"]]]],[11,"from","","",151,[[["t"]],["t"]]],[11,"into_iter","","",151,[[["self"]],["i"]]],[11,"into","","",151,[[["self"]],["u"]]],[11,"to_owned","","",151,[[["self"]],["t"]]],[11,"clone_into","","",151,N],[11,"try_from","","",151,[[["u"]],["result"]]],[11,"borrow","","",151,[[["self"]],["t"]]],[11,"borrow_mut","","",151,[[["self"]],["t"]]],[11,"try_into","","",151,[[["self"]],["result"]]],[11,"get_type_id","","",151,[[["self"]],["typeid"]]],[11,"into_collection","","",151,[[["self"]],["smallvec"]]],[11,"mapped","","",151,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",151,[[["self"]],["result",["parseerr"]]]],[11,"from","","",152,[[["t"]],["t"]]],[11,"into","","",152,[[["self"]],["u"]]],[11,"to_owned","","",152,[[["self"]],["t"]]],[11,"clone_into","","",152,N],[11,"try_from","","",152,[[["u"]],["result"]]],[11,"borrow","","",152,[[["self"]],["t"]]],[11,"borrow_mut","","",152,[[["self"]],["t"]]],[11,"try_into","","",152,[[["self"]],["result"]]],[11,"get_type_id","","",152,[[["self"]],["typeid"]]],[11,"into_collection","","",152,[[["self"]],["smallvec"]]],[11,"mapped","","",152,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",152,[[["self"]],["result",["parseerr"]]]],[11,"equivalent","","",152,[[["self"],["k"]],["bool"]]],[11,"from","","",153,[[["t"]],["t"]]],[11,"into","","",153,[[["self"]],["u"]]],[11,"to_owned","","",153,[[["self"]],["t"]]],[11,"clone_into","","",153,N],[11,"to_string","","",153,[[["self"]],["string"]]],[11,"try_from","","",153,[[["u"]],["result"]]],[11,"borrow","","",153,[[["self"]],["t"]]],[11,"borrow_mut","","",153,[[["self"]],["t"]]],[11,"try_into","","",153,[[["self"]],["result"]]],[11,"get_type_id","","",153,[[["self"]],["typeid"]]],[11,"into_collection","","",153,[[["self"]],["smallvec"]]],[11,"mapped","","",153,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",153,[[["self"]],["result",["parseerr"]]]],[11,"from","","",187,[[["t"]],["t"]]],[11,"into","","",187,[[["self"]],["u"]]],[11,"to_owned","","",187,[[["self"]],["t"]]],[11,"clone_into","","",187,N],[11,"to_string","","",187,[[["self"]],["string"]]],[11,"try_from","","",187,[[["u"]],["result"]]],[11,"borrow","","",187,[[["self"]],["t"]]],[11,"borrow_mut","","",187,[[["self"]],["t"]]],[11,"try_into","","",187,[[["self"]],["result"]]],[11,"get_type_id","","",187,[[["self"]],["typeid"]]],[11,"into_collection","","",187,[[["self"]],["smallvec"]]],[11,"mapped","","",187,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",187,[[["self"]],["result",["parseerr"]]]],[11,"from","","",188,[[["t"]],["t"]]],[11,"into","","",188,[[["self"]],["u"]]],[11,"try_from","","",188,[[["u"]],["result"]]],[11,"borrow","","",188,[[["self"]],["t"]]],[11,"borrow_mut","","",188,[[["self"]],["t"]]],[11,"try_into","","",188,[[["self"]],["result"]]],[11,"get_type_id","","",188,[[["self"]],["typeid"]]],[11,"into_collection","","",188,[[["self"]],["smallvec"]]],[11,"mapped","","",188,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",188,[[["self"]],["result",["parseerr"]]]],[11,"from","","",189,[[["t"]],["t"]]],[11,"into","","",189,[[["self"]],["u"]]],[11,"to_owned","","",189,[[["self"]],["t"]]],[11,"clone_into","","",189,N],[11,"to_string","","",189,[[["self"]],["string"]]],[11,"try_from","","",189,[[["u"]],["result"]]],[11,"borrow","","",189,[[["self"]],["t"]]],[11,"borrow_mut","","",189,[[["self"]],["t"]]],[11,"try_into","","",189,[[["self"]],["result"]]],[11,"get_type_id","","",189,[[["self"]],["typeid"]]],[11,"into_collection","","",189,[[["self"]],["smallvec"]]],[11,"mapped","","",189,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",189,[[["self"]],["result",["parseerr"]]]],[11,"to_string","rocket::http::uncased","",190,[[["self"]],["string"]]],[11,"borrow","","",190,[[["self"]],["t"]]],[11,"borrow_mut","","",190,[[["self"]],["t"]]],[11,"get_type_id","","",190,[[["self"]],["typeid"]]],[11,"equivalent","","",190,[[["self"],["k"]],["bool"]]],[11,"from","","",191,[[["t"]],["t"]]],[11,"into","","",191,[[["self"]],["u"]]],[11,"to_owned","","",191,[[["self"]],["t"]]],[11,"clone_into","","",191,N],[11,"to_string","","",191,[[["self"]],["string"]]],[11,"try_from","","",191,[[["u"]],["result"]]],[11,"borrow","","",191,[[["self"]],["t"]]],[11,"borrow_mut","","",191,[[["self"]],["t"]]],[11,"try_into","","",191,[[["self"]],["result"]]],[11,"get_type_id","","",191,[[["self"]],["typeid"]]],[11,"into_collection","","",191,[[["self"]],["smallvec"]]],[11,"mapped","","",191,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",191,[[["self"]],["result",["parseerr"]]]],[11,"equivalent","","",191,[[["self"],["k"]],["bool"]]],[11,"from","rocket::http","",192,[[["t"]],["t"]]],[11,"into","","",192,[[["self"]],["u"]]],[11,"to_owned","","",192,[[["self"]],["t"]]],[11,"clone_into","","",192,N],[11,"to_string","","",192,[[["self"]],["string"]]],[11,"try_from","","",192,[[["u"]],["result"]]],[11,"borrow","","",192,[[["self"]],["t"]]],[11,"borrow_mut","","",192,[[["self"]],["t"]]],[11,"try_into","","",192,[[["self"]],["result"]]],[11,"get_type_id","","",192,[[["self"]],["typeid"]]],[11,"into_collection","","",192,[[["self"]],["smallvec"]]],[11,"mapped","","",192,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",192,[[["self"]],["result",["parseerr"]]]],[11,"from","","",158,[[["t"]],["t"]]],[11,"into","","",158,[[["self"]],["u"]]],[11,"to_owned","","",158,[[["self"]],["t"]]],[11,"clone_into","","",158,N],[11,"try_from","","",158,[[["u"]],["result"]]],[11,"borrow","","",158,[[["self"]],["t"]]],[11,"borrow_mut","","",158,[[["self"]],["t"]]],[11,"try_into","","",158,[[["self"]],["result"]]],[11,"get_type_id","","",158,[[["self"]],["typeid"]]],[11,"into_collection","","",158,[[["self"]],["smallvec"]]],[11,"mapped","","",158,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",158,[[["self"]],["result",["parseerr"]]]],[11,"equivalent","","",158,[[["self"],["k"]],["bool"]]],[11,"from","","",193,[[["t"]],["t"]]],[11,"into","","",193,[[["self"]],["u"]]],[11,"to_owned","","",193,[[["self"]],["t"]]],[11,"clone_into","","",193,N],[11,"to_string","","",193,[[["self"]],["string"]]],[11,"try_from","","",193,[[["u"]],["result"]]],[11,"borrow","","",193,[[["self"]],["t"]]],[11,"borrow_mut","","",193,[[["self"]],["t"]]],[11,"try_into","","",193,[[["self"]],["result"]]],[11,"get_type_id","","",193,[[["self"]],["typeid"]]],[11,"into_collection","","",193,[[["self"]],["smallvec"]]],[11,"mapped","","",193,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",193,[[["self"]],["result",["parseerr"]]]],[11,"from","","",159,[[["t"]],["t"]]],[11,"into","","",159,[[["self"]],["u"]]],[11,"to_owned","","",159,[[["self"]],["t"]]],[11,"clone_into","","",159,N],[11,"to_string","","",159,[[["self"]],["string"]]],[11,"try_from","","",159,[[["u"]],["result"]]],[11,"borrow","","",159,[[["self"]],["t"]]],[11,"borrow_mut","","",159,[[["self"]],["t"]]],[11,"try_into","","",159,[[["self"]],["result"]]],[11,"get_type_id","","",159,[[["self"]],["typeid"]]],[11,"into_collection","","",159,[[["self"]],["smallvec"]]],[11,"mapped","","",159,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",159,[[["self"]],["result",["parseerr"]]]],[11,"equivalent","","",159,[[["self"],["k"]],["bool"]]],[11,"from","","",160,[[["t"]],["t"]]],[11,"into","","",160,[[["self"]],["u"]]],[11,"to_owned","","",160,[[["self"]],["t"]]],[11,"clone_into","","",160,N],[11,"to_string","","",160,[[["self"]],["string"]]],[11,"try_from","","",160,[[["u"]],["result"]]],[11,"borrow","","",160,[[["self"]],["t"]]],[11,"borrow_mut","","",160,[[["self"]],["t"]]],[11,"try_into","","",160,[[["self"]],["result"]]],[11,"get_type_id","","",160,[[["self"]],["typeid"]]],[11,"into_collection","","",160,[[["self"]],["smallvec"]]],[11,"mapped","","",160,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",160,[[["self"]],["result",["parseerr"]]]],[11,"equivalent","","",160,[[["self"],["k"]],["bool"]]],[11,"to_string","","",194,[[["self"]],["string"]]],[11,"borrow","","",194,[[["self"]],["t"]]],[11,"borrow_mut","","",194,[[["self"]],["t"]]],[11,"get_type_id","","",194,[[["self"]],["typeid"]]],[11,"equivalent","","",194,[[["self"],["k"]],["bool"]]],[11,"from","","",195,[[["t"]],["t"]]],[11,"into","","",195,[[["self"]],["u"]]],[11,"try_from","","",195,[[["u"]],["result"]]],[11,"borrow","","",195,[[["self"]],["t"]]],[11,"borrow_mut","","",195,[[["self"]],["t"]]],[11,"try_into","","",195,[[["self"]],["result"]]],[11,"get_type_id","","",195,[[["self"]],["typeid"]]],[11,"into_collection","","",195,[[["self"]],["smallvec"]]],[11,"mapped","","",195,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",195,[[["self"]],["result",["parseerr"]]]],[11,"from","","",161,[[["t"]],["t"]]],[11,"into","","",161,[[["self"]],["u"]]],[11,"to_owned","","",161,[[["self"]],["t"]]],[11,"clone_into","","",161,N],[11,"try_from","","",161,[[["u"]],["result"]]],[11,"borrow","","",161,[[["self"]],["t"]]],[11,"borrow_mut","","",161,[[["self"]],["t"]]],[11,"try_into","","",161,[[["self"]],["result"]]],[11,"get_type_id","","",161,[[["self"]],["typeid"]]],[11,"into_collection","","",161,[[["self"]],["smallvec"]]],[11,"mapped","","",161,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",161,[[["self"]],["result",["parseerr"]]]],[11,"from","","",196,[[["t"]],["t"]]],[11,"into","","",196,[[["self"]],["u"]]],[11,"to_owned","","",196,[[["self"]],["t"]]],[11,"clone_into","","",196,N],[11,"try_from","","",196,[[["u"]],["result"]]],[11,"borrow","","",196,[[["self"]],["t"]]],[11,"borrow_mut","","",196,[[["self"]],["t"]]],[11,"try_into","","",196,[[["self"]],["result"]]],[11,"get_type_id","","",196,[[["self"]],["typeid"]]],[11,"into_collection","","",196,[[["self"]],["smallvec"]]],[11,"mapped","","",196,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",196,[[["self"]],["result",["parseerr"]]]],[11,"from","","",162,[[["t"]],["t"]]],[11,"into","","",162,[[["self"]],["u"]]],[11,"to_owned","","",162,[[["self"]],["t"]]],[11,"clone_into","","",162,N],[11,"to_string","","",162,[[["self"]],["string"]]],[11,"try_from","","",162,[[["u"]],["result"]]],[11,"borrow","","",162,[[["self"]],["t"]]],[11,"borrow_mut","","",162,[[["self"]],["t"]]],[11,"try_into","","",162,[[["self"]],["result"]]],[11,"get_type_id","","",162,[[["self"]],["typeid"]]],[11,"into_collection","","",162,[[["self"]],["smallvec"]]],[11,"mapped","","",162,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",162,[[["self"]],["result",["parseerr"]]]],[11,"equivalent","","",162,[[["self"],["k"]],["bool"]]],[11,"from","","",197,[[["t"]],["t"]]],[11,"into","","",197,[[["self"]],["u"]]],[11,"to_owned","","",197,[[["self"]],["t"]]],[11,"clone_into","","",197,N],[11,"to_string","","",197,[[["self"]],["string"]]],[11,"try_from","","",197,[[["u"]],["result"]]],[11,"borrow","","",197,[[["self"]],["t"]]],[11,"borrow_mut","","",197,[[["self"]],["t"]]],[11,"try_into","","",197,[[["self"]],["result"]]],[11,"get_type_id","","",197,[[["self"]],["typeid"]]],[11,"into_collection","","",197,[[["self"]],["smallvec"]]],[11,"mapped","","",197,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",197,[[["self"]],["result",["parseerr"]]]],[11,"from","","",163,[[["t"]],["t"]]],[11,"into","","",163,[[["self"]],["u"]]],[11,"to_owned","","",163,[[["self"]],["t"]]],[11,"clone_into","","",163,N],[11,"to_string","","",163,[[["self"]],["string"]]],[11,"try_from","","",163,[[["u"]],["result"]]],[11,"borrow","","",163,[[["self"]],["t"]]],[11,"borrow_mut","","",163,[[["self"]],["t"]]],[11,"try_into","","",163,[[["self"]],["result"]]],[11,"get_type_id","","",163,[[["self"]],["typeid"]]],[11,"into_collection","","",163,[[["self"]],["smallvec"]]],[11,"mapped","","",163,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",163,[[["self"]],["result",["parseerr"]]]],[11,"equivalent","","",163,[[["self"],["k"]],["bool"]]],[11,"from","","",164,[[["t"]],["t"]]],[11,"into","","",164,[[["self"]],["u"]]],[11,"to_owned","","",164,[[["self"]],["t"]]],[11,"clone_into","","",164,N],[11,"to_string","","",164,[[["self"]],["string"]]],[11,"try_from","","",164,[[["u"]],["result"]]],[11,"borrow","","",164,[[["self"]],["t"]]],[11,"borrow_mut","","",164,[[["self"]],["t"]]],[11,"try_into","","",164,[[["self"]],["result"]]],[11,"get_type_id","","",164,[[["self"]],["typeid"]]],[11,"into_collection","","",164,[[["self"]],["smallvec"]]],[11,"mapped","","",164,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",164,[[["self"]],["result",["parseerr"]]]],[11,"into_owned","rocket::http::uri","",186,[[["self"]],["authority"]]],[11,"into_owned","","",153,[[["self"]],["uri"]]],[11,"into_owned","","",185,N],[11,"into_owned","","",187,[[["self"]],["origin"]]],[11,"into_owned","","",189,N],[11,"borrow","rocket::http::uncased","",191,[[["self"]],["uncasedstr"]]],[11,"to_string","rocket::http","",194,[[["self"]],["string"]]],[11,"cmp","","",194,[[["self"],["rawstr"]],["ordering"]]],[11,"cmp","rocket::http::uncased","",191,[[["self"],["uncased"]],["ordering"]]],[11,"cmp","","",190,[[["self"],["uncasedstr"]],["ordering"]]],[11,"try_from","rocket::http::uri","",153,[[["string"]],["result",["uri"]]]],[11,"try_from","","",153,[[["str"]],["result",["uri"]]]],[11,"eq","","",152,[[["self"],["segmenterror"]],["bool"]]],[11,"ne","","",152,[[["self"],["segmenterror"]],["bool"]]],[11,"eq","rocket::http::uncased","",191,[[["self"],["str"]],["bool"]]],[11,"eq","rocket::http","",158,[[["self"],["statusclass"]],["bool"]]],[11,"eq","rocket::http::uncased","",190,[[["self"],["uncasedstr"]],["bool"]]],[11,"eq","rocket::http","",194,[[["self"],["rawstr"]],["bool"]]],[11,"ne","","",194,[[["self"],["rawstr"]],["bool"]]],[11,"eq","rocket::http::uncased","",191,[[["self"],["str"]],["bool"]]],[11,"eq","rocket::http","",159,[[["self"],["method"]],["bool"]]],[11,"eq","rocket::http::uri","",187,[[["self"],["origin"]],["bool"]]],[11,"eq","rocket::http::uncased","",190,[[["self"],["str"]],["bool"]]],[11,"eq","","",190,[[["self"],["str"]],["bool"]]],[11,"eq","rocket::http","",193,[[["self"],["mediatype"]],["bool"]]],[11,"eq","rocket::http::uri","",186,[[["self"],["authority"]],["bool"]]],[11,"eq","rocket::http","",196,[[["self"],["headermap"]],["bool"]]],[11,"ne","","",196,[[["self"],["headermap"]],["bool"]]],[11,"eq","","",161,[[["self"],["qmediatype"]],["bool"]]],[11,"ne","","",161,[[["self"],["qmediatype"]],["bool"]]],[11,"eq","","",160,[[["self"],["status"]],["bool"]]],[11,"ne","","",160,[[["self"],["status"]],["bool"]]],[11,"eq","","",163,[[["self"],["header"]],["bool"]]],[11,"ne","","",163,[[["self"],["header"]],["bool"]]],[11,"eq","rocket::http::uri","",189,[[["self"],["absolute"]],["bool"]]],[11,"eq","rocket::http","",164,[[["self"],["contenttype"]],["bool"]]],[11,"ne","","",164,[[["self"],["contenttype"]],["bool"]]],[11,"eq","","",194,[[["self"],["str"]],["bool"]]],[11,"eq","rocket::http::uncased","",191,[[["self"],["uncased"]],["bool"]]],[11,"eq","rocket::http::uri","",153,[[["self"],["uri"]],["bool"]]],[11,"ne","","",153,[[["self"],["uri"]],["bool"]]],[11,"eq","rocket::http","",197,[[["self"],["accept"]],["bool"]]],[11,"ne","","",197,[[["self"],["accept"]],["bool"]]],[11,"eq","","",194,[[["self"],["string"]],["bool"]]],[11,"fmt","","",194,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",197,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","rocket::http::uri","",189,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",187,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","rocket::http","",163,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","rocket::http::uri","",153,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","rocket::http::uncased","",191,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","rocket::http::uri","",186,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","rocket::http::uncased","",190,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","rocket::http","Formats the ContentType as an HTTP Content-Type value.",164,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",159,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",194,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","rocket::http::uri","",185,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","rocket::http","",160,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",193,[[["self"],["formatter"]],["result",["error"]]]],[11,"write_str","rocket::http::uri","",188,[[["self"],["str"]],["result",["error"]]]],[11,"fmt","","",153,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",187,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","rocket::http","",160,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","rocket::http::uri","",151,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","rocket::http","",193,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",163,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","rocket::http::uri","",185,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","rocket::http::uncased","",191,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","rocket::http::uri","",186,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","rocket::http","",159,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",161,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",197,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",164,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",194,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","rocket::http::uri","",152,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","rocket::http","",158,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","rocket::http::uncased","",190,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","rocket::http::uri","",189,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","rocket::http","",196,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",195,[[["self"],["formatter"]],["result",["error"]]]],[11,"deref_mut","","",194,[[["self"]],["str"]]],[11,"into","","",164,[[["self"]],["header"]]],[11,"into","","",197,[[["self"]],["header"]]],[11,"clone","","",158,[[["self"]],["statusclass"]]],[11,"clone","rocket::http::uri","",153,[[["self"]],["uri"]]],[11,"clone","","",152,[[["self"]],["segmenterror"]]],[11,"clone","rocket::http","",197,[[["self"]],["accept"]]],[11,"clone","rocket::http::uncased","",191,[[["self"]],["uncased"]]],[11,"clone","rocket::http","",164,[[["self"]],["contenttype"]]],[11,"clone","","",159,[[["self"]],["method"]]],[11,"clone","","",163,[[["self"]],["header"]]],[11,"clone","rocket::http::uri","",189,[[["self"]],["absolute"]]],[11,"clone","rocket::http","",161,[[["self"]],["qmediatype"]]],[11,"clone","","",193,[[["self"]],["mediatype"]]],[11,"clone","rocket::http::uri","",186,[[["self"]],["authority"]]],[11,"clone","rocket::http","",196,[[["self"]],["headermap"]]],[11,"clone","rocket::http::uri","",187,[[["self"]],["origin"]]],[11,"clone","rocket::http","",160,[[["self"]],["status"]]],[11,"clone","rocket::http::uri","",151,[[["self"]],["segments"]]],[11,"partial_cmp","rocket::http","",194,[[["self"],["str"]],["option",["ordering"]]]],[11,"partial_cmp","","",194,[[["self"],["rawstr"]],["option",["ordering"]]]],[11,"lt","","",194,[[["self"],["rawstr"]],["bool"]]],[11,"le","","",194,[[["self"],["rawstr"]],["bool"]]],[11,"gt","","",194,[[["self"],["rawstr"]],["bool"]]],[11,"ge","","",194,[[["self"],["rawstr"]],["bool"]]],[11,"partial_cmp","rocket::http::uncased","",191,[[["self"],["uncased"]],["option",["ordering"]]]],[11,"partial_cmp","","",190,[[["self"],["uncasedstr"]],["option",["ordering"]]]],[11,"next","rocket::http::uri","",151,[[["self"]],["option"]]],[11,"default","rocket::http","",196,[[],["headermap"]]],[11,"default","","Returns a ContentType of `Any`, or `*/*`.",164,[[],["contenttype"]]],[11,"from_str","","",197,[[["str"]],["result",["accept","string"]]]],[11,"from_str","","",193,[[["str"]],["result",["mediatype","string"]]]],[11,"from_str","","",159,[[["str"]],["result",["method"]]]],[11,"from_str","","Parses a `ContentType` from a given Content-Type header…",164,[[["str"]],["result",["contenttype","string"]]]],[11,"as_ref","","",194,[[["self"]],["str"]]],[11,"as_ref","rocket::http::uncased","",191,[[["self"]],["uncasedstr"]]],[11,"as_ref","rocket::http","",194,N],[11,"deref","","",161,[[["self"]],["mediatype"]]],[11,"deref","","",194,[[["self"]],["str"]]],[11,"deref","rocket::http::uncased","",191,[[["self"]],["uncasedstr"]]],[11,"deref","rocket::http","",164,[[["self"]],["mediatype"]]],[11,"from","","",163,[[["ifrange"]],["header"]]],[11,"from","","",163,[[["referrerpolicy"]],["header"]]],[11,"from","rocket::http::uncased","",191,[[["str"]],["uncased"]]],[11,"from","rocket::http","",163,[[["range"]],["header"]]],[11,"from","","",163,[[["accesscontrolalloworigin"]],["header"]]],[11,"from","","",163,[[["contentdisposition"]],["header"]]],[11,"from","","",163,[[["ifunmodifiedsince"]],["header"]]],[11,"from","","",163,[[["accesscontrolrequestmethod"]],["header"]]],[11,"from","","",163,[[["acceptencoding"]],["header"]]],[11,"from","","",163,[[["contentlanguage"]],["header"]]],[11,"from","rocket::http::uncased","",191,[[["cow",["str"]]],["uncased"]]],[11,"from","rocket::http","",163,[[["connection"]],["header"]]],[11,"from","","",163,[[["acceptranges"]],["header"]]],[11,"from","rocket::http::uri","",153,[[["absolute"]],["uri"]]],[11,"from","rocket::http","",163,[[["contentrange"]],["header"]]],[11,"from","","",163,[[["contentencoding"]],["header"]]],[11,"from","rocket::http::uri","",153,[[["origin"]],["uri"]]],[11,"from","rocket::http","",163,[[["cookie"]],["header"]]],[11,"from","","",161,[[["mediatype"]],["qmediatype"]]],[11,"from","","",163,[[["date"]],["header"]]],[11,"from","","",163,[[["host"]],["header"]]],[11,"from","","",163,[[["expect"]],["header"]]],[11,"from","","",163,[[["stricttransportsecurity"]],["header"]]],[11,"from","","",163,[[["prefer"]],["header"]]],[11,"from","","",163,[[["accesscontrolallowheaders"]],["header"]]],[11,"from","","",163,[[["ifmodifiedsince"]],["header"]]],[11,"from","rocket::http::uri","",153,[[["authority"]],["uri"]]],[11,"from","rocket::http","",163,[[["acceptlanguage"]],["header"]]],[11,"from","","",163,[[["etag"]],["header"]]],[11,"from","","",163,[[["cookie"]],["header"]]],[11,"from","","",163,[[["upgrade"]],["header"]]],[11,"from","","",163,[[["cachecontrol"]],["header"]]],[11,"from","","",163,[[["vary"]],["header"]]],[11,"from","","",163,[[["expires"]],["header"]]],[11,"from","","",163,[[["lastmodified"]],["header"]]],[11,"from","","",197,[[["t"]],["accept"]]],[11,"from","","",163,[[["pragma"]],["header"]]],[11,"from","","",163,[[["ifmatch"]],["header"]]],[11,"from","rocket::http::uncased","",191,[[["string"]],["uncased"]]],[11,"from","rocket::http","",163,[[["accesscontrolmaxage"]],["header"]]],[11,"from","","",163,[[["location"]],["header"]]],[11,"from","","",163,[[["accept"]],["header"]]],[11,"from","","",163,[[["useragent"]],["header"]]],[11,"from","","",163,[[["accesscontrolallowcredentials"]],["header"]]],[11,"from","","",163,[[["referer"]],["header"]]],[11,"from","","",163,[[["transferencoding"]],["header"]]],[11,"from","","",163,[[["ifnonematch"]],["header"]]],[11,"from","","",163,[[["accesscontrolallowmethods"]],["header"]]],[11,"from","","",163,[[["allow"]],["header"]]],[11,"from","","",163,[[["origin"]],["header"]]],[11,"from","","",163,[[["contentlength"]],["header"]]],[11,"from","","",163,[[["acceptcharset"]],["header"]]],[11,"from","rocket::http::uncased","",191,[[["t"]],["uncased"]]],[11,"from","rocket::http","",163,[[["accesscontrolexposeheaders"]],["header"]]],[11,"from","","",163,[[["preferenceapplied"]],["header"]]],[11,"from","","",163,[[["accesscontrolrequestheaders"]],["header"]]],[11,"hash","rocket::http::uncased","",191,N],[11,"hash","rocket::http","",193,N],[11,"hash","rocket::http::uncased","",190,N],[11,"hash","rocket::http","",160,N],[11,"hash","","",159,N],[11,"hash","","",164,N],[11,"hash","","",194,N],[11,"hash","","",158,N],[11,"hash","","",163,N],[11,"eq","","",162,[[["self"],["samesite"]],["bool"]]],[11,"eq","","",192,[[["self"],["cookie"]],["bool"]]],[11,"fmt","","Formats the cookie `self` as a `Set-Cookie` header value.",192,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",162,[[["self"],["formatter"]],["result",["error"]]]],[11,"from_str","","",192,[[["str"]],["result",["cookie","parseerror"]]]],[11,"fmt","","",192,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",162,[[["self"],["formatter"]],["result",["error"]]]],[11,"clone","","",162,[[["self"]],["samesite"]]],[11,"clone","","",192,[[["self"]],["cookie"]]],[11,"hash","","",162,N],[11,"from_raw_fd","rocket::http::hyper::net","",178,[[["i32"]],["httplistener"]]],[11,"from_raw_fd","","",143,[[["i32"]],["httpstream"]]],[11,"new_message","rocket::http::hyper::h1","",173,[[["self"],["str"],["u16"],["str"]],["result",["box","error"]]]],[11,"scheme","rocket::http::hyper::header","",87,[[],["option",["str"]]]],[11,"fmt_scheme","","",87,[[["self"],["formatter"]],["result",["error"]]]],[11,"scheme","","",112,[[],["option",["str"]]]],[11,"fmt_scheme","","",112,[[["self"],["formatter"]],["result",["error"]]]],[11,"connect","rocket::http::hyper::net","",181,[[["self"],["str"],["u16"],["str"]],["result",["error"]]]],[11,"connect","","",179,[[["self"],["str"],["u16"],["str"]],["result",["httpstream","error"]]]],[11,"cmp","rocket::http::hyper::header","",125,[[["self"],["quality"]],["ordering"]]],[11,"cmp","","",62,[[["self"],["httpdate"]],["ordering"]]],[11,"cmp","rocket::http::hyper","",137,[[["self"],["statuscode"]],["ordering"]]],[11,"eq","","",149,[[["self"],["requesturi"]],["bool"]]],[11,"ne","","",149,[[["self"],["requesturi"]],["bool"]]],[11,"eq","rocket::http::hyper::header","",67,[[["self"],["protocol"]],["bool"]]],[11,"ne","","",67,[[["self"],["protocol"]],["bool"]]],[11,"eq","","",126,[[["self"],["transferencoding"]],["bool"]]],[11,"ne","","",126,[[["self"],["transferencoding"]],["bool"]]],[11,"eq","","",81,[[["self"],["referer"]],["bool"]]],[11,"ne","","",81,[[["self"],["referer"]],["bool"]]],[11,"eq","","",74,[[["self"],["stricttransportsecurity"]],["bool"]]],[11,"ne","","",74,[[["self"],["stricttransportsecurity"]],["bool"]]],[11,"eq","","",95,[[["self"],["accesscontrolalloworigin"]],["bool"]]],[11,"ne","","",95,[[["self"],["accesscontrolalloworigin"]],["bool"]]],[11,"eq","","",62,[[["self"],["httpdate"]],["bool"]]],[11,"ne","","",62,[[["self"],["httpdate"]],["bool"]]],[11,"eq","","",106,[[["self"],["accesscontrolallowmethods"]],["bool"]]],[11,"ne","","",106,[[["self"],["accesscontrolallowmethods"]],["bool"]]],[11,"eq","","",104,[[["self"],["useragent"]],["bool"]]],[11,"ne","","",104,[[["self"],["useragent"]],["bool"]]],[11,"eq","","",85,[[["self"],["date"]],["bool"]]],[11,"ne","","",85,[[["self"],["date"]],["bool"]]],[11,"eq","","",76,[[["self"],["dispositiontype"]],["bool"]]],[11,"ne","","",76,[[["self"],["dispositiontype"]],["bool"]]],[11,"eq","","",120,[[["self"],["contentdisposition"]],["bool"]]],[11,"ne","","",120,[[["self"],["contentdisposition"]],["bool"]]],[11,"eq","","",119,[[["self"],["referrerpolicy"]],["bool"]]],[11,"eq","","",72,[[["self"],["lastmodified"]],["bool"]]],[11,"ne","","",72,[[["self"],["lastmodified"]],["bool"]]],[11,"eq","","",113,[[["self"],["preference"]],["bool"]]],[11,"ne","","",113,[[["self"],["preference"]],["bool"]]],[11,"eq","","",118,[[["self"],["byterangespec"]],["bool"]]],[11,"ne","","",118,[[["self"],["byterangespec"]],["bool"]]],[11,"eq","","",92,[[["self"],["cachedirective"]],["bool"]]],[11,"ne","","",92,[[["self"],["cachedirective"]],["bool"]]],[11,"eq","","",99,[[["self"],["authorization"]],["bool"]]],[11,"ne","","",99,[[["self"],["authorization"]],["bool"]]],[11,"eq","","",112,[[["self"],["bearer"]],["bool"]]],[11,"ne","","",112,[[["self"],["bearer"]],["bool"]]],[11,"eq","","",86,[[["self"],["acceptlanguage"]],["bool"]]],[11,"ne","","",86,[[["self"],["acceptlanguage"]],["bool"]]],[11,"eq","","",65,[[["self"],["pragma"]],["bool"]]],[11,"ne","","",65,[[["self"],["pragma"]],["bool"]]],[11,"eq","","",101,[[["self"],["ifrange"]],["bool"]]],[11,"ne","","",101,[[["self"],["ifrange"]],["bool"]]],[11,"eq","","",100,[[["self"],["host"]],["bool"]]],[11,"ne","","",100,[[["self"],["host"]],["bool"]]],[11,"eq","","",123,[[["self"],["origin"]],["bool"]]],[11,"eq","","",121,[[["self"],["contentrangespec"]],["bool"]]],[11,"ne","","",121,[[["self"],["contentrangespec"]],["bool"]]],[11,"eq","","",122,[[["self"],["contentrange"]],["bool"]]],[11,"ne","","",122,[[["self"],["contentrange"]],["bool"]]],[11,"eq","","",115,[[["self"],["contentencoding"]],["bool"]]],[11,"ne","","",115,[[["self"],["contentencoding"]],["bool"]]],[11,"eq","","",124,[[["self"],["rangeunit"]],["bool"]]],[11,"ne","","",124,[[["self"],["rangeunit"]],["bool"]]],[11,"eq","","",88,[[["self"],["contentlength"]],["bool"]]],[11,"ne","","",88,[[["self"],["contentlength"]],["bool"]]],[11,"eq","","",79,[[["self"],["acceptranges"]],["bool"]]],[11,"ne","","",79,[[["self"],["acceptranges"]],["bool"]]],[11,"eq","","",94,[[["self"],["expect"]],["bool"]]],[11,"eq","","",83,[[["self"],["prefer"]],["bool"]]],[11,"ne","","",83,[[["self"],["prefer"]],["bool"]]],[11,"eq","rocket::http::hyper","",147,[[["self"],["method"]],["bool"]]],[11,"ne","","",147,[[["self"],["method"]],["bool"]]],[11,"eq","rocket::http::hyper::header","",64,[[["self"],["acceptcharset"]],["bool"]]],[11,"ne","","",64,[[["self"],["acceptcharset"]],["bool"]]],[11,"eq","","",78,[[["self"],["etag"]],["bool"]]],[11,"ne","","",78,[[["self"],["etag"]],["bool"]]],[11,"eq","","",89,[[["self"],["accept"]],["bool"]]],[11,"ne","","",89,[[["self"],["accept"]],["bool"]]],[11,"eq","","",69,[[["self"],["encoding"]],["bool"]]],[11,"ne","","",69,[[["self"],["encoding"]],["bool"]]],[11,"eq","","",110,[[["self"],["protocolname"]],["bool"]]],[11,"ne","","",110,[[["self"],["protocolname"]],["bool"]]],[11,"eq","","",108,[[["self"],["preferenceapplied"]],["bool"]]],[11,"ne","","",108,[[["self"],["preferenceapplied"]],["bool"]]],[11,"eq","","",96,[[["self"],["contenttype"]],["bool"]]],[11,"ne","","",96,[[["self"],["contenttype"]],["bool"]]],[11,"eq","","",116,[[["self"],["accesscontrolallowheaders"]],["bool"]]],[11,"ne","","",116,[[["self"],["accesscontrolallowheaders"]],["bool"]]],[11,"eq","rocket::http::hyper","",137,[[["self"],["statuscode"]],["bool"]]],[11,"eq","rocket::http::hyper::header","",90,[[["self"],["ifmodifiedsince"]],["bool"]]],[11,"ne","","",90,[[["self"],["ifmodifiedsince"]],["bool"]]],[11,"eq","","",84,[[["self"],["dispositionparam"]],["bool"]]],[11,"ne","","",84,[[["self"],["dispositionparam"]],["bool"]]],[11,"eq","","",73,[[["self"],["range"]],["bool"]]],[11,"ne","","",73,[[["self"],["range"]],["bool"]]],[11,"eq","","",105,[[["self"],["cachecontrol"]],["bool"]]],[11,"ne","","",105,[[["self"],["cachecontrol"]],["bool"]]],[11,"eq","","",70,[[["self"],["accesscontrolexposeheaders"]],["bool"]]],[11,"ne","","",70,[[["self"],["accesscontrolexposeheaders"]],["bool"]]],[11,"eq","","",63,[[["self"],["accesscontrolmaxage"]],["bool"]]],[11,"ne","","",63,[[["self"],["accesscontrolmaxage"]],["bool"]]],[11,"eq","","",87,[[["self"],["basic"]],["bool"]]],[11,"ne","","",87,[[["self"],["basic"]],["bool"]]],[11,"eq","","",77,[[["self"],["charset"]],["bool"]]],[11,"ne","","",77,[[["self"],["charset"]],["bool"]]],[11,"eq","","",80,[[["self"],["accesscontrolrequestmethod"]],["bool"]]],[11,"ne","","",80,[[["self"],["accesscontrolrequestmethod"]],["bool"]]],[11,"eq","","",109,[[["self"],["upgrade"]],["bool"]]],[11,"ne","","",109,[[["self"],["upgrade"]],["bool"]]],[11,"eq","","",82,[[["self"],["contentlanguage"]],["bool"]]],[11,"ne","","",82,[[["self"],["contentlanguage"]],["bool"]]],[11,"eq","","",91,[[["self"],["accesscontrolrequestheaders"]],["bool"]]],[11,"ne","","",91,[[["self"],["accesscontrolrequestheaders"]],["bool"]]],[11,"eq","","",71,[[["self"],["entitytag"]],["bool"]]],[11,"ne","","",71,[[["self"],["entitytag"]],["bool"]]],[11,"eq","","",75,[[["self"],["from"]],["bool"]]],[11,"ne","","",75,[[["self"],["from"]],["bool"]]],[11,"eq","","",68,[[["self"],["connection"]],["bool"]]],[11,"ne","","",68,[[["self"],["connection"]],["bool"]]],[11,"eq","","",127,[[["self"],["connectionoption"]],["bool"]]],[11,"ne","","",127,[[["self"],["connectionoption"]],["bool"]]],[11,"eq","","",170,[[["self"],["headers"]],["bool"]]],[11,"eq","","",97,[[["self"],["expires"]],["bool"]]],[11,"ne","","",97,[[["self"],["expires"]],["bool"]]],[11,"eq","","",117,[[["self"],["ifmatch"]],["bool"]]],[11,"ne","","",117,[[["self"],["ifmatch"]],["bool"]]],[11,"eq","","",107,[[["self"],["ifnonematch"]],["bool"]]],[11,"ne","","",107,[[["self"],["ifnonematch"]],["bool"]]],[11,"eq","","",93,[[["self"],["acceptencoding"]],["bool"]]],[11,"ne","","",93,[[["self"],["acceptencoding"]],["bool"]]],[11,"eq","","",98,[[["self"],["location"]],["bool"]]],[11,"ne","","",98,[[["self"],["location"]],["bool"]]],[11,"eq","","",125,[[["self"],["quality"]],["bool"]]],[11,"ne","","",125,[[["self"],["quality"]],["bool"]]],[11,"eq","","",114,[[["self"],["qualityitem"]],["bool"]]],[11,"ne","","",114,[[["self"],["qualityitem"]],["bool"]]],[11,"eq","","",171,[[["self"],["accesscontrolallowcredentials"]],["bool"]]],[11,"eq","","",111,[[["self"],["ifunmodifiedsince"]],["bool"]]],[11,"ne","","",111,[[["self"],["ifunmodifiedsince"]],["bool"]]],[11,"eq","","",102,[[["self"],["allow"]],["bool"]]],[11,"ne","","",102,[[["self"],["allow"]],["bool"]]],[11,"eq","","",103,[[["self"],["vary"]],["bool"]]],[11,"ne","","",103,[[["self"],["vary"]],["bool"]]],[11,"fmt","","",62,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",78,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",117,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",104,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",170,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",89,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",109,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",92,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",114,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",108,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",121,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",107,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",69,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",102,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",124,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",90,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",113,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",81,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",105,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",95,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","rocket::http::hyper","",147,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","rocket::http::hyper::header","",79,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",86,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",125,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",71,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",75,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",80,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",118,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",65,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",91,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",171,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",93,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",97,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",127,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",116,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",83,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",110,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",96,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",115,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",74,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",70,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","rocket::http::hyper","",138,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","rocket::http::hyper::header","",68,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",106,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",94,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",64,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",101,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",82,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","rocket::http::hyper","",137,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","rocket::http::hyper::header","",123,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",103,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",85,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",73,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",98,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",120,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",119,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",67,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",88,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",126,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",122,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",77,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",111,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",72,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",100,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",63,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","rocket::http::hyper","",149,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","rocket::http::hyper::h1","",172,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",128,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","rocket::http::hyper::header","",113,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",97,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",83,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",101,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",64,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",62,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","rocket::http::hyper","",149,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","rocket::http::hyper::header","",123,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",102,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",117,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",109,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","rocket::http::hyper::net","",146,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","rocket::http::hyper::header","",99,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",84,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",114,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",100,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",77,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",78,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",105,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",106,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",120,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",127,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","rocket::http::hyper::net","",143,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","rocket::http::hyper::header","",88,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","rocket::http::hyper::h1","",174,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",130,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","rocket::http::hyper::header","",108,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","rocket::http::hyper::net","",179,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","rocket::http::hyper::header","",171,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",125,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",104,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",119,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","rocket::http::hyper","",138,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","rocket::http::hyper::header","",93,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",67,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",69,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",75,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",96,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",116,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","rocket::http::hyper","",182,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","rocket::http::hyper::header","",115,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",91,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",70,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",107,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",89,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",94,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",74,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",82,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","rocket::http::hyper","",136,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","rocket::http::hyper::header","",92,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",118,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",122,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",80,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",87,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",73,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",65,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","rocket::http::hyper","",137,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","rocket::http::hyper::header","",72,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",121,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",86,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",81,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",112,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","rocket::http::hyper","",147,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","rocket::http::hyper::header","",110,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",170,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",85,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",90,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",103,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",111,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",76,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",98,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",79,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",126,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",63,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",124,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",95,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",68,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",71,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","rocket::http::hyper::net","",181,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","rocket::http::hyper::h1","",129,[[["self"],["formatter"]],["result",["error"]]]],[11,"accept","rocket::http::hyper::net","",178,[[["self"]],["result",["httpstream","error"]]]],[11,"local_addr","","",178,[[["self"]],["result",["socketaddr","error"]]]],[11,"set_read_timeout","","",178,N],[11,"set_write_timeout","","",178,N],[11,"accept","","",180,[[["self"]],["result",["error"]]]],[11,"local_addr","","",180,[[["self"]],["result",["socketaddr","error"]]]],[11,"set_read_timeout","","",180,N],[11,"set_write_timeout","","",180,N],[11,"deref_mut","rocket::http::hyper::header","",68,[[["self"]],["vec"]]],[11,"deref_mut","","",115,[[["self"]],["vec"]]],[11,"deref_mut","","",79,[[["self"]],["vec"]]],[11,"deref_mut","","",96,[[["self"]],["mime"]]],[11,"deref_mut","","",97,[[["self"]],["httpdate"]]],[11,"deref_mut","","",75,[[["self"]],["string"]]],[11,"deref_mut","","",116,[[["self"]],["vec"]]],[11,"deref_mut","","",81,[[["self"]],["string"]]],[11,"deref_mut","","",78,[[["self"]],["entitytag"]]],[11,"deref_mut","","",105,[[["self"]],["vec"]]],[11,"deref_mut","","",63,[[["self"]],["u32"]]],[11,"deref_mut","","",89,[[["self"]],["vec"]]],[11,"deref_mut","","",82,[[["self"]],["vec"]]],[11,"deref_mut","","",90,[[["self"]],["httpdate"]]],[11,"deref_mut","","",88,[[["self"]],["u64"]]],[11,"deref_mut","","",108,[[["self"]],["vec"]]],[11,"deref_mut","","",86,[[["self"]],["vec"]]],[11,"deref_mut","","",122,[[["self"]],["contentrangespec"]]],[11,"deref_mut","","",80,[[["self"]],["method"]]],[11,"deref_mut","","",126,[[["self"]],["vec"]]],[11,"deref_mut","","",98,[[["self"]],["string"]]],[11,"deref_mut","","",93,[[["self"]],["vec"]]],[11,"deref_mut","","",106,[[["self"]],["vec"]]],[11,"deref_mut","","",91,[[["self"]],["vec"]]],[11,"deref_mut","","",99,[[["self"]],["s"]]],[11,"deref_mut","","",102,[[["self"]],["vec"]]],[11,"deref_mut","","",104,[[["self"]],["string"]]],[11,"deref_mut","","",83,[[["self"]],["vec"]]],[11,"deref_mut","","",72,[[["self"]],["httpdate"]]],[11,"deref_mut","","",70,[[["self"]],["vec"]]],[11,"deref_mut","","",111,[[["self"]],["httpdate"]]],[11,"deref_mut","","",109,[[["self"]],["vec"]]],[11,"deref_mut","","",85,[[["self"]],["httpdate"]]],[11,"deref_mut","","",64,[[["self"]],["vec"]]],[11,"set_outgoing","rocket::http::hyper::h1","",172,[[["self"],["requesthead"]],["result",["requesthead","error"]]]],[11,"get_incoming","","",172,[[["self"]],["result",["responsehead","error"]]]],[11,"has_body","","",172,[[["self"]],["bool"]]],[11,"set_read_timeout","","",172,[[["self"],["option",["duration"]]],["result",["error"]]]],[11,"set_write_timeout","","",172,[[["self"],["option",["duration"]]],["result",["error"]]]],[11,"close_connection","","",172,[[["self"]],["result",["error"]]]],[11,"set_proxied","","",172,N],[11,"clone","rocket::http::hyper::header","",91,[[["self"]],["accesscontrolrequestheaders"]]],[11,"clone","","",95,[[["self"]],["accesscontrolalloworigin"]]],[11,"clone","rocket::http::hyper::net","",180,[[["self"]],["httpslistener"]]],[11,"clone","rocket::http::hyper::header","",90,[[["self"]],["ifmodifiedsince"]]],[11,"clone","","",80,[[["self"]],["accesscontrolrequestmethod"]]],[11,"clone","","",67,[[["self"]],["protocol"]]],[11,"clone","","",71,[[["self"]],["entitytag"]]],[11,"clone","","",108,[[["self"]],["preferenceapplied"]]],[11,"clone","","",122,[[["self"]],["contentrange"]]],[11,"clone","rocket::http::hyper","",137,[[["self"]],["statuscode"]]],[11,"clone","rocket::http::hyper::header","",119,[[["self"]],["referrerpolicy"]]],[11,"clone","","",106,[[["self"]],["accesscontrolallowmethods"]]],[11,"clone","","",114,[[["self"]],["qualityitem"]]],[11,"clone","rocket::http::hyper::net","",179,[[["self"]],["httpconnector"]]],[11,"clone","rocket::http::hyper","",147,[[["self"]],["method"]]],[11,"clone","rocket::http::hyper::header","",78,[[["self"]],["etag"]]],[11,"clone","","",62,[[["self"]],["httpdate"]]],[11,"clone","","",107,[[["self"]],["ifnonematch"]]],[11,"clone","rocket::http::hyper::net","",146,[[["self"]],["httpsstream"]]],[11,"clone","rocket::http::hyper::header","",76,[[["self"]],["dispositiontype"]]],[11,"clone","","",117,[[["self"]],["ifmatch"]]],[11,"clone","","",86,[[["self"]],["acceptlanguage"]]],[11,"clone","","",93,[[["self"]],["acceptencoding"]]],[11,"clone","","",98,[[["self"]],["location"]]],[11,"clone","","",99,[[["self"]],["authorization"]]],[11,"clone","","",170,[[["self"]],["headers"]]],[11,"clone","","",127,[[["self"]],["connectionoption"]]],[11,"clone","","",101,[[["self"]],["ifrange"]]],[11,"clone","","",124,[[["self"]],["rangeunit"]]],[11,"clone","","",64,[[["self"]],["acceptcharset"]]],[11,"clone","","",118,[[["self"]],["byterangespec"]]],[11,"clone","","",81,[[["self"]],["referer"]]],[11,"clone","","",100,[[["self"]],["host"]]],[11,"clone","","",123,[[["self"]],["origin"]]],[11,"clone","","",105,[[["self"]],["cachecontrol"]]],[11,"clone","rocket::http::hyper::net","",143,[[["self"]],["httpstream"]]],[11,"clone","rocket::http::hyper::header","",96,[[["self"]],["contenttype"]]],[11,"clone","","",82,[[["self"]],["contentlanguage"]]],[11,"clone","","",171,[[["self"]],["accesscontrolallowcredentials"]]],[11,"clone","rocket::http::hyper::net","",178,[[["self"]],["httplistener"]]],[11,"clone","rocket::http::hyper::header","",92,[[["self"]],["cachedirective"]]],[11,"clone","","",109,[[["self"]],["upgrade"]]],[11,"clone","","",87,[[["self"]],["basic"]]],[11,"clone","","",89,[[["self"]],["accept"]]],[11,"clone","","",79,[[["self"]],["acceptranges"]]],[11,"clone","","",72,[[["self"]],["lastmodified"]]],[11,"clone","","",75,[[["self"]],["from"]]],[11,"clone","","",104,[[["self"]],["useragent"]]],[11,"clone","","",69,[[["self"]],["encoding"]]],[11,"clone","","",126,[[["self"]],["transferencoding"]]],[11,"clone","","",121,[[["self"]],["contentrangespec"]]],[11,"clone","","",125,[[["self"]],["quality"]]],[11,"clone","","",115,[[["self"]],["contentencoding"]]],[11,"clone","","",112,[[["self"]],["bearer"]]],[11,"clone","","",97,[[["self"]],["expires"]]],[11,"clone","","",88,[[["self"]],["contentlength"]]],[11,"clone","rocket::http::hyper","",149,[[["self"]],["requesturi"]]],[11,"clone","rocket::http::hyper::header","",113,[[["self"]],["preference"]]],[11,"clone","","",74,[[["self"]],["stricttransportsecurity"]]],[11,"clone","","",102,[[["self"]],["allow"]]],[11,"clone","","",120,[[["self"]],["contentdisposition"]]],[11,"clone","","",111,[[["self"]],["ifunmodifiedsince"]]],[11,"clone","","",68,[[["self"]],["connection"]]],[11,"clone","","",94,[[["self"]],["expect"]]],[11,"clone","","",77,[[["self"]],["charset"]]],[11,"clone","","",65,[[["self"]],["pragma"]]],[11,"clone","","",63,[[["self"]],["accesscontrolmaxage"]]],[11,"clone","","",73,[[["self"]],["range"]]],[11,"clone","","",116,[[["self"]],["accesscontrolallowheaders"]]],[11,"clone","","",103,[[["self"]],["vary"]]],[11,"clone","","",110,[[["self"]],["protocolname"]]],[11,"clone","","",83,[[["self"]],["prefer"]]],[11,"clone","","",70,[[["self"]],["accesscontrolexposeheaders"]]],[11,"clone","","",84,[[["self"]],["dispositionparam"]]],[11,"clone","","",85,[[["self"]],["date"]]],[11,"partial_cmp","","",114,[[["self"],["qualityitem"]],["option",["ordering"]]]],[11,"partial_cmp","","",62,[[["self"],["httpdate"]],["option",["ordering"]]]],[11,"lt","","",62,[[["self"],["httpdate"]],["bool"]]],[11,"le","","",62,[[["self"],["httpdate"]],["bool"]]],[11,"gt","","",62,[[["self"],["httpdate"]],["bool"]]],[11,"ge","","",62,[[["self"],["httpdate"]],["bool"]]],[11,"partial_cmp","rocket::http::hyper","",137,[[["self"],["statuscode"]],["option",["ordering"]]]],[11,"partial_cmp","rocket::http::hyper::header","",125,[[["self"],["quality"]],["option",["ordering"]]]],[11,"lt","","",125,[[["self"],["quality"]],["bool"]]],[11,"le","","",125,[[["self"],["quality"]],["bool"]]],[11,"gt","","",125,[[["self"],["quality"]],["bool"]]],[11,"ge","","",125,[[["self"],["quality"]],["bool"]]],[11,"from_iter","","",170,[[["i"]],["headers"]]],[11,"peer_addr","rocket::http::hyper::net","",146,[[["self"]],["result",["socketaddr","error"]]]],[11,"set_read_timeout","","",146,[[["self"],["option",["duration"]]],["result",["error"]]]],[11,"set_write_timeout","","",146,[[["self"],["option",["duration"]]],["result",["error"]]]],[11,"close","","",146,[[["self"],["shutdown"]],["result",["error"]]]],[11,"peer_addr","","",143,[[["self"]],["result",["socketaddr","error"]]]],[11,"set_read_timeout","","",143,[[["self"],["option",["duration"]]],["result",["error"]]]],[11,"set_write_timeout","","",143,[[["self"],["option",["duration"]]],["result",["error"]]]],[11,"close","","",143,[[["self"],["shutdown"]],["result",["error"]]]],[11,"next","","",177,[[["self"]],["option",["result"]]]],[11,"as_raw_fd","","",178,[[["self"]],["i32"]]],[11,"as_raw_fd","","",143,[[["self"]],["i32"]]],[11,"drop","rocket::http::hyper","",136,N],[11,"default","rocket::http::hyper::header","",125,[[],["quality"]]],[11,"default","rocket::http::hyper::net","",181,[[],["httpsconnector"]]],[11,"default","","",179,[[],["httpconnector"]]],[11,"write","rocket::http::hyper::h1","",172,N],[11,"flush","","",172,[[["self"]],["result",["error"]]]],[11,"write","rocket::http::hyper::net","",143,N],[11,"flush","","",143,[[["self"]],["result",["error"]]]],[11,"write","rocket::http::hyper::h1","",129,N],[11,"flush","","",129,[[["self"]],["result",["error"]]]],[11,"write","rocket::http::hyper::net","",146,N],[11,"flush","","",146,[[["self"]],["result",["error"]]]],[11,"write","rocket::http::hyper","",136,N],[11,"flush","","",136,[[["self"]],["result",["error"]]]],[11,"description","","",138,[[["self"]],["str"]]],[11,"cause","","",138,[[["self"]],["option",["error"]]]],[11,"from_str","rocket::http::hyper::header","",114,[[["str"]],["result",["qualityitem","error"]]]],[11,"from_str","","",124,[[["str"]],["result",["rangeunit","error"]]]],[11,"from_str","rocket::http::hyper","",147,[[["str"]],["result",["method","error"]]]],[11,"from_str","","",149,[[["str"]],["result",["requesturi","error"]]]],[11,"from_str","rocket::http::hyper::header","",113,[[["str"]],["result",["preference","option"]]]],[11,"from_str","","",77,[[["str"]],["result",["charset","error"]]]],[11,"from_str","","",110,[[["str"]],["result",["protocolname"]]]],[11,"from_str","","",123,[[["str"]],["result",["origin","error"]]]],[11,"from_str","","",112,[[["str"]],["result",["bearer","error"]]]],[11,"from_str","","",73,[[["str"]],["result",["range","error"]]]],[11,"from_str","","",69,[[["str"]],["result",["encoding","error"]]]],[11,"from_str","","",67,[[["str"]],["result",["protocol"]]]],[11,"from_str","","",74,[[["str"]],["result",["stricttransportsecurity","error"]]]],[11,"from_str","","",118,[[["str"]],["result",["byterangespec","error"]]]],[11,"from_str","","",92,[[["str"]],["result",["cachedirective","option"]]]],[11,"from_str","","",71,[[["str"]],["result",["entitytag","error"]]]],[11,"from_str","","",62,[[["str"]],["result",["httpdate","error"]]]],[11,"from_str","","",100,[[["str"]],["result",["host","error"]]]],[11,"from_str","","",127,[[["str"]],["result",["connectionoption"]]]],[11,"from_str","","",87,[[["str"]],["result",["basic","error"]]]],[11,"from_str","","",121,[[["str"]],["result",["contentrangespec","error"]]]],[11,"fmt_header","","",101,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",111,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",102,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",106,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",65,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",85,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",94,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",107,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",97,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",72,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",96,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",120,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",86,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",98,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",108,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",81,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",109,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",103,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",126,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",78,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",116,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",115,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",117,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",75,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",90,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",105,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",70,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",74,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",88,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",119,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",68,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",64,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",80,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",104,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",89,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",100,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",79,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",83,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",171,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",82,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",91,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",123,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",95,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",73,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",99,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",122,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",93,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",63,[[["self"],["formatter"]],["result",["error"]]]],[11,"as_ref","rocket::http::hyper","",147,[[["self"]],["str"]]],[11,"deref","rocket::http::hyper::header","",99,[[["self"]],["s"]]],[11,"deref","","",63,[[["self"]],["u32"]]],[11,"deref","","",116,[[["self"]],["vec"]]],[11,"deref","","",90,[[["self"]],["httpdate"]]],[11,"deref","","",83,[[["self"]],["vec"]]],[11,"deref","","",85,[[["self"]],["httpdate"]]],[11,"deref","","",86,[[["self"]],["vec"]]],[11,"deref","","",75,[[["self"]],["string"]]],[11,"deref","","",91,[[["self"]],["vec"]]],[11,"deref","","",98,[[["self"]],["string"]]],[11,"deref","","",109,[[["self"]],["vec"]]],[11,"deref","","",126,[[["self"]],["vec"]]],[11,"deref","","",78,[[["self"]],["entitytag"]]],[11,"deref","","",105,[[["self"]],["vec"]]],[11,"deref","","",64,[[["self"]],["vec"]]],[11,"deref","","",72,[[["self"]],["httpdate"]]],[11,"deref","","",81,[[["self"]],["string"]]],[11,"deref","","",96,[[["self"]],["mime"]]],[11,"deref","","",104,[[["self"]],["string"]]],[11,"deref","","",115,[[["self"]],["vec"]]],[11,"deref","","",79,[[["self"]],["vec"]]],[11,"deref","","",68,[[["self"]],["vec"]]],[11,"deref","","",111,[[["self"]],["httpdate"]]],[11,"deref","","",80,[[["self"]],["method"]]],[11,"deref","","",88,[[["self"]],["u64"]]],[11,"deref","","",122,[[["self"]],["contentrangespec"]]],[11,"deref","","",102,[[["self"]],["vec"]]],[11,"deref","","",93,[[["self"]],["vec"]]],[11,"deref","","",97,[[["self"]],["httpdate"]]],[11,"deref","","",82,[[["self"]],["vec"]]],[11,"deref","","",89,[[["self"]],["vec"]]],[11,"deref","","",108,[[["self"]],["vec"]]],[11,"deref","","",70,[[["self"]],["vec"]]],[11,"deref","","",106,[[["self"]],["vec"]]],[11,"header_name","","",97,[[],["str"]]],[11,"parse_header","","",97,N],[11,"header_name","","",81,[[],["str"]]],[11,"parse_header","","",81,N],[11,"header_name","","",98,[[],["str"]]],[11,"parse_header","","",98,N],[11,"header_name","","",89,[[],["str"]]],[11,"parse_header","","",89,N],[11,"header_name","","",63,[[],["str"]]],[11,"parse_header","","",63,N],[11,"header_name","","",72,[[],["str"]]],[11,"parse_header","","",72,N],[11,"header_name","","",90,[[],["str"]]],[11,"parse_header","","",90,N],[11,"header_name","","",83,[[],["str"]]],[11,"parse_header","","",83,N],[11,"header_name","","",106,[[],["str"]]],[11,"parse_header","","",106,N],[11,"header_name","","",122,[[],["str"]]],[11,"parse_header","","",122,N],[11,"header_name","","",86,[[],["str"]]],[11,"parse_header","","",86,N],[11,"header_name","","",117,[[],["str"]]],[11,"parse_header","","",117,N],[11,"header_name","","",107,[[],["str"]]],[11,"parse_header","","",107,N],[11,"header_name","","",70,[[],["str"]]],[11,"parse_header","","",70,N],[11,"header_name","","",104,[[],["str"]]],[11,"parse_header","","",104,N],[11,"header_name","","",68,[[],["str"]]],[11,"parse_header","","",68,N],[11,"header_name","","",100,[[],["str"]]],[11,"parse_header","","",100,N],[11,"header_name","","",99,[[],["str"]]],[11,"parse_header","","",99,N],[11,"header_name","","",105,[[],["str"]]],[11,"parse_header","","",105,N],[11,"header_name","","",108,[[],["str"]]],[11,"parse_header","","",108,N],[11,"header_name","","",74,[[],["str"]]],[11,"parse_header","","",74,N],[11,"header_name","","",78,[[],["str"]]],[11,"parse_header","","",78,N],[11,"header_name","","",93,[[],["str"]]],[11,"parse_header","","",93,N],[11,"header_name","","",65,[[],["str"]]],[11,"parse_header","","",65,N],[11,"header_name","","",101,[[],["str"]]],[11,"parse_header","","",101,N],[11,"header_name","","",73,[[],["str"]]],[11,"parse_header","","",73,N],[11,"header_name","","",115,[[],["str"]]],[11,"parse_header","","",115,N],[11,"header_name","","",102,[[],["str"]]],[11,"parse_header","","",102,N],[11,"header_name","","",91,[[],["str"]]],[11,"parse_header","","",91,N],[11,"header_name","","",75,[[],["str"]]],[11,"parse_header","","",75,N],[11,"header_name","","",80,[[],["str"]]],[11,"parse_header","","",80,N],[11,"header_name","","",116,[[],["str"]]],[11,"parse_header","","",116,N],[11,"header_name","","",64,[[],["str"]]],[11,"parse_header","","",64,N],[11,"header_name","","",126,[[],["str"]]],[11,"parse_header","","",126,N],[11,"header_name","","",171,[[],["str"]]],[11,"parse_header","","",171,N],[11,"header_name","","",111,[[],["str"]]],[11,"parse_header","","",111,N],[11,"header_name","","",85,[[],["str"]]],[11,"parse_header","","",85,N],[11,"header_name","","",82,[[],["str"]]],[11,"parse_header","","",82,N],[11,"header_name","","",88,[[],["str"]]],[11,"parse_header","","",88,N],[11,"header_name","","",95,[[],["str"]]],[11,"parse_header","","",95,N],[11,"header_name","","",103,[[],["str"]]],[11,"parse_header","","",103,N],[11,"header_name","","",79,[[],["str"]]],[11,"parse_header","","",79,N],[11,"header_name","","",96,[[],["str"]]],[11,"parse_header","","",96,N],[11,"header_name","","",119,[[],["str"]]],[11,"parse_header","","",119,N],[11,"header_name","","",120,[[],["str"]]],[11,"parse_header","","",120,N],[11,"header_name","","",94,[[],["str"]]],[11,"parse_header","","",94,N],[11,"header_name","","",109,[[],["str"]]],[11,"parse_header","","",109,N],[11,"header_name","","",123,[[],["str"]]],[11,"parse_header","","",123,N],[11,"from","rocket::http::hyper","",138,[[["error"]],["error"]]],[11,"from","","",138,[[["utf8error"]],["error"]]],[11,"from","","",138,[[["fromutf8error"]],["error"]]],[11,"from","","",138,[[["error"]],["error"]]],[11,"from","rocket::http::hyper::net","",178,[[["tcplistener"]],["httplistener"]]],[11,"from","rocket::http::hyper","",138,[[["parseerror"]],["error"]]],[11,"read","rocket::http::hyper::h1","",128,N],[11,"read","rocket::http::hyper::net","",146,N],[11,"read","","",143,N],[11,"read","rocket::http::hyper","",148,N],[11,"read","rocket::http::hyper::h1","",172,N],[11,"extend","rocket::http::hyper::header","",170,N],[11,"hash","rocket::http::hyper","",137,N],[11,"hash","","",147,N],[11,"cmp","rocket::http::hyper::mime","",131,[[["self"],["toplevel"]],["ordering"]]],[11,"cmp","","",132,[[["self"],["value"]],["ordering"]]],[11,"cmp","","",134,[[["self"],["attr"]],["ordering"]]],[11,"cmp","","",133,[[["self"],["mime"]],["ordering"]]],[11,"cmp","","",135,[[["self"],["sublevel"]],["ordering"]]],[11,"eq","","",134,[[["self"],["str"]],["bool"]]],[11,"eq","","",131,[[["self"],["string"]],["bool"]]],[11,"eq","","",131,[[["self"],["str"]],["bool"]]],[11,"eq","","",131,[[["self"],["str"]],["bool"]]],[11,"eq","","",132,[[["self"],["string"]],["bool"]]],[11,"eq","","",131,[[["self"],["toplevel"]],["bool"]]],[11,"eq","","",135,[[["self"],["string"]],["bool"]]],[11,"eq","","",133,[[["self"],["mime"]],["bool"]]],[11,"eq","","",134,[[["self"],["string"]],["bool"]]],[11,"eq","","",135,[[["self"],["str"]],["bool"]]],[11,"eq","","",132,[[["self"],["str"]],["bool"]]],[11,"eq","","",135,[[["self"],["sublevel"]],["bool"]]],[11,"eq","","",135,[[["self"],["str"]],["bool"]]],[11,"eq","","",132,[[["self"],["str"]],["bool"]]],[11,"eq","","",132,[[["self"],["value"]],["bool"]]],[11,"eq","","",134,[[["self"],["attr"]],["bool"]]],[11,"eq","","",134,[[["self"],["str"]],["bool"]]],[11,"fmt","","",134,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",135,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",132,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",131,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",133,[[["self"],["formatter"]],["result",["error"]]]],[11,"from_str","","",134,[[["str"]],["result",["attr"]]]],[11,"from_str","","",132,[[["str"]],["result",["value"]]]],[11,"from_str","","",135,[[["str"]],["result",["sublevel"]]]],[11,"from_str","","",133,[[["str"]],["result",["mime"]]]],[11,"from_str","","",131,[[["str"]],["result",["toplevel"]]]],[11,"fmt","","",132,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",134,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",135,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",133,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",131,[[["self"],["formatter"]],["result",["error"]]]],[11,"deref","","",131,[[["self"]],["str"]]],[11,"deref","","",135,[[["self"]],["str"]]],[11,"deref","","",132,[[["self"]],["str"]]],[11,"deref","","",134,[[["self"]],["str"]]],[11,"clone","","",131,[[["self"]],["toplevel"]]],[11,"clone","","",134,[[["self"]],["attr"]]],[11,"clone","","",132,[[["self"]],["value"]]],[11,"clone","","",133,[[["self"]],["mime"]]],[11,"clone","","",135,[[["self"]],["sublevel"]]],[11,"partial_cmp","","",132,[[["self"],["value"]],["option",["ordering"]]]],[11,"lt","","",132,[[["self"],["value"]],["bool"]]],[11,"le","","",132,[[["self"],["value"]],["bool"]]],[11,"gt","","",132,[[["self"],["value"]],["bool"]]],[11,"ge","","",132,[[["self"],["value"]],["bool"]]],[11,"partial_cmp","","",133,[[["self"],["mime"]],["option",["ordering"]]]],[11,"lt","","",133,[[["self"],["mime"]],["bool"]]],[11,"le","","",133,[[["self"],["mime"]],["bool"]]],[11,"gt","","",133,[[["self"],["mime"]],["bool"]]],[11,"ge","","",133,[[["self"],["mime"]],["bool"]]],[11,"partial_cmp","","",131,[[["self"],["toplevel"]],["option",["ordering"]]]],[11,"lt","","",131,[[["self"],["toplevel"]],["bool"]]],[11,"le","","",131,[[["self"],["toplevel"]],["bool"]]],[11,"gt","","",131,[[["self"],["toplevel"]],["bool"]]],[11,"ge","","",131,[[["self"],["toplevel"]],["bool"]]],[11,"partial_cmp","","",134,[[["self"],["attr"]],["option",["ordering"]]]],[11,"lt","","",134,[[["self"],["attr"]],["bool"]]],[11,"le","","",134,[[["self"],["attr"]],["bool"]]],[11,"gt","","",134,[[["self"],["attr"]],["bool"]]],[11,"ge","","",134,[[["self"],["attr"]],["bool"]]],[11,"partial_cmp","","",135,[[["self"],["sublevel"]],["option",["ordering"]]]],[11,"lt","","",135,[[["self"],["sublevel"]],["bool"]]],[11,"le","","",135,[[["self"],["sublevel"]],["bool"]]],[11,"gt","","",135,[[["self"],["sublevel"]],["bool"]]],[11,"ge","","",135,[[["self"],["sublevel"]],["bool"]]],[11,"hash","","",135,N],[11,"hash","","",132,N],[11,"hash","","",133,N],[11,"hash","","",134,N],[11,"hash","","",131,N],[11,"deserialize","rocket::config","",42,[[["d"]],["result",["value"]]]],[11,"deserialize","","",168,[[["d"]],["result",["datetime"]]]],[11,"serialize","","",42,[[["self"],["s"]],["result"]]],[11,"serialize","","",168,[[["self"],["s"]],["result"]]],[11,"eq","","",42,[[["self"],["value"]],["bool"]]],[11,"ne","","",42,[[["self"],["value"]],["bool"]]],[11,"eq","","",168,[[["self"],["datetime"]],["bool"]]],[11,"ne","","",168,[[["self"],["datetime"]],["bool"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",168,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",168,[[["self"],["formatter"]],["result",["error"]]]],[11,"deserialize_any","","",42,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_enum","","",42,N],[11,"deserialize_option","","",42,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_newtype_struct","","",42,[[["self"],["str"],["v"]],["result",["error"]]]],[11,"deserialize_bool","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_seq","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_map","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",42,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",42,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_struct","","",42,N],[11,"deserialize_tuple","","",42,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_identifier","","",42,[[["self"],["v"]],["result"]]],[11,"clone","","",42,[[["self"]],["value"]]],[11,"clone","","",168,[[["self"]],["datetime"]]],[11,"into_deserializer","","",42,[[["self"]],["value"]]],[11,"index","","",42,[[["self"],["i"]],["value"]]],[11,"index_mut","","",42,[[["self"],["i"]],["value"]]],[11,"from_str","","",42,[[["str"]],["result",["value"]]]],[11,"from_str","","",168,[[["str"]],["result",["datetime","datetimeparseerror"]]]],[11,"from","","",42,[[["u32"]],["value"]]],[11,"from","","",42,[[["str"]],["value"]]],[11,"from","","",42,[[["f32"]],["value"]]],[11,"from","","",42,[[["hashmap",["randomstate"]]],["value"]]],[11,"from","","",42,[[["i64"]],["value"]]],[11,"from","","",42,[[["i8"]],["value"]]],[11,"from","","",42,[[["vec"]],["value"]]],[11,"from","","",42,[[["datetime"]],["value"]]],[11,"from","","",42,[[["bool"]],["value"]]],[11,"from","","",42,[[["f64"]],["value"]]],[11,"from","","",42,[[["u8"]],["value"]]],[11,"from","","",42,[[["i32"]],["value"]]],[11,"from","","",42,[[["btreemap"]],["value"]]],[11,"from","","",42,[[["string"]],["value"]]],[11,"from_segments","rocket::http::uri","",151,[[["segments"]],["result",["segments"]]]],[11,"from_request","rocket::http","",159,[[["request"]],["outcome"]]],[11,"from_request","","",195,[[["request"]],["outcome"]]],[11,"from_request","rocket","",13,[[["request"]],["outcome",["state"]]]],[11,"from_request","rocket::response","",27,[[["request"]],["outcome"]]],[11,"from_query","rocket::request","",6,[[["query"]],["result"]]],[11,"from_query","","",7,[[["query"]],["result"]]],[11,"respond_to","rocket::http","",160,[[["self"],["request"]],["result"]]],[11,"respond_to","rocket::response","",22,[[["self"],["request"]],["result",["response","status"]]]],[11,"respond_to","","",23,[[["self"],["request"]],["result"]]],[11,"respond_to","","",24,[[["self"],["request"]],["result",["response","status"]]]],[11,"respond_to","rocket","This is the identity implementation. It simply returns…",26,[[["self"],["request"]],["result",["response","status"]]]],[11,"respond_to","rocket::response","",27,[[["self"],["request"]],["result",["response","status"]]]],[11,"respond_to","rocket::response::content","",20,[[["self"],["request"]],["result",["response","status"]]]],[11,"respond_to","","",28,[[["self"],["request"]],["result",["response","status"]]]],[11,"respond_to","","",29,[[["self"],["request"]],["result",["response","status"]]]],[11,"respond_to","","",30,[[["self"],["request"]],["result",["response","status"]]]],[11,"respond_to","","",31,[[["self"],["request"]],["result",["response","status"]]]],[11,"respond_to","","",32,[[["self"],["request"]],["result",["response","status"]]]],[11,"respond_to","","",33,[[["self"],["request"]],["result",["response","status"]]]],[11,"respond_to","","",34,[[["self"],["request"]],["result",["response","status"]]]],[11,"respond_to","rocket::response::status","",35,[[["self"],["request"]],["result",["response","status"]]]],[11,"respond_to","","",35,[[["self"],["request"]],["result",["response","status"]]]],[11,"respond_to","","",36,[[["self"],["request"]],["result",["response","status"]]]],[11,"respond_to","","",37,[[["self"],["request"]],["result",["response","status"]]]],[11,"respond_to","","",38,[[["self"],["request"]],["result",["response","status"]]]],[11,"respond_to","","",39,[[["self"],["request"]],["result",["response","status"]]]],[11,"transform","rocket::request","",7,[[["request"],["data"]],["transform",["outcome"]]]],[11,"from_data","","",7,[[["request"],["transformed"]],["outcome"]]],[11,"transform","","",6,[[["request"],["data"]],["transform",["outcome"]]]],[11,"from_data","","",6,[[["request"],["transformed"]],["outcome"]]],[11,"transform","rocket","",49,[[["request"],["data"]],["transform",["outcome"]]]],[11,"from_data","","",49,[[["request"],["transformed"]],["outcome"]]],[11,"info","rocket::fairing","",56,[[["self"]],["info"]]],[11,"on_attach","","",56,[[["self"],["rocket"]],["result",["rocket","rocket"]]]],[11,"on_launch","","",56,[[["self"],["rocket"]]]],[11,"on_request","","",56,[[["self"],["request"],["data"]]]],[11,"on_response","","",56,[[["self"],["request"],["response"]]]],[11,"cmp","rocket","",13,[[["self"],["state"]],["ordering"]]],[11,"cmp","rocket::outcome","",3,[[["self"],["outcome"]],["ordering"]]],[11,"eq","rocket::config","",46,[[["self"],["logginglevel"]],["bool"]]],[11,"eq","rocket::request","",8,[[["self"],["formitem"]],["bool"]]],[11,"ne","","",8,[[["self"],["formitem"]],["bool"]]],[11,"eq","","",9,[[["self"],["formparseerror"]],["bool"]]],[11,"ne","","",9,[[["self"],["formparseerror"]],["bool"]]],[11,"eq","rocket","",13,[[["self"],["state"]],["bool"]]],[11,"ne","","",13,[[["self"],["state"]],["bool"]]],[11,"eq","rocket::response","",21,[[["self"],["body"]],["bool"]]],[11,"ne","","",21,[[["self"],["body"]],["bool"]]],[11,"eq","rocket::response::content","",20,[[["self"],["content"]],["bool"]]],[11,"ne","","",20,[[["self"],["content"]],["bool"]]],[11,"eq","","",28,[[["self"],["json"]],["bool"]]],[11,"ne","","",28,[[["self"],["json"]],["bool"]]],[11,"eq","","",29,[[["self"],["xml"]],["bool"]]],[11,"ne","","",29,[[["self"],["xml"]],["bool"]]],[11,"eq","","",30,[[["self"],["msgpack"]],["bool"]]],[11,"ne","","",30,[[["self"],["msgpack"]],["bool"]]],[11,"eq","","",31,[[["self"],["html"]],["bool"]]],[11,"ne","","",31,[[["self"],["html"]],["bool"]]],[11,"eq","","",32,[[["self"],["plain"]],["bool"]]],[11,"ne","","",32,[[["self"],["plain"]],["bool"]]],[11,"eq","","",33,[[["self"],["css"]],["bool"]]],[11,"ne","","",33,[[["self"],["css"]],["bool"]]],[11,"eq","","",34,[[["self"],["javascript"]],["bool"]]],[11,"ne","","",34,[[["self"],["javascript"]],["bool"]]],[11,"eq","rocket::response::status","",35,[[["self"],["created"]],["bool"]]],[11,"ne","","",35,[[["self"],["created"]],["bool"]]],[11,"eq","","",36,[[["self"],["accepted"]],["bool"]]],[11,"ne","","",36,[[["self"],["accepted"]],["bool"]]],[11,"eq","","",37,[[["self"],["badrequest"]],["bool"]]],[11,"ne","","",37,[[["self"],["badrequest"]],["bool"]]],[11,"eq","","",38,[[["self"],["notfound"]],["bool"]]],[11,"ne","","",38,[[["self"],["notfound"]],["bool"]]],[11,"eq","","",39,[[["self"],["custom"]],["bool"]]],[11,"ne","","",39,[[["self"],["custom"]],["bool"]]],[11,"eq","rocket::outcome","",3,[[["self"],["outcome"]],["bool"]]],[11,"ne","","",3,[[["self"],["outcome"]],["bool"]]],[11,"eq","rocket::config","",44,[[["self"],["configerror"]],["bool"]]],[11,"eq","","",45,[[["self"],["environment"]],["bool"]]],[11,"eq","rocket","",0,[[["self"],["config"]],["bool"]]],[11,"from","rocket::request","",12,[[["rawstr"]],["formitems"]]],[11,"from","","",12,[[["str"]],["formitems"]]],[11,"from","","",12,N],[11,"from","rocket::response","",24,[[["t"]],["self"]]],[11,"from","rocket::error","",61,[[["error"]],["launcherror"]]],[11,"from","","",61,[[["error"]],["launcherror"]]],[11,"from","","",60,N],[11,"from","","",60,[[["error"]],["self"]]],[11,"clone","rocket::config","",46,[[["self"]],["logginglevel"]]],[11,"clone","rocket::local","",4,[[["self"]],["localrequest"]]],[11,"clone","rocket","",11,[[["self"]],["request"]]],[11,"clone","rocket::request","",8,[[["self"]],["formitem"]]],[11,"clone","","",9,[[["self"]],["formparseerror"]]],[11,"clone","","",167,[[["self"]],["query"]]],[11,"clone","rocket::response","",21,[[["self"]],["body"]]],[11,"clone","rocket::response::content","",20,[[["self"]],["content"]]],[11,"clone","","",28,[[["self"]],["json"]]],[11,"clone","","",29,[[["self"]],["xml"]]],[11,"clone","","",30,[[["self"]],["msgpack"]]],[11,"clone","","",31,[[["self"]],["html"]]],[11,"clone","","",32,[[["self"]],["plain"]]],[11,"clone","","",33,[[["self"]],["css"]]],[11,"clone","","",34,[[["self"]],["javascript"]]],[11,"clone","rocket::response::status","",35,[[["self"]],["created"]]],[11,"clone","","",36,[[["self"]],["accepted"]]],[11,"clone","","",37,[[["self"]],["badrequest"]]],[11,"clone","","",38,[[["self"]],["notfound"]]],[11,"clone","","",39,[[["self"]],["custom"]]],[11,"clone","rocket::outcome","",3,[[["self"]],["outcome"]]],[11,"clone","rocket::config","",45,[[["self"]],["environment"]]],[11,"clone","rocket","",0,[[["self"]],["config"]]],[11,"clone","rocket::config","",43,[[["self"]],["configbuilder"]]],[11,"clone","","",47,[[["self"]],["limits"]]],[11,"clone","rocket::fairing","",57,[[["self"]],["kind"]]],[11,"clone","rocket","",1,[[["self"]],["route"]]],[11,"drop","","",49,[[["self"]]]],[11,"drop","rocket::data","",169,[[["self"]]]],[11,"drop","rocket::error","",61,[[["self"]]]],[11,"partial_cmp","rocket","",13,[[["self"],["state"]],["option",["ordering"]]]],[11,"lt","","",13,[[["self"],["state"]],["bool"]]],[11,"le","","",13,[[["self"],["state"]],["bool"]]],[11,"gt","","",13,[[["self"],["state"]],["bool"]]],[11,"ge","","",13,[[["self"],["state"]],["bool"]]],[11,"partial_cmp","rocket::outcome","",3,[[["self"],["outcome"]],["option",["ordering"]]]],[11,"lt","","",3,[[["self"],["outcome"]],["bool"]]],[11,"le","","",3,[[["self"],["outcome"]],["bool"]]],[11,"gt","","",3,[[["self"],["outcome"]],["bool"]]],[11,"ge","","",3,[[["self"],["outcome"]],["bool"]]],[11,"next","rocket::request","",12,[[["self"]],["option"]]],[11,"next","","",167,[[["self"]],["option"]]],[11,"default","rocket","",26,[[],["response"]]],[11,"default","rocket::config","",47,[[],["limits"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","rocket","Pretty prints a Request. This is primarily used by…",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","rocket::outcome","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","rocket::config","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","rocket::error","",59,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",61,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",60,[[["self"],["formatter"]],["result"]]],[11,"fmt","rocket","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","rocket::config","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","rocket::local","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",166,[[["self"],["formatter"]],["result"]]],[11,"fmt","rocket","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","rocket::request","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","rocket","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","rocket::request","",167,[[["self"],["formatter"]],["result"]]],[11,"fmt","rocket::response","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","rocket","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","rocket::response","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","rocket::response::content","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","rocket::response::status","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result"]]],[11,"fmt","rocket::outcome","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","rocket::config","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","rocket","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","rocket::config","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","rocket::fairing","",57,[[["self"],["formatter"]],["result"]]],[11,"fmt","rocket::error","",59,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",61,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",60,[[["self"],["formatter"]],["result"]]],[11,"fmt","rocket","",1,[[["self"],["formatter"]],["result"]]],[11,"from_str","rocket::config","",46,[[["str"]],["result"]]],[11,"from_str","","Parses a configuration environment from a string. Should…",45,[[["str"]],["result"]]],[11,"bitor","rocket::fairing","",57,[[["self"],["self"]],["self"]]],[11,"deref","rocket::local","",166,[[["self"]],["response"]]],[11,"deref","rocket::request","",7,[[["self"]],["t"]]],[11,"deref","","",6,[[["self"]],["t"]]],[11,"deref","rocket","",13,[[["self"]],["t"]]],[11,"deref","rocket::response","",23,[[["self"]],["file"]]],[11,"deref_mut","rocket::local","",166,[[["self"]],["response"]]],[11,"deref_mut","rocket::response","",23,[[["self"]],["file"]]],[11,"hash","rocket::request","",9,N],[11,"hash","rocket","",13,N],[11,"hash","rocket::response","",21,N],[11,"hash","rocket::outcome","",3,N],[11,"hash","rocket::config","",45,N],[11,"into_result","rocket::outcome","",3,[[["self"]],["result"]]],[11,"from_error","","",3,N],[11,"from_ok","","",3,N],[11,"read","rocket::response","",23,N],[11,"read_to_end","","",23,[[["self"],["vec"]],["result",["usize"]]]],[11,"read","rocket::data","",169,N],[11,"write","rocket::response","",23,N],[11,"flush","","",23,[[["self"]],["result"]]],[11,"seek","","",23,[[["self"],["seekfrom"]],["result",["u64"]]]],[11,"description","rocket::config","",44,[[["self"]],["str"]]],[11,"description","rocket::error","",61,[[["self"]],["str"]]],[11,"from_uri_param","rocket::request","",7,N],[11,"from_uri_param","","",6,N],[11,"default","","Returns a default value to be used when the form field…",18,[[],["option"]]],[11,"try_from","rocket::config","Convert a `T` into `toml::Value` which is an enum that can…",42,[[["t"]],["result",["value","error"]]]],[11,"try_into","","Interpret a `toml::Value` as an instance of type `T`.",42,[[["self"]],["result",["error"]]]],[11,"get","","Index into a TOML array or map. A string index can be used…",42,[[["self"],["i"]],["option",["value"]]]],[11,"get_mut","","Mutably index into a TOML array or map. A string index can…",42,[[["self"],["i"]],["option",["value"]]]],[11,"as_integer","","Extracts the integer value if it is an integer.",42,[[["self"]],["option",["i64"]]]],[11,"is_integer","","Tests whether this value is an integer.",42,[[["self"]],["bool"]]],[11,"as_float","","Extracts the float value if it is a float.",42,[[["self"]],["option",["f64"]]]],[11,"is_float","","Tests whether this value is a float.",42,[[["self"]],["bool"]]],[11,"as_bool","","Extracts the boolean value if it is a boolean.",42,[[["self"]],["option",["bool"]]]],[11,"is_bool","","Tests whether this value is a boolean.",42,[[["self"]],["bool"]]],[11,"as_str","","Extracts the string of this value if it is a string.",42,[[["self"]],["option",["str"]]]],[11,"is_str","","Tests if this value is a string.",42,[[["self"]],["bool"]]],[11,"as_datetime","","Extracts the datetime value if it is a datetime.",42,[[["self"]],["option",["datetime"]]]],[11,"is_datetime","","Tests whether this value is a datetime.",42,[[["self"]],["bool"]]],[11,"as_array","","Extracts the array value if it is an array.",42,[[["self"]],["option",["vec"]]]],[11,"as_array_mut","","Extracts the array value if it is an array.",42,[[["self"]],["option",["vec"]]]],[11,"is_array","","Tests whether this value is an array.",42,[[["self"]],["bool"]]],[11,"as_table","","Extracts the table value if it is a table.",42,[[["self"]],["option",["btreemap"]]]],[11,"as_table_mut","","Extracts the table value if it is a table.",42,[[["self"]],["option",["btreemap"]]]],[11,"is_table","","Tests whether this value is a table.",42,[[["self"]],["bool"]]],[11,"same_type","","Tests whether this and another value have the same type.",42,[[["self"],["value"]],["bool"]]],[11,"type_str","","Returns a human-readable representation of the type of…",42,[[["self"]],["str"]]],[11,"new","rocket::http::hyper::header","Creates a new Protocol with the given name and version",67,[[["protocolname"],["option",["string"]]],["protocol"]]],[11,"close","","A constructor to easily create a `Connection: close` header.",68,[[],["connection"]]],[11,"keep_alive","","A constructor to easily create a `Connection: keep-alive`…",68,[[],["connection"]]],[11,"new","","Constructs a new EntityTag. # Panics If the tag contains…",71,[[["bool"],["string"]],["entitytag"]]],[11,"weak","","Constructs a new weak EntityTag. # Panics If the tag…",71,[[["string"]],["entitytag"]]],[11,"strong","","Constructs a new strong EntityTag. # Panics If the tag…",71,[[["string"]],["entitytag"]]],[11,"tag","","Get the tag.",71,[[["self"]],["str"]]],[11,"set_tag","","Set the tag. # Panics If the tag contains invalid…",71,N],[11,"strong_eq","","For strong comparison two entity-tags are equivalent if…",71,[[["self"],["entitytag"]],["bool"]]],[11,"weak_eq","","For weak comparison two entity-tags are equivalent if…",71,[[["self"],["entitytag"]],["bool"]]],[11,"strong_ne","","The inverse of `EntityTag.strong_eq()`.",71,[[["self"],["entitytag"]],["bool"]]],[11,"weak_ne","","The inverse of `EntityTag.weak_eq()`.",71,[[["self"],["entitytag"]],["bool"]]],[11,"bytes","","Get the most common byte range header (\"bytes=from-to\")",73,[[["u64"],["u64"]],["range"]]],[11,"bytes_multi","","Get byte range header with multiple subranges…",73,[[["vec"]],["range"]]],[11,"including_subdomains","","Create an STS header that includes subdomains",74,[[["u64"]],["stricttransportsecurity"]]],[11,"excluding_subdomains","","Create an STS header that excludes subdomains",74,[[["u64"]],["stricttransportsecurity"]]],[11,"new","","Creates a new, empty headers map.",170,[[],["headers"]]],[11,"set","","Set a header field to the corresponding value.",170,N],[11,"get_raw","","Access the raw value of a header.",170,[[["self"],["str"]],["option"]]],[11,"set_raw","","Set the raw value of a header, bypassing any typed headers.",170,N],[11,"append_raw","","Append a value to raw value of this header.",170,N],[11,"remove_raw","","Remove a header set by set_raw",170,N],[11,"get","","Get a reference to the header field's value, if it exists.",170,[[["self"]],["option"]]],[11,"get_mut","","Get a mutable reference to the header field's value, if it…",170,[[["self"]],["option"]]],[11,"has","","Returns a boolean of whether a certain header is in the map.",170,[[["self"]],["bool"]]],[11,"remove","","Removes a header from the map, if one existed. Returns…",170,[[["self"]],["bool"]]],[11,"iter","","Returns an iterator over the header fields.",170,[[["self"]],["headersitems"]]],[11,"len","","Returns the number of headers in the map.",170,[[["self"]],["usize"]]],[11,"clear","","Remove all headers from the map.",170,N],[11,"star","","A constructor to easily create `Accept: */*`.",89,[[],["accept"]]],[11,"json","","A constructor to easily create `Accept: application/json`.",89,[[],["accept"]]],[11,"text","","A constructor to easily create `Accept: text/*`.",89,[[],["accept"]]],[11,"image","","A constructor to easily create `Accept: image/*`.",89,[[],["accept"]]],[11,"json","","A constructor to easily create a `Content-Type:…",96,[[],["contenttype"]]],[11,"plaintext","","A constructor to easily create a `Content-Type:…",96,[[],["contenttype"]]],[11,"html","","A constructor to easily create a `Content-Type: text/html;…",96,[[],["contenttype"]]],[11,"form_url_encoded","","A constructor to easily create a `Content-Type:…",96,[[],["contenttype"]]],[11,"jpeg","","A constructor to easily create a `Content-Type:…",96,[[],["contenttype"]]],[11,"png","","A constructor to easily create a `Content-Type: image/png`…",96,[[],["contenttype"]]],[11,"new","","Creates a new `QualityItem` from an item and a quality.…",114,[[["t"],["quality"]],["qualityitem"]]],[11,"new","","Creates a new `Origin` header.",123,[[["s"],["h"],["option",["u16"]]],["origin"]]],[11,"into_inner","rocket::http::hyper::h1","Consumes the `Http11Message` and returns the underlying…",172,[[["self"]],["box",["networkstream"]]]],[11,"get_ref","","Gets a borrowed reference to the underlying…",172,[[["self"]],["networkstream"]]],[11,"get_mut","","Gets a mutable reference to the underlying…",172,[[["self"]],["networkstream"]]],[11,"with_stream","","Creates a new `Http11Message` that will use the given…",172,[[["box",["networkstream"]]],["http11message"]]],[11,"flush_outgoing","","Flushes the current outgoing content and moves the stream…",172,[[["self"]],["result",["error"]]]],[11,"with_connector","","Creates a new `Http11Protocol` instance that will use the…",173,[[["c"]],["http11protocol"]]],[11,"into_inner","","Unwraps this HttpReader and returns the underlying Reader.",128,[[["self"]],["r"]]],[11,"get_ref","","Gets a borrowed reference to the underlying Reader.",128,[[["self"]],["r"]]],[11,"get_mut","","Gets a mutable reference to the underlying Reader.",128,[[["self"]],["r"]]],[11,"into_inner","","Unwraps the HttpWriter and returns the underlying Writer.",129,[[["self"]],["w"]]],[11,"get_ref","","Access the inner Writer.",129,[[["self"]],["w"]]],[11,"get_mut","","Access the inner Writer mutably.",129,[[["self"]],["w"]]],[11,"end","","Ends the HttpWriter, and returns the underlying Writer.",129,[[["self"]],["result",["enderror"]]]],[11,"as_str","rocket::http::hyper::mime","",131,[[["self"]],["str"]]],[11,"as_str","","",132,[[["self"]],["str"]]],[11,"get_param","","",133,[[["self"],["a"]],["option",["value"]]]],[11,"as_str","","",134,[[["self"]],["str"]]],[11,"as_str","","",135,[[["self"]],["str"]]],[11,"status","rocket::http::hyper","The status of this response.",136,[[["self"]],["statuscode"]]],[11,"headers","","The headers of this response.",136,[[["self"]],["headers"]]],[11,"construct","","Construct a Response from its constituent parts.",136,[[["httpversion"],["httpwriter",["write"]],["statuscode"],["headers"]],["response",["fresh"]]]],[11,"deconstruct","","Deconstruct this Response into its constituent parts.",136,N],[11,"new","","Creates a new Response that can be used to write to a…",136,[[["write"],["headers"]],["response",["fresh"]]]],[11,"send","","Writes the body and ends the response.",136,N],[11,"start","","Consume this Response, writing the Headers and Status and…",136,[[["self"]],["result",["response","error"]]]],[11,"status_mut","","Get a mutable reference to the status.",136,[[["self"]],["statuscode"]]],[11,"headers_mut","","Get a mutable reference to the Headers.",136,[[["self"]],["headers"]]],[11,"end","","Flushes all writing of a response to the client.",136,[[["self"]],["result",["error"]]]],[11,"canonical_reason","","Get the standardised `reason-phrase` for this status code.",137,[[["self"]],["option",["str"]]]],[11,"class","","Determine the class of a status code, based on its first…",137,[[["self"]],["statusclass"]]],[11,"is_informational","","Check if class is Informational.",137,[[["self"]],["bool"]]],[11,"is_success","","Check if class is Success.",137,[[["self"]],["bool"]]],[11,"is_redirection","","Check if class is Redirection.",137,[[["self"]],["bool"]]],[11,"is_client_error","","Check if class is ClientError.",137,[[["self"]],["bool"]]],[11,"is_server_error","","Check if class is ServerError.",137,[[["self"]],["bool"]]],[11,"is_strange_status","","Check if class is NoClass",137,[[["self"]],["bool"]]],[11,"is","rocket::http::hyper::net","Is the underlying type in this trait object a `T`?",141,[[["self"]],["bool"]]],[11,"downcast_ref","","If the underlying type is `T`, get a reference to the…",141,[[["self"]],["option"]]],[11,"downcast_mut","","If the underlying type is `T`, get a mutable reference to…",141,[[["self"]],["option"]]],[11,"downcast","","If the underlying type is `T`, extract it.",141,[[["box",["networkstream"]]],["result",["box","box"]]]],[11,"is","","Is the underlying type in this trait object a `T`?",141,[[["self"]],["bool"]]],[11,"downcast_ref","","If the underlying type is `T`, get a reference to the…",141,[[["self"]],["option"]]],[11,"downcast_mut","","If the underlying type is `T`, get a mutable reference to…",141,[[["self"]],["option"]]],[11,"downcast","","If the underlying type is `T`, extract it.",141,[[["box",["networkstream"]]],["result",["box","box"]]]],[11,"new","","Start listening to an address over HTTP.",178,[[["to"]],["result",["httplistener","error"]]]],[11,"new","","Start listening to an address over HTTPS.",180,[[["to"],["s"]],["result",["httpslistener","error"]]]],[11,"with_listener","","Construct an HttpsListener from a bound `TcpListener`.",180,[[["httplistener"],["s"]],["httpslistener"]]],[11,"new","","Create a new connector using the provided SSL…",181,[[["s"]],["httpsconnector",["httpconnector"]]]],[11,"with_connector","","Create a new connector using the provided SSL…",181,[[["s"],["c"]],["httpsconnector"]]],[11,"safe","rocket::http::hyper","Whether a method is considered \"safe\", meaning the request…",147,[[["self"]],["bool"]]],[11,"idempotent","","Whether a method is considered \"idempotent\", meaning the…",147,[[["self"]],["bool"]]],[11,"new","","Creates a new server with the provided handler.",182,[[["l"]],["server"]]],[11,"keep_alive","","Controls keep-alive for this server.",182,N],[11,"set_read_timeout","","Sets the read timeout for all Request reads.",182,N],[11,"set_write_timeout","","Sets the write timeout for all Response writes.",182,N],[11,"local_addr","","Get the address that the server is listening on.",182,[[["self"]],["result",["socketaddr","error"]]]],[11,"http","","Creates a new server that will handle `HttpStream`s.",182,[[["to"]],["result",["server","error"]]]],[11,"https","","Creates a new server that will handle `HttpStream`s over…",182,[[["a"],["s"]],["result",["server","error"]]]],[11,"handle","","Binds to a socket and starts handling connections.",182,[[["self"],["h"]],["result",["listening","error"]]]],[11,"handle_threads","","Binds to a socket and starts handling connections with the…",182,[[["self"],["h"],["usize"]],["result",["listening","error"]]]],[11,"new","","Create a new Request, reading the StartLine and Headers so…",148,[[["bufreader"],["socketaddr"]],["result",["request","error"]]]],[11,"set_read_timeout","","Set the read timeout of the underlying NetworkStream.",148,[[["self"],["option",["duration"]]],["result",["error"]]]],[11,"downcast_ref","","Get a reference to the underlying `NetworkStream`.",148,[[["self"]],["option"]]],[11,"ssl","","Get a reference to the underlying Ssl stream, if connected…",148,[[["self"]],["option"]]],[11,"deconstruct","","Deconstruct a Request into its constituent parts.",148,N],[11,"index","rocket::http::uri","Returns the byte index into the text where the error…",185,[[["self"]],["option",["usize"]]]],[11,"parse","","Parses the string `string` into an `Authority`. Parsing…",186,[[["str"]],["result",["authority","error"]]]],[11,"user_info","","Returns the user info part of the authority URI, if there…",186,[[["self"]],["option",["str"]]]],[11,"host","","Returns the host part of the authority URI.",186,[[["self"]],["str"]]],[11,"port","","Returns the port part of the authority URI, if there is one.",186,[[["self"]],["option",["u16"]]]],[11,"into_path_buf","","Creates a `PathBuf` from a `Segments` iterator. The…",151,[[["self"],["bool"]],["result",["pathbuf","segmenterror"]]]],[11,"parse","","Parses the string `string` into a `Uri`. Parsing will…",153,[[["str"]],["result",["uri","error"]]]],[11,"origin","","Returns the internal instance of `Origin` if `self` is a…",153,[[["self"]],["option",["origin"]]]],[11,"authority","","Returns the internal instance of `Authority` if `self` is…",153,[[["self"]],["option",["authority"]]]],[11,"absolute","","Returns the internal instance of `Absolute` if `self` is a…",153,[[["self"]],["option",["absolute"]]]],[11,"percent_encode","","Returns a URL-encoded version of the string. Any…",153,[[["str"]],["cow",["str"]]]],[11,"percent_decode","","Returns a URL-decoded version of the string. If the…",153,N],[11,"percent_decode_lossy","","Returns a URL-decoded version of the path. Any invalid…",153,N],[11,"parse","","Parses the string `string` into an `Origin`. Parsing will…",187,[[["str"]],["result",["origin","error"]]]],[11,"parse_owned","","Parses the string `string` into an `Origin`. Parsing will…",187,[[["string"]],["result",["origin","error"]]]],[11,"is_normalized","","Returns `true` if `self` is normalized. Otherwise, returns…",187,[[["self"]],["bool"]]],[11,"to_normalized","","Normalizes `self`.",187,[[["self"]],["origin"]]],[11,"path","","Returns the path part of this URI.",187,[[["self"]],["str"]]],[11,"query","","Returns the query part of this URI without the question…",187,[[["self"]],["option",["str"]]]],[11,"clear_query","","Removes the query part of this URI, if there is any.",187,N],[11,"segments","","Returns an iterator over the segments of the path in this…",187,[[["self"]],["segments"]]],[11,"segment_count","","Returns the number of segments in the URI. Empty segments,…",187,[[["self"]],["usize"]]],[11,"write_raw","","Writes `string` to `self`.",188,[[["self"],["s"]],["result",["error"]]]],[11,"write_value","","Writes the unnamed value `value`. Any nested names are…",188,[[["self"],["t"]],["result",["error"]]]],[11,"refresh","","Refreshes the formatter.",188,N],[11,"write_named_value","","Writes the named value `value` by prefixing `name`…",188,[[["self"],["str"],["t"]],["result",["error"]]]],[11,"parse","","Parses the string `string` into an `Absolute`. Parsing…",189,[[["str"]],["result",["absolute","error"]]]],[11,"scheme","","Returns the scheme part of the absolute URI.",189,[[["self"]],["str"]]],[11,"authority","","Returns the authority part of the absolute URI, if there…",189,[[["self"]],["option",["authority"]]]],[11,"origin","","Returns the origin part of the absolute URI, if there is…",189,[[["self"]],["option",["origin"]]]],[11,"new","rocket::http::uncased","Returns a reference to an `UncasedStr` from an `&str`.",190,[[["str"]],["uncasedstr"]]],[11,"as_str","","Returns `self` as an `&str`.",190,[[["self"]],["str"]]],[11,"into_uncased","","Converts a `Box<UncasedStr>` into an `Uncased` without…",190,[[["box",["uncasedstr"]]],["uncased"]]],[11,"new","","Creates a new `Uncased` string from `string` without…",191,[[["s"]],["uncased"]]],[11,"into_string","","Converts `self` into an owned `String`, allocating if…",191,[[["self"]],["string"]]],[11,"into_boxed_uncased","","Converts `self` into a `Box<UncasedStr>`.",191,[[["self"]],["box",["uncasedstr"]]]],[11,"new","rocket::http","Creates a new `Cookie` with the given name and value.",192,[[["n"],["v"]],["cookie"]]],[11,"named","","Creates a new `Cookie` with the given name and an empty…",192,[[["n"]],["cookie"]]],[11,"build","","Creates a new `CookieBuilder` instance from the given key…",192,[[["n"],["v"]],["cookiebuilder"]]],[11,"parse","","Parses a `Cookie` from the given HTTP cookie header value…",192,[[["s"]],["result",["cookie","parseerror"]]]],[11,"parse_encoded","","Parses a `Cookie` from the given HTTP cookie header value…",192,[[["s"]],["result",["cookie","parseerror"]]]],[11,"encoded","","Wraps `self` in an `EncodedCookie`: a cost-free wrapper…",192,[[["self"]],["encodedcookie"]]],[11,"into_owned","","Converts `self` into a `Cookie` with a static lifetime.…",192,[[["self"]],["cookie"]]],[11,"name","","Returns the name of `self`.",192,[[["self"]],["str"]]],[11,"value","","Returns the value of `self`.",192,[[["self"]],["str"]]],[11,"name_value","","Returns the name and value of `self` as a tuple of `(name,…",192,N],[11,"http_only","","Returns whether this cookie was marked `HttpOnly` or not.…",192,[[["self"]],["option",["bool"]]]],[11,"secure","","Returns whether this cookie was marked `Secure` or not.…",192,[[["self"]],["option",["bool"]]]],[11,"same_site","","Returns the `SameSite` attribute of this cookie if one was…",192,[[["self"]],["option",["samesite"]]]],[11,"max_age","","Returns the specified max-age of the cookie if one was…",192,[[["self"]],["option",["duration"]]]],[11,"path","","Returns the `Path` of the cookie if one was specified.",192,[[["self"]],["option",["str"]]]],[11,"domain","","Returns the `Domain` of the cookie if one was specified.",192,[[["self"]],["option",["str"]]]],[11,"expires","","Returns the `Expires` time of the cookie if one was…",192,[[["self"]],["option",["tm"]]]],[11,"set_name","","Sets the name of `self` to `name`.",192,N],[11,"set_value","","Sets the value of `self` to `value`.",192,N],[11,"set_http_only","","Sets the value of `http_only` in `self` to `value`.",192,N],[11,"set_secure","","Sets the value of `secure` in `self` to `value`.",192,N],[11,"set_same_site","","Sets the value of `same_site` in `self` to `value`.",192,N],[11,"set_max_age","","Sets the value of `max_age` in `self` to `value`.",192,N],[11,"set_path","","Sets the `path` of `self` to `path`.",192,N],[11,"set_domain","","Sets the `domain` of `self` to `domain`.",192,N],[11,"set_expires","","Sets the expires field of `self` to `time`.",192,N],[11,"make_permanent","","Makes `self` a \"permanent\" cookie by extending its…",192,N],[11,"name_raw","","Returns the name of `self` as a string slice of the raw…",192,[[["self"]],["option",["str"]]]],[11,"value_raw","","Returns the value of `self` as a string slice of the raw…",192,[[["self"]],["option",["str"]]]],[11,"path_raw","","Returns the `Path` of `self` as a string slice of the raw…",192,[[["self"]],["option",["str"]]]],[11,"domain_raw","","Returns the `Domain` of `self` as a string slice of the…",192,[[["self"]],["option",["str"]]]],[11,"is_informational","","Returns `true` if `self` is a `StatusClass` of",158,[[["self"]],["bool"]]],[11,"is_success","","Returns `true` if `self` is a `StatusClass` of",158,[[["self"]],["bool"]]],[11,"is_redirection","","Returns `true` if `self` is a `StatusClass` of",158,[[["self"]],["bool"]]],[11,"is_client_error","","Returns `true` if `self` is a `StatusClass` of",158,[[["self"]],["bool"]]],[11,"is_server_error","","Returns `true` if `self` is a `StatusClass` of",158,[[["self"]],["bool"]]],[11,"is_unknown","","Returns `true` if `self` is a `StatusClass` of",158,[[["self"]],["bool"]]],[11,"new","","Creates a new `MediaType` with top-level type `top` and…",193,[[["t"],["s"]],["mediatype"]]],[11,"with_params","","Creates a new `MediaType` with top-level type `top`,…",193,[[["t"],["s"],["p"]],["mediatype"]]],[11,"parse_flexible","","Flexibly parses `name` into a `MediaType` . The parse is…",193,[[["str"]],["option",["mediatype"]]]],[11,"from_extension","","Returns the Media-Type associated with the extension `ext`…",193,[[["str"]],["option",["mediatype"]]]],[11,"top","","Returns the top-level type for this media type. The return…",193,[[["self"]],["uncasedstr"]]],[11,"sub","","Returns the subtype for this media type. The return type,…",193,[[["self"]],["uncasedstr"]]],[11,"specificity","","Returns a `u8` representing how specific the top-level…",193,[[["self"]],["u8"]]],[11,"exact_eq","","Compares `self` with `other` and returns `true` if `self`…",193,[[["self"],["mediatype"]],["bool"]]],[11,"params","","Returns an iterator over the (key, value) pairs of the…",193,N],[18,"Any","","Media Type for any media type: `*/*`. ",193,N],[18,"Binary","","Media Type for binary data: `application/octet-stream`. ",193,N],[18,"HTML","","Media Type for HTML: `text/html; charset=utf-8`. ",193,N],[18,"Plain","","Media Type for plain text: `text/plain; charset=utf-8`. ",193,N],[18,"JSON","","Media Type for JSON: `application/json`. ",193,N],[18,"MsgPack","","Media Type for MsgPack: `application/msgpack`. ",193,N],[18,"Form","","Media Type for forms: `application/x-www-form-urlencoded`. ",193,N],[18,"JavaScript","","Media Type for JavaScript: `application/javascript`. ",193,N],[18,"CSS","","Media Type for CSS: `text/css; charset=utf-8`. ",193,N],[18,"FormData","","Media Type for multipart form data: `multipart/form-data`. ",193,N],[18,"XML","","Media Type for XML: `text/xml; charset=utf-8`. ",193,N],[18,"CSV","","Media Type for CSV: `text/csv; charset=utf-8`. ",193,N],[18,"PNG","","Media Type for PNG: `image/png`. ",193,N],[18,"GIF","","Media Type for GIF: `image/gif`. ",193,N],[18,"BMP","","Media Type for BMP: `image/bmp`. ",193,N],[18,"JPEG","","Media Type for JPEG: `image/jpeg`. ",193,N],[18,"WEBP","","Media Type for WEBP: `image/webp`. ",193,N],[18,"SVG","","Media Type for SVG: `image/svg+xml`. ",193,N],[18,"Icon","","Media Type for Icon: `image/x-icon`. ",193,N],[18,"WEBM","","Media Type for WEBM: `video/webm`. ",193,N],[18,"WEBA","","Media Type for WEBM Audio: `audio/webm`. ",193,N],[18,"OGG","","Media Type for OGG Video: `video/ogg`. ",193,N],[18,"FLAC","","Media Type for FLAC: `audio/flac`. ",193,N],[18,"WAV","","Media Type for WAV: `audio/wav`. ",193,N],[18,"PDF","","Media Type for PDF: `application/pdf`. ",193,N],[18,"TTF","","Media Type for TTF: `application/font-sfnt`. ",193,N],[18,"OTF","","Media Type for OTF: `application/font-sfnt`. ",193,N],[18,"WOFF","","Media Type for WOFF: `application/font-woff`. ",193,N],[18,"WOFF2","","Media Type for WOFF2: `font/woff2`. ",193,N],[18,"JsonApi","","Media Type for JSON API: `application/vnd.api+json`. ",193,N],[18,"WASM","","Media Type for WASM: `application/wasm`. ",193,N],[18,"TIFF","","Media Type for TIFF: `image/tiff`. ",193,N],[18,"AAC","","Media Type for AAC Audio: `audio/aac`. ",193,N],[18,"Calendar","","Media Type for iCalendar: `text/calendar`. ",193,N],[18,"MPEG","","Media Type for MPEG Video: `video/mpeg`. ",193,N],[18,"TAR","","Media Type for tape archive: `application/x-tar`. ",193,N],[18,"GZIP","","Media Type for gzipped binary: `application/gzip`. ",193,N],[18,"MOV","","Media Type for quicktime video: `video/quicktime`. ",193,N],[18,"MP4","","Media Type for MPEG4 Video: `video/mp4`. ",193,N],[18,"ZIP","","Media Type for ZIP archive: `application/zip`. ",193,N],[11,"is_known","","Returns `true` if this MediaType is known to Rocket. In…",193,[[["self"]],["bool"]]],[11,"is_any","","Returns `true` if the top-level and sublevel types of…",193,[[["self"]],["bool"]]],[11,"is_binary","","Returns `true` if the top-level and sublevel types of…",193,[[["self"]],["bool"]]],[11,"is_html","","Returns `true` if the top-level and sublevel types of…",193,[[["self"]],["bool"]]],[11,"is_plain","","Returns `true` if the top-level and sublevel types of…",193,[[["self"]],["bool"]]],[11,"is_json","","Returns `true` if the top-level and sublevel types of…",193,[[["self"]],["bool"]]],[11,"is_msgpack","","Returns `true` if the top-level and sublevel types of…",193,[[["self"]],["bool"]]],[11,"is_form","","Returns `true` if the top-level and sublevel types of…",193,[[["self"]],["bool"]]],[11,"is_javascript","","Returns `true` if the top-level and sublevel types of…",193,[[["self"]],["bool"]]],[11,"is_css","","Returns `true` if the top-level and sublevel types of…",193,[[["self"]],["bool"]]],[11,"is_form_data","","Returns `true` if the top-level and sublevel types of…",193,[[["self"]],["bool"]]],[11,"is_xml","","Returns `true` if the top-level and sublevel types of…",193,[[["self"]],["bool"]]],[11,"is_csv","","Returns `true` if the top-level and sublevel types of…",193,[[["self"]],["bool"]]],[11,"is_png","","Returns `true` if the top-level and sublevel types of…",193,[[["self"]],["bool"]]],[11,"is_gif","","Returns `true` if the top-level and sublevel types of…",193,[[["self"]],["bool"]]],[11,"is_bmp","","Returns `true` if the top-level and sublevel types of…",193,[[["self"]],["bool"]]],[11,"is_jpeg","","Returns `true` if the top-level and sublevel types of…",193,[[["self"]],["bool"]]],[11,"is_webp","","Returns `true` if the top-level and sublevel types of…",193,[[["self"]],["bool"]]],[11,"is_svg","","Returns `true` if the top-level and sublevel types of…",193,[[["self"]],["bool"]]],[11,"is_icon","","Returns `true` if the top-level and sublevel types of…",193,[[["self"]],["bool"]]],[11,"is_webm","","Returns `true` if the top-level and sublevel types of…",193,[[["self"]],["bool"]]],[11,"is_weba","","Returns `true` if the top-level and sublevel types of…",193,[[["self"]],["bool"]]],[11,"is_ogg","","Returns `true` if the top-level and sublevel types of…",193,[[["self"]],["bool"]]],[11,"is_flac","","Returns `true` if the top-level and sublevel types of…",193,[[["self"]],["bool"]]],[11,"is_wav","","Returns `true` if the top-level and sublevel types of…",193,[[["self"]],["bool"]]],[11,"is_pdf","","Returns `true` if the top-level and sublevel types of…",193,[[["self"]],["bool"]]],[11,"is_ttf","","Returns `true` if the top-level and sublevel types of…",193,[[["self"]],["bool"]]],[11,"is_otf","","Returns `true` if the top-level and sublevel types of…",193,[[["self"]],["bool"]]],[11,"is_woff","","Returns `true` if the top-level and sublevel types of…",193,[[["self"]],["bool"]]],[11,"is_woff2","","Returns `true` if the top-level and sublevel types of…",193,[[["self"]],["bool"]]],[11,"is_json_api","","Returns `true` if the top-level and sublevel types of…",193,[[["self"]],["bool"]]],[11,"is_wasm","","Returns `true` if the top-level and sublevel types of…",193,[[["self"]],["bool"]]],[11,"is_tiff","","Returns `true` if the top-level and sublevel types of…",193,[[["self"]],["bool"]]],[11,"is_aac","","Returns `true` if the top-level and sublevel types of…",193,[[["self"]],["bool"]]],[11,"is_ical","","Returns `true` if the top-level and sublevel types of…",193,[[["self"]],["bool"]]],[11,"is_mpeg","","Returns `true` if the top-level and sublevel types of…",193,[[["self"]],["bool"]]],[11,"is_tar","","Returns `true` if the top-level and sublevel types of…",193,[[["self"]],["bool"]]],[11,"is_gzip","","Returns `true` if the top-level and sublevel types of…",193,[[["self"]],["bool"]]],[11,"is_mov","","Returns `true` if the top-level and sublevel types of…",193,[[["self"]],["bool"]]],[11,"is_mp4","","Returns `true` if the top-level and sublevel types of…",193,[[["self"]],["bool"]]],[11,"is_zip","","Returns `true` if the top-level and sublevel types of…",193,[[["self"]],["bool"]]],[11,"supports_payload","","Returns `true` if an HTTP request with the method…",159,[[["self"]],["bool"]]],[11,"as_str","","Returns the string representation of `self`.",159,[[["self"]],["str"]]],[11,"new","","Creates a new `Status` with `code` and `reason`. This…",160,[[["u16"],["str"]],["status"]]],[11,"class","","Returns the class of a given status.",160,[[["self"]],["statusclass"]]],[18,"Continue","","[`Status`] with code  100  and reason  Continue .",160,N],[18,"SwitchingProtocols","","[`Status`] with code  101  and reason  Switching Protocols .",160,N],[18,"Processing","","[`Status`] with code  102  and reason  Processing .",160,N],[18,"Ok","","[`Status`] with code  200  and reason  OK .",160,N],[18,"Created","","[`Status`] with code  201  and reason  Created .",160,N],[18,"Accepted","","[`Status`] with code  202  and reason  Accepted .",160,N],[18,"NonAuthoritativeInformation","","[`Status`] with code 203 and reason Non-Authoritative…",160,N],[18,"NoContent","","[`Status`] with code  204  and reason  No Content .",160,N],[18,"ResetContent","","[`Status`] with code  205  and reason  Reset Content .",160,N],[18,"PartialContent","","[`Status`] with code  206  and reason  Partial Content .",160,N],[18,"MultiStatus","","[`Status`] with code  207  and reason  Multi-Status .",160,N],[18,"AlreadyReported","","[`Status`] with code  208  and reason  Already Reported .",160,N],[18,"ImUsed","","[`Status`] with code  226  and reason  IM Used .",160,N],[18,"MultipleChoices","","[`Status`] with code  300  and reason  Multiple Choices .",160,N],[18,"MovedPermanently","","[`Status`] with code  301  and reason  Moved Permanently .",160,N],[18,"Found","","[`Status`] with code  302  and reason  Found .",160,N],[18,"SeeOther","","[`Status`] with code  303  and reason  See Other .",160,N],[18,"NotModified","","[`Status`] with code  304  and reason  Not Modified .",160,N],[18,"UseProxy","","[`Status`] with code  305  and reason  Use Proxy .",160,N],[18,"TemporaryRedirect","","[`Status`] with code  307  and reason  Temporary Redirect .",160,N],[18,"PermanentRedirect","","[`Status`] with code  308  and reason  Permanent Redirect .",160,N],[18,"BadRequest","","[`Status`] with code  400  and reason  Bad Request .",160,N],[18,"Unauthorized","","[`Status`] with code  401  and reason  Unauthorized .",160,N],[18,"PaymentRequired","","[`Status`] with code  402  and reason  Payment Required .",160,N],[18,"Forbidden","","[`Status`] with code  403  and reason  Forbidden .",160,N],[18,"NotFound","","[`Status`] with code  404  and reason  Not Found .",160,N],[18,"MethodNotAllowed","","[`Status`] with code  405  and reason  Method Not Allowed .",160,N],[18,"NotAcceptable","","[`Status`] with code  406  and reason  Not Acceptable .",160,N],[18,"ProxyAuthenticationRequired","","[`Status`] with code 407 and reason Proxy Authentication…",160,N],[18,"RequestTimeout","","[`Status`] with code  408  and reason  Request Timeout .",160,N],[18,"Conflict","","[`Status`] with code  409  and reason  Conflict .",160,N],[18,"Gone","","[`Status`] with code  410  and reason  Gone .",160,N],[18,"LengthRequired","","[`Status`] with code  411  and reason  Length Required .",160,N],[18,"PreconditionFailed","","[`Status`] with code  412  and reason  Precondition Failed .",160,N],[18,"PayloadTooLarge","","[`Status`] with code  413  and reason  Payload Too Large .",160,N],[18,"UriTooLong","","[`Status`] with code  414  and reason  URI Too Long .",160,N],[18,"UnsupportedMediaType","","[`Status`] with code 415 and reason Unsupported Media Type…",160,N],[18,"RangeNotSatisfiable","","[`Status`] with code 416 and reason Range Not Satisfiable…",160,N],[18,"ExpectationFailed","","[`Status`] with code  417  and reason  Expectation Failed .",160,N],[18,"ImATeapot","","[`Status`] with code  418  and reason  I'm a teapot .",160,N],[18,"MisdirectedRequest","","[`Status`] with code  421  and reason  Misdirected Request .",160,N],[18,"UnprocessableEntity","","[`Status`] with code 422 and reason Unprocessable Entity .…",160,N],[18,"Locked","","[`Status`] with code  423  and reason  Locked .",160,N],[18,"FailedDependency","","[`Status`] with code  424  and reason  Failed Dependency .",160,N],[18,"UpgradeRequired","","[`Status`] with code  426  and reason  Upgrade Required .",160,N],[18,"PreconditionRequired","","[`Status`] with code 428 and reason Precondition Required…",160,N],[18,"TooManyRequests","","[`Status`] with code  429  and reason  Too Many Requests .",160,N],[18,"RequestHeaderFieldsTooLarge","","[`Status`] with code 431 and reason Request Header Fields…",160,N],[18,"UnavailableForLegalReasons","","[`Status`] with code 451 and reason Unavailable For Legal…",160,N],[18,"InternalServerError","","[`Status`] with code 500 and reason Internal Server Error…",160,N],[18,"NotImplemented","","[`Status`] with code  501  and reason  Not Implemented .",160,N],[18,"BadGateway","","[`Status`] with code  502  and reason  Bad Gateway .",160,N],[18,"ServiceUnavailable","","[`Status`] with code  503  and reason  Service Unavailable .",160,N],[18,"GatewayTimeout","","[`Status`] with code  504  and reason  Gateway Timeout .",160,N],[18,"HttpVersionNotSupported","","[`Status`] with code 505 and reason HTTP Version Not…",160,N],[18,"VariantAlsoNegotiates","","[`Status`] with code 506 and reason Variant Also…",160,N],[18,"InsufficientStorage","","[`Status`] with code 507 and reason Insufficient Storage .…",160,N],[18,"LoopDetected","","[`Status`] with code  508  and reason  Loop Detected .",160,N],[18,"NotExtended","","[`Status`] with code  510  and reason  Not Extended .",160,N],[18,"NetworkAuthenticationRequired","","[`Status`] with code 511 and reason Network Authentication…",160,N],[11,"from_code","","Returns a Status given a standard status code `code`. If…",160,[[["u16"]],["option",["status"]]]],[11,"from_str","","Constructs an `&RawStr` from an `&str` at no cost.",194,[[["str"]],["rawstr"]]],[11,"percent_decode","","Returns a percent-decoded version of the string.",194,[[["self"]],["result",["cow","utf8error"]]]],[11,"percent_decode_lossy","","Returns a percent-decoded version of the string. Any…",194,[[["self"]],["cow",["str"]]]],[11,"url_decode","","Returns a URL-decoded version of the string. This is…",194,[[["self"]],["result",["string","utf8error"]]]],[11,"url_decode_lossy","","Returns a URL-decoded version of the string.",194,[[["self"]],["string"]]],[11,"html_escape","","Returns an HTML escaped version of `self`. Allocates only…",194,[[["self"]],["cow",["str"]]]],[11,"as_str","","Converts `self` into an `&str`.",194,[[["self"]],["str"]]],[11,"as_uncased_str","","Converts `self` into an `&UncasedStr`.",194,[[["self"]],["uncasedstr"]]],[11,"get","","Returns a reference to the `Cookie` inside this container…",195,[[["self"],["str"]],["option",["cookie"]]]],[11,"add","","Adds `cookie` to this collection.",195,N],[11,"remove","","Removes `cookie` from this collection and generates a…",195,N],[11,"iter","","Returns an iterator over all of the cookies present in…",195,N],[11,"get_private","","Returns a reference to the `Cookie` inside this collection…",195,[[["self"],["str"]],["option",["cookie"]]]],[11,"add_private","","Adds `cookie` to the collection. The cookie's value is…",195,N],[11,"remove_private","","Removes the private `cookie` from the collection.",195,N],[11,"weight","","Retrieve the weight of the media type, if there is any.",161,[[["self"]],["option",["f32"]]]],[11,"weight_or","","Retrieve the weight of the media type or a given default…",161,[[["self"],["f32"]],["f32"]]],[11,"media_type","","Borrow the internal `MediaType`.",161,[[["self"]],["mediatype"]]],[11,"new","","Returns an empty header collection.",196,[[],["headermap"]]],[11,"contains","","Returns true if `self` contains a header with the name…",196,[[["self"],["str"]],["bool"]]],[11,"len","","Returns the number of values stored in the map.",196,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if there are no headers stored in the map.…",196,[[["self"]],["bool"]]],[11,"get","","Returns an iterator over all of the values stored in…",196,N],[11,"get_one","","Returns the first value stored for the header with name…",196,[[["self"],["str"]],["option",["str"]]]],[11,"replace","","Replace any header that matches the name of `header.name`…",196,[[["self"],["h"]],["bool"]]],[11,"replace_raw","","A convenience method to replace a header using a raw name…",196,[[["self"],["n"],["v"]],["bool"]]],[11,"replace_all","","Replaces all of the values for a header with name `name`…",196,N],[11,"add","","Adds `header` into the map. If a header with `header.name`…",196,N],[11,"add_raw","","A convenience method to add a header using a raw name and…",196,N],[11,"add_all","","Adds all of the values to a header with name `name`. This…",196,N],[11,"remove","","Remove all of the values for header with name `name`.",196,N],[11,"remove_all","","Removes all of the headers stored in this map and returns…",196,[[["self"]],["vec",["header"]]]],[11,"iter","","Returns an iterator over all of the `Header`s stored in…",196,N],[11,"into_iter","","Consumes `self` and returns an iterator over all of the…",196,N],[11,"is_strict","","Returns `true` if `self` is `SameSite::Strict` and `false`…",162,[[["self"]],["bool"]]],[11,"is_lax","","Returns `true` if `self` is `SameSite::Lax` and `false`…",162,[[["self"]],["bool"]]],[11,"is_none","","Returns `true` if `self` is `SameSite::None` and `false`…",162,[[["self"]],["bool"]]],[11,"new","","Constructs a new `Accept` header from one or more media…",197,[[["t"]],["accept"]]],[11,"preferred","","Retrieve the client's preferred media type. This method…",197,[[["self"]],["qmediatype"]]],[11,"first","","Retrieve the first media type in `self`, if any.",197,[[["self"]],["option",["qmediatype"]]]],[11,"iter","","Returns an iterator over all of the (quality) media types…",197,N],[11,"media_types","","Returns an iterator over all of the (bare) media types in…",197,N],[18,"Any","","An `Accept` header with the single media type for any…",197,N],[18,"Binary","","An `Accept` header with the single media type for binary…",197,N],[18,"HTML","","An `Accept` header with the single media type for HTML :…",197,N],[18,"Plain","","An `Accept` header with the single media type for plain…",197,N],[18,"JSON","","An `Accept` header with the single media type for JSON :…",197,N],[18,"MsgPack","","An `Accept` header with the single media type for MsgPack…",197,N],[18,"Form","","An `Accept` header with the single media type for forms :…",197,N],[18,"JavaScript","","An `Accept` header with the single media type for…",197,N],[18,"CSS","","An `Accept` header with the single media type for CSS :…",197,N],[18,"FormData","","An `Accept` header with the single media type for…",197,N],[18,"XML","","An `Accept` header with the single media type for XML :…",197,N],[18,"CSV","","An `Accept` header with the single media type for CSV :…",197,N],[18,"PNG","","An `Accept` header with the single media type for PNG :…",197,N],[18,"GIF","","An `Accept` header with the single media type for GIF :…",197,N],[18,"BMP","","An `Accept` header with the single media type for BMP :…",197,N],[18,"JPEG","","An `Accept` header with the single media type for JPEG :…",197,N],[18,"WEBP","","An `Accept` header with the single media type for WEBP :…",197,N],[18,"SVG","","An `Accept` header with the single media type for SVG :…",197,N],[18,"Icon","","An `Accept` header with the single media type for Icon :…",197,N],[18,"WEBM","","An `Accept` header with the single media type for WEBM :…",197,N],[18,"WEBA","","An `Accept` header with the single media type for WEBM…",197,N],[18,"OGG","","An `Accept` header with the single media type for OGG…",197,N],[18,"FLAC","","An `Accept` header with the single media type for FLAC :…",197,N],[18,"WAV","","An `Accept` header with the single media type for WAV :…",197,N],[18,"PDF","","An `Accept` header with the single media type for PDF :…",197,N],[18,"TTF","","An `Accept` header with the single media type for TTF :…",197,N],[18,"OTF","","An `Accept` header with the single media type for OTF :…",197,N],[18,"WOFF","","An `Accept` header with the single media type for WOFF :…",197,N],[18,"WOFF2","","An `Accept` header with the single media type for WOFF2 :…",197,N],[18,"JsonApi","","An `Accept` header with the single media type for JSON API…",197,N],[18,"WASM","","An `Accept` header with the single media type for WASM :…",197,N],[18,"TIFF","","An `Accept` header with the single media type for TIFF :…",197,N],[18,"AAC","","An `Accept` header with the single media type for AAC…",197,N],[18,"Calendar","","An `Accept` header with the single media type for…",197,N],[18,"MPEG","","An `Accept` header with the single media type for MPEG…",197,N],[18,"TAR","","An `Accept` header with the single media type for tape…",197,N],[18,"GZIP","","An `Accept` header with the single media type for gzipped…",197,N],[18,"MOV","","An `Accept` header with the single media type for…",197,N],[18,"MP4","","An `Accept` header with the single media type for MPEG4…",197,N],[18,"ZIP","","An `Accept` header with the single media type for ZIP…",197,N],[11,"new","","Constructs a new header. This method should be used rarely…",163,[[["n"],["v"]],["header"]]],[11,"name","","Returns the name of this header with casing preserved. To…",163,[[["self"]],["str"]]],[11,"value","","Returns the value of this header.",163,[[["self"]],["str"]]],[11,"new","","Creates a new `ContentType` with top-level type `top` and…",164,[[["t"],["s"]],["contenttype"]]],[11,"parse_flexible","","Flexibly parses `name` into a `ContentType` . The parse is…",164,[[["str"]],["option",["contenttype"]]]],[11,"from_extension","","Returns the Content-Type associated with the extension…",164,[[["str"]],["option",["contenttype"]]]],[11,"with_params","","Creates a new `ContentType` with top-level type `top`,…",164,[[["t"],["s"],["p"]],["contenttype"]]],[11,"media_type","","Borrows the inner `MediaType` of `self`.",164,[[["self"]],["mediatype"]]],[18,"Any","","Content Type for any media type: `*/*`. ",164,N],[18,"Binary","","Content Type for binary data: `application/octet-stream`. ",164,N],[18,"HTML","","Content Type for HTML: `text/html; charset=utf-8`. ",164,N],[18,"Plain","","Content Type for plain text: `text/plain; charset=utf-8`. ",164,N],[18,"JSON","","Content Type for JSON: `application/json`. ",164,N],[18,"MsgPack","","Content Type for MsgPack: `application/msgpack`. ",164,N],[18,"Form","","Content Type for forms:…",164,N],[18,"JavaScript","","Content Type for JavaScript: `application/javascript`. ",164,N],[18,"CSS","","Content Type for CSS: `text/css; charset=utf-8`. ",164,N],[18,"FormData","","Content Type for multipart form data:…",164,N],[18,"XML","","Content Type for XML: `text/xml; charset=utf-8`. ",164,N],[18,"CSV","","Content Type for CSV: `text/csv; charset=utf-8`. ",164,N],[18,"PNG","","Content Type for PNG: `image/png`. ",164,N],[18,"GIF","","Content Type for GIF: `image/gif`. ",164,N],[18,"BMP","","Content Type for BMP: `image/bmp`. ",164,N],[18,"JPEG","","Content Type for JPEG: `image/jpeg`. ",164,N],[18,"WEBP","","Content Type for WEBP: `image/webp`. ",164,N],[18,"SVG","","Content Type for SVG: `image/svg+xml`. ",164,N],[18,"Icon","","Content Type for Icon: `image/x-icon`. ",164,N],[18,"WEBM","","Content Type for WEBM: `video/webm`. ",164,N],[18,"WEBA","","Content Type for WEBM Audio: `audio/webm`. ",164,N],[18,"OGG","","Content Type for OGG Video: `video/ogg`. ",164,N],[18,"FLAC","","Content Type for FLAC: `audio/flac`. ",164,N],[18,"WAV","","Content Type for WAV: `audio/wav`. ",164,N],[18,"PDF","","Content Type for PDF: `application/pdf`. ",164,N],[18,"TTF","","Content Type for TTF: `application/font-sfnt`. ",164,N],[18,"OTF","","Content Type for OTF: `application/font-sfnt`. ",164,N],[18,"WOFF","","Content Type for WOFF: `application/font-woff`. ",164,N],[18,"WOFF2","","Content Type for WOFF2: `font/woff2`. ",164,N],[18,"JsonApi","","Content Type for JSON API: `application/vnd.api+json`. ",164,N],[18,"WASM","","Content Type for WASM: `application/wasm`. ",164,N],[18,"TIFF","","Content Type for TIFF: `image/tiff`. ",164,N],[18,"AAC","","Content Type for AAC Audio: `audio/aac`. ",164,N],[18,"Calendar","","Content Type for iCalendar: `text/calendar`. ",164,N],[18,"MPEG","","Content Type for MPEG Video: `video/mpeg`. ",164,N],[18,"TAR","","Content Type for tape archive: `application/x-tar`. ",164,N],[18,"GZIP","","Content Type for gzipped binary: `application/gzip`. ",164,N],[18,"MOV","","Content Type for quicktime video: `video/quicktime`. ",164,N],[18,"MP4","","Content Type for MPEG4 Video: `video/mp4`. ",164,N],[18,"ZIP","","Content Type for ZIP archive: `application/zip`. ",164,N]],"paths":[[3,"Config"],[3,"Route"],[3,"Catcher"],[4,"Outcome"],[3,"LocalRequest"],[3,"Client"],[3,"Form"],[3,"LenientForm"],[3,"FormItem"],[4,"FormParseError"],[4,"FormDataError"],[3,"Request"],[4,"FormItems"],[3,"State"],[8,"FromRequest"],[8,"FromParam"],[8,"FromSegments"],[8,"FromForm"],[8,"FromFormValue"],[8,"FromQuery"],[3,"Content"],[4,"Body"],[3,"Redirect"],[3,"NamedFile"],[3,"Stream"],[3,"ResponseBuilder"],[3,"Response"],[3,"Flash"],[3,"Json"],[3,"Xml"],[3,"MsgPack"],[3,"Html"],[3,"Plain"],[3,"Css"],[3,"JavaScript"],[3,"Created"],[3,"Accepted"],[3,"BadRequest"],[3,"NotFound"],[3,"Custom"],[8,"Responder"],[8,"IntoOutcome"],[4,"Value"],[3,"ConfigBuilder"],[4,"ConfigError"],[4,"Environment"],[4,"LoggingLevel"],[3,"Limits"],[4,"Transform"],[3,"Data"],[8,"FromData"],[8,"FromDataSimple"],[8,"Handler"],[8,"Cloneable"],[6,"Outcome"],[3,"Info"],[3,"AdHoc"],[3,"Kind"],[8,"Fairing"],[4,"LaunchErrorKind"],[4,"RouteUriError"],[3,"LaunchError"],[3,"HttpDate"],[3,"AccessControlMaxAge"],[3,"AcceptCharset"],[4,"Pragma"],[8,"Scheme"],[3,"Protocol"],[3,"Connection"],[4,"Encoding"],[3,"AccessControlExposeHeaders"],[3,"EntityTag"],[3,"LastModified"],[4,"Range"],[3,"StrictTransportSecurity"],[3,"From"],[4,"DispositionType"],[4,"Charset"],[3,"ETag"],[3,"AcceptRanges"],[3,"AccessControlRequestMethod"],[3,"Referer"],[3,"ContentLanguage"],[3,"Prefer"],[4,"DispositionParam"],[3,"Date"],[3,"AcceptLanguage"],[3,"Basic"],[3,"ContentLength"],[3,"Accept"],[3,"IfModifiedSince"],[3,"AccessControlRequestHeaders"],[4,"CacheDirective"],[3,"AcceptEncoding"],[4,"Expect"],[4,"AccessControlAllowOrigin"],[3,"ContentType"],[3,"Expires"],[3,"Location"],[3,"Authorization"],[3,"Host"],[4,"IfRange"],[3,"Allow"],[4,"Vary"],[3,"UserAgent"],[3,"CacheControl"],[3,"AccessControlAllowMethods"],[4,"IfNoneMatch"],[3,"PreferenceApplied"],[3,"Upgrade"],[4,"ProtocolName"],[3,"IfUnmodifiedSince"],[3,"Bearer"],[4,"Preference"],[3,"QualityItem"],[3,"ContentEncoding"],[3,"AccessControlAllowHeaders"],[4,"IfMatch"],[4,"ByteRangeSpec"],[4,"ReferrerPolicy"],[3,"ContentDisposition"],[4,"ContentRangeSpec"],[3,"ContentRange"],[3,"Origin"],[4,"RangeUnit"],[3,"Quality"],[3,"TransferEncoding"],[4,"ConnectionOption"],[4,"HttpReader"],[4,"HttpWriter"],[3,"Incoming"],[4,"TopLevel"],[4,"Value"],[3,"Mime"],[4,"Attr"],[4,"SubLevel"],[3,"Response"],[4,"StatusCode"],[4,"Error"],[8,"Handler"],[8,"NetworkListener"],[8,"NetworkStream"],[8,"NetworkConnector"],[3,"HttpStream"],[8,"SslClient"],[8,"SslServer"],[4,"HttpsStream"],[4,"Method"],[3,"Request"],[4,"RequestUri"],[8,"UriPart"],[3,"Segments"],[4,"SegmentError"],[4,"Uri"],[8,"FromUriParam"],[8,"UriDisplay"],[8,"IntoCollection"],[8,"IntoOwned"],[4,"StatusClass"],[4,"Method"],[3,"Status"],[3,"QMediaType"],[4,"SameSite"],[3,"Header"],[3,"ContentType"],[3,"Rocket"],[3,"LocalResponse"],[3,"Query"],[3,"Datetime"],[3,"DataStream"],[3,"Headers"],[3,"AccessControlAllowCredentials"],[3,"Http11Message"],[3,"Http11Protocol"],[3,"EndError"],[4,"Fresh"],[4,"Streaming"],[3,"NetworkConnections"],[3,"HttpListener"],[3,"HttpConnector"],[3,"HttpsListener"],[3,"HttpsConnector"],[3,"Server"],[4,"Path"],[4,"Query"],[3,"Error"],[3,"Authority"],[3,"Origin"],[3,"Formatter"],[3,"Absolute"],[3,"UncasedStr"],[3,"Uncased"],[3,"Cookie"],[3,"MediaType"],[3,"RawStr"],[4,"Cookies"],[3,"HeaderMap"],[3,"Accept"]]};
searchIndex["rocket_codegen"]={"doc":"Rocket - Code Generation","items":[[23,"route","rocket_codegen","Attribute to generate a [`Route`] and associated metadata.",N,N],[23,"get","","Attribute to generate a [`Route`] and associated metadata.",N,N],[23,"put","","Attribute to generate a [`Route`] and associated metadata.",N,N],[23,"post","","Attribute to generate a [`Route`] and associated metadata.",N,N],[23,"delete","","Attribute to generate a [`Route`] and associated metadata.",N,N],[23,"head","","Attribute to generate a [`Route`] and associated metadata.",N,N],[23,"patch","","Attribute to generate a [`Route`] and associated metadata.",N,N],[23,"options","","Attribute to generate a [`Route`] and associated metadata.",N,N],[23,"catch","","Attribute to generate a [`Catcher`] and associated metadata.",N,N],[24,"FromFormValue","","Derive for the [`FromFormValue`] trait.",N,N],[24,"FromForm","","Derive for the [`FromForm`] trait.",N,N],[24,"Responder","","Derive for the [`Responder`] trait.",N,N],[24,"UriDisplayQuery","","Derive for the [`UriDisplay<Query>`] trait.",N,N],[24,"UriDisplayPath","","Derive for the [`UriDisplay<Path>`] trait.",N,N],[14,"routes","","Generates a [`Vec`] of [`Route`]s from a set of route paths.",N,N],[14,"catchers","","Generates a [`Vec`] of [`Catcher`]s from a set of catcher…",N,N],[14,"uri","","Type safe generation of route URIs.",N,N]],"paths":[]};
searchIndex["rocket_contrib"]={"doc":"This crate contains officially sanctioned contributor…","items":[[0,"json","rocket_contrib","Automatic JSON (de)serialization support.",N,N],[3,"Json","rocket_contrib::json","The JSON type: implements [`FromData`] and [`Responder`],…",N,N],[12,"0","","",0,N],[3,"JsonValue","","An arbitrary JSON value.",N,N],[12,"0","","",1,N],[4,"JsonError","","An error returned by the [`Json`] data guard when incoming…",N,N],[13,"Io","","An I/O error occurred while reading the incoming request…",2,N],[13,"Parse","","The client's data was received successfully but failed to…",2,N],[11,"into_inner","","Consumes the JSON wrapper and returns the wrapped item.",0,[[["self"]],["t"]]],[0,"serve","rocket_contrib","Custom handler and options for static file serving.",N,N],[3,"Options","rocket_contrib::serve","A bitset representing configurable options for the…",N,N],[3,"StaticFiles","","Custom handler for serving static files.",N,N],[18,"None","","`Options` representing the empty set. No dotfiles or index…",3,N],[18,"Index","","`Options` enabling responding to requests for a directory…",3,N],[18,"DotFiles","","`Options` enabling returning dot files. When this is…",3,N],[11,"contains","","Returns `true` if `self` is a superset of `other`. In…",3,[[["self"],["options"]],["bool"]]],[11,"from","","Constructs a new `StaticFiles` that serves files from the…",4,[[["p"]],["self"]]],[11,"new","","Constructs a new `StaticFiles` that serves files from the…",4,[[["p"],["options"]],["self"]]],[14,"json","rocket_contrib","A macro to create ad-hoc JSON serializable values using…",N,N],[11,"from","rocket_contrib::json","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"transform","","",0,[[["request"],["data"]],["transform",["outcome","outcome"]]]],[11,"from_data","","",0,[[["request"],["transform",["outcome","outcome"]]],["outcome",["data"]]]],[11,"into_collection","","",0,[[["self"]],["smallvec"]]],[11,"mapped","","",0,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",0,[[["self"]],["result",["parseerr"]]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into_collection","","",1,[[["self"]],["smallvec"]]],[11,"mapped","","",1,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",1,[[["self"]],["result",["parseerr"]]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into_collection","","",2,[[["self"]],["smallvec"]]],[11,"mapped","","",2,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",2,[[["self"]],["result",["parseerr"]]]],[11,"from","rocket_contrib::serve","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into_collection","","",3,[[["self"]],["smallvec"]]],[11,"mapped","","",3,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",3,[[["self"]],["result",["parseerr"]]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"handle","","",4,[[["self"],["request"],["data"]],["outcome",["response","status","data"]]]],[11,"clone_handler","","",4,[[["self"]],["box",["handler"]]]],[11,"into_collection","","",4,[[["self"]],["smallvec"]]],[11,"mapped","","",4,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",4,[[["self"]],["result",["parseerr"]]]],[11,"eq","rocket_contrib::json","",1,[[["self"],["jsonvalue"]],["bool"]]],[11,"ne","","",1,[[["self"],["jsonvalue"]],["bool"]]],[11,"from","","",1,[[["value"]],["jsonvalue"]]],[11,"clone","","",1,[[["self"]],["jsonvalue"]]],[11,"clone","rocket_contrib::serve","",3,[[["self"]],["options"]]],[11,"clone","","",4,[[["self"]],["staticfiles"]]],[11,"into","rocket_contrib::json","",1,[[["self"]],["value"]]],[11,"into","rocket_contrib::serve","",4,[[["self"]],["vec",["route"]]]],[11,"default","rocket_contrib::json","",1,[[],["jsonvalue"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","rocket_contrib::serve","",3,[[["self"],["formatter"]],["result"]]],[11,"bitor","","",3,[[["self"],["self"]],["self"]]],[11,"deref","rocket_contrib::json","",0,[[["self"]],["t"]]],[11,"deref","","",1,N],[11,"deref_mut","","",0,[[["self"]],["t"]]],[11,"deref_mut","","",1,N],[11,"transform","","",0,[[["request"],["data"]],["transform",["outcome"]]]],[11,"from_data","","",0,[[["request"],["transformed"]],["outcome"]]],[11,"respond_to","","",0,[[["self"],["request"]],["result"]]],[11,"respond_to","","",1,[[["self"],["request"]],["result"]]],[11,"serialize","","",1,[[["self"],["s"]],["result"]]],[11,"deserialize","","",1,[[["d"]],["result"]]],[11,"handle","rocket_contrib::serve","",4,[[["self"],["request"],["data"]],["outcome"]]]],"paths":[[3,"Json"],[3,"JsonValue"],[4,"JsonError"],[3,"Options"],[3,"StaticFiles"]]};
searchIndex["rocket_http"]={"doc":"Types that map to concepts in HTTP.","items":[[3,"Cookie","rocket_http","Representation of an HTTP cookie.",N,N],[4,"SameSite","","The `SameSite` cookie attribute.",N,N],[13,"Strict","","The \"Strict\" `SameSite` attribute.",0,N],[13,"Lax","","The \"Lax\" `SameSite` attribute.",0,N],[13,"None","","No `SameSite` attribute.",0,N],[3,"ContentType","","Representation of HTTP Content-Types.",N,N],[12,"0","","",1,N],[3,"Accept","","The HTTP Accept header.",N,N],[3,"QMediaType","","A `MediaType` with an associated quality value.",N,N],[12,"0","","",2,N],[12,"1","","",2,N],[3,"Status","","Structure representing an HTTP status: an integer code and…",N,N],[12,"code","","The HTTP status code associated with this status.",3,N],[12,"reason","","The HTTP reason phrase associated with this status.",3,N],[3,"Header","","Simple representation of an HTTP header.",N,N],[12,"name","","The name of the header.",4,N],[12,"value","","The value of the header.",4,N],[3,"HeaderMap","","A collection of headers, mapping a header name to its many…",N,N],[3,"RawStr","","A reference to a string inside of a raw HTTP message.",N,N],[3,"MediaType","","An HTTP media type.",N,N],[4,"Method","","Representation of HTTP methods.",N,N],[13,"Get","","",5,N],[13,"Put","","",5,N],[13,"Post","","",5,N],[13,"Delete","","",5,N],[13,"Options","","",5,N],[13,"Head","","",5,N],[13,"Trace","","",5,N],[13,"Connect","","",5,N],[13,"Patch","","",5,N],[4,"StatusClass","","Enumeration of HTTP status classes.",N,N],[13,"Informational","","Indicates a provisional response: a status code of 1XX.",6,N],[13,"Success","","Indicates that a request has succeeded: a status code of…",6,N],[13,"Redirection","","Indicates that further action needs to be taken by the…",6,N],[13,"ClientError","","Intended for cases in which the client seems to have…",6,N],[13,"ServerError","","Indicates cases in which the server is aware that it has…",6,N],[13,"Unknown","","Indicates that the status code is nonstandard and unknown:…",6,N],[4,"Cookies","","Collection of one or more HTTP cookies.",N,N],[0,"hyper","","Re-exported hyper HTTP library types.",N,N],[0,"mime","rocket_http::hyper","Re-exporting the mime crate, for convenience.",N,N],[4,"TopLevel","rocket_http::hyper::mime","",N,N],[13,"Star","","",7,N],[13,"Text","","",7,N],[13,"Image","","",7,N],[13,"Audio","","",7,N],[13,"Video","","",7,N],[13,"Application","","",7,N],[13,"Multipart","","",7,N],[13,"Message","","",7,N],[13,"Model","","",7,N],[13,"Ext","","",7,N],[6,"Param","","",N,N],[4,"Value","","",N,N],[13,"Utf8","","",8,N],[13,"Ext","","",8,N],[3,"Mime","","Mime, or Media Type. Encapsulates common registers types.",N,N],[12,"0","","",9,N],[12,"1","","",9,N],[12,"2","","",9,N],[14,"mime","","Easily create a Mime without having to import so many enums.",N,N],[4,"Attr","","",N,N],[13,"Charset","","",10,N],[13,"Boundary","","",10,N],[13,"Q","","",10,N],[13,"Ext","","",10,N],[4,"SubLevel","","",N,N],[13,"Star","","",11,N],[13,"Plain","","",11,N],[13,"Html","","",11,N],[13,"Xml","","",11,N],[13,"Javascript","","",11,N],[13,"Css","","",11,N],[13,"EventStream","","",11,N],[13,"Json","","",11,N],[13,"WwwFormUrlEncoded","","",11,N],[13,"Msgpack","","",11,N],[13,"OctetStream","","",11,N],[13,"FormData","","",11,N],[13,"Png","","",11,N],[13,"Gif","","",11,N],[13,"Bmp","","",11,N],[13,"Jpeg","","",11,N],[13,"Mpeg","","",11,N],[13,"Mp4","","",11,N],[13,"Ogg","","",11,N],[13,"Ext","","",11,N],[0,"header","rocket_http::hyper","Reexported Hyper header types.",N,N],[3,"Accept","rocket_http::hyper::header","`Accept` header, defined in RFC7231",N,N],[12,"0","","",12,N],[3,"AcceptCharset","","`Accept-Charset` header, defined in RFC7231",N,N],[12,"0","","",13,N],[3,"AcceptEncoding","","`Accept-Encoding` header, defined in RFC7231",N,N],[12,"0","","",14,N],[3,"AcceptLanguage","","`Accept-Language` header, defined in RFC7231",N,N],[12,"0","","",15,N],[3,"AcceptRanges","","`Accept-Ranges` header, defined in RFC7233",N,N],[12,"0","","",16,N],[3,"AccessControlAllowCredentials","","`Access-Control-Allow-Credentials` header, part of CORS",N,N],[3,"AccessControlAllowHeaders","","`Access-Control-Allow-Headers` header, part of CORS",N,N],[12,"0","","",17,N],[3,"AccessControlAllowMethods","","`Access-Control-Allow-Methods` header, part of CORS",N,N],[12,"0","","",18,N],[3,"AccessControlExposeHeaders","","`Access-Control-Expose-Headers` header, part of CORS",N,N],[12,"0","","",19,N],[3,"AccessControlMaxAge","","`Access-Control-Max-Age` header, part of CORS",N,N],[12,"0","","",20,N],[3,"AccessControlRequestHeaders","","`Access-Control-Request-Headers` header, part of CORS",N,N],[12,"0","","",21,N],[3,"AccessControlRequestMethod","","`Access-Control-Request-Method` header, part of CORS",N,N],[12,"0","","",22,N],[3,"Allow","","`Allow` header, defined in RFC7231",N,N],[12,"0","","",23,N],[3,"Authorization","","`Authorization` header, defined in RFC7235",N,N],[12,"0","","",24,N],[3,"Basic","","Credential holder for Basic Authentication",N,N],[12,"username","","The username as a possibly empty string",25,N],[12,"password","","The password. `None` if the `:` delimiter character was…",25,N],[3,"Bearer","","Token holder for Bearer Authentication, most often seen…",N,N],[12,"token","","Actual bearer token as a string",26,N],[3,"CacheControl","","`Cache-Control` header, defined in RFC7234",N,N],[12,"0","","",27,N],[3,"Connection","","`Connection` header, defined in RFC7230",N,N],[12,"0","","",28,N],[3,"ContentDisposition","","A `Content-Disposition` header, (re)defined in RFC6266",N,N],[12,"disposition","","The disposition",29,N],[12,"parameters","","Disposition parameters",29,N],[3,"ContentEncoding","","`Content-Encoding` header, defined in RFC7231",N,N],[12,"0","","",30,N],[3,"ContentLanguage","","`Content-Language` header, defined in RFC7231",N,N],[12,"0","","",31,N],[3,"ContentLength","","`Content-Length` header, defined in RFC7230",N,N],[12,"0","","",32,N],[3,"ContentRange","","`Content-Range` header, defined in RFC7233",N,N],[12,"0","","",33,N],[3,"ContentType","","`Content-Type` header, defined in RFC7231",N,N],[12,"0","","",34,N],[3,"Date","","`Date` header, defined in RFC7231",N,N],[12,"0","","",35,N],[3,"ETag","","`ETag` header, defined in RFC7232",N,N],[12,"0","","",36,N],[3,"EntityTag","","An entity tag, defined in RFC7232",N,N],[12,"weak","","Weakness indicator for the tag",37,N],[3,"Expires","","`Expires` header, defined in RFC7234",N,N],[12,"0","","",38,N],[3,"From","","`From` header, defined in RFC7231",N,N],[12,"0","","",39,N],[3,"Headers","","A map of header fields on requests and responses.",N,N],[3,"Host","","The `Host` header.",N,N],[12,"hostname","","The hostname, such a example.domain.",40,N],[12,"port","","An optional port number.",40,N],[3,"HttpDate","","A `time::Time` with HTTP formatting and parsing",N,N],[12,"0","","",41,N],[3,"IfModifiedSince","","`If-Modified-Since` header, defined in RFC7232",N,N],[12,"0","","",42,N],[3,"IfUnmodifiedSince","","`If-Unmodified-Since` header, defined in RFC7232",N,N],[12,"0","","",43,N],[3,"LastModified","","`Last-Modified` header, defined in RFC7232",N,N],[12,"0","","",44,N],[3,"Location","","`Location` header, defined in RFC7231",N,N],[12,"0","","",45,N],[3,"Origin","","The `Origin` header.",N,N],[12,"scheme","","The scheme, such as http or https",46,N],[12,"host","","The host, such as Host{hostname: \"hyper.rs\".to_owned(),…",46,N],[3,"Prefer","","`Prefer` header, defined in RFC7240",N,N],[12,"0","","",47,N],[3,"PreferenceApplied","","`Preference-Applied` header, defined in RFC7240",N,N],[12,"0","","",48,N],[3,"Protocol","","Protocols that appear in the `Upgrade` header field",N,N],[12,"name","","The protocol identifier",49,N],[12,"version","","The optional version of the protocol, often in the format…",49,N],[3,"Quality","","Represents a quality used in quality values.",N,N],[12,"0","","",50,N],[3,"QualityItem","","Represents an item with a quality value as defined in…",N,N],[12,"item","","The actual contents of the field.",51,N],[12,"quality","","The quality (client or server preference) for the value.",51,N],[3,"Referer","","`Referer` header, defined in RFC7231",N,N],[12,"0","","",52,N],[3,"StrictTransportSecurity","","`StrictTransportSecurity` header, defined in RFC6797",N,N],[12,"include_subdomains","","Signals the UA that the HSTS Policy applies to this HSTS…",53,N],[12,"max_age","","Specifies the number of seconds, after the reception of…",53,N],[3,"TransferEncoding","","`Transfer-Encoding` header, defined in RFC7230",N,N],[12,"0","","",54,N],[3,"Upgrade","","`Upgrade` header, defined in RFC7230",N,N],[12,"0","","",55,N],[3,"UserAgent","","`User-Agent` header, defined in RFC7231",N,N],[12,"0","","",56,N],[4,"AccessControlAllowOrigin","","The `Access-Control-Allow-Origin` response header, part of…",N,N],[13,"Any","","Allow all origins",57,N],[13,"Null","","A hidden origin",57,N],[13,"Value","","Allow one particular origin",57,N],[4,"ByteRangeSpec","","Each `Range::Bytes` header can contain one or more…",N,N],[13,"FromTo","","Get all bytes between x and y (\"x-y\")",58,N],[13,"AllFrom","","Get all bytes starting from x (\"x-\")",58,N],[13,"Last","","Get last x bytes (\"-x\")",58,N],[4,"CacheDirective","","`CacheControl` contains a list of these directives.",N,N],[13,"NoCache","","\"no-cache\"",59,N],[13,"NoStore","","\"no-store\"",59,N],[13,"NoTransform","","\"no-transform\"",59,N],[13,"OnlyIfCached","","\"only-if-cached\"",59,N],[13,"MaxAge","","\"max-age=delta\"",59,N],[13,"MaxStale","","\"max-stale=delta\"",59,N],[13,"MinFresh","","\"min-fresh=delta\"",59,N],[13,"MustRevalidate","","\"must-revalidate\"",59,N],[13,"Public","","\"public\"",59,N],[13,"Private","","\"private\"",59,N],[13,"ProxyRevalidate","","\"proxy-revalidate\"",59,N],[13,"SMaxAge","","\"s-maxage=delta\"",59,N],[13,"Extension","","Extension directives. Optionally include an argument.",59,N],[4,"Charset","","A Mime charset.",N,N],[13,"Us_Ascii","","US ASCII",60,N],[13,"Iso_8859_1","","ISO-8859-1",60,N],[13,"Iso_8859_2","","ISO-8859-2",60,N],[13,"Iso_8859_3","","ISO-8859-3",60,N],[13,"Iso_8859_4","","ISO-8859-4",60,N],[13,"Iso_8859_5","","ISO-8859-5",60,N],[13,"Iso_8859_6","","ISO-8859-6",60,N],[13,"Iso_8859_7","","ISO-8859-7",60,N],[13,"Iso_8859_8","","ISO-8859-8",60,N],[13,"Iso_8859_9","","ISO-8859-9",60,N],[13,"Iso_8859_10","","ISO-8859-10",60,N],[13,"Shift_Jis","","Shift_JIS",60,N],[13,"Euc_Jp","","EUC-JP",60,N],[13,"Iso_2022_Kr","","ISO-2022-KR",60,N],[13,"Euc_Kr","","EUC-KR",60,N],[13,"Iso_2022_Jp","","ISO-2022-JP",60,N],[13,"Iso_2022_Jp_2","","ISO-2022-JP-2",60,N],[13,"Iso_8859_6_E","","ISO-8859-6-E",60,N],[13,"Iso_8859_6_I","","ISO-8859-6-I",60,N],[13,"Iso_8859_8_E","","ISO-8859-8-E",60,N],[13,"Iso_8859_8_I","","ISO-8859-8-I",60,N],[13,"Gb2312","","GB2312",60,N],[13,"Big5","","Big5",60,N],[13,"Koi8_R","","KOI8-R",60,N],[13,"Ext","","An arbitrary charset specified as a string",60,N],[4,"ConnectionOption","","Values that can be in the `Connection` header.",N,N],[13,"KeepAlive","","The `keep-alive` connection value.",61,N],[13,"Close","","The `close` connection value.",61,N],[13,"ConnectionHeader","","Values in the Connection header that are supposed to be…",61,N],[4,"ContentRangeSpec","","Content-Range, described in RFC7233",N,N],[13,"Bytes","","Byte range",62,N],[12,"range","rocket_http::hyper::header::ContentRangeSpec","First and last bytes of the range, omitted if request…",62,N],[12,"instance_length","","Total length of the instance, can be omitted if unknown",62,N],[13,"Unregistered","rocket_http::hyper::header","Custom range, with unit not registered at IANA",62,N],[12,"unit","rocket_http::hyper::header::ContentRangeSpec","other-range-unit",62,N],[12,"resp","","other-range-resp",62,N],[4,"DispositionParam","rocket_http::hyper::header","A parameter to the disposition type",N,N],[13,"Filename","","A Filename consisting of a Charset, an optional…",63,N],[13,"Ext","","Extension type consisting of token and value. Recipients…",63,N],[4,"DispositionType","","The implied disposition of the content of the HTTP body",N,N],[13,"Inline","","Inline implies default processing",64,N],[13,"Attachment","","Attachment implies that the recipient should prompt the…",64,N],[13,"Ext","","Extension type. Should be handled by recipients the same…",64,N],[4,"Encoding","","A value to represent an encoding used in…",N,N],[13,"Chunked","","The `chunked` encoding.",65,N],[13,"Gzip","","The `gzip` encoding.",65,N],[13,"Deflate","","The `deflate` encoding.",65,N],[13,"Compress","","The `compress` encoding.",65,N],[13,"Identity","","The `identity` encoding.",65,N],[13,"EncodingExt","","Some other encoding that is less common, can be any String.",65,N],[4,"Expect","","The `Expect` header.",N,N],[13,"Continue","","The value `100-continue`.",66,N],[4,"IfMatch","","`If-Match` header, defined in RFC7232",N,N],[13,"Any","","Any value is a match",67,N],[13,"Items","","Only the listed items are a match",67,N],[4,"IfNoneMatch","","`If-None-Match` header, defined in RFC7232",N,N],[13,"Any","","Any value is a match",68,N],[13,"Items","","Only the listed items are a match",68,N],[4,"IfRange","","`If-Range` header, defined in RFC7233",N,N],[13,"EntityTag","","The entity-tag the client has of the resource",69,N],[13,"Date","","The date when the client retrieved the resource",69,N],[4,"Pragma","","The `Pragma` header defined by HTTP/1.0.",N,N],[13,"NoCache","","Corresponds to the `no-cache` value.",70,N],[13,"Ext","","Every value other than `no-cache`.",70,N],[4,"Preference","","Prefer contains a list of these preferences.",N,N],[13,"RespondAsync","","\"respond-async\"",71,N],[13,"ReturnRepresentation","","\"return=representation\"",71,N],[13,"ReturnMinimal","","\"return=minimal\"",71,N],[13,"HandlingStrict","","\"handling=strict\"",71,N],[13,"HandlingLeniant","","\"handling=leniant\"",71,N],[13,"Wait","","\"wait=delta\"",71,N],[13,"Extension","","Extension preferences. Always has a value, if none is…",71,N],[4,"ProtocolName","","A protocol name used to identify a spefic protocol. Names…",N,N],[13,"Http","","`HTTP` value, Hypertext Transfer Protocol",72,N],[13,"Tls","","`TLS` value, Transport Layer Security RFC2817",72,N],[13,"WebSocket","","`WebSocket` value, matched case insensitively,Web Socket…",72,N],[13,"H2c","","`h2c` value, HTTP/2 over cleartext TCP",72,N],[13,"Unregistered","","Any other protocol name not known to hyper",72,N],[4,"Range","","`Range` header, defined in RFC7233",N,N],[13,"Bytes","","Byte range",73,N],[13,"Unregistered","","Custom range, with unit not registered at IANA…",73,N],[4,"RangeUnit","","Range Units, described in RFC7233",N,N],[13,"Bytes","","Indicating byte-range requests are supported.",74,N],[13,"None","","Reserved as keyword, indicating no ranges are supported.",74,N],[13,"Unregistered","","The given range unit is not registered at IANA.",74,N],[4,"ReferrerPolicy","","`Referrer-Policy` header, part of Referrer Policy",N,N],[13,"NoReferrer","","`no-referrer`",75,N],[13,"NoReferrerWhenDowngrade","","`no-referrer-when-downgrade`",75,N],[13,"SameOrigin","","`same-origin`",75,N],[13,"Origin","","`origin`",75,N],[13,"OriginWhenCrossOrigin","","`origin-when-cross-origin`",75,N],[13,"UnsafeUrl","","`unsafe-url`",75,N],[13,"StrictOrigin","","`strict-origin`",75,N],[13,"StrictOriginWhenCrossOrigin","","`strict-origin-when-cross-origin`",75,N],[4,"Vary","","`Vary` header, defined in RFC7231",N,N],[13,"Any","","Any value is a match",76,N],[13,"Items","","Only the listed items are a match",76,N],[8,"Scheme","","An Authorization scheme to be used in the header.",N,N],[10,"scheme","","An optional Scheme name.",77,[[],["option",["str"]]]],[10,"fmt_scheme","","Format the Scheme data into a header value.",77,[[["self"],["formatter"]],["result",["error"]]]],[5,"q","","Convenience function to create a `Quality` from a float.",N,[[["f32"]],["quality"]]],[5,"qitem","","Convinience function to wrap a value in a `QualityItem`…",N,[[["t"]],["qualityitem"]]],[0,"uri","rocket_http","Types for URIs and traits for rendering URI components.",N,N],[3,"Error","rocket_http::uri","Error emitted on URI parse failure.",N,N],[3,"Authority","","A URI with an authority only: `user:pass@host:8000`.",N,N],[3,"Origin","","A URI with an absolute path and optional query:…",N,N],[3,"Absolute","","A URI with a scheme, authority, path, and query:…",N,N],[3,"Formatter","","A struct used to format strings for [`UriDisplay`].",N,N],[3,"Segments","","Iterator over the segments of an absolute URI path. Skips…",N,N],[12,"0","","",78,N],[4,"Uri","","An `enum` encapsulating any of the possible URI variants.",N,N],[13,"Origin","","An origin URI.",79,N],[13,"Authority","","An authority URI.",79,N],[13,"Absolute","","An absolute URI.",79,N],[13,"Asterisk","","An asterisk: exactly `*`.",79,N],[4,"SegmentError","","Errors which can occur when attempting to interpret a…",N,N],[13,"Utf8","","The segment contained invalid UTF8 characters when percent…",80,N],[13,"BadStart","","The segment started with the wrapped invalid character.",80,N],[13,"BadChar","","The segment contained the wrapped invalid character.",80,N],[13,"BadEnd","","The segment ended with the wrapped invalid character.",80,N],[4,"Path","","Marker type indicating use of a type for the path…",N,N],[4,"Query","","Marker type indicating use of a type for the query…",N,N],[11,"parse","","Parses the string `string` into a `Uri`. Parsing will…",79,[[["str"]],["result",["uri","error"]]]],[11,"origin","","Returns the internal instance of `Origin` if `self` is a…",79,[[["self"]],["option",["origin"]]]],[11,"authority","","Returns the internal instance of `Authority` if `self` is…",79,[[["self"]],["option",["authority"]]]],[11,"absolute","","Returns the internal instance of `Absolute` if `self` is a…",79,[[["self"]],["option",["absolute"]]]],[11,"percent_encode","","Returns a URL-encoded version of the string. Any…",79,[[["str"]],["cow",["str"]]]],[11,"percent_decode","","Returns a URL-decoded version of the string. If the…",79,N],[11,"percent_decode_lossy","","Returns a URL-decoded version of the path. Any invalid…",79,N],[11,"write_raw","","Writes `string` to `self`.",81,[[["self"],["s"]],["result"]]],[11,"write_value","","Writes the unnamed value `value`. Any nested names are…",81,[[["self"],["t"]],["result"]]],[11,"refresh","","Refreshes the formatter.",81,[[["self"]]]],[11,"write_named_value","","Writes the named value `value` by prefixing `name`…",81,[[["self"],["str"],["t"]],["result"]]],[11,"parse","","Parses the string `string` into an `Origin`. Parsing will…",82,[[["str"]],["result",["origin","error"]]]],[11,"parse_owned","","Parses the string `string` into an `Origin`. Parsing will…",82,[[["string"]],["result",["origin","error"]]]],[11,"is_normalized","","Returns `true` if `self` is normalized. Otherwise, returns…",82,[[["self"]],["bool"]]],[11,"to_normalized","","Normalizes `self`.",82,[[["self"]],["origin"]]],[11,"path","","Returns the path part of this URI.",82,[[["self"]],["str"]]],[11,"query","","Returns the query part of this URI without the question…",82,[[["self"]],["option",["str"]]]],[11,"clear_query","","Removes the query part of this URI, if there is any.",82,[[["self"]]]],[11,"segments","","Returns an iterator over the segments of the path in this…",82,[[["self"]],["segments"]]],[11,"segment_count","","Returns the number of segments in the URI. Empty segments,…",82,[[["self"]],["usize"]]],[11,"parse","","Parses the string `string` into an `Authority`. Parsing…",83,[[["str"]],["result",["authority","error"]]]],[11,"user_info","","Returns the user info part of the authority URI, if there…",83,[[["self"]],["option",["str"]]]],[11,"host","","Returns the host part of the authority URI.",83,[[["self"]],["str"]]],[11,"port","","Returns the port part of the authority URI, if there is one.",83,[[["self"]],["option",["u16"]]]],[11,"parse","","Parses the string `string` into an `Absolute`. Parsing…",84,[[["str"]],["result",["absolute","error"]]]],[11,"scheme","","Returns the scheme part of the absolute URI.",84,[[["self"]],["str"]]],[11,"authority","","Returns the authority part of the absolute URI, if there…",84,[[["self"]],["option",["authority"]]]],[11,"origin","","Returns the origin part of the absolute URI, if there is…",84,[[["self"]],["option",["origin"]]]],[11,"into_path_buf","","Creates a `PathBuf` from a `Segments` iterator. The…",78,[[["self"],["bool"]],["result",["pathbuf","segmenterror"]]]],[8,"UriDisplay","","Trait implemented by types that can be displayed as part…",N,N],[10,"fmt","","Formats `self` in a URI-safe manner using the given…",85,[[["self"],["formatter"]],["result"]]],[8,"Ignorable","","Trait implemented by types that can be ignored in `uri!`.",N,N],[8,"FromUriParam","","Conversion trait for parameters used in [`uri!`]…",N,N],[16,"Target","","The resulting type of this conversion.",86,N],[10,"from_uri_param","","Converts a value of type `T` into a value of type…",86,N],[8,"UriPart","","Marker trait for types that mark a part of a URI.",N,N],[18,"DELIMITER","","",87,N],[0,"ext","rocket_http","Extension traits implemented by several HTTP types.",N,N],[8,"IntoCollection","rocket_http::ext","Trait implemented by types that can be converted into a…",N,N],[10,"into_collection","","Converts `self` into a collection.",88,[[["self"]],["smallvec"]]],[8,"IntoOwned","","Trait implemented by types that can be converted into…",N,N],[16,"Owned","","The owned version of the type.",89,N],[10,"into_owned","","Converts `self` into an owned version of itself.",89,N],[11,"get","rocket_http","Returns a reference to the `Cookie` inside this container…",90,[[["self"],["str"]],["option",["cookie"]]]],[11,"add","","Adds `cookie` to this collection.",90,[[["self"],["cookie"]]]],[11,"remove","","Removes `cookie` from this collection and generates a…",90,[[["self"],["cookie"]]]],[11,"iter","","Returns an iterator over all of the cookies present in…",90,N],[11,"get_private","","Returns a reference to the `Cookie` inside this collection…",90,[[["self"],["str"]],["option",["cookie"]]]],[11,"add_private","","Adds `cookie` to the collection. The cookie's value is…",90,[[["self"],["cookie"]]]],[11,"remove_private","","Removes the private `cookie` from the collection.",90,[[["self"],["cookie"]]]],[11,"supports_payload","","Returns `true` if an HTTP request with the method…",5,[[["self"]],["bool"]]],[11,"as_str","","Returns the string representation of `self`.",5,[[["self"]],["str"]]],[11,"new","","Creates a new `MediaType` with top-level type `top` and…",91,[[["t"],["s"]],["mediatype"]]],[11,"with_params","","Creates a new `MediaType` with top-level type `top`,…",91,[[["t"],["s"],["p"]],["mediatype"]]],[11,"parse_flexible","","Flexibly parses `name` into a `MediaType` . The parse is…",91,[[["str"]],["option",["mediatype"]]]],[11,"from_extension","","Returns the Media-Type associated with the extension `ext`…",91,[[["str"]],["option",["mediatype"]]]],[11,"top","","Returns the top-level type for this media type. The return…",91,[[["self"]],["uncasedstr"]]],[11,"sub","","Returns the subtype for this media type. The return type,…",91,[[["self"]],["uncasedstr"]]],[11,"specificity","","Returns a `u8` representing how specific the top-level…",91,[[["self"]],["u8"]]],[11,"exact_eq","","Compares `self` with `other` and returns `true` if `self`…",91,[[["self"],["mediatype"]],["bool"]]],[11,"params","","Returns an iterator over the (key, value) pairs of the…",91,N],[18,"Any","","Media Type for any media type: `*/*`. ",91,N],[18,"Binary","","Media Type for binary data: `application/octet-stream`. ",91,N],[18,"HTML","","Media Type for HTML: `text/html; charset=utf-8`. ",91,N],[18,"Plain","","Media Type for plain text: `text/plain; charset=utf-8`. ",91,N],[18,"JSON","","Media Type for JSON: `application/json`. ",91,N],[18,"MsgPack","","Media Type for MsgPack: `application/msgpack`. ",91,N],[18,"Form","","Media Type for forms: `application/x-www-form-urlencoded`. ",91,N],[18,"JavaScript","","Media Type for JavaScript: `application/javascript`. ",91,N],[18,"CSS","","Media Type for CSS: `text/css; charset=utf-8`. ",91,N],[18,"FormData","","Media Type for multipart form data: `multipart/form-data`. ",91,N],[18,"XML","","Media Type for XML: `text/xml; charset=utf-8`. ",91,N],[18,"CSV","","Media Type for CSV: `text/csv; charset=utf-8`. ",91,N],[18,"PNG","","Media Type for PNG: `image/png`. ",91,N],[18,"GIF","","Media Type for GIF: `image/gif`. ",91,N],[18,"BMP","","Media Type for BMP: `image/bmp`. ",91,N],[18,"JPEG","","Media Type for JPEG: `image/jpeg`. ",91,N],[18,"WEBP","","Media Type for WEBP: `image/webp`. ",91,N],[18,"SVG","","Media Type for SVG: `image/svg+xml`. ",91,N],[18,"Icon","","Media Type for Icon: `image/x-icon`. ",91,N],[18,"WEBM","","Media Type for WEBM: `video/webm`. ",91,N],[18,"WEBA","","Media Type for WEBM Audio: `audio/webm`. ",91,N],[18,"OGG","","Media Type for OGG Video: `video/ogg`. ",91,N],[18,"FLAC","","Media Type for FLAC: `audio/flac`. ",91,N],[18,"WAV","","Media Type for WAV: `audio/wav`. ",91,N],[18,"PDF","","Media Type for PDF: `application/pdf`. ",91,N],[18,"TTF","","Media Type for TTF: `application/font-sfnt`. ",91,N],[18,"OTF","","Media Type for OTF: `application/font-sfnt`. ",91,N],[18,"WOFF","","Media Type for WOFF: `application/font-woff`. ",91,N],[18,"WOFF2","","Media Type for WOFF2: `font/woff2`. ",91,N],[18,"JsonApi","","Media Type for JSON API: `application/vnd.api+json`. ",91,N],[18,"WASM","","Media Type for WASM: `application/wasm`. ",91,N],[18,"TIFF","","Media Type for TIFF: `image/tiff`. ",91,N],[18,"AAC","","Media Type for AAC Audio: `audio/aac`. ",91,N],[18,"Calendar","","Media Type for iCalendar: `text/calendar`. ",91,N],[18,"MPEG","","Media Type for MPEG Video: `video/mpeg`. ",91,N],[18,"TAR","","Media Type for tape archive: `application/x-tar`. ",91,N],[18,"GZIP","","Media Type for gzipped binary: `application/gzip`. ",91,N],[18,"MOV","","Media Type for quicktime video: `video/quicktime`. ",91,N],[18,"MP4","","Media Type for MPEG4 Video: `video/mp4`. ",91,N],[18,"ZIP","","Media Type for ZIP archive: `application/zip`. ",91,N],[11,"is_known","","Returns `true` if this MediaType is known to Rocket. In…",91,[[["self"]],["bool"]]],[11,"is_any","","Returns `true` if the top-level and sublevel types of…",91,[[["self"]],["bool"]]],[11,"is_binary","","Returns `true` if the top-level and sublevel types of…",91,[[["self"]],["bool"]]],[11,"is_html","","Returns `true` if the top-level and sublevel types of…",91,[[["self"]],["bool"]]],[11,"is_plain","","Returns `true` if the top-level and sublevel types of…",91,[[["self"]],["bool"]]],[11,"is_json","","Returns `true` if the top-level and sublevel types of…",91,[[["self"]],["bool"]]],[11,"is_msgpack","","Returns `true` if the top-level and sublevel types of…",91,[[["self"]],["bool"]]],[11,"is_form","","Returns `true` if the top-level and sublevel types of…",91,[[["self"]],["bool"]]],[11,"is_javascript","","Returns `true` if the top-level and sublevel types of…",91,[[["self"]],["bool"]]],[11,"is_css","","Returns `true` if the top-level and sublevel types of…",91,[[["self"]],["bool"]]],[11,"is_form_data","","Returns `true` if the top-level and sublevel types of…",91,[[["self"]],["bool"]]],[11,"is_xml","","Returns `true` if the top-level and sublevel types of…",91,[[["self"]],["bool"]]],[11,"is_csv","","Returns `true` if the top-level and sublevel types of…",91,[[["self"]],["bool"]]],[11,"is_png","","Returns `true` if the top-level and sublevel types of…",91,[[["self"]],["bool"]]],[11,"is_gif","","Returns `true` if the top-level and sublevel types of…",91,[[["self"]],["bool"]]],[11,"is_bmp","","Returns `true` if the top-level and sublevel types of…",91,[[["self"]],["bool"]]],[11,"is_jpeg","","Returns `true` if the top-level and sublevel types of…",91,[[["self"]],["bool"]]],[11,"is_webp","","Returns `true` if the top-level and sublevel types of…",91,[[["self"]],["bool"]]],[11,"is_svg","","Returns `true` if the top-level and sublevel types of…",91,[[["self"]],["bool"]]],[11,"is_icon","","Returns `true` if the top-level and sublevel types of…",91,[[["self"]],["bool"]]],[11,"is_webm","","Returns `true` if the top-level and sublevel types of…",91,[[["self"]],["bool"]]],[11,"is_weba","","Returns `true` if the top-level and sublevel types of…",91,[[["self"]],["bool"]]],[11,"is_ogg","","Returns `true` if the top-level and sublevel types of…",91,[[["self"]],["bool"]]],[11,"is_flac","","Returns `true` if the top-level and sublevel types of…",91,[[["self"]],["bool"]]],[11,"is_wav","","Returns `true` if the top-level and sublevel types of…",91,[[["self"]],["bool"]]],[11,"is_pdf","","Returns `true` if the top-level and sublevel types of…",91,[[["self"]],["bool"]]],[11,"is_ttf","","Returns `true` if the top-level and sublevel types of…",91,[[["self"]],["bool"]]],[11,"is_otf","","Returns `true` if the top-level and sublevel types of…",91,[[["self"]],["bool"]]],[11,"is_woff","","Returns `true` if the top-level and sublevel types of…",91,[[["self"]],["bool"]]],[11,"is_woff2","","Returns `true` if the top-level and sublevel types of…",91,[[["self"]],["bool"]]],[11,"is_json_api","","Returns `true` if the top-level and sublevel types of…",91,[[["self"]],["bool"]]],[11,"is_wasm","","Returns `true` if the top-level and sublevel types of…",91,[[["self"]],["bool"]]],[11,"is_tiff","","Returns `true` if the top-level and sublevel types of…",91,[[["self"]],["bool"]]],[11,"is_aac","","Returns `true` if the top-level and sublevel types of…",91,[[["self"]],["bool"]]],[11,"is_ical","","Returns `true` if the top-level and sublevel types of…",91,[[["self"]],["bool"]]],[11,"is_mpeg","","Returns `true` if the top-level and sublevel types of…",91,[[["self"]],["bool"]]],[11,"is_tar","","Returns `true` if the top-level and sublevel types of…",91,[[["self"]],["bool"]]],[11,"is_gzip","","Returns `true` if the top-level and sublevel types of…",91,[[["self"]],["bool"]]],[11,"is_mov","","Returns `true` if the top-level and sublevel types of…",91,[[["self"]],["bool"]]],[11,"is_mp4","","Returns `true` if the top-level and sublevel types of…",91,[[["self"]],["bool"]]],[11,"is_zip","","Returns `true` if the top-level and sublevel types of…",91,[[["self"]],["bool"]]],[11,"new","","Creates a new `ContentType` with top-level type `top` and…",1,[[["t"],["s"]],["contenttype"]]],[11,"parse_flexible","","Flexibly parses `name` into a `ContentType` . The parse is…",1,[[["str"]],["option",["contenttype"]]]],[11,"from_extension","","Returns the Content-Type associated with the extension…",1,[[["str"]],["option",["contenttype"]]]],[11,"with_params","","Creates a new `ContentType` with top-level type `top`,…",1,[[["t"],["s"],["p"]],["contenttype"]]],[11,"media_type","","Borrows the inner `MediaType` of `self`.",1,[[["self"]],["mediatype"]]],[18,"Any","","Content Type for any media type: `*/*`. ",1,N],[18,"Binary","","Content Type for binary data: `application/octet-stream`. ",1,N],[18,"HTML","","Content Type for HTML: `text/html; charset=utf-8`. ",1,N],[18,"Plain","","Content Type for plain text: `text/plain; charset=utf-8`. ",1,N],[18,"JSON","","Content Type for JSON: `application/json`. ",1,N],[18,"MsgPack","","Content Type for MsgPack: `application/msgpack`. ",1,N],[18,"Form","","Content Type for forms:…",1,N],[18,"JavaScript","","Content Type for JavaScript: `application/javascript`. ",1,N],[18,"CSS","","Content Type for CSS: `text/css; charset=utf-8`. ",1,N],[18,"FormData","","Content Type for multipart form data:…",1,N],[18,"XML","","Content Type for XML: `text/xml; charset=utf-8`. ",1,N],[18,"CSV","","Content Type for CSV: `text/csv; charset=utf-8`. ",1,N],[18,"PNG","","Content Type for PNG: `image/png`. ",1,N],[18,"GIF","","Content Type for GIF: `image/gif`. ",1,N],[18,"BMP","","Content Type for BMP: `image/bmp`. ",1,N],[18,"JPEG","","Content Type for JPEG: `image/jpeg`. ",1,N],[18,"WEBP","","Content Type for WEBP: `image/webp`. ",1,N],[18,"SVG","","Content Type for SVG: `image/svg+xml`. ",1,N],[18,"Icon","","Content Type for Icon: `image/x-icon`. ",1,N],[18,"WEBM","","Content Type for WEBM: `video/webm`. ",1,N],[18,"WEBA","","Content Type for WEBM Audio: `audio/webm`. ",1,N],[18,"OGG","","Content Type for OGG Video: `video/ogg`. ",1,N],[18,"FLAC","","Content Type for FLAC: `audio/flac`. ",1,N],[18,"WAV","","Content Type for WAV: `audio/wav`. ",1,N],[18,"PDF","","Content Type for PDF: `application/pdf`. ",1,N],[18,"TTF","","Content Type for TTF: `application/font-sfnt`. ",1,N],[18,"OTF","","Content Type for OTF: `application/font-sfnt`. ",1,N],[18,"WOFF","","Content Type for WOFF: `application/font-woff`. ",1,N],[18,"WOFF2","","Content Type for WOFF2: `font/woff2`. ",1,N],[18,"JsonApi","","Content Type for JSON API: `application/vnd.api+json`. ",1,N],[18,"WASM","","Content Type for WASM: `application/wasm`. ",1,N],[18,"TIFF","","Content Type for TIFF: `image/tiff`. ",1,N],[18,"AAC","","Content Type for AAC Audio: `audio/aac`. ",1,N],[18,"Calendar","","Content Type for iCalendar: `text/calendar`. ",1,N],[18,"MPEG","","Content Type for MPEG Video: `video/mpeg`. ",1,N],[18,"TAR","","Content Type for tape archive: `application/x-tar`. ",1,N],[18,"GZIP","","Content Type for gzipped binary: `application/gzip`. ",1,N],[18,"MOV","","Content Type for quicktime video: `video/quicktime`. ",1,N],[18,"MP4","","Content Type for MPEG4 Video: `video/mp4`. ",1,N],[18,"ZIP","","Content Type for ZIP archive: `application/zip`. ",1,N],[11,"is_informational","","Returns `true` if `self` is a `StatusClass` of",6,[[["self"]],["bool"]]],[11,"is_success","","Returns `true` if `self` is a `StatusClass` of",6,[[["self"]],["bool"]]],[11,"is_redirection","","Returns `true` if `self` is a `StatusClass` of",6,[[["self"]],["bool"]]],[11,"is_client_error","","Returns `true` if `self` is a `StatusClass` of",6,[[["self"]],["bool"]]],[11,"is_server_error","","Returns `true` if `self` is a `StatusClass` of",6,[[["self"]],["bool"]]],[11,"is_unknown","","Returns `true` if `self` is a `StatusClass` of",6,[[["self"]],["bool"]]],[11,"new","","Creates a new `Status` with `code` and `reason`. This…",3,[[["u16"],["str"]],["status"]]],[11,"class","","Returns the class of a given status.",3,[[["self"]],["statusclass"]]],[18,"Continue","","[`Status`] with code  100  and reason  Continue .",3,N],[18,"SwitchingProtocols","","[`Status`] with code  101  and reason  Switching Protocols .",3,N],[18,"Processing","","[`Status`] with code  102  and reason  Processing .",3,N],[18,"Ok","","[`Status`] with code  200  and reason  OK .",3,N],[18,"Created","","[`Status`] with code  201  and reason  Created .",3,N],[18,"Accepted","","[`Status`] with code  202  and reason  Accepted .",3,N],[18,"NonAuthoritativeInformation","","[`Status`] with code 203 and reason Non-Authoritative…",3,N],[18,"NoContent","","[`Status`] with code  204  and reason  No Content .",3,N],[18,"ResetContent","","[`Status`] with code  205  and reason  Reset Content .",3,N],[18,"PartialContent","","[`Status`] with code  206  and reason  Partial Content .",3,N],[18,"MultiStatus","","[`Status`] with code  207  and reason  Multi-Status .",3,N],[18,"AlreadyReported","","[`Status`] with code  208  and reason  Already Reported .",3,N],[18,"ImUsed","","[`Status`] with code  226  and reason  IM Used .",3,N],[18,"MultipleChoices","","[`Status`] with code  300  and reason  Multiple Choices .",3,N],[18,"MovedPermanently","","[`Status`] with code  301  and reason  Moved Permanently .",3,N],[18,"Found","","[`Status`] with code  302  and reason  Found .",3,N],[18,"SeeOther","","[`Status`] with code  303  and reason  See Other .",3,N],[18,"NotModified","","[`Status`] with code  304  and reason  Not Modified .",3,N],[18,"UseProxy","","[`Status`] with code  305  and reason  Use Proxy .",3,N],[18,"TemporaryRedirect","","[`Status`] with code  307  and reason  Temporary Redirect .",3,N],[18,"PermanentRedirect","","[`Status`] with code  308  and reason  Permanent Redirect .",3,N],[18,"BadRequest","","[`Status`] with code  400  and reason  Bad Request .",3,N],[18,"Unauthorized","","[`Status`] with code  401  and reason  Unauthorized .",3,N],[18,"PaymentRequired","","[`Status`] with code  402  and reason  Payment Required .",3,N],[18,"Forbidden","","[`Status`] with code  403  and reason  Forbidden .",3,N],[18,"NotFound","","[`Status`] with code  404  and reason  Not Found .",3,N],[18,"MethodNotAllowed","","[`Status`] with code  405  and reason  Method Not Allowed .",3,N],[18,"NotAcceptable","","[`Status`] with code  406  and reason  Not Acceptable .",3,N],[18,"ProxyAuthenticationRequired","","[`Status`] with code 407 and reason Proxy Authentication…",3,N],[18,"RequestTimeout","","[`Status`] with code  408  and reason  Request Timeout .",3,N],[18,"Conflict","","[`Status`] with code  409  and reason  Conflict .",3,N],[18,"Gone","","[`Status`] with code  410  and reason  Gone .",3,N],[18,"LengthRequired","","[`Status`] with code  411  and reason  Length Required .",3,N],[18,"PreconditionFailed","","[`Status`] with code  412  and reason  Precondition Failed .",3,N],[18,"PayloadTooLarge","","[`Status`] with code  413  and reason  Payload Too Large .",3,N],[18,"UriTooLong","","[`Status`] with code  414  and reason  URI Too Long .",3,N],[18,"UnsupportedMediaType","","[`Status`] with code 415 and reason Unsupported Media Type…",3,N],[18,"RangeNotSatisfiable","","[`Status`] with code 416 and reason Range Not Satisfiable…",3,N],[18,"ExpectationFailed","","[`Status`] with code  417  and reason  Expectation Failed .",3,N],[18,"ImATeapot","","[`Status`] with code  418  and reason  I'm a teapot .",3,N],[18,"MisdirectedRequest","","[`Status`] with code  421  and reason  Misdirected Request .",3,N],[18,"UnprocessableEntity","","[`Status`] with code 422 and reason Unprocessable Entity .…",3,N],[18,"Locked","","[`Status`] with code  423  and reason  Locked .",3,N],[18,"FailedDependency","","[`Status`] with code  424  and reason  Failed Dependency .",3,N],[18,"UpgradeRequired","","[`Status`] with code  426  and reason  Upgrade Required .",3,N],[18,"PreconditionRequired","","[`Status`] with code 428 and reason Precondition Required…",3,N],[18,"TooManyRequests","","[`Status`] with code  429  and reason  Too Many Requests .",3,N],[18,"RequestHeaderFieldsTooLarge","","[`Status`] with code 431 and reason Request Header Fields…",3,N],[18,"UnavailableForLegalReasons","","[`Status`] with code 451 and reason Unavailable For Legal…",3,N],[18,"InternalServerError","","[`Status`] with code 500 and reason Internal Server Error…",3,N],[18,"NotImplemented","","[`Status`] with code  501  and reason  Not Implemented .",3,N],[18,"BadGateway","","[`Status`] with code  502  and reason  Bad Gateway .",3,N],[18,"ServiceUnavailable","","[`Status`] with code  503  and reason  Service Unavailable .",3,N],[18,"GatewayTimeout","","[`Status`] with code  504  and reason  Gateway Timeout .",3,N],[18,"HttpVersionNotSupported","","[`Status`] with code 505 and reason HTTP Version Not…",3,N],[18,"VariantAlsoNegotiates","","[`Status`] with code 506 and reason Variant Also…",3,N],[18,"InsufficientStorage","","[`Status`] with code 507 and reason Insufficient Storage .…",3,N],[18,"LoopDetected","","[`Status`] with code  508  and reason  Loop Detected .",3,N],[18,"NotExtended","","[`Status`] with code  510  and reason  Not Extended .",3,N],[18,"NetworkAuthenticationRequired","","[`Status`] with code 511 and reason Network Authentication…",3,N],[11,"from_code","","Returns a Status given a standard status code `code`. If…",3,[[["u16"]],["option",["status"]]]],[11,"new","","Constructs a new header. This method should be used rarely…",4,[[["n"],["v"]],["header"]]],[11,"name","","Returns the name of this header with casing preserved. To…",4,[[["self"]],["str"]]],[11,"value","","Returns the value of this header.",4,[[["self"]],["str"]]],[11,"new","","Returns an empty header collection.",92,[[],["headermap"]]],[11,"contains","","Returns true if `self` contains a header with the name…",92,[[["self"],["str"]],["bool"]]],[11,"len","","Returns the number of values stored in the map.",92,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if there are no headers stored in the map.…",92,[[["self"]],["bool"]]],[11,"get","","Returns an iterator over all of the values stored in…",92,N],[11,"get_one","","Returns the first value stored for the header with name…",92,[[["self"],["str"]],["option",["str"]]]],[11,"replace","","Replace any header that matches the name of `header.name`…",92,[[["self"],["h"]],["bool"]]],[11,"replace_raw","","A convenience method to replace a header using a raw name…",92,[[["self"],["n"],["v"]],["bool"]]],[11,"replace_all","","Replaces all of the values for a header with name `name`…",92,[[["self"],["h"],["vec",["cow"]]]]],[11,"add","","Adds `header` into the map. If a header with `header.name`…",92,[[["self"],["h"]]]],[11,"add_raw","","A convenience method to add a header using a raw name and…",92,[[["self"],["n"],["v"]]]],[11,"add_all","","Adds all of the values to a header with name `name`. This…",92,[[["self"],["h"],["vec"]]]],[11,"remove","","Remove all of the values for header with name `name`.",92,[[["self"],["str"]]]],[11,"remove_all","","Removes all of the headers stored in this map and returns…",92,[[["self"]],["vec",["header"]]]],[11,"iter","","Returns an iterator over all of the `Header`s stored in…",92,N],[11,"into_iter","","Consumes `self` and returns an iterator over all of the…",92,N],[11,"weight","","Retrieve the weight of the media type, if there is any.",2,[[["self"]],["option",["f32"]]]],[11,"weight_or","","Retrieve the weight of the media type or a given default…",2,[[["self"],["f32"]],["f32"]]],[11,"media_type","","Borrow the internal `MediaType`.",2,[[["self"]],["mediatype"]]],[11,"new","","Constructs a new `Accept` header from one or more media…",93,[[["t"]],["accept"]]],[11,"preferred","","Retrieve the client's preferred media type. This method…",93,[[["self"]],["qmediatype"]]],[11,"first","","Retrieve the first media type in `self`, if any.",93,[[["self"]],["option",["qmediatype"]]]],[11,"iter","","Returns an iterator over all of the (quality) media types…",93,N],[11,"media_types","","Returns an iterator over all of the (bare) media types in…",93,N],[18,"Any","","An `Accept` header with the single media type for any…",93,N],[18,"Binary","","An `Accept` header with the single media type for binary…",93,N],[18,"HTML","","An `Accept` header with the single media type for HTML :…",93,N],[18,"Plain","","An `Accept` header with the single media type for plain…",93,N],[18,"JSON","","An `Accept` header with the single media type for JSON :…",93,N],[18,"MsgPack","","An `Accept` header with the single media type for MsgPack…",93,N],[18,"Form","","An `Accept` header with the single media type for forms :…",93,N],[18,"JavaScript","","An `Accept` header with the single media type for…",93,N],[18,"CSS","","An `Accept` header with the single media type for CSS :…",93,N],[18,"FormData","","An `Accept` header with the single media type for…",93,N],[18,"XML","","An `Accept` header with the single media type for XML :…",93,N],[18,"CSV","","An `Accept` header with the single media type for CSV :…",93,N],[18,"PNG","","An `Accept` header with the single media type for PNG :…",93,N],[18,"GIF","","An `Accept` header with the single media type for GIF :…",93,N],[18,"BMP","","An `Accept` header with the single media type for BMP :…",93,N],[18,"JPEG","","An `Accept` header with the single media type for JPEG :…",93,N],[18,"WEBP","","An `Accept` header with the single media type for WEBP :…",93,N],[18,"SVG","","An `Accept` header with the single media type for SVG :…",93,N],[18,"Icon","","An `Accept` header with the single media type for Icon :…",93,N],[18,"WEBM","","An `Accept` header with the single media type for WEBM :…",93,N],[18,"WEBA","","An `Accept` header with the single media type for WEBM…",93,N],[18,"OGG","","An `Accept` header with the single media type for OGG…",93,N],[18,"FLAC","","An `Accept` header with the single media type for FLAC :…",93,N],[18,"WAV","","An `Accept` header with the single media type for WAV :…",93,N],[18,"PDF","","An `Accept` header with the single media type for PDF :…",93,N],[18,"TTF","","An `Accept` header with the single media type for TTF :…",93,N],[18,"OTF","","An `Accept` header with the single media type for OTF :…",93,N],[18,"WOFF","","An `Accept` header with the single media type for WOFF :…",93,N],[18,"WOFF2","","An `Accept` header with the single media type for WOFF2 :…",93,N],[18,"JsonApi","","An `Accept` header with the single media type for JSON API…",93,N],[18,"WASM","","An `Accept` header with the single media type for WASM :…",93,N],[18,"TIFF","","An `Accept` header with the single media type for TIFF :…",93,N],[18,"AAC","","An `Accept` header with the single media type for AAC…",93,N],[18,"Calendar","","An `Accept` header with the single media type for…",93,N],[18,"MPEG","","An `Accept` header with the single media type for MPEG…",93,N],[18,"TAR","","An `Accept` header with the single media type for tape…",93,N],[18,"GZIP","","An `Accept` header with the single media type for gzipped…",93,N],[18,"MOV","","An `Accept` header with the single media type for…",93,N],[18,"MP4","","An `Accept` header with the single media type for MPEG4…",93,N],[18,"ZIP","","An `Accept` header with the single media type for ZIP…",93,N],[11,"from_str","","Constructs an `&RawStr` from an `&str` at no cost.",94,[[["str"]],["rawstr"]]],[11,"percent_decode","","Returns a percent-decoded version of the string.",94,[[["self"]],["result",["cow","utf8error"]]]],[11,"percent_decode_lossy","","Returns a percent-decoded version of the string. Any…",94,[[["self"]],["cow",["str"]]]],[11,"url_decode","","Returns a URL-decoded version of the string. This is…",94,[[["self"]],["result",["string","utf8error"]]]],[11,"url_decode_lossy","","Returns a URL-decoded version of the string.",94,[[["self"]],["string"]]],[11,"html_escape","","Returns an HTML escaped version of `self`. Allocates only…",94,[[["self"]],["cow",["str"]]]],[11,"as_str","","Converts `self` into an `&str`.",94,[[["self"]],["str"]]],[11,"as_uncased_str","","Converts `self` into an `&UncasedStr`.",94,[[["self"]],["uncasedstr"]]],[11,"index","rocket_http::uri","Returns the byte index into the text where the error…",95,[[["self"]],["option",["usize"]]]],[0,"uncased","rocket_http","Contains types that encapsulate uncased ASCII strings.",N,N],[3,"UncasedStr","rocket_http::uncased","A reference to an uncased (case-preserving) ASCII string.…",N,N],[3,"Uncased","","An uncased (case-preserving), owned or borrowed ASCII…",N,N],[5,"uncased_eq","","Returns true if `s1` and `s2` are equal without…",N,[[["s1"],["s2"]],["bool"]]],[11,"new","","Returns a reference to an `UncasedStr` from an `&str`.",96,[[["str"]],["uncasedstr"]]],[11,"as_str","","Returns `self` as an `&str`.",96,[[["self"]],["str"]]],[11,"into_uncased","","Converts a `Box<UncasedStr>` into an `Uncased` without…",96,[[["box",["uncasedstr"]]],["uncased"]]],[11,"new","","Creates a new `Uncased` string from `string` without…",97,[[["s"]],["uncased"]]],[11,"into_string","","Converts `self` into an owned `String`, allocating if…",97,[[["self"]],["string"]]],[11,"into_boxed_uncased","","Converts `self` into a `Box<UncasedStr>`.",97,[[["self"]],["box",["uncasedstr"]]]],[14,"impl_from_uri_param_identity","rocket_http","Macro to automatically generated identity [`FromUriParam`]…",N,N],[11,"into_collection","","",98,[[["self"]],["smallvec"]]],[11,"mapped","","",98,[[["self"],["f"]],["smallvec"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"into","","",98,[[["self"]],["u"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,N],[11,"to_string","","",98,[[["self"]],["string"]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"try_into","","",98,[[["self"]],["result"]]],[11,"get_type_id","","",98,[[["self"]],["typeid"]]],[11,"as_result","","",98,[[["self"]],["result",["parseerr"]]]],[11,"into_collection","","",0,[[["self"]],["smallvec"]]],[11,"mapped","","",0,[[["self"],["f"]],["smallvec"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"as_result","","",0,[[["self"]],["result",["parseerr"]]]],[11,"equivalent","","",0,[[["self"],["k"]],["bool"]]],[11,"into_collection","","",1,[[["self"]],["smallvec"]]],[11,"mapped","","",1,[[["self"],["f"]],["smallvec"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"as_result","","",1,[[["self"]],["result",["parseerr"]]]],[11,"into_collection","","",93,[[["self"]],["smallvec"]]],[11,"mapped","","",93,[[["self"],["f"]],["smallvec"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"into","","",93,[[["self"]],["u"]]],[11,"to_owned","","",93,[[["self"]],["t"]]],[11,"clone_into","","",93,N],[11,"to_string","","",93,[[["self"]],["string"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"try_into","","",93,[[["self"]],["result"]]],[11,"get_type_id","","",93,[[["self"]],["typeid"]]],[11,"as_result","","",93,[[["self"]],["result",["parseerr"]]]],[11,"into_collection","","",2,[[["self"]],["smallvec"]]],[11,"mapped","","",2,[[["self"],["f"]],["smallvec"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"as_result","","",2,[[["self"]],["result",["parseerr"]]]],[11,"into_collection","","",3,[[["self"]],["smallvec"]]],[11,"mapped","","",3,[[["self"],["f"]],["smallvec"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"as_result","","",3,[[["self"]],["result",["parseerr"]]]],[11,"equivalent","","",3,[[["self"],["k"]],["bool"]]],[11,"into_collection","","",4,[[["self"]],["smallvec"]]],[11,"mapped","","",4,[[["self"],["f"]],["smallvec"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"as_result","","",4,[[["self"]],["result",["parseerr"]]]],[11,"equivalent","","",4,[[["self"],["k"]],["bool"]]],[11,"into_collection","","",92,[[["self"]],["smallvec"]]],[11,"mapped","","",92,[[["self"],["f"]],["smallvec"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"into","","",92,[[["self"]],["u"]]],[11,"to_owned","","",92,[[["self"]],["t"]]],[11,"clone_into","","",92,N],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"try_into","","",92,[[["self"]],["result"]]],[11,"get_type_id","","",92,[[["self"]],["typeid"]]],[11,"as_result","","",92,[[["self"]],["result",["parseerr"]]]],[11,"to_string","","",94,[[["self"]],["string"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"get_type_id","","",94,[[["self"]],["typeid"]]],[11,"equivalent","","",94,[[["self"],["k"]],["bool"]]],[11,"into_collection","","",91,[[["self"]],["smallvec"]]],[11,"mapped","","",91,[[["self"],["f"]],["smallvec"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"into","","",91,[[["self"]],["u"]]],[11,"to_owned","","",91,[[["self"]],["t"]]],[11,"clone_into","","",91,N],[11,"to_string","","",91,[[["self"]],["string"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"try_into","","",91,[[["self"]],["result"]]],[11,"get_type_id","","",91,[[["self"]],["typeid"]]],[11,"as_result","","",91,[[["self"]],["result",["parseerr"]]]],[11,"into_collection","","",5,[[["self"]],["smallvec"]]],[11,"mapped","","",5,[[["self"],["f"]],["smallvec"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"as_result","","",5,[[["self"]],["result",["parseerr"]]]],[11,"equivalent","","",5,[[["self"],["k"]],["bool"]]],[11,"into_collection","","",6,[[["self"]],["smallvec"]]],[11,"mapped","","",6,[[["self"],["f"]],["smallvec"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"as_result","","",6,[[["self"]],["result",["parseerr"]]]],[11,"equivalent","","",6,[[["self"],["k"]],["bool"]]],[11,"into_collection","","",90,[[["self"]],["smallvec"]]],[11,"mapped","","",90,[[["self"],["f"]],["smallvec"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[["self"]],["u"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"try_into","","",90,[[["self"]],["result"]]],[11,"get_type_id","","",90,[[["self"]],["typeid"]]],[11,"as_result","","",90,[[["self"]],["result",["parseerr"]]]],[11,"into_collection","rocket_http::hyper::mime","",7,[[["self"]],["smallvec"]]],[11,"mapped","","",7,[[["self"],["f"]],["smallvec"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"as_result","","",7,[[["self"]],["result",["parseerr"]]]],[11,"equivalent","","",7,[[["self"],["k"]],["bool"]]],[11,"into_collection","","",8,[[["self"]],["smallvec"]]],[11,"mapped","","",8,[[["self"],["f"]],["smallvec"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"as_result","","",8,[[["self"]],["result",["parseerr"]]]],[11,"equivalent","","",8,[[["self"],["k"]],["bool"]]],[11,"into_collection","","",9,[[["self"]],["smallvec"]]],[11,"mapped","","",9,[[["self"],["f"]],["smallvec"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"to_string","","",9,[[["self"]],["string"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"as_result","","",9,[[["self"]],["result",["parseerr"]]]],[11,"equivalent","","",9,[[["self"],["k"]],["bool"]]],[11,"into_collection","","",10,[[["self"]],["smallvec"]]],[11,"mapped","","",10,[[["self"],["f"]],["smallvec"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"to_string","","",10,[[["self"]],["string"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"as_result","","",10,[[["self"]],["result",["parseerr"]]]],[11,"equivalent","","",10,[[["self"],["k"]],["bool"]]],[11,"into_collection","","",11,[[["self"]],["smallvec"]]],[11,"mapped","","",11,[[["self"],["f"]],["smallvec"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"to_string","","",11,[[["self"]],["string"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"as_result","","",11,[[["self"]],["result",["parseerr"]]]],[11,"equivalent","","",11,[[["self"],["k"]],["bool"]]],[11,"into_collection","rocket_http::hyper::header","",12,[[["self"]],["smallvec"]]],[11,"mapped","","",12,[[["self"],["f"]],["smallvec"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"to_string","","",12,[[["self"]],["string"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"as_result","","",12,[[["self"]],["result",["parseerr"]]]],[11,"into_collection","","",13,[[["self"]],["smallvec"]]],[11,"mapped","","",13,[[["self"],["f"]],["smallvec"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"to_string","","",13,[[["self"]],["string"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"as_result","","",13,[[["self"]],["result",["parseerr"]]]],[11,"into_collection","","",14,[[["self"]],["smallvec"]]],[11,"mapped","","",14,[[["self"],["f"]],["smallvec"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"to_string","","",14,[[["self"]],["string"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"as_result","","",14,[[["self"]],["result",["parseerr"]]]],[11,"into_collection","","",15,[[["self"]],["smallvec"]]],[11,"mapped","","",15,[[["self"],["f"]],["smallvec"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"to_string","","",15,[[["self"]],["string"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"as_result","","",15,[[["self"]],["result",["parseerr"]]]],[11,"into_collection","","",16,[[["self"]],["smallvec"]]],[11,"mapped","","",16,[[["self"],["f"]],["smallvec"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"to_string","","",16,[[["self"]],["string"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"as_result","","",16,[[["self"]],["result",["parseerr"]]]],[11,"into_collection","","",99,[[["self"]],["smallvec"]]],[11,"mapped","","",99,[[["self"],["f"]],["smallvec"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"into","","",99,[[["self"]],["u"]]],[11,"to_owned","","",99,[[["self"]],["t"]]],[11,"clone_into","","",99,N],[11,"to_string","","",99,[[["self"]],["string"]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"try_into","","",99,[[["self"]],["result"]]],[11,"get_type_id","","",99,[[["self"]],["typeid"]]],[11,"as_result","","",99,[[["self"]],["result",["parseerr"]]]],[11,"into_collection","","",17,[[["self"]],["smallvec"]]],[11,"mapped","","",17,[[["self"],["f"]],["smallvec"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"to_string","","",17,[[["self"]],["string"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"as_result","","",17,[[["self"]],["result",["parseerr"]]]],[11,"into_collection","","",18,[[["self"]],["smallvec"]]],[11,"mapped","","",18,[[["self"],["f"]],["smallvec"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"to_string","","",18,[[["self"]],["string"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"as_result","","",18,[[["self"]],["result",["parseerr"]]]],[11,"into_collection","","",19,[[["self"]],["smallvec"]]],[11,"mapped","","",19,[[["self"],["f"]],["smallvec"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"to_string","","",19,[[["self"]],["string"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"as_result","","",19,[[["self"]],["result",["parseerr"]]]],[11,"into_collection","","",20,[[["self"]],["smallvec"]]],[11,"mapped","","",20,[[["self"],["f"]],["smallvec"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"to_string","","",20,[[["self"]],["string"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"as_result","","",20,[[["self"]],["result",["parseerr"]]]],[11,"into_collection","","",21,[[["self"]],["smallvec"]]],[11,"mapped","","",21,[[["self"],["f"]],["smallvec"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"to_string","","",21,[[["self"]],["string"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"as_result","","",21,[[["self"]],["result",["parseerr"]]]],[11,"into_collection","","",22,[[["self"]],["smallvec"]]],[11,"mapped","","",22,[[["self"],["f"]],["smallvec"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"to_string","","",22,[[["self"]],["string"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"as_result","","",22,[[["self"]],["result",["parseerr"]]]],[11,"into_collection","","",23,[[["self"]],["smallvec"]]],[11,"mapped","","",23,[[["self"],["f"]],["smallvec"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"to_string","","",23,[[["self"]],["string"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"as_result","","",23,[[["self"]],["result",["parseerr"]]]],[11,"into_collection","","",24,[[["self"]],["smallvec"]]],[11,"mapped","","",24,[[["self"],["f"]],["smallvec"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"as_result","","",24,[[["self"]],["result",["parseerr"]]]],[11,"into_collection","","",25,[[["self"]],["smallvec"]]],[11,"mapped","","",25,[[["self"],["f"]],["smallvec"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"as_result","","",25,[[["self"]],["result",["parseerr"]]]],[11,"into_collection","","",26,[[["self"]],["smallvec"]]],[11,"mapped","","",26,[[["self"],["f"]],["smallvec"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"as_result","","",26,[[["self"]],["result",["parseerr"]]]],[11,"into_collection","","",27,[[["self"]],["smallvec"]]],[11,"mapped","","",27,[[["self"],["f"]],["smallvec"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,N],[11,"to_string","","",27,[[["self"]],["string"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"as_result","","",27,[[["self"]],["result",["parseerr"]]]],[11,"into_collection","","",28,[[["self"]],["smallvec"]]],[11,"mapped","","",28,[[["self"],["f"]],["smallvec"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,N],[11,"to_string","","",28,[[["self"]],["string"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"as_result","","",28,[[["self"]],["result",["parseerr"]]]],[11,"into_collection","","",29,[[["self"]],["smallvec"]]],[11,"mapped","","",29,[[["self"],["f"]],["smallvec"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,N],[11,"to_string","","",29,[[["self"]],["string"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"as_result","","",29,[[["self"]],["result",["parseerr"]]]],[11,"into_collection","","",30,[[["self"]],["smallvec"]]],[11,"mapped","","",30,[[["self"],["f"]],["smallvec"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,N],[11,"to_string","","",30,[[["self"]],["string"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"as_result","","",30,[[["self"]],["result",["parseerr"]]]],[11,"into_collection","","",31,[[["self"]],["smallvec"]]],[11,"mapped","","",31,[[["self"],["f"]],["smallvec"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,N],[11,"to_string","","",31,[[["self"]],["string"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"as_result","","",31,[[["self"]],["result",["parseerr"]]]],[11,"into_collection","","",32,[[["self"]],["smallvec"]]],[11,"mapped","","",32,[[["self"],["f"]],["smallvec"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,N],[11,"to_string","","",32,[[["self"]],["string"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"as_result","","",32,[[["self"]],["result",["parseerr"]]]],[11,"into_collection","","",33,[[["self"]],["smallvec"]]],[11,"mapped","","",33,[[["self"],["f"]],["smallvec"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,N],[11,"to_string","","",33,[[["self"]],["string"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"as_result","","",33,[[["self"]],["result",["parseerr"]]]],[11,"into_collection","","",34,[[["self"]],["smallvec"]]],[11,"mapped","","",34,[[["self"],["f"]],["smallvec"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,N],[11,"to_string","","",34,[[["self"]],["string"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"as_result","","",34,[[["self"]],["result",["parseerr"]]]],[11,"into_collection","","",35,[[["self"]],["smallvec"]]],[11,"mapped","","",35,[[["self"],["f"]],["smallvec"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,N],[11,"to_string","","",35,[[["self"]],["string"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"as_result","","",35,[[["self"]],["result",["parseerr"]]]],[11,"into_collection","","",36,[[["self"]],["smallvec"]]],[11,"mapped","","",36,[[["self"],["f"]],["smallvec"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,N],[11,"to_string","","",36,[[["self"]],["string"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"as_result","","",36,[[["self"]],["result",["parseerr"]]]],[11,"into_collection","","",37,[[["self"]],["smallvec"]]],[11,"mapped","","",37,[[["self"],["f"]],["smallvec"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,N],[11,"to_string","","",37,[[["self"]],["string"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"as_result","","",37,[[["self"]],["result",["parseerr"]]]],[11,"equivalent","","",37,[[["self"],["k"]],["bool"]]],[11,"into_collection","","",38,[[["self"]],["smallvec"]]],[11,"mapped","","",38,[[["self"],["f"]],["smallvec"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,N],[11,"to_string","","",38,[[["self"]],["string"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"as_result","","",38,[[["self"]],["result",["parseerr"]]]],[11,"into_collection","","",39,[[["self"]],["smallvec"]]],[11,"mapped","","",39,[[["self"],["f"]],["smallvec"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,N],[11,"to_string","","",39,[[["self"]],["string"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"as_result","","",39,[[["self"]],["result",["parseerr"]]]],[11,"into_collection","","",100,[[["self"]],["smallvec"]]],[11,"mapped","","",100,[[["self"],["f"]],["smallvec"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"into","","",100,[[["self"]],["u"]]],[11,"to_owned","","",100,[[["self"]],["t"]]],[11,"clone_into","","",100,N],[11,"to_string","","",100,[[["self"]],["string"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"try_into","","",100,[[["self"]],["result"]]],[11,"get_type_id","","",100,[[["self"]],["typeid"]]],[11,"as_result","","",100,[[["self"]],["result",["parseerr"]]]],[11,"into_collection","","",40,[[["self"]],["smallvec"]]],[11,"mapped","","",40,[[["self"],["f"]],["smallvec"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,N],[11,"to_string","","",40,[[["self"]],["string"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"as_result","","",40,[[["self"]],["result",["parseerr"]]]],[11,"into_collection","","",41,[[["self"]],["smallvec"]]],[11,"mapped","","",41,[[["self"],["f"]],["smallvec"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,N],[11,"to_string","","",41,[[["self"]],["string"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"as_result","","",41,[[["self"]],["result",["parseerr"]]]],[11,"equivalent","","",41,[[["self"],["k"]],["bool"]]],[11,"into_collection","","",42,[[["self"]],["smallvec"]]],[11,"mapped","","",42,[[["self"],["f"]],["smallvec"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,N],[11,"to_string","","",42,[[["self"]],["string"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"as_result","","",42,[[["self"]],["result",["parseerr"]]]],[11,"into_collection","","",43,[[["self"]],["smallvec"]]],[11,"mapped","","",43,[[["self"],["f"]],["smallvec"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"to_string","","",43,[[["self"]],["string"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"as_result","","",43,[[["self"]],["result",["parseerr"]]]],[11,"into_collection","","",44,[[["self"]],["smallvec"]]],[11,"mapped","","",44,[[["self"],["f"]],["smallvec"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,N],[11,"to_string","","",44,[[["self"]],["string"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"as_result","","",44,[[["self"]],["result",["parseerr"]]]],[11,"into_collection","","",45,[[["self"]],["smallvec"]]],[11,"mapped","","",45,[[["self"],["f"]],["smallvec"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,N],[11,"to_string","","",45,[[["self"]],["string"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"as_result","","",45,[[["self"]],["result",["parseerr"]]]],[11,"into_collection","","",46,[[["self"]],["smallvec"]]],[11,"mapped","","",46,[[["self"],["f"]],["smallvec"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,N],[11,"to_string","","",46,[[["self"]],["string"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"as_result","","",46,[[["self"]],["result",["parseerr"]]]],[11,"into_collection","","",47,[[["self"]],["smallvec"]]],[11,"mapped","","",47,[[["self"],["f"]],["smallvec"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,N],[11,"to_string","","",47,[[["self"]],["string"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"as_result","","",47,[[["self"]],["result",["parseerr"]]]],[11,"into_collection","","",48,[[["self"]],["smallvec"]]],[11,"mapped","","",48,[[["self"],["f"]],["smallvec"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,N],[11,"to_string","","",48,[[["self"]],["string"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"as_result","","",48,[[["self"]],["result",["parseerr"]]]],[11,"into_collection","","",49,[[["self"]],["smallvec"]]],[11,"mapped","","",49,[[["self"],["f"]],["smallvec"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,N],[11,"to_string","","",49,[[["self"]],["string"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"as_result","","",49,[[["self"]],["result",["parseerr"]]]],[11,"equivalent","","",49,[[["self"],["k"]],["bool"]]],[11,"into_collection","","",50,[[["self"]],["smallvec"]]],[11,"mapped","","",50,[[["self"],["f"]],["smallvec"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,N],[11,"to_string","","",50,[[["self"]],["string"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"as_result","","",50,[[["self"]],["result",["parseerr"]]]],[11,"equivalent","","",50,[[["self"],["k"]],["bool"]]],[11,"into_collection","","",51,[[["self"]],["smallvec"]]],[11,"mapped","","",51,[[["self"],["f"]],["smallvec"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,N],[11,"to_string","","",51,[[["self"]],["string"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"as_result","","",51,[[["self"]],["result",["parseerr"]]]],[11,"into_collection","","",52,[[["self"]],["smallvec"]]],[11,"mapped","","",52,[[["self"],["f"]],["smallvec"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,N],[11,"to_string","","",52,[[["self"]],["string"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"as_result","","",52,[[["self"]],["result",["parseerr"]]]],[11,"into_collection","","",53,[[["self"]],["smallvec"]]],[11,"mapped","","",53,[[["self"],["f"]],["smallvec"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,N],[11,"to_string","","",53,[[["self"]],["string"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"as_result","","",53,[[["self"]],["result",["parseerr"]]]],[11,"into_collection","","",54,[[["self"]],["smallvec"]]],[11,"mapped","","",54,[[["self"],["f"]],["smallvec"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,N],[11,"to_string","","",54,[[["self"]],["string"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"as_result","","",54,[[["self"]],["result",["parseerr"]]]],[11,"into_collection","","",55,[[["self"]],["smallvec"]]],[11,"mapped","","",55,[[["self"],["f"]],["smallvec"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,N],[11,"to_string","","",55,[[["self"]],["string"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"as_result","","",55,[[["self"]],["result",["parseerr"]]]],[11,"into_collection","","",56,[[["self"]],["smallvec"]]],[11,"mapped","","",56,[[["self"],["f"]],["smallvec"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,N],[11,"to_string","","",56,[[["self"]],["string"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"as_result","","",56,[[["self"]],["result",["parseerr"]]]],[11,"into_collection","","",57,[[["self"]],["smallvec"]]],[11,"mapped","","",57,[[["self"],["f"]],["smallvec"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,N],[11,"to_string","","",57,[[["self"]],["string"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"as_result","","",57,[[["self"]],["result",["parseerr"]]]],[11,"into_collection","","",58,[[["self"]],["smallvec"]]],[11,"mapped","","",58,[[["self"],["f"]],["smallvec"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,N],[11,"to_string","","",58,[[["self"]],["string"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"as_result","","",58,[[["self"]],["result",["parseerr"]]]],[11,"into_collection","","",59,[[["self"]],["smallvec"]]],[11,"mapped","","",59,[[["self"],["f"]],["smallvec"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,N],[11,"to_string","","",59,[[["self"]],["string"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"as_result","","",59,[[["self"]],["result",["parseerr"]]]],[11,"into_collection","","",60,[[["self"]],["smallvec"]]],[11,"mapped","","",60,[[["self"],["f"]],["smallvec"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,N],[11,"to_string","","",60,[[["self"]],["string"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"as_result","","",60,[[["self"]],["result",["parseerr"]]]],[11,"into_collection","","",61,[[["self"]],["smallvec"]]],[11,"mapped","","",61,[[["self"],["f"]],["smallvec"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,N],[11,"to_string","","",61,[[["self"]],["string"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"as_result","","",61,[[["self"]],["result",["parseerr"]]]],[11,"into_collection","","",62,[[["self"]],["smallvec"]]],[11,"mapped","","",62,[[["self"],["f"]],["smallvec"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[["self"]],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,N],[11,"to_string","","",62,[[["self"]],["string"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"as_result","","",62,[[["self"]],["result",["parseerr"]]]],[11,"into_collection","","",63,[[["self"]],["smallvec"]]],[11,"mapped","","",63,[[["self"],["f"]],["smallvec"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[["self"]],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,N],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"as_result","","",63,[[["self"]],["result",["parseerr"]]]],[11,"into_collection","","",64,[[["self"]],["smallvec"]]],[11,"mapped","","",64,[[["self"],["f"]],["smallvec"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[["self"]],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,N],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"as_result","","",64,[[["self"]],["result",["parseerr"]]]],[11,"into_collection","","",65,[[["self"]],["smallvec"]]],[11,"mapped","","",65,[[["self"],["f"]],["smallvec"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[["self"]],["u"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,N],[11,"to_string","","",65,[[["self"]],["string"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"as_result","","",65,[[["self"]],["result",["parseerr"]]]],[11,"into_collection","","",66,[[["self"]],["smallvec"]]],[11,"mapped","","",66,[[["self"],["f"]],["smallvec"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[["self"]],["u"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,N],[11,"to_string","","",66,[[["self"]],["string"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"as_result","","",66,[[["self"]],["result",["parseerr"]]]],[11,"into_collection","","",67,[[["self"]],["smallvec"]]],[11,"mapped","","",67,[[["self"],["f"]],["smallvec"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[["self"]],["u"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,N],[11,"to_string","","",67,[[["self"]],["string"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"as_result","","",67,[[["self"]],["result",["parseerr"]]]],[11,"into_collection","","",68,[[["self"]],["smallvec"]]],[11,"mapped","","",68,[[["self"],["f"]],["smallvec"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[["self"]],["u"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,N],[11,"to_string","","",68,[[["self"]],["string"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"try_into","","",68,[[["self"]],["result"]]],[11,"get_type_id","","",68,[[["self"]],["typeid"]]],[11,"as_result","","",68,[[["self"]],["result",["parseerr"]]]],[11,"into_collection","","",69,[[["self"]],["smallvec"]]],[11,"mapped","","",69,[[["self"],["f"]],["smallvec"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[["self"]],["u"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,N],[11,"to_string","","",69,[[["self"]],["string"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"try_into","","",69,[[["self"]],["result"]]],[11,"get_type_id","","",69,[[["self"]],["typeid"]]],[11,"as_result","","",69,[[["self"]],["result",["parseerr"]]]],[11,"into_collection","","",70,[[["self"]],["smallvec"]]],[11,"mapped","","",70,[[["self"],["f"]],["smallvec"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[["self"]],["u"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,N],[11,"to_string","","",70,[[["self"]],["string"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"try_into","","",70,[[["self"]],["result"]]],[11,"get_type_id","","",70,[[["self"]],["typeid"]]],[11,"as_result","","",70,[[["self"]],["result",["parseerr"]]]],[11,"into_collection","","",71,[[["self"]],["smallvec"]]],[11,"mapped","","",71,[[["self"],["f"]],["smallvec"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[["self"]],["u"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,N],[11,"to_string","","",71,[[["self"]],["string"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"try_into","","",71,[[["self"]],["result"]]],[11,"get_type_id","","",71,[[["self"]],["typeid"]]],[11,"as_result","","",71,[[["self"]],["result",["parseerr"]]]],[11,"into_collection","","",72,[[["self"]],["smallvec"]]],[11,"mapped","","",72,[[["self"],["f"]],["smallvec"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[["self"]],["u"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,N],[11,"to_string","","",72,[[["self"]],["string"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"try_into","","",72,[[["self"]],["result"]]],[11,"get_type_id","","",72,[[["self"]],["typeid"]]],[11,"as_result","","",72,[[["self"]],["result",["parseerr"]]]],[11,"equivalent","","",72,[[["self"],["k"]],["bool"]]],[11,"into_collection","","",73,[[["self"]],["smallvec"]]],[11,"mapped","","",73,[[["self"],["f"]],["smallvec"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[["self"]],["u"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,N],[11,"to_string","","",73,[[["self"]],["string"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"try_into","","",73,[[["self"]],["result"]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"as_result","","",73,[[["self"]],["result",["parseerr"]]]],[11,"into_collection","","",74,[[["self"]],["smallvec"]]],[11,"mapped","","",74,[[["self"],["f"]],["smallvec"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[["self"]],["u"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,N],[11,"to_string","","",74,[[["self"]],["string"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"try_into","","",74,[[["self"]],["result"]]],[11,"get_type_id","","",74,[[["self"]],["typeid"]]],[11,"as_result","","",74,[[["self"]],["result",["parseerr"]]]],[11,"equivalent","","",74,[[["self"],["k"]],["bool"]]],[11,"into_collection","","",75,[[["self"]],["smallvec"]]],[11,"mapped","","",75,[[["self"],["f"]],["smallvec"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[["self"]],["u"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,N],[11,"to_string","","",75,[[["self"]],["string"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"try_into","","",75,[[["self"]],["result"]]],[11,"get_type_id","","",75,[[["self"]],["typeid"]]],[11,"as_result","","",75,[[["self"]],["result",["parseerr"]]]],[11,"equivalent","","",75,[[["self"],["k"]],["bool"]]],[11,"into_collection","","",76,[[["self"]],["smallvec"]]],[11,"mapped","","",76,[[["self"],["f"]],["smallvec"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[["self"]],["u"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,N],[11,"to_string","","",76,[[["self"]],["string"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"try_into","","",76,[[["self"]],["result"]]],[11,"get_type_id","","",76,[[["self"]],["typeid"]]],[11,"as_result","","",76,[[["self"]],["result",["parseerr"]]]],[11,"into_collection","rocket_http::uri","",95,[[["self"]],["smallvec"]]],[11,"mapped","","",95,[[["self"],["f"]],["smallvec"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"into","","",95,[[["self"]],["u"]]],[11,"to_string","","",95,[[["self"]],["string"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"try_into","","",95,[[["self"]],["result"]]],[11,"get_type_id","","",95,[[["self"]],["typeid"]]],[11,"as_result","","",95,[[["self"]],["result",["parseerr"]]]],[11,"into_collection","","",83,[[["self"]],["smallvec"]]],[11,"mapped","","",83,[[["self"],["f"]],["smallvec"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[["self"]],["u"]]],[11,"to_owned","","",83,[[["self"]],["t"]]],[11,"clone_into","","",83,N],[11,"to_string","","",83,[[["self"]],["string"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"try_into","","",83,[[["self"]],["result"]]],[11,"get_type_id","","",83,[[["self"]],["typeid"]]],[11,"as_result","","",83,[[["self"]],["result",["parseerr"]]]],[11,"into_collection","","",82,[[["self"]],["smallvec"]]],[11,"mapped","","",82,[[["self"],["f"]],["smallvec"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[["self"]],["u"]]],[11,"to_owned","","",82,[[["self"]],["t"]]],[11,"clone_into","","",82,N],[11,"to_string","","",82,[[["self"]],["string"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"try_into","","",82,[[["self"]],["result"]]],[11,"get_type_id","","",82,[[["self"]],["typeid"]]],[11,"as_result","","",82,[[["self"]],["result",["parseerr"]]]],[11,"into_collection","","",84,[[["self"]],["smallvec"]]],[11,"mapped","","",84,[[["self"],["f"]],["smallvec"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[["self"]],["u"]]],[11,"to_owned","","",84,[[["self"]],["t"]]],[11,"clone_into","","",84,N],[11,"to_string","","",84,[[["self"]],["string"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"try_into","","",84,[[["self"]],["result"]]],[11,"get_type_id","","",84,[[["self"]],["typeid"]]],[11,"as_result","","",84,[[["self"]],["result",["parseerr"]]]],[11,"into_collection","","",81,[[["self"]],["smallvec"]]],[11,"mapped","","",81,[[["self"],["f"]],["smallvec"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[["self"]],["u"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"try_into","","",81,[[["self"]],["result"]]],[11,"get_type_id","","",81,[[["self"]],["typeid"]]],[11,"as_result","","",81,[[["self"]],["result",["parseerr"]]]],[11,"into_collection","","",78,[[["self"]],["smallvec"]]],[11,"mapped","","",78,[[["self"],["f"]],["smallvec"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into_iter","","",78,[[["self"]],["i"]]],[11,"into","","",78,[[["self"]],["u"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,N],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"try_into","","",78,[[["self"]],["result"]]],[11,"get_type_id","","",78,[[["self"]],["typeid"]]],[11,"as_result","","",78,[[["self"]],["result",["parseerr"]]]],[11,"into_collection","","",79,[[["self"]],["smallvec"]]],[11,"mapped","","",79,[[["self"],["f"]],["smallvec"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[["self"]],["u"]]],[11,"to_owned","","",79,[[["self"]],["t"]]],[11,"clone_into","","",79,N],[11,"to_string","","",79,[[["self"]],["string"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"try_into","","",79,[[["self"]],["result"]]],[11,"get_type_id","","",79,[[["self"]],["typeid"]]],[11,"as_result","","",79,[[["self"]],["result",["parseerr"]]]],[11,"into_collection","","",80,[[["self"]],["smallvec"]]],[11,"mapped","","",80,[[["self"],["f"]],["smallvec"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[["self"]],["u"]]],[11,"to_owned","","",80,[[["self"]],["t"]]],[11,"clone_into","","",80,N],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"try_into","","",80,[[["self"]],["result"]]],[11,"get_type_id","","",80,[[["self"]],["typeid"]]],[11,"as_result","","",80,[[["self"]],["result",["parseerr"]]]],[11,"equivalent","","",80,[[["self"],["k"]],["bool"]]],[11,"into_collection","","",101,[[["self"]],["smallvec"]]],[11,"mapped","","",101,[[["self"],["f"]],["smallvec"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"into","","",101,[[["self"]],["u"]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"try_into","","",101,[[["self"]],["result"]]],[11,"get_type_id","","",101,[[["self"]],["typeid"]]],[11,"as_result","","",101,[[["self"]],["result",["parseerr"]]]],[11,"into_collection","","",102,[[["self"]],["smallvec"]]],[11,"mapped","","",102,[[["self"],["f"]],["smallvec"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"into","","",102,[[["self"]],["u"]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"try_into","","",102,[[["self"]],["result"]]],[11,"get_type_id","","",102,[[["self"]],["typeid"]]],[11,"as_result","","",102,[[["self"]],["result",["parseerr"]]]],[11,"to_string","rocket_http::uncased","",96,[[["self"]],["string"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"get_type_id","","",96,[[["self"]],["typeid"]]],[11,"equivalent","","",96,[[["self"],["k"]],["bool"]]],[11,"into_collection","","",97,[[["self"]],["smallvec"]]],[11,"mapped","","",97,[[["self"],["f"]],["smallvec"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"into","","",97,[[["self"]],["u"]]],[11,"to_owned","","",97,[[["self"]],["t"]]],[11,"clone_into","","",97,N],[11,"to_string","","",97,[[["self"]],["string"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"try_into","","",97,[[["self"]],["result"]]],[11,"get_type_id","","",97,[[["self"]],["typeid"]]],[11,"as_result","","",97,[[["self"]],["result",["parseerr"]]]],[11,"equivalent","","",97,[[["self"],["k"]],["bool"]]],[11,"eq","rocket_http","",0,[[["self"],["samesite"]],["bool"]]],[11,"eq","","",98,[[["self"],["cookie"]],["bool"]]],[11,"fmt","","Formats the cookie `self` as a `Set-Cookie` header value.",98,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"from_str","","",98,[[["str"]],["result",["cookie","parseerror"]]]],[11,"fmt","","",98,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"clone","","",0,[[["self"]],["samesite"]]],[11,"clone","","",98,[[["self"]],["cookie"]]],[11,"hash","","",0,N],[11,"scheme","rocket_http::hyper::header","",25,[[],["option",["str"]]]],[11,"fmt_scheme","","",25,[[["self"],["formatter"]],["result",["error"]]]],[11,"scheme","","",26,[[],["option",["str"]]]],[11,"fmt_scheme","","",26,[[["self"],["formatter"]],["result",["error"]]]],[11,"cmp","","",50,[[["self"],["quality"]],["ordering"]]],[11,"cmp","","",41,[[["self"],["httpdate"]],["ordering"]]],[11,"eq","","",49,[[["self"],["protocol"]],["bool"]]],[11,"ne","","",49,[[["self"],["protocol"]],["bool"]]],[11,"eq","","",54,[[["self"],["transferencoding"]],["bool"]]],[11,"ne","","",54,[[["self"],["transferencoding"]],["bool"]]],[11,"eq","","",52,[[["self"],["referer"]],["bool"]]],[11,"ne","","",52,[[["self"],["referer"]],["bool"]]],[11,"eq","","",53,[[["self"],["stricttransportsecurity"]],["bool"]]],[11,"ne","","",53,[[["self"],["stricttransportsecurity"]],["bool"]]],[11,"eq","","",57,[[["self"],["accesscontrolalloworigin"]],["bool"]]],[11,"ne","","",57,[[["self"],["accesscontrolalloworigin"]],["bool"]]],[11,"eq","","",41,[[["self"],["httpdate"]],["bool"]]],[11,"ne","","",41,[[["self"],["httpdate"]],["bool"]]],[11,"eq","","",18,[[["self"],["accesscontrolallowmethods"]],["bool"]]],[11,"ne","","",18,[[["self"],["accesscontrolallowmethods"]],["bool"]]],[11,"eq","","",56,[[["self"],["useragent"]],["bool"]]],[11,"ne","","",56,[[["self"],["useragent"]],["bool"]]],[11,"eq","","",35,[[["self"],["date"]],["bool"]]],[11,"ne","","",35,[[["self"],["date"]],["bool"]]],[11,"eq","","",64,[[["self"],["dispositiontype"]],["bool"]]],[11,"ne","","",64,[[["self"],["dispositiontype"]],["bool"]]],[11,"eq","","",29,[[["self"],["contentdisposition"]],["bool"]]],[11,"ne","","",29,[[["self"],["contentdisposition"]],["bool"]]],[11,"eq","","",75,[[["self"],["referrerpolicy"]],["bool"]]],[11,"eq","","",44,[[["self"],["lastmodified"]],["bool"]]],[11,"ne","","",44,[[["self"],["lastmodified"]],["bool"]]],[11,"eq","","",71,[[["self"],["preference"]],["bool"]]],[11,"ne","","",71,[[["self"],["preference"]],["bool"]]],[11,"eq","","",58,[[["self"],["byterangespec"]],["bool"]]],[11,"ne","","",58,[[["self"],["byterangespec"]],["bool"]]],[11,"eq","","",59,[[["self"],["cachedirective"]],["bool"]]],[11,"ne","","",59,[[["self"],["cachedirective"]],["bool"]]],[11,"eq","","",24,[[["self"],["authorization"]],["bool"]]],[11,"ne","","",24,[[["self"],["authorization"]],["bool"]]],[11,"eq","","",26,[[["self"],["bearer"]],["bool"]]],[11,"ne","","",26,[[["self"],["bearer"]],["bool"]]],[11,"eq","","",15,[[["self"],["acceptlanguage"]],["bool"]]],[11,"ne","","",15,[[["self"],["acceptlanguage"]],["bool"]]],[11,"eq","","",70,[[["self"],["pragma"]],["bool"]]],[11,"ne","","",70,[[["self"],["pragma"]],["bool"]]],[11,"eq","","",69,[[["self"],["ifrange"]],["bool"]]],[11,"ne","","",69,[[["self"],["ifrange"]],["bool"]]],[11,"eq","","",40,[[["self"],["host"]],["bool"]]],[11,"ne","","",40,[[["self"],["host"]],["bool"]]],[11,"eq","","",46,[[["self"],["origin"]],["bool"]]],[11,"eq","","",62,[[["self"],["contentrangespec"]],["bool"]]],[11,"ne","","",62,[[["self"],["contentrangespec"]],["bool"]]],[11,"eq","","",33,[[["self"],["contentrange"]],["bool"]]],[11,"ne","","",33,[[["self"],["contentrange"]],["bool"]]],[11,"eq","","",30,[[["self"],["contentencoding"]],["bool"]]],[11,"ne","","",30,[[["self"],["contentencoding"]],["bool"]]],[11,"eq","","",74,[[["self"],["rangeunit"]],["bool"]]],[11,"ne","","",74,[[["self"],["rangeunit"]],["bool"]]],[11,"eq","","",32,[[["self"],["contentlength"]],["bool"]]],[11,"ne","","",32,[[["self"],["contentlength"]],["bool"]]],[11,"eq","","",16,[[["self"],["acceptranges"]],["bool"]]],[11,"ne","","",16,[[["self"],["acceptranges"]],["bool"]]],[11,"eq","","",66,[[["self"],["expect"]],["bool"]]],[11,"eq","","",47,[[["self"],["prefer"]],["bool"]]],[11,"ne","","",47,[[["self"],["prefer"]],["bool"]]],[11,"eq","","",13,[[["self"],["acceptcharset"]],["bool"]]],[11,"ne","","",13,[[["self"],["acceptcharset"]],["bool"]]],[11,"eq","","",36,[[["self"],["etag"]],["bool"]]],[11,"ne","","",36,[[["self"],["etag"]],["bool"]]],[11,"eq","","",12,[[["self"],["accept"]],["bool"]]],[11,"ne","","",12,[[["self"],["accept"]],["bool"]]],[11,"eq","","",65,[[["self"],["encoding"]],["bool"]]],[11,"ne","","",65,[[["self"],["encoding"]],["bool"]]],[11,"eq","","",72,[[["self"],["protocolname"]],["bool"]]],[11,"ne","","",72,[[["self"],["protocolname"]],["bool"]]],[11,"eq","","",48,[[["self"],["preferenceapplied"]],["bool"]]],[11,"ne","","",48,[[["self"],["preferenceapplied"]],["bool"]]],[11,"eq","","",34,[[["self"],["contenttype"]],["bool"]]],[11,"ne","","",34,[[["self"],["contenttype"]],["bool"]]],[11,"eq","","",17,[[["self"],["accesscontrolallowheaders"]],["bool"]]],[11,"ne","","",17,[[["self"],["accesscontrolallowheaders"]],["bool"]]],[11,"eq","","",42,[[["self"],["ifmodifiedsince"]],["bool"]]],[11,"ne","","",42,[[["self"],["ifmodifiedsince"]],["bool"]]],[11,"eq","","",63,[[["self"],["dispositionparam"]],["bool"]]],[11,"ne","","",63,[[["self"],["dispositionparam"]],["bool"]]],[11,"eq","","",73,[[["self"],["range"]],["bool"]]],[11,"ne","","",73,[[["self"],["range"]],["bool"]]],[11,"eq","","",27,[[["self"],["cachecontrol"]],["bool"]]],[11,"ne","","",27,[[["self"],["cachecontrol"]],["bool"]]],[11,"eq","","",19,[[["self"],["accesscontrolexposeheaders"]],["bool"]]],[11,"ne","","",19,[[["self"],["accesscontrolexposeheaders"]],["bool"]]],[11,"eq","","",20,[[["self"],["accesscontrolmaxage"]],["bool"]]],[11,"ne","","",20,[[["self"],["accesscontrolmaxage"]],["bool"]]],[11,"eq","","",25,[[["self"],["basic"]],["bool"]]],[11,"ne","","",25,[[["self"],["basic"]],["bool"]]],[11,"eq","","",60,[[["self"],["charset"]],["bool"]]],[11,"ne","","",60,[[["self"],["charset"]],["bool"]]],[11,"eq","","",22,[[["self"],["accesscontrolrequestmethod"]],["bool"]]],[11,"ne","","",22,[[["self"],["accesscontrolrequestmethod"]],["bool"]]],[11,"eq","","",55,[[["self"],["upgrade"]],["bool"]]],[11,"ne","","",55,[[["self"],["upgrade"]],["bool"]]],[11,"eq","","",31,[[["self"],["contentlanguage"]],["bool"]]],[11,"ne","","",31,[[["self"],["contentlanguage"]],["bool"]]],[11,"eq","","",21,[[["self"],["accesscontrolrequestheaders"]],["bool"]]],[11,"ne","","",21,[[["self"],["accesscontrolrequestheaders"]],["bool"]]],[11,"eq","","",37,[[["self"],["entitytag"]],["bool"]]],[11,"ne","","",37,[[["self"],["entitytag"]],["bool"]]],[11,"eq","","",39,[[["self"],["from"]],["bool"]]],[11,"ne","","",39,[[["self"],["from"]],["bool"]]],[11,"eq","","",28,[[["self"],["connection"]],["bool"]]],[11,"ne","","",28,[[["self"],["connection"]],["bool"]]],[11,"eq","","",61,[[["self"],["connectionoption"]],["bool"]]],[11,"ne","","",61,[[["self"],["connectionoption"]],["bool"]]],[11,"eq","","",100,[[["self"],["headers"]],["bool"]]],[11,"eq","","",38,[[["self"],["expires"]],["bool"]]],[11,"ne","","",38,[[["self"],["expires"]],["bool"]]],[11,"eq","","",67,[[["self"],["ifmatch"]],["bool"]]],[11,"ne","","",67,[[["self"],["ifmatch"]],["bool"]]],[11,"eq","","",68,[[["self"],["ifnonematch"]],["bool"]]],[11,"ne","","",68,[[["self"],["ifnonematch"]],["bool"]]],[11,"eq","","",14,[[["self"],["acceptencoding"]],["bool"]]],[11,"ne","","",14,[[["self"],["acceptencoding"]],["bool"]]],[11,"eq","","",45,[[["self"],["location"]],["bool"]]],[11,"ne","","",45,[[["self"],["location"]],["bool"]]],[11,"eq","","",50,[[["self"],["quality"]],["bool"]]],[11,"ne","","",50,[[["self"],["quality"]],["bool"]]],[11,"eq","","",51,[[["self"],["qualityitem"]],["bool"]]],[11,"ne","","",51,[[["self"],["qualityitem"]],["bool"]]],[11,"eq","","",99,[[["self"],["accesscontrolallowcredentials"]],["bool"]]],[11,"eq","","",43,[[["self"],["ifunmodifiedsince"]],["bool"]]],[11,"ne","","",43,[[["self"],["ifunmodifiedsince"]],["bool"]]],[11,"eq","","",23,[[["self"],["allow"]],["bool"]]],[11,"ne","","",23,[[["self"],["allow"]],["bool"]]],[11,"eq","","",76,[[["self"],["vary"]],["bool"]]],[11,"ne","","",76,[[["self"],["vary"]],["bool"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",67,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",56,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",100,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",55,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",59,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",62,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",68,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",65,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",74,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",71,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",52,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",57,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",50,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",37,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",58,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",70,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",99,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",61,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",72,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",53,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",66,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",69,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",76,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",73,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",75,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",54,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",60,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",71,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",69,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",67,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",55,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",63,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",60,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",61,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",99,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",50,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",56,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",75,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",65,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",68,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",66,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",53,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",59,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",58,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",73,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",70,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",62,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",52,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",72,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",100,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",76,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",64,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",54,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",74,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",57,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",37,[[["self"],["formatter"]],["result",["error"]]]],[11,"deref_mut","","",28,[[["self"]],["vec"]]],[11,"deref_mut","","",30,[[["self"]],["vec"]]],[11,"deref_mut","","",16,[[["self"]],["vec"]]],[11,"deref_mut","","",34,[[["self"]],["mime"]]],[11,"deref_mut","","",38,[[["self"]],["httpdate"]]],[11,"deref_mut","","",39,[[["self"]],["string"]]],[11,"deref_mut","","",17,[[["self"]],["vec"]]],[11,"deref_mut","","",52,[[["self"]],["string"]]],[11,"deref_mut","","",36,[[["self"]],["entitytag"]]],[11,"deref_mut","","",27,[[["self"]],["vec"]]],[11,"deref_mut","","",20,[[["self"]],["u32"]]],[11,"deref_mut","","",12,[[["self"]],["vec"]]],[11,"deref_mut","","",31,[[["self"]],["vec"]]],[11,"deref_mut","","",42,[[["self"]],["httpdate"]]],[11,"deref_mut","","",32,[[["self"]],["u64"]]],[11,"deref_mut","","",48,[[["self"]],["vec"]]],[11,"deref_mut","","",15,[[["self"]],["vec"]]],[11,"deref_mut","","",33,[[["self"]],["contentrangespec"]]],[11,"deref_mut","","",22,[[["self"]],["method"]]],[11,"deref_mut","","",54,[[["self"]],["vec"]]],[11,"deref_mut","","",45,[[["self"]],["string"]]],[11,"deref_mut","","",14,[[["self"]],["vec"]]],[11,"deref_mut","","",18,[[["self"]],["vec"]]],[11,"deref_mut","","",21,[[["self"]],["vec"]]],[11,"deref_mut","","",24,[[["self"]],["s"]]],[11,"deref_mut","","",23,[[["self"]],["vec"]]],[11,"deref_mut","","",56,[[["self"]],["string"]]],[11,"deref_mut","","",47,[[["self"]],["vec"]]],[11,"deref_mut","","",44,[[["self"]],["httpdate"]]],[11,"deref_mut","","",19,[[["self"]],["vec"]]],[11,"deref_mut","","",43,[[["self"]],["httpdate"]]],[11,"deref_mut","","",55,[[["self"]],["vec"]]],[11,"deref_mut","","",35,[[["self"]],["httpdate"]]],[11,"deref_mut","","",13,[[["self"]],["vec"]]],[11,"clone","","",21,[[["self"]],["accesscontrolrequestheaders"]]],[11,"clone","","",57,[[["self"]],["accesscontrolalloworigin"]]],[11,"clone","","",42,[[["self"]],["ifmodifiedsince"]]],[11,"clone","","",22,[[["self"]],["accesscontrolrequestmethod"]]],[11,"clone","","",49,[[["self"]],["protocol"]]],[11,"clone","","",37,[[["self"]],["entitytag"]]],[11,"clone","","",48,[[["self"]],["preferenceapplied"]]],[11,"clone","","",33,[[["self"]],["contentrange"]]],[11,"clone","","",75,[[["self"]],["referrerpolicy"]]],[11,"clone","","",18,[[["self"]],["accesscontrolallowmethods"]]],[11,"clone","","",51,[[["self"]],["qualityitem"]]],[11,"clone","","",36,[[["self"]],["etag"]]],[11,"clone","","",41,[[["self"]],["httpdate"]]],[11,"clone","","",68,[[["self"]],["ifnonematch"]]],[11,"clone","","",64,[[["self"]],["dispositiontype"]]],[11,"clone","","",67,[[["self"]],["ifmatch"]]],[11,"clone","","",15,[[["self"]],["acceptlanguage"]]],[11,"clone","","",14,[[["self"]],["acceptencoding"]]],[11,"clone","","",45,[[["self"]],["location"]]],[11,"clone","","",24,[[["self"]],["authorization"]]],[11,"clone","","",100,[[["self"]],["headers"]]],[11,"clone","","",61,[[["self"]],["connectionoption"]]],[11,"clone","","",69,[[["self"]],["ifrange"]]],[11,"clone","","",74,[[["self"]],["rangeunit"]]],[11,"clone","","",13,[[["self"]],["acceptcharset"]]],[11,"clone","","",58,[[["self"]],["byterangespec"]]],[11,"clone","","",52,[[["self"]],["referer"]]],[11,"clone","","",40,[[["self"]],["host"]]],[11,"clone","","",46,[[["self"]],["origin"]]],[11,"clone","","",27,[[["self"]],["cachecontrol"]]],[11,"clone","","",34,[[["self"]],["contenttype"]]],[11,"clone","","",31,[[["self"]],["contentlanguage"]]],[11,"clone","","",99,[[["self"]],["accesscontrolallowcredentials"]]],[11,"clone","","",59,[[["self"]],["cachedirective"]]],[11,"clone","","",55,[[["self"]],["upgrade"]]],[11,"clone","","",25,[[["self"]],["basic"]]],[11,"clone","","",12,[[["self"]],["accept"]]],[11,"clone","","",16,[[["self"]],["acceptranges"]]],[11,"clone","","",44,[[["self"]],["lastmodified"]]],[11,"clone","","",39,[[["self"]],["from"]]],[11,"clone","","",56,[[["self"]],["useragent"]]],[11,"clone","","",65,[[["self"]],["encoding"]]],[11,"clone","","",54,[[["self"]],["transferencoding"]]],[11,"clone","","",62,[[["self"]],["contentrangespec"]]],[11,"clone","","",50,[[["self"]],["quality"]]],[11,"clone","","",30,[[["self"]],["contentencoding"]]],[11,"clone","","",26,[[["self"]],["bearer"]]],[11,"clone","","",38,[[["self"]],["expires"]]],[11,"clone","","",32,[[["self"]],["contentlength"]]],[11,"clone","","",71,[[["self"]],["preference"]]],[11,"clone","","",53,[[["self"]],["stricttransportsecurity"]]],[11,"clone","","",23,[[["self"]],["allow"]]],[11,"clone","","",29,[[["self"]],["contentdisposition"]]],[11,"clone","","",43,[[["self"]],["ifunmodifiedsince"]]],[11,"clone","","",28,[[["self"]],["connection"]]],[11,"clone","","",66,[[["self"]],["expect"]]],[11,"clone","","",60,[[["self"]],["charset"]]],[11,"clone","","",70,[[["self"]],["pragma"]]],[11,"clone","","",20,[[["self"]],["accesscontrolmaxage"]]],[11,"clone","","",73,[[["self"]],["range"]]],[11,"clone","","",17,[[["self"]],["accesscontrolallowheaders"]]],[11,"clone","","",76,[[["self"]],["vary"]]],[11,"clone","","",72,[[["self"]],["protocolname"]]],[11,"clone","","",47,[[["self"]],["prefer"]]],[11,"clone","","",19,[[["self"]],["accesscontrolexposeheaders"]]],[11,"clone","","",63,[[["self"]],["dispositionparam"]]],[11,"clone","","",35,[[["self"]],["date"]]],[11,"partial_cmp","","",51,[[["self"],["qualityitem"]],["option",["ordering"]]]],[11,"partial_cmp","","",41,[[["self"],["httpdate"]],["option",["ordering"]]]],[11,"lt","","",41,[[["self"],["httpdate"]],["bool"]]],[11,"le","","",41,[[["self"],["httpdate"]],["bool"]]],[11,"gt","","",41,[[["self"],["httpdate"]],["bool"]]],[11,"ge","","",41,[[["self"],["httpdate"]],["bool"]]],[11,"partial_cmp","","",50,[[["self"],["quality"]],["option",["ordering"]]]],[11,"lt","","",50,[[["self"],["quality"]],["bool"]]],[11,"le","","",50,[[["self"],["quality"]],["bool"]]],[11,"gt","","",50,[[["self"],["quality"]],["bool"]]],[11,"ge","","",50,[[["self"],["quality"]],["bool"]]],[11,"from_iter","","",100,[[["i"]],["headers"]]],[11,"default","","",50,[[],["quality"]]],[11,"from_str","","",51,[[["str"]],["result",["qualityitem","error"]]]],[11,"from_str","","",74,[[["str"]],["result",["rangeunit","error"]]]],[11,"from_str","","",71,[[["str"]],["result",["preference","option"]]]],[11,"from_str","","",60,[[["str"]],["result",["charset","error"]]]],[11,"from_str","","",72,[[["str"]],["result",["protocolname"]]]],[11,"from_str","","",46,[[["str"]],["result",["origin","error"]]]],[11,"from_str","","",26,[[["str"]],["result",["bearer","error"]]]],[11,"from_str","","",73,[[["str"]],["result",["range","error"]]]],[11,"from_str","","",65,[[["str"]],["result",["encoding","error"]]]],[11,"from_str","","",49,[[["str"]],["result",["protocol"]]]],[11,"from_str","","",53,[[["str"]],["result",["stricttransportsecurity","error"]]]],[11,"from_str","","",58,[[["str"]],["result",["byterangespec","error"]]]],[11,"from_str","","",59,[[["str"]],["result",["cachedirective","option"]]]],[11,"from_str","","",37,[[["str"]],["result",["entitytag","error"]]]],[11,"from_str","","",41,[[["str"]],["result",["httpdate","error"]]]],[11,"from_str","","",40,[[["str"]],["result",["host","error"]]]],[11,"from_str","","",61,[[["str"]],["result",["connectionoption"]]]],[11,"from_str","","",25,[[["str"]],["result",["basic","error"]]]],[11,"from_str","","",62,[[["str"]],["result",["contentrangespec","error"]]]],[11,"fmt_header","","",69,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",43,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",23,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",18,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",70,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",35,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",66,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",68,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",38,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",44,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",34,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",29,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",15,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",45,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",48,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",52,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",55,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",76,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",54,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",36,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",17,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",30,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",67,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",39,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",42,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",27,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",19,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",53,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",32,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",75,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",28,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",13,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",22,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",56,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",12,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",40,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",16,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",47,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",99,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",31,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",21,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",46,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",57,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",73,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",24,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",33,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",14,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt_header","","",20,[[["self"],["formatter"]],["result",["error"]]]],[11,"deref","","",24,[[["self"]],["s"]]],[11,"deref","","",20,[[["self"]],["u32"]]],[11,"deref","","",17,[[["self"]],["vec"]]],[11,"deref","","",42,[[["self"]],["httpdate"]]],[11,"deref","","",47,[[["self"]],["vec"]]],[11,"deref","","",35,[[["self"]],["httpdate"]]],[11,"deref","","",15,[[["self"]],["vec"]]],[11,"deref","","",39,[[["self"]],["string"]]],[11,"deref","","",21,[[["self"]],["vec"]]],[11,"deref","","",45,[[["self"]],["string"]]],[11,"deref","","",55,[[["self"]],["vec"]]],[11,"deref","","",54,[[["self"]],["vec"]]],[11,"deref","","",36,[[["self"]],["entitytag"]]],[11,"deref","","",27,[[["self"]],["vec"]]],[11,"deref","","",13,[[["self"]],["vec"]]],[11,"deref","","",44,[[["self"]],["httpdate"]]],[11,"deref","","",52,[[["self"]],["string"]]],[11,"deref","","",34,[[["self"]],["mime"]]],[11,"deref","","",56,[[["self"]],["string"]]],[11,"deref","","",30,[[["self"]],["vec"]]],[11,"deref","","",16,[[["self"]],["vec"]]],[11,"deref","","",28,[[["self"]],["vec"]]],[11,"deref","","",43,[[["self"]],["httpdate"]]],[11,"deref","","",22,[[["self"]],["method"]]],[11,"deref","","",32,[[["self"]],["u64"]]],[11,"deref","","",33,[[["self"]],["contentrangespec"]]],[11,"deref","","",23,[[["self"]],["vec"]]],[11,"deref","","",14,[[["self"]],["vec"]]],[11,"deref","","",38,[[["self"]],["httpdate"]]],[11,"deref","","",31,[[["self"]],["vec"]]],[11,"deref","","",12,[[["self"]],["vec"]]],[11,"deref","","",48,[[["self"]],["vec"]]],[11,"deref","","",19,[[["self"]],["vec"]]],[11,"deref","","",18,[[["self"]],["vec"]]],[11,"header_name","","",38,[[],["str"]]],[11,"parse_header","","",38,N],[11,"header_name","","",52,[[],["str"]]],[11,"parse_header","","",52,N],[11,"header_name","","",45,[[],["str"]]],[11,"parse_header","","",45,N],[11,"header_name","","",12,[[],["str"]]],[11,"parse_header","","",12,N],[11,"header_name","","",20,[[],["str"]]],[11,"parse_header","","",20,N],[11,"header_name","","",44,[[],["str"]]],[11,"parse_header","","",44,N],[11,"header_name","","",42,[[],["str"]]],[11,"parse_header","","",42,N],[11,"header_name","","",47,[[],["str"]]],[11,"parse_header","","",47,N],[11,"header_name","","",18,[[],["str"]]],[11,"parse_header","","",18,N],[11,"header_name","","",33,[[],["str"]]],[11,"parse_header","","",33,N],[11,"header_name","","",15,[[],["str"]]],[11,"parse_header","","",15,N],[11,"header_name","","",67,[[],["str"]]],[11,"parse_header","","",67,N],[11,"header_name","","",68,[[],["str"]]],[11,"parse_header","","",68,N],[11,"header_name","","",19,[[],["str"]]],[11,"parse_header","","",19,N],[11,"header_name","","",56,[[],["str"]]],[11,"parse_header","","",56,N],[11,"header_name","","",28,[[],["str"]]],[11,"parse_header","","",28,N],[11,"header_name","","",40,[[],["str"]]],[11,"parse_header","","",40,N],[11,"header_name","","",24,[[],["str"]]],[11,"parse_header","","",24,N],[11,"header_name","","",27,[[],["str"]]],[11,"parse_header","","",27,N],[11,"header_name","","",48,[[],["str"]]],[11,"parse_header","","",48,N],[11,"header_name","","",53,[[],["str"]]],[11,"parse_header","","",53,N],[11,"header_name","","",36,[[],["str"]]],[11,"parse_header","","",36,N],[11,"header_name","","",14,[[],["str"]]],[11,"parse_header","","",14,N],[11,"header_name","","",70,[[],["str"]]],[11,"parse_header","","",70,N],[11,"header_name","","",69,[[],["str"]]],[11,"parse_header","","",69,N],[11,"header_name","","",73,[[],["str"]]],[11,"parse_header","","",73,N],[11,"header_name","","",30,[[],["str"]]],[11,"parse_header","","",30,N],[11,"header_name","","",23,[[],["str"]]],[11,"parse_header","","",23,N],[11,"header_name","","",21,[[],["str"]]],[11,"parse_header","","",21,N],[11,"header_name","","",39,[[],["str"]]],[11,"parse_header","","",39,N],[11,"header_name","","",22,[[],["str"]]],[11,"parse_header","","",22,N],[11,"header_name","","",17,[[],["str"]]],[11,"parse_header","","",17,N],[11,"header_name","","",13,[[],["str"]]],[11,"parse_header","","",13,N],[11,"header_name","","",54,[[],["str"]]],[11,"parse_header","","",54,N],[11,"header_name","","",99,[[],["str"]]],[11,"parse_header","","",99,N],[11,"header_name","","",43,[[],["str"]]],[11,"parse_header","","",43,N],[11,"header_name","","",35,[[],["str"]]],[11,"parse_header","","",35,N],[11,"header_name","","",31,[[],["str"]]],[11,"parse_header","","",31,N],[11,"header_name","","",32,[[],["str"]]],[11,"parse_header","","",32,N],[11,"header_name","","",57,[[],["str"]]],[11,"parse_header","","",57,N],[11,"header_name","","",76,[[],["str"]]],[11,"parse_header","","",76,N],[11,"header_name","","",16,[[],["str"]]],[11,"parse_header","","",16,N],[11,"header_name","","",34,[[],["str"]]],[11,"parse_header","","",34,N],[11,"header_name","","",75,[[],["str"]]],[11,"parse_header","","",75,N],[11,"header_name","","",29,[[],["str"]]],[11,"parse_header","","",29,N],[11,"header_name","","",66,[[],["str"]]],[11,"parse_header","","",66,N],[11,"header_name","","",55,[[],["str"]]],[11,"parse_header","","",55,N],[11,"header_name","","",46,[[],["str"]]],[11,"parse_header","","",46,N],[11,"extend","","",100,N],[11,"cmp","rocket_http::hyper::mime","",7,[[["self"],["toplevel"]],["ordering"]]],[11,"cmp","","",8,[[["self"],["value"]],["ordering"]]],[11,"cmp","","",10,[[["self"],["attr"]],["ordering"]]],[11,"cmp","","",9,[[["self"],["mime"]],["ordering"]]],[11,"cmp","","",11,[[["self"],["sublevel"]],["ordering"]]],[11,"eq","","",10,[[["self"],["str"]],["bool"]]],[11,"eq","","",7,[[["self"],["string"]],["bool"]]],[11,"eq","","",7,[[["self"],["str"]],["bool"]]],[11,"eq","","",7,[[["self"],["str"]],["bool"]]],[11,"eq","","",8,[[["self"],["string"]],["bool"]]],[11,"eq","","",7,[[["self"],["toplevel"]],["bool"]]],[11,"eq","","",11,[[["self"],["string"]],["bool"]]],[11,"eq","","",9,[[["self"],["mime"]],["bool"]]],[11,"eq","","",10,[[["self"],["string"]],["bool"]]],[11,"eq","","",11,[[["self"],["str"]],["bool"]]],[11,"eq","","",8,[[["self"],["str"]],["bool"]]],[11,"eq","","",11,[[["self"],["sublevel"]],["bool"]]],[11,"eq","","",11,[[["self"],["str"]],["bool"]]],[11,"eq","","",8,[[["self"],["str"]],["bool"]]],[11,"eq","","",8,[[["self"],["value"]],["bool"]]],[11,"eq","","",10,[[["self"],["attr"]],["bool"]]],[11,"eq","","",10,[[["self"],["str"]],["bool"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result",["error"]]]],[11,"from_str","","",10,[[["str"]],["result",["attr"]]]],[11,"from_str","","",8,[[["str"]],["result",["value"]]]],[11,"from_str","","",11,[[["str"]],["result",["sublevel"]]]],[11,"from_str","","",9,[[["str"]],["result",["mime"]]]],[11,"from_str","","",7,[[["str"]],["result",["toplevel"]]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result",["error"]]]],[11,"deref","","",7,[[["self"]],["str"]]],[11,"deref","","",11,[[["self"]],["str"]]],[11,"deref","","",8,[[["self"]],["str"]]],[11,"deref","","",10,[[["self"]],["str"]]],[11,"clone","","",7,[[["self"]],["toplevel"]]],[11,"clone","","",10,[[["self"]],["attr"]]],[11,"clone","","",8,[[["self"]],["value"]]],[11,"clone","","",9,[[["self"]],["mime"]]],[11,"clone","","",11,[[["self"]],["sublevel"]]],[11,"partial_cmp","","",8,[[["self"],["value"]],["option",["ordering"]]]],[11,"lt","","",8,[[["self"],["value"]],["bool"]]],[11,"le","","",8,[[["self"],["value"]],["bool"]]],[11,"gt","","",8,[[["self"],["value"]],["bool"]]],[11,"ge","","",8,[[["self"],["value"]],["bool"]]],[11,"partial_cmp","","",9,[[["self"],["mime"]],["option",["ordering"]]]],[11,"lt","","",9,[[["self"],["mime"]],["bool"]]],[11,"le","","",9,[[["self"],["mime"]],["bool"]]],[11,"gt","","",9,[[["self"],["mime"]],["bool"]]],[11,"ge","","",9,[[["self"],["mime"]],["bool"]]],[11,"partial_cmp","","",7,[[["self"],["toplevel"]],["option",["ordering"]]]],[11,"lt","","",7,[[["self"],["toplevel"]],["bool"]]],[11,"le","","",7,[[["self"],["toplevel"]],["bool"]]],[11,"gt","","",7,[[["self"],["toplevel"]],["bool"]]],[11,"ge","","",7,[[["self"],["toplevel"]],["bool"]]],[11,"partial_cmp","","",10,[[["self"],["attr"]],["option",["ordering"]]]],[11,"lt","","",10,[[["self"],["attr"]],["bool"]]],[11,"le","","",10,[[["self"],["attr"]],["bool"]]],[11,"gt","","",10,[[["self"],["attr"]],["bool"]]],[11,"ge","","",10,[[["self"],["attr"]],["bool"]]],[11,"partial_cmp","","",11,[[["self"],["sublevel"]],["option",["ordering"]]]],[11,"lt","","",11,[[["self"],["sublevel"]],["bool"]]],[11,"le","","",11,[[["self"],["sublevel"]],["bool"]]],[11,"gt","","",11,[[["self"],["sublevel"]],["bool"]]],[11,"ge","","",11,[[["self"],["sublevel"]],["bool"]]],[11,"hash","","",11,N],[11,"hash","","",8,N],[11,"hash","","",9,N],[11,"hash","","",10,N],[11,"hash","","",7,N],[11,"fmt","rocket_http","",94,[[["self"],["formatter"]],["result"]]],[11,"into_owned","rocket_http::uri","",79,[[["self"]],["uri"]]],[11,"into_owned","","",82,[[["self"]],["origin"]]],[11,"into_owned","","",83,[[["self"]],["authority"]]],[11,"into_owned","","",84,N],[11,"into_owned","","",95,N],[11,"cmp","rocket_http","",94,[[["self"],["rawstr"]],["ordering"]]],[11,"cmp","rocket_http::uncased","",96,[[["self"],["self"]],["ordering"]]],[11,"cmp","","",97,[[["self"],["self"]],["ordering"]]],[11,"eq","rocket_http::uri","",79,[[["self"],["uri"]],["bool"]]],[11,"ne","","",79,[[["self"],["uri"]],["bool"]]],[11,"eq","","",82,[[["self"],["origin"]],["bool"]]],[11,"eq","","",83,[[["self"],["authority"]],["bool"]]],[11,"eq","","",84,[[["self"],["absolute"]],["bool"]]],[11,"eq","","",80,[[["self"],["segmenterror"]],["bool"]]],[11,"ne","","",80,[[["self"],["segmenterror"]],["bool"]]],[11,"eq","rocket_http","",5,[[["self"],["method"]],["bool"]]],[11,"eq","","",91,[[["self"],["mediatype"]],["bool"]]],[11,"eq","","",1,[[["self"],["contenttype"]],["bool"]]],[11,"ne","","",1,[[["self"],["contenttype"]],["bool"]]],[11,"eq","","",6,[[["self"],["statusclass"]],["bool"]]],[11,"eq","","",3,[[["self"],["status"]],["bool"]]],[11,"ne","","",3,[[["self"],["status"]],["bool"]]],[11,"eq","","",4,[[["self"],["header"]],["bool"]]],[11,"ne","","",4,[[["self"],["header"]],["bool"]]],[11,"eq","","",92,[[["self"],["headermap"]],["bool"]]],[11,"ne","","",92,[[["self"],["headermap"]],["bool"]]],[11,"eq","","",2,[[["self"],["qmediatype"]],["bool"]]],[11,"ne","","",2,[[["self"],["qmediatype"]],["bool"]]],[11,"eq","","",93,[[["self"],["accept"]],["bool"]]],[11,"ne","","",93,[[["self"],["accept"]],["bool"]]],[11,"eq","","",94,[[["self"],["rawstr"]],["bool"]]],[11,"ne","","",94,[[["self"],["rawstr"]],["bool"]]],[11,"eq","","",94,[[["self"],["str"]],["bool"]]],[11,"eq","","",94,[[["self"],["string"]],["bool"]]],[11,"eq","rocket_http::uncased","",96,[[["self"],["uncasedstr"]],["bool"]]],[11,"eq","","",96,[[["self"],["str"]],["bool"]]],[11,"eq","","",96,[[["self"],["str"]],["bool"]]],[11,"eq","","",97,[[["self"],["uncased"]],["bool"]]],[11,"eq","","",97,[[["self"],["str"]],["bool"]]],[11,"eq","","",97,[[["self"],["str"]],["bool"]]],[11,"from","rocket_http","",4,[[["accept"]],["header"]]],[11,"from","","",4,[[["accesscontrolallowcredentials"]],["header"]]],[11,"from","","",4,[[["accesscontrolallowheaders"]],["header"]]],[11,"from","","",4,[[["accesscontrolallowmethods"]],["header"]]],[11,"from","","",4,[[["accesscontrolalloworigin"]],["header"]]],[11,"from","","",4,[[["accesscontrolexposeheaders"]],["header"]]],[11,"from","","",4,[[["accesscontrolmaxage"]],["header"]]],[11,"from","","",4,[[["accesscontrolrequestheaders"]],["header"]]],[11,"from","","",4,[[["accesscontrolrequestmethod"]],["header"]]],[11,"from","","",4,[[["acceptcharset"]],["header"]]],[11,"from","","",4,[[["acceptencoding"]],["header"]]],[11,"from","","",4,[[["acceptlanguage"]],["header"]]],[11,"from","","",4,[[["acceptranges"]],["header"]]],[11,"from","","",4,[[["allow"]],["header"]]],[11,"from","","",4,[[["cachecontrol"]],["header"]]],[11,"from","","",4,[[["connection"]],["header"]]],[11,"from","","",4,[[["contentdisposition"]],["header"]]],[11,"from","","",4,[[["contentencoding"]],["header"]]],[11,"from","","",4,[[["contentlanguage"]],["header"]]],[11,"from","","",4,[[["contentlength"]],["header"]]],[11,"from","","",4,[[["contentrange"]],["header"]]],[11,"from","","",4,[[["date"]],["header"]]],[11,"from","","",4,[[["etag"]],["header"]]],[11,"from","","",4,[[["expect"]],["header"]]],[11,"from","","",4,[[["expires"]],["header"]]],[11,"from","","",4,[[["host"]],["header"]]],[11,"from","","",4,[[["ifmatch"]],["header"]]],[11,"from","","",4,[[["ifmodifiedsince"]],["header"]]],[11,"from","","",4,[[["ifnonematch"]],["header"]]],[11,"from","","",4,[[["ifrange"]],["header"]]],[11,"from","","",4,[[["ifunmodifiedsince"]],["header"]]],[11,"from","","",4,[[["lastmodified"]],["header"]]],[11,"from","","",4,[[["location"]],["header"]]],[11,"from","","",4,[[["origin"]],["header"]]],[11,"from","","",4,[[["pragma"]],["header"]]],[11,"from","","",4,[[["prefer"]],["header"]]],[11,"from","","",4,[[["preferenceapplied"]],["header"]]],[11,"from","","",4,[[["range"]],["header"]]],[11,"from","","",4,[[["referer"]],["header"]]],[11,"from","","",4,[[["referrerpolicy"]],["header"]]],[11,"from","","",4,[[["stricttransportsecurity"]],["header"]]],[11,"from","","",4,[[["transferencoding"]],["header"]]],[11,"from","","",4,[[["upgrade"]],["header"]]],[11,"from","","",4,[[["useragent"]],["header"]]],[11,"from","","",4,[[["vary"]],["header"]]],[11,"from","rocket_http::uri","",79,[[["origin"]],["uri"]]],[11,"from","","",79,[[["authority"]],["uri"]]],[11,"from","","",79,[[["absolute"]],["uri"]]],[11,"from","rocket_http","",4,[[["cookie"]],["header"]]],[11,"from","","",4,[[["cookie"]],["header"]]],[11,"from","","",2,[[["mediatype"]],["qmediatype"]]],[11,"from","","",93,[[["t"]],["accept"]]],[11,"from","rocket_http::uncased","",97,[[["str"]],["self"]]],[11,"from","","",97,[[["string"]],["self"]]],[11,"from","","",97,[[["cow",["str"]]],["self"]]],[11,"from","","",97,[[["t"]],["self"]]],[11,"clone","rocket_http::uri","",79,[[["self"]],["uri"]]],[11,"clone","","",82,[[["self"]],["origin"]]],[11,"clone","","",83,[[["self"]],["authority"]]],[11,"clone","","",84,[[["self"]],["absolute"]]],[11,"clone","","",78,[[["self"]],["segments"]]],[11,"clone","","",80,[[["self"]],["segmenterror"]]],[11,"clone","rocket_http","",5,[[["self"]],["method"]]],[11,"clone","","",91,[[["self"]],["mediatype"]]],[11,"clone","","",1,[[["self"]],["contenttype"]]],[11,"clone","","",6,[[["self"]],["statusclass"]]],[11,"clone","","",3,[[["self"]],["status"]]],[11,"clone","","",4,[[["self"]],["header"]]],[11,"clone","","",92,[[["self"]],["headermap"]]],[11,"clone","","",2,[[["self"]],["qmediatype"]]],[11,"clone","","",93,[[["self"]],["accept"]]],[11,"clone","rocket_http::uncased","",97,[[["self"]],["uncased"]]],[11,"into","rocket_http","",1,[[["self"]],["header"]]],[11,"into","","",93,[[["self"]],["header"]]],[11,"partial_cmp","","",94,[[["self"],["rawstr"]],["option",["ordering"]]]],[11,"lt","","",94,[[["self"],["rawstr"]],["bool"]]],[11,"le","","",94,[[["self"],["rawstr"]],["bool"]]],[11,"gt","","",94,[[["self"],["rawstr"]],["bool"]]],[11,"ge","","",94,[[["self"],["rawstr"]],["bool"]]],[11,"partial_cmp","","",94,[[["self"],["str"]],["option",["ordering"]]]],[11,"partial_cmp","rocket_http::uncased","",96,[[["self"],["uncasedstr"]],["option",["ordering"]]]],[11,"partial_cmp","","",97,[[["self"],["uncased"]],["option",["ordering"]]]],[11,"next","rocket_http::uri","",78,[[["self"]],["option"]]],[11,"to_string","rocket_http","",94,[[["self"]],["string"]]],[11,"as_ref","","",94,[[["self"]],["str"]]],[11,"as_ref","","",94,N],[11,"as_ref","rocket_http::uncased","",97,[[["self"]],["uncasedstr"]]],[11,"default","rocket_http","Returns a ContentType of `Any`, or `*/*`.",1,[[],["contenttype"]]],[11,"default","","",92,[[],["headermap"]]],[11,"fmt","rocket_http::uri","",79,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",82,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",83,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",84,[[["self"],["formatter"]],["result"]]],[11,"fmt","rocket_http","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",91,[[["self"],["formatter"]],["result"]]],[11,"fmt","","Formats the ContentType as an HTTP Content-Type value.",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",93,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",94,[[["self"],["formatter"]],["result"]]],[11,"fmt","rocket_http::uri","",95,[[["self"],["formatter"]],["result"]]],[11,"fmt","rocket_http::uncased","",96,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",97,[[["self"],["formatter"]],["result"]]],[11,"fmt","rocket_http::uri","",79,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",82,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",83,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",84,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",78,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",80,[[["self"],["formatter"]],["result"]]],[11,"fmt","rocket_http","",90,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",91,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",92,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",93,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",94,[[["self"],["formatter"]],["result"]]],[11,"fmt","rocket_http::uri","",95,[[["self"],["formatter"]],["result"]]],[11,"fmt","rocket_http::uncased","",96,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",97,[[["self"],["formatter"]],["result"]]],[11,"from_str","rocket_http","",5,[[["str"]],["result",["method"]]]],[11,"from_str","","",91,[[["str"]],["result",["mediatype","string"]]]],[11,"from_str","","Parses a `ContentType` from a given Content-Type header…",1,[[["str"]],["result",["contenttype","string"]]]],[11,"from_str","","",93,[[["str"]],["result",["accept","string"]]]],[11,"try_from","rocket_http::uri","",79,[[["str"]],["result",["uri"]]]],[11,"try_from","","",79,[[["string"]],["result",["uri"]]]],[11,"write_str","","",81,[[["self"],["str"]],["result"]]],[11,"deref","rocket_http","",1,[[["self"]],["mediatype"]]],[11,"deref","","",2,[[["self"]],["mediatype"]]],[11,"deref","","",94,[[["self"]],["str"]]],[11,"deref","rocket_http::uncased","",97,[[["self"]],["uncasedstr"]]],[11,"deref_mut","rocket_http","",94,[[["self"]],["str"]]],[11,"hash","","",5,N],[11,"hash","","",91,[[["self"],["h"]]]],[11,"hash","","",1,N],[11,"hash","","",6,N],[11,"hash","","",3,N],[11,"hash","","",4,N],[11,"hash","","",94,N],[11,"hash","rocket_http::uncased","",96,[[["self"],["h"]]]],[11,"hash","","",97,[[["self"],["h"]]]],[11,"borrow","","",97,[[["self"]],["uncasedstr"]]],[11,"new","rocket_http","Creates a new `Cookie` with the given name and value.",98,[[["n"],["v"]],["cookie"]]],[11,"named","","Creates a new `Cookie` with the given name and an empty…",98,[[["n"]],["cookie"]]],[11,"build","","Creates a new `CookieBuilder` instance from the given key…",98,[[["n"],["v"]],["cookiebuilder"]]],[11,"parse","","Parses a `Cookie` from the given HTTP cookie header value…",98,[[["s"]],["result",["cookie","parseerror"]]]],[11,"parse_encoded","","Parses a `Cookie` from the given HTTP cookie header value…",98,[[["s"]],["result",["cookie","parseerror"]]]],[11,"encoded","","Wraps `self` in an `EncodedCookie`: a cost-free wrapper…",98,[[["self"]],["encodedcookie"]]],[11,"into_owned","","Converts `self` into a `Cookie` with a static lifetime.…",98,[[["self"]],["cookie"]]],[11,"name","","Returns the name of `self`.",98,[[["self"]],["str"]]],[11,"value","","Returns the value of `self`.",98,[[["self"]],["str"]]],[11,"name_value","","Returns the name and value of `self` as a tuple of `(name,…",98,N],[11,"http_only","","Returns whether this cookie was marked `HttpOnly` or not.…",98,[[["self"]],["option",["bool"]]]],[11,"secure","","Returns whether this cookie was marked `Secure` or not.…",98,[[["self"]],["option",["bool"]]]],[11,"same_site","","Returns the `SameSite` attribute of this cookie if one was…",98,[[["self"]],["option",["samesite"]]]],[11,"max_age","","Returns the specified max-age of the cookie if one was…",98,[[["self"]],["option",["duration"]]]],[11,"path","","Returns the `Path` of the cookie if one was specified.",98,[[["self"]],["option",["str"]]]],[11,"domain","","Returns the `Domain` of the cookie if one was specified.",98,[[["self"]],["option",["str"]]]],[11,"expires","","Returns the `Expires` time of the cookie if one was…",98,[[["self"]],["option",["tm"]]]],[11,"set_name","","Sets the name of `self` to `name`.",98,N],[11,"set_value","","Sets the value of `self` to `value`.",98,N],[11,"set_http_only","","Sets the value of `http_only` in `self` to `value`.",98,N],[11,"set_secure","","Sets the value of `secure` in `self` to `value`.",98,N],[11,"set_same_site","","Sets the value of `same_site` in `self` to `value`.",98,N],[11,"set_max_age","","Sets the value of `max_age` in `self` to `value`.",98,N],[11,"set_path","","Sets the `path` of `self` to `path`.",98,N],[11,"set_domain","","Sets the `domain` of `self` to `domain`.",98,N],[11,"set_expires","","Sets the expires field of `self` to `time`.",98,N],[11,"make_permanent","","Makes `self` a \"permanent\" cookie by extending its…",98,N],[11,"name_raw","","Returns the name of `self` as a string slice of the raw…",98,[[["self"]],["option",["str"]]]],[11,"value_raw","","Returns the value of `self` as a string slice of the raw…",98,[[["self"]],["option",["str"]]]],[11,"path_raw","","Returns the `Path` of `self` as a string slice of the raw…",98,[[["self"]],["option",["str"]]]],[11,"domain_raw","","Returns the `Domain` of `self` as a string slice of the…",98,[[["self"]],["option",["str"]]]],[11,"is_strict","","Returns `true` if `self` is `SameSite::Strict` and `false`…",0,[[["self"]],["bool"]]],[11,"is_lax","","Returns `true` if `self` is `SameSite::Lax` and `false`…",0,[[["self"]],["bool"]]],[11,"is_none","","Returns `true` if `self` is `SameSite::None` and `false`…",0,[[["self"]],["bool"]]],[11,"as_str","rocket_http::hyper::mime","",7,[[["self"]],["str"]]],[11,"as_str","","",8,[[["self"]],["str"]]],[11,"get_param","","",9,[[["self"],["a"]],["option",["value"]]]],[11,"as_str","","",10,[[["self"]],["str"]]],[11,"as_str","","",11,[[["self"]],["str"]]],[11,"star","rocket_http::hyper::header","A constructor to easily create `Accept: */*`.",12,[[],["accept"]]],[11,"json","","A constructor to easily create `Accept: application/json`.",12,[[],["accept"]]],[11,"text","","A constructor to easily create `Accept: text/*`.",12,[[],["accept"]]],[11,"image","","A constructor to easily create `Accept: image/*`.",12,[[],["accept"]]],[11,"close","","A constructor to easily create a `Connection: close` header.",28,[[],["connection"]]],[11,"keep_alive","","A constructor to easily create a `Connection: keep-alive`…",28,[[],["connection"]]],[11,"json","","A constructor to easily create a `Content-Type:…",34,[[],["contenttype"]]],[11,"plaintext","","A constructor to easily create a `Content-Type:…",34,[[],["contenttype"]]],[11,"html","","A constructor to easily create a `Content-Type: text/html;…",34,[[],["contenttype"]]],[11,"form_url_encoded","","A constructor to easily create a `Content-Type:…",34,[[],["contenttype"]]],[11,"jpeg","","A constructor to easily create a `Content-Type:…",34,[[],["contenttype"]]],[11,"png","","A constructor to easily create a `Content-Type: image/png`…",34,[[],["contenttype"]]],[11,"new","","Constructs a new EntityTag. # Panics If the tag contains…",37,[[["bool"],["string"]],["entitytag"]]],[11,"weak","","Constructs a new weak EntityTag. # Panics If the tag…",37,[[["string"]],["entitytag"]]],[11,"strong","","Constructs a new strong EntityTag. # Panics If the tag…",37,[[["string"]],["entitytag"]]],[11,"tag","","Get the tag.",37,[[["self"]],["str"]]],[11,"set_tag","","Set the tag. # Panics If the tag contains invalid…",37,N],[11,"strong_eq","","For strong comparison two entity-tags are equivalent if…",37,[[["self"],["entitytag"]],["bool"]]],[11,"weak_eq","","For weak comparison two entity-tags are equivalent if…",37,[[["self"],["entitytag"]],["bool"]]],[11,"strong_ne","","The inverse of `EntityTag.strong_eq()`.",37,[[["self"],["entitytag"]],["bool"]]],[11,"weak_ne","","The inverse of `EntityTag.weak_eq()`.",37,[[["self"],["entitytag"]],["bool"]]],[11,"new","","Creates a new, empty headers map.",100,[[],["headers"]]],[11,"set","","Set a header field to the corresponding value.",100,N],[11,"get_raw","","Access the raw value of a header.",100,[[["self"],["str"]],["option"]]],[11,"set_raw","","Set the raw value of a header, bypassing any typed headers.",100,N],[11,"append_raw","","Append a value to raw value of this header.",100,N],[11,"remove_raw","","Remove a header set by set_raw",100,N],[11,"get","","Get a reference to the header field's value, if it exists.",100,[[["self"]],["option"]]],[11,"get_mut","","Get a mutable reference to the header field's value, if it…",100,[[["self"]],["option"]]],[11,"has","","Returns a boolean of whether a certain header is in the map.",100,[[["self"]],["bool"]]],[11,"remove","","Removes a header from the map, if one existed. Returns…",100,[[["self"]],["bool"]]],[11,"iter","","Returns an iterator over the header fields.",100,[[["self"]],["headersitems"]]],[11,"len","","Returns the number of headers in the map.",100,[[["self"]],["usize"]]],[11,"clear","","Remove all headers from the map.",100,N],[11,"new","","Creates a new `Origin` header.",46,[[["s"],["h"],["option",["u16"]]],["origin"]]],[11,"new","","Creates a new Protocol with the given name and version",49,[[["protocolname"],["option",["string"]]],["protocol"]]],[11,"new","","Creates a new `QualityItem` from an item and a quality.…",51,[[["t"],["quality"]],["qualityitem"]]],[11,"including_subdomains","","Create an STS header that includes subdomains",53,[[["u64"]],["stricttransportsecurity"]]],[11,"excluding_subdomains","","Create an STS header that excludes subdomains",53,[[["u64"]],["stricttransportsecurity"]]],[11,"bytes","","Get the most common byte range header (\"bytes=from-to\")",73,[[["u64"],["u64"]],["range"]]],[11,"bytes_multi","","Get byte range header with multiple subranges…",73,[[["vec"]],["range"]]]],"paths":[[4,"SameSite"],[3,"ContentType"],[3,"QMediaType"],[3,"Status"],[3,"Header"],[4,"Method"],[4,"StatusClass"],[4,"TopLevel"],[4,"Value"],[3,"Mime"],[4,"Attr"],[4,"SubLevel"],[3,"Accept"],[3,"AcceptCharset"],[3,"AcceptEncoding"],[3,"AcceptLanguage"],[3,"AcceptRanges"],[3,"AccessControlAllowHeaders"],[3,"AccessControlAllowMethods"],[3,"AccessControlExposeHeaders"],[3,"AccessControlMaxAge"],[3,"AccessControlRequestHeaders"],[3,"AccessControlRequestMethod"],[3,"Allow"],[3,"Authorization"],[3,"Basic"],[3,"Bearer"],[3,"CacheControl"],[3,"Connection"],[3,"ContentDisposition"],[3,"ContentEncoding"],[3,"ContentLanguage"],[3,"ContentLength"],[3,"ContentRange"],[3,"ContentType"],[3,"Date"],[3,"ETag"],[3,"EntityTag"],[3,"Expires"],[3,"From"],[3,"Host"],[3,"HttpDate"],[3,"IfModifiedSince"],[3,"IfUnmodifiedSince"],[3,"LastModified"],[3,"Location"],[3,"Origin"],[3,"Prefer"],[3,"PreferenceApplied"],[3,"Protocol"],[3,"Quality"],[3,"QualityItem"],[3,"Referer"],[3,"StrictTransportSecurity"],[3,"TransferEncoding"],[3,"Upgrade"],[3,"UserAgent"],[4,"AccessControlAllowOrigin"],[4,"ByteRangeSpec"],[4,"CacheDirective"],[4,"Charset"],[4,"ConnectionOption"],[4,"ContentRangeSpec"],[4,"DispositionParam"],[4,"DispositionType"],[4,"Encoding"],[4,"Expect"],[4,"IfMatch"],[4,"IfNoneMatch"],[4,"IfRange"],[4,"Pragma"],[4,"Preference"],[4,"ProtocolName"],[4,"Range"],[4,"RangeUnit"],[4,"ReferrerPolicy"],[4,"Vary"],[8,"Scheme"],[3,"Segments"],[4,"Uri"],[4,"SegmentError"],[3,"Formatter"],[3,"Origin"],[3,"Authority"],[3,"Absolute"],[8,"UriDisplay"],[8,"FromUriParam"],[8,"UriPart"],[8,"IntoCollection"],[8,"IntoOwned"],[4,"Cookies"],[3,"MediaType"],[3,"HeaderMap"],[3,"Accept"],[3,"RawStr"],[3,"Error"],[3,"UncasedStr"],[3,"Uncased"],[3,"Cookie"],[3,"AccessControlAllowCredentials"],[3,"Headers"],[4,"Path"],[4,"Query"]]};
searchIndex["runner_integration_tests"]={"doc":"","items":[[3,"BinaryTestData","runner_integration_tests","",N,N],[12,"compiler_stderr","","",0,N],[12,"compiler_stdout","","",0,N],[12,"compiler_exitcode","","",0,N],[12,"stderr","","",0,N],[12,"stdout","","",0,N],[12,"exitcode","","",0,N],[12,"stdin","","",0,N],[3,"Data","","",N,N],[12,"stderr","","",1,N],[12,"stdout","","",1,N],[12,"exitcode","","",1,N],[12,"stdin","","",1,N],[12,"timeout","","",1,N],[12,"optimizations","","",1,N],[3,"HumanDuration","","",N,N],[3,"OptimizationTestData","","",N,N],[12,"compiler_optimized_stderr","","",2,N],[12,"compiler_optimized_stdout","","",2,N],[12,"compiler_optimized_exitcode","","",2,N],[12,"compiler_reference_stderr","","",2,N],[12,"compiler_reference_stdout","","",2,N],[12,"compiler_reference_exitcode","","",2,N],[12,"stderr","","",2,N],[12,"stdout","","",2,N],[12,"exitcode","","",2,N],[12,"stdin","","",2,N],[12,"optimizations","","optimizations that should be applied",2,N],[12,"expect","","expected outcome of a comparison between the unoptimized…",2,N],[12,"dont_compare_asm_with_own_backend","","",2,N],[3,"TestSpec","","",N,N],[12,"input","","",3,N],[12,"references","","",3,N],[12,"generate_tentatives","","",3,N],[4,"AsmComparisonOutcome","","",N,N],[13,"Unchanged","","Assert that the assembly is NOT changed by the…",4,N],[13,"Change","","Assert that the assembly is changed by the optimizations",4,N],[13,"IdenticalTo","","The mini java code in this tuple should generate assembly…",4,N],[4,"CompilerPhase","","",N,N],[13,"Lexer","","",5,N],[13,"Parser","","",5,N],[13,"Ast","","",5,N],[13,"Semantic","","",5,N],[13,"Linter","","",5,N],[13,"Binary","","",5,N],[12,"backend","runner_integration_tests::CompilerPhase","",5,N],[12,"output","","",5,N],[12,"assembly","","",5,N],[12,"optimizations","","",5,N],[4,"Backend","runner_integration_tests","",N,N],[13,"Own","","",6,N],[13,"Libfirm","","",6,N],[4,"CompilerCall","","",N,N],[13,"RawCompiler","","",7,N],[13,"AstInspector","","",7,N],[12,"content","runner_integration_tests::CompilerCall","",7,N],[12,"kind","","",7,N],[12,"typeinfo","","",7,N],[5,"exec_binary_test","runner_integration_tests","",N,[[["pathbuf"],["level"],["backend"]]]],[5,"exec_timeout_test","","",N,[[["pathbuf"],["level"],["backend"]]]],[5,"exec_optimization_test","","",N,[[["pathbuf"],["backend"]]]],[5,"exec_ast_inspector_test","","",N,[[["pathbuf"]]]],[5,"compiler_call","","",N,[[["compilercall"],["pathbuf"]],["command"]]],[5,"assert_compiler_phase","","",N,[[["compilercall"],["testspec"]],["testdata"]]],[0,"lookup","","",N,N],[3,"ReferenceData","runner_integration_tests::lookup","Reference output for stderr, stdout or exit code. This…",N,N],[12,"stderr","","",8,N],[12,"stdout","","",8,N],[12,"exitcode","","",8,N],[3,"OptionalReferenceData","","",N,N],[12,"stderr","","",9,N],[12,"stdout","","",9,N],[12,"exitcode","","",9,N],[3,"TestData","","data given to a test function",N,N],[12,"input","","",10,N],[12,"reference","","",10,N],[4,"DataError","","",N,N],[13,"InvalidFrontMatter","","",11,N],[12,"path","runner_integration_tests::lookup::DataError","",11,N],[13,"InvalidYamlFile","runner_integration_tests::lookup","",11,N],[12,"input","runner_integration_tests::lookup::DataError","",11,N],[12,"yaml","","",11,N],[13,"NoReferenceOutput","runner_integration_tests::lookup","",11,N],[12,"path","runner_integration_tests::lookup::DataError","",11,N],[4,"ExpectedData","runner_integration_tests::lookup","",N,N],[13,"InFile","","",12,N],[13,"Inline","","",12,N],[13,"Ignore","","",12,N],[4,"InputData","","",N,N],[13,"WasStripped","","",13,N],[13,"NotStripped","","",13,N],[13,"NotLoaded","","",13,N],[5,"default_reference_stderr","","",N,[[["pathbuf"]],["expecteddata"]]],[5,"default_reference_stdout","","",N,[[["pathbuf"]],["expecteddata"]]],[5,"default_reference_exitcode","","",N,[[["pathbuf"]],["expecteddata"]]],[5,"get_files","","",N,[[["pathbuf"],["pathbuf"]],["result",["testdata","error"]]]],[5,"write","","",N,[[["option"],["str"]],["result",["error"]]]],[5,"read","","",N,[[["option"]],["result",["string","error"]]]],[5,"add_extension","","append another extension to a filename",N,[[["pathbuf"],["str"]],["pathbuf"]]],[8,"IntoReferenceData","","",N,N],[10,"into_reference_data","","",14,[[["self"],["pathbuf"]],["referencedata"]]],[8,"FromReferencesPath","","",N,N],[10,"from_reference_path","","",15,[[["pathbuf"]],["t"]]],[11,"all_from_own_file","","",9,[[["pathbuf"]],["self"]]],[11,"all_from_own_file","","",8,[[["pathbuf"]],["self"]]],[0,"serde_humantime","runner_integration_tests","",N,N],[3,"De","runner_integration_tests::serde_humantime","A wrapper type which implements `Deserialize` for types…",N,N],[5,"deserialize","","Deserializes a `Duration` via the humantime crate.",N,[[["d"]],["result",["duration"]]]],[11,"into_inner","","Consumes the `De`, returning the inner value.",16,[[["self"]],["t"]]],[0,"yaml","runner_integration_tests","",N,N],[3,"FrontMatter","runner_integration_tests::yaml","",N,N],[11,"new","","",17,[[["str"]],["self"]]],[11,"has_front_matter","","",17,[[["self"]],["bool"]]],[11,"front_matter","","",17,[[["self"]],["option",["str"]]]],[11,"without_front_matter","","",17,[[["self"]],["str"]]],[17,"DEFAULT_TIMEOUT_SECONDS","runner_integration_tests","",N,N],[11,"to_ascii_label","","",6,[[["self"]],["str"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into_collection","","",0,[[["self"]],["smallvec"]]],[11,"mapped","","",0,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",0,[[["self"]],["result",["parseerr"]]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into_collection","","",1,[[["self"]],["smallvec"]]],[11,"mapped","","",1,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",1,[[["self"]],["result",["parseerr"]]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"into_collection","","",18,[[["self"]],["smallvec"]]],[11,"mapped","","",18,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",18,[[["self"]],["result",["parseerr"]]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into_collection","","",2,[[["self"]],["smallvec"]]],[11,"mapped","","",2,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",2,[[["self"]],["result",["parseerr"]]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into_collection","","",3,[[["self"]],["smallvec"]]],[11,"mapped","","",3,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",3,[[["self"]],["result",["parseerr"]]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into_collection","","",4,[[["self"]],["smallvec"]]],[11,"mapped","","",4,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",4,[[["self"]],["result",["parseerr"]]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into_collection","","",5,[[["self"]],["smallvec"]]],[11,"mapped","","",5,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",5,[[["self"]],["result",["parseerr"]]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"equivalent","","",6,[[["self"],["k"]],["bool"]]],[11,"into_collection","","",6,[[["self"]],["smallvec"]]],[11,"mapped","","",6,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",6,[[["self"]],["result",["parseerr"]]]],[11,"equivalent","","",6,[[["self"],["k"]],["bool"]]],[11,"equivalent","","",6,[[["self"],["k"]],["bool"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into_collection","","",7,[[["self"]],["smallvec"]]],[11,"mapped","","",7,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",7,[[["self"]],["result",["parseerr"]]]],[11,"from","runner_integration_tests::lookup","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into_collection","","",8,[[["self"]],["smallvec"]]],[11,"mapped","","",8,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",8,[[["self"]],["result",["parseerr"]]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into_collection","","",9,[[["self"]],["smallvec"]]],[11,"mapped","","",9,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",9,[[["self"]],["result",["parseerr"]]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"into_collection","","",10,[[["self"]],["smallvec"]]],[11,"mapped","","",10,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",10,[[["self"]],["result",["parseerr"]]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_string","","",11,[[["self"]],["string"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"as_fail","","",11,[[["self"]],["fail"]]],[11,"into_collection","","",11,[[["self"]],["smallvec"]]],[11,"mapped","","",11,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",11,[[["self"]],["result",["parseerr"]]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"into_collection","","",12,[[["self"]],["smallvec"]]],[11,"mapped","","",12,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",12,[[["self"]],["result",["parseerr"]]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"into_collection","","",13,[[["self"]],["smallvec"]]],[11,"mapped","","",13,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",13,[[["self"]],["result",["parseerr"]]]],[11,"from","runner_integration_tests::serde_humantime","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"into_collection","","",16,[[["self"]],["smallvec"]]],[11,"mapped","","",16,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",16,[[["self"]],["result",["parseerr"]]]],[11,"from","runner_integration_tests::yaml","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"into_collection","","",17,[[["self"]],["smallvec"]]],[11,"mapped","","",17,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",17,[[["self"]],["result",["parseerr"]]]],[11,"into_reference_data","runner_integration_tests::lookup","",8,[[["self"],["pathbuf"]],["referencedata"]]],[11,"into_reference_data","","",9,[[["self"],["pathbuf"]],["referencedata"]]],[11,"into_reference_data","runner_integration_tests","",0,[[["self"],["pathbuf"]],["referencedata"]]],[11,"into_reference_data","","",1,[[["self"],["pathbuf"]],["referencedata"]]],[11,"into_reference_data","","",2,[[["self"],["pathbuf"]],["referencedata"]]],[11,"from_reference_path","runner_integration_tests::lookup","",9,[[["pathbuf"]],["self"]]],[11,"from_reference_path","","",8,[[["pathbuf"]],["self"]]],[11,"from_reference_path","runner_integration_tests","",0,[[["pathbuf"]],["self"]]],[11,"from_reference_path","","",1,[[["pathbuf"]],["self"]]],[11,"from_reference_path","","",2,[[["pathbuf"]],["self"]]],[11,"eq","","",6,[[["self"],["backend"]],["bool"]]],[11,"clone","runner_integration_tests::lookup","",8,[[["self"]],["referencedata"]]],[11,"clone","","",9,[[["self"]],["optionalreferencedata"]]],[11,"clone","","",12,[[["self"]],["expecteddata"]]],[11,"clone","","",13,[[["self"]],["inputdata"]]],[11,"clone","","",10,[[["self"]],["testdata"]]],[11,"clone","runner_integration_tests","",0,[[["self"]],["binarytestdata"]]],[11,"clone","","",1,[[["self"]],["data"]]],[11,"clone","","",18,[[["self"]],["humanduration"]]],[11,"clone","","",4,[[["self"]],["asmcomparisonoutcome"]]],[11,"clone","","",2,[[["self"]],["optimizationtestdata"]]],[11,"clone","","",5,[[["self"]],["compilerphase"]]],[11,"clone","","",6,[[["self"]],["backend"]]],[11,"clone","","",7,[[["self"]],["compilercall"]]],[11,"clone","","",3,[[["self"]],["testspec"]]],[11,"fmt","runner_integration_tests::lookup","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","runner_integration_tests","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"from_str","","",6,[[["str"]],["result",["backend"]]]],[11,"cause","runner_integration_tests::lookup","",11,[[["self"]],["option",["fail"]]]],[11,"backtrace","","",11,[[["self"]],["option",["backtrace"]]]],[11,"serialize","","",8,[[["self"],["__s"]],["result"]]],[11,"serialize","","",9,[[["self"],["__s"]],["result"]]],[11,"serialize","","",12,[[["self"],["__s"]],["result"]]],[11,"serialize","","",13,[[["self"],["__s"]],["result"]]],[11,"serialize","","",10,[[["self"],["__s"]],["result"]]],[11,"serialize","runner_integration_tests","",0,[[["self"],["__s"]],["result"]]],[11,"deserialize","runner_integration_tests::lookup","",8,[[["__d"]],["result"]]],[11,"deserialize","","",9,[[["__d"]],["result"]]],[11,"deserialize","","",12,[[["__d"]],["result"]]],[11,"deserialize","","",13,[[["__d"]],["result"]]],[11,"deserialize","","",10,[[["__d"]],["result"]]],[11,"deserialize","runner_integration_tests::serde_humantime","",16,[[["d"]],["result",["de"]]]],[11,"deserialize","","",16,[[["d"]],["result",["de"]]]],[11,"deserialize","runner_integration_tests","",0,[[["__d"]],["result"]]],[11,"deserialize","","",1,[[["__d"]],["result"]]],[11,"deserialize","","",18,[[["__d"]],["result"]]],[11,"deserialize","","",4,[[["__d"]],["result"]]],[11,"deserialize","","",2,[[["__d"]],["result"]]]],"paths":[[3,"BinaryTestData"],[3,"Data"],[3,"OptimizationTestData"],[3,"TestSpec"],[4,"AsmComparisonOutcome"],[4,"CompilerPhase"],[4,"Backend"],[4,"CompilerCall"],[3,"ReferenceData"],[3,"OptionalReferenceData"],[3,"TestData"],[4,"DataError"],[4,"ExpectedData"],[4,"InputData"],[8,"IntoReferenceData"],[8,"FromReferencesPath"],[3,"De"],[3,"FrontMatter"],[3,"HumanDuration"]]};
searchIndex["rustc_demangle"]={"doc":"Demangle Rust compiler symbol names.","items":[[3,"Demangle","rustc_demangle","Representation of a demangled symbol name.",N,N],[3,"TryDemangleError","","Error returned from the `try_demangle` function below when…",N,N],[5,"demangle","","De-mangles a Rust symbol into a more readable version",N,[[["str"]],["demangle"]]],[5,"try_demangle","","The same as `demangle`, except return an `Err` if the…",N,[[["str"]],["result",["demangle","trydemangleerror"]]]],[11,"as_str","","Returns the underlying string that's being demangled.",0,[[["self"]],["str"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"clone","","",1,[[["self"]],["trydemangleerror"]]]],"paths":[[3,"Demangle"],[3,"TryDemangleError"]]};
searchIndex["rustc_serialize"]={"doc":"Support code for encoding and decoding types.","items":[[0,"base64","rustc_serialize","Base64 binary-to-text encoding",N,N],[3,"Config","rustc_serialize::base64","Contains configuration parameters for `to_base64`.",N,N],[12,"char_set","","Character set to use",0,N],[12,"newline","","Newline to use",0,N],[12,"pad","","True to pad output with `=` characters",0,N],[12,"line_length","","`Some(len)` to wrap lines at `len`, `None` to disable line…",0,N],[4,"CharacterSet","","Available encoding character sets",N,N],[13,"Standard","","The standard character set (uses `+` and `/`)",1,N],[13,"UrlSafe","","The URL safe character set (uses `-` and `_`)",1,N],[4,"Newline","","Available newline types",N,N],[13,"LF","","A linefeed (i.e. Unix-style newline)",2,N],[13,"CRLF","","A carriage return and a linefeed (i.e. Windows-style…",2,N],[4,"FromBase64Error","","Errors that can occur when decoding a base64 encoded string",N,N],[13,"InvalidBase64Byte","","The input contained a character not part of the base64…",3,N],[13,"InvalidBase64Length","","The input had an invalid length",3,N],[7,"STANDARD","","Configuration for RFC 4648 standard base64 encoding",N,N],[7,"URL_SAFE","","Configuration for RFC 4648 base64url encoding",N,N],[7,"MIME","","Configuration for RFC 2045 MIME base64 encoding",N,N],[8,"ToBase64","","A trait for converting a value to base64 encoding.",N,N],[10,"to_base64","","Converts the value of `self` to a base64 value following…",4,[[["self"],["config"]],["string"]]],[8,"FromBase64","","A trait for converting from base64 encoded values.",N,N],[10,"from_base64","","Converts the value of `self`, interpreted as base64…",5,[[["self"]],["result",["vec","frombase64error"]]]],[0,"hex","rustc_serialize","Hex binary-to-text encoding",N,N],[4,"FromHexError","rustc_serialize::hex","Errors that can occur when decoding a hex encoded string",N,N],[13,"InvalidHexCharacter","","The input contained a character not part of the hex format",6,N],[13,"InvalidHexLength","","The input had an invalid length",6,N],[8,"ToHex","","A trait for converting a value to hexadecimal encoding",N,N],[10,"to_hex","","Converts the value of `self` to a hex value, returning the…",7,[[["self"]],["string"]]],[8,"FromHex","","A trait for converting hexadecimal encoded values",N,N],[10,"from_hex","","Converts the value of `self`, interpreted as hexadecimal…",8,[[["self"]],["result",["vec","fromhexerror"]]]],[0,"json","rustc_serialize","JSON parsing and serialization",N,N],[3,"PrettyJson","rustc_serialize::json","",N,N],[3,"AsJson","","",N,N],[3,"AsPrettyJson","","",N,N],[3,"Encoder","","A structure for implementing serialization to JSON.",N,N],[3,"Stack","","A Stack represents the current position of the parser in…",N,N],[3,"Parser","","A streaming JSON parser implemented as an iterator of…",N,N],[3,"Builder","","A Builder consumes a json::Parser to create a generic Json…",N,N],[3,"Decoder","","A structure to decode JSON to values in rust.",N,N],[4,"Json","","Represents a json value",N,N],[13,"I64","","",9,N],[13,"U64","","",9,N],[13,"F64","","",9,N],[13,"String","","",9,N],[13,"Boolean","","",9,N],[13,"Array","","",9,N],[13,"Object","","",9,N],[13,"Null","","",9,N],[4,"ErrorCode","","The errors that can arise while parsing a JSON stream.",N,N],[13,"InvalidSyntax","","",10,N],[13,"InvalidNumber","","",10,N],[13,"EOFWhileParsingObject","","",10,N],[13,"EOFWhileParsingArray","","",10,N],[13,"EOFWhileParsingValue","","",10,N],[13,"EOFWhileParsingString","","",10,N],[13,"KeyMustBeAString","","",10,N],[13,"ExpectedColon","","",10,N],[13,"TrailingCharacters","","",10,N],[13,"TrailingComma","","",10,N],[13,"InvalidEscape","","",10,N],[13,"InvalidUnicodeCodePoint","","",10,N],[13,"LoneLeadingSurrogateInHexEscape","","",10,N],[13,"UnexpectedEndOfHexEscape","","",10,N],[13,"UnrecognizedHex","","",10,N],[13,"NotFourDigit","","",10,N],[13,"ControlCharacterInString","","",10,N],[13,"NotUtf8","","",10,N],[4,"ParserError","","",N,N],[13,"SyntaxError","","msg, line, col",11,N],[13,"IoError","","",11,N],[4,"DecoderError","","",N,N],[13,"ParseError","","",12,N],[13,"ExpectedError","","",12,N],[13,"MissingFieldError","","",12,N],[13,"UnknownVariantError","","",12,N],[13,"ApplicationError","","",12,N],[13,"EOF","","",12,N],[4,"EncoderError","","",N,N],[13,"FmtError","","",13,N],[13,"BadHashmapKey","","",13,N],[4,"JsonEvent","","The output of the streaming parser.",N,N],[13,"ObjectStart","","",14,N],[13,"ObjectEnd","","",14,N],[13,"ArrayStart","","",14,N],[13,"ArrayEnd","","",14,N],[13,"BooleanValue","","",14,N],[13,"I64Value","","",14,N],[13,"U64Value","","",14,N],[13,"F64Value","","",14,N],[13,"StringValue","","",14,N],[13,"NullValue","","",14,N],[13,"Error","","",14,N],[4,"StackElement","","StackElements compose a Stack. For example, Key(\"foo\"),…",N,N],[13,"Index","","",15,N],[13,"Key","","",15,N],[5,"error_str","","Returns a readable error string for a given error code.",N,[[["errorcode"]],["str"]]],[5,"decode","","Shortcut function to decode a JSON `&str` into an object",N,[[["str"]],["decoderesult"]]],[5,"encode","","Shortcut function to encode a `T` into a JSON `String`",N,[[["t"]],["encoderesult",["string"]]]],[5,"as_json","","Create an `AsJson` wrapper which can be used to print a…",N,[[["t"]],["asjson"]]],[5,"as_pretty_json","","Create an `AsPrettyJson` wrapper which can be used to…",N,[[["t"]],["asprettyjson"]]],[6,"Array","","",N,N],[6,"Object","","",N,N],[6,"BuilderError","","",N,N],[6,"EncodeResult","","",N,N],[6,"DecodeResult","","",N,N],[8,"ToJson","","A trait for converting values to JSON",N,N],[10,"to_json","","Converts the value of `self` to an instance of JSON",16,[[["self"]],["json"]]],[11,"new_pretty","","Creates a new encoder whose output will be written in…",17,[[["write"]],["encoder"]]],[11,"new","","Creates a new encoder whose output will be written in…",17,[[["write"]],["encoder"]]],[11,"set_indent","","Set the number of spaces to indent for each level. This is…",17,[[["self"],["u32"]],["result"]]],[11,"from_reader","","Decodes a json value from an `&mut io::Read`",9,[[["read"]],["result",["buildererror"]]]],[11,"from_str","","Decodes a json value from a string",9,[[["str"]],["result",["buildererror"]]]],[11,"pretty","","Borrow this json object as a pretty object to generate a…",9,[[["self"]],["prettyjson"]]],[11,"find","","If the Json value is an Object, returns the value…",9,[[["self"],["str"]],["option",["json"]]]],[11,"find_path","","Attempts to get a nested Json Object for each key in…",9,N],[11,"search","","If the Json value is an Object, performs a depth-first…",9,[[["self"],["str"]],["option",["json"]]]],[11,"is_object","","Returns true if the Json value is an Object. Returns false…",9,[[["self"]],["bool"]]],[11,"as_object","","If the Json value is an Object, returns a reference to the…",9,[[["self"]],["option",["object"]]]],[11,"as_object_mut","","If the Json value is an Object, returns a mutable…",9,[[["self"]],["option",["object"]]]],[11,"into_object","","If the Json value is an Object, returns the associated…",9,[[["self"]],["option",["object"]]]],[11,"is_array","","Returns true if the Json value is an Array. Returns false…",9,[[["self"]],["bool"]]],[11,"as_array","","If the Json value is an Array, returns a reference to the…",9,[[["self"]],["option",["array"]]]],[11,"as_array_mut","","If the Json value is an Array, returns a mutable reference…",9,[[["self"]],["option",["array"]]]],[11,"into_array","","If the Json value is an Array, returns the associated…",9,[[["self"]],["option",["array"]]]],[11,"is_string","","Returns true if the Json value is a String. Returns false…",9,[[["self"]],["bool"]]],[11,"as_string","","If the Json value is a String, returns the associated str.…",9,[[["self"]],["option",["str"]]]],[11,"is_number","","Returns true if the Json value is a Number. Returns false…",9,[[["self"]],["bool"]]],[11,"is_i64","","Returns true if the Json value is a i64. Returns false…",9,[[["self"]],["bool"]]],[11,"is_u64","","Returns true if the Json value is a u64. Returns false…",9,[[["self"]],["bool"]]],[11,"is_f64","","Returns true if the Json value is a f64. Returns false…",9,[[["self"]],["bool"]]],[11,"as_i64","","If the Json value is a number, return or cast it to a i64.…",9,[[["self"]],["option",["i64"]]]],[11,"as_u64","","If the Json value is a number, return or cast it to a u64.…",9,[[["self"]],["option",["u64"]]]],[11,"as_f64","","If the Json value is a number, return or cast it to a f64.…",9,[[["self"]],["option",["f64"]]]],[11,"is_boolean","","Returns true if the Json value is a Boolean. Returns false…",9,[[["self"]],["bool"]]],[11,"as_boolean","","If the Json value is a Boolean, returns the associated…",9,[[["self"]],["option",["bool"]]]],[11,"is_null","","Returns true if the Json value is a Null. Returns false…",9,[[["self"]],["bool"]]],[11,"as_null","","If the Json value is a Null, returns (). Returns None…",9,[[["self"]],["option"]]],[11,"new","","",18,[[],["stack"]]],[11,"len","","Returns The number of elements in the Stack.",18,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the stack is empty.",18,[[["self"]],["bool"]]],[11,"get","","Provides access to the StackElement at a given index.…",18,[[["self"],["usize"]],["stackelement"]]],[11,"is_equal_to","","Compares this stack with an array of StackElements.",18,N],[11,"starts_with","","Returns true if the bottom-most elements of this stack are…",18,N],[11,"ends_with","","Returns true if the top-most elements of this stack are…",18,N],[11,"top","","Returns the top-most element (if any).",18,[[["self"]],["option",["stackelement"]]]],[11,"new","","Creates the JSON parser.",19,[[["t"]],["parser"]]],[11,"stack","","Provides access to the current position in the logical…",19,[[["self"]],["stack"]]],[11,"new","","Create a JSON Builder.",20,[[["t"]],["builder"]]],[11,"build","","",20,[[["self"]],["result",["json","buildererror"]]]],[11,"new","","Creates a new decoder instance for decoding the specified…",21,[[["json"]],["decoder"]]],[11,"indent","","Set the indentation level for the emitted JSON",22,[[["self"],["u32"]],["asprettyjson"]]],[8,"Decoder","rustc_serialize","Trait for reading in an encoding for deserialization.",N,N],[16,"Error","","The error type for method results.",23,N],[10,"read_nil","","Read a nil value.",23,[[["self"]],["result"]]],[10,"read_usize","","Read a usize value.",23,[[["self"]],["result",["usize"]]]],[10,"read_u64","","Read a u64 value.",23,[[["self"]],["result",["u64"]]]],[10,"read_u32","","Read a u32 value.",23,[[["self"]],["result",["u32"]]]],[10,"read_u16","","Read a u16 value.",23,[[["self"]],["result",["u16"]]]],[10,"read_u8","","Read a u8 value.",23,[[["self"]],["result",["u8"]]]],[10,"read_isize","","Read a isize value.",23,[[["self"]],["result",["isize"]]]],[10,"read_i64","","Read a i64 value.",23,[[["self"]],["result",["i64"]]]],[10,"read_i32","","Read a i32 value.",23,[[["self"]],["result",["i32"]]]],[10,"read_i16","","Read a i16 value.",23,[[["self"]],["result",["i16"]]]],[10,"read_i8","","Read a i8 value.",23,[[["self"]],["result",["i8"]]]],[10,"read_bool","","Read a bool value.",23,[[["self"]],["result",["bool"]]]],[10,"read_f64","","Read a f64 value.",23,[[["self"]],["result",["f64"]]]],[10,"read_f32","","Read a f32 value.",23,[[["self"]],["result",["f32"]]]],[10,"read_char","","Read a char value.",23,[[["self"]],["result",["char"]]]],[10,"read_str","","Read a string value.",23,[[["self"]],["result",["string"]]]],[10,"read_enum","","Read an enumeration value.",23,[[["self"],["str"],["f"]],["result"]]],[10,"read_enum_variant","","Read an enumeration value.",23,N],[10,"read_enum_variant_arg","","Read an unnamed data item for an enumeration variant.",23,[[["self"],["usize"],["f"]],["result"]]],[10,"read_enum_struct_variant","","Read an enumeration value.",23,N],[10,"read_enum_struct_variant_field","","Read a named data item for an enumeration variant.",23,[[["self"],["str"],["usize"],["f"]],["result"]]],[10,"read_struct","","Read an struct value.",23,[[["self"],["str"],["usize"],["f"]],["result"]]],[10,"read_struct_field","","Read a field for a struct value.",23,[[["self"],["str"],["usize"],["f"]],["result"]]],[10,"read_tuple","","Read a tuple value.",23,[[["self"],["usize"],["f"]],["result"]]],[10,"read_tuple_arg","","Read a data item for a tuple.",23,[[["self"],["usize"],["f"]],["result"]]],[10,"read_tuple_struct","","Read a tuple struct value.",23,[[["self"],["str"],["usize"],["f"]],["result"]]],[10,"read_tuple_struct_arg","","Read a data item for a tuple struct.",23,[[["self"],["usize"],["f"]],["result"]]],[10,"read_option","","Read an optional value.",23,[[["self"],["f"]],["result"]]],[10,"read_seq","","Read a sequence of values.",23,[[["self"],["f"]],["result"]]],[10,"read_seq_elt","","Read an element in the sequence.",23,[[["self"],["usize"],["f"]],["result"]]],[10,"read_map","","Read an associative container (map).",23,[[["self"],["f"]],["result"]]],[10,"read_map_elt_key","","Read the key for an entry in a map.",23,[[["self"],["usize"],["f"]],["result"]]],[10,"read_map_elt_val","","Read the value for an entry in a map.",23,[[["self"],["usize"],["f"]],["result"]]],[10,"error","","Record a decoding error.",23,N],[8,"Encoder","","Trait for writing out an encoding when serializing.",N,N],[16,"Error","","The error type for method results.",24,N],[10,"emit_nil","","Emit a nil value.",24,[[["self"]],["result"]]],[10,"emit_usize","","Emit a usize value.",24,[[["self"],["usize"]],["result"]]],[10,"emit_u64","","Emit a u64 value.",24,[[["self"],["u64"]],["result"]]],[10,"emit_u32","","Emit a u32 value.",24,[[["self"],["u32"]],["result"]]],[10,"emit_u16","","Emit a u16 value.",24,[[["self"],["u16"]],["result"]]],[10,"emit_u8","","Emit a u8 value.",24,[[["self"],["u8"]],["result"]]],[10,"emit_isize","","Emit a isize value.",24,[[["self"],["isize"]],["result"]]],[10,"emit_i64","","Emit a i64 value.",24,[[["self"],["i64"]],["result"]]],[10,"emit_i32","","Emit a i32 value.",24,[[["self"],["i32"]],["result"]]],[10,"emit_i16","","Emit a i16 value.",24,[[["self"],["i16"]],["result"]]],[10,"emit_i8","","Emit a i8 value.",24,[[["self"],["i8"]],["result"]]],[10,"emit_bool","","Emit a bool value.",24,[[["self"],["bool"]],["result"]]],[10,"emit_f64","","Emit a f64 value.",24,[[["self"],["f64"]],["result"]]],[10,"emit_f32","","Emit a f32 value.",24,[[["self"],["f32"]],["result"]]],[10,"emit_char","","Emit a char value.",24,[[["self"],["char"]],["result"]]],[10,"emit_str","","Emit a string value.",24,[[["self"],["str"]],["result"]]],[10,"emit_enum","","Emit an enumeration value.",24,[[["self"],["str"],["f"]],["result"]]],[10,"emit_enum_variant","","Emit a enumeration variant value with no or unnamed data.",24,[[["self"],["str"],["usize"],["usize"],["f"]],["result"]]],[10,"emit_enum_variant_arg","","Emit an unnamed data item for an enumeration variant.",24,[[["self"],["usize"],["f"]],["result"]]],[10,"emit_enum_struct_variant","","Emit a enumeration variant value with no or named data.",24,[[["self"],["str"],["usize"],["usize"],["f"]],["result"]]],[10,"emit_enum_struct_variant_field","","Emit a named data item for an enumeration variant.",24,[[["self"],["str"],["usize"],["f"]],["result"]]],[10,"emit_struct","","Emit a struct value.",24,[[["self"],["str"],["usize"],["f"]],["result"]]],[10,"emit_struct_field","","Emit a field item for a struct.",24,[[["self"],["str"],["usize"],["f"]],["result"]]],[10,"emit_tuple","","Emit a tuple value.",24,[[["self"],["usize"],["f"]],["result"]]],[10,"emit_tuple_arg","","Emit a data item for a tuple.",24,[[["self"],["usize"],["f"]],["result"]]],[10,"emit_tuple_struct","","Emit a tuple struct value.",24,[[["self"],["str"],["usize"],["f"]],["result"]]],[10,"emit_tuple_struct_arg","","Emit a data item for a tuple struct.",24,[[["self"],["usize"],["f"]],["result"]]],[10,"emit_option","","Emit an optional value.",24,[[["self"],["f"]],["result"]]],[10,"emit_option_none","","Emit the `None` optional value.",24,[[["self"]],["result"]]],[10,"emit_option_some","","Emit the `Some(x)` optional value.",24,[[["self"],["f"]],["result"]]],[10,"emit_seq","","Emit a sequence of values.",24,[[["self"],["usize"],["f"]],["result"]]],[10,"emit_seq_elt","","Emit an element in a sequence.",24,[[["self"],["usize"],["f"]],["result"]]],[10,"emit_map","","Emit an associative container (map).",24,[[["self"],["usize"],["f"]],["result"]]],[10,"emit_map_elt_key","","Emit the key for an entry in a map.",24,[[["self"],["usize"],["f"]],["result"]]],[10,"emit_map_elt_val","","Emit the value for an entry in a map.",24,[[["self"],["usize"],["f"]],["result"]]],[8,"Decodable","","Trait for deserializing a type.",N,N],[10,"decode","","Deserialize a value using a `Decoder`.",25,[[["d"]],["result"]]],[8,"Encodable","","Trait for serializing a type.",N,N],[10,"encode","","Serialize a value using an `Encoder`.",26,[[["self"],["s"]],["result"]]],[8,"DecoderHelpers","","Trait with helper functions for implementing `Decodable`.",N,N],[10,"read_to_vec","","Read a sequence into a vector.",27,[[["self"],["f"]],["result",["vec"]]]],[8,"EncoderHelpers","","Trait with helper functions for implementing `Encodable`.",N,N],[10,"emit_from_vec","","Emit a vector as a sequence.",28,N],[11,"from","rustc_serialize::base64","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","rustc_serialize::hex","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","rustc_serialize::json","",29,[[["t"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"to_string","","",29,[[["self"]],["string"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"to_string","","",30,[[["self"]],["string"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"to_string","","",22,[[["self"]],["string"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into_iter","","",19,[[["self"]],["i"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"to_string","","",9,[[["self"]],["string"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_string","","",11,[[["self"]],["string"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_string","","",12,[[["self"]],["string"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"to_string","","",13,[[["self"]],["string"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"emit_nil","","",17,[[["self"]],["encoderesult"]]],[11,"emit_usize","","",17,[[["self"],["usize"]],["encoderesult"]]],[11,"emit_u64","","",17,[[["self"],["u64"]],["encoderesult"]]],[11,"emit_u32","","",17,[[["self"],["u32"]],["encoderesult"]]],[11,"emit_u16","","",17,[[["self"],["u16"]],["encoderesult"]]],[11,"emit_u8","","",17,[[["self"],["u8"]],["encoderesult"]]],[11,"emit_isize","","",17,[[["self"],["isize"]],["encoderesult"]]],[11,"emit_i64","","",17,[[["self"],["i64"]],["encoderesult"]]],[11,"emit_i32","","",17,[[["self"],["i32"]],["encoderesult"]]],[11,"emit_i16","","",17,[[["self"],["i16"]],["encoderesult"]]],[11,"emit_i8","","",17,[[["self"],["i8"]],["encoderesult"]]],[11,"emit_bool","","",17,[[["self"],["bool"]],["encoderesult"]]],[11,"emit_f64","","",17,[[["self"],["f64"]],["encoderesult"]]],[11,"emit_f32","","",17,[[["self"],["f32"]],["encoderesult"]]],[11,"emit_char","","",17,[[["self"],["char"]],["encoderesult"]]],[11,"emit_str","","",17,[[["self"],["str"]],["encoderesult"]]],[11,"emit_enum","","",17,[[["self"],["str"],["f"]],["encoderesult"]]],[11,"emit_enum_variant","","",17,[[["self"],["str"],["usize"],["usize"],["f"]],["encoderesult"]]],[11,"emit_enum_variant_arg","","",17,[[["self"],["usize"],["f"]],["encoderesult"]]],[11,"emit_enum_struct_variant","","",17,[[["self"],["str"],["usize"],["usize"],["f"]],["encoderesult"]]],[11,"emit_enum_struct_variant_field","","",17,[[["self"],["str"],["usize"],["f"]],["encoderesult"]]],[11,"emit_struct","","",17,[[["self"],["str"],["usize"],["f"]],["encoderesult"]]],[11,"emit_struct_field","","",17,[[["self"],["str"],["usize"],["f"]],["encoderesult"]]],[11,"emit_tuple","","",17,[[["self"],["usize"],["f"]],["encoderesult"]]],[11,"emit_tuple_arg","","",17,[[["self"],["usize"],["f"]],["encoderesult"]]],[11,"emit_tuple_struct","","",17,[[["self"],["str"],["usize"],["f"]],["encoderesult"]]],[11,"emit_tuple_struct_arg","","",17,[[["self"],["usize"],["f"]],["encoderesult"]]],[11,"emit_option","","",17,[[["self"],["f"]],["encoderesult"]]],[11,"emit_option_none","","",17,[[["self"]],["encoderesult"]]],[11,"emit_option_some","","",17,[[["self"],["f"]],["encoderesult"]]],[11,"emit_seq","","",17,[[["self"],["usize"],["f"]],["encoderesult"]]],[11,"emit_seq_elt","","",17,[[["self"],["usize"],["f"]],["encoderesult"]]],[11,"emit_map","","",17,[[["self"],["usize"],["f"]],["encoderesult"]]],[11,"emit_map_elt_key","","",17,[[["self"],["usize"],["f"]],["encoderesult"]]],[11,"emit_map_elt_val","","",17,[[["self"],["usize"],["f"]],["encoderesult"]]],[11,"read_nil","","",21,[[["self"]],["decoderesult"]]],[11,"read_usize","","",21,[[["self"]],["decoderesult",["usize"]]]],[11,"read_u8","","",21,[[["self"]],["decoderesult",["u8"]]]],[11,"read_u16","","",21,[[["self"]],["decoderesult",["u16"]]]],[11,"read_u32","","",21,[[["self"]],["decoderesult",["u32"]]]],[11,"read_u64","","",21,[[["self"]],["decoderesult",["u64"]]]],[11,"read_isize","","",21,[[["self"]],["decoderesult",["isize"]]]],[11,"read_i8","","",21,[[["self"]],["decoderesult",["i8"]]]],[11,"read_i16","","",21,[[["self"]],["decoderesult",["i16"]]]],[11,"read_i32","","",21,[[["self"]],["decoderesult",["i32"]]]],[11,"read_i64","","",21,[[["self"]],["decoderesult",["i64"]]]],[11,"read_f32","","",21,[[["self"]],["decoderesult",["f32"]]]],[11,"read_f64","","",21,[[["self"]],["decoderesult",["f64"]]]],[11,"read_bool","","",21,[[["self"]],["decoderesult",["bool"]]]],[11,"read_char","","",21,[[["self"]],["decoderesult",["char"]]]],[11,"read_str","","",21,[[["self"]],["decoderesult",["string"]]]],[11,"read_enum","","",21,[[["self"],["str"],["f"]],["decoderesult"]]],[11,"read_enum_variant","","",21,N],[11,"read_enum_variant_arg","","",21,[[["self"],["usize"],["f"]],["decoderesult"]]],[11,"read_enum_struct_variant","","",21,N],[11,"read_enum_struct_variant_field","","",21,[[["self"],["str"],["usize"],["f"]],["decoderesult"]]],[11,"read_struct","","",21,[[["self"],["str"],["usize"],["f"]],["decoderesult"]]],[11,"read_struct_field","","",21,[[["self"],["str"],["usize"],["f"]],["decoderesult"]]],[11,"read_tuple","","",21,[[["self"],["usize"],["f"]],["decoderesult"]]],[11,"read_tuple_arg","","",21,[[["self"],["usize"],["f"]],["decoderesult"]]],[11,"read_tuple_struct","","",21,[[["self"],["str"],["usize"],["f"]],["decoderesult"]]],[11,"read_tuple_struct_arg","","",21,[[["self"],["usize"],["f"]],["decoderesult"]]],[11,"read_option","","",21,[[["self"],["f"]],["decoderesult"]]],[11,"read_seq","","",21,[[["self"],["f"]],["decoderesult"]]],[11,"read_seq_elt","","",21,[[["self"],["usize"],["f"]],["decoderesult"]]],[11,"read_map","","",21,[[["self"],["f"]],["decoderesult"]]],[11,"read_map_elt_key","","",21,[[["self"],["usize"],["f"]],["decoderesult"]]],[11,"read_map_elt_val","","",21,[[["self"],["usize"],["f"]],["decoderesult"]]],[11,"error","","",21,[[["self"],["str"]],["decodererror"]]],[11,"encode","","",9,[[["self"],["s"]],["result"]]],[11,"to_json","","",9,[[["self"]],["json"]]],[11,"eq","","",9,[[["self"],["json"]],["bool"]]],[11,"ne","","",9,[[["self"],["json"]],["bool"]]],[11,"eq","","",10,[[["self"],["errorcode"]],["bool"]]],[11,"eq","","",11,[[["self"],["parsererror"]],["bool"]]],[11,"eq","","",12,[[["self"],["decodererror"]],["bool"]]],[11,"ne","","",12,[[["self"],["decodererror"]],["bool"]]],[11,"eq","","",13,[[["self"],["encodererror"]],["bool"]]],[11,"eq","","",14,[[["self"],["jsonevent"]],["bool"]]],[11,"ne","","",14,[[["self"],["jsonevent"]],["bool"]]],[11,"eq","","",15,[[["self"],["stackelement"]],["bool"]]],[11,"ne","","",15,[[["self"],["stackelement"]],["bool"]]],[11,"from","","",12,[[["parsererror"]],["decodererror"]]],[11,"from","","",11,[[["error"]],["parsererror"]]],[11,"from","","",13,[[["error"]],["encodererror"]]],[11,"clone","rustc_serialize::base64","",1,[[["self"]],["characterset"]]],[11,"clone","","",2,[[["self"]],["newline"]]],[11,"clone","","",0,[[["self"]],["config"]]],[11,"clone","","",3,[[["self"]],["frombase64error"]]],[11,"clone","rustc_serialize::hex","",6,[[["self"]],["fromhexerror"]]],[11,"clone","rustc_serialize::json","",9,[[["self"]],["json"]]],[11,"clone","","",10,[[["self"]],["errorcode"]]],[11,"clone","","",13,[[["self"]],["self"]]],[11,"clone","","",15,[[["self"]],["stackelement"]]],[11,"partial_cmp","","",9,[[["self"],["json"]],["option",["ordering"]]]],[11,"lt","","",9,[[["self"],["json"]],["bool"]]],[11,"le","","",9,[[["self"],["json"]],["bool"]]],[11,"gt","","",9,[[["self"],["json"]],["bool"]]],[11,"ge","","",9,[[["self"],["json"]],["bool"]]],[11,"next","","",19,[[["self"]],["option",["jsonevent"]]]],[11,"fmt","rustc_serialize::base64","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","rustc_serialize::hex","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","rustc_serialize::json","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","Encodes a json value into a string",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","Encodes a json value into a string",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","","Encodes a json value into a string",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","Encodes a json value into a string",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","rustc_serialize::base64","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","rustc_serialize::hex","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","rustc_serialize::json","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"from_str","","",9,[[["str"]],["result",["json","parsererror"]]]],[11,"index","","",9,[[["self"],["str"]],["json"]]],[11,"index","","",9,[[["self"],["usize"]],["json"]]],[11,"description","rustc_serialize::base64","",3,[[["self"]],["str"]]],[11,"description","rustc_serialize::hex","",6,[[["self"]],["str"]]],[11,"description","rustc_serialize::json","",12,[[["self"]],["str"]]],[11,"cause","","",12,[[["self"]],["option",["stderror"]]]],[11,"description","","",11,[[["self"]],["str"]]],[11,"description","","",13,[[["self"]],["str"]]]],"paths":[[3,"Config"],[4,"CharacterSet"],[4,"Newline"],[4,"FromBase64Error"],[8,"ToBase64"],[8,"FromBase64"],[4,"FromHexError"],[8,"ToHex"],[8,"FromHex"],[4,"Json"],[4,"ErrorCode"],[4,"ParserError"],[4,"DecoderError"],[4,"EncoderError"],[4,"JsonEvent"],[4,"StackElement"],[8,"ToJson"],[3,"Encoder"],[3,"Stack"],[3,"Parser"],[3,"Builder"],[3,"Decoder"],[3,"AsPrettyJson"],[8,"Decoder"],[8,"Encoder"],[8,"Decodable"],[8,"Encodable"],[8,"DecoderHelpers"],[8,"EncoderHelpers"],[3,"PrettyJson"],[3,"AsJson"]]};
searchIndex["ryu"]={"doc":"Pure Rust implementation of Ryū, an algorithm to quickly…","items":[[3,"Buffer","ryu","Safe API for formatting floating point numbers to text.",N,N],[11,"new","","This is a cheap operation; you don't need to worry about…",0,[[],["self"]]],[11,"format","","Print a floating point number into this buffer and return…",0,[[["self"],["f"]],["str"]]],[0,"raw","","Unsafe functions that exactly mirror the API of the C…",N,N],[5,"d2s_buffered_n","ryu::raw","Print f64 to the given buffer and return number of bytes…",N,N],[5,"f2s_buffered_n","","Print f32 to the given buffer and return number of bytes…",N,N],[5,"pretty_d2s_buffered_n","","Print f64 to the given buffer and return number of bytes…",N,N],[5,"pretty_f2s_buffered_n","","Print f32 to the given buffer and return number of bytes…",N,N],[8,"Float","ryu","A floating point number, f32 or f64, that can be written…",N,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["buffer"]]],[11,"default","","",0,[[],["self"]]]],"paths":[[3,"Buffer"]]};
searchIndex["safemem"]={"doc":"Safe wrappers for memory-accessing functions like…","items":[[5,"copy_over","safemem","Copy `len` elements from `src_idx` to `dest_idx`. Ranges…",N,N],[5,"write_bytes","","Safe wrapper for `std::ptr::write_bytes()`/`memset()`.",N,N],[5,"prepend","","Prepend `elems` to `vec`, resizing if necessary.",N,N]],"paths":[]};
searchIndex["same_file"]={"doc":"This crate provides a safe and simple cross platform way…","items":[[3,"Handle","same_file","A handle to a file that can be tested for equality with…",N,N],[5,"is_same_file","","Returns true if the two file paths may correspond to the…",N,[[["p"],["q"]],["result",["bool"]]]],[11,"from_path","","Construct a handle from a path.",0,[[["p"]],["result",["handle"]]]],[11,"from_file","","Construct a handle from a file.",0,[[["file"]],["result",["handle"]]]],[11,"stdin","","Construct a handle from stdin.",0,[[],["result",["handle"]]]],[11,"stdout","","Construct a handle from stdout.",0,[[],["result",["handle"]]]],[11,"stderr","","Construct a handle from stderr.",0,[[],["result",["handle"]]]],[11,"as_file","","Return a reference to the underlying file.",0,[[["self"]],["file"]]],[11,"as_file_mut","","Return a mutable reference to the underlying file.",0,[[["self"]],["file"]]],[11,"dev","","Return the underlying device number of this handle.",0,[[["self"]],["u64"]]],[11,"ino","","Return the underlying inode number of this handle.",0,[[["self"]],["u64"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"eq","","",0,[[["self"],["handle"]],["bool"]]],[11,"ne","","",0,[[["self"],["handle"]],["bool"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"as_raw_fd","","",0,[[["self"]],["rawfd"]]],[11,"into_raw_fd","","",0,[[["self"]],["rawfd"]]]],"paths":[[3,"Handle"]]};
searchIndex["scopeguard"]={"doc":"A scope guard will run a given closure when it goes out of…","items":[[3,"ScopeGuard","scopeguard","`ScopeGuard` is a scope guard that may own a protected…",N,N],[4,"Always","","Always run on scope exit.",N,N],[5,"guard","","Create a new `ScopeGuard` owning `v` and with deferred…",N,[[["t"],["f"]],["scopeguard",["always"]]]],[8,"Strategy","","",N,N],[10,"should_run","","Return `true` if the guard’s associated code should run…",0,[[],["bool"]]],[11,"with_strategy","","Create a `ScopeGuard` that owns `v` (accessible through…",1,[[["t"],["f"]],["scopeguard"]]],[14,"defer","","Macro to create a `ScopeGuard` (always run).",N,N],[14,"defer_on_unwind","","Macro to create a `ScopeGuard` (run on unwinding from…",N,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"should_run","","",2,[[],["bool"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"deref","","",1,[[["self"]],["t"]]],[11,"deref_mut","","",1,[[["self"]],["t"]]],[11,"drop","","",1,[[["self"]]]]],"paths":[[8,"Strategy"],[3,"ScopeGuard"],[4,"Always"]]};
searchIndex["serde"]={"doc":"Serde","items":[[0,"de","serde","Generic data structure deserialization framework.",N,N],[3,"IgnoredAny","serde::de","An efficient way of discarding data from a deserializer.",N,N],[4,"Unexpected","","`Unexpected` represents an unexpected invocation of any…",N,N],[13,"Bool","","The input contained a boolean value that was not expected.",0,N],[13,"Unsigned","","The input contained an unsigned integer `u8`, `u16`, `u32`…",0,N],[13,"Signed","","The input contained a signed integer `i8`, `i16`, `i32` or…",0,N],[13,"Float","","The input contained a floating point `f32` or `f64` that…",0,N],[13,"Char","","The input contained a `char` that was not expected.",0,N],[13,"Str","","The input contained a `&str` or `String` that was not…",0,N],[13,"Bytes","","The input contained a `&[u8]` or `Vec<u8>` that was not…",0,N],[13,"Unit","","The input contained a unit `()` that was not expected.",0,N],[13,"Option","","The input contained an `Option<T>` that was not expected.",0,N],[13,"NewtypeStruct","","The input contained a newtype struct that was not expected.",0,N],[13,"Seq","","The input contained a sequence that was not expected.",0,N],[13,"Map","","The input contained a map that was not expected.",0,N],[13,"Enum","","The input contained an enum that was not expected.",0,N],[13,"UnitVariant","","The input contained a unit variant that was not expected.",0,N],[13,"NewtypeVariant","","The input contained a newtype variant that was not expected.",0,N],[13,"TupleVariant","","The input contained a tuple variant that was not expected.",0,N],[13,"StructVariant","","The input contained a struct variant that was not expected.",0,N],[13,"Other","","A message stating what uncategorized thing the input…",0,N],[0,"value","","Building blocks for deserializing basic values using the…",N,N],[3,"Error","serde::de::value","A minimal representation of all possible errors that can…",N,N],[3,"UnitDeserializer","","A deserializer holding a `()`.",N,N],[3,"BoolDeserializer","","A deserializer holding a `bool`.",N,N],[3,"I8Deserializer","","A deserializer holding an `i8`.",N,N],[3,"I16Deserializer","","A deserializer holding an `i16`.",N,N],[3,"I32Deserializer","","A deserializer holding an `i32`.",N,N],[3,"I64Deserializer","","A deserializer holding an `i64`.",N,N],[3,"IsizeDeserializer","","A deserializer holding an `isize`.",N,N],[3,"U8Deserializer","","A deserializer holding a `u8`.",N,N],[3,"U16Deserializer","","A deserializer holding a `u16`.",N,N],[3,"U64Deserializer","","A deserializer holding a `u64`.",N,N],[3,"UsizeDeserializer","","A deserializer holding a `usize`.",N,N],[3,"F32Deserializer","","A deserializer holding an `f32`.",N,N],[3,"F64Deserializer","","A deserializer holding an `f64`.",N,N],[3,"CharDeserializer","","A deserializer holding a `char`.",N,N],[3,"I128Deserializer","","A deserializer holding an `i128`.",N,N],[3,"U128Deserializer","","A deserializer holding a `u128`.",N,N],[3,"U32Deserializer","","A deserializer holding a `u32`.",N,N],[3,"StrDeserializer","","A deserializer holding a `&str`.",N,N],[3,"BorrowedStrDeserializer","","A deserializer holding a `&str` with a lifetime tied to…",N,N],[3,"StringDeserializer","","A deserializer holding a `String`.",N,N],[3,"CowStrDeserializer","","A deserializer holding a `Cow<str>`.",N,N],[3,"BorrowedBytesDeserializer","","A deserializer holding a `&[u8]` with a lifetime tied to…",N,N],[3,"SeqDeserializer","","A deserializer that iterates over a sequence.",N,N],[3,"SeqAccessDeserializer","","A deserializer holding a `SeqAccess`.",N,N],[3,"MapDeserializer","","A deserializer that iterates over a map.",N,N],[3,"MapAccessDeserializer","","A deserializer holding a `MapAccess`.",N,N],[11,"new","","Create a new borrowed deserializer from the given string.",1,[[["str"]],["borrowedstrdeserializer"]]],[11,"new","","Create a new borrowed deserializer from the given byte…",2,N],[11,"new","","Construct a new `SeqDeserializer<I, E>`.",3,[[["i"]],["self"]]],[11,"end","","Check for remaining elements after passing a…",3,[[["self"]],["result"]]],[11,"new","","Construct a new `SeqAccessDeserializer<A>`.",4,[[["a"]],["self"]]],[11,"new","","Construct a new `MapDeserializer<I, E>`.",5,[[["i"]],["self"]]],[11,"end","","Check for remaining elements after passing a…",5,[[["self"]],["result"]]],[11,"new","","Construct a new `MapAccessDeserializer<A>`.",6,[[["a"]],["self"]]],[8,"Error","serde::de","The `Error` trait allows `Deserialize` implementations to…",N,N],[10,"custom","","Raised when there is general error when deserializing a…",7,[[["t"]],["self"]]],[11,"invalid_type","","Raised when a `Deserialize` receives a type different from…",7,[[["unexpected"],["expected"]],["self"]]],[11,"invalid_value","","Raised when a `Deserialize` receives a value of the right…",7,[[["unexpected"],["expected"]],["self"]]],[11,"invalid_length","","Raised when deserializing a sequence or map and the input…",7,[[["usize"],["expected"]],["self"]]],[11,"unknown_variant","","Raised when a `Deserialize` enum type received a variant…",7,N],[11,"unknown_field","","Raised when a `Deserialize` struct type received a field…",7,N],[11,"missing_field","","Raised when a `Deserialize` struct type expected to…",7,[[["str"]],["self"]]],[11,"duplicate_field","","Raised when a `Deserialize` struct type received more than…",7,[[["str"]],["self"]]],[8,"Expected","","`Expected` represents an explanation of what data a…",N,N],[10,"fmt","","Format an explanation of what data was being expected.…",8,[[["self"],["formatter"]],["result"]]],[8,"Deserialize","","A data structure that can be deserialized from any data…",N,N],[10,"deserialize","","Deserialize this value from the given Serde deserializer.",9,[[["d"]],["result"]]],[8,"DeserializeOwned","","A data structure that can be deserialized without…",N,N],[8,"DeserializeSeed","","`DeserializeSeed` is the stateful form of the…",N,N],[16,"Value","","The type produced by using this seed.",10,N],[10,"deserialize","","Equivalent to the more common `Deserialize::deserialize`…",10,[[["self"],["d"]],["result"]]],[8,"Deserializer","","A data format that can deserialize any data structure…",N,N],[16,"Error","","The error type that can be returned if some error occurs…",11,N],[10,"deserialize_any","","Require the `Deserializer` to figure out how to drive the…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_bool","","Hint that the `Deserialize` type is expecting a `bool`…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_i8","","Hint that the `Deserialize` type is expecting an `i8` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_i16","","Hint that the `Deserialize` type is expecting an `i16`…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_i32","","Hint that the `Deserialize` type is expecting an `i32`…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_i64","","Hint that the `Deserialize` type is expecting an `i64`…",11,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","Hint that the `Deserialize` type is expecting an `i128`…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_u8","","Hint that the `Deserialize` type is expecting a `u8` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_u16","","Hint that the `Deserialize` type is expecting a `u16` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_u32","","Hint that the `Deserialize` type is expecting a `u32` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_u64","","Hint that the `Deserialize` type is expecting a `u64` value.",11,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","Hint that the `Deserialize` type is expecting an `u128`…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_f32","","Hint that the `Deserialize` type is expecting a `f32` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_f64","","Hint that the `Deserialize` type is expecting a `f64` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_char","","Hint that the `Deserialize` type is expecting a `char`…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_str","","Hint that the `Deserialize` type is expecting a string…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_string","","Hint that the `Deserialize` type is expecting a string…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_bytes","","Hint that the `Deserialize` type is expecting a byte array…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_byte_buf","","Hint that the `Deserialize` type is expecting a byte array…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_option","","Hint that the `Deserialize` type is expecting an optional…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_unit","","Hint that the `Deserialize` type is expecting a unit value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_unit_struct","","Hint that the `Deserialize` type is expecting a unit…",11,[[["self"],["str"],["v"]],["result"]]],[10,"deserialize_newtype_struct","","Hint that the `Deserialize` type is expecting a newtype…",11,[[["self"],["str"],["v"]],["result"]]],[10,"deserialize_seq","","Hint that the `Deserialize` type is expecting a sequence…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_tuple","","Hint that the `Deserialize` type is expecting a sequence…",11,[[["self"],["usize"],["v"]],["result"]]],[10,"deserialize_tuple_struct","","Hint that the `Deserialize` type is expecting a tuple…",11,[[["self"],["str"],["usize"],["v"]],["result"]]],[10,"deserialize_map","","Hint that the `Deserialize` type is expecting a map of…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_struct","","Hint that the `Deserialize` type is expecting a struct…",11,N],[10,"deserialize_enum","","Hint that the `Deserialize` type is expecting an enum…",11,N],[10,"deserialize_identifier","","Hint that the `Deserialize` type is expecting the name of…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_ignored_any","","Hint that the `Deserialize` type needs to deserialize a…",11,[[["self"],["v"]],["result"]]],[11,"is_human_readable","","Determine whether `Deserialize` implementations should…",11,[[["self"]],["bool"]]],[8,"Visitor","","This trait represents a visitor that walks through a…",N,N],[16,"Value","","The value produced by this visitor.",12,N],[10,"expecting","","Format a message stating what data this Visitor expects to…",12,[[["self"],["formatter"]],["result"]]],[11,"visit_bool","","The input contains a boolean.",12,[[["self"],["bool"]],["result"]]],[11,"visit_i8","","The input contains an `i8`.",12,[[["self"],["i8"]],["result"]]],[11,"visit_i16","","The input contains an `i16`.",12,[[["self"],["i16"]],["result"]]],[11,"visit_i32","","The input contains an `i32`.",12,[[["self"],["i32"]],["result"]]],[11,"visit_i64","","The input contains an `i64`.",12,[[["self"],["i64"]],["result"]]],[11,"visit_i128","","The input contains a `i128`.",12,[[["self"],["i128"]],["result"]]],[11,"visit_u8","","The input contains a `u8`.",12,[[["self"],["u8"]],["result"]]],[11,"visit_u16","","The input contains a `u16`.",12,[[["self"],["u16"]],["result"]]],[11,"visit_u32","","The input contains a `u32`.",12,[[["self"],["u32"]],["result"]]],[11,"visit_u64","","The input contains a `u64`.",12,[[["self"],["u64"]],["result"]]],[11,"visit_u128","","The input contains a `u128`.",12,[[["self"],["u128"]],["result"]]],[11,"visit_f32","","The input contains an `f32`.",12,[[["self"],["f32"]],["result"]]],[11,"visit_f64","","The input contains an `f64`.",12,[[["self"],["f64"]],["result"]]],[11,"visit_char","","The input contains a `char`.",12,[[["self"],["char"]],["result"]]],[11,"visit_str","","The input contains a string. The lifetime of the string is…",12,[[["self"],["str"]],["result"]]],[11,"visit_borrowed_str","","The input contains a string that lives at least as long as…",12,[[["self"],["str"]],["result"]]],[11,"visit_string","","The input contains a string and ownership of the string is…",12,[[["self"],["string"]],["result"]]],[11,"visit_bytes","","The input contains a byte array. The lifetime of the byte…",12,N],[11,"visit_borrowed_bytes","","The input contains a byte array that lives at least as…",12,N],[11,"visit_byte_buf","","The input contains a byte array and ownership of the byte…",12,[[["self"],["vec",["u8"]]],["result"]]],[11,"visit_none","","The input contains an optional that is absent.",12,[[["self"]],["result"]]],[11,"visit_some","","The input contains an optional that is present.",12,[[["self"],["d"]],["result"]]],[11,"visit_unit","","The input contains a unit `()`.",12,[[["self"]],["result"]]],[11,"visit_newtype_struct","","The input contains a newtype struct.",12,[[["self"],["d"]],["result"]]],[11,"visit_seq","","The input contains a sequence of elements.",12,[[["self"],["a"]],["result"]]],[11,"visit_map","","The input contains a key-value map.",12,[[["self"],["a"]],["result"]]],[11,"visit_enum","","The input contains an enum.",12,[[["self"],["a"]],["result"]]],[8,"SeqAccess","","Provides a `Visitor` access to each element of a sequence…",N,N],[16,"Error","","The error type that can be returned if some error occurs…",13,N],[10,"next_element_seed","","This returns `Ok(Some(value))` for the next value in the…",13,[[["self"],["t"]],["result",["option"]]]],[11,"next_element","","This returns `Ok(Some(value))` for the next value in the…",13,[[["self"]],["result",["option"]]]],[11,"size_hint","","Returns the number of elements remaining in the sequence,…",13,[[["self"]],["option",["usize"]]]],[8,"MapAccess","","Provides a `Visitor` access to each entry of a map in the…",N,N],[16,"Error","","The error type that can be returned if some error occurs…",14,N],[10,"next_key_seed","","This returns `Ok(Some(key))` for the next key in the map,…",14,[[["self"],["k"]],["result",["option"]]]],[10,"next_value_seed","","This returns a `Ok(value)` for the next value in the map.",14,[[["self"],["v"]],["result"]]],[11,"next_entry_seed","","This returns `Ok(Some((key, value)))` for the next…",14,[[["self"],["k"],["v"]],["result",["option"]]]],[11,"next_key","","This returns `Ok(Some(key))` for the next key in the map,…",14,[[["self"]],["result",["option"]]]],[11,"next_value","","This returns a `Ok(value)` for the next value in the map.",14,[[["self"]],["result"]]],[11,"next_entry","","This returns `Ok(Some((key, value)))` for the next…",14,[[["self"]],["result",["option"]]]],[11,"size_hint","","Returns the number of entries remaining in the map, if…",14,[[["self"]],["option",["usize"]]]],[8,"EnumAccess","","Provides a `Visitor` access to the data of an enum in the…",N,N],[16,"Error","","The error type that can be returned if some error occurs…",15,N],[16,"Variant","","The `Visitor` that will be used to deserialize the content…",15,N],[10,"variant_seed","","`variant` is called to identify which variant to…",15,[[["self"],["v"]],["result"]]],[11,"variant","","`variant` is called to identify which variant to…",15,[[["self"]],["result"]]],[8,"VariantAccess","","`VariantAccess` is a visitor that is created by the…",N,N],[16,"Error","","The error type that can be returned if some error occurs…",16,N],[10,"unit_variant","","Called when deserializing a variant with no values.",16,[[["self"]],["result"]]],[10,"newtype_variant_seed","","Called when deserializing a variant with a single value.",16,[[["self"],["t"]],["result"]]],[11,"newtype_variant","","Called when deserializing a variant with a single value.",16,[[["self"]],["result"]]],[10,"tuple_variant","","Called when deserializing a tuple-like variant.",16,[[["self"],["usize"],["v"]],["result"]]],[10,"struct_variant","","Called when deserializing a struct-like variant.",16,N],[8,"IntoDeserializer","","Converts an existing value into a `Deserializer` from…",N,N],[16,"Deserializer","","The type of the deserializer being converted into.",17,N],[10,"into_deserializer","","Convert this value into a deserializer.",17,N],[0,"ser","serde","Generic data structure serialization framework.",N,N],[3,"Impossible","serde::ser","Helper type for implementing a `Serializer` that does not…",N,N],[8,"Error","","Trait used by `Serialize` implementations to generically…",N,N],[10,"custom","","Used when a [`Serialize`] implementation encounters any…",18,[[["t"]],["self"]]],[8,"Serialize","","A data structure that can be serialized into any data…",N,N],[10,"serialize","","Serialize this value into the given Serde serializer.",19,[[["self"],["s"]],["result"]]],[8,"Serializer","","A data format that can serialize any data structure…",N,N],[16,"Ok","","The output type produced by this `Serializer` during…",20,N],[16,"Error","","The error type when some error occurs during serialization.",20,N],[16,"SerializeSeq","","Type returned from [`serialize_seq`] for serializing the…",20,N],[16,"SerializeTuple","","Type returned from [`serialize_tuple`] for serializing the…",20,N],[16,"SerializeTupleStruct","","Type returned from [`serialize_tuple_struct`] for…",20,N],[16,"SerializeTupleVariant","","Type returned from [`serialize_tuple_variant`] for…",20,N],[16,"SerializeMap","","Type returned from [`serialize_map`] for serializing the…",20,N],[16,"SerializeStruct","","Type returned from [`serialize_struct`] for serializing…",20,N],[16,"SerializeStructVariant","","Type returned from [`serialize_struct_variant`] for…",20,N],[10,"serialize_bool","","Serialize a `bool` value.",20,[[["self"],["bool"]],["result"]]],[10,"serialize_i8","","Serialize an `i8` value.",20,[[["self"],["i8"]],["result"]]],[10,"serialize_i16","","Serialize an `i16` value.",20,[[["self"],["i16"]],["result"]]],[10,"serialize_i32","","Serialize an `i32` value.",20,[[["self"],["i32"]],["result"]]],[10,"serialize_i64","","Serialize an `i64` value.",20,[[["self"],["i64"]],["result"]]],[11,"serialize_i128","","Serialize an `i128` value.",20,[[["self"],["i128"]],["result"]]],[10,"serialize_u8","","Serialize a `u8` value.",20,[[["self"],["u8"]],["result"]]],[10,"serialize_u16","","Serialize a `u16` value.",20,[[["self"],["u16"]],["result"]]],[10,"serialize_u32","","Serialize a `u32` value.",20,[[["self"],["u32"]],["result"]]],[10,"serialize_u64","","Serialize a `u64` value.",20,[[["self"],["u64"]],["result"]]],[11,"serialize_u128","","Serialize a `u128` value.",20,[[["self"],["u128"]],["result"]]],[10,"serialize_f32","","Serialize an `f32` value.",20,[[["self"],["f32"]],["result"]]],[10,"serialize_f64","","Serialize an `f64` value.",20,[[["self"],["f64"]],["result"]]],[10,"serialize_char","","Serialize a character.",20,[[["self"],["char"]],["result"]]],[10,"serialize_str","","Serialize a `&str`.",20,[[["self"],["str"]],["result"]]],[10,"serialize_bytes","","Serialize a chunk of raw byte data.",20,N],[10,"serialize_none","","Serialize a [`None`] value.",20,[[["self"]],["result"]]],[10,"serialize_some","","Serialize a [`Some(T)`] value.",20,[[["self"],["t"]],["result"]]],[10,"serialize_unit","","Serialize a `()` value.",20,[[["self"]],["result"]]],[10,"serialize_unit_struct","","Serialize a unit struct like `struct Unit` or…",20,[[["self"],["str"]],["result"]]],[10,"serialize_unit_variant","","Serialize a unit variant like `E::A` in `enum E { A, B }`.",20,[[["self"],["str"],["u32"],["str"]],["result"]]],[10,"serialize_newtype_struct","","Serialize a newtype struct like `struct Millimeters(u8)`.",20,[[["self"],["str"],["t"]],["result"]]],[10,"serialize_newtype_variant","","Serialize a newtype variant like `E::N` in `enum E { N(u8)…",20,[[["self"],["str"],["u32"],["str"],["t"]],["result"]]],[10,"serialize_seq","","Begin to serialize a variably sized sequence. This call…",20,[[["self"],["option",["usize"]]],["result"]]],[10,"serialize_tuple","","Begin to serialize a statically sized sequence whose…",20,[[["self"],["usize"]],["result"]]],[10,"serialize_tuple_struct","","Begin to serialize a tuple struct like `struct Rgb(u8, u8,…",20,[[["self"],["str"],["usize"]],["result"]]],[10,"serialize_tuple_variant","","Begin to serialize a tuple variant like `E::T` in `enum E…",20,[[["self"],["str"],["u32"],["str"],["usize"]],["result"]]],[10,"serialize_map","","Begin to serialize a map. This call must be followed by…",20,[[["self"],["option",["usize"]]],["result"]]],[10,"serialize_struct","","Begin to serialize a struct like `struct Rgb { r: u8, g:…",20,[[["self"],["str"],["usize"]],["result"]]],[10,"serialize_struct_variant","","Begin to serialize a struct variant like `E::S` in `enum E…",20,[[["self"],["str"],["u32"],["str"],["usize"]],["result"]]],[11,"collect_seq","","Collect an iterator as a sequence.",20,[[["self"],["i"]],["result"]]],[11,"collect_map","","Collect an iterator as a map.",20,[[["self"],["i"]],["result"]]],[11,"collect_str","","Serialize a string produced by an implementation of…",20,[[["self"],["t"]],["result"]]],[11,"is_human_readable","","Determine whether `Serialize` implementations should…",20,[[["self"]],["bool"]]],[8,"SerializeSeq","","Returned from `Serializer::serialize_seq`.",N,N],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",21,N],[16,"Error","","Must match the `Error` type of our `Serializer`.",21,N],[10,"serialize_element","","Serialize a sequence element.",21,[[["self"],["t"]],["result"]]],[10,"end","","Finish serializing a sequence.",21,[[["self"]],["result"]]],[8,"SerializeTuple","","Returned from `Serializer::serialize_tuple`.",N,N],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",22,N],[16,"Error","","Must match the `Error` type of our `Serializer`.",22,N],[10,"serialize_element","","Serialize a tuple element.",22,[[["self"],["t"]],["result"]]],[10,"end","","Finish serializing a tuple.",22,[[["self"]],["result"]]],[8,"SerializeTupleStruct","","Returned from `Serializer::serialize_tuple_struct`.",N,N],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",23,N],[16,"Error","","Must match the `Error` type of our `Serializer`.",23,N],[10,"serialize_field","","Serialize a tuple struct field.",23,[[["self"],["t"]],["result"]]],[10,"end","","Finish serializing a tuple struct.",23,[[["self"]],["result"]]],[8,"SerializeTupleVariant","","Returned from `Serializer::serialize_tuple_variant`.",N,N],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",24,N],[16,"Error","","Must match the `Error` type of our `Serializer`.",24,N],[10,"serialize_field","","Serialize a tuple variant field.",24,[[["self"],["t"]],["result"]]],[10,"end","","Finish serializing a tuple variant.",24,[[["self"]],["result"]]],[8,"SerializeMap","","Returned from `Serializer::serialize_map`.",N,N],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",25,N],[16,"Error","","Must match the `Error` type of our `Serializer`.",25,N],[10,"serialize_key","","Serialize a map key.",25,[[["self"],["t"]],["result"]]],[10,"serialize_value","","Serialize a map value.",25,[[["self"],["t"]],["result"]]],[11,"serialize_entry","","Serialize a map entry consisting of a key and a value.",25,[[["self"],["k"],["v"]],["result"]]],[10,"end","","Finish serializing a map.",25,[[["self"]],["result"]]],[8,"SerializeStruct","","Returned from `Serializer::serialize_struct`.",N,N],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",26,N],[16,"Error","","Must match the `Error` type of our `Serializer`.",26,N],[10,"serialize_field","","Serialize a struct field.",26,[[["self"],["str"],["t"]],["result"]]],[11,"skip_field","","Indicate that a struct field has been skipped.",26,[[["self"],["str"]],["result"]]],[10,"end","","Finish serializing a struct.",26,[[["self"]],["result"]]],[8,"SerializeStructVariant","","Returned from `Serializer::serialize_struct_variant`.",N,N],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",27,N],[16,"Error","","Must match the `Error` type of our `Serializer`.",27,N],[10,"serialize_field","","Serialize a struct variant field.",27,[[["self"],["str"],["t"]],["result"]]],[11,"skip_field","","Indicate that a struct variant field has been skipped.",27,[[["self"],["str"]],["result"]]],[10,"end","","Finish serializing a struct variant.",27,[[["self"]],["result"]]],[8,"Deserialize","serde","A data structure that can be deserialized from any data…",N,N],[10,"deserialize","","Deserialize this value from the given Serde deserializer.",9,[[["d"]],["result"]]],[8,"Deserializer","","A data format that can deserialize any data structure…",N,N],[16,"Error","","The error type that can be returned if some error occurs…",11,N],[10,"deserialize_any","","Require the `Deserializer` to figure out how to drive the…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_bool","","Hint that the `Deserialize` type is expecting a `bool`…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_i8","","Hint that the `Deserialize` type is expecting an `i8` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_i16","","Hint that the `Deserialize` type is expecting an `i16`…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_i32","","Hint that the `Deserialize` type is expecting an `i32`…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_i64","","Hint that the `Deserialize` type is expecting an `i64`…",11,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","Hint that the `Deserialize` type is expecting an `i128`…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_u8","","Hint that the `Deserialize` type is expecting a `u8` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_u16","","Hint that the `Deserialize` type is expecting a `u16` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_u32","","Hint that the `Deserialize` type is expecting a `u32` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_u64","","Hint that the `Deserialize` type is expecting a `u64` value.",11,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","Hint that the `Deserialize` type is expecting an `u128`…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_f32","","Hint that the `Deserialize` type is expecting a `f32` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_f64","","Hint that the `Deserialize` type is expecting a `f64` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_char","","Hint that the `Deserialize` type is expecting a `char`…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_str","","Hint that the `Deserialize` type is expecting a string…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_string","","Hint that the `Deserialize` type is expecting a string…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_bytes","","Hint that the `Deserialize` type is expecting a byte array…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_byte_buf","","Hint that the `Deserialize` type is expecting a byte array…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_option","","Hint that the `Deserialize` type is expecting an optional…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_unit","","Hint that the `Deserialize` type is expecting a unit value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_unit_struct","","Hint that the `Deserialize` type is expecting a unit…",11,[[["self"],["str"],["v"]],["result"]]],[10,"deserialize_newtype_struct","","Hint that the `Deserialize` type is expecting a newtype…",11,[[["self"],["str"],["v"]],["result"]]],[10,"deserialize_seq","","Hint that the `Deserialize` type is expecting a sequence…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_tuple","","Hint that the `Deserialize` type is expecting a sequence…",11,[[["self"],["usize"],["v"]],["result"]]],[10,"deserialize_tuple_struct","","Hint that the `Deserialize` type is expecting a tuple…",11,[[["self"],["str"],["usize"],["v"]],["result"]]],[10,"deserialize_map","","Hint that the `Deserialize` type is expecting a map of…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_struct","","Hint that the `Deserialize` type is expecting a struct…",11,N],[10,"deserialize_enum","","Hint that the `Deserialize` type is expecting an enum…",11,N],[10,"deserialize_identifier","","Hint that the `Deserialize` type is expecting the name of…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_ignored_any","","Hint that the `Deserialize` type needs to deserialize a…",11,[[["self"],["v"]],["result"]]],[11,"is_human_readable","","Determine whether `Deserialize` implementations should…",11,[[["self"]],["bool"]]],[8,"Serialize","","A data structure that can be serialized into any data…",N,N],[10,"serialize","","Serialize this value into the given Serde serializer.",19,[[["self"],["s"]],["result"]]],[8,"Serializer","","A data format that can serialize any data structure…",N,N],[16,"Ok","","The output type produced by this `Serializer` during…",20,N],[16,"Error","","The error type when some error occurs during serialization.",20,N],[16,"SerializeSeq","","Type returned from [`serialize_seq`] for serializing the…",20,N],[16,"SerializeTuple","","Type returned from [`serialize_tuple`] for serializing the…",20,N],[16,"SerializeTupleStruct","","Type returned from [`serialize_tuple_struct`] for…",20,N],[16,"SerializeTupleVariant","","Type returned from [`serialize_tuple_variant`] for…",20,N],[16,"SerializeMap","","Type returned from [`serialize_map`] for serializing the…",20,N],[16,"SerializeStruct","","Type returned from [`serialize_struct`] for serializing…",20,N],[16,"SerializeStructVariant","","Type returned from [`serialize_struct_variant`] for…",20,N],[10,"serialize_bool","","Serialize a `bool` value.",20,[[["self"],["bool"]],["result"]]],[10,"serialize_i8","","Serialize an `i8` value.",20,[[["self"],["i8"]],["result"]]],[10,"serialize_i16","","Serialize an `i16` value.",20,[[["self"],["i16"]],["result"]]],[10,"serialize_i32","","Serialize an `i32` value.",20,[[["self"],["i32"]],["result"]]],[10,"serialize_i64","","Serialize an `i64` value.",20,[[["self"],["i64"]],["result"]]],[11,"serialize_i128","","Serialize an `i128` value.",20,[[["self"],["i128"]],["result"]]],[10,"serialize_u8","","Serialize a `u8` value.",20,[[["self"],["u8"]],["result"]]],[10,"serialize_u16","","Serialize a `u16` value.",20,[[["self"],["u16"]],["result"]]],[10,"serialize_u32","","Serialize a `u32` value.",20,[[["self"],["u32"]],["result"]]],[10,"serialize_u64","","Serialize a `u64` value.",20,[[["self"],["u64"]],["result"]]],[11,"serialize_u128","","Serialize a `u128` value.",20,[[["self"],["u128"]],["result"]]],[10,"serialize_f32","","Serialize an `f32` value.",20,[[["self"],["f32"]],["result"]]],[10,"serialize_f64","","Serialize an `f64` value.",20,[[["self"],["f64"]],["result"]]],[10,"serialize_char","","Serialize a character.",20,[[["self"],["char"]],["result"]]],[10,"serialize_str","","Serialize a `&str`.",20,[[["self"],["str"]],["result"]]],[10,"serialize_bytes","","Serialize a chunk of raw byte data.",20,N],[10,"serialize_none","","Serialize a [`None`] value.",20,[[["self"]],["result"]]],[10,"serialize_some","","Serialize a [`Some(T)`] value.",20,[[["self"],["t"]],["result"]]],[10,"serialize_unit","","Serialize a `()` value.",20,[[["self"]],["result"]]],[10,"serialize_unit_struct","","Serialize a unit struct like `struct Unit` or…",20,[[["self"],["str"]],["result"]]],[10,"serialize_unit_variant","","Serialize a unit variant like `E::A` in `enum E { A, B }`.",20,[[["self"],["str"],["u32"],["str"]],["result"]]],[10,"serialize_newtype_struct","","Serialize a newtype struct like `struct Millimeters(u8)`.",20,[[["self"],["str"],["t"]],["result"]]],[10,"serialize_newtype_variant","","Serialize a newtype variant like `E::N` in `enum E { N(u8)…",20,[[["self"],["str"],["u32"],["str"],["t"]],["result"]]],[10,"serialize_seq","","Begin to serialize a variably sized sequence. This call…",20,[[["self"],["option",["usize"]]],["result"]]],[10,"serialize_tuple","","Begin to serialize a statically sized sequence whose…",20,[[["self"],["usize"]],["result"]]],[10,"serialize_tuple_struct","","Begin to serialize a tuple struct like `struct Rgb(u8, u8,…",20,[[["self"],["str"],["usize"]],["result"]]],[10,"serialize_tuple_variant","","Begin to serialize a tuple variant like `E::T` in `enum E…",20,[[["self"],["str"],["u32"],["str"],["usize"]],["result"]]],[10,"serialize_map","","Begin to serialize a map. This call must be followed by…",20,[[["self"],["option",["usize"]]],["result"]]],[10,"serialize_struct","","Begin to serialize a struct like `struct Rgb { r: u8, g:…",20,[[["self"],["str"],["usize"]],["result"]]],[10,"serialize_struct_variant","","Begin to serialize a struct variant like `E::S` in `enum E…",20,[[["self"],["str"],["u32"],["str"],["usize"]],["result"]]],[11,"collect_seq","","Collect an iterator as a sequence.",20,[[["self"],["i"]],["result"]]],[11,"collect_map","","Collect an iterator as a map.",20,[[["self"],["i"]],["result"]]],[11,"collect_str","","Serialize a string produced by an implementation of…",20,[[["self"],["t"]],["result"]]],[11,"is_human_readable","","Determine whether `Serialize` implementations should…",20,[[["self"]],["bool"]]],[14,"forward_to_deserialize_any","","Helper macro when implementing the `Deserializer` part of…",N,N],[14,"serde_if_integer128","","Conditional compilation depending on whether Serde is…",N,N],[11,"fmt","serde::de","",28,[[["self"],["formatter"]],["result",["error"]]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,N],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","serde::de::value","",29,[[["t"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,N],[11,"to_string","","",29,[[["self"]],["string"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,N],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,N],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,N],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,N],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,N],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,N],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,N],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,N],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,N],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,N],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,N],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,N],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,N],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,N],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,N],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,N],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,N],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,N],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,N],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","serde::ser","",50,[[["t"]],["t"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"deserialize","serde::de","",28,[[["d"]],["result",["ignoredany"]]]],[11,"deserialize_bool","serde::de::value","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",30,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",30,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",30,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",30,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",30,N],[11,"deserialize_enum","","",30,N],[11,"deserialize_identifier","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",31,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",31,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",31,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",31,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",31,N],[11,"deserialize_enum","","",31,N],[11,"deserialize_identifier","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",32,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",32,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",32,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",32,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",32,N],[11,"deserialize_enum","","",32,N],[11,"deserialize_identifier","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",33,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",33,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",33,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",33,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",33,N],[11,"deserialize_enum","","",33,N],[11,"deserialize_identifier","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",34,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",34,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",34,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",34,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",34,N],[11,"deserialize_enum","","",34,N],[11,"deserialize_identifier","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",35,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",35,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",35,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",35,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",35,N],[11,"deserialize_enum","","",35,N],[11,"deserialize_identifier","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",36,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",36,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",36,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",36,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",36,N],[11,"deserialize_enum","","",36,N],[11,"deserialize_identifier","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",37,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",37,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",37,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",37,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",37,N],[11,"deserialize_enum","","",37,N],[11,"deserialize_identifier","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",38,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",38,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",38,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",38,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",38,N],[11,"deserialize_enum","","",38,N],[11,"deserialize_identifier","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",39,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",39,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",39,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",39,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",39,N],[11,"deserialize_enum","","",39,N],[11,"deserialize_identifier","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",40,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",40,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",40,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",40,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",40,N],[11,"deserialize_enum","","",40,N],[11,"deserialize_identifier","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",41,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",41,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",41,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",41,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",41,N],[11,"deserialize_enum","","",41,N],[11,"deserialize_identifier","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",42,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",42,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",42,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",42,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",42,N],[11,"deserialize_enum","","",42,N],[11,"deserialize_identifier","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",43,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",43,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",43,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",43,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",43,N],[11,"deserialize_enum","","",43,N],[11,"deserialize_identifier","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",44,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",44,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",44,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",44,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",44,N],[11,"deserialize_enum","","",44,N],[11,"deserialize_identifier","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",45,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",45,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",45,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",45,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",45,N],[11,"deserialize_enum","","",45,N],[11,"deserialize_identifier","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",46,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",46,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",46,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",46,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",46,N],[11,"deserialize_identifier","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_enum","","",46,N],[11,"deserialize_any","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_enum","","",47,N],[11,"deserialize_bool","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",47,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",47,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",47,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",47,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",47,N],[11,"deserialize_identifier","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_enum","","",1,N],[11,"deserialize_bool","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",1,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",1,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",1,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",1,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",1,N],[11,"deserialize_identifier","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_enum","","",48,N],[11,"deserialize_bool","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",48,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",48,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",48,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",48,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",48,N],[11,"deserialize_identifier","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_enum","","",49,N],[11,"deserialize_bool","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",49,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",49,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",49,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",49,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",49,N],[11,"deserialize_identifier","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",2,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",2,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",2,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",2,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",2,N],[11,"deserialize_identifier","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_enum","","",2,N],[11,"deserialize_any","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",3,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",3,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",3,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",3,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",3,N],[11,"deserialize_enum","","",3,N],[11,"deserialize_identifier","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",4,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",4,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",4,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",4,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",4,N],[11,"deserialize_enum","","",4,N],[11,"deserialize_identifier","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_seq","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",5,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_bool","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",5,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",5,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",5,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",5,N],[11,"deserialize_enum","","",5,N],[11,"deserialize_identifier","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",6,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",6,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",6,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",6,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",6,N],[11,"deserialize_enum","","",6,N],[11,"deserialize_identifier","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",6,[[["self"],["v"]],["result"]]],[11,"expecting","serde::de","",28,[[["self"],["formatter"]],["result"]]],[11,"visit_bool","","",28,[[["self"],["bool"]],["result"]]],[11,"visit_i64","","",28,[[["self"],["i64"]],["result"]]],[11,"visit_u64","","",28,[[["self"],["u64"]],["result"]]],[11,"visit_f64","","",28,[[["self"],["f64"]],["result"]]],[11,"visit_str","","",28,[[["self"],["str"]],["result"]]],[11,"visit_none","","",28,[[["self"]],["result"]]],[11,"visit_some","","",28,[[["self"],["d"]],["result"]]],[11,"visit_newtype_struct","","",28,[[["self"],["d"]],["result"]]],[11,"visit_unit","","",28,[[["self"]],["result"]]],[11,"visit_seq","","",28,[[["self"],["a"]],["result"]]],[11,"visit_map","","",28,[[["self"],["a"]],["result"]]],[11,"visit_bytes","","",28,N],[11,"next_element_seed","serde::de::value","",3,[[["self"],["v"]],["result",["option"]]]],[11,"size_hint","","",3,[[["self"]],["option",["usize"]]]],[11,"next_element_seed","","",5,[[["self"],["t"]],["result",["option"]]]],[11,"size_hint","","",5,[[["self"]],["option",["usize"]]]],[11,"next_key_seed","","",5,[[["self"],["t"]],["result",["option"]]]],[11,"next_value_seed","","",5,[[["self"],["t"]],["result"]]],[11,"next_entry_seed","","",5,[[["self"],["tk"],["tv"]],["result",["option"]]]],[11,"size_hint","","",5,[[["self"]],["option",["usize"]]]],[11,"variant_seed","","",46,[[["self"],["t"]],["result"]]],[11,"variant_seed","","",47,[[["self"],["t"]],["result"]]],[11,"variant_seed","","",1,[[["self"],["t"]],["result"]]],[11,"variant_seed","","",48,[[["self"],["t"]],["result"]]],[11,"variant_seed","","",49,[[["self"],["t"]],["result"]]],[11,"serialize_element","serde::ser","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[["self"]],["result"]]],[11,"serialize_element","","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[["self"]],["result"]]],[11,"serialize_field","","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[["self"]],["result"]]],[11,"serialize_field","","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[["self"]],["result"]]],[11,"serialize_key","","",50,[[["self"],["t"]],["result"]]],[11,"serialize_value","","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[["self"]],["result"]]],[11,"serialize_field","","",50,[[["self"],["str"],["t"]],["result"]]],[11,"end","","",50,[[["self"]],["result"]]],[11,"serialize_field","","",50,[[["self"],["str"],["t"]],["result"]]],[11,"end","","",50,[[["self"]],["result"]]],[11,"custom","serde::de::value","",29,[[["t"]],["self"]]],[11,"custom","","",29,[[["t"]],["self"]]],[11,"eq","","",29,[[["self"],["error"]],["bool"]]],[11,"ne","","",29,[[["self"],["error"]],["bool"]]],[11,"eq","serde::de","",0,[[["self"],["unexpected"]],["bool"]]],[11,"ne","","",0,[[["self"],["unexpected"]],["bool"]]],[11,"clone","serde::de::value","",29,[[["self"]],["error"]]],[11,"clone","","",30,[[["self"]],["self"]]],[11,"clone","","",31,[[["self"]],["self"]]],[11,"clone","","",32,[[["self"]],["self"]]],[11,"clone","","",33,[[["self"]],["self"]]],[11,"clone","","",34,[[["self"]],["self"]]],[11,"clone","","",35,[[["self"]],["self"]]],[11,"clone","","",36,[[["self"]],["self"]]],[11,"clone","","",37,[[["self"]],["self"]]],[11,"clone","","",38,[[["self"]],["self"]]],[11,"clone","","",39,[[["self"]],["self"]]],[11,"clone","","",40,[[["self"]],["self"]]],[11,"clone","","",41,[[["self"]],["self"]]],[11,"clone","","",42,[[["self"]],["self"]]],[11,"clone","","",43,[[["self"]],["self"]]],[11,"clone","","",44,[[["self"]],["self"]]],[11,"clone","","",45,[[["self"]],["self"]]],[11,"clone","","",46,[[["self"]],["self"]]],[11,"clone","","",47,[[["self"]],["self"]]],[11,"clone","","",1,[[["self"]],["self"]]],[11,"clone","","",48,[[["self"]],["self"]]],[11,"clone","","",49,[[["self"]],["self"]]],[11,"clone","","",2,[[["self"]],["self"]]],[11,"clone","","",3,[[["self"]],["seqdeserializer"]]],[11,"clone","","",4,[[["self"]],["seqaccessdeserializer"]]],[11,"clone","","",5,[[["self"]],["self"]]],[11,"clone","","",6,[[["self"]],["mapaccessdeserializer"]]],[11,"clone","serde::de","",28,[[["self"]],["ignoredany"]]],[11,"clone","","",0,[[["self"]],["unexpected"]]],[11,"default","","",28,[[],["ignoredany"]]],[11,"fmt","serde::de::value","",29,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","serde::de","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","serde::de::value","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","serde::de","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"description","serde::de::value","",29,[[["self"]],["str"]]]],"paths":[[4,"Unexpected"],[3,"BorrowedStrDeserializer"],[3,"BorrowedBytesDeserializer"],[3,"SeqDeserializer"],[3,"SeqAccessDeserializer"],[3,"MapDeserializer"],[3,"MapAccessDeserializer"],[8,"Error"],[8,"Expected"],[8,"Deserialize"],[8,"DeserializeSeed"],[8,"Deserializer"],[8,"Visitor"],[8,"SeqAccess"],[8,"MapAccess"],[8,"EnumAccess"],[8,"VariantAccess"],[8,"IntoDeserializer"],[8,"Error"],[8,"Serialize"],[8,"Serializer"],[8,"SerializeSeq"],[8,"SerializeTuple"],[8,"SerializeTupleStruct"],[8,"SerializeTupleVariant"],[8,"SerializeMap"],[8,"SerializeStruct"],[8,"SerializeStructVariant"],[3,"IgnoredAny"],[3,"Error"],[3,"UnitDeserializer"],[3,"BoolDeserializer"],[3,"I8Deserializer"],[3,"I16Deserializer"],[3,"I32Deserializer"],[3,"I64Deserializer"],[3,"IsizeDeserializer"],[3,"U8Deserializer"],[3,"U16Deserializer"],[3,"U64Deserializer"],[3,"UsizeDeserializer"],[3,"F32Deserializer"],[3,"F64Deserializer"],[3,"CharDeserializer"],[3,"I128Deserializer"],[3,"U128Deserializer"],[3,"U32Deserializer"],[3,"StrDeserializer"],[3,"StringDeserializer"],[3,"CowStrDeserializer"],[3,"Impossible"]]};
searchIndex["serde_derive"]={"doc":"This crate provides Serde's two derive macros.","items":[[24,"Serialize","serde_derive","",N,N],[24,"Deserialize","","",N,N]],"paths":[]};
searchIndex["serde_json"]={"doc":"Serde JSON","items":[[3,"Deserializer","serde_json","A structure that deserializes JSON into Rust values.",N,N],[3,"StreamDeserializer","","Iterator that deserializes a stream into multiple JSON…",N,N],[3,"Error","","This type represents all possible errors that can occur…",N,N],[3,"Serializer","","A structure for serializing Rust values into JSON.",N,N],[3,"Map","","Represents a JSON key/value type.",N,N],[3,"Number","","Represents a JSON number, whether integer or floating point.",N,N],[4,"Value","","Represents any valid JSON value.",N,N],[13,"Null","","Represents a JSON null value.",0,N],[13,"Bool","","Represents a JSON boolean.",0,N],[13,"Number","","Represents a JSON number, whether integer or floating point.",0,N],[13,"String","","Represents a JSON string.",0,N],[13,"Array","","Represents a JSON array.",0,N],[13,"Object","","Represents a JSON object.",0,N],[5,"from_reader","","Deserialize an instance of type `T` from an IO stream of…",N,[[["r"]],["result"]]],[5,"from_slice","","Deserialize an instance of type `T` from bytes of JSON text.",N,N],[5,"from_str","","Deserialize an instance of type `T` from a string of JSON…",N,[[["str"]],["result"]]],[5,"to_string","","Serialize the given data structure as a String of JSON.",N,[[["t"]],["result",["string"]]]],[5,"to_string_pretty","","Serialize the given data structure as a pretty-printed…",N,[[["t"]],["result",["string"]]]],[5,"to_vec","","Serialize the given data structure as a JSON byte vector.",N,[[["t"]],["result",["vec"]]]],[5,"to_vec_pretty","","Serialize the given data structure as a pretty-printed…",N,[[["t"]],["result",["vec"]]]],[5,"to_writer","","Serialize the given data structure as JSON into the IO…",N,[[["w"],["t"]],["result"]]],[5,"to_writer_pretty","","Serialize the given data structure as pretty-printed JSON…",N,[[["w"],["t"]],["result"]]],[5,"from_value","","Interpret a `serde_json::Value` as an instance of type `T`.",N,[[["value"]],["result",["error"]]]],[5,"to_value","","Convert a `T` into `serde_json::Value` which is an enum…",N,[[["t"]],["result",["value","error"]]]],[0,"de","","Deserialize JSON data to a Rust data structure.",N,N],[3,"IoRead","serde_json::de","JSON input source that reads from a std::io input stream.",N,N],[3,"SliceRead","","JSON input source that reads from a slice of bytes.",N,N],[3,"StrRead","","JSON input source that reads from a UTF-8 string.",N,N],[3,"Deserializer","","A structure that deserializes JSON into Rust values.",N,N],[3,"StreamDeserializer","","Iterator that deserializes a stream into multiple JSON…",N,N],[5,"from_reader","","Deserialize an instance of type `T` from an IO stream of…",N,[[["r"]],["result"]]],[5,"from_slice","","Deserialize an instance of type `T` from bytes of JSON text.",N,N],[5,"from_str","","Deserialize an instance of type `T` from a string of JSON…",N,[[["str"]],["result"]]],[8,"Read","","Trait used by the deserializer for iterating over input.…",N,N],[11,"new","","Create a JSON deserializer from one of the possible…",1,[[["r"]],["self"]]],[11,"from_reader","","Creates a JSON deserializer from an `io::Read`.",1,[[["r"]],["self"]]],[11,"from_slice","","Creates a JSON deserializer from a `&[u8]`.",1,N],[11,"from_str","","Creates a JSON deserializer from a `&str`.",1,[[["str"]],["self"]]],[11,"end","","The `Deserializer::end` method should be called after a…",1,[[["self"]],["result"]]],[11,"into_iter","","Turn a JSON deserializer into an iterator over values of…",1,[[["self"]],["streamdeserializer"]]],[11,"new","","Create a JSON stream deserializer from one of the possible…",2,[[["r"]],["self"]]],[11,"byte_offset","","Returns the number of bytes so far deserialized into a…",2,[[["self"]],["usize"]]],[0,"error","serde_json","When serializing or deserializing JSON goes wrong.",N,N],[3,"Error","serde_json::error","This type represents all possible errors that can occur…",N,N],[4,"Category","","Categorizes the cause of a `serde_json::Error`.",N,N],[13,"Io","","The error was caused by a failure to read or write bytes…",3,N],[13,"Syntax","","The error was caused by input that was not syntactically…",3,N],[13,"Data","","The error was caused by input data that was semantically…",3,N],[13,"Eof","","The error was caused by prematurely reaching the end of…",3,N],[6,"Result","","Alias for a `Result` with the error type…",N,N],[11,"line","","One-based line number at which the error was detected.",4,[[["self"]],["usize"]]],[11,"column","","One-based column number at which the error was detected.",4,[[["self"]],["usize"]]],[11,"classify","","Categorizes the cause of this error.",4,[[["self"]],["category"]]],[11,"is_io","","Returns true if this error was caused by a failure to read…",4,[[["self"]],["bool"]]],[11,"is_syntax","","Returns true if this error was caused by input that was…",4,[[["self"]],["bool"]]],[11,"is_data","","Returns true if this error was caused by input data that…",4,[[["self"]],["bool"]]],[11,"is_eof","","Returns true if this error was caused by prematurely…",4,[[["self"]],["bool"]]],[0,"map","serde_json","A map of String to serde_json::Value.",N,N],[3,"Map","serde_json::map","Represents a JSON key/value type.",N,N],[3,"VacantEntry","","A vacant Entry. It is part of the [`Entry`] enum.",N,N],[3,"OccupiedEntry","","An occupied Entry. It is part of the [`Entry`] enum.",N,N],[3,"Iter","","An iterator over a serde_json::Map's entries.",N,N],[3,"IterMut","","A mutable iterator over a serde_json::Map's entries.",N,N],[3,"IntoIter","","An owning iterator over a serde_json::Map's entries.",N,N],[3,"Keys","","An iterator over a serde_json::Map's keys.",N,N],[3,"Values","","An iterator over a serde_json::Map's values.",N,N],[3,"ValuesMut","","A mutable iterator over a serde_json::Map's values.",N,N],[4,"Entry","","A view into a single entry in a map, which may either be…",N,N],[13,"Vacant","","A vacant Entry.",5,N],[13,"Occupied","","An occupied Entry.",5,N],[11,"new","","Makes a new empty Map.",6,[[],["self"]]],[11,"with_capacity","","Makes a new empty Map with the given initial capacity.",6,[[["usize"]],["self"]]],[11,"clear","","Clears the map, removing all values.",6,[[["self"]]]],[11,"get","","Returns a reference to the value corresponding to the key.",6,[[["self"],["q"]],["option",["value"]]]],[11,"contains_key","","Returns true if the map contains a value for the specified…",6,[[["self"],["q"]],["bool"]]],[11,"get_mut","","Returns a mutable reference to the value corresponding to…",6,[[["self"],["q"]],["option",["value"]]]],[11,"insert","","Inserts a key-value pair into the map.",6,[[["self"],["string"],["value"]],["option",["value"]]]],[11,"remove","","Removes a key from the map, returning the value at the key…",6,[[["self"],["q"]],["option",["value"]]]],[11,"entry","","Gets the given key's corresponding entry in the map for…",6,[[["self"],["s"]],["entry"]]],[11,"len","","Returns the number of elements in the map.",6,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the map contains no elements.",6,[[["self"]],["bool"]]],[11,"iter","","Gets an iterator over the entries of the map.",6,[[["self"]],["iter"]]],[11,"iter_mut","","Gets a mutable iterator over the entries of the map.",6,[[["self"]],["itermut"]]],[11,"keys","","Gets an iterator over the keys of the map.",6,[[["self"]],["keys"]]],[11,"values","","Gets an iterator over the values of the map.",6,[[["self"]],["values"]]],[11,"values_mut","","Gets an iterator over mutable values of the map.",6,[[["self"]],["valuesmut"]]],[11,"key","","Returns a reference to this entry's key.",5,[[["self"]],["string"]]],[11,"or_insert","","Ensures a value is in the entry by inserting the default…",5,[[["self"],["value"]],["value"]]],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of…",5,[[["self"],["f"]],["value"]]],[11,"key","","Gets a reference to the key that would be used when…",7,[[["self"]],["string"]]],[11,"insert","","Sets the value of the entry with the VacantEntry's key,…",7,[[["self"],["value"]],["value"]]],[11,"key","","Gets a reference to the key in the entry.",8,[[["self"]],["string"]]],[11,"get","","Gets a reference to the value in the entry.",8,[[["self"]],["value"]]],[11,"get_mut","","Gets a mutable reference to the value in the entry.",8,[[["self"]],["value"]]],[11,"into_mut","","Converts the entry into a mutable reference to its value.",8,[[["self"]],["value"]]],[11,"insert","","Sets the value of the entry with the `OccupiedEntry`'s…",8,[[["self"],["value"]],["value"]]],[11,"remove","","Takes the value of the entry out of the map, and returns it.",8,[[["self"]],["value"]]],[0,"ser","serde_json","Serialize a Rust data structure into JSON data.",N,N],[3,"Serializer","serde_json::ser","A structure for serializing Rust values into JSON.",N,N],[3,"CompactFormatter","","This structure compacts a JSON value with no extra…",N,N],[3,"PrettyFormatter","","This structure pretty prints a JSON value to make it human…",N,N],[4,"CharEscape","","Represents a character escape code in a type-safe manner.",N,N],[13,"Quote","","An escaped quote `\"`",9,N],[13,"ReverseSolidus","","An escaped reverse solidus `\\`",9,N],[13,"Solidus","","An escaped solidus `/`",9,N],[13,"Backspace","","An escaped backspace character (usually escaped as `\\b`)",9,N],[13,"FormFeed","","An escaped form feed character (usually escaped as `\\f`)",9,N],[13,"LineFeed","","An escaped line feed character (usually escaped as `\\n`)",9,N],[13,"CarriageReturn","","An escaped carriage return character (usually escaped as…",9,N],[13,"Tab","","An escaped tab character (usually escaped as `\\t`)",9,N],[13,"AsciiControl","","An escaped ASCII plane control character (usually escaped…",9,N],[5,"to_writer","","Serialize the given data structure as JSON into the IO…",N,[[["w"],["t"]],["result"]]],[5,"to_writer_pretty","","Serialize the given data structure as pretty-printed JSON…",N,[[["w"],["t"]],["result"]]],[5,"to_vec","","Serialize the given data structure as a JSON byte vector.",N,[[["t"]],["result",["vec"]]]],[5,"to_vec_pretty","","Serialize the given data structure as a pretty-printed…",N,[[["t"]],["result",["vec"]]]],[5,"to_string","","Serialize the given data structure as a String of JSON.",N,[[["t"]],["result",["string"]]]],[5,"to_string_pretty","","Serialize the given data structure as a pretty-printed…",N,[[["t"]],["result",["string"]]]],[8,"Formatter","","This trait abstracts away serializing the JSON control…",N,N],[11,"write_null","","Writes a `null` value to the specified writer.",10,[[["self"],["w"]],["result"]]],[11,"write_bool","","Writes a `true` or `false` value to the specified writer.",10,[[["self"],["w"],["bool"]],["result"]]],[11,"write_i8","","Writes an integer value like `-123` to the specified writer.",10,[[["self"],["w"],["i8"]],["result"]]],[11,"write_i16","","Writes an integer value like `-123` to the specified writer.",10,[[["self"],["w"],["i16"]],["result"]]],[11,"write_i32","","Writes an integer value like `-123` to the specified writer.",10,[[["self"],["w"],["i32"]],["result"]]],[11,"write_i64","","Writes an integer value like `-123` to the specified writer.",10,[[["self"],["w"],["i64"]],["result"]]],[11,"write_u8","","Writes an integer value like `123` to the specified writer.",10,[[["self"],["w"],["u8"]],["result"]]],[11,"write_u16","","Writes an integer value like `123` to the specified writer.",10,[[["self"],["w"],["u16"]],["result"]]],[11,"write_u32","","Writes an integer value like `123` to the specified writer.",10,[[["self"],["w"],["u32"]],["result"]]],[11,"write_u64","","Writes an integer value like `123` to the specified writer.",10,[[["self"],["w"],["u64"]],["result"]]],[11,"write_f32","","Writes a floating point value like `-31.26e+12` to the…",10,[[["self"],["w"],["f32"]],["result"]]],[11,"write_f64","","Writes a floating point value like `-31.26e+12` to the…",10,[[["self"],["w"],["f64"]],["result"]]],[11,"write_number_str","","Writes a number that has already been rendered to a string.",10,[[["self"],["w"],["str"]],["result"]]],[11,"begin_string","","Called before each series of `write_string_fragment` and…",10,[[["self"],["w"]],["result"]]],[11,"end_string","","Called after each series of `write_string_fragment` and…",10,[[["self"],["w"]],["result"]]],[11,"write_string_fragment","","Writes a string fragment that doesn't need any escaping to…",10,[[["self"],["w"],["str"]],["result"]]],[11,"write_char_escape","","Writes a character escape code to the specified writer.",10,[[["self"],["w"],["charescape"]],["result"]]],[11,"begin_array","","Called before every array. Writes a `[` to the specified…",10,[[["self"],["w"]],["result"]]],[11,"end_array","","Called after every array. Writes a `]` to the specified…",10,[[["self"],["w"]],["result"]]],[11,"begin_array_value","","Called before every array value. Writes a `,` if needed to…",10,[[["self"],["w"],["bool"]],["result"]]],[11,"end_array_value","","Called after every array value.",10,[[["self"],["w"]],["result"]]],[11,"begin_object","","Called before every object. Writes a `{` to the specified…",10,[[["self"],["w"]],["result"]]],[11,"end_object","","Called after every object. Writes a `}` to the specified…",10,[[["self"],["w"]],["result"]]],[11,"begin_object_key","","Called before every object key.",10,[[["self"],["w"],["bool"]],["result"]]],[11,"end_object_key","","Called after every object key. A `:` should be written to…",10,[[["self"],["w"]],["result"]]],[11,"begin_object_value","","Called before every object value. A `:` should be written…",10,[[["self"],["w"]],["result"]]],[11,"end_object_value","","Called after every object value.",10,[[["self"],["w"]],["result"]]],[11,"write_raw_fragment","","Writes a raw JSON fragment that doesn't need any escaping…",10,[[["self"],["w"],["str"]],["result"]]],[11,"new","","Creates a new JSON serializer.",11,[[["w"]],["self"]]],[11,"pretty","","Creates a new JSON pretty print serializer.",11,[[["w"]],["self"]]],[11,"with_formatter","","Creates a new JSON visitor whose output will be written to…",11,[[["w"],["f"]],["self"]]],[11,"into_inner","","Unwrap the `Writer` from the `Serializer`.",11,[[["self"]],["w"]]],[11,"new","","Construct a pretty printer formatter that defaults to…",12,[[],["self"]]],[11,"with_indent","","Construct a pretty printer formatter that uses the…",12,N],[0,"value","serde_json","The Value enum, a loosely typed way of representing any…",N,N],[3,"Number","serde_json::value","Represents a JSON number, whether integer or floating point.",N,N],[4,"Value","","Represents any valid JSON value.",N,N],[13,"Null","","Represents a JSON null value.",0,N],[13,"Bool","","Represents a JSON boolean.",0,N],[13,"Number","","Represents a JSON number, whether integer or floating point.",0,N],[13,"String","","Represents a JSON string.",0,N],[13,"Array","","Represents a JSON array.",0,N],[13,"Object","","Represents a JSON object.",0,N],[5,"to_value","","Convert a `T` into `serde_json::Value` which is an enum…",N,[[["t"]],["result",["value","error"]]]],[5,"from_value","","Interpret a `serde_json::Value` as an instance of type `T`.",N,[[["value"]],["result",["error"]]]],[8,"Index","","A type that can be used to index into a `serde_json::Value`.",N,N],[11,"get","","Index into a JSON array or map. A string index can be used…",0,[[["self"],["i"]],["option",["value"]]]],[11,"get_mut","","Mutably index into a JSON array or map. A string index can…",0,[[["self"],["i"]],["option",["value"]]]],[11,"is_object","","Returns true if the `Value` is an Object. Returns false…",0,[[["self"]],["bool"]]],[11,"as_object","","If the `Value` is an Object, returns the associated Map.…",0,[[["self"]],["option",["map"]]]],[11,"as_object_mut","","If the `Value` is an Object, returns the associated…",0,[[["self"]],["option",["map"]]]],[11,"is_array","","Returns true if the `Value` is an Array. Returns false…",0,[[["self"]],["bool"]]],[11,"as_array","","If the `Value` is an Array, returns the associated vector.…",0,[[["self"]],["option",["vec"]]]],[11,"as_array_mut","","If the `Value` is an Array, returns the associated mutable…",0,[[["self"]],["option",["vec"]]]],[11,"is_string","","Returns true if the `Value` is a String. Returns false…",0,[[["self"]],["bool"]]],[11,"as_str","","If the `Value` is a String, returns the associated str.…",0,[[["self"]],["option",["str"]]]],[11,"is_number","","Returns true if the `Value` is a Number. Returns false…",0,[[["self"]],["bool"]]],[11,"is_i64","","Returns true if the `Value` is an integer between…",0,[[["self"]],["bool"]]],[11,"is_u64","","Returns true if the `Value` is an integer between zero and…",0,[[["self"]],["bool"]]],[11,"is_f64","","Returns true if the `Value` is a number that can be…",0,[[["self"]],["bool"]]],[11,"as_i64","","If the `Value` is an integer, represent it as i64 if…",0,[[["self"]],["option",["i64"]]]],[11,"as_u64","","If the `Value` is an integer, represent it as u64 if…",0,[[["self"]],["option",["u64"]]]],[11,"as_f64","","If the `Value` is a number, represent it as f64 if…",0,[[["self"]],["option",["f64"]]]],[11,"is_boolean","","Returns true if the `Value` is a Boolean. Returns false…",0,[[["self"]],["bool"]]],[11,"as_bool","","If the `Value` is a Boolean, returns the associated bool.…",0,[[["self"]],["option",["bool"]]]],[11,"is_null","","Returns true if the `Value` is a Null. Returns false…",0,[[["self"]],["bool"]]],[11,"as_null","","If the `Value` is a Null, returns (). Returns None…",0,[[["self"]],["option"]]],[11,"pointer","","Looks up a value by a JSON Pointer.",0,[[["self"],["str"]],["option",["value"]]]],[11,"pointer_mut","","Looks up a value by a JSON Pointer and returns a mutable…",0,[[["self"],["str"]],["option",["value"]]]],[11,"take","","Takes the value out of the `Value`, leaving a `Null` in…",0,[[["self"]],["value"]]],[11,"is_i64","serde_json","Returns true if the `Number` is an integer between…",13,[[["self"]],["bool"]]],[11,"is_u64","","Returns true if the `Number` is an integer between zero…",13,[[["self"]],["bool"]]],[11,"is_f64","","Returns true if the `Number` can be represented by f64.",13,[[["self"]],["bool"]]],[11,"as_i64","","If the `Number` is an integer, represent it as i64 if…",13,[[["self"]],["option",["i64"]]]],[11,"as_u64","","If the `Number` is an integer, represent it as u64 if…",13,[[["self"]],["option",["u64"]]]],[11,"as_f64","","Represents the number as f64 if possible. Returns None…",13,[[["self"]],["option",["f64"]]]],[11,"from_f64","","Converts a finite `f64` to a `Number`. Infinite or NaN…",13,[[["f64"]],["option",["number"]]]],[11,"new","serde_json::de","Create a JSON input source to read from a std::io input…",14,[[["r"]],["self"]]],[11,"new","","Create a JSON input source to read from a slice of bytes.",15,N],[11,"new","","Create a JSON input source to read from a UTF-8 string.",16,[[["str"]],["self"]]],[6,"Result","serde_json","Alias for a `Result` with the error type…",N,N],[14,"json","","Construct a `serde_json::Value` from a JSON literal.",N,N],[11,"from","serde_json::de","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into_iter","","",2,[[["self"]],["i"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","serde_json::error","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","serde_json::ser","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","serde_json::map","",6,[[["t"]],["t"]]],[11,"into_iter","","",6,[[["self"]],["i"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","serde_json","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"to_string","","",13,[[["self"]],["string"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","serde_json::value","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","serde_json::de","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","serde_json::error","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","serde_json::map","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into_iter","","",17,[[["self"]],["i"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into_iter","","",18,[[["self"]],["i"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into_iter","","",19,[[["self"]],["i"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into_iter","","",20,[[["self"]],["i"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into_iter","","",21,[[["self"]],["i"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into_iter","","",22,[[["self"]],["i"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","serde_json::ser","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"begin_array","","",12,[[["self"],["w"]],["result"]]],[11,"end_array","","",12,[[["self"],["w"]],["result"]]],[11,"begin_array_value","","",12,[[["self"],["w"],["bool"]],["result"]]],[11,"end_array_value","","",12,[[["self"],["w"]],["result"]]],[11,"begin_object","","",12,[[["self"],["w"]],["result"]]],[11,"end_object","","",12,[[["self"],["w"]],["result"]]],[11,"begin_object_key","","",12,[[["self"],["w"],["bool"]],["result"]]],[11,"begin_object_value","","",12,[[["self"],["w"]],["result"]]],[11,"end_object_value","","",12,[[["self"],["w"]],["result"]]],[11,"next","serde_json::de","",14,[[["self"]],["result",["option"]]]],[11,"peek","","",14,[[["self"]],["result",["option"]]]],[11,"discard","","",14,[[["self"]]]],[11,"position","","",14,[[["self"]],["position"]]],[11,"peek_position","","",14,[[["self"]],["position"]]],[11,"byte_offset","","",14,[[["self"]],["usize"]]],[11,"parse_str","","",14,[[["self"],["vec"]],["result",["reference"]]]],[11,"parse_str_raw","","",14,[[["self"],["vec"]],["result",["reference"]]]],[11,"ignore_str","","",14,[[["self"]],["result"]]],[11,"decode_hex_escape","","",14,[[["self"]],["result",["u16"]]]],[11,"next","","",15,[[["self"]],["result",["option"]]]],[11,"peek","","",15,[[["self"]],["result",["option"]]]],[11,"discard","","",15,[[["self"]]]],[11,"position","","",15,[[["self"]],["position"]]],[11,"peek_position","","",15,[[["self"]],["position"]]],[11,"byte_offset","","",15,[[["self"]],["usize"]]],[11,"parse_str","","",15,[[["self"],["vec"]],["result",["reference"]]]],[11,"parse_str_raw","","",15,[[["self"],["vec"]],["result",["reference"]]]],[11,"ignore_str","","",15,[[["self"]],["result"]]],[11,"decode_hex_escape","","",15,[[["self"]],["result",["u16"]]]],[11,"next","","",16,[[["self"]],["result",["option"]]]],[11,"peek","","",16,[[["self"]],["result",["option"]]]],[11,"discard","","",16,[[["self"]]]],[11,"position","","",16,[[["self"]],["position"]]],[11,"peek_position","","",16,[[["self"]],["position"]]],[11,"byte_offset","","",16,[[["self"]],["usize"]]],[11,"parse_str","","",16,[[["self"],["vec"]],["result",["reference"]]]],[11,"parse_str_raw","","",16,[[["self"],["vec"]],["result",["reference"]]]],[11,"ignore_str","","",16,[[["self"]],["result"]]],[11,"decode_hex_escape","","",16,[[["self"]],["result",["u16"]]]],[11,"next_back","serde_json::map","",17,[[["self"]],["option"]]],[11,"next_back","","",18,[[["self"]],["option"]]],[11,"next_back","","",19,[[["self"]],["option"]]],[11,"next_back","","",20,[[["self"]],["option"]]],[11,"next_back","","",21,[[["self"]],["option"]]],[11,"next_back","","",22,[[["self"]],["option"]]],[11,"eq","serde_json::error","",3,[[["self"],["category"]],["bool"]]],[11,"eq","serde_json::map","",6,[[["self"],["self"]],["bool"]]],[11,"eq","serde_json::value","",0,[[["self"],["value"]],["bool"]]],[11,"ne","","",0,[[["self"],["value"]],["bool"]]],[11,"eq","","",0,[[["self"],["str"]],["bool"]]],[11,"eq","","",0,[[["self"],["str"]],["bool"]]],[11,"eq","","",0,[[["self"],["string"]],["bool"]]],[11,"eq","","",0,[[["self"],["i8"]],["bool"]]],[11,"eq","","",0,[[["self"],["i16"]],["bool"]]],[11,"eq","","",0,[[["self"],["i32"]],["bool"]]],[11,"eq","","",0,[[["self"],["i64"]],["bool"]]],[11,"eq","","",0,[[["self"],["isize"]],["bool"]]],[11,"eq","","",0,[[["self"],["u8"]],["bool"]]],[11,"eq","","",0,[[["self"],["u16"]],["bool"]]],[11,"eq","","",0,[[["self"],["u32"]],["bool"]]],[11,"eq","","",0,[[["self"],["u64"]],["bool"]]],[11,"eq","","",0,[[["self"],["usize"]],["bool"]]],[11,"eq","","",0,[[["self"],["f32"]],["bool"]]],[11,"eq","","",0,[[["self"],["f64"]],["bool"]]],[11,"eq","","",0,[[["self"],["bool"]],["bool"]]],[11,"eq","serde_json","",13,[[["self"],["number"]],["bool"]]],[11,"ne","","",13,[[["self"],["number"]],["bool"]]],[11,"from","serde_json::value","",0,[[["i8"]],["self"]]],[11,"from","","",0,[[["i16"]],["self"]]],[11,"from","","",0,[[["i32"]],["self"]]],[11,"from","","",0,[[["i64"]],["self"]]],[11,"from","","",0,[[["isize"]],["self"]]],[11,"from","","",0,[[["u8"]],["self"]]],[11,"from","","",0,[[["u16"]],["self"]]],[11,"from","","",0,[[["u32"]],["self"]]],[11,"from","","",0,[[["u64"]],["self"]]],[11,"from","","",0,[[["usize"]],["self"]]],[11,"from","","Convert 32-bit floating point number to `Value`",0,[[["f32"]],["self"]]],[11,"from","","Convert 64-bit floating point number to `Value`",0,[[["f64"]],["self"]]],[11,"from","","Convert boolean to `Value`",0,[[["bool"]],["self"]]],[11,"from","","Convert `String` to `Value`",0,[[["string"]],["self"]]],[11,"from","","Convert string slice to `Value`",0,[[["str"]],["self"]]],[11,"from","","Convert copy-on-write string to `Value`",0,[[["cow",["str"]]],["self"]]],[11,"from","","Convert map (with string keys) to `Value`",0,[[["map",["string","value"]]],["self"]]],[11,"from","","Convert a `Vec` to `Value`",0,[[["vec"]],["self"]]],[11,"from","","Convert a slice to `Value`",0,N],[11,"from","serde_json","",13,[[["u8"]],["self"]]],[11,"from","","",13,[[["u16"]],["self"]]],[11,"from","","",13,[[["u32"]],["self"]]],[11,"from","","",13,[[["u64"]],["self"]]],[11,"from","","",13,[[["usize"]],["self"]]],[11,"from","","",13,[[["i8"]],["self"]]],[11,"from","","",13,[[["i16"]],["self"]]],[11,"from","","",13,[[["i32"]],["self"]]],[11,"from","","",13,[[["i64"]],["self"]]],[11,"from","","",13,[[["isize"]],["self"]]],[11,"clone","serde_json::error","",3,[[["self"]],["category"]]],[11,"clone","serde_json::map","",6,[[["self"]],["self"]]],[11,"clone","serde_json::ser","",23,[[["self"]],["compactformatter"]]],[11,"clone","","",12,[[["self"]],["prettyformatter"]]],[11,"clone","serde_json::value","",0,[[["self"]],["value"]]],[11,"clone","serde_json","",13,[[["self"]],["number"]]],[11,"into_iter","serde_json::map","",6,N],[11,"extend","","",6,[[["self"],["t"]]]],[11,"len","","",17,[[["self"]],["usize"]]],[11,"len","","",18,[[["self"]],["usize"]]],[11,"len","","",19,[[["self"]],["usize"]]],[11,"len","","",20,[[["self"]],["usize"]]],[11,"len","","",21,[[["self"]],["usize"]]],[11,"len","","",22,[[["self"]],["usize"]]],[11,"next","serde_json::de","",2,[[["self"]],["option",["result"]]]],[11,"next","serde_json::map","",17,[[["self"]],["option"]]],[11,"size_hint","","",17,N],[11,"next","","",18,[[["self"]],["option"]]],[11,"size_hint","","",18,N],[11,"next","","",19,[[["self"]],["option"]]],[11,"size_hint","","",19,N],[11,"next","","",20,[[["self"]],["option"]]],[11,"size_hint","","",20,N],[11,"next","","",21,[[["self"]],["option"]]],[11,"size_hint","","",21,N],[11,"next","","",22,[[["self"]],["option"]]],[11,"size_hint","","",22,N],[11,"default","","",6,[[],["self"]]],[11,"default","serde_json::ser","",12,[[],["self"]]],[11,"default","serde_json::value","",0,[[],["value"]]],[11,"fmt","serde_json::error","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","serde_json::value","Display a JSON value as a string.",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","serde_json","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","serde_json::error","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","serde_json::map","",6,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","serde_json::ser","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","serde_json::value","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","serde_json","",13,[[["self"],["formatter"]],["result"]]],[11,"from_str","","",13,[[["str"]],["result"]]],[11,"from_str","serde_json::value","",0,[[["str"]],["result",["value","error"]]]],[11,"index","serde_json::map","",6,[[["self"],["q"]],["value"]]],[11,"index","serde_json::value","Index into a `serde_json::Value` using the syntax…",0,[[["self"],["i"]],["value"]]],[11,"index_mut","serde_json::map","",6,[[["self"],["q"]],["value"]]],[11,"index_mut","serde_json::value","Write into a `serde_json::Value` using the syntax…",0,[[["self"],["i"]],["value"]]],[11,"from_iter","serde_json::map","",6,[[["t"]],["self"]]],[11,"from_iter","serde_json::value","Convert an iteratable type to a `Value`",0,[[["i"]],["self"]]],[11,"description","serde_json::error","",4,[[["self"]],["str"]]],[11,"cause","","",4,[[["self"]],["option",["error"]]]],[11,"serialize","serde_json::map","",6,[[["self"],["s"]],["result"]]],[11,"serialize","serde_json::value","",0,[[["self"],["s"]],["result"]]],[11,"serialize","serde_json","",13,[[["self"],["s"]],["result"]]],[11,"custom","serde_json::error","",4,[[["t"]],["error"]]],[11,"custom","","",4,[[["t"]],["error"]]],[11,"invalid_type","","",4,[[["unexpected"],["expected"]],["self"]]],[11,"deserialize_any","serde_json::value","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_i8","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_i16","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_i32","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_i64","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_u8","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_u16","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_u32","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_u64","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_f32","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_f64","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_i128","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_u128","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_option","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_enum","","",0,N],[11,"deserialize_newtype_struct","","",0,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_bool","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",0,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",0,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",0,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",0,N],[11,"deserialize_identifier","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_any","serde_json","",13,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_i8","","",13,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_i16","","",13,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_i32","","",13,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_i64","","",13,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_u8","","",13,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_u16","","",13,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_u32","","",13,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_u64","","",13,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_f32","","",13,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_f64","","",13,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_i128","","",13,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_u128","","",13,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_bool","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",13,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",13,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",13,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",13,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",13,N],[11,"deserialize_enum","","",13,N],[11,"deserialize_identifier","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize","serde_json::map","",6,[[["d"]],["result"]]],[11,"deserialize","serde_json::value","",0,[[["d"]],["result",["value"]]]],[11,"deserialize","serde_json","",13,[[["d"]],["result",["number"]]]]],"paths":[[4,"Value"],[3,"Deserializer"],[3,"StreamDeserializer"],[4,"Category"],[3,"Error"],[4,"Entry"],[3,"Map"],[3,"VacantEntry"],[3,"OccupiedEntry"],[4,"CharEscape"],[8,"Formatter"],[3,"Serializer"],[3,"PrettyFormatter"],[3,"Number"],[3,"IoRead"],[3,"SliceRead"],[3,"StrRead"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Keys"],[3,"Values"],[3,"ValuesMut"],[3,"CompactFormatter"]]};
searchIndex["serde_yaml"]={"doc":"This crate is a Rust library for using the [Serde]…","items":[[3,"Error","serde_yaml","This type represents all possible errors that can occur…",N,N],[3,"Location","","This type represents the location that an error occured.",N,N],[3,"Mapping","","A YAML mapping in which the keys and values are both…",N,N],[3,"Number","","Represents a YAML number, whether integer or floating point.",N,N],[4,"Value","","Represents any valid YAML value.",N,N],[13,"Null","","Represents a YAML null value.",0,N],[13,"Bool","","Represents a YAML boolean.",0,N],[13,"Number","","Represents a YAML numerical value, whether integer or…",0,N],[13,"String","","Represents a YAML string.",0,N],[13,"Sequence","","Represents a YAML sequence in which the elements are…",0,N],[13,"Mapping","","Represents a YAML mapping in which the keys and values are…",0,N],[5,"from_reader","","Deserialize an instance of type `T` from an IO stream of…",N,[[["r"]],["result"]]],[5,"from_slice","","Deserialize an instance of type `T` from bytes of YAML text.",N,N],[5,"from_str","","Deserialize an instance of type `T` from a string of YAML…",N,[[["str"]],["result"]]],[5,"to_string","","Serialize the given data structure as a String of YAML.",N,[[["t"]],["result",["string"]]]],[5,"to_vec","","Serialize the given data structure as a YAML byte vector.",N,[[["t"]],["result",["vec"]]]],[5,"to_writer","","Serialize the given data structure as YAML into the IO…",N,[[["w"],["t"]],["result"]]],[5,"from_value","","Interpret a `serde_yaml::Value` as an instance of type `T`.",N,[[["value"]],["result",["error"]]]],[5,"to_value","","Convert a `T` into `serde_yaml::Value` which is an enum…",N,[[["t"]],["result",["value","error"]]]],[11,"index","","The byte index of the error",1,[[["self"]],["usize"]]],[11,"line","","The line of the error",1,[[["self"]],["usize"]]],[11,"column","","The column of the error",1,[[["self"]],["usize"]]],[11,"location","","Returns the Location from the error if one exists.",2,[[["self"]],["option",["location"]]]],[11,"new","","Creates an empty YAML map.",3,[[],["self"]]],[11,"with_capacity","","Creates an empty YAML map with the given initial capacity.",3,[[["usize"]],["self"]]],[11,"reserve","","Reserves capacity for at least `additional` more elements…",3,[[["self"],["usize"]]]],[11,"shrink_to_fit","","Shrinks the capacity of the map as much as possible. It…",3,[[["self"]]]],[11,"insert","","Inserts a key-value pair into the map. If the key already…",3,[[["self"],["value"],["value"]],["option",["value"]]]],[11,"contains_key","","Checks if the map contains the given key.",3,[[["self"],["value"]],["bool"]]],[11,"get","","Returns the value corresponding to the key in the map.",3,[[["self"],["value"]],["option",["value"]]]],[11,"get_mut","","Returns the mutable reference corresponding to the key in…",3,[[["self"],["value"]],["option",["value"]]]],[11,"remove","","Removes and returns the value corresponding to the key…",3,[[["self"],["value"]],["option",["value"]]]],[11,"capacity","","Returns the maximum number of key-value pairs the map can…",3,[[["self"]],["usize"]]],[11,"len","","Returns the number of key-value pairs in the map.",3,[[["self"]],["usize"]]],[11,"is_empty","","Returns whether the map is currently empty.",3,[[["self"]],["bool"]]],[11,"clear","","Clears the map of all key-value pairs.",3,[[["self"]]]],[11,"iter","","Returns a double-ended iterator visiting all key-value…",3,[[["self"]],["iter"]]],[11,"iter_mut","","Returns a double-ended iterator visiting all key-value…",3,[[["self"]],["itermut"]]],[11,"is_i64","","Returns true if the `Number` is an integer between…",4,[[["self"]],["bool"]]],[11,"is_u64","","Returns true if the `Number` is an integer between zero…",4,[[["self"]],["bool"]]],[11,"is_f64","","Returns true if the `Number` can be represented by f64.",4,[[["self"]],["bool"]]],[11,"as_i64","","If the `Number` is an integer, represent it as i64 if…",4,[[["self"]],["option",["i64"]]]],[11,"as_u64","","If the `Number` is an integer, represent it as u64 if…",4,[[["self"]],["option",["u64"]]]],[11,"as_f64","","Represents the number as f64 if possible. Returns None…",4,[[["self"]],["option",["f64"]]]],[11,"is_nan","","Returns true if this value is NaN and false otherwise.",4,[[["self"]],["bool"]]],[11,"is_infinite","","Returns true if this value is positive infinity or…",4,[[["self"]],["bool"]]],[11,"is_finite","","Returns true if this number is neither infinite nor NaN.",4,[[["self"]],["bool"]]],[11,"get","","Index into a YAML sequence or map. A string index can be…",0,[[["self"],["i"]],["option",["value"]]]],[11,"is_null","","Returns true if the `Value` is a Null. Returns false…",0,[[["self"]],["bool"]]],[11,"as_null","","If the `Value` is a Null, returns (). Returns None…",0,[[["self"]],["option"]]],[11,"is_bool","","Returns true if the `Value` is a Boolean. Returns false…",0,[[["self"]],["bool"]]],[11,"as_bool","","If the `Value` is a Boolean, returns the associated bool.…",0,[[["self"]],["option",["bool"]]]],[11,"is_number","","Returns true if the `Value` is a Number. Returns false…",0,[[["self"]],["bool"]]],[11,"is_i64","","Returns true if the `Value` is an integer between…",0,[[["self"]],["bool"]]],[11,"as_i64","","If the `Value` is an integer, represent it as i64 if…",0,[[["self"]],["option",["i64"]]]],[11,"is_u64","","Returns true if the `Value` is an integer between…",0,[[["self"]],["bool"]]],[11,"as_u64","","If the `Value` is an integer, represent it as u64 if…",0,[[["self"]],["option",["u64"]]]],[11,"is_f64","","Returns true if the `Value` is a number that can be…",0,[[["self"]],["bool"]]],[11,"as_f64","","If the `Value` is a number, represent it as f64 if…",0,[[["self"]],["option",["f64"]]]],[11,"is_string","","Returns true if the `Value` is a String. Returns false…",0,[[["self"]],["bool"]]],[11,"as_str","","If the `Value` is a String, returns the associated str.…",0,[[["self"]],["option",["str"]]]],[11,"is_sequence","","Returns true if the `Value` is a sequence. Returns false…",0,[[["self"]],["bool"]]],[11,"as_sequence","","If the `Value` is a sequence, return a reference to it if…",0,[[["self"]],["option",["sequence"]]]],[11,"as_sequence_mut","","If the `Value` is a sequence, return a mutable reference…",0,[[["self"]],["option",["sequence"]]]],[11,"is_mapping","","Returns true if the `Value` is a mapping. Returns false…",0,[[["self"]],["bool"]]],[11,"as_mapping","","If the `Value` is a mapping, return a reference to it if…",0,[[["self"]],["option",["mapping"]]]],[11,"as_mapping_mut","","If the `Value` is a mapping, return a reference to it if…",0,[[["self"]],["option",["mapping"]]]],[6,"Result","","Alias for a `Result` with the error type…",N,N],[6,"Sequence","","A YAML sequence in which the elements are…",N,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into_iter","","",3,[[["self"]],["i"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"eq","","",3,[[["self"],["mapping"]],["bool"]]],[11,"ne","","",3,[[["self"],["mapping"]],["bool"]]],[11,"eq","","",4,[[["self"],["number"]],["bool"]]],[11,"ne","","",4,[[["self"],["number"]],["bool"]]],[11,"eq","","",0,[[["self"],["value"]],["bool"]]],[11,"eq","","Compare `str` with YAML value",0,[[["self"],["str"]],["bool"]]],[11,"eq","","Compare `&str` with YAML value",0,[[["self"],["str"]],["bool"]]],[11,"eq","","Compare YAML value with String",0,[[["self"],["string"]],["bool"]]],[11,"eq","","",0,[[["self"],["i8"]],["bool"]]],[11,"eq","","",0,[[["self"],["i16"]],["bool"]]],[11,"eq","","",0,[[["self"],["i32"]],["bool"]]],[11,"eq","","",0,[[["self"],["i64"]],["bool"]]],[11,"eq","","",0,[[["self"],["isize"]],["bool"]]],[11,"eq","","",0,[[["self"],["u8"]],["bool"]]],[11,"eq","","",0,[[["self"],["u16"]],["bool"]]],[11,"eq","","",0,[[["self"],["u32"]],["bool"]]],[11,"eq","","",0,[[["self"],["usize"]],["bool"]]],[11,"eq","","",0,[[["self"],["f32"]],["bool"]]],[11,"eq","","",0,[[["self"],["f64"]],["bool"]]],[11,"from","","",4,[[["i8"]],["self"]]],[11,"from","","",4,[[["i16"]],["self"]]],[11,"from","","",4,[[["i32"]],["self"]]],[11,"from","","",4,[[["i64"]],["self"]]],[11,"from","","",4,[[["isize"]],["self"]]],[11,"from","","",4,[[["u8"]],["self"]]],[11,"from","","",4,[[["u16"]],["self"]]],[11,"from","","",4,[[["u32"]],["self"]]],[11,"from","","",4,[[["u64"]],["self"]]],[11,"from","","",4,[[["usize"]],["self"]]],[11,"from","","",4,[[["f32"]],["self"]]],[11,"from","","",4,[[["f64"]],["self"]]],[11,"from","","",0,[[["i8"]],["self"]]],[11,"from","","",0,[[["i16"]],["self"]]],[11,"from","","",0,[[["i32"]],["self"]]],[11,"from","","",0,[[["i64"]],["self"]]],[11,"from","","",0,[[["isize"]],["self"]]],[11,"from","","",0,[[["u8"]],["self"]]],[11,"from","","",0,[[["u16"]],["self"]]],[11,"from","","",0,[[["u32"]],["self"]]],[11,"from","","",0,[[["u64"]],["self"]]],[11,"from","","",0,[[["usize"]],["self"]]],[11,"from","","",0,[[["f32"]],["self"]]],[11,"from","","",0,[[["f64"]],["self"]]],[11,"from","","Convert boolean to `Value`",0,[[["bool"]],["self"]]],[11,"from","","Convert `String` to `Value`",0,[[["string"]],["self"]]],[11,"from","","Convert string slice to `Value`",0,[[["str"]],["self"]]],[11,"from","","Convert copy-on-write string to `Value`",0,[[["cow",["str"]]],["self"]]],[11,"from","","Convert map (with string keys) to `Value`",0,[[["mapping"]],["self"]]],[11,"from","","Convert a `Vec` to `Value`",0,[[["vec"]],["self"]]],[11,"from","","Convert a slice to `Value`",0,N],[11,"clone","","",3,[[["self"]],["mapping"]]],[11,"clone","","",4,[[["self"]],["number"]]],[11,"clone","","",0,[[["self"]],["value"]]],[11,"into_iter","","",3,N],[11,"extend","","",3,[[["self"],["i"]]]],[11,"partial_cmp","","",3,[[["self"],["mapping"]],["option",["ordering"]]]],[11,"lt","","",3,[[["self"],["mapping"]],["bool"]]],[11,"le","","",3,[[["self"],["mapping"]],["bool"]]],[11,"gt","","",3,[[["self"],["mapping"]],["bool"]]],[11,"ge","","",3,[[["self"],["mapping"]],["bool"]]],[11,"partial_cmp","","",4,[[["self"],["number"]],["option",["ordering"]]]],[11,"lt","","",4,[[["self"],["number"]],["bool"]]],[11,"le","","",4,[[["self"],["number"]],["bool"]]],[11,"gt","","",4,[[["self"],["number"]],["bool"]]],[11,"ge","","",4,[[["self"],["number"]],["bool"]]],[11,"partial_cmp","","",0,[[["self"],["value"]],["option",["ordering"]]]],[11,"lt","","",0,[[["self"],["value"]],["bool"]]],[11,"le","","",0,[[["self"],["value"]],["bool"]]],[11,"gt","","",0,[[["self"],["value"]],["bool"]]],[11,"ge","","",0,[[["self"],["value"]],["bool"]]],[11,"default","","",3,[[],["mapping"]]],[11,"default","","",0,[[],["value"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"index","","",3,[[["self"],["value"]],["value"]]],[11,"index","","Index into a `serde_yaml::Value` using the syntax…",0,[[["self"],["i"]],["value"]]],[11,"index_mut","","",3,[[["self"],["value"]],["value"]]],[11,"index_mut","","Write into a `serde_yaml::Value` using the syntax…",0,[[["self"],["i"]],["value"]]],[11,"hash","","",3,N],[11,"hash","","",4,[[["self"],["h"]]]],[11,"hash","","",0,[[["self"],["h"]]]],[11,"from_iter","","",3,[[["i"]],["self"]]],[11,"from_iter","","Convert an iteratable type to a YAML sequence",0,[[["i"]],["self"]]],[11,"description","","",2,[[["self"]],["str"]]],[11,"cause","","",2,[[["self"]],["option",["error"]]]],[11,"serialize","","",3,[[["self"],["s"]],["result"]]],[11,"serialize","","",4,[[["self"],["s"]],["result"]]],[11,"serialize","","",0,[[["self"],["s"]],["result"]]],[11,"custom","","",2,[[["t"]],["self"]]],[11,"custom","","",2,[[["t"]],["self"]]],[11,"deserialize_any","","",4,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_bool","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",4,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",4,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",4,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",4,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",4,N],[11,"deserialize_enum","","",4,N],[11,"deserialize_identifier","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_bool","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_i8","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_i16","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_i32","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_i64","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_i128","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_u8","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_u16","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_u32","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_u64","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_u128","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_f32","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_f64","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_char","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_str","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_string","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_bytes","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_byte_buf","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_option","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_unit","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_unit_struct","","",0,[[["self"],["str"],["v"]],["result",["error"]]]],[11,"deserialize_newtype_struct","","",0,[[["self"],["str"],["v"]],["result",["error"]]]],[11,"deserialize_seq","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_tuple","","",0,[[["self"],["usize"],["v"]],["result",["error"]]]],[11,"deserialize_tuple_struct","","",0,[[["self"],["str"],["usize"],["v"]],["result",["error"]]]],[11,"deserialize_map","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_struct","","",0,N],[11,"deserialize_enum","","",0,N],[11,"deserialize_identifier","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_ignored_any","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize","","",3,[[["d"]],["result"]]],[11,"deserialize","","",4,[[["d"]],["result",["number"]]]],[11,"deserialize","","",0,[[["d"]],["result"]]]],"paths":[[4,"Value"],[3,"Location"],[3,"Error"],[3,"Mapping"],[3,"Number"]]};
searchIndex["shell_words"]={"doc":"Process command line according to parsing rules of Unix…","items":[[3,"ParseError","shell_words","An error returned when shell parsing fails.",N,N],[5,"split","","Splits command line into separate arguments, in much the…",N,[[["str"]],["result",["vec","parseerror"]]]],[5,"quote","","Escapes special characters in a string, so that it will…",N,[[["str"]],["cow",["str"]]]],[5,"join","","Joins arguments into a single command line suitable for…",N,[[["i"]],["string"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"eq","","",0,[[["self"],["parseerror"]],["bool"]]],[11,"clone","","",0,[[["self"]],["parseerror"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"description","","",0,[[["self"]],["str"]]]],"paths":[[3,"ParseError"]]};
searchIndex["slab"]={"doc":"Pre-allocated storage for a uniform data type.","items":[[3,"Slab","slab","Pre-allocated storage for a uniform data type",N,N],[3,"VacantEntry","","A handle to a vacant entry in a `Slab`.",N,N],[3,"Iter","","An iterator over the values stored in the `Slab`",N,N],[3,"IterMut","","A mutable iterator over the values stored in the `Slab`",N,N],[11,"new","","Construct a new, empty `Slab`.",0,[[],["slab"]]],[11,"with_capacity","","Construct a new, empty `Slab` with the specified capacity.",0,[[["usize"]],["slab"]]],[11,"capacity","","Return the number of values the slab can store without…",0,[[["self"]],["usize"]]],[11,"reserve","","Reserve capacity for at least `additional` more values to…",0,[[["self"],["usize"]]]],[11,"reserve_exact","","Reserve the minimum capacity required to store exactly…",0,[[["self"],["usize"]]]],[11,"shrink_to_fit","","Shrink the capacity of the slab as much as possible.",0,[[["self"]]]],[11,"clear","","Clear the slab of all values.",0,[[["self"]]]],[11,"len","","Return the number of stored values.",0,[[["self"]],["usize"]]],[11,"is_empty","","Return `true` if there are no values stored in the slab.",0,[[["self"]],["bool"]]],[11,"iter","","Return an iterator over the slab.",0,[[["self"]],["iter"]]],[11,"iter_mut","","Return an iterator that allows modifying each value.",0,[[["self"]],["itermut"]]],[11,"get","","Return a reference to the value associated with the given…",0,[[["self"],["usize"]],["option"]]],[11,"get_mut","","Return a mutable reference to the value associated with…",0,[[["self"],["usize"]],["option"]]],[11,"get_unchecked","","Return a reference to the value associated with the given…",0,[[["self"],["usize"]],["t"]]],[11,"get_unchecked_mut","","Return a mutable reference to the value associated with…",0,[[["self"],["usize"]],["t"]]],[11,"insert","","Insert a value in the slab, returning key assigned to the…",0,[[["self"],["t"]],["usize"]]],[11,"vacant_entry","","Return a handle to a vacant entry allowing for further…",0,[[["self"]],["vacantentry"]]],[11,"remove","","Remove and return the value associated with the given key.",0,[[["self"],["usize"]],["t"]]],[11,"contains","","Return `true` if a value is associated with the given key.",0,[[["self"],["usize"]],["bool"]]],[11,"retain","","Retain only the elements specified by the predicate.",0,[[["self"],["f"]]]],[11,"insert","","Insert a value in the entry, returning a mutable reference…",1,[[["self"],["t"]],["t"]]],[11,"key","","Return the key associated with this entry.",1,[[["self"]],["usize"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into_iter","","",2,[[["self"]],["i"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into_iter","","",3,[[["self"]],["i"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["slab"]]],[11,"next","","",2,[[["self"]],["option"]]],[11,"next","","",3,[[["self"]],["option"]]],[11,"default","","",0,[[],["self"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"index","","",0,[[["self"],["usize"]],["t"]]],[11,"index_mut","","",0,[[["self"],["usize"]],["t"]]]],"paths":[[3,"Slab"],[3,"VacantEntry"],[3,"Iter"],[3,"IterMut"]]};
searchIndex["smallvec"]={"doc":"Small vectors in various sizes. These store a certain…","items":[[3,"Drain","smallvec","An iterator that removes the items from a `SmallVec` and…",N,N],[3,"SmallVec","","A `Vec`-like container that can store a small number of…",N,N],[3,"IntoIter","","An iterator that consumes a `SmallVec` and yields its…",N,N],[8,"VecLike","","Common operations implemented by both `Vec` and `SmallVec`.",N,N],[10,"push","","Append an element to the vector.",0,[[["self"],["t"]]]],[8,"ExtendFromSlice","","Trait to be implemented by a collection that can be…",N,N],[10,"extend_from_slice","","Extends a collection from a slice of its element type",1,N],[8,"Array","","Types that can be used as the backing store for a SmallVec",N,N],[16,"Item","","The type of the array's elements.",2,N],[10,"size","","Returns the number of items the array can hold.",2,[[],["usize"]]],[10,"ptr","","Returns a pointer to the first element of the array.",2,N],[10,"ptr_mut","","Returns a mutable pointer to the first element of the array.",2,N],[11,"new","","Construct an empty vector",3,[[],["smallvec"]]],[11,"with_capacity","","Construct an empty vector with enough capacity…",3,[[["usize"]],["self"]]],[11,"from_vec","","Construct a new `SmallVec` from a `Vec<A::Item>`.",3,[[["vec"]],["smallvec"]]],[11,"from_buf","","Constructs a new `SmallVec` on the stack from an `A`…",3,[[["a"]],["smallvec"]]],[11,"from_buf_and_len","","Constructs a new `SmallVec` on the stack from an `A`…",3,[[["a"],["usize"]],["smallvec"]]],[11,"from_buf_and_len_unchecked","","Constructs a new `SmallVec` on the stack from an `A`…",3,[[["a"],["usize"]],["smallvec"]]],[11,"set_len","","Sets the length of a vector.",3,[[["self"],["usize"]]]],[11,"inline_size","","The maximum number of elements this vector can hold inline",3,[[["self"]],["usize"]]],[11,"len","","The number of elements stored in the vector",3,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if the vector is empty",3,[[["self"]],["bool"]]],[11,"capacity","","The number of items the vector can hold without reallocating",3,[[["self"]],["usize"]]],[11,"spilled","","Returns `true` if the data has spilled into a separate…",3,[[["self"]],["bool"]]],[11,"drain","","Empty the vector and return an iterator over its former…",3,[[["self"]],["drain"]]],[11,"push","","Append an item to the vector.",3,N],[11,"pop","","Remove an item from the end of the vector and return it,…",3,[[["self"]],["option"]]],[11,"grow","","Re-allocate to set the capacity to `max(new_cap,…",3,[[["self"],["usize"]]]],[11,"reserve","","Reserve capacity for `additional` more elements to be…",3,[[["self"],["usize"]]]],[11,"reserve_exact","","Reserve the minimum capacity for `additional` more…",3,[[["self"],["usize"]]]],[11,"shrink_to_fit","","Shrink the capacity of the vector as much as possible.",3,[[["self"]]]],[11,"truncate","","Shorten the vector, keeping the first `len` elements and…",3,[[["self"],["usize"]]]],[11,"as_slice","","Extracts a slice containing the entire vector.",3,N],[11,"as_mut_slice","","Extracts a mutable slice of the entire vector.",3,N],[11,"swap_remove","","Remove the element at position `index`, replacing it with…",3,N],[11,"clear","","Remove all elements from the vector.",3,[[["self"]]]],[11,"remove","","Remove and return the element at position `index`,…",3,N],[11,"insert","","Insert an element at position `index`, shifting all…",3,N],[11,"insert_many","","Insert multiple elements at position `index`, shifting all…",3,[[["self"],["usize"],["i"]]]],[11,"into_vec","","Convert a SmallVec to a Vec, without reallocating if the…",3,[[["self"]],["vec"]]],[11,"into_inner","","Convert the SmallVec into an `A` if possible. Otherwise…",3,[[["self"]],["result"]]],[11,"retain","","Retains only the elements specified by the predicate.",3,[[["self"],["f"]]]],[11,"dedup","","Removes consecutive duplicate elements.",3,[[["self"]]]],[11,"dedup_by","","Removes consecutive duplicate elements using the given…",3,[[["self"],["f"]]]],[11,"dedup_by_key","","Removes consecutive elements that map to the same key.",3,[[["self"],["f"]]]],[11,"from_raw_parts","","Creates a `SmallVec` directly from the raw components of…",3,N],[11,"from_slice","","Copy the elements from a slice into a new `SmallVec`.",3,N],[11,"insert_from_slice","","Copy elements from a slice into the vector at position…",3,N],[11,"extend_from_slice","","Copy elements from a slice and append them to the vector.",3,N],[11,"resize","","Resizes the vector so that its length is equal to `len`.",3,N],[11,"from_elem","","Creates a `SmallVec` with `n` copies of `elem`. ``` use…",3,N],[14,"smallvec","","Creates a [`SmallVec`] containing the arguments.",N,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"into_iter","","",4,[[["self"]],["i"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into_iter","","",3,[[["self"]],["i"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into_iter","","",5,[[["self"]],["i"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"push","","",3,N],[11,"extend_from_slice","","",3,N],[11,"next_back","","",4,[[["self"]],["option"]]],[11,"next_back","","",5,[[["self"]],["option"]]],[11,"cmp","","",3,[[["self"],["smallvec"]],["ordering"]]],[11,"eq","","",3,[[["self"],["smallvec"]],["bool"]]],[11,"ne","","",3,[[["self"],["smallvec"]],["bool"]]],[11,"from","","",3,N],[11,"from","","",3,[[["vec"]],["smallvec"]]],[11,"from","","",3,[[["a"]],["smallvec"]]],[11,"clone","","",3,[[["self"]],["smallvec"]]],[11,"into_iter","","",3,N],[11,"extend","","",3,[[["self"],["i"]]]],[11,"drop","","",4,[[["self"]]]],[11,"drop","","",3,[[["self"]]]],[11,"drop","","",5,[[["self"]]]],[11,"partial_cmp","","",3,[[["self"],["smallvec"]],["option",["ordering"]]]],[11,"as_mut","","",3,N],[11,"next","","",4,[[["self"]],["option"]]],[11,"size_hint","","",4,N],[11,"next","","",5,[[["self"]],["option"]]],[11,"size_hint","","",5,N],[11,"as_ref","","",3,N],[11,"default","","",3,[[],["smallvec"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"deref","","",3,N],[11,"deref_mut","","",3,N],[11,"index","","",3,N],[11,"index","","",3,N],[11,"index","","",3,N],[11,"index","","",3,N],[11,"index","","",3,N],[11,"index_mut","","",3,N],[11,"index_mut","","",3,N],[11,"index_mut","","",3,N],[11,"index_mut","","",3,N],[11,"index_mut","","",3,N],[11,"hash","","",3,[[["self"],["h"]]]],[11,"from_iter","","",3,[[["i"]],["smallvec"]]],[11,"borrow","","",3,N],[11,"write","","",3,N],[11,"write_all","","",3,N],[11,"flush","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,N]],"paths":[[8,"VecLike"],[8,"ExtendFromSlice"],[8,"Array"],[3,"SmallVec"],[3,"Drain"],[3,"IntoIter"]]};
searchIndex["stable_deref_trait"]={"doc":"This module defines an unsafe marker trait, StableDeref,…","items":[[8,"StableDeref","stable_deref_trait","An unsafe marker trait for types that deref to a stable…",N,N],[8,"CloneStableDeref","","An unsafe marker trait for types where clones deref to the…",N,N]],"paths":[]};
searchIndex["state"]={"doc":"state - safe and effortless state management","items":[[3,"Container","state","A container for global type-based state.",N,N],[3,"Storage","","A single storage location for global access to a value.",N,N],[11,"new","","Creates a new container with no stored values.",0,[[],["container"]]],[11,"freeze","","Freezes the container. A frozen container disallows writes…",0,[[["self"]]]],[11,"is_frozen","","Returns `true` if the container is frozen and `false`…",0,[[["self"]],["bool"]]],[11,"set","","Sets the global state for type `T` if it has not been set…",0,[[["self"],["t"]],["bool"]]],[11,"try_get","","Attempts to retrieve the global state for type `T`.",0,[[["self"]],["option"]]],[11,"get","","Retrieves the global state for type `T`.",0,[[["self"]],["t"]]],[11,"new","","Create a new, uninitialized storage location.",1,[[],["storage"]]],[11,"set","","Sets the value for this storage unit to `value` if it has…",1,[[["self"],["t"]],["bool"]]],[11,"try_get","","Attempts to borrow the value in this storage location.",1,[[["self"]],["option"]]],[11,"get","","Borrows the value in this storage location.",1,[[["self"]],["t"]]],[11,"get_or_set","","If the storage location has not yet been set, it is set to…",1,[[["self"],["f"]],["t"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["storage"]]],[11,"clone","","",1,[[["self"]],["storage"]]],[11,"drop","","",0,[[["self"]]]],[11,"drop","","",1,[[["self"]]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result",["error"]]]]],"paths":[[3,"Container"],[3,"Storage"]]};
searchIndex["stats"]={"doc":"","items":[[3,"Frequencies","stats","A commutative data structure for exact frequency counts.",N,N],[3,"MinMax","","A commutative data structure for tracking minimum and…",N,N],[3,"OnlineStats","","Online state for computing mean, variance and standard…",N,N],[3,"Unsorted","","A commutative data structure for lazily sorted sequences…",N,N],[5,"stddev","","Compute the standard deviation of a stream in constant…",N,[[["i"]],["f64"]]],[5,"variance","","Compute the variance of a stream in constant space.",N,[[["i"]],["f64"]]],[5,"mean","","Compute the mean of a stream in constant space.",N,[[["i"]],["f64"]]],[5,"median","","Compute the exact median on a stream of data.",N,[[["i"]],["option",["f64"]]]],[5,"mode","","Compute the exact mode on a stream of data.",N,[[["i"]],["option"]]],[5,"modes","","Compute the modes on a stream of data.",N,[[["i"]],["vec"]]],[5,"merge_all","","Merges all items in the stream.",N,[[["i"]],["option"]]],[11,"new","","Create a new frequency table with no samples.",0,[[],["frequencies"]]],[11,"add","","Add a sample to the frequency table.",0,[[["self"],["t"]]]],[11,"count","","Return the number of occurrences of `v` in the data.",0,[[["self"],["t"]],["u64"]]],[11,"cardinality","","Return the cardinality (number of unique elements) in the…",0,[[["self"]],["u64"]]],[11,"mode","","Returns the mode if one exists.",0,[[["self"]],["option"]]],[11,"most_frequent","","Return a `Vec` of elements and their corresponding counts…",0,[[["self"]],["vec"]]],[11,"least_frequent","","Return a `Vec` of elements and their corresponding counts…",0,[[["self"]],["vec"]]],[11,"len","","Returns the cardinality of the data.",0,[[["self"]],["usize"]]],[11,"new","","Create an empty state where min and max values do not exist.",1,[[],["minmax"]]],[11,"add","","Add a sample to the data.",1,[[["self"],["t"]]]],[11,"min","","Returns the minimum of the data set.",1,[[["self"]],["option"]]],[11,"max","","Returns the maximum of the data set.",1,[[["self"]],["option"]]],[11,"len","","Returns the number of data point.",1,[[["self"]],["usize"]]],[11,"new","","Create initial state.",2,[[],["onlinestats"]]],[11,"from_slice","","Initializes variance from a sample.",2,N],[11,"mean","","Return the current mean.",2,[[["self"]],["f64"]]],[11,"stddev","","Return the current standard deviation.",2,[[["self"]],["f64"]]],[11,"variance","","Return the current variance.",2,[[["self"]],["f64"]]],[11,"add","","Add a new sample.",2,[[["self"],["t"]]]],[11,"add_null","","Add a new NULL value to the population.",2,[[["self"]]]],[11,"len","","Returns the number of data points.",2,[[["self"]],["usize"]]],[11,"new","","Create initial empty state.",3,[[],["unsorted"]]],[11,"add","","Add a new element to the set.",3,[[["self"],["t"]]]],[11,"len","","Return the number of data points.",3,[[["self"]],["usize"]]],[11,"cardinality","","",3,[[["self"]],["usize"]]],[11,"mode","","Returns the mode of the data.",3,[[["self"]],["option"]]],[11,"modes","","Returns the modes of the data.",3,[[["self"]],["vec"]]],[11,"median","","Returns the median of the data.",3,[[["self"]],["option",["f64"]]]],[8,"Commute","","Defines an interface for types that have an identity and…",N,N],[10,"merge","","Merges the value `other` into `self`.",4,[[["self"],["self"]]]],[11,"consume","","Merges the values in the iterator into `self`.",4,[[["self"],["i"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"merge","","",0,[[["self"],["frequencies"]]]],[11,"merge","","",1,[[["self"],["minmax"]]]],[11,"merge","","",2,[[["self"],["onlinestats"]]]],[11,"merge","","",3,[[["self"],["unsorted"]]]],[11,"clone","","",0,[[["self"]],["frequencies"]]],[11,"clone","","",1,[[["self"]],["minmax"]]],[11,"clone","","",2,[[["self"]],["onlinestats"]]],[11,"clone","","",3,[[["self"]],["unsorted"]]],[11,"extend","","",0,[[["self"],["i"]]]],[11,"extend","","",1,[[["self"],["i"]]]],[11,"extend","","",2,[[["self"],["i"]]]],[11,"extend","","",3,[[["self"],["i"]]]],[11,"default","","",0,[[],["frequencies"]]],[11,"default","","",1,[[],["minmax"]]],[11,"default","","",2,[[],["onlinestats"]]],[11,"default","","",3,[[],["unsorted"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"from_iter","","",0,[[["i"]],["frequencies"]]],[11,"from_iter","","",1,[[["i"]],["minmax"]]],[11,"from_iter","","",2,[[["i"]],["onlinestats"]]],[11,"from_iter","","",3,[[["i"]],["unsorted"]]]],"paths":[[3,"Frequencies"],[3,"MinMax"],[3,"OnlineStats"],[3,"Unsorted"],[8,"Commute"]]};
searchIndex["strip_front_matter"]={"doc":"","items":[[3,"Opts","strip_front_matter","Small utility that strips yaml front matter from a…",N,N],[4,"StripError","","",N,N],[13,"NoFrontMatter","","",0,N],[13,"OpenInput","","",0,N],[13,"OutputError","","",0,N],[5,"strip_front_matter","","",N,[[["opts"]],["result",["error"]]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into_collection","","",1,[[["self"]],["smallvec"]]],[11,"mapped","","",1,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",1,[[["self"]],["result",["parseerr"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"as_fail","","",0,[[["self"]],["fail"]]],[11,"into_collection","","",0,[[["self"]],["smallvec"]]],[11,"mapped","","",0,[[["self"],["f"]],["smallvec"]]],[11,"as_result","","",0,[[["self"]],["result",["parseerr"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"cause","","",0,[[["self"]],["option",["fail"]]]],[11,"backtrace","","",0,[[["self"]],["option",["backtrace"]]]],[11,"clap","","",1,[[],["app"]]],[11,"from_clap","","",1,[[["argmatches"]],["self"]]]],"paths":[[4,"StripError"],[3,"Opts"]]};
searchIndex["strsim"]={"doc":"This library implements string similarity metrics.","items":[[4,"StrSimError","strsim","",N,N],[13,"DifferentLengthArgs","","",0,N],[5,"hamming","","Calculates the number of positions in the two strings…",N,[[["str"],["str"]],["hammingresult"]]],[5,"jaro","","Calculates the Jaro similarity between two strings. The…",N,[[["str"],["str"]],["f64"]]],[5,"jaro_winkler","","Like Jaro but gives a boost to strings that have a common…",N,[[["str"],["str"]],["f64"]]],[5,"levenshtein","","Calculates the minimum number of insertions, deletions,…",N,[[["str"],["str"]],["usize"]]],[5,"osa_distance","","Like Levenshtein but allows for adjacent transpositions.…",N,[[["str"],["str"]],["usize"]]],[5,"damerau_levenshtein","","Like optimal string alignment, but substrings can be…",N,[[["str"],["str"]],["usize"]]],[6,"HammingResult","","",N,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"eq","","",0,[[["self"],["strsimerror"]],["bool"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]]],"paths":[[4,"StrSimError"]]};
searchIndex["strtab"]={"doc":"String table with zero-copy and amortised O(1) insert","items":[[3,"Symbol","strtab","",N,N],[3,"StringTable","","",N,N],[4,"Relation","","",N,N],[13,"Unrelated","","",0,N],[13,"Related","","",0,N],[12,"distance","strtab::Relation","",0,N],[8,"Relational","strtab","",N,N],[10,"relation","","",1,[[["self"],["self"]],["relation"]]],[11,"is_related","","",0,[[["self"]],["bool"]]],[11,"as_str","","",2,[[["self"]],["str"]]],[11,"new","","",3,[[],["self"]]],[11,"intern","","",3,[[["self"],["str"]],["symbol"]]],[11,"this_symbol","","",3,[[["self"]],["symbol"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"relation","","",2,[[["self"],["symbol"]],["relation"]]],[11,"cmp","","",0,[[["self"],["self"]],["ordering"]]],[11,"cmp","","",2,[[["self"],["symbol"]],["ordering"]]],[11,"eq","","",0,[[["self"],["relation"]],["bool"]]],[11,"ne","","",0,[[["self"],["relation"]],["bool"]]],[11,"eq","","",2,[[["self"],["symbol"]],["bool"]]],[11,"eq","","",2,[[["self"],["str"]],["bool"]]],[11,"clone","","",0,[[["self"]],["relation"]]],[11,"clone","","",2,[[["self"]],["symbol"]]],[11,"partial_cmp","","",0,[[["self"],["self"]],["option",["ordering"]]]],[11,"partial_cmp","","",2,[[["self"],["symbol"]],["option",["ordering"]]]],[11,"lt","","",2,[[["self"],["symbol"]],["bool"]]],[11,"le","","",2,[[["self"],["symbol"]],["bool"]]],[11,"gt","","",2,[[["self"],["symbol"]],["bool"]]],[11,"ge","","",2,[[["self"],["symbol"]],["bool"]]],[11,"default","","",3,[[],["stringtable"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"hash","","",2,[[["self"],["h"]]]]],"paths":[[4,"Relation"],[8,"Relational"],[3,"Symbol"],[3,"StringTable"]]};
searchIndex["structopt"]={"doc":"This crate defines the `StructOpt` trait and its custom…","items":[[0,"clap","structopt","Re-export of clap",N,N],[4,"ErrorKind","structopt::clap","Command line argument parser kind of error",N,N],[13,"InvalidValue","","Occurs when an [`Arg`] has a set of possible values, and…",0,N],[13,"UnknownArgument","","Occurs when a user provides a flag, option, argument or…",0,N],[13,"InvalidSubcommand","","Occurs when the user provides an unrecognized…",0,N],[13,"UnrecognizedSubcommand","","Occurs when the user provides an unrecognized…",0,N],[13,"EmptyValue","","Occurs when the user provides an empty value for an option…",0,N],[13,"ValueValidation","","Occurs when the user provides a value for an argument with…",0,N],[13,"TooManyValues","","Occurs when a user provides more values for an argument…",0,N],[13,"TooFewValues","","Occurs when the user provides fewer values for an argument…",0,N],[13,"WrongNumberOfValues","","Occurs when the user provides a different number of values…",0,N],[13,"ArgumentConflict","","Occurs when the user provides two values which conflict…",0,N],[13,"MissingRequiredArgument","","Occurs when the user does not provide one or more required…",0,N],[13,"MissingSubcommand","","Occurs when a subcommand is required (as defined by…",0,N],[13,"MissingArgumentOrSubcommand","","Occurs when either an argument or [`SubCommand`] is…",0,N],[13,"UnexpectedMultipleUsage","","Occurs when the user provides multiple values to an…",0,N],[13,"InvalidUtf8","","Occurs when the user provides a value containing invalid…",0,N],[13,"HelpDisplayed","","Not a true \"error\" as it means `--help` or similar was…",0,N],[13,"VersionDisplayed","","Not a true \"error\" as it means `--version` or similar was…",0,N],[13,"ArgumentNotFound","","Occurs when using the [`value_t!`] and [`values_t!`]…",0,N],[13,"Io","","Represents an [I/O error]. Can occur when writing to…",0,N],[13,"Format","","Represents a [Format error] (which is a part of…",0,N],[14,"value_t_or_exit","","Convenience macro getting a typed value `T` where `T`…",N,N],[14,"value_t","","Convenience macro getting a typed value `T` where `T`…",N,N],[3,"SubCommand","","The abstract representation of a command line subcommand.",N,N],[3,"ArgMatches","","Used to get information about the arguments that where…",N,N],[4,"Shell","","Describes which shell to produce a completions file for",N,N],[13,"Bash","","Generates a .bash completion file for the Bourne Again…",1,N],[13,"Fish","","Generates a .fish completion file for the Friendly…",1,N],[13,"Zsh","","Generates a completion file for the Z SHell (ZSH)",1,N],[13,"PowerShell","","Generates a completion file for PowerShell",1,N],[13,"Elvish","","Generates a completion file for Elvish",1,N],[4,"AppSettings","","Application level settings, which affect how [`App`]…",N,N],[13,"AllowInvalidUtf8","","Specifies that any invalid UTF-8 code points should not be…",2,N],[13,"AllArgsOverrideSelf","","Essentially sets [`Arg::overrides_with(\"itself\")`] for all…",2,N],[13,"AllowLeadingHyphen","","Specifies that leading hyphens are allowed in argument…",2,N],[13,"AllowNegativeNumbers","","Allows negative numbers to pass as values. This is similar…",2,N],[13,"AllowMissingPositional","","Allows one to implement two styles of CLIs where…",2,N],[13,"AllowExternalSubcommands","","Specifies that an unexpected positional argument, which…",2,N],[13,"ArgsNegateSubcommands","","Specifies that use of a valid [argument] negates…",2,N],[13,"ArgRequiredElseHelp","","Specifies that the help text should be displayed (and then…",2,N],[13,"ColoredHelp","","Uses colorized help messages.",2,N],[13,"ColorAuto","","Enables colored output only when the output is going to a…",2,N],[13,"ColorAlways","","Enables colored output regardless of whether or not the…",2,N],[13,"ColorNever","","Disables colored output no matter if the output is going…",2,N],[13,"DontCollapseArgsInUsage","","Disables the automatic collapsing of positional args into…",2,N],[13,"DontDelimitTrailingValues","","Disables the automatic delimiting of values when `--` or…",2,N],[13,"DisableHelpSubcommand","","Disables the `help` subcommand",2,N],[13,"DisableVersion","","Disables `-V` and `--version` [`App`] without affecting…",2,N],[13,"DeriveDisplayOrder","","Displays the arguments and [`SubCommand`]s in the help…",2,N],[13,"GlobalVersion","","Specifies to use the version of the current command for…",2,N],[13,"Hidden","","Specifies that this [`SubCommand`] should be hidden from…",2,N],[13,"HidePossibleValuesInHelp","","Tells `clap` not to print possible values when displaying…",2,N],[13,"InferSubcommands","","Tries to match unknown args to partial [`subcommands`] or…",2,N],[13,"NoBinaryName","","Specifies that the parser should not assume the first…",2,N],[13,"NextLineHelp","","Places the help string for all arguments on the line after…",2,N],[13,"PropagateGlobalValuesDown","","DEPRECATED: This setting is no longer required in order to…",2,N],[13,"SubcommandsNegateReqs","","Allows [`SubCommand`]s to override all requirements of the…",2,N],[13,"SubcommandRequiredElseHelp","","Specifies that the help text should be displayed (before…",2,N],[13,"StrictUtf8","","Specifies that any invalid UTF-8 code points should be…",2,N],[13,"SubcommandRequired","","Allows specifying that if no [`SubCommand`] is present at…",2,N],[13,"TrailingVarArg","","Specifies that the final positional argument is a \"VarArg\"…",2,N],[13,"UnifiedHelpMessage","","Groups flags and options together, presenting a more…",2,N],[13,"VersionlessSubcommands","","Disables `-V` and `--version` for all [`SubCommand`]s…",2,N],[13,"WaitOnError","","Will display a message \"Press [ENTER]/[RETURN] to…",2,N],[3,"ArgGroup","","`ArgGroup`s are a family of related [arguments] and way…",N,N],[3,"Error","","Command Line Argument Parser Error",N,N],[12,"message","","Formatted error message",3,N],[12,"kind","","The type of error",3,N],[12,"info","","Any additional information passed along, such as the…",3,N],[14,"crate_description","","Allows you to pull the description from your Cargo.toml at…",N,N],[14,"clap_app","","Build `App`, `Arg`s, `SubCommand`s and `Group`s with…",N,N],[14,"crate_name","","Allows you to pull the name from your Cargo.toml at…",N,N],[3,"App","","Used to create a representation of a command line program…",N,N],[14,"app_from_crate","","Allows you to build the `App` instance from your…",N,N],[3,"Arg","","The abstract representation of a command line argument.…",N,N],[14,"_clap_count_exprs","","Counts the number of comma-delimited expressions passed to…",N,N],[14,"arg_enum","","Convenience macro to generate more complete enums with…",N,N],[14,"values_t_or_exit","","Convenience macro getting a typed value [`Vec<T>`] where…",N,N],[3,"OsValues","","An iterator for getting multiple values out of an argument…",N,N],[14,"crate_authors","","Allows you to pull the authors for the app from your…",N,N],[4,"ArgSettings","","Various settings that apply to arguments and may be set,…",N,N],[13,"Required","","The argument must be used",4,N],[13,"Multiple","","The argument may be used multiple times such as `--flag…",4,N],[13,"EmptyValues","","The argument allows empty values such as `--option \"\"`",4,N],[13,"Global","","The argument should be propagated down through all child…",4,N],[13,"Hidden","","The argument should not be shown in help text",4,N],[13,"TakesValue","","The argument accepts a value, such as `--option <value>`",4,N],[13,"UseValueDelimiter","","Determines if the argument allows values to be grouped via…",4,N],[13,"NextLineHelp","","Prints the help text on the line after the argument",4,N],[13,"RequireDelimiter","","Requires the use of a value delimiter for all multiple…",4,N],[13,"HidePossibleValues","","Hides the possible values from the help string",4,N],[13,"AllowLeadingHyphen","","Allows vals that start with a '-'",4,N],[13,"RequireEquals","","Require options use `--option=val` syntax",4,N],[13,"Last","","Specifies that the arg is the last positional argument and…",4,N],[13,"HideDefaultValue","","Hides the default value from the help string",4,N],[13,"CaseInsensitive","","Makes `Arg::possible_values` case insensitive",4,N],[13,"HideEnvValues","","Hides ENV values in the help message",4,N],[13,"HiddenShortHelp","","The argument should not be shown in short help text",4,N],[13,"HiddenLongHelp","","The argument should not be shown in long help text",4,N],[14,"values_t","","Convenience macro getting a typed value [`Vec<T>`] where…",N,N],[14,"crate_version","","Allows you to pull the version from your Cargo.toml at…",N,N],[6,"Result","","Short hand for [`Result`] type",N,N],[3,"Values","","An iterator for getting multiple values out of an argument…",N,N],[8,"StructOpt","structopt","A struct that is converted from command line arguments.",N,N],[10,"clap","","Returns the corresponding `clap::App`.",5,[[],["app"]]],[10,"from_clap","","Creates the struct from `clap::ArgMatches`. It cannot fail…",5,[[["argmatches"]],["self"]]],[11,"from_args","","Gets the struct from the command line arguments. Print the…",5,[[],["self"]]],[11,"from_iter","","Gets the struct from any iterator such as a `Vec` of your…",5,[[["i"]],["self"]]],[11,"from_iter_safe","","Gets the struct from any iterator such as a `Vec` of your…",5,[[["i"]],["result",["error"]]]],[11,"from","structopt::clap","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"to_string","","",9,[[["self"]],["string"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into_iter","","",11,[[["self"]],["i"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into_iter","","",12,[[["self"]],["i"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"eq","","",10,[[["self"],["arg"]],["bool"]]],[11,"eq","","",0,[[["self"],["errorkind"]],["bool"]]],[11,"eq","","",4,[[["self"],["argsettings"]],["bool"]]],[11,"eq","","",2,[[["self"],["appsettings"]],["bool"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result",["error"]]]],[11,"clone","","",12,[[["self"]],["values"]]],[11,"clone","","",6,[[["self"]],["subcommand"]]],[11,"clone","","",4,[[["self"]],["argsettings"]]],[11,"clone","","",2,[[["self"]],["appsettings"]]],[11,"clone","","",9,[[["self"]],["app"]]],[11,"clone","","",11,[[["self"]],["osvalues"]]],[11,"clone","","",1,[[["self"]],["shell"]]],[11,"clone","","",8,[[["self"]],["arggroup"]]],[11,"clone","","",10,[[["self"]],["arg"]]],[11,"clone","","",7,[[["self"]],["argmatches"]]],[11,"clone","","",0,[[["self"]],["errorkind"]]],[11,"next","","",11,[[["self"]],["option",["osstr"]]]],[11,"size_hint","","",11,N],[11,"next","","",12,[[["self"]],["option",["str"]]]],[11,"size_hint","","",12,N],[11,"next_back","","",11,[[["self"]],["option",["osstr"]]]],[11,"next_back","","",12,[[["self"]],["option",["str"]]]],[11,"default","","",12,[[],["values"]]],[11,"default","","",11,[[],["osvalues"]]],[11,"default","","",7,[[],["argmatches"]]],[11,"default","","",8,[[],["arggroup"]]],[11,"default","","",10,[[],["arg"]]],[11,"description","","",3,[[["self"]],["str"]]],[11,"from_str","","",1,[[["str"]],["result",["shell"]]]],[11,"from_str","","",2,[[["str"]],["result",["appsettings"]]]],[11,"from_str","","",4,[[["str"]],["result",["argsettings"]]]],[11,"from","","",3,[[["error"]],["error"]]],[11,"from","","",8,[[["arggroup"]],["arggroup"]]],[11,"from","","",3,[[["error"]],["error"]]],[11,"from","","",10,[[["arg"]],["arg"]]],[11,"with_name","","Creates a new instance of a subcommand requiring a name.…",6,[[["str"]],["app"]]],[11,"value_of","","Gets the value of a specific [option] or [positional]…",7,[[["self"],["s"]],["option",["str"]]]],[11,"value_of_lossy","","Gets the lossy value of a specific argument. If the…",7,[[["self"],["s"]],["option",["cow"]]]],[11,"value_of_os","","Gets the OS version of a string value of a specific…",7,[[["self"],["s"]],["option",["osstr"]]]],[11,"values_of","","Gets a [`Values`] struct which implements [`Iterator`] for…",7,[[["self"],["s"]],["option",["values"]]]],[11,"values_of_lossy","","Gets the lossy values of a specific argument. If the…",7,[[["self"],["s"]],["option",["vec"]]]],[11,"values_of_os","","Gets a [`OsValues`] struct which is implements…",7,[[["self"],["s"]],["option",["osvalues"]]]],[11,"is_present","","Returns `true` if an argument was present at runtime,…",7,[[["self"],["s"]],["bool"]]],[11,"occurrences_of","","Returns the number of times an argument was used at…",7,[[["self"],["s"]],["u64"]]],[11,"index_of","","Gets the starting index of the argument in respect to all…",7,[[["self"],["s"]],["option",["usize"]]]],[11,"indices_of","","Gets all indices of the argument in respect to all other…",7,[[["self"],["s"]],["option",["indices"]]]],[11,"subcommand_matches","","Because [`Subcommand`]s are essentially \"sub-[`App`]s\"…",7,[[["self"],["s"]],["option",["argmatches"]]]],[11,"subcommand_name","","Because [`Subcommand`]s are essentially \"sub-[`App`]s\"…",7,[[["self"]],["option",["str"]]]],[11,"subcommand","","This brings together [`ArgMatches::subcommand_matches`]…",7,N],[11,"usage","","Returns a string slice of the usage statement for the…",7,[[["self"]],["str"]]],[11,"variants","","A list of possible variants in `&'static str` form",1,N],[11,"with_name","","Creates a new instance of `ArgGroup` using a unique string…",8,[[["str"]],["arggroup"]]],[11,"arg","","Adds an [argument] to this group by name",8,[[["self"],["str"]],["arggroup"]]],[11,"args","","Adds multiple [arguments] to this group by name",8,N],[11,"multiple","","Allows more than one of the ['Arg']s in this group to be…",8,[[["self"],["bool"]],["arggroup"]]],[11,"required","","Sets the group as required or not. A required group will…",8,[[["self"],["bool"]],["arggroup"]]],[11,"requires","","Sets the requirement rules of this group. This is not to…",8,[[["self"],["str"]],["arggroup"]]],[11,"requires_all","","Sets the requirement rules of this group. This is not to…",8,N],[11,"conflicts_with","","Sets the exclusion rules of this group. Exclusion (aka…",8,[[["self"],["str"]],["arggroup"]]],[11,"conflicts_with_all","","Sets the exclusion rules of this group. Exclusion rules…",8,N],[11,"use_stderr","","Should the message be written to `stdout` or not",3,[[["self"]],["bool"]]],[11,"exit","","Prints the error to `stderr` and exits with a status of `1`",3,N],[11,"with_description","","Create an error with a custom description.",3,[[["str"],["errorkind"]],["error"]]],[11,"new","","Creates a new instance of an application requiring a name.…",9,[[["s"]],["app"]]],[11,"get_name","","Get the name of the app",9,[[["self"]],["str"]]],[11,"get_bin_name","","Get the name of the binary",9,[[["self"]],["option",["str"]]]],[11,"with_defaults","","Creates a new instance of an application requiring a name,…",9,[[["s"]],["app"]]],[11,"author","","Sets a string of author(s) that will be displayed to the…",9,[[["self"],["s"]],["app"]]],[11,"bin_name","","Overrides the system-determined binary name. This should…",9,[[["self"],["s"]],["app"]]],[11,"about","","Sets a string describing what the program does. This will…",9,[[["self"],["s"]],["app"]]],[11,"long_about","","Sets a string describing what the program does. This will…",9,[[["self"],["s"]],["app"]]],[11,"name","","Sets the program's name. This will be displayed when…",9,[[["self"],["s"]],["app"]]],[11,"after_help","","Adds additional help information to be displayed in…",9,[[["self"],["s"]],["app"]]],[11,"before_help","","Adds additional help information to be displayed in…",9,[[["self"],["s"]],["app"]]],[11,"version","","Sets a string of the version number to be displayed when…",9,[[["self"],["s"]],["app"]]],[11,"long_version","","Sets a string of the version number to be displayed when…",9,[[["self"],["s"]],["app"]]],[11,"usage","","Sets a custom usage string to override the auto-generated…",9,[[["self"],["s"]],["app"]]],[11,"help","","Sets a custom help message and overrides the…",9,[[["self"],["s"]],["app"]]],[11,"help_short","","Sets the [`short`] for the auto-generated `help` argument.",9,[[["self"],["s"]],["app"]]],[11,"version_short","","Sets the [`short`] for the auto-generated `version`…",9,[[["self"],["s"]],["app"]]],[11,"help_message","","Sets the help text for the auto-generated `help` argument.",9,[[["self"],["s"]],["app"]]],[11,"version_message","","Sets the help text for the auto-generated `version`…",9,[[["self"],["s"]],["app"]]],[11,"template","","Sets the help template to be used, overriding the default…",9,[[["self"],["s"]],["app"]]],[11,"setting","","Enables a single command, or [`SubCommand`], level settings.",9,[[["self"],["appsettings"]],["app"]]],[11,"settings","","Enables multiple command, or [`SubCommand`], level settings",9,N],[11,"global_setting","","Enables a single setting that is propagated down through…",9,[[["self"],["appsettings"]],["app"]]],[11,"global_settings","","Enables multiple settings which are propagated down…",9,N],[11,"unset_setting","","Disables a single command, or [`SubCommand`], level setting.",9,[[["self"],["appsettings"]],["app"]]],[11,"unset_settings","","Disables multiple command, or [`SubCommand`], level…",9,N],[11,"set_term_width","","Sets the terminal width at which to wrap help messages.…",9,[[["self"],["usize"]],["app"]]],[11,"max_term_width","","Sets the max terminal width at which to wrap help…",9,[[["self"],["usize"]],["app"]]],[11,"arg","","Adds an [argument] to the list of valid possibilities.",9,[[["self"],["a"]],["app"]]],[11,"args","","Adds multiple [arguments] to the list of valid possibilities",9,N],[11,"arg_from_usage","","A convenience method for adding a single [argument] from a…",9,[[["self"],["str"]],["app"]]],[11,"args_from_usage","","Adds multiple [arguments] at once from a usage string, one…",9,[[["self"],["str"]],["app"]]],[11,"alias","","Allows adding a [`SubCommand`] alias, which function as…",9,[[["self"],["s"]],["app"]]],[11,"aliases","","Allows adding [`SubCommand`] aliases, which function as…",9,N],[11,"visible_alias","","Allows adding a [`SubCommand`] alias that functions…",9,[[["self"],["s"]],["app"]]],[11,"visible_aliases","","Allows adding multiple [`SubCommand`] aliases that…",9,N],[11,"group","","Adds an [`ArgGroup`] to the application. [`ArgGroup`]s are…",9,[[["self"],["arggroup"]],["app"]]],[11,"groups","","Adds multiple [`ArgGroup`]s to the [`App`] at once.",9,N],[11,"subcommand","","Adds a [`SubCommand`] to the list of valid possibilities.…",9,[[["self"],["app"]],["app"]]],[11,"subcommands","","Adds multiple subcommands to the list of valid…",9,[[["self"],["i"]],["app"]]],[11,"display_order","","Allows custom ordering of [`SubCommand`]s within the help…",9,[[["self"],["usize"]],["app"]]],[11,"print_help","","Prints the full help message to [`io::stdout()`] using a…",9,[[["self"]],["result",["error"]]]],[11,"print_long_help","","Prints the full help message to [`io::stdout()`] using a…",9,[[["self"]],["result",["error"]]]],[11,"write_help","","Writes the full help message to the user to a…",9,[[["self"],["w"]],["result",["error"]]]],[11,"write_long_help","","Writes the full help message to the user to a…",9,[[["self"],["w"]],["result",["error"]]]],[11,"write_version","","Writes the version message to the user to a [`io::Write`]…",9,[[["self"],["w"]],["result",["error"]]]],[11,"write_long_version","","Writes the version message to the user to a [`io::Write`]…",9,[[["self"],["w"]],["result",["error"]]]],[11,"gen_completions","","Generate a completions file for a specified shell at…",9,N],[11,"gen_completions_to","","Generate a completions file for a specified shell at…",9,N],[11,"get_matches","","Starts the parsing process, upon a failed parse an error…",9,[[["self"]],["argmatches"]]],[11,"get_matches_safe","","Starts the parsing process. This method will return a…",9,[[["self"]],["result",["argmatches","error"]]]],[11,"get_matches_from","","Starts the parsing process. Like [`App::get_matches`] this…",9,[[["self"],["i"]],["argmatches"]]],[11,"get_matches_from_safe","","Starts the parsing process. A combination of…",9,[[["self"],["i"]],["result",["argmatches","error"]]]],[11,"get_matches_from_safe_borrow","","Starts the parsing process without consuming the [`App`]…",9,[[["self"],["i"]],["result",["argmatches","error"]]]],[11,"with_name","","Creates a new instance of [`Arg`] using a unique string…",10,[[["str"]],["arg"]]],[11,"from_usage","","Creates a new instance of [`Arg`] from a usage string.…",10,[[["str"]],["arg"]]],[11,"short","","Sets the short version of the argument without the…",10,[[["self"],["s"]],["arg"]]],[11,"long","","Sets the long version of the argument without the…",10,[[["self"],["str"]],["arg"]]],[11,"alias","","Allows adding a [`Arg`] alias, which function as \"hidden\"…",10,[[["self"],["s"]],["arg"]]],[11,"aliases","","Allows adding [`Arg`] aliases, which function as \"hidden\"…",10,N],[11,"visible_alias","","Allows adding a [`Arg`] alias that functions exactly like…",10,[[["self"],["s"]],["arg"]]],[11,"visible_aliases","","Allows adding multiple [`Arg`] aliases that functions…",10,N],[11,"help","","Sets the short help text of the argument that will be…",10,[[["self"],["str"]],["arg"]]],[11,"long_help","","Sets the long help text of the argument that will be…",10,[[["self"],["str"]],["arg"]]],[11,"last","","Specifies that this arg is the last, or final, positional…",10,[[["self"],["bool"]],["arg"]]],[11,"required","","Sets whether or not the argument is required by default.…",10,[[["self"],["bool"]],["arg"]]],[11,"require_equals","","Requires that options use the `--option=val` syntax (i.e.…",10,[[["self"],["bool"]],["arg"]]],[11,"allow_hyphen_values","","Allows values which start with a leading hyphen (`-`)",10,[[["self"],["bool"]],["arg"]]],[11,"required_unless","","Sets an arg that override this arg's required setting.…",10,[[["self"],["str"]],["arg"]]],[11,"required_unless_all","","Sets args that override this arg's required setting. (i.e.…",10,N],[11,"required_unless_one","","Sets args that override this arg's [required] setting.…",10,N],[11,"conflicts_with","","Sets a conflicting argument by name. I.e. when using this…",10,[[["self"],["str"]],["arg"]]],[11,"conflicts_with_all","","The same as [`Arg::conflicts_with`] but allows specifying…",10,N],[11,"overrides_with","","Sets a overridable argument by name. I.e. this argument…",10,[[["self"],["str"]],["arg"]]],[11,"overrides_with_all","","Sets multiple mutually overridable arguments by name. I.e.…",10,N],[11,"requires","","Sets an argument by name that is required when this one is…",10,[[["self"],["str"]],["arg"]]],[11,"requires_if","","Allows a conditional requirement. The requirement will…",10,[[["self"],["str"],["str"]],["arg"]]],[11,"requires_ifs","","Allows multiple conditional requirements. The requirement…",10,N],[11,"required_if","","Allows specifying that an argument is [required]…",10,[[["self"],["str"],["str"]],["arg"]]],[11,"required_ifs","","Allows specifying that an argument is [required] based on…",10,N],[11,"requires_all","","Sets multiple arguments by names that are required when…",10,N],[11,"takes_value","","Specifies that the argument takes a value at run time.",10,[[["self"],["bool"]],["arg"]]],[11,"hide_possible_values","","Specifies if the possible values of an argument should be…",10,[[["self"],["bool"]],["arg"]]],[11,"hide_default_value","","Specifies if the default value of an argument should be…",10,[[["self"],["bool"]],["arg"]]],[11,"index","","Specifies the index of a positional argument starting at 1.",10,[[["self"],["u64"]],["arg"]]],[11,"multiple","","Specifies that the argument may appear more than once. For…",10,[[["self"],["bool"]],["arg"]]],[11,"value_terminator","","Specifies a value that stops parsing multiple values of a…",10,[[["self"],["str"]],["arg"]]],[11,"global","","Specifies that an argument can be matched to all child…",10,[[["self"],["bool"]],["arg"]]],[11,"empty_values","","Allows an argument to accept explicitly empty values. An…",10,[[["self"],["bool"]],["arg"]]],[11,"hidden","","Hides an argument from help message output.",10,[[["self"],["bool"]],["arg"]]],[11,"possible_values","","Specifies a list of possible values for this argument. At…",10,N],[11,"possible_value","","Specifies a possible value for this argument, one at a…",10,[[["self"],["str"]],["arg"]]],[11,"case_insensitive","","When used with [`Arg::possible_values`] it allows the…",10,[[["self"],["bool"]],["arg"]]],[11,"group","","Specifies the name of the [`ArgGroup`] the argument…",10,[[["self"],["str"]],["arg"]]],[11,"groups","","Specifies the names of multiple [`ArgGroup`]'s the…",10,N],[11,"number_of_values","","Specifies how many values are required to satisfy this…",10,[[["self"],["u64"]],["arg"]]],[11,"validator","","Allows one to perform a custom validation on the argument…",10,[[["self"],["f"]],["arg"]]],[11,"validator_os","","Works identically to Validator but is intended to be used…",10,[[["self"],["f"]],["arg"]]],[11,"max_values","","Specifies the maximum number of values are for this…",10,[[["self"],["u64"]],["arg"]]],[11,"min_values","","Specifies the minimum number of values for this argument.…",10,[[["self"],["u64"]],["arg"]]],[11,"use_delimiter","","Specifies whether or not an argument should allow grouping…",10,[[["self"],["bool"]],["arg"]]],[11,"require_delimiter","","Specifies that multiple values may only be set using the…",10,[[["self"],["bool"]],["arg"]]],[11,"value_delimiter","","Specifies the separator to use when values are clumped…",10,[[["self"],["str"]],["arg"]]],[11,"value_names","","Specify multiple names for values of option arguments.…",10,N],[11,"value_name","","Specifies the name for value of [option] or [positional]…",10,[[["self"],["str"]],["arg"]]],[11,"default_value","","Specifies the value of the argument when not specified at…",10,[[["self"],["str"]],["arg"]]],[11,"default_value_os","","Provides a default value in the exact same manner as…",10,[[["self"],["osstr"]],["arg"]]],[11,"default_value_if","","Specifies the value of the argument if `arg` has been used…",10,[[["self"],["str"],["option",["str"]],["str"]],["arg"]]],[11,"default_value_if_os","","Provides a conditional default value in the exact same…",10,[[["self"],["str"],["option",["osstr"]],["osstr"]],["arg"]]],[11,"default_value_ifs","","Specifies multiple values and conditions in the same…",10,N],[11,"default_value_ifs_os","","Provides multiple conditional default values in the exact…",10,N],[11,"env","","Specifies that if the value is not passed in as an…",10,[[["self"],["str"]],["arg"]]],[11,"env_os","","Specifies that if the value is not passed in as an…",10,[[["self"],["osstr"]],["arg"]]],[11,"hide_env_values","","@TODO @p2 @docs @release: write docs",10,[[["self"],["bool"]],["arg"]]],[11,"next_line_help","","When set to `true` the help string will be displayed on…",10,[[["self"],["bool"]],["arg"]]],[11,"display_order","","Allows custom ordering of args within the help message.…",10,[[["self"],["usize"]],["arg"]]],[11,"raw","","Indicates that all parameters passed after this should not…",10,[[["self"],["bool"]],["arg"]]],[11,"hidden_short_help","","Hides an argument from short help message output.",10,[[["self"],["bool"]],["arg"]]],[11,"hidden_long_help","","Hides an argument from long help message output.",10,[[["self"],["bool"]],["arg"]]],[11,"is_set","","Checks if one of the [`ArgSettings`] settings is set for…",10,[[["self"],["argsettings"]],["bool"]]],[11,"set","","Sets one of the [`ArgSettings`] settings for the argument…",10,[[["self"],["argsettings"]],["arg"]]],[11,"unset","","Unsets one of the [`ArgSettings`] settings for the…",10,[[["self"],["argsettings"]],["arg"]]]],"paths":[[4,"ErrorKind"],[4,"Shell"],[4,"AppSettings"],[3,"Error"],[4,"ArgSettings"],[8,"StructOpt"],[3,"SubCommand"],[3,"ArgMatches"],[3,"ArgGroup"],[3,"App"],[3,"Arg"],[3,"OsValues"],[3,"Values"]]};
searchIndex["structopt_derive"]={"doc":"This crate is custom derive for StructOpt. It should not…","items":[[24,"StructOpt","structopt_derive","Generates the `StructOpt` impl.",N,N]],"paths":[]};
searchIndex["strum"]={"doc":"Strum","items":[[4,"ParseError","strum","The ParseError enum is a collection of all the possible…",N,N],[13,"VariantNotFound","","",0,N],[8,"IntoEnumIterator","","This trait designates that an `Enum` can be iterated over.…",N,N],[16,"Iterator","","",1,N],[10,"iter","","",1,N],[8,"EnumMessage","","Associates additional pieces of information with an Enum.…",N,N],[10,"get_message","","",2,[[["self"]],["option",["str"]]]],[10,"get_detailed_message","","",2,[[["self"]],["option",["str"]]]],[10,"get_serializations","","",2,N],[8,"EnumProperty","","EnumProperty is a trait that makes it possible to store…",N,N],[10,"get_str","","",3,[[["self"],["str"]],["option",["str"]]]],[11,"get_int","","",3,[[["self"],["str"]],["option",["usize"]]]],[11,"get_bool","","",3,[[["self"],["str"]],["option",["bool"]]]],[8,"AsStaticRef","","A cheap reference-to-reference conversion. Used to convert…",N,N],[10,"as_static","","",4,[[["self"]],["t"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"eq","","",0,[[["self"],["parseerror"]],["bool"]]],[11,"clone","","",0,[[["self"]],["parseerror"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"hash","","",0,N],[11,"description","","",0,[[["self"]],["str"]]]],"paths":[[4,"ParseError"],[8,"IntoEnumIterator"],[8,"EnumMessage"],[8,"EnumProperty"],[8,"AsStaticRef"]]};
searchIndex["strum_macros"]={"doc":"Strum","items":[[24,"EnumString","strum_macros","",N,N],[24,"AsRefStr","","",N,N],[24,"AsStaticStr","","",N,N],[24,"ToString","","",N,N],[24,"Display","","",N,N],[24,"EnumIter","","",N,N],[24,"EnumMessage","","",N,N],[24,"EnumProperty","","",N,N],[24,"EnumDiscriminants","","",N,N],[24,"EnumCount","","",N,N]],"paths":[]};
searchIndex["symtab"]={"doc":"","items":[[3,"Scoped","symtab","Scoped implements scoping for SymbolTable. The generic…",N,N],[3,"CannotLeaveRootScopeError","","",N,N],[3,"RedefinitionError","","",N,N],[6,"SymbolTable","","SymbolTable associates a Symbol `S` with a stored value `T`.",N,N],[11,"new","","",0,[[],["self"]]],[11,"enter_scope","","",0,[[["self"]]]],[11,"leave_scope","","",0,[[["self"]],["result",["cannotleaverootscopeerror"]]]],[11,"define","","",0,[[["self"],["s"],["t"]],["result",["redefinitionerror"]]]],[11,"visible_definitions","","",0,[[["self"]],["vec"]]],[11,"visible_definition","","",0,[[["self"],["s"]],["option"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]]],"paths":[[3,"Scoped"],[3,"CannotLeaveRootScopeError"],[3,"RedefinitionError"]]};
searchIndex["syn"]={"doc":"Syn is a parsing library for parsing a stream of Rust…","items":[[3,"Ident","syn","A word of Rust code, which may be a keyword or legal…",N,N],[3,"Attribute","","An attribute like `#[repr(transparent)]`.",N,N],[12,"pound_token","","",0,N],[12,"style","","",0,N],[12,"bracket_token","","",0,N],[12,"path","","",0,N],[12,"tts","","",0,N],[3,"MetaList","","A structured list within an attribute, like `derive(Copy,…",N,N],[12,"ident","","",1,N],[12,"paren_token","","",1,N],[12,"nested","","",1,N],[3,"MetaNameValue","","A name-value pair within an attribute, like `feature =…",N,N],[12,"ident","","",2,N],[12,"eq_token","","",2,N],[12,"lit","","",2,N],[3,"Field","","A field of a struct or enum variant.",N,N],[12,"attrs","","Attributes tagged on the field.",3,N],[12,"vis","","Visibility of the field.",3,N],[12,"ident","","Name of the field, if any.",3,N],[12,"colon_token","","",3,N],[12,"ty","","Type of the field.",3,N],[3,"FieldsNamed","","Named fields of a struct or struct variant such as `Point…",N,N],[12,"brace_token","","",4,N],[12,"named","","",4,N],[3,"FieldsUnnamed","","Unnamed fields of a tuple struct or tuple variant such as…",N,N],[12,"paren_token","","",5,N],[12,"unnamed","","",5,N],[3,"Variant","","An enum variant.",N,N],[12,"attrs","","Attributes tagged on the variant.",6,N],[12,"ident","","Name of the variant.",6,N],[12,"fields","","Content stored in the variant.",6,N],[12,"discriminant","","Explicit discriminant: `Variant = 1`",6,N],[3,"VisCrate","","A crate-level visibility: `crate`.",N,N],[12,"crate_token","","",7,N],[3,"VisPublic","","A public visibility level: `pub`.",N,N],[12,"pub_token","","",8,N],[3,"VisRestricted","","A visibility level restricted to some path: `pub(self)` or…",N,N],[12,"pub_token","","",9,N],[12,"paren_token","","",9,N],[12,"in_token","","",9,N],[12,"path","","",9,N],[3,"ExprArray","","A slice literal expression: `[a, b, c, d]`.",N,N],[12,"attrs","","",10,N],[12,"bracket_token","","",10,N],[12,"elems","","",10,N],[3,"ExprAssign","","An assignment expression: `a = compute()`.",N,N],[12,"attrs","","",11,N],[12,"left","","",11,N],[12,"eq_token","","",11,N],[12,"right","","",11,N],[3,"ExprAssignOp","","A compound assignment expression: `counter += 1`.",N,N],[12,"attrs","","",12,N],[12,"left","","",12,N],[12,"op","","",12,N],[12,"right","","",12,N],[3,"ExprAsync","","An async block: `async { ... }`.",N,N],[12,"attrs","","",13,N],[12,"async_token","","",13,N],[12,"capture","","",13,N],[12,"block","","",13,N],[3,"ExprBinary","","A binary operation: `a + b`, `a * b`.",N,N],[12,"attrs","","",14,N],[12,"left","","",14,N],[12,"op","","",14,N],[12,"right","","",14,N],[3,"ExprBlock","","A blocked scope: `{ ... }`.",N,N],[12,"attrs","","",15,N],[12,"label","","",15,N],[12,"block","","",15,N],[3,"ExprBox","","A box expression: `box f`.",N,N],[12,"attrs","","",16,N],[12,"box_token","","",16,N],[12,"expr","","",16,N],[3,"ExprBreak","","A `break`, with an optional label to break and an optional…",N,N],[12,"attrs","","",17,N],[12,"break_token","","",17,N],[12,"label","","",17,N],[12,"expr","","",17,N],[3,"ExprCall","","A function call expression: `invoke(a, b)`.",N,N],[12,"attrs","","",18,N],[12,"func","","",18,N],[12,"paren_token","","",18,N],[12,"args","","",18,N],[3,"ExprCast","","A cast expression: `foo as f64`.",N,N],[12,"attrs","","",19,N],[12,"expr","","",19,N],[12,"as_token","","",19,N],[12,"ty","","",19,N],[3,"ExprClosure","","A closure expression: `|a, b| a + b`.",N,N],[12,"attrs","","",20,N],[12,"asyncness","","",20,N],[12,"movability","","",20,N],[12,"capture","","",20,N],[12,"or1_token","","",20,N],[12,"inputs","","",20,N],[12,"or2_token","","",20,N],[12,"output","","",20,N],[12,"body","","",20,N],[3,"ExprContinue","","A `continue`, with an optional label.",N,N],[12,"attrs","","",21,N],[12,"continue_token","","",21,N],[12,"label","","",21,N],[3,"ExprField","","Access of a named struct field (`obj.k`) or unnamed tuple…",N,N],[12,"attrs","","",22,N],[12,"base","","",22,N],[12,"dot_token","","",22,N],[12,"member","","",22,N],[3,"ExprForLoop","","A for loop: `for pat in expr { ... }`.",N,N],[12,"attrs","","",23,N],[12,"label","","",23,N],[12,"for_token","","",23,N],[12,"pat","","",23,N],[12,"in_token","","",23,N],[12,"expr","","",23,N],[12,"body","","",23,N],[3,"ExprGroup","","An expression contained within invisible delimiters.",N,N],[12,"attrs","","",24,N],[12,"group_token","","",24,N],[12,"expr","","",24,N],[3,"ExprIf","","An `if` expression with an optional `else` block: `if expr…",N,N],[12,"attrs","","",25,N],[12,"if_token","","",25,N],[12,"cond","","",25,N],[12,"then_branch","","",25,N],[12,"else_branch","","",25,N],[3,"ExprInPlace","","A placement expression: `place <- value`.",N,N],[12,"attrs","","",26,N],[12,"place","","",26,N],[12,"arrow_token","","",26,N],[12,"value","","",26,N],[3,"ExprIndex","","A square bracketed indexing expression: `vector[2]`.",N,N],[12,"attrs","","",27,N],[12,"expr","","",27,N],[12,"bracket_token","","",27,N],[12,"index","","",27,N],[3,"ExprLet","","A `let` guard: `let Some(x) = opt`.",N,N],[12,"attrs","","",28,N],[12,"let_token","","",28,N],[12,"pats","","",28,N],[12,"eq_token","","",28,N],[12,"expr","","",28,N],[3,"ExprLit","","A literal in place of an expression: `1`, `\"foo\"`.",N,N],[12,"attrs","","",29,N],[12,"lit","","",29,N],[3,"ExprLoop","","Conditionless loop: `loop { ... }`.",N,N],[12,"attrs","","",30,N],[12,"label","","",30,N],[12,"loop_token","","",30,N],[12,"body","","",30,N],[3,"ExprMacro","","A macro invocation expression: `format!(\"{}\", q)`.",N,N],[12,"attrs","","",31,N],[12,"mac","","",31,N],[3,"ExprMatch","","A `match` expression: `match n { Some(n) => {}, None => {}…",N,N],[12,"attrs","","",32,N],[12,"match_token","","",32,N],[12,"expr","","",32,N],[12,"brace_token","","",32,N],[12,"arms","","",32,N],[3,"ExprMethodCall","","A method call expression: `x.foo::<T>(a, b)`.",N,N],[12,"attrs","","",33,N],[12,"receiver","","",33,N],[12,"dot_token","","",33,N],[12,"method","","",33,N],[12,"turbofish","","",33,N],[12,"paren_token","","",33,N],[12,"args","","",33,N],[3,"ExprParen","","A parenthesized expression: `(a + b)`.",N,N],[12,"attrs","","",34,N],[12,"paren_token","","",34,N],[12,"expr","","",34,N],[3,"ExprPath","","A path like `std::mem::replace` possibly containing…",N,N],[12,"attrs","","",35,N],[12,"qself","","",35,N],[12,"path","","",35,N],[3,"ExprRange","","A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.",N,N],[12,"attrs","","",36,N],[12,"from","","",36,N],[12,"limits","","",36,N],[12,"to","","",36,N],[3,"ExprReference","","A referencing operation: `&a` or `&mut a`.",N,N],[12,"attrs","","",37,N],[12,"and_token","","",37,N],[12,"mutability","","",37,N],[12,"expr","","",37,N],[3,"ExprRepeat","","An array literal constructed from one repeated element:…",N,N],[12,"attrs","","",38,N],[12,"bracket_token","","",38,N],[12,"expr","","",38,N],[12,"semi_token","","",38,N],[12,"len","","",38,N],[3,"ExprReturn","","A `return`, with an optional value to be returned.",N,N],[12,"attrs","","",39,N],[12,"return_token","","",39,N],[12,"expr","","",39,N],[3,"ExprStruct","","A struct literal expression: `Point { x: 1, y: 1 }`.",N,N],[12,"attrs","","",40,N],[12,"path","","",40,N],[12,"brace_token","","",40,N],[12,"fields","","",40,N],[12,"dot2_token","","",40,N],[12,"rest","","",40,N],[3,"ExprTry","","A try-expression: `expr?`.",N,N],[12,"attrs","","",41,N],[12,"expr","","",41,N],[12,"question_token","","",41,N],[3,"ExprTryBlock","","A try block: `try { ... }`.",N,N],[12,"attrs","","",42,N],[12,"try_token","","",42,N],[12,"block","","",42,N],[3,"ExprTuple","","A tuple expression: `(a, b, c, d)`.",N,N],[12,"attrs","","",43,N],[12,"paren_token","","",43,N],[12,"elems","","",43,N],[3,"ExprType","","A type ascription expression: `foo: f64`.",N,N],[12,"attrs","","",44,N],[12,"expr","","",44,N],[12,"colon_token","","",44,N],[12,"ty","","",44,N],[3,"ExprUnary","","A unary operation: `!x`, `*x`.",N,N],[12,"attrs","","",45,N],[12,"op","","",45,N],[12,"expr","","",45,N],[3,"ExprUnsafe","","An unsafe block: `unsafe { ... }`.",N,N],[12,"attrs","","",46,N],[12,"unsafe_token","","",46,N],[12,"block","","",46,N],[3,"ExprVerbatim","","Tokens in expression position not interpreted by Syn.",N,N],[12,"tts","","",47,N],[3,"ExprWhile","","A while loop: `while expr { ... }`.",N,N],[12,"attrs","","",48,N],[12,"label","","",48,N],[12,"while_token","","",48,N],[12,"cond","","",48,N],[12,"body","","",48,N],[3,"ExprYield","","A yield expression: `yield expr`.",N,N],[12,"attrs","","",49,N],[12,"yield_token","","",49,N],[12,"expr","","",49,N],[3,"Index","","The index of an unnamed tuple struct field.",N,N],[12,"index","","",50,N],[12,"span","","",50,N],[3,"Arm","","One arm of a `match` expression: `0...10 => { return true;…",N,N],[12,"attrs","","",51,N],[12,"leading_vert","","",51,N],[12,"pats","","",51,N],[12,"guard","","",51,N],[12,"fat_arrow_token","","",51,N],[12,"body","","",51,N],[12,"comma","","",51,N],[3,"Block","","A braced block containing Rust statements.",N,N],[12,"brace_token","","",52,N],[12,"stmts","","Statements in a block",52,N],[3,"FieldPat","","A single field in a struct pattern.",N,N],[12,"attrs","","",53,N],[12,"member","","",53,N],[12,"colon_token","","",53,N],[12,"pat","","",53,N],[3,"FieldValue","","A field-value pair in a struct literal.",N,N],[12,"attrs","","Attributes tagged on the field.",54,N],[12,"member","","Name or index of the field.",54,N],[12,"colon_token","","The colon in `Struct { x: x }`. If written in shorthand…",54,N],[12,"expr","","Value of the field.",54,N],[3,"Label","","A lifetime labeling a `for`, `while`, or `loop`.",N,N],[12,"name","","",55,N],[12,"colon_token","","",55,N],[3,"Local","","A local `let` binding: `let x: u64 = s.parse()?`.",N,N],[12,"attrs","","",56,N],[12,"let_token","","",56,N],[12,"pats","","",56,N],[12,"ty","","",56,N],[12,"init","","",56,N],[12,"semi_token","","",56,N],[3,"MethodTurbofish","","The `::<>` explicit type parameters passed to a method…",N,N],[12,"colon2_token","","",57,N],[12,"lt_token","","",57,N],[12,"args","","",57,N],[12,"gt_token","","",57,N],[3,"PatBox","","A box pattern: `box v`.",N,N],[12,"box_token","","",58,N],[12,"pat","","",58,N],[3,"PatIdent","","A pattern that binds a new variable: `ref mut binding @…",N,N],[12,"by_ref","","",59,N],[12,"mutability","","",59,N],[12,"ident","","",59,N],[12,"subpat","","",59,N],[3,"PatLit","","A literal pattern: `0`.",N,N],[12,"expr","","",60,N],[3,"PatMacro","","A macro in expression position.",N,N],[12,"mac","","",61,N],[3,"PatPath","","A path pattern like `Color::Red`, optionally qualified…",N,N],[12,"qself","","",62,N],[12,"path","","",62,N],[3,"PatRange","","A range pattern: `1..=2`.",N,N],[12,"lo","","",63,N],[12,"limits","","",63,N],[12,"hi","","",63,N],[3,"PatRef","","A reference pattern: `&mut (first, second)`.",N,N],[12,"and_token","","",64,N],[12,"mutability","","",64,N],[12,"pat","","",64,N],[3,"PatSlice","","A dynamically sized slice pattern: `[a, b, i.., y, z]`.",N,N],[12,"bracket_token","","",65,N],[12,"front","","",65,N],[12,"middle","","",65,N],[12,"dot2_token","","",65,N],[12,"comma_token","","",65,N],[12,"back","","",65,N],[3,"PatStruct","","A struct or struct variant pattern: `Variant { x, y, .. }`.",N,N],[12,"path","","",66,N],[12,"brace_token","","",66,N],[12,"fields","","",66,N],[12,"dot2_token","","",66,N],[3,"PatTuple","","A tuple pattern: `(a, b)`.",N,N],[12,"paren_token","","",67,N],[12,"front","","",67,N],[12,"dot2_token","","",67,N],[12,"comma_token","","",67,N],[12,"back","","",67,N],[3,"PatTupleStruct","","A tuple struct or tuple variant pattern: `Variant(x, y,…",N,N],[12,"path","","",68,N],[12,"pat","","",68,N],[3,"PatVerbatim","","Tokens in pattern position not interpreted by Syn.",N,N],[12,"tts","","",69,N],[3,"PatWild","","A pattern that matches any value: `_`.",N,N],[12,"underscore_token","","",70,N],[3,"BoundLifetimes","","A set of bound lifetimes: `for<'a, 'b, 'c>`.",N,N],[12,"for_token","","",71,N],[12,"lt_token","","",71,N],[12,"lifetimes","","",71,N],[12,"gt_token","","",71,N],[3,"ConstParam","","A const generic parameter: `const LENGTH: usize`.",N,N],[12,"attrs","","",72,N],[12,"const_token","","",72,N],[12,"ident","","",72,N],[12,"colon_token","","",72,N],[12,"ty","","",72,N],[12,"eq_token","","",72,N],[12,"default","","",72,N],[3,"Generics","","Lifetimes and type parameters attached to a declaration of…",N,N],[12,"lt_token","","",73,N],[12,"params","","",73,N],[12,"gt_token","","",73,N],[12,"where_clause","","",73,N],[3,"LifetimeDef","","A lifetime definition: `'a: 'b + 'c + 'd`.",N,N],[12,"attrs","","",74,N],[12,"lifetime","","",74,N],[12,"colon_token","","",74,N],[12,"bounds","","",74,N],[3,"PredicateEq","","An equality predicate in a `where` clause (unsupported).",N,N],[12,"lhs_ty","","",75,N],[12,"eq_token","","",75,N],[12,"rhs_ty","","",75,N],[3,"PredicateLifetime","","A lifetime predicate in a `where` clause: `'a: 'b + 'c`.",N,N],[12,"lifetime","","",76,N],[12,"colon_token","","",76,N],[12,"bounds","","",76,N],[3,"PredicateType","","A type predicate in a `where` clause: `for<'c> Foo<'c>:…",N,N],[12,"lifetimes","","Any lifetimes from a `for` binding",77,N],[12,"bounded_ty","","The type being bounded",77,N],[12,"colon_token","","",77,N],[12,"bounds","","Trait and lifetime bounds (`Clone+Send+'static`)",77,N],[3,"TraitBound","","A trait used as a bound on a type parameter.",N,N],[12,"paren_token","","",78,N],[12,"modifier","","",78,N],[12,"lifetimes","","The `for<'a>` in `for<'a> Foo<&'a T>`",78,N],[12,"path","","The `Foo<&'a T>` in `for<'a> Foo<&'a T>`",78,N],[3,"TypeParam","","A generic type parameter: `T: Into<String>`.",N,N],[12,"attrs","","",79,N],[12,"ident","","",79,N],[12,"colon_token","","",79,N],[12,"bounds","","",79,N],[12,"eq_token","","",79,N],[12,"default","","",79,N],[3,"WhereClause","","A `where` clause in a definition: `where T:…",N,N],[12,"where_token","","",80,N],[12,"predicates","","",80,N],[3,"ImplGenerics","","Returned by `Generics::split_for_impl`.",N,N],[3,"Turbofish","","Returned by `TypeGenerics::as_turbofish`.",N,N],[3,"TypeGenerics","","Returned by `Generics::split_for_impl`.",N,N],[3,"ArgCaptured","","An explicitly typed pattern captured by a function…",N,N],[12,"pat","","",81,N],[12,"colon_token","","",81,N],[12,"ty","","",81,N],[3,"ArgSelf","","Self captured by value in a function signature: `self` or…",N,N],[12,"mutability","","",82,N],[12,"self_token","","",82,N],[3,"ArgSelfRef","","Self captured by reference in a function signature:…",N,N],[12,"and_token","","",83,N],[12,"lifetime","","",83,N],[12,"mutability","","",83,N],[12,"self_token","","",83,N],[3,"FnDecl","","Header of a function declaration, without including the…",N,N],[12,"fn_token","","",84,N],[12,"generics","","",84,N],[12,"paren_token","","",84,N],[12,"inputs","","",84,N],[12,"variadic","","",84,N],[12,"output","","",84,N],[3,"ForeignItemFn","","A foreign function in an `extern` block.",N,N],[12,"attrs","","",85,N],[12,"vis","","",85,N],[12,"ident","","",85,N],[12,"decl","","",85,N],[12,"semi_token","","",85,N],[3,"ForeignItemMacro","","A macro invocation within an extern block.",N,N],[12,"attrs","","",86,N],[12,"mac","","",86,N],[12,"semi_token","","",86,N],[3,"ForeignItemStatic","","A foreign static item in an `extern` block: `static ext:…",N,N],[12,"attrs","","",87,N],[12,"vis","","",87,N],[12,"static_token","","",87,N],[12,"mutability","","",87,N],[12,"ident","","",87,N],[12,"colon_token","","",87,N],[12,"ty","","",87,N],[12,"semi_token","","",87,N],[3,"ForeignItemType","","A foreign type in an `extern` block: `type void`.",N,N],[12,"attrs","","",88,N],[12,"vis","","",88,N],[12,"type_token","","",88,N],[12,"ident","","",88,N],[12,"semi_token","","",88,N],[3,"ForeignItemVerbatim","","Tokens in an `extern` block not interpreted by Syn.",N,N],[12,"tts","","",89,N],[3,"ImplItemConst","","An associated constant within an impl block.",N,N],[12,"attrs","","",90,N],[12,"vis","","",90,N],[12,"defaultness","","",90,N],[12,"const_token","","",90,N],[12,"ident","","",90,N],[12,"colon_token","","",90,N],[12,"ty","","",90,N],[12,"eq_token","","",90,N],[12,"expr","","",90,N],[12,"semi_token","","",90,N],[3,"ImplItemExistential","","An existential type within an impl block.",N,N],[12,"attrs","","",91,N],[12,"existential_token","","",91,N],[12,"type_token","","",91,N],[12,"ident","","",91,N],[12,"generics","","",91,N],[12,"colon_token","","",91,N],[12,"bounds","","",91,N],[12,"semi_token","","",91,N],[3,"ImplItemMacro","","A macro invocation within an impl block.",N,N],[12,"attrs","","",92,N],[12,"mac","","",92,N],[12,"semi_token","","",92,N],[3,"ImplItemMethod","","A method within an impl block.",N,N],[12,"attrs","","",93,N],[12,"vis","","",93,N],[12,"defaultness","","",93,N],[12,"sig","","",93,N],[12,"block","","",93,N],[3,"ImplItemType","","An associated type within an impl block.",N,N],[12,"attrs","","",94,N],[12,"vis","","",94,N],[12,"defaultness","","",94,N],[12,"type_token","","",94,N],[12,"ident","","",94,N],[12,"generics","","",94,N],[12,"eq_token","","",94,N],[12,"ty","","",94,N],[12,"semi_token","","",94,N],[3,"ImplItemVerbatim","","Tokens within an impl block not interpreted by Syn.",N,N],[12,"tts","","",95,N],[3,"ItemConst","","A constant item: `const MAX: u16 = 65535`.",N,N],[12,"attrs","","",96,N],[12,"vis","","",96,N],[12,"const_token","","",96,N],[12,"ident","","",96,N],[12,"colon_token","","",96,N],[12,"ty","","",96,N],[12,"eq_token","","",96,N],[12,"expr","","",96,N],[12,"semi_token","","",96,N],[3,"ItemEnum","","An enum definition: `enum Foo<A, B> { C<A>, D<B> }`.",N,N],[12,"attrs","","",97,N],[12,"vis","","",97,N],[12,"enum_token","","",97,N],[12,"ident","","",97,N],[12,"generics","","",97,N],[12,"brace_token","","",97,N],[12,"variants","","",97,N],[3,"ItemExistential","","An existential type: `existential type Iter: Iterator<Item…",N,N],[12,"attrs","","",98,N],[12,"vis","","",98,N],[12,"existential_token","","",98,N],[12,"type_token","","",98,N],[12,"ident","","",98,N],[12,"generics","","",98,N],[12,"colon_token","","",98,N],[12,"bounds","","",98,N],[12,"semi_token","","",98,N],[3,"ItemExternCrate","","An `extern crate` item: `extern crate serde`.",N,N],[12,"attrs","","",99,N],[12,"vis","","",99,N],[12,"extern_token","","",99,N],[12,"crate_token","","",99,N],[12,"ident","","",99,N],[12,"rename","","",99,N],[12,"semi_token","","",99,N],[3,"ItemFn","","A free-standing function: `fn process(n: usize) ->…",N,N],[12,"attrs","","",100,N],[12,"vis","","",100,N],[12,"constness","","",100,N],[12,"unsafety","","",100,N],[12,"asyncness","","",100,N],[12,"abi","","",100,N],[12,"ident","","",100,N],[12,"decl","","",100,N],[12,"block","","",100,N],[3,"ItemForeignMod","","A block of foreign items: `extern \"C\" { ... }`.",N,N],[12,"attrs","","",101,N],[12,"abi","","",101,N],[12,"brace_token","","",101,N],[12,"items","","",101,N],[3,"ItemImpl","","An impl block providing trait or associated items:…",N,N],[12,"attrs","","",102,N],[12,"defaultness","","",102,N],[12,"unsafety","","",102,N],[12,"impl_token","","",102,N],[12,"generics","","",102,N],[12,"trait_","","Trait this impl implements.",102,N],[12,"self_ty","","The Self type of the impl.",102,N],[12,"brace_token","","",102,N],[12,"items","","",102,N],[3,"ItemMacro","","A macro invocation, which includes `macro_rules!`…",N,N],[12,"attrs","","",103,N],[12,"ident","","The `example` in `macro_rules! example { ... }`.",103,N],[12,"mac","","",103,N],[12,"semi_token","","",103,N],[3,"ItemMacro2","","A 2.0-style declarative macro introduced by the `macro`…",N,N],[12,"attrs","","",104,N],[12,"vis","","",104,N],[12,"macro_token","","",104,N],[12,"ident","","",104,N],[12,"paren_token","","",104,N],[12,"args","","",104,N],[12,"brace_token","","",104,N],[12,"body","","",104,N],[3,"ItemMod","","A module or module declaration: `mod m` or `mod m { ... }`.",N,N],[12,"attrs","","",105,N],[12,"vis","","",105,N],[12,"mod_token","","",105,N],[12,"ident","","",105,N],[12,"content","","",105,N],[12,"semi","","",105,N],[3,"ItemStatic","","A static item: `static BIKE: Shed = Shed(42)`.",N,N],[12,"attrs","","",106,N],[12,"vis","","",106,N],[12,"static_token","","",106,N],[12,"mutability","","",106,N],[12,"ident","","",106,N],[12,"colon_token","","",106,N],[12,"ty","","",106,N],[12,"eq_token","","",106,N],[12,"expr","","",106,N],[12,"semi_token","","",106,N],[3,"ItemStruct","","A struct definition: `struct Foo<A> { x: A }`.",N,N],[12,"attrs","","",107,N],[12,"vis","","",107,N],[12,"struct_token","","",107,N],[12,"ident","","",107,N],[12,"generics","","",107,N],[12,"fields","","",107,N],[12,"semi_token","","",107,N],[3,"ItemTrait","","A trait definition: `pub trait Iterator { ... }`.",N,N],[12,"attrs","","",108,N],[12,"vis","","",108,N],[12,"unsafety","","",108,N],[12,"auto_token","","",108,N],[12,"trait_token","","",108,N],[12,"ident","","",108,N],[12,"generics","","",108,N],[12,"colon_token","","",108,N],[12,"supertraits","","",108,N],[12,"brace_token","","",108,N],[12,"items","","",108,N],[3,"ItemTraitAlias","","A trait alias: `pub trait SharableIterator = Iterator +…",N,N],[12,"attrs","","",109,N],[12,"vis","","",109,N],[12,"trait_token","","",109,N],[12,"ident","","",109,N],[12,"generics","","",109,N],[12,"eq_token","","",109,N],[12,"bounds","","",109,N],[12,"semi_token","","",109,N],[3,"ItemType","","A type alias: `type Result<T> = std::result::Result<T,…",N,N],[12,"attrs","","",110,N],[12,"vis","","",110,N],[12,"type_token","","",110,N],[12,"ident","","",110,N],[12,"generics","","",110,N],[12,"eq_token","","",110,N],[12,"ty","","",110,N],[12,"semi_token","","",110,N],[3,"ItemUnion","","A union definition: `union Foo<A, B> { x: A, y: B }`.",N,N],[12,"attrs","","",111,N],[12,"vis","","",111,N],[12,"union_token","","",111,N],[12,"ident","","",111,N],[12,"generics","","",111,N],[12,"fields","","",111,N],[3,"ItemUse","","A use declaration: `use std::collections::HashMap`.",N,N],[12,"attrs","","",112,N],[12,"vis","","",112,N],[12,"use_token","","",112,N],[12,"leading_colon","","",112,N],[12,"tree","","",112,N],[12,"semi_token","","",112,N],[3,"ItemVerbatim","","Tokens forming an item not interpreted by Syn.",N,N],[12,"tts","","",113,N],[3,"MethodSig","","A method's signature in a trait or implementation: `unsafe…",N,N],[12,"constness","","",114,N],[12,"unsafety","","",114,N],[12,"asyncness","","",114,N],[12,"abi","","",114,N],[12,"ident","","",114,N],[12,"decl","","",114,N],[3,"TraitItemConst","","An associated constant within the definition of a trait.",N,N],[12,"attrs","","",115,N],[12,"const_token","","",115,N],[12,"ident","","",115,N],[12,"colon_token","","",115,N],[12,"ty","","",115,N],[12,"default","","",115,N],[12,"semi_token","","",115,N],[3,"TraitItemMacro","","A macro invocation within the definition of a trait.",N,N],[12,"attrs","","",116,N],[12,"mac","","",116,N],[12,"semi_token","","",116,N],[3,"TraitItemMethod","","A trait method within the definition of a trait.",N,N],[12,"attrs","","",117,N],[12,"sig","","",117,N],[12,"default","","",117,N],[12,"semi_token","","",117,N],[3,"TraitItemType","","An associated type within the definition of a trait.",N,N],[12,"attrs","","",118,N],[12,"type_token","","",118,N],[12,"ident","","",118,N],[12,"generics","","",118,N],[12,"colon_token","","",118,N],[12,"bounds","","",118,N],[12,"default","","",118,N],[12,"semi_token","","",118,N],[3,"TraitItemVerbatim","","Tokens within the definition of a trait not interpreted by…",N,N],[12,"tts","","",119,N],[3,"UseGlob","","A glob import in a `use` item: `*`.",N,N],[12,"star_token","","",120,N],[3,"UseGroup","","A braced group of imports in a `use` item: `{A, B, C}`.",N,N],[12,"brace_token","","",121,N],[12,"items","","",121,N],[3,"UseName","","An identifier imported by a `use` item: `HashMap`.",N,N],[12,"ident","","",122,N],[3,"UsePath","","A path prefix of imports in a `use` item: `std::...`.",N,N],[12,"ident","","",123,N],[12,"colon2_token","","",123,N],[12,"tree","","",123,N],[3,"UseRename","","An renamed identifier imported by a `use` item: `HashMap…",N,N],[12,"ident","","",124,N],[12,"as_token","","",124,N],[12,"rename","","",124,N],[3,"File","","A complete file of Rust source code.",N,N],[12,"shebang","","",125,N],[12,"attrs","","",125,N],[12,"items","","",125,N],[3,"Lifetime","","A Rust lifetime: `'a`.",N,N],[12,"apostrophe","","",126,N],[12,"ident","","",126,N],[3,"LitBool","","A boolean literal: `true` or `false`.",N,N],[12,"value","","",127,N],[12,"span","","",127,N],[3,"LitByte","","A byte literal: `b'f'`.",N,N],[3,"LitByteStr","","A byte string literal: `b\"foo\"`.",N,N],[3,"LitChar","","A character literal: `'a'`.",N,N],[3,"LitFloat","","A floating point literal: `1f64` or `1.0e10f64`.",N,N],[3,"LitInt","","An integer literal: `1` or `1u16`.",N,N],[3,"LitStr","","A UTF-8 string literal: `\"foo\"`.",N,N],[3,"LitVerbatim","","A raw token literal not interpreted by Syn, possibly…",N,N],[12,"token","","",128,N],[3,"Macro","","A macro invocation: `println!(\"{}\", mac)`.",N,N],[12,"path","","",129,N],[12,"bang_token","","",129,N],[12,"delimiter","","",129,N],[12,"tts","","",129,N],[3,"DataEnum","","An enum input to a `proc_macro_derive` macro.",N,N],[12,"enum_token","","",130,N],[12,"brace_token","","",130,N],[12,"variants","","",130,N],[3,"DataStruct","","A struct input to a `proc_macro_derive` macro.",N,N],[12,"struct_token","","",131,N],[12,"fields","","",131,N],[12,"semi_token","","",131,N],[3,"DataUnion","","A tagged union input to a `proc_macro_derive` macro.",N,N],[12,"union_token","","",132,N],[12,"fields","","",132,N],[3,"DeriveInput","","Data structure sent to a `proc_macro_derive` macro.",N,N],[12,"attrs","","Attributes tagged on the whole struct or enum.",133,N],[12,"vis","","Visibility of the struct or enum.",133,N],[12,"ident","","Name of the struct or enum.",133,N],[12,"generics","","Generics required to complete the definition.",133,N],[12,"data","","Data within the struct or enum.",133,N],[3,"Abi","","The binary interface of a function: `extern \"C\"`.",N,N],[12,"extern_token","","",134,N],[12,"name","","",134,N],[3,"BareFnArg","","An argument in a function type: the `usize` in `fn(usize)…",N,N],[12,"name","","",135,N],[12,"ty","","",135,N],[3,"TypeArray","","A fixed size array type: `[T; n]`.",N,N],[12,"bracket_token","","",136,N],[12,"elem","","",136,N],[12,"semi_token","","",136,N],[12,"len","","",136,N],[3,"TypeBareFn","","A bare function type: `fn(usize) -> bool`.",N,N],[12,"lifetimes","","",137,N],[12,"unsafety","","",137,N],[12,"abi","","",137,N],[12,"fn_token","","",137,N],[12,"paren_token","","",137,N],[12,"inputs","","",137,N],[12,"variadic","","",137,N],[12,"output","","",137,N],[3,"TypeGroup","","A type contained within invisible delimiters.",N,N],[12,"group_token","","",138,N],[12,"elem","","",138,N],[3,"TypeImplTrait","","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a…",N,N],[12,"impl_token","","",139,N],[12,"bounds","","",139,N],[3,"TypeInfer","","Indication that a type should be inferred by the compiler:…",N,N],[12,"underscore_token","","",140,N],[3,"TypeMacro","","A macro in the type position.",N,N],[12,"mac","","",141,N],[3,"TypeNever","","The never type: `!`.",N,N],[12,"bang_token","","",142,N],[3,"TypeParen","","A parenthesized type equivalent to the inner type.",N,N],[12,"paren_token","","",143,N],[12,"elem","","",143,N],[3,"TypePath","","A path like `std::slice::Iter`, optionally qualified with…",N,N],[12,"qself","","",144,N],[12,"path","","",144,N],[3,"TypePtr","","A raw pointer type: `*const T` or `*mut T`.",N,N],[12,"star_token","","",145,N],[12,"const_token","","",145,N],[12,"mutability","","",145,N],[12,"elem","","",145,N],[3,"TypeReference","","A reference type: `&'a T` or `&'a mut T`.",N,N],[12,"and_token","","",146,N],[12,"lifetime","","",146,N],[12,"mutability","","",146,N],[12,"elem","","",146,N],[3,"TypeSlice","","A dynamically sized slice type: `[T]`.",N,N],[12,"bracket_token","","",147,N],[12,"elem","","",147,N],[3,"TypeTraitObject","","A trait object type `Bound1 + Bound2 + Bound3` where…",N,N],[12,"dyn_token","","",148,N],[12,"bounds","","",148,N],[3,"TypeTuple","","A tuple type: `(A, B, C, String)`.",N,N],[12,"paren_token","","",149,N],[12,"elems","","",149,N],[3,"TypeVerbatim","","Tokens in type position not interpreted by Syn.",N,N],[12,"tts","","",150,N],[3,"AngleBracketedGenericArguments","","Angle bracketed arguments of a path segment: the `<K, V>`…",N,N],[12,"colon2_token","","",151,N],[12,"lt_token","","",151,N],[12,"args","","",151,N],[12,"gt_token","","",151,N],[3,"Binding","","A binding (equality constraint) on an associated type:…",N,N],[12,"ident","","",152,N],[12,"eq_token","","",152,N],[12,"ty","","",152,N],[3,"Constraint","","An associated type bound: `Iterator<Item: Display>`.",N,N],[12,"ident","","",153,N],[12,"colon_token","","",153,N],[12,"bounds","","",153,N],[3,"ParenthesizedGenericArguments","","Arguments of a function path segment: the `(A, B) -> C` in…",N,N],[12,"paren_token","","",154,N],[12,"inputs","","`(A, B)`",154,N],[12,"output","","`C`",154,N],[3,"Path","","A path at which a named item is exported:…",N,N],[12,"leading_colon","","",155,N],[12,"segments","","",155,N],[3,"PathSegment","","A segment of a path together with any path arguments on…",N,N],[12,"ident","","",156,N],[12,"arguments","","",156,N],[3,"QSelf","","The explicit Self type in a qualified path: the `T` in `<T…",N,N],[12,"lt_token","","",157,N],[12,"ty","","",157,N],[12,"position","","",157,N],[12,"as_token","","",157,N],[12,"gt_token","","",157,N],[3,"Error","","Error returned when a Syn parser cannot parse the input…",N,N],[4,"AttrStyle","","Distinguishes between attributes that decorate an item and…",N,N],[13,"Outer","","",158,N],[13,"Inner","","",158,N],[4,"Meta","","Content of a compile-time structured attribute.",N,N],[13,"Word","","",159,N],[13,"List","","A structured list within an attribute, like `derive(Copy,…",159,N],[13,"NameValue","","A name-value pair within an attribute, like `feature =…",159,N],[4,"NestedMeta","","Element of a compile-time attribute list.",N,N],[13,"Meta","","A structured meta item, like the `Copy` in…",160,N],[13,"Literal","","A Rust literal, like the `\"new_name\"` in…",160,N],[4,"Fields","","Data stored within an enum variant or struct.",N,N],[13,"Named","","Named fields of a struct or struct variant such as `Point…",161,N],[13,"Unnamed","","Unnamed fields of a tuple struct or tuple variant such as…",161,N],[13,"Unit","","Unit struct or unit variant such as `None`.",161,N],[4,"Visibility","","The visibility level of an item: inherited or `pub` or…",N,N],[13,"Public","","A public visibility level: `pub`.",162,N],[13,"Crate","","A crate-level visibility: `crate`.",162,N],[13,"Restricted","","A visibility level restricted to some path: `pub(self)` or…",162,N],[13,"Inherited","","An inherited visibility, which usually means private.",162,N],[4,"Expr","","A Rust expression.",N,N],[13,"Box","","A box expression: `box f`.",163,N],[13,"InPlace","","A placement expression: `place <- value`.",163,N],[13,"Array","","A slice literal expression: `[a, b, c, d]`.",163,N],[13,"Call","","A function call expression: `invoke(a, b)`.",163,N],[13,"MethodCall","","A method call expression: `x.foo::<T>(a, b)`.",163,N],[13,"Tuple","","A tuple expression: `(a, b, c, d)`.",163,N],[13,"Binary","","A binary operation: `a + b`, `a * b`.",163,N],[13,"Unary","","A unary operation: `!x`, `*x`.",163,N],[13,"Lit","","A literal in place of an expression: `1`, `\"foo\"`.",163,N],[13,"Cast","","A cast expression: `foo as f64`.",163,N],[13,"Type","","A type ascription expression: `foo: f64`.",163,N],[13,"Let","","A `let` guard: `let Some(x) = opt`.",163,N],[13,"If","","An `if` expression with an optional `else` block: `if expr…",163,N],[13,"While","","A while loop: `while expr { ... }`.",163,N],[13,"ForLoop","","A for loop: `for pat in expr { ... }`.",163,N],[13,"Loop","","Conditionless loop: `loop { ... }`.",163,N],[13,"Match","","A `match` expression: `match n { Some(n) => {}, None => {}…",163,N],[13,"Closure","","A closure expression: `|a, b| a + b`.",163,N],[13,"Unsafe","","An unsafe block: `unsafe { ... }`.",163,N],[13,"Block","","A blocked scope: `{ ... }`.",163,N],[13,"Assign","","An assignment expression: `a = compute()`.",163,N],[13,"AssignOp","","A compound assignment expression: `counter += 1`.",163,N],[13,"Field","","Access of a named struct field (`obj.k`) or unnamed tuple…",163,N],[13,"Index","","A square bracketed indexing expression: `vector[2]`.",163,N],[13,"Range","","A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.",163,N],[13,"Path","","A path like `std::mem::replace` possibly containing…",163,N],[13,"Reference","","A referencing operation: `&a` or `&mut a`.",163,N],[13,"Break","","A `break`, with an optional label to break and an optional…",163,N],[13,"Continue","","A `continue`, with an optional label.",163,N],[13,"Return","","A `return`, with an optional value to be returned.",163,N],[13,"Macro","","A macro invocation expression: `format!(\"{}\", q)`.",163,N],[13,"Struct","","A struct literal expression: `Point { x: 1, y: 1 }`.",163,N],[13,"Repeat","","An array literal constructed from one repeated element:…",163,N],[13,"Paren","","A parenthesized expression: `(a + b)`.",163,N],[13,"Group","","An expression contained within invisible delimiters.",163,N],[13,"Try","","A try-expression: `expr?`.",163,N],[13,"Async","","An async block: `async { ... }`.",163,N],[13,"TryBlock","","A try block: `try { ... }`.",163,N],[13,"Yield","","A yield expression: `yield expr`.",163,N],[13,"Verbatim","","Tokens in expression position not interpreted by Syn.",163,N],[4,"Member","","A struct or tuple struct field accessed in a struct…",N,N],[13,"Named","","A named field like `self.x`.",164,N],[13,"Unnamed","","An unnamed field like `self.0`.",164,N],[4,"GenericMethodArgument","","An individual generic argument to a method, like `T`.",N,N],[13,"Type","","A type argument.",165,N],[13,"Const","","A const expression. Must be inside of a block.",165,N],[4,"Pat","","A pattern in a local binding, function signature, match…",N,N],[13,"Wild","","A pattern that matches any value: `_`.",166,N],[13,"Ident","","A pattern that binds a new variable: `ref mut binding @…",166,N],[13,"Struct","","A struct or struct variant pattern: `Variant { x, y, .. }`.",166,N],[13,"TupleStruct","","A tuple struct or tuple variant pattern: `Variant(x, y,…",166,N],[13,"Path","","A path pattern like `Color::Red`, optionally qualified…",166,N],[13,"Tuple","","A tuple pattern: `(a, b)`.",166,N],[13,"Box","","A box pattern: `box v`.",166,N],[13,"Ref","","A reference pattern: `&mut (first, second)`.",166,N],[13,"Lit","","A literal pattern: `0`.",166,N],[13,"Range","","A range pattern: `1..=2`.",166,N],[13,"Slice","","A dynamically sized slice pattern: `[a, b, i.., y, z]`.",166,N],[13,"Macro","","A macro in expression position.",166,N],[13,"Verbatim","","Tokens in pattern position not interpreted by Syn.",166,N],[4,"RangeLimits","","Limit types of a range, inclusive or exclusive.",N,N],[13,"HalfOpen","","Inclusive at the beginning, exclusive at the end.",167,N],[13,"Closed","","Inclusive at the beginning and end.",167,N],[4,"Stmt","","A statement, usually ending in a semicolon.",N,N],[13,"Local","","A local (let) binding.",168,N],[13,"Item","","An item definition.",168,N],[13,"Expr","","Expr without trailing semicolon.",168,N],[13,"Semi","","Expression with trailing semicolon.",168,N],[4,"GenericParam","","A generic type parameter, lifetime, or const generic: `T:…",N,N],[13,"Type","","A generic type parameter: `T: Into<String>`.",169,N],[13,"Lifetime","","A lifetime definition: `'a: 'b + 'c + 'd`.",169,N],[13,"Const","","A const generic parameter: `const LENGTH: usize`.",169,N],[4,"TraitBoundModifier","","A modifier on a trait bound, currently only used for the…",N,N],[13,"None","","",170,N],[13,"Maybe","","",170,N],[4,"TypeParamBound","","A trait or lifetime used as a bound on a type parameter.",N,N],[13,"Trait","","",171,N],[13,"Lifetime","","",171,N],[4,"WherePredicate","","A single predicate in a `where` clause: `T:…",N,N],[13,"Type","","A type predicate in a `where` clause: `for<'c> Foo<'c>:…",172,N],[13,"Lifetime","","A lifetime predicate in a `where` clause: `'a: 'b + 'c`.",172,N],[13,"Eq","","An equality predicate in a `where` clause (unsupported).",172,N],[4,"FnArg","","An argument in a function signature: the `n: usize` in `fn…",N,N],[13,"SelfRef","","Self captured by reference in a function signature:…",173,N],[13,"SelfValue","","Self captured by value in a function signature: `self` or…",173,N],[13,"Captured","","An explicitly typed pattern captured by a function…",173,N],[13,"Inferred","","A pattern whose type is inferred captured by a function…",173,N],[13,"Ignored","","A type not bound to any pattern in a function signature.",173,N],[4,"ForeignItem","","An item within an `extern` block.",N,N],[13,"Fn","","A foreign function in an `extern` block.",174,N],[13,"Static","","A foreign static item in an `extern` block: `static ext:…",174,N],[13,"Type","","A foreign type in an `extern` block: `type void`.",174,N],[13,"Macro","","A macro invocation within an extern block.",174,N],[13,"Verbatim","","Tokens in an `extern` block not interpreted by Syn.",174,N],[4,"ImplItem","","An item within an impl block.",N,N],[13,"Const","","An associated constant within an impl block.",175,N],[13,"Method","","A method within an impl block.",175,N],[13,"Type","","An associated type within an impl block.",175,N],[13,"Existential","","An existential type within an impl block.",175,N],[13,"Macro","","A macro invocation within an impl block.",175,N],[13,"Verbatim","","Tokens within an impl block not interpreted by Syn.",175,N],[4,"Item","","Things that can appear directly inside of a module or scope.",N,N],[13,"ExternCrate","","An `extern crate` item: `extern crate serde`.",176,N],[13,"Use","","A use declaration: `use std::collections::HashMap`.",176,N],[13,"Static","","A static item: `static BIKE: Shed = Shed(42)`.",176,N],[13,"Const","","A constant item: `const MAX: u16 = 65535`.",176,N],[13,"Fn","","A free-standing function: `fn process(n: usize) ->…",176,N],[13,"Mod","","A module or module declaration: `mod m` or `mod m { ... }`.",176,N],[13,"ForeignMod","","A block of foreign items: `extern \"C\" { ... }`.",176,N],[13,"Type","","A type alias: `type Result<T> = std::result::Result<T,…",176,N],[13,"Existential","","An existential type: `existential type Iter: Iterator<Item…",176,N],[13,"Struct","","A struct definition: `struct Foo<A> { x: A }`.",176,N],[13,"Enum","","An enum definition: `enum Foo<A, B> { C<A>, D<B> }`.",176,N],[13,"Union","","A union definition: `union Foo<A, B> { x: A, y: B }`.",176,N],[13,"Trait","","A trait definition: `pub trait Iterator { ... }`.",176,N],[13,"TraitAlias","","A trait alias: `pub trait SharableIterator = Iterator +…",176,N],[13,"Impl","","An impl block providing trait or associated items:…",176,N],[13,"Macro","","A macro invocation, which includes `macro_rules!`…",176,N],[13,"Macro2","","A 2.0-style declarative macro introduced by the `macro`…",176,N],[13,"Verbatim","","Tokens forming an item not interpreted by Syn.",176,N],[4,"TraitItem","","An item declaration within the definition of a trait.",N,N],[13,"Const","","An associated constant within the definition of a trait.",177,N],[13,"Method","","A trait method within the definition of a trait.",177,N],[13,"Type","","An associated type within the definition of a trait.",177,N],[13,"Macro","","A macro invocation within the definition of a trait.",177,N],[13,"Verbatim","","Tokens within the definition of a trait not interpreted by…",177,N],[4,"UseTree","","A suffix of an import tree in a `use` item: `Type as…",N,N],[13,"Path","","A path prefix of imports in a `use` item: `std::...`.",178,N],[13,"Name","","An identifier imported by a `use` item: `HashMap`.",178,N],[13,"Rename","","An renamed identifier imported by a `use` item: `HashMap…",178,N],[13,"Glob","","A glob import in a `use` item: `*`.",178,N],[13,"Group","","A braced group of imports in a `use` item: `{A, B, C}`.",178,N],[4,"FloatSuffix","","The suffix on a floating point literal if any, like the…",N,N],[13,"F32","","",179,N],[13,"F64","","",179,N],[13,"None","","",179,N],[4,"IntSuffix","","The suffix on an integer literal if any, like the `u8` in…",N,N],[13,"I8","","",180,N],[13,"I16","","",180,N],[13,"I32","","",180,N],[13,"I64","","",180,N],[13,"I128","","",180,N],[13,"Isize","","",180,N],[13,"U8","","",180,N],[13,"U16","","",180,N],[13,"U32","","",180,N],[13,"U64","","",180,N],[13,"U128","","",180,N],[13,"Usize","","",180,N],[13,"None","","",180,N],[4,"Lit","","A Rust literal such as a string or integer or boolean.",N,N],[13,"Str","","A UTF-8 string literal: `\"foo\"`.",181,N],[13,"ByteStr","","A byte string literal: `b\"foo\"`.",181,N],[13,"Byte","","A byte literal: `b'f'`.",181,N],[13,"Char","","A character literal: `'a'`.",181,N],[13,"Int","","An integer literal: `1` or `1u16`.",181,N],[13,"Float","","A floating point literal: `1f64` or `1.0e10f64`.",181,N],[13,"Bool","","A boolean literal: `true` or `false`.",181,N],[13,"Verbatim","","A raw token literal not interpreted by Syn, possibly…",181,N],[4,"StrStyle","","The style of a string literal, either plain quoted or a…",N,N],[13,"Cooked","","An ordinary string like `\"data\"`.",182,N],[13,"Raw","","A raw string like `r##\"data\"##`.",182,N],[4,"MacroDelimiter","","A grouping token that surrounds a macro body: `m!(...)` or…",N,N],[13,"Paren","","",183,N],[13,"Brace","","",183,N],[13,"Bracket","","",183,N],[4,"Data","","The storage of a struct, enum or union data structure.",N,N],[13,"Struct","","A struct input to a `proc_macro_derive` macro.",184,N],[13,"Enum","","An enum input to a `proc_macro_derive` macro.",184,N],[13,"Union","","A tagged union input to a `proc_macro_derive` macro.",184,N],[4,"BinOp","","A binary operator: `+`, `+=`, `&`.",N,N],[13,"Add","","The `+` operator (addition)",185,N],[13,"Sub","","The `-` operator (subtraction)",185,N],[13,"Mul","","The `*` operator (multiplication)",185,N],[13,"Div","","The `/` operator (division)",185,N],[13,"Rem","","The `%` operator (modulus)",185,N],[13,"And","","The `&&` operator (logical and)",185,N],[13,"Or","","The `||` operator (logical or)",185,N],[13,"BitXor","","The `^` operator (bitwise xor)",185,N],[13,"BitAnd","","The `&` operator (bitwise and)",185,N],[13,"BitOr","","The `|` operator (bitwise or)",185,N],[13,"Shl","","The `<<` operator (shift left)",185,N],[13,"Shr","","The `>>` operator (shift right)",185,N],[13,"Eq","","The `==` operator (equality)",185,N],[13,"Lt","","The `<` operator (less than)",185,N],[13,"Le","","The `<=` operator (less than or equal to)",185,N],[13,"Ne","","The `!=` operator (not equal to)",185,N],[13,"Ge","","The `>=` operator (greater than or equal to)",185,N],[13,"Gt","","The `>` operator (greater than)",185,N],[13,"AddEq","","The `+=` operator",185,N],[13,"SubEq","","The `-=` operator",185,N],[13,"MulEq","","The `*=` operator",185,N],[13,"DivEq","","The `/=` operator",185,N],[13,"RemEq","","The `%=` operator",185,N],[13,"BitXorEq","","The `^=` operator",185,N],[13,"BitAndEq","","The `&=` operator",185,N],[13,"BitOrEq","","The `|=` operator",185,N],[13,"ShlEq","","The `<<=` operator",185,N],[13,"ShrEq","","The `>>=` operator",185,N],[4,"UnOp","","A unary operator: `*`, `!`, `-`.",N,N],[13,"Deref","","The `*` operator for dereferencing",186,N],[13,"Not","","The `!` operator for logical inversion",186,N],[13,"Neg","","The `-` operator for negation",186,N],[4,"BareFnArgName","","Name of an argument in a function type: the `n` in `fn(n:…",N,N],[13,"Named","","Argument given a name.",187,N],[13,"Wild","","Argument not given a name, matched with `_`.",187,N],[4,"ReturnType","","Return type of a function signature.",N,N],[13,"Default","","Return type is not specified.",188,N],[13,"Type","","A particular type is returned.",188,N],[4,"Type","","The possible types that a Rust value could have.",N,N],[13,"Slice","","A dynamically sized slice type: `[T]`.",189,N],[13,"Array","","A fixed size array type: `[T; n]`.",189,N],[13,"Ptr","","A raw pointer type: `*const T` or `*mut T`.",189,N],[13,"Reference","","A reference type: `&'a T` or `&'a mut T`.",189,N],[13,"BareFn","","A bare function type: `fn(usize) -> bool`.",189,N],[13,"Never","","The never type: `!`.",189,N],[13,"Tuple","","A tuple type: `(A, B, C, String)`.",189,N],[13,"Path","","A path like `std::slice::Iter`, optionally qualified with…",189,N],[13,"TraitObject","","A trait object type `Bound1 + Bound2 + Bound3` where…",189,N],[13,"ImplTrait","","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a…",189,N],[13,"Paren","","A parenthesized type equivalent to the inner type.",189,N],[13,"Group","","A type contained within invisible delimiters.",189,N],[13,"Infer","","Indication that a type should be inferred by the compiler:…",189,N],[13,"Macro","","A macro in the type position.",189,N],[13,"Verbatim","","Tokens in type position not interpreted by Syn.",189,N],[4,"GenericArgument","","An individual generic argument, like `'a`, `T`, or `Item =…",N,N],[13,"Lifetime","","A lifetime argument.",190,N],[13,"Type","","A type argument.",190,N],[13,"Binding","","A binding (equality constraint) on an associated type: the…",190,N],[13,"Constraint","","An associated type bound: `Iterator<Item: Display>`.",190,N],[13,"Const","","A const expression. Must be inside of a block.",190,N],[4,"PathArguments","","Angle bracketed or parenthesized arguments of a path…",N,N],[13,"None","","",191,N],[13,"AngleBracketed","","The `<'a, T>` in `std::slice::iter<'a, T>`.",191,N],[13,"Parenthesized","","The `(A, B) -> C` in `Fn(A, B) -> C`.",191,N],[5,"parse","","Parse tokens of source code into the chosen syntax tree…",N,[[["tokenstream"]],["result"]]],[5,"parse2","","Parse a proc-macro2 token stream into the chosen syntax…",N,[[["tokenstream"]],["result"]]],[5,"parse_str","","Parse a string of Rust code into the chosen syntax tree…",N,[[["str"]],["result"]]],[5,"parse_file","","Parse the content of a file of Rust code.",N,[[["str"]],["result",["file"]]]],[0,"token","","Tokens representing Rust punctuation, keywords, and…",N,N],[3,"Underscore","syn::token","`_`",N,N],[12,"spans","","",192,N],[3,"Abstract","","`abstract`",N,N],[12,"span","","",193,N],[3,"As","","`as`",N,N],[12,"span","","",194,N],[3,"Async","","`async`",N,N],[12,"span","","",195,N],[3,"Auto","","`auto`",N,N],[12,"span","","",196,N],[3,"Become","","`become`",N,N],[12,"span","","",197,N],[3,"Box","","`box`",N,N],[12,"span","","",198,N],[3,"Break","","`break`",N,N],[12,"span","","",199,N],[3,"Const","","`const`",N,N],[12,"span","","",200,N],[3,"Continue","","`continue`",N,N],[12,"span","","",201,N],[3,"Crate","","`crate`",N,N],[12,"span","","",202,N],[3,"Default","","`default`",N,N],[12,"span","","",203,N],[3,"Do","","`do`",N,N],[12,"span","","",204,N],[3,"Dyn","","`dyn`",N,N],[12,"span","","",205,N],[3,"Else","","`else`",N,N],[12,"span","","",206,N],[3,"Enum","","`enum`",N,N],[12,"span","","",207,N],[3,"Existential","","`existential`",N,N],[12,"span","","",208,N],[3,"Extern","","`extern`",N,N],[12,"span","","",209,N],[3,"Final","","`final`",N,N],[12,"span","","",210,N],[3,"Fn","","`fn`",N,N],[12,"span","","",211,N],[3,"For","","`for`",N,N],[12,"span","","",212,N],[3,"If","","`if`",N,N],[12,"span","","",213,N],[3,"Impl","","`impl`",N,N],[12,"span","","",214,N],[3,"In","","`in`",N,N],[12,"span","","",215,N],[3,"Let","","`let`",N,N],[12,"span","","",216,N],[3,"Loop","","`loop`",N,N],[12,"span","","",217,N],[3,"Macro","","`macro`",N,N],[12,"span","","",218,N],[3,"Match","","`match`",N,N],[12,"span","","",219,N],[3,"Mod","","`mod`",N,N],[12,"span","","",220,N],[3,"Move","","`move`",N,N],[12,"span","","",221,N],[3,"Mut","","`mut`",N,N],[12,"span","","",222,N],[3,"Override","","`override`",N,N],[12,"span","","",223,N],[3,"Priv","","`priv`",N,N],[12,"span","","",224,N],[3,"Pub","","`pub`",N,N],[12,"span","","",225,N],[3,"Ref","","`ref`",N,N],[12,"span","","",226,N],[3,"Return","","`return`",N,N],[12,"span","","",227,N],[3,"SelfType","","`Self`",N,N],[12,"span","","",228,N],[3,"SelfValue","","`self`",N,N],[12,"span","","",229,N],[3,"Static","","`static`",N,N],[12,"span","","",230,N],[3,"Struct","","`struct`",N,N],[12,"span","","",231,N],[3,"Super","","`super`",N,N],[12,"span","","",232,N],[3,"Trait","","`trait`",N,N],[12,"span","","",233,N],[3,"Try","","`try`",N,N],[12,"span","","",234,N],[3,"Type","","`type`",N,N],[12,"span","","",235,N],[3,"Typeof","","`typeof`",N,N],[12,"span","","",236,N],[3,"Union","","`union`",N,N],[12,"span","","",237,N],[3,"Unsafe","","`unsafe`",N,N],[12,"span","","",238,N],[3,"Unsized","","`unsized`",N,N],[12,"span","","",239,N],[3,"Use","","`use`",N,N],[12,"span","","",240,N],[3,"Virtual","","`virtual`",N,N],[12,"span","","",241,N],[3,"Where","","`where`",N,N],[12,"span","","",242,N],[3,"While","","`while`",N,N],[12,"span","","",243,N],[3,"Yield","","`yield`",N,N],[12,"span","","",244,N],[3,"Add","","`+`",N,N],[12,"spans","","",245,N],[3,"AddEq","","`+=`",N,N],[12,"spans","","",246,N],[3,"And","","`&`",N,N],[12,"spans","","",247,N],[3,"AndAnd","","`&&`",N,N],[12,"spans","","",248,N],[3,"AndEq","","`&=`",N,N],[12,"spans","","",249,N],[3,"At","","`@`",N,N],[12,"spans","","",250,N],[3,"Bang","","`!`",N,N],[12,"spans","","",251,N],[3,"Caret","","`^`",N,N],[12,"spans","","",252,N],[3,"CaretEq","","`^=`",N,N],[12,"spans","","",253,N],[3,"Colon","","`:`",N,N],[12,"spans","","",254,N],[3,"Colon2","","`::`",N,N],[12,"spans","","",255,N],[3,"Comma","","`,`",N,N],[12,"spans","","",256,N],[3,"Div","","`/`",N,N],[12,"spans","","",257,N],[3,"DivEq","","`/=`",N,N],[12,"spans","","",258,N],[3,"Dollar","","`$`",N,N],[12,"spans","","",259,N],[3,"Dot","","`.`",N,N],[12,"spans","","",260,N],[3,"Dot2","","`..`",N,N],[12,"spans","","",261,N],[3,"Dot3","","`...`",N,N],[12,"spans","","",262,N],[3,"DotDotEq","","`..=`",N,N],[12,"spans","","",263,N],[3,"Eq","","`=`",N,N],[12,"spans","","",264,N],[3,"EqEq","","`==`",N,N],[12,"spans","","",265,N],[3,"Ge","","`>=`",N,N],[12,"spans","","",266,N],[3,"Gt","","`>`",N,N],[12,"spans","","",267,N],[3,"Le","","`<=`",N,N],[12,"spans","","",268,N],[3,"Lt","","`<`",N,N],[12,"spans","","",269,N],[3,"MulEq","","`*=`",N,N],[12,"spans","","",270,N],[3,"Ne","","`!=`",N,N],[12,"spans","","",271,N],[3,"Or","","`|`",N,N],[12,"spans","","",272,N],[3,"OrEq","","`|=`",N,N],[12,"spans","","",273,N],[3,"OrOr","","`||`",N,N],[12,"spans","","",274,N],[3,"Pound","","`#`",N,N],[12,"spans","","",275,N],[3,"Question","","`?`",N,N],[12,"spans","","",276,N],[3,"RArrow","","`->`",N,N],[12,"spans","","",277,N],[3,"LArrow","","`<-`",N,N],[12,"spans","","",278,N],[3,"Rem","","`%`",N,N],[12,"spans","","",279,N],[3,"RemEq","","`%=`",N,N],[12,"spans","","",280,N],[3,"FatArrow","","`=>`",N,N],[12,"spans","","",281,N],[3,"Semi","","`;`",N,N],[12,"spans","","",282,N],[3,"Shl","","`<<`",N,N],[12,"spans","","",283,N],[3,"ShlEq","","`<<=`",N,N],[12,"spans","","",284,N],[3,"Shr","","`>>`",N,N],[12,"spans","","",285,N],[3,"ShrEq","","`>>=`",N,N],[12,"spans","","",286,N],[3,"Star","","`*`",N,N],[12,"spans","","",287,N],[3,"Sub","","`-`",N,N],[12,"spans","","",288,N],[3,"SubEq","","`-=`",N,N],[12,"spans","","",289,N],[3,"Tilde","","`~`",N,N],[12,"spans","","",290,N],[3,"Brace","","`{...}`",N,N],[12,"span","","",291,N],[3,"Bracket","","`[...]`",N,N],[12,"span","","",292,N],[3,"Paren","","`(...)`",N,N],[12,"span","","",293,N],[3,"Group","","None-delimited group",N,N],[12,"span","","",294,N],[8,"Token","","Marker trait for types that represent single tokens.",N,N],[11,"surround","","",291,[[["self"],["tokenstream"],["f"]]]],[11,"surround","","",292,[[["self"],["tokenstream"],["f"]]]],[11,"surround","","",293,[[["self"],["tokenstream"],["f"]]]],[11,"surround","","",294,[[["self"],["tokenstream"],["f"]]]],[11,"parse_meta","syn","Parses the tokens after the path as a `Meta` if possible.",0,[[["self"]],["result",["meta"]]]],[11,"parse_outer","","Parses zero or more outer attributes from the stream.",0,[[["parsestream"]],["result",["vec"]]]],[11,"parse_inner","","Parses zero or more inner attributes from the stream.",0,[[["parsestream"]],["result",["vec"]]]],[11,"name","","Returns the identifier that begins this structured meta…",159,[[["self"]],["ident"]]],[11,"parse_named","","Parses a named (braced struct) field.",3,[[["parsestream"]],["result"]]],[11,"parse_unnamed","","Parses an unnamed (tuple struct) field.",3,[[["parsestream"]],["result"]]],[11,"iter","","Get an iterator over the borrowed [`Field`] items in this…",161,[[["self"]],["iter",["field"]]]],[11,"iter_mut","","Get an iterator over the mutably borrowed [`Field`] items…",161,[[["self"]],["itermut",["field"]]]],[11,"parse_within","","Parse the body of a block as zero or more statements,…",52,[[["parsestream"]],["result",["vec"]]]],[11,"type_params","","Returns an Iterator<Item = &TypeParam> over the type…",73,[[["self"]],["typeparams"]]],[11,"type_params_mut","","Returns an Iterator<Item = &mut TypeParam> over the type…",73,[[["self"]],["typeparamsmut"]]],[11,"lifetimes","","Returns an Iterator<Item = &LifetimeDef> over the lifetime…",73,[[["self"]],["lifetimes"]]],[11,"lifetimes_mut","","Returns an Iterator<Item = &mut LifetimeDef> over the…",73,[[["self"]],["lifetimesmut"]]],[11,"const_params","","Returns an Iterator<Item = &ConstParam> over the constant…",73,[[["self"]],["constparams"]]],[11,"const_params_mut","","Returns an Iterator<Item = &mut ConstParam> over the…",73,[[["self"]],["constparamsmut"]]],[11,"make_where_clause","","Initializes an empty `where`-clause if there is not one…",73,[[["self"]],["whereclause"]]],[11,"split_for_impl","","Split a type's generics into the pieces required for…",73,N],[11,"as_turbofish","","Turn a type's generics like `<X, Y>` into a turbofish like…",295,[[["self"]],["turbofish"]]],[11,"new","","",74,[[["lifetime"]],["self"]]],[11,"new","","Panics",126,[[["str"],["span"]],["self"]]],[11,"new","","Interpret a Syn literal from a proc-macro2 literal.",181,[[["literal"]],["self"]]],[11,"new","","",296,[[["str"],["span"]],["self"]]],[11,"value","","",296,[[["self"]],["string"]]],[11,"parse","","Parse a syntax tree node from the content of this string…",296,[[["self"]],["result",["error"]]]],[11,"span","","",296,[[["self"]],["span"]]],[11,"set_span","","",296,[[["self"],["span"]]]],[11,"new","","",297,N],[11,"value","","",297,[[["self"]],["vec",["u8"]]]],[11,"span","","",297,[[["self"]],["span"]]],[11,"set_span","","",297,[[["self"],["span"]]]],[11,"new","","",298,[[["u8"],["span"]],["self"]]],[11,"value","","",298,[[["self"]],["u8"]]],[11,"span","","",298,[[["self"]],["span"]]],[11,"set_span","","",298,[[["self"],["span"]]]],[11,"new","","",299,[[["char"],["span"]],["self"]]],[11,"value","","",299,[[["self"]],["char"]]],[11,"span","","",299,[[["self"]],["span"]]],[11,"set_span","","",299,[[["self"],["span"]]]],[11,"new","","",300,[[["u64"],["intsuffix"],["span"]],["self"]]],[11,"value","","",300,[[["self"]],["u64"]]],[11,"suffix","","",300,[[["self"]],["intsuffix"]]],[11,"span","","",300,[[["self"]],["span"]]],[11,"set_span","","",300,[[["self"],["span"]]]],[11,"new","","",301,[[["f64"],["floatsuffix"],["span"]],["self"]]],[11,"value","","",301,[[["self"]],["f64"]]],[11,"suffix","","",301,[[["self"]],["floatsuffix"]]],[11,"span","","",301,[[["self"]],["span"]]],[11,"set_span","","",301,[[["self"],["span"]]]],[11,"span","","",128,[[["self"]],["span"]]],[11,"set_span","","",128,[[["self"],["span"]]]],[11,"without_plus","","In some positions, types may not contain the `+`…",189,[[["parsestream"]],["result"]]],[11,"without_plus","","",188,[[["parsestream"]],["result"]]],[11,"parse","","",188,[[["parsestream"],["bool"]],["result"]]],[11,"without_plus","","",148,[[["parsestream"]],["result"]]],[11,"parse","","",148,[[["parsestream"],["bool"]],["result"]]],[11,"parse_mod_style","","Parse a `Path` containing no path arguments on any of its…",155,[[["parsestream"]],["result"]]],[11,"is_ident","","Determines whether this is a path of length 1 equal to the…",155,[[["self"],["i"]],["bool"]]],[11,"is_empty","","",191,[[["self"]],["bool"]]],[0,"buffer","","A stably addressed token buffer supporting efficient…",N,N],[3,"TokenBuffer","syn::buffer","A buffer that can be efficiently traversed multiple times,…",N,N],[3,"Cursor","","A cheaply copyable cursor into a `TokenBuffer`.",N,N],[11,"new","","Creates a `TokenBuffer` containing all the tokens from the…",302,[[["tokenstream"]],["tokenbuffer"]]],[11,"new2","","Creates a `TokenBuffer` containing all the tokens from the…",302,[[["tokenstream"]],["tokenbuffer"]]],[11,"begin","","Creates a cursor referencing the first token in the buffer…",302,[[["self"]],["cursor"]]],[11,"empty","","Creates a cursor referencing a static empty TokenStream.",303,[[],["self"]]],[11,"eof","","Checks whether the cursor is currently pointing at the end…",303,[[["self"]],["bool"]]],[11,"group","","If the cursor is pointing at a `Group` with the given…",303,[[["self"],["delimiter"]],["option"]]],[11,"ident","","If the cursor is pointing at a `Ident`, returns it along…",303,[[["self"]],["option"]]],[11,"punct","","If the cursor is pointing at an `Punct`, returns it along…",303,[[["self"]],["option"]]],[11,"literal","","If the cursor is pointing at a `Literal`, return it along…",303,[[["self"]],["option"]]],[11,"lifetime","","If the cursor is pointing at a `Lifetime`, returns it…",303,[[["self"]],["option"]]],[11,"token_stream","","Copies all remaining tokens visible from this cursor into…",303,[[["self"]],["tokenstream"]]],[11,"token_tree","","If the cursor is pointing at a `TokenTree`, returns it…",303,[[["self"]],["option"]]],[11,"span","","Returns the `Span` of the current token, or…",303,[[["self"]],["span"]]],[0,"ext","syn","Extension traits to provide parsing methods on foreign…",N,N],[8,"IdentExt","syn::ext","Additional parsing methods for `Ident`.",N,N],[10,"parse_any","","Parses any identifier including keywords.",304,[[["parsestream"]],["result"]]],[0,"punctuated","syn","A punctuated sequence of syntax tree nodes separated by…",N,N],[3,"Punctuated","syn::punctuated","A punctuated sequence of syntax tree nodes of type `T`…",N,N],[3,"Pairs","","An iterator over borrowed pairs of type `Pair<&T, &P>`.",N,N],[3,"PairsMut","","An iterator over mutably borrowed pairs of type `Pair<&mut…",N,N],[3,"IntoPairs","","An iterator over owned pairs of type `Pair<T, P>`.",N,N],[3,"IntoIter","","An iterator over owned values of type `T`.",N,N],[3,"Iter","","An iterator over borrowed values of type `&T`.",N,N],[3,"IterMut","","An iterator over mutably borrowed values of type `&mut T`.",N,N],[4,"Pair","","A single syntax tree node of type `T` followed by its…",N,N],[13,"Punctuated","","",305,N],[13,"End","","",305,N],[11,"new","","Creates an empty punctuated sequence.",306,[[],["punctuated"]]],[11,"is_empty","","Determines whether this punctuated sequence is empty,…",306,[[["self"]],["bool"]]],[11,"len","","Returns the number of syntax tree nodes in this punctuated…",306,[[["self"]],["usize"]]],[11,"first","","Borrows the first punctuated pair in this sequence.",306,[[["self"]],["option",["pair"]]]],[11,"last","","Borrows the last punctuated pair in this sequence.",306,[[["self"]],["option",["pair"]]]],[11,"last_mut","","Mutably borrows the last punctuated pair in this sequence.",306,[[["self"]],["option",["pair"]]]],[11,"iter","","Returns an iterator over borrowed syntax tree nodes of…",306,[[["self"]],["iter"]]],[11,"iter_mut","","Returns an iterator over mutably borrowed syntax tree…",306,[[["self"]],["itermut"]]],[11,"pairs","","Returns an iterator over the contents of this sequence as…",306,[[["self"]],["pairs"]]],[11,"pairs_mut","","Returns an iterator over the contents of this sequence as…",306,[[["self"]],["pairsmut"]]],[11,"into_pairs","","Returns an iterator over the contents of this sequence as…",306,[[["self"]],["intopairs"]]],[11,"push_value","","Appends a syntax tree node onto the end of this punctuated…",306,[[["self"],["t"]]]],[11,"push_punct","","Appends a trailing punctuation onto the end of this…",306,[[["self"],["p"]]]],[11,"pop","","Removes the last punctuated pair from this sequence, or…",306,[[["self"]],["option",["pair"]]]],[11,"trailing_punct","","Determines whether this punctuated sequence ends with a…",306,[[["self"]],["bool"]]],[11,"empty_or_trailing","","Returns true if either this `Punctuated` is empty, or it…",306,[[["self"]],["bool"]]],[11,"push","","Appends a syntax tree node onto the end of this punctuated…",306,[[["self"],["t"]]]],[11,"insert","","Inserts an element at position `index`.",306,[[["self"],["usize"],["t"]]]],[11,"parse_terminated","","Parses zero or more occurrences of `T` separated by…",306,[[["parsestream"]],["result"]]],[11,"parse_terminated_with","","Parses zero or more occurrences of `T` using the given…",306,N],[11,"parse_separated_nonempty","","Parses one or more occurrences of `T` separated by…",306,[[["parsestream"]],["result"]]],[11,"parse_separated_nonempty_with","","Parses one or more occurrences of `T` using the given…",306,N],[11,"into_value","","Extracts the syntax tree node from this punctuated pair,…",305,[[["self"]],["t"]]],[11,"value","","Borrows the syntax tree node from this punctuated pair.",305,[[["self"]],["t"]]],[11,"value_mut","","Mutably borrows the syntax tree node from this punctuated…",305,[[["self"]],["t"]]],[11,"punct","","Borrows the punctuation from this punctuated pair, unless…",305,[[["self"]],["option"]]],[11,"new","","Creates a punctuated pair out of a syntax tree node and an…",305,[[["t"],["option"]],["self"]]],[11,"into_tuple","","Produces this punctuated pair as a tuple of syntax tree…",305,N],[0,"spanned","syn","A trait that can provide the `Span` of the complete…",N,N],[8,"Spanned","syn::spanned","A trait that can provide the `Span` of the complete…",N,N],[10,"span","","Returns a `Span` covering the complete contents of this…",307,[[["self"]],["span"]]],[0,"visit","syn","Syntax tree traversal to walk a shared borrow of a syntax…",N,N],[5,"visit_abi","syn::visit","",N,[[["v"],["abi"]]]],[5,"visit_angle_bracketed_generic_arguments","","",N,[[["v"],["anglebracketedgenericarguments"]]]],[5,"visit_arg_captured","","",N,[[["v"],["argcaptured"]]]],[5,"visit_arg_self","","",N,[[["v"],["argself"]]]],[5,"visit_arg_self_ref","","",N,[[["v"],["argselfref"]]]],[5,"visit_arm","","",N,[[["v"],["arm"]]]],[5,"visit_attr_style","","",N,[[["v"],["attrstyle"]]]],[5,"visit_attribute","","",N,[[["v"],["attribute"]]]],[5,"visit_bare_fn_arg","","",N,[[["v"],["barefnarg"]]]],[5,"visit_bare_fn_arg_name","","",N,[[["v"],["barefnargname"]]]],[5,"visit_bin_op","","",N,[[["v"],["binop"]]]],[5,"visit_binding","","",N,[[["v"],["binding"]]]],[5,"visit_block","","",N,[[["v"],["block"]]]],[5,"visit_bound_lifetimes","","",N,[[["v"],["boundlifetimes"]]]],[5,"visit_const_param","","",N,[[["v"],["constparam"]]]],[5,"visit_constraint","","",N,[[["v"],["constraint"]]]],[5,"visit_data","","",N,[[["v"],["data"]]]],[5,"visit_data_enum","","",N,[[["v"],["dataenum"]]]],[5,"visit_data_struct","","",N,[[["v"],["datastruct"]]]],[5,"visit_data_union","","",N,[[["v"],["dataunion"]]]],[5,"visit_derive_input","","",N,[[["v"],["deriveinput"]]]],[5,"visit_expr","","",N,[[["v"],["expr"]]]],[5,"visit_expr_array","","",N,[[["v"],["exprarray"]]]],[5,"visit_expr_assign","","",N,[[["v"],["exprassign"]]]],[5,"visit_expr_assign_op","","",N,[[["v"],["exprassignop"]]]],[5,"visit_expr_async","","",N,[[["v"],["exprasync"]]]],[5,"visit_expr_binary","","",N,[[["v"],["exprbinary"]]]],[5,"visit_expr_block","","",N,[[["v"],["exprblock"]]]],[5,"visit_expr_box","","",N,[[["v"],["exprbox"]]]],[5,"visit_expr_break","","",N,[[["v"],["exprbreak"]]]],[5,"visit_expr_call","","",N,[[["v"],["exprcall"]]]],[5,"visit_expr_cast","","",N,[[["v"],["exprcast"]]]],[5,"visit_expr_closure","","",N,[[["v"],["exprclosure"]]]],[5,"visit_expr_continue","","",N,[[["v"],["exprcontinue"]]]],[5,"visit_expr_field","","",N,[[["v"],["exprfield"]]]],[5,"visit_expr_for_loop","","",N,[[["v"],["exprforloop"]]]],[5,"visit_expr_group","","",N,[[["v"],["exprgroup"]]]],[5,"visit_expr_if","","",N,[[["v"],["exprif"]]]],[5,"visit_expr_in_place","","",N,[[["v"],["exprinplace"]]]],[5,"visit_expr_index","","",N,[[["v"],["exprindex"]]]],[5,"visit_expr_let","","",N,[[["v"],["exprlet"]]]],[5,"visit_expr_lit","","",N,[[["v"],["exprlit"]]]],[5,"visit_expr_loop","","",N,[[["v"],["exprloop"]]]],[5,"visit_expr_macro","","",N,[[["v"],["exprmacro"]]]],[5,"visit_expr_match","","",N,[[["v"],["exprmatch"]]]],[5,"visit_expr_method_call","","",N,[[["v"],["exprmethodcall"]]]],[5,"visit_expr_paren","","",N,[[["v"],["exprparen"]]]],[5,"visit_expr_path","","",N,[[["v"],["exprpath"]]]],[5,"visit_expr_range","","",N,[[["v"],["exprrange"]]]],[5,"visit_expr_reference","","",N,[[["v"],["exprreference"]]]],[5,"visit_expr_repeat","","",N,[[["v"],["exprrepeat"]]]],[5,"visit_expr_return","","",N,[[["v"],["exprreturn"]]]],[5,"visit_expr_struct","","",N,[[["v"],["exprstruct"]]]],[5,"visit_expr_try","","",N,[[["v"],["exprtry"]]]],[5,"visit_expr_try_block","","",N,[[["v"],["exprtryblock"]]]],[5,"visit_expr_tuple","","",N,[[["v"],["exprtuple"]]]],[5,"visit_expr_type","","",N,[[["v"],["exprtype"]]]],[5,"visit_expr_unary","","",N,[[["v"],["exprunary"]]]],[5,"visit_expr_unsafe","","",N,[[["v"],["exprunsafe"]]]],[5,"visit_expr_verbatim","","",N,[[["v"],["exprverbatim"]]]],[5,"visit_expr_while","","",N,[[["v"],["exprwhile"]]]],[5,"visit_expr_yield","","",N,[[["v"],["expryield"]]]],[5,"visit_field","","",N,[[["v"],["field"]]]],[5,"visit_field_pat","","",N,[[["v"],["fieldpat"]]]],[5,"visit_field_value","","",N,[[["v"],["fieldvalue"]]]],[5,"visit_fields","","",N,[[["v"],["fields"]]]],[5,"visit_fields_named","","",N,[[["v"],["fieldsnamed"]]]],[5,"visit_fields_unnamed","","",N,[[["v"],["fieldsunnamed"]]]],[5,"visit_file","","",N,[[["v"],["file"]]]],[5,"visit_fn_arg","","",N,[[["v"],["fnarg"]]]],[5,"visit_fn_decl","","",N,[[["v"],["fndecl"]]]],[5,"visit_foreign_item","","",N,[[["v"],["foreignitem"]]]],[5,"visit_foreign_item_fn","","",N,[[["v"],["foreignitemfn"]]]],[5,"visit_foreign_item_macro","","",N,[[["v"],["foreignitemmacro"]]]],[5,"visit_foreign_item_static","","",N,[[["v"],["foreignitemstatic"]]]],[5,"visit_foreign_item_type","","",N,[[["v"],["foreignitemtype"]]]],[5,"visit_foreign_item_verbatim","","",N,[[["v"],["foreignitemverbatim"]]]],[5,"visit_generic_argument","","",N,[[["v"],["genericargument"]]]],[5,"visit_generic_method_argument","","",N,[[["v"],["genericmethodargument"]]]],[5,"visit_generic_param","","",N,[[["v"],["genericparam"]]]],[5,"visit_generics","","",N,[[["v"],["generics"]]]],[5,"visit_ident","","",N,[[["v"],["ident"]]]],[5,"visit_impl_item","","",N,[[["v"],["implitem"]]]],[5,"visit_impl_item_const","","",N,[[["v"],["implitemconst"]]]],[5,"visit_impl_item_existential","","",N,[[["v"],["implitemexistential"]]]],[5,"visit_impl_item_macro","","",N,[[["v"],["implitemmacro"]]]],[5,"visit_impl_item_method","","",N,[[["v"],["implitemmethod"]]]],[5,"visit_impl_item_type","","",N,[[["v"],["implitemtype"]]]],[5,"visit_impl_item_verbatim","","",N,[[["v"],["implitemverbatim"]]]],[5,"visit_index","","",N,[[["v"],["index"]]]],[5,"visit_item","","",N,[[["v"],["item"]]]],[5,"visit_item_const","","",N,[[["v"],["itemconst"]]]],[5,"visit_item_enum","","",N,[[["v"],["itemenum"]]]],[5,"visit_item_existential","","",N,[[["v"],["itemexistential"]]]],[5,"visit_item_extern_crate","","",N,[[["v"],["itemexterncrate"]]]],[5,"visit_item_fn","","",N,[[["v"],["itemfn"]]]],[5,"visit_item_foreign_mod","","",N,[[["v"],["itemforeignmod"]]]],[5,"visit_item_impl","","",N,[[["v"],["itemimpl"]]]],[5,"visit_item_macro","","",N,[[["v"],["itemmacro"]]]],[5,"visit_item_macro2","","",N,[[["v"],["itemmacro2"]]]],[5,"visit_item_mod","","",N,[[["v"],["itemmod"]]]],[5,"visit_item_static","","",N,[[["v"],["itemstatic"]]]],[5,"visit_item_struct","","",N,[[["v"],["itemstruct"]]]],[5,"visit_item_trait","","",N,[[["v"],["itemtrait"]]]],[5,"visit_item_trait_alias","","",N,[[["v"],["itemtraitalias"]]]],[5,"visit_item_type","","",N,[[["v"],["itemtype"]]]],[5,"visit_item_union","","",N,[[["v"],["itemunion"]]]],[5,"visit_item_use","","",N,[[["v"],["itemuse"]]]],[5,"visit_item_verbatim","","",N,[[["v"],["itemverbatim"]]]],[5,"visit_label","","",N,[[["v"],["label"]]]],[5,"visit_lifetime","","",N,[[["v"],["lifetime"]]]],[5,"visit_lifetime_def","","",N,[[["v"],["lifetimedef"]]]],[5,"visit_lit","","",N,[[["v"],["lit"]]]],[5,"visit_lit_bool","","",N,[[["v"],["litbool"]]]],[5,"visit_lit_byte","","",N,[[["v"],["litbyte"]]]],[5,"visit_lit_byte_str","","",N,[[["v"],["litbytestr"]]]],[5,"visit_lit_char","","",N,[[["v"],["litchar"]]]],[5,"visit_lit_float","","",N,[[["v"],["litfloat"]]]],[5,"visit_lit_int","","",N,[[["v"],["litint"]]]],[5,"visit_lit_str","","",N,[[["v"],["litstr"]]]],[5,"visit_lit_verbatim","","",N,[[["v"],["litverbatim"]]]],[5,"visit_local","","",N,[[["v"],["local"]]]],[5,"visit_macro","","",N,[[["v"],["macro"]]]],[5,"visit_macro_delimiter","","",N,[[["v"],["macrodelimiter"]]]],[5,"visit_member","","",N,[[["v"],["member"]]]],[5,"visit_meta","","",N,[[["v"],["meta"]]]],[5,"visit_meta_list","","",N,[[["v"],["metalist"]]]],[5,"visit_meta_name_value","","",N,[[["v"],["metanamevalue"]]]],[5,"visit_method_sig","","",N,[[["v"],["methodsig"]]]],[5,"visit_method_turbofish","","",N,[[["v"],["methodturbofish"]]]],[5,"visit_nested_meta","","",N,[[["v"],["nestedmeta"]]]],[5,"visit_parenthesized_generic_arguments","","",N,[[["v"],["parenthesizedgenericarguments"]]]],[5,"visit_pat","","",N,[[["v"],["pat"]]]],[5,"visit_pat_box","","",N,[[["v"],["patbox"]]]],[5,"visit_pat_ident","","",N,[[["v"],["patident"]]]],[5,"visit_pat_lit","","",N,[[["v"],["patlit"]]]],[5,"visit_pat_macro","","",N,[[["v"],["patmacro"]]]],[5,"visit_pat_path","","",N,[[["v"],["patpath"]]]],[5,"visit_pat_range","","",N,[[["v"],["patrange"]]]],[5,"visit_pat_ref","","",N,[[["v"],["patref"]]]],[5,"visit_pat_slice","","",N,[[["v"],["patslice"]]]],[5,"visit_pat_struct","","",N,[[["v"],["patstruct"]]]],[5,"visit_pat_tuple","","",N,[[["v"],["pattuple"]]]],[5,"visit_pat_tuple_struct","","",N,[[["v"],["pattuplestruct"]]]],[5,"visit_pat_verbatim","","",N,[[["v"],["patverbatim"]]]],[5,"visit_pat_wild","","",N,[[["v"],["patwild"]]]],[5,"visit_path","","",N,[[["v"],["path"]]]],[5,"visit_path_arguments","","",N,[[["v"],["patharguments"]]]],[5,"visit_path_segment","","",N,[[["v"],["pathsegment"]]]],[5,"visit_predicate_eq","","",N,[[["v"],["predicateeq"]]]],[5,"visit_predicate_lifetime","","",N,[[["v"],["predicatelifetime"]]]],[5,"visit_predicate_type","","",N,[[["v"],["predicatetype"]]]],[5,"visit_qself","","",N,[[["v"],["qself"]]]],[5,"visit_range_limits","","",N,[[["v"],["rangelimits"]]]],[5,"visit_return_type","","",N,[[["v"],["returntype"]]]],[5,"visit_span","","",N,[[["v"],["span"]]]],[5,"visit_stmt","","",N,[[["v"],["stmt"]]]],[5,"visit_trait_bound","","",N,[[["v"],["traitbound"]]]],[5,"visit_trait_bound_modifier","","",N,[[["v"],["traitboundmodifier"]]]],[5,"visit_trait_item","","",N,[[["v"],["traititem"]]]],[5,"visit_trait_item_const","","",N,[[["v"],["traititemconst"]]]],[5,"visit_trait_item_macro","","",N,[[["v"],["traititemmacro"]]]],[5,"visit_trait_item_method","","",N,[[["v"],["traititemmethod"]]]],[5,"visit_trait_item_type","","",N,[[["v"],["traititemtype"]]]],[5,"visit_trait_item_verbatim","","",N,[[["v"],["traititemverbatim"]]]],[5,"visit_type","","",N,[[["v"],["type"]]]],[5,"visit_type_array","","",N,[[["v"],["typearray"]]]],[5,"visit_type_bare_fn","","",N,[[["v"],["typebarefn"]]]],[5,"visit_type_group","","",N,[[["v"],["typegroup"]]]],[5,"visit_type_impl_trait","","",N,[[["v"],["typeimpltrait"]]]],[5,"visit_type_infer","","",N,[[["v"],["typeinfer"]]]],[5,"visit_type_macro","","",N,[[["v"],["typemacro"]]]],[5,"visit_type_never","","",N,[[["v"],["typenever"]]]],[5,"visit_type_param","","",N,[[["v"],["typeparam"]]]],[5,"visit_type_param_bound","","",N,[[["v"],["typeparambound"]]]],[5,"visit_type_paren","","",N,[[["v"],["typeparen"]]]],[5,"visit_type_path","","",N,[[["v"],["typepath"]]]],[5,"visit_type_ptr","","",N,[[["v"],["typeptr"]]]],[5,"visit_type_reference","","",N,[[["v"],["typereference"]]]],[5,"visit_type_slice","","",N,[[["v"],["typeslice"]]]],[5,"visit_type_trait_object","","",N,[[["v"],["typetraitobject"]]]],[5,"visit_type_tuple","","",N,[[["v"],["typetuple"]]]],[5,"visit_type_verbatim","","",N,[[["v"],["typeverbatim"]]]],[5,"visit_un_op","","",N,[[["v"],["unop"]]]],[5,"visit_use_glob","","",N,[[["v"],["useglob"]]]],[5,"visit_use_group","","",N,[[["v"],["usegroup"]]]],[5,"visit_use_name","","",N,[[["v"],["usename"]]]],[5,"visit_use_path","","",N,[[["v"],["usepath"]]]],[5,"visit_use_rename","","",N,[[["v"],["userename"]]]],[5,"visit_use_tree","","",N,[[["v"],["usetree"]]]],[5,"visit_variant","","",N,[[["v"],["variant"]]]],[5,"visit_vis_crate","","",N,[[["v"],["viscrate"]]]],[5,"visit_vis_public","","",N,[[["v"],["vispublic"]]]],[5,"visit_vis_restricted","","",N,[[["v"],["visrestricted"]]]],[5,"visit_visibility","","",N,[[["v"],["visibility"]]]],[5,"visit_where_clause","","",N,[[["v"],["whereclause"]]]],[5,"visit_where_predicate","","",N,[[["v"],["wherepredicate"]]]],[8,"Visit","","Syntax tree traversal to walk a shared borrow of a syntax…",N,N],[11,"visit_abi","","",308,[[["self"],["abi"]]]],[11,"visit_angle_bracketed_generic_arguments","","",308,[[["self"],["anglebracketedgenericarguments"]]]],[11,"visit_arg_captured","","",308,[[["self"],["argcaptured"]]]],[11,"visit_arg_self","","",308,[[["self"],["argself"]]]],[11,"visit_arg_self_ref","","",308,[[["self"],["argselfref"]]]],[11,"visit_arm","","",308,[[["self"],["arm"]]]],[11,"visit_attr_style","","",308,[[["self"],["attrstyle"]]]],[11,"visit_attribute","","",308,[[["self"],["attribute"]]]],[11,"visit_bare_fn_arg","","",308,[[["self"],["barefnarg"]]]],[11,"visit_bare_fn_arg_name","","",308,[[["self"],["barefnargname"]]]],[11,"visit_bin_op","","",308,[[["self"],["binop"]]]],[11,"visit_binding","","",308,[[["self"],["binding"]]]],[11,"visit_block","","",308,[[["self"],["block"]]]],[11,"visit_bound_lifetimes","","",308,[[["self"],["boundlifetimes"]]]],[11,"visit_const_param","","",308,[[["self"],["constparam"]]]],[11,"visit_constraint","","",308,[[["self"],["constraint"]]]],[11,"visit_data","","",308,[[["self"],["data"]]]],[11,"visit_data_enum","","",308,[[["self"],["dataenum"]]]],[11,"visit_data_struct","","",308,[[["self"],["datastruct"]]]],[11,"visit_data_union","","",308,[[["self"],["dataunion"]]]],[11,"visit_derive_input","","",308,[[["self"],["deriveinput"]]]],[11,"visit_expr","","",308,[[["self"],["expr"]]]],[11,"visit_expr_array","","",308,[[["self"],["exprarray"]]]],[11,"visit_expr_assign","","",308,[[["self"],["exprassign"]]]],[11,"visit_expr_assign_op","","",308,[[["self"],["exprassignop"]]]],[11,"visit_expr_async","","",308,[[["self"],["exprasync"]]]],[11,"visit_expr_binary","","",308,[[["self"],["exprbinary"]]]],[11,"visit_expr_block","","",308,[[["self"],["exprblock"]]]],[11,"visit_expr_box","","",308,[[["self"],["exprbox"]]]],[11,"visit_expr_break","","",308,[[["self"],["exprbreak"]]]],[11,"visit_expr_call","","",308,[[["self"],["exprcall"]]]],[11,"visit_expr_cast","","",308,[[["self"],["exprcast"]]]],[11,"visit_expr_closure","","",308,[[["self"],["exprclosure"]]]],[11,"visit_expr_continue","","",308,[[["self"],["exprcontinue"]]]],[11,"visit_expr_field","","",308,[[["self"],["exprfield"]]]],[11,"visit_expr_for_loop","","",308,[[["self"],["exprforloop"]]]],[11,"visit_expr_group","","",308,[[["self"],["exprgroup"]]]],[11,"visit_expr_if","","",308,[[["self"],["exprif"]]]],[11,"visit_expr_in_place","","",308,[[["self"],["exprinplace"]]]],[11,"visit_expr_index","","",308,[[["self"],["exprindex"]]]],[11,"visit_expr_let","","",308,[[["self"],["exprlet"]]]],[11,"visit_expr_lit","","",308,[[["self"],["exprlit"]]]],[11,"visit_expr_loop","","",308,[[["self"],["exprloop"]]]],[11,"visit_expr_macro","","",308,[[["self"],["exprmacro"]]]],[11,"visit_expr_match","","",308,[[["self"],["exprmatch"]]]],[11,"visit_expr_method_call","","",308,[[["self"],["exprmethodcall"]]]],[11,"visit_expr_paren","","",308,[[["self"],["exprparen"]]]],[11,"visit_expr_path","","",308,[[["self"],["exprpath"]]]],[11,"visit_expr_range","","",308,[[["self"],["exprrange"]]]],[11,"visit_expr_reference","","",308,[[["self"],["exprreference"]]]],[11,"visit_expr_repeat","","",308,[[["self"],["exprrepeat"]]]],[11,"visit_expr_return","","",308,[[["self"],["exprreturn"]]]],[11,"visit_expr_struct","","",308,[[["self"],["exprstruct"]]]],[11,"visit_expr_try","","",308,[[["self"],["exprtry"]]]],[11,"visit_expr_try_block","","",308,[[["self"],["exprtryblock"]]]],[11,"visit_expr_tuple","","",308,[[["self"],["exprtuple"]]]],[11,"visit_expr_type","","",308,[[["self"],["exprtype"]]]],[11,"visit_expr_unary","","",308,[[["self"],["exprunary"]]]],[11,"visit_expr_unsafe","","",308,[[["self"],["exprunsafe"]]]],[11,"visit_expr_verbatim","","",308,[[["self"],["exprverbatim"]]]],[11,"visit_expr_while","","",308,[[["self"],["exprwhile"]]]],[11,"visit_expr_yield","","",308,[[["self"],["expryield"]]]],[11,"visit_field","","",308,[[["self"],["field"]]]],[11,"visit_field_pat","","",308,[[["self"],["fieldpat"]]]],[11,"visit_field_value","","",308,[[["self"],["fieldvalue"]]]],[11,"visit_fields","","",308,[[["self"],["fields"]]]],[11,"visit_fields_named","","",308,[[["self"],["fieldsnamed"]]]],[11,"visit_fields_unnamed","","",308,[[["self"],["fieldsunnamed"]]]],[11,"visit_file","","",308,[[["self"],["file"]]]],[11,"visit_fn_arg","","",308,[[["self"],["fnarg"]]]],[11,"visit_fn_decl","","",308,[[["self"],["fndecl"]]]],[11,"visit_foreign_item","","",308,[[["self"],["foreignitem"]]]],[11,"visit_foreign_item_fn","","",308,[[["self"],["foreignitemfn"]]]],[11,"visit_foreign_item_macro","","",308,[[["self"],["foreignitemmacro"]]]],[11,"visit_foreign_item_static","","",308,[[["self"],["foreignitemstatic"]]]],[11,"visit_foreign_item_type","","",308,[[["self"],["foreignitemtype"]]]],[11,"visit_foreign_item_verbatim","","",308,[[["self"],["foreignitemverbatim"]]]],[11,"visit_generic_argument","","",308,[[["self"],["genericargument"]]]],[11,"visit_generic_method_argument","","",308,[[["self"],["genericmethodargument"]]]],[11,"visit_generic_param","","",308,[[["self"],["genericparam"]]]],[11,"visit_generics","","",308,[[["self"],["generics"]]]],[11,"visit_ident","","",308,[[["self"],["ident"]]]],[11,"visit_impl_item","","",308,[[["self"],["implitem"]]]],[11,"visit_impl_item_const","","",308,[[["self"],["implitemconst"]]]],[11,"visit_impl_item_existential","","",308,[[["self"],["implitemexistential"]]]],[11,"visit_impl_item_macro","","",308,[[["self"],["implitemmacro"]]]],[11,"visit_impl_item_method","","",308,[[["self"],["implitemmethod"]]]],[11,"visit_impl_item_type","","",308,[[["self"],["implitemtype"]]]],[11,"visit_impl_item_verbatim","","",308,[[["self"],["implitemverbatim"]]]],[11,"visit_index","","",308,[[["self"],["index"]]]],[11,"visit_item","","",308,[[["self"],["item"]]]],[11,"visit_item_const","","",308,[[["self"],["itemconst"]]]],[11,"visit_item_enum","","",308,[[["self"],["itemenum"]]]],[11,"visit_item_existential","","",308,[[["self"],["itemexistential"]]]],[11,"visit_item_extern_crate","","",308,[[["self"],["itemexterncrate"]]]],[11,"visit_item_fn","","",308,[[["self"],["itemfn"]]]],[11,"visit_item_foreign_mod","","",308,[[["self"],["itemforeignmod"]]]],[11,"visit_item_impl","","",308,[[["self"],["itemimpl"]]]],[11,"visit_item_macro","","",308,[[["self"],["itemmacro"]]]],[11,"visit_item_macro2","","",308,[[["self"],["itemmacro2"]]]],[11,"visit_item_mod","","",308,[[["self"],["itemmod"]]]],[11,"visit_item_static","","",308,[[["self"],["itemstatic"]]]],[11,"visit_item_struct","","",308,[[["self"],["itemstruct"]]]],[11,"visit_item_trait","","",308,[[["self"],["itemtrait"]]]],[11,"visit_item_trait_alias","","",308,[[["self"],["itemtraitalias"]]]],[11,"visit_item_type","","",308,[[["self"],["itemtype"]]]],[11,"visit_item_union","","",308,[[["self"],["itemunion"]]]],[11,"visit_item_use","","",308,[[["self"],["itemuse"]]]],[11,"visit_item_verbatim","","",308,[[["self"],["itemverbatim"]]]],[11,"visit_label","","",308,[[["self"],["label"]]]],[11,"visit_lifetime","","",308,[[["self"],["lifetime"]]]],[11,"visit_lifetime_def","","",308,[[["self"],["lifetimedef"]]]],[11,"visit_lit","","",308,[[["self"],["lit"]]]],[11,"visit_lit_bool","","",308,[[["self"],["litbool"]]]],[11,"visit_lit_byte","","",308,[[["self"],["litbyte"]]]],[11,"visit_lit_byte_str","","",308,[[["self"],["litbytestr"]]]],[11,"visit_lit_char","","",308,[[["self"],["litchar"]]]],[11,"visit_lit_float","","",308,[[["self"],["litfloat"]]]],[11,"visit_lit_int","","",308,[[["self"],["litint"]]]],[11,"visit_lit_str","","",308,[[["self"],["litstr"]]]],[11,"visit_lit_verbatim","","",308,[[["self"],["litverbatim"]]]],[11,"visit_local","","",308,[[["self"],["local"]]]],[11,"visit_macro","","",308,[[["self"],["macro"]]]],[11,"visit_macro_delimiter","","",308,[[["self"],["macrodelimiter"]]]],[11,"visit_member","","",308,[[["self"],["member"]]]],[11,"visit_meta","","",308,[[["self"],["meta"]]]],[11,"visit_meta_list","","",308,[[["self"],["metalist"]]]],[11,"visit_meta_name_value","","",308,[[["self"],["metanamevalue"]]]],[11,"visit_method_sig","","",308,[[["self"],["methodsig"]]]],[11,"visit_method_turbofish","","",308,[[["self"],["methodturbofish"]]]],[11,"visit_nested_meta","","",308,[[["self"],["nestedmeta"]]]],[11,"visit_parenthesized_generic_arguments","","",308,[[["self"],["parenthesizedgenericarguments"]]]],[11,"visit_pat","","",308,[[["self"],["pat"]]]],[11,"visit_pat_box","","",308,[[["self"],["patbox"]]]],[11,"visit_pat_ident","","",308,[[["self"],["patident"]]]],[11,"visit_pat_lit","","",308,[[["self"],["patlit"]]]],[11,"visit_pat_macro","","",308,[[["self"],["patmacro"]]]],[11,"visit_pat_path","","",308,[[["self"],["patpath"]]]],[11,"visit_pat_range","","",308,[[["self"],["patrange"]]]],[11,"visit_pat_ref","","",308,[[["self"],["patref"]]]],[11,"visit_pat_slice","","",308,[[["self"],["patslice"]]]],[11,"visit_pat_struct","","",308,[[["self"],["patstruct"]]]],[11,"visit_pat_tuple","","",308,[[["self"],["pattuple"]]]],[11,"visit_pat_tuple_struct","","",308,[[["self"],["pattuplestruct"]]]],[11,"visit_pat_verbatim","","",308,[[["self"],["patverbatim"]]]],[11,"visit_pat_wild","","",308,[[["self"],["patwild"]]]],[11,"visit_path","","",308,[[["self"],["path"]]]],[11,"visit_path_arguments","","",308,[[["self"],["patharguments"]]]],[11,"visit_path_segment","","",308,[[["self"],["pathsegment"]]]],[11,"visit_predicate_eq","","",308,[[["self"],["predicateeq"]]]],[11,"visit_predicate_lifetime","","",308,[[["self"],["predicatelifetime"]]]],[11,"visit_predicate_type","","",308,[[["self"],["predicatetype"]]]],[11,"visit_qself","","",308,[[["self"],["qself"]]]],[11,"visit_range_limits","","",308,[[["self"],["rangelimits"]]]],[11,"visit_return_type","","",308,[[["self"],["returntype"]]]],[11,"visit_span","","",308,[[["self"],["span"]]]],[11,"visit_stmt","","",308,[[["self"],["stmt"]]]],[11,"visit_trait_bound","","",308,[[["self"],["traitbound"]]]],[11,"visit_trait_bound_modifier","","",308,[[["self"],["traitboundmodifier"]]]],[11,"visit_trait_item","","",308,[[["self"],["traititem"]]]],[11,"visit_trait_item_const","","",308,[[["self"],["traititemconst"]]]],[11,"visit_trait_item_macro","","",308,[[["self"],["traititemmacro"]]]],[11,"visit_trait_item_method","","",308,[[["self"],["traititemmethod"]]]],[11,"visit_trait_item_type","","",308,[[["self"],["traititemtype"]]]],[11,"visit_trait_item_verbatim","","",308,[[["self"],["traititemverbatim"]]]],[11,"visit_type","","",308,[[["self"],["type"]]]],[11,"visit_type_array","","",308,[[["self"],["typearray"]]]],[11,"visit_type_bare_fn","","",308,[[["self"],["typebarefn"]]]],[11,"visit_type_group","","",308,[[["self"],["typegroup"]]]],[11,"visit_type_impl_trait","","",308,[[["self"],["typeimpltrait"]]]],[11,"visit_type_infer","","",308,[[["self"],["typeinfer"]]]],[11,"visit_type_macro","","",308,[[["self"],["typemacro"]]]],[11,"visit_type_never","","",308,[[["self"],["typenever"]]]],[11,"visit_type_param","","",308,[[["self"],["typeparam"]]]],[11,"visit_type_param_bound","","",308,[[["self"],["typeparambound"]]]],[11,"visit_type_paren","","",308,[[["self"],["typeparen"]]]],[11,"visit_type_path","","",308,[[["self"],["typepath"]]]],[11,"visit_type_ptr","","",308,[[["self"],["typeptr"]]]],[11,"visit_type_reference","","",308,[[["self"],["typereference"]]]],[11,"visit_type_slice","","",308,[[["self"],["typeslice"]]]],[11,"visit_type_trait_object","","",308,[[["self"],["typetraitobject"]]]],[11,"visit_type_tuple","","",308,[[["self"],["typetuple"]]]],[11,"visit_type_verbatim","","",308,[[["self"],["typeverbatim"]]]],[11,"visit_un_op","","",308,[[["self"],["unop"]]]],[11,"visit_use_glob","","",308,[[["self"],["useglob"]]]],[11,"visit_use_group","","",308,[[["self"],["usegroup"]]]],[11,"visit_use_name","","",308,[[["self"],["usename"]]]],[11,"visit_use_path","","",308,[[["self"],["usepath"]]]],[11,"visit_use_rename","","",308,[[["self"],["userename"]]]],[11,"visit_use_tree","","",308,[[["self"],["usetree"]]]],[11,"visit_variant","","",308,[[["self"],["variant"]]]],[11,"visit_vis_crate","","",308,[[["self"],["viscrate"]]]],[11,"visit_vis_public","","",308,[[["self"],["vispublic"]]]],[11,"visit_vis_restricted","","",308,[[["self"],["visrestricted"]]]],[11,"visit_visibility","","",308,[[["self"],["visibility"]]]],[11,"visit_where_clause","","",308,[[["self"],["whereclause"]]]],[11,"visit_where_predicate","","",308,[[["self"],["wherepredicate"]]]],[0,"visit_mut","syn","Syntax tree traversal to mutate an exclusive borrow of a…",N,N],[5,"visit_abi_mut","syn::visit_mut","",N,[[["v"],["abi"]]]],[5,"visit_angle_bracketed_generic_arguments_mut","","",N,[[["v"],["anglebracketedgenericarguments"]]]],[5,"visit_arg_captured_mut","","",N,[[["v"],["argcaptured"]]]],[5,"visit_arg_self_mut","","",N,[[["v"],["argself"]]]],[5,"visit_arg_self_ref_mut","","",N,[[["v"],["argselfref"]]]],[5,"visit_arm_mut","","",N,[[["v"],["arm"]]]],[5,"visit_attr_style_mut","","",N,[[["v"],["attrstyle"]]]],[5,"visit_attribute_mut","","",N,[[["v"],["attribute"]]]],[5,"visit_bare_fn_arg_mut","","",N,[[["v"],["barefnarg"]]]],[5,"visit_bare_fn_arg_name_mut","","",N,[[["v"],["barefnargname"]]]],[5,"visit_bin_op_mut","","",N,[[["v"],["binop"]]]],[5,"visit_binding_mut","","",N,[[["v"],["binding"]]]],[5,"visit_block_mut","","",N,[[["v"],["block"]]]],[5,"visit_bound_lifetimes_mut","","",N,[[["v"],["boundlifetimes"]]]],[5,"visit_const_param_mut","","",N,[[["v"],["constparam"]]]],[5,"visit_constraint_mut","","",N,[[["v"],["constraint"]]]],[5,"visit_data_mut","","",N,[[["v"],["data"]]]],[5,"visit_data_enum_mut","","",N,[[["v"],["dataenum"]]]],[5,"visit_data_struct_mut","","",N,[[["v"],["datastruct"]]]],[5,"visit_data_union_mut","","",N,[[["v"],["dataunion"]]]],[5,"visit_derive_input_mut","","",N,[[["v"],["deriveinput"]]]],[5,"visit_expr_mut","","",N,[[["v"],["expr"]]]],[5,"visit_expr_array_mut","","",N,[[["v"],["exprarray"]]]],[5,"visit_expr_assign_mut","","",N,[[["v"],["exprassign"]]]],[5,"visit_expr_assign_op_mut","","",N,[[["v"],["exprassignop"]]]],[5,"visit_expr_async_mut","","",N,[[["v"],["exprasync"]]]],[5,"visit_expr_binary_mut","","",N,[[["v"],["exprbinary"]]]],[5,"visit_expr_block_mut","","",N,[[["v"],["exprblock"]]]],[5,"visit_expr_box_mut","","",N,[[["v"],["exprbox"]]]],[5,"visit_expr_break_mut","","",N,[[["v"],["exprbreak"]]]],[5,"visit_expr_call_mut","","",N,[[["v"],["exprcall"]]]],[5,"visit_expr_cast_mut","","",N,[[["v"],["exprcast"]]]],[5,"visit_expr_closure_mut","","",N,[[["v"],["exprclosure"]]]],[5,"visit_expr_continue_mut","","",N,[[["v"],["exprcontinue"]]]],[5,"visit_expr_field_mut","","",N,[[["v"],["exprfield"]]]],[5,"visit_expr_for_loop_mut","","",N,[[["v"],["exprforloop"]]]],[5,"visit_expr_group_mut","","",N,[[["v"],["exprgroup"]]]],[5,"visit_expr_if_mut","","",N,[[["v"],["exprif"]]]],[5,"visit_expr_in_place_mut","","",N,[[["v"],["exprinplace"]]]],[5,"visit_expr_index_mut","","",N,[[["v"],["exprindex"]]]],[5,"visit_expr_let_mut","","",N,[[["v"],["exprlet"]]]],[5,"visit_expr_lit_mut","","",N,[[["v"],["exprlit"]]]],[5,"visit_expr_loop_mut","","",N,[[["v"],["exprloop"]]]],[5,"visit_expr_macro_mut","","",N,[[["v"],["exprmacro"]]]],[5,"visit_expr_match_mut","","",N,[[["v"],["exprmatch"]]]],[5,"visit_expr_method_call_mut","","",N,[[["v"],["exprmethodcall"]]]],[5,"visit_expr_paren_mut","","",N,[[["v"],["exprparen"]]]],[5,"visit_expr_path_mut","","",N,[[["v"],["exprpath"]]]],[5,"visit_expr_range_mut","","",N,[[["v"],["exprrange"]]]],[5,"visit_expr_reference_mut","","",N,[[["v"],["exprreference"]]]],[5,"visit_expr_repeat_mut","","",N,[[["v"],["exprrepeat"]]]],[5,"visit_expr_return_mut","","",N,[[["v"],["exprreturn"]]]],[5,"visit_expr_struct_mut","","",N,[[["v"],["exprstruct"]]]],[5,"visit_expr_try_mut","","",N,[[["v"],["exprtry"]]]],[5,"visit_expr_try_block_mut","","",N,[[["v"],["exprtryblock"]]]],[5,"visit_expr_tuple_mut","","",N,[[["v"],["exprtuple"]]]],[5,"visit_expr_type_mut","","",N,[[["v"],["exprtype"]]]],[5,"visit_expr_unary_mut","","",N,[[["v"],["exprunary"]]]],[5,"visit_expr_unsafe_mut","","",N,[[["v"],["exprunsafe"]]]],[5,"visit_expr_verbatim_mut","","",N,[[["v"],["exprverbatim"]]]],[5,"visit_expr_while_mut","","",N,[[["v"],["exprwhile"]]]],[5,"visit_expr_yield_mut","","",N,[[["v"],["expryield"]]]],[5,"visit_field_mut","","",N,[[["v"],["field"]]]],[5,"visit_field_pat_mut","","",N,[[["v"],["fieldpat"]]]],[5,"visit_field_value_mut","","",N,[[["v"],["fieldvalue"]]]],[5,"visit_fields_mut","","",N,[[["v"],["fields"]]]],[5,"visit_fields_named_mut","","",N,[[["v"],["fieldsnamed"]]]],[5,"visit_fields_unnamed_mut","","",N,[[["v"],["fieldsunnamed"]]]],[5,"visit_file_mut","","",N,[[["v"],["file"]]]],[5,"visit_fn_arg_mut","","",N,[[["v"],["fnarg"]]]],[5,"visit_fn_decl_mut","","",N,[[["v"],["fndecl"]]]],[5,"visit_foreign_item_mut","","",N,[[["v"],["foreignitem"]]]],[5,"visit_foreign_item_fn_mut","","",N,[[["v"],["foreignitemfn"]]]],[5,"visit_foreign_item_macro_mut","","",N,[[["v"],["foreignitemmacro"]]]],[5,"visit_foreign_item_static_mut","","",N,[[["v"],["foreignitemstatic"]]]],[5,"visit_foreign_item_type_mut","","",N,[[["v"],["foreignitemtype"]]]],[5,"visit_foreign_item_verbatim_mut","","",N,[[["v"],["foreignitemverbatim"]]]],[5,"visit_generic_argument_mut","","",N,[[["v"],["genericargument"]]]],[5,"visit_generic_method_argument_mut","","",N,[[["v"],["genericmethodargument"]]]],[5,"visit_generic_param_mut","","",N,[[["v"],["genericparam"]]]],[5,"visit_generics_mut","","",N,[[["v"],["generics"]]]],[5,"visit_ident_mut","","",N,[[["v"],["ident"]]]],[5,"visit_impl_item_mut","","",N,[[["v"],["implitem"]]]],[5,"visit_impl_item_const_mut","","",N,[[["v"],["implitemconst"]]]],[5,"visit_impl_item_existential_mut","","",N,[[["v"],["implitemexistential"]]]],[5,"visit_impl_item_macro_mut","","",N,[[["v"],["implitemmacro"]]]],[5,"visit_impl_item_method_mut","","",N,[[["v"],["implitemmethod"]]]],[5,"visit_impl_item_type_mut","","",N,[[["v"],["implitemtype"]]]],[5,"visit_impl_item_verbatim_mut","","",N,[[["v"],["implitemverbatim"]]]],[5,"visit_index_mut","","",N,[[["v"],["index"]]]],[5,"visit_item_mut","","",N,[[["v"],["item"]]]],[5,"visit_item_const_mut","","",N,[[["v"],["itemconst"]]]],[5,"visit_item_enum_mut","","",N,[[["v"],["itemenum"]]]],[5,"visit_item_existential_mut","","",N,[[["v"],["itemexistential"]]]],[5,"visit_item_extern_crate_mut","","",N,[[["v"],["itemexterncrate"]]]],[5,"visit_item_fn_mut","","",N,[[["v"],["itemfn"]]]],[5,"visit_item_foreign_mod_mut","","",N,[[["v"],["itemforeignmod"]]]],[5,"visit_item_impl_mut","","",N,[[["v"],["itemimpl"]]]],[5,"visit_item_macro_mut","","",N,[[["v"],["itemmacro"]]]],[5,"visit_item_macro2_mut","","",N,[[["v"],["itemmacro2"]]]],[5,"visit_item_mod_mut","","",N,[[["v"],["itemmod"]]]],[5,"visit_item_static_mut","","",N,[[["v"],["itemstatic"]]]],[5,"visit_item_struct_mut","","",N,[[["v"],["itemstruct"]]]],[5,"visit_item_trait_mut","","",N,[[["v"],["itemtrait"]]]],[5,"visit_item_trait_alias_mut","","",N,[[["v"],["itemtraitalias"]]]],[5,"visit_item_type_mut","","",N,[[["v"],["itemtype"]]]],[5,"visit_item_union_mut","","",N,[[["v"],["itemunion"]]]],[5,"visit_item_use_mut","","",N,[[["v"],["itemuse"]]]],[5,"visit_item_verbatim_mut","","",N,[[["v"],["itemverbatim"]]]],[5,"visit_label_mut","","",N,[[["v"],["label"]]]],[5,"visit_lifetime_mut","","",N,[[["v"],["lifetime"]]]],[5,"visit_lifetime_def_mut","","",N,[[["v"],["lifetimedef"]]]],[5,"visit_lit_mut","","",N,[[["v"],["lit"]]]],[5,"visit_lit_bool_mut","","",N,[[["v"],["litbool"]]]],[5,"visit_lit_byte_mut","","",N,[[["v"],["litbyte"]]]],[5,"visit_lit_byte_str_mut","","",N,[[["v"],["litbytestr"]]]],[5,"visit_lit_char_mut","","",N,[[["v"],["litchar"]]]],[5,"visit_lit_float_mut","","",N,[[["v"],["litfloat"]]]],[5,"visit_lit_int_mut","","",N,[[["v"],["litint"]]]],[5,"visit_lit_str_mut","","",N,[[["v"],["litstr"]]]],[5,"visit_lit_verbatim_mut","","",N,[[["v"],["litverbatim"]]]],[5,"visit_local_mut","","",N,[[["v"],["local"]]]],[5,"visit_macro_mut","","",N,[[["v"],["macro"]]]],[5,"visit_macro_delimiter_mut","","",N,[[["v"],["macrodelimiter"]]]],[5,"visit_member_mut","","",N,[[["v"],["member"]]]],[5,"visit_meta_mut","","",N,[[["v"],["meta"]]]],[5,"visit_meta_list_mut","","",N,[[["v"],["metalist"]]]],[5,"visit_meta_name_value_mut","","",N,[[["v"],["metanamevalue"]]]],[5,"visit_method_sig_mut","","",N,[[["v"],["methodsig"]]]],[5,"visit_method_turbofish_mut","","",N,[[["v"],["methodturbofish"]]]],[5,"visit_nested_meta_mut","","",N,[[["v"],["nestedmeta"]]]],[5,"visit_parenthesized_generic_arguments_mut","","",N,[[["v"],["parenthesizedgenericarguments"]]]],[5,"visit_pat_mut","","",N,[[["v"],["pat"]]]],[5,"visit_pat_box_mut","","",N,[[["v"],["patbox"]]]],[5,"visit_pat_ident_mut","","",N,[[["v"],["patident"]]]],[5,"visit_pat_lit_mut","","",N,[[["v"],["patlit"]]]],[5,"visit_pat_macro_mut","","",N,[[["v"],["patmacro"]]]],[5,"visit_pat_path_mut","","",N,[[["v"],["patpath"]]]],[5,"visit_pat_range_mut","","",N,[[["v"],["patrange"]]]],[5,"visit_pat_ref_mut","","",N,[[["v"],["patref"]]]],[5,"visit_pat_slice_mut","","",N,[[["v"],["patslice"]]]],[5,"visit_pat_struct_mut","","",N,[[["v"],["patstruct"]]]],[5,"visit_pat_tuple_mut","","",N,[[["v"],["pattuple"]]]],[5,"visit_pat_tuple_struct_mut","","",N,[[["v"],["pattuplestruct"]]]],[5,"visit_pat_verbatim_mut","","",N,[[["v"],["patverbatim"]]]],[5,"visit_pat_wild_mut","","",N,[[["v"],["patwild"]]]],[5,"visit_path_mut","","",N,[[["v"],["path"]]]],[5,"visit_path_arguments_mut","","",N,[[["v"],["patharguments"]]]],[5,"visit_path_segment_mut","","",N,[[["v"],["pathsegment"]]]],[5,"visit_predicate_eq_mut","","",N,[[["v"],["predicateeq"]]]],[5,"visit_predicate_lifetime_mut","","",N,[[["v"],["predicatelifetime"]]]],[5,"visit_predicate_type_mut","","",N,[[["v"],["predicatetype"]]]],[5,"visit_qself_mut","","",N,[[["v"],["qself"]]]],[5,"visit_range_limits_mut","","",N,[[["v"],["rangelimits"]]]],[5,"visit_return_type_mut","","",N,[[["v"],["returntype"]]]],[5,"visit_span_mut","","",N,[[["v"],["span"]]]],[5,"visit_stmt_mut","","",N,[[["v"],["stmt"]]]],[5,"visit_trait_bound_mut","","",N,[[["v"],["traitbound"]]]],[5,"visit_trait_bound_modifier_mut","","",N,[[["v"],["traitboundmodifier"]]]],[5,"visit_trait_item_mut","","",N,[[["v"],["traititem"]]]],[5,"visit_trait_item_const_mut","","",N,[[["v"],["traititemconst"]]]],[5,"visit_trait_item_macro_mut","","",N,[[["v"],["traititemmacro"]]]],[5,"visit_trait_item_method_mut","","",N,[[["v"],["traititemmethod"]]]],[5,"visit_trait_item_type_mut","","",N,[[["v"],["traititemtype"]]]],[5,"visit_trait_item_verbatim_mut","","",N,[[["v"],["traititemverbatim"]]]],[5,"visit_type_mut","","",N,[[["v"],["type"]]]],[5,"visit_type_array_mut","","",N,[[["v"],["typearray"]]]],[5,"visit_type_bare_fn_mut","","",N,[[["v"],["typebarefn"]]]],[5,"visit_type_group_mut","","",N,[[["v"],["typegroup"]]]],[5,"visit_type_impl_trait_mut","","",N,[[["v"],["typeimpltrait"]]]],[5,"visit_type_infer_mut","","",N,[[["v"],["typeinfer"]]]],[5,"visit_type_macro_mut","","",N,[[["v"],["typemacro"]]]],[5,"visit_type_never_mut","","",N,[[["v"],["typenever"]]]],[5,"visit_type_param_mut","","",N,[[["v"],["typeparam"]]]],[5,"visit_type_param_bound_mut","","",N,[[["v"],["typeparambound"]]]],[5,"visit_type_paren_mut","","",N,[[["v"],["typeparen"]]]],[5,"visit_type_path_mut","","",N,[[["v"],["typepath"]]]],[5,"visit_type_ptr_mut","","",N,[[["v"],["typeptr"]]]],[5,"visit_type_reference_mut","","",N,[[["v"],["typereference"]]]],[5,"visit_type_slice_mut","","",N,[[["v"],["typeslice"]]]],[5,"visit_type_trait_object_mut","","",N,[[["v"],["typetraitobject"]]]],[5,"visit_type_tuple_mut","","",N,[[["v"],["typetuple"]]]],[5,"visit_type_verbatim_mut","","",N,[[["v"],["typeverbatim"]]]],[5,"visit_un_op_mut","","",N,[[["v"],["unop"]]]],[5,"visit_use_glob_mut","","",N,[[["v"],["useglob"]]]],[5,"visit_use_group_mut","","",N,[[["v"],["usegroup"]]]],[5,"visit_use_name_mut","","",N,[[["v"],["usename"]]]],[5,"visit_use_path_mut","","",N,[[["v"],["usepath"]]]],[5,"visit_use_rename_mut","","",N,[[["v"],["userename"]]]],[5,"visit_use_tree_mut","","",N,[[["v"],["usetree"]]]],[5,"visit_variant_mut","","",N,[[["v"],["variant"]]]],[5,"visit_vis_crate_mut","","",N,[[["v"],["viscrate"]]]],[5,"visit_vis_public_mut","","",N,[[["v"],["vispublic"]]]],[5,"visit_vis_restricted_mut","","",N,[[["v"],["visrestricted"]]]],[5,"visit_visibility_mut","","",N,[[["v"],["visibility"]]]],[5,"visit_where_clause_mut","","",N,[[["v"],["whereclause"]]]],[5,"visit_where_predicate_mut","","",N,[[["v"],["wherepredicate"]]]],[8,"VisitMut","","Syntax tree traversal to mutate an exclusive borrow of a…",N,N],[11,"visit_abi_mut","","",309,[[["self"],["abi"]]]],[11,"visit_angle_bracketed_generic_arguments_mut","","",309,[[["self"],["anglebracketedgenericarguments"]]]],[11,"visit_arg_captured_mut","","",309,[[["self"],["argcaptured"]]]],[11,"visit_arg_self_mut","","",309,[[["self"],["argself"]]]],[11,"visit_arg_self_ref_mut","","",309,[[["self"],["argselfref"]]]],[11,"visit_arm_mut","","",309,[[["self"],["arm"]]]],[11,"visit_attr_style_mut","","",309,[[["self"],["attrstyle"]]]],[11,"visit_attribute_mut","","",309,[[["self"],["attribute"]]]],[11,"visit_bare_fn_arg_mut","","",309,[[["self"],["barefnarg"]]]],[11,"visit_bare_fn_arg_name_mut","","",309,[[["self"],["barefnargname"]]]],[11,"visit_bin_op_mut","","",309,[[["self"],["binop"]]]],[11,"visit_binding_mut","","",309,[[["self"],["binding"]]]],[11,"visit_block_mut","","",309,[[["self"],["block"]]]],[11,"visit_bound_lifetimes_mut","","",309,[[["self"],["boundlifetimes"]]]],[11,"visit_const_param_mut","","",309,[[["self"],["constparam"]]]],[11,"visit_constraint_mut","","",309,[[["self"],["constraint"]]]],[11,"visit_data_mut","","",309,[[["self"],["data"]]]],[11,"visit_data_enum_mut","","",309,[[["self"],["dataenum"]]]],[11,"visit_data_struct_mut","","",309,[[["self"],["datastruct"]]]],[11,"visit_data_union_mut","","",309,[[["self"],["dataunion"]]]],[11,"visit_derive_input_mut","","",309,[[["self"],["deriveinput"]]]],[11,"visit_expr_mut","","",309,[[["self"],["expr"]]]],[11,"visit_expr_array_mut","","",309,[[["self"],["exprarray"]]]],[11,"visit_expr_assign_mut","","",309,[[["self"],["exprassign"]]]],[11,"visit_expr_assign_op_mut","","",309,[[["self"],["exprassignop"]]]],[11,"visit_expr_async_mut","","",309,[[["self"],["exprasync"]]]],[11,"visit_expr_binary_mut","","",309,[[["self"],["exprbinary"]]]],[11,"visit_expr_block_mut","","",309,[[["self"],["exprblock"]]]],[11,"visit_expr_box_mut","","",309,[[["self"],["exprbox"]]]],[11,"visit_expr_break_mut","","",309,[[["self"],["exprbreak"]]]],[11,"visit_expr_call_mut","","",309,[[["self"],["exprcall"]]]],[11,"visit_expr_cast_mut","","",309,[[["self"],["exprcast"]]]],[11,"visit_expr_closure_mut","","",309,[[["self"],["exprclosure"]]]],[11,"visit_expr_continue_mut","","",309,[[["self"],["exprcontinue"]]]],[11,"visit_expr_field_mut","","",309,[[["self"],["exprfield"]]]],[11,"visit_expr_for_loop_mut","","",309,[[["self"],["exprforloop"]]]],[11,"visit_expr_group_mut","","",309,[[["self"],["exprgroup"]]]],[11,"visit_expr_if_mut","","",309,[[["self"],["exprif"]]]],[11,"visit_expr_in_place_mut","","",309,[[["self"],["exprinplace"]]]],[11,"visit_expr_index_mut","","",309,[[["self"],["exprindex"]]]],[11,"visit_expr_let_mut","","",309,[[["self"],["exprlet"]]]],[11,"visit_expr_lit_mut","","",309,[[["self"],["exprlit"]]]],[11,"visit_expr_loop_mut","","",309,[[["self"],["exprloop"]]]],[11,"visit_expr_macro_mut","","",309,[[["self"],["exprmacro"]]]],[11,"visit_expr_match_mut","","",309,[[["self"],["exprmatch"]]]],[11,"visit_expr_method_call_mut","","",309,[[["self"],["exprmethodcall"]]]],[11,"visit_expr_paren_mut","","",309,[[["self"],["exprparen"]]]],[11,"visit_expr_path_mut","","",309,[[["self"],["exprpath"]]]],[11,"visit_expr_range_mut","","",309,[[["self"],["exprrange"]]]],[11,"visit_expr_reference_mut","","",309,[[["self"],["exprreference"]]]],[11,"visit_expr_repeat_mut","","",309,[[["self"],["exprrepeat"]]]],[11,"visit_expr_return_mut","","",309,[[["self"],["exprreturn"]]]],[11,"visit_expr_struct_mut","","",309,[[["self"],["exprstruct"]]]],[11,"visit_expr_try_mut","","",309,[[["self"],["exprtry"]]]],[11,"visit_expr_try_block_mut","","",309,[[["self"],["exprtryblock"]]]],[11,"visit_expr_tuple_mut","","",309,[[["self"],["exprtuple"]]]],[11,"visit_expr_type_mut","","",309,[[["self"],["exprtype"]]]],[11,"visit_expr_unary_mut","","",309,[[["self"],["exprunary"]]]],[11,"visit_expr_unsafe_mut","","",309,[[["self"],["exprunsafe"]]]],[11,"visit_expr_verbatim_mut","","",309,[[["self"],["exprverbatim"]]]],[11,"visit_expr_while_mut","","",309,[[["self"],["exprwhile"]]]],[11,"visit_expr_yield_mut","","",309,[[["self"],["expryield"]]]],[11,"visit_field_mut","","",309,[[["self"],["field"]]]],[11,"visit_field_pat_mut","","",309,[[["self"],["fieldpat"]]]],[11,"visit_field_value_mut","","",309,[[["self"],["fieldvalue"]]]],[11,"visit_fields_mut","","",309,[[["self"],["fields"]]]],[11,"visit_fields_named_mut","","",309,[[["self"],["fieldsnamed"]]]],[11,"visit_fields_unnamed_mut","","",309,[[["self"],["fieldsunnamed"]]]],[11,"visit_file_mut","","",309,[[["self"],["file"]]]],[11,"visit_fn_arg_mut","","",309,[[["self"],["fnarg"]]]],[11,"visit_fn_decl_mut","","",309,[[["self"],["fndecl"]]]],[11,"visit_foreign_item_mut","","",309,[[["self"],["foreignitem"]]]],[11,"visit_foreign_item_fn_mut","","",309,[[["self"],["foreignitemfn"]]]],[11,"visit_foreign_item_macro_mut","","",309,[[["self"],["foreignitemmacro"]]]],[11,"visit_foreign_item_static_mut","","",309,[[["self"],["foreignitemstatic"]]]],[11,"visit_foreign_item_type_mut","","",309,[[["self"],["foreignitemtype"]]]],[11,"visit_foreign_item_verbatim_mut","","",309,[[["self"],["foreignitemverbatim"]]]],[11,"visit_generic_argument_mut","","",309,[[["self"],["genericargument"]]]],[11,"visit_generic_method_argument_mut","","",309,[[["self"],["genericmethodargument"]]]],[11,"visit_generic_param_mut","","",309,[[["self"],["genericparam"]]]],[11,"visit_generics_mut","","",309,[[["self"],["generics"]]]],[11,"visit_ident_mut","","",309,[[["self"],["ident"]]]],[11,"visit_impl_item_mut","","",309,[[["self"],["implitem"]]]],[11,"visit_impl_item_const_mut","","",309,[[["self"],["implitemconst"]]]],[11,"visit_impl_item_existential_mut","","",309,[[["self"],["implitemexistential"]]]],[11,"visit_impl_item_macro_mut","","",309,[[["self"],["implitemmacro"]]]],[11,"visit_impl_item_method_mut","","",309,[[["self"],["implitemmethod"]]]],[11,"visit_impl_item_type_mut","","",309,[[["self"],["implitemtype"]]]],[11,"visit_impl_item_verbatim_mut","","",309,[[["self"],["implitemverbatim"]]]],[11,"visit_index_mut","","",309,[[["self"],["index"]]]],[11,"visit_item_mut","","",309,[[["self"],["item"]]]],[11,"visit_item_const_mut","","",309,[[["self"],["itemconst"]]]],[11,"visit_item_enum_mut","","",309,[[["self"],["itemenum"]]]],[11,"visit_item_existential_mut","","",309,[[["self"],["itemexistential"]]]],[11,"visit_item_extern_crate_mut","","",309,[[["self"],["itemexterncrate"]]]],[11,"visit_item_fn_mut","","",309,[[["self"],["itemfn"]]]],[11,"visit_item_foreign_mod_mut","","",309,[[["self"],["itemforeignmod"]]]],[11,"visit_item_impl_mut","","",309,[[["self"],["itemimpl"]]]],[11,"visit_item_macro_mut","","",309,[[["self"],["itemmacro"]]]],[11,"visit_item_macro2_mut","","",309,[[["self"],["itemmacro2"]]]],[11,"visit_item_mod_mut","","",309,[[["self"],["itemmod"]]]],[11,"visit_item_static_mut","","",309,[[["self"],["itemstatic"]]]],[11,"visit_item_struct_mut","","",309,[[["self"],["itemstruct"]]]],[11,"visit_item_trait_mut","","",309,[[["self"],["itemtrait"]]]],[11,"visit_item_trait_alias_mut","","",309,[[["self"],["itemtraitalias"]]]],[11,"visit_item_type_mut","","",309,[[["self"],["itemtype"]]]],[11,"visit_item_union_mut","","",309,[[["self"],["itemunion"]]]],[11,"visit_item_use_mut","","",309,[[["self"],["itemuse"]]]],[11,"visit_item_verbatim_mut","","",309,[[["self"],["itemverbatim"]]]],[11,"visit_label_mut","","",309,[[["self"],["label"]]]],[11,"visit_lifetime_mut","","",309,[[["self"],["lifetime"]]]],[11,"visit_lifetime_def_mut","","",309,[[["self"],["lifetimedef"]]]],[11,"visit_lit_mut","","",309,[[["self"],["lit"]]]],[11,"visit_lit_bool_mut","","",309,[[["self"],["litbool"]]]],[11,"visit_lit_byte_mut","","",309,[[["self"],["litbyte"]]]],[11,"visit_lit_byte_str_mut","","",309,[[["self"],["litbytestr"]]]],[11,"visit_lit_char_mut","","",309,[[["self"],["litchar"]]]],[11,"visit_lit_float_mut","","",309,[[["self"],["litfloat"]]]],[11,"visit_lit_int_mut","","",309,[[["self"],["litint"]]]],[11,"visit_lit_str_mut","","",309,[[["self"],["litstr"]]]],[11,"visit_lit_verbatim_mut","","",309,[[["self"],["litverbatim"]]]],[11,"visit_local_mut","","",309,[[["self"],["local"]]]],[11,"visit_macro_mut","","",309,[[["self"],["macro"]]]],[11,"visit_macro_delimiter_mut","","",309,[[["self"],["macrodelimiter"]]]],[11,"visit_member_mut","","",309,[[["self"],["member"]]]],[11,"visit_meta_mut","","",309,[[["self"],["meta"]]]],[11,"visit_meta_list_mut","","",309,[[["self"],["metalist"]]]],[11,"visit_meta_name_value_mut","","",309,[[["self"],["metanamevalue"]]]],[11,"visit_method_sig_mut","","",309,[[["self"],["methodsig"]]]],[11,"visit_method_turbofish_mut","","",309,[[["self"],["methodturbofish"]]]],[11,"visit_nested_meta_mut","","",309,[[["self"],["nestedmeta"]]]],[11,"visit_parenthesized_generic_arguments_mut","","",309,[[["self"],["parenthesizedgenericarguments"]]]],[11,"visit_pat_mut","","",309,[[["self"],["pat"]]]],[11,"visit_pat_box_mut","","",309,[[["self"],["patbox"]]]],[11,"visit_pat_ident_mut","","",309,[[["self"],["patident"]]]],[11,"visit_pat_lit_mut","","",309,[[["self"],["patlit"]]]],[11,"visit_pat_macro_mut","","",309,[[["self"],["patmacro"]]]],[11,"visit_pat_path_mut","","",309,[[["self"],["patpath"]]]],[11,"visit_pat_range_mut","","",309,[[["self"],["patrange"]]]],[11,"visit_pat_ref_mut","","",309,[[["self"],["patref"]]]],[11,"visit_pat_slice_mut","","",309,[[["self"],["patslice"]]]],[11,"visit_pat_struct_mut","","",309,[[["self"],["patstruct"]]]],[11,"visit_pat_tuple_mut","","",309,[[["self"],["pattuple"]]]],[11,"visit_pat_tuple_struct_mut","","",309,[[["self"],["pattuplestruct"]]]],[11,"visit_pat_verbatim_mut","","",309,[[["self"],["patverbatim"]]]],[11,"visit_pat_wild_mut","","",309,[[["self"],["patwild"]]]],[11,"visit_path_mut","","",309,[[["self"],["path"]]]],[11,"visit_path_arguments_mut","","",309,[[["self"],["patharguments"]]]],[11,"visit_path_segment_mut","","",309,[[["self"],["pathsegment"]]]],[11,"visit_predicate_eq_mut","","",309,[[["self"],["predicateeq"]]]],[11,"visit_predicate_lifetime_mut","","",309,[[["self"],["predicatelifetime"]]]],[11,"visit_predicate_type_mut","","",309,[[["self"],["predicatetype"]]]],[11,"visit_qself_mut","","",309,[[["self"],["qself"]]]],[11,"visit_range_limits_mut","","",309,[[["self"],["rangelimits"]]]],[11,"visit_return_type_mut","","",309,[[["self"],["returntype"]]]],[11,"visit_span_mut","","",309,[[["self"],["span"]]]],[11,"visit_stmt_mut","","",309,[[["self"],["stmt"]]]],[11,"visit_trait_bound_mut","","",309,[[["self"],["traitbound"]]]],[11,"visit_trait_bound_modifier_mut","","",309,[[["self"],["traitboundmodifier"]]]],[11,"visit_trait_item_mut","","",309,[[["self"],["traititem"]]]],[11,"visit_trait_item_const_mut","","",309,[[["self"],["traititemconst"]]]],[11,"visit_trait_item_macro_mut","","",309,[[["self"],["traititemmacro"]]]],[11,"visit_trait_item_method_mut","","",309,[[["self"],["traititemmethod"]]]],[11,"visit_trait_item_type_mut","","",309,[[["self"],["traititemtype"]]]],[11,"visit_trait_item_verbatim_mut","","",309,[[["self"],["traititemverbatim"]]]],[11,"visit_type_mut","","",309,[[["self"],["type"]]]],[11,"visit_type_array_mut","","",309,[[["self"],["typearray"]]]],[11,"visit_type_bare_fn_mut","","",309,[[["self"],["typebarefn"]]]],[11,"visit_type_group_mut","","",309,[[["self"],["typegroup"]]]],[11,"visit_type_impl_trait_mut","","",309,[[["self"],["typeimpltrait"]]]],[11,"visit_type_infer_mut","","",309,[[["self"],["typeinfer"]]]],[11,"visit_type_macro_mut","","",309,[[["self"],["typemacro"]]]],[11,"visit_type_never_mut","","",309,[[["self"],["typenever"]]]],[11,"visit_type_param_mut","","",309,[[["self"],["typeparam"]]]],[11,"visit_type_param_bound_mut","","",309,[[["self"],["typeparambound"]]]],[11,"visit_type_paren_mut","","",309,[[["self"],["typeparen"]]]],[11,"visit_type_path_mut","","",309,[[["self"],["typepath"]]]],[11,"visit_type_ptr_mut","","",309,[[["self"],["typeptr"]]]],[11,"visit_type_reference_mut","","",309,[[["self"],["typereference"]]]],[11,"visit_type_slice_mut","","",309,[[["self"],["typeslice"]]]],[11,"visit_type_trait_object_mut","","",309,[[["self"],["typetraitobject"]]]],[11,"visit_type_tuple_mut","","",309,[[["self"],["typetuple"]]]],[11,"visit_type_verbatim_mut","","",309,[[["self"],["typeverbatim"]]]],[11,"visit_un_op_mut","","",309,[[["self"],["unop"]]]],[11,"visit_use_glob_mut","","",309,[[["self"],["useglob"]]]],[11,"visit_use_group_mut","","",309,[[["self"],["usegroup"]]]],[11,"visit_use_name_mut","","",309,[[["self"],["usename"]]]],[11,"visit_use_path_mut","","",309,[[["self"],["usepath"]]]],[11,"visit_use_rename_mut","","",309,[[["self"],["userename"]]]],[11,"visit_use_tree_mut","","",309,[[["self"],["usetree"]]]],[11,"visit_variant_mut","","",309,[[["self"],["variant"]]]],[11,"visit_vis_crate_mut","","",309,[[["self"],["viscrate"]]]],[11,"visit_vis_public_mut","","",309,[[["self"],["vispublic"]]]],[11,"visit_vis_restricted_mut","","",309,[[["self"],["visrestricted"]]]],[11,"visit_visibility_mut","","",309,[[["self"],["visibility"]]]],[11,"visit_where_clause_mut","","",309,[[["self"],["whereclause"]]]],[11,"visit_where_predicate_mut","","",309,[[["self"],["wherepredicate"]]]],[0,"parse","syn","Parsing interface for parsing a token stream into a syntax…",N,N],[3,"Error","syn::parse","Error returned when a Syn parser cannot parse the input…",N,N],[3,"Lookahead1","","Support for checking the next token in a stream to decide…",N,N],[3,"ParseBuffer","","Cursor position within a buffered token stream.",N,N],[3,"StepCursor","","Cursor state associated with speculative parsing.",N,N],[6,"Result","","The result of a Syn parser.",N,N],[6,"ParseStream","","Input to a Syn parser function.",N,N],[8,"Peek","","Types that can be parsed by looking at just one token.",N,N],[8,"Parse","","Parsing interface implemented by all types that can be…",N,N],[10,"parse","","",310,[[["parsestream"]],["result"]]],[8,"Parser","","Parser that can parse Rust tokens into a particular syntax…",N,N],[16,"Output","","",311,N],[10,"parse2","","Parse a proc-macro2 token stream into the chosen syntax…",311,[[["self"],["tokenstream"]],["result"]]],[11,"parse","","Parse tokens of source code into the chosen syntax tree…",311,[[["self"],["tokenstream"]],["result"]]],[11,"parse_str","","Parse a string of Rust code into the chosen syntax tree…",311,[[["self"],["str"]],["result"]]],[11,"error","","Triggers an error at the current position of the parse…",312,[[["self"],["t"]],["error"]]],[11,"parse","","Parses a syntax tree node of type `T`, advancing the…",313,[[["self"]],["result"]]],[11,"call","","Calls the given parser function to parse a syntax tree…",313,N],[11,"peek","","Looks at the next token in the parse stream to determine…",313,[[["self"],["t"]],["bool"]]],[11,"peek2","","Looks at the second-next token in the parse stream.",313,[[["self"],["t"]],["bool"]]],[11,"peek3","","Looks at the third-next token in the parse stream.",313,[[["self"],["t"]],["bool"]]],[11,"parse_terminated","","Parses zero or more occurrences of `T` separated by…",313,N],[11,"is_empty","","Returns whether there are tokens remaining in this stream.",313,[[["self"]],["bool"]]],[11,"lookahead1","","Constructs a helper for peeking at the next token in this…",313,[[["self"]],["lookahead1"]]],[11,"fork","","Forks a parse stream so that parsing tokens out of either…",313,[[["self"]],["self"]]],[11,"error","","Triggers an error at the current position of the parse…",313,[[["self"],["t"]],["error"]]],[11,"step","","Speculatively parses tokens from this parse stream,…",313,[[["self"],["f"]],["result"]]],[11,"cursor","","Provides low-level access to the token representation…",313,[[["self"]],["cursor"]]],[11,"new","syn","Usually the [`ParseStream::error`] method will be used…",314,[[["span"],["t"]],["self"]]],[11,"new_spanned","","Creates an error with the specified message spanning the…",314,[[["t"],["u"]],["self"]]],[11,"span","","The source location of the error.",314,[[["self"]],["span"]]],[11,"to_compile_error","","Render the error as an invocation of [`compile_error!`].",314,[[["self"]],["tokenstream"]]],[6,"AttributeArgs","","Conventional argument type associated with an invocation…",N,N],[6,"Result","","The result of a Syn parser.",N,N],[14,"parenthesized","","Parse a set of parentheses and expose their content to…",N,N],[14,"braced","","Parse a set of curly braces and expose their content to…",N,N],[14,"bracketed","","Parse a set of square brackets and expose their content to…",N,N],[14,"Token","","A type-macro that expands to the name of the Rust type…",N,N],[14,"parse_quote","","Quasi-quotation macro that accepts input like the…",N,N],[14,"parse_macro_input","","Parse the input TokenStream of a macro, triggering a…",N,N],[14,"custom_keyword","","Define a type that supports parsing and printing a given…",N,N],[11,"peek","","",315,[[["cursor"]],["bool"]]],[11,"display","","",315,[[],["str"]]],[11,"span","","",315,[[["self"]],["span"]]],[11,"from","","",315,[[["t"]],["t"]]],[11,"into","","",315,[[["self"]],["u"]]],[11,"to_owned","","",315,[[["self"]],["t"]]],[11,"clone_into","","",315,N],[11,"to_string","","",315,[[["self"]],["string"]]],[11,"try_from","","",315,[[["u"]],["result"]]],[11,"borrow","","",315,[[["self"]],["t"]]],[11,"borrow_mut","","",315,[[["self"]],["t"]]],[11,"try_into","","",315,[[["self"]],["result"]]],[11,"get_type_id","","",315,[[["self"]],["typeid"]]],[11,"span","","",0,[[["self"]],["span"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"span","","",1,[[["self"]],["span"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"span","","",2,[[["self"]],["span"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"span","","",3,[[["self"]],["span"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"span","","",4,[[["self"]],["span"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"span","","",5,[[["self"]],["span"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"span","","",6,[[["self"]],["span"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"span","","",7,[[["self"]],["span"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"span","","",8,[[["self"]],["span"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"span","","",9,[[["self"]],["span"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"span","","",10,[[["self"]],["span"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"span","","",11,[[["self"]],["span"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"span","","",12,[[["self"]],["span"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"span","","",13,[[["self"]],["span"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"span","","",14,[[["self"]],["span"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"span","","",15,[[["self"]],["span"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"span","","",16,[[["self"]],["span"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"span","","",17,[[["self"]],["span"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"span","","",18,[[["self"]],["span"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"span","","",19,[[["self"]],["span"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"span","","",20,[[["self"]],["span"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"span","","",21,[[["self"]],["span"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"span","","",22,[[["self"]],["span"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"span","","",23,[[["self"]],["span"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"span","","",24,[[["self"]],["span"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"span","","",25,[[["self"]],["span"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"span","","",26,[[["self"]],["span"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"span","","",27,[[["self"]],["span"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,N],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"span","","",28,[[["self"]],["span"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,N],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"span","","",29,[[["self"]],["span"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,N],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"span","","",30,[[["self"]],["span"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,N],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"span","","",31,[[["self"]],["span"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,N],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"span","","",32,[[["self"]],["span"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,N],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"span","","",33,[[["self"]],["span"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,N],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"span","","",34,[[["self"]],["span"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,N],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"span","","",35,[[["self"]],["span"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,N],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"span","","",36,[[["self"]],["span"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,N],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"span","","",37,[[["self"]],["span"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,N],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"span","","",38,[[["self"]],["span"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,N],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"span","","",39,[[["self"]],["span"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,N],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"span","","",40,[[["self"]],["span"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,N],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"span","","",41,[[["self"]],["span"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,N],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"span","","",42,[[["self"]],["span"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,N],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"span","","",43,[[["self"]],["span"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"span","","",44,[[["self"]],["span"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,N],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"span","","",45,[[["self"]],["span"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,N],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"span","","",46,[[["self"]],["span"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,N],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"span","","",47,[[["self"]],["span"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,N],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"span","","",48,[[["self"]],["span"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,N],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"span","","",49,[[["self"]],["span"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,N],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"span","","",50,[[["self"]],["span"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,N],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"span","","",51,[[["self"]],["span"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,N],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"span","","",52,[[["self"]],["span"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,N],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"span","","",53,[[["self"]],["span"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,N],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"span","","",54,[[["self"]],["span"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,N],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"span","","",55,[[["self"]],["span"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,N],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"span","","",56,[[["self"]],["span"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,N],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"span","","",57,[[["self"]],["span"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,N],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"span","","",58,[[["self"]],["span"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,N],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"span","","",59,[[["self"]],["span"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,N],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"span","","",60,[[["self"]],["span"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,N],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"span","","",61,[[["self"]],["span"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,N],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"span","","",62,[[["self"]],["span"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[["self"]],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,N],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"span","","",63,[[["self"]],["span"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[["self"]],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,N],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"span","","",64,[[["self"]],["span"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[["self"]],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,N],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"span","","",65,[[["self"]],["span"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[["self"]],["u"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,N],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"span","","",66,[[["self"]],["span"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[["self"]],["u"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,N],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"span","","",67,[[["self"]],["span"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[["self"]],["u"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,N],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"span","","",68,[[["self"]],["span"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[["self"]],["u"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,N],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"try_into","","",68,[[["self"]],["result"]]],[11,"get_type_id","","",68,[[["self"]],["typeid"]]],[11,"span","","",69,[[["self"]],["span"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[["self"]],["u"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,N],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"try_into","","",69,[[["self"]],["result"]]],[11,"get_type_id","","",69,[[["self"]],["typeid"]]],[11,"span","","",70,[[["self"]],["span"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[["self"]],["u"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,N],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"try_into","","",70,[[["self"]],["result"]]],[11,"get_type_id","","",70,[[["self"]],["typeid"]]],[11,"span","","",71,[[["self"]],["span"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[["self"]],["u"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,N],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"try_into","","",71,[[["self"]],["result"]]],[11,"get_type_id","","",71,[[["self"]],["typeid"]]],[11,"span","","",72,[[["self"]],["span"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[["self"]],["u"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,N],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"try_into","","",72,[[["self"]],["result"]]],[11,"get_type_id","","",72,[[["self"]],["typeid"]]],[11,"span","","",73,[[["self"]],["span"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[["self"]],["u"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,N],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"try_into","","",73,[[["self"]],["result"]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"span","","",74,[[["self"]],["span"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[["self"]],["u"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,N],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"try_into","","",74,[[["self"]],["result"]]],[11,"get_type_id","","",74,[[["self"]],["typeid"]]],[11,"span","","",75,[[["self"]],["span"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[["self"]],["u"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,N],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"try_into","","",75,[[["self"]],["result"]]],[11,"get_type_id","","",75,[[["self"]],["typeid"]]],[11,"span","","",76,[[["self"]],["span"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[["self"]],["u"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,N],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"try_into","","",76,[[["self"]],["result"]]],[11,"get_type_id","","",76,[[["self"]],["typeid"]]],[11,"span","","",77,[[["self"]],["span"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[["self"]],["u"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,N],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"try_into","","",77,[[["self"]],["result"]]],[11,"get_type_id","","",77,[[["self"]],["typeid"]]],[11,"span","","",78,[[["self"]],["span"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[["self"]],["u"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,N],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"try_into","","",78,[[["self"]],["result"]]],[11,"get_type_id","","",78,[[["self"]],["typeid"]]],[11,"span","","",79,[[["self"]],["span"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[["self"]],["u"]]],[11,"to_owned","","",79,[[["self"]],["t"]]],[11,"clone_into","","",79,N],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"try_into","","",79,[[["self"]],["result"]]],[11,"get_type_id","","",79,[[["self"]],["typeid"]]],[11,"span","","",80,[[["self"]],["span"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[["self"]],["u"]]],[11,"to_owned","","",80,[[["self"]],["t"]]],[11,"clone_into","","",80,N],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"try_into","","",80,[[["self"]],["result"]]],[11,"get_type_id","","",80,[[["self"]],["typeid"]]],[11,"span","","",316,[[["self"]],["span"]]],[11,"from","","",316,[[["t"]],["t"]]],[11,"into","","",316,[[["self"]],["u"]]],[11,"to_owned","","",316,[[["self"]],["t"]]],[11,"clone_into","","",316,N],[11,"try_from","","",316,[[["u"]],["result"]]],[11,"borrow","","",316,[[["self"]],["t"]]],[11,"borrow_mut","","",316,[[["self"]],["t"]]],[11,"try_into","","",316,[[["self"]],["result"]]],[11,"get_type_id","","",316,[[["self"]],["typeid"]]],[11,"span","","",317,[[["self"]],["span"]]],[11,"from","","",317,[[["t"]],["t"]]],[11,"into","","",317,[[["self"]],["u"]]],[11,"to_owned","","",317,[[["self"]],["t"]]],[11,"clone_into","","",317,N],[11,"try_from","","",317,[[["u"]],["result"]]],[11,"borrow","","",317,[[["self"]],["t"]]],[11,"borrow_mut","","",317,[[["self"]],["t"]]],[11,"try_into","","",317,[[["self"]],["result"]]],[11,"get_type_id","","",317,[[["self"]],["typeid"]]],[11,"span","","",295,[[["self"]],["span"]]],[11,"from","","",295,[[["t"]],["t"]]],[11,"into","","",295,[[["self"]],["u"]]],[11,"to_owned","","",295,[[["self"]],["t"]]],[11,"clone_into","","",295,N],[11,"try_from","","",295,[[["u"]],["result"]]],[11,"borrow","","",295,[[["self"]],["t"]]],[11,"borrow_mut","","",295,[[["self"]],["t"]]],[11,"try_into","","",295,[[["self"]],["result"]]],[11,"get_type_id","","",295,[[["self"]],["typeid"]]],[11,"span","","",81,[[["self"]],["span"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[["self"]],["u"]]],[11,"to_owned","","",81,[[["self"]],["t"]]],[11,"clone_into","","",81,N],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"try_into","","",81,[[["self"]],["result"]]],[11,"get_type_id","","",81,[[["self"]],["typeid"]]],[11,"span","","",82,[[["self"]],["span"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[["self"]],["u"]]],[11,"to_owned","","",82,[[["self"]],["t"]]],[11,"clone_into","","",82,N],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"try_into","","",82,[[["self"]],["result"]]],[11,"get_type_id","","",82,[[["self"]],["typeid"]]],[11,"span","","",83,[[["self"]],["span"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[["self"]],["u"]]],[11,"to_owned","","",83,[[["self"]],["t"]]],[11,"clone_into","","",83,N],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"try_into","","",83,[[["self"]],["result"]]],[11,"get_type_id","","",83,[[["self"]],["typeid"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[["self"]],["u"]]],[11,"to_owned","","",84,[[["self"]],["t"]]],[11,"clone_into","","",84,N],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"try_into","","",84,[[["self"]],["result"]]],[11,"get_type_id","","",84,[[["self"]],["typeid"]]],[11,"span","","",85,[[["self"]],["span"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[["self"]],["u"]]],[11,"to_owned","","",85,[[["self"]],["t"]]],[11,"clone_into","","",85,N],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"try_into","","",85,[[["self"]],["result"]]],[11,"get_type_id","","",85,[[["self"]],["typeid"]]],[11,"span","","",86,[[["self"]],["span"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[["self"]],["u"]]],[11,"to_owned","","",86,[[["self"]],["t"]]],[11,"clone_into","","",86,N],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"try_into","","",86,[[["self"]],["result"]]],[11,"get_type_id","","",86,[[["self"]],["typeid"]]],[11,"span","","",87,[[["self"]],["span"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[["self"]],["u"]]],[11,"to_owned","","",87,[[["self"]],["t"]]],[11,"clone_into","","",87,N],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"try_into","","",87,[[["self"]],["result"]]],[11,"get_type_id","","",87,[[["self"]],["typeid"]]],[11,"span","","",88,[[["self"]],["span"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"into","","",88,[[["self"]],["u"]]],[11,"to_owned","","",88,[[["self"]],["t"]]],[11,"clone_into","","",88,N],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"try_into","","",88,[[["self"]],["result"]]],[11,"get_type_id","","",88,[[["self"]],["typeid"]]],[11,"span","","",89,[[["self"]],["span"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"into","","",89,[[["self"]],["u"]]],[11,"to_owned","","",89,[[["self"]],["t"]]],[11,"clone_into","","",89,N],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"try_into","","",89,[[["self"]],["result"]]],[11,"get_type_id","","",89,[[["self"]],["typeid"]]],[11,"span","","",90,[[["self"]],["span"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[["self"]],["u"]]],[11,"to_owned","","",90,[[["self"]],["t"]]],[11,"clone_into","","",90,N],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"try_into","","",90,[[["self"]],["result"]]],[11,"get_type_id","","",90,[[["self"]],["typeid"]]],[11,"span","","",91,[[["self"]],["span"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"into","","",91,[[["self"]],["u"]]],[11,"to_owned","","",91,[[["self"]],["t"]]],[11,"clone_into","","",91,N],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"try_into","","",91,[[["self"]],["result"]]],[11,"get_type_id","","",91,[[["self"]],["typeid"]]],[11,"span","","",92,[[["self"]],["span"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"into","","",92,[[["self"]],["u"]]],[11,"to_owned","","",92,[[["self"]],["t"]]],[11,"clone_into","","",92,N],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"try_into","","",92,[[["self"]],["result"]]],[11,"get_type_id","","",92,[[["self"]],["typeid"]]],[11,"span","","",93,[[["self"]],["span"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"into","","",93,[[["self"]],["u"]]],[11,"to_owned","","",93,[[["self"]],["t"]]],[11,"clone_into","","",93,N],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"try_into","","",93,[[["self"]],["result"]]],[11,"get_type_id","","",93,[[["self"]],["typeid"]]],[11,"span","","",94,[[["self"]],["span"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"into","","",94,[[["self"]],["u"]]],[11,"to_owned","","",94,[[["self"]],["t"]]],[11,"clone_into","","",94,N],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"try_into","","",94,[[["self"]],["result"]]],[11,"get_type_id","","",94,[[["self"]],["typeid"]]],[11,"span","","",95,[[["self"]],["span"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"into","","",95,[[["self"]],["u"]]],[11,"to_owned","","",95,[[["self"]],["t"]]],[11,"clone_into","","",95,N],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"try_into","","",95,[[["self"]],["result"]]],[11,"get_type_id","","",95,[[["self"]],["typeid"]]],[11,"span","","",96,[[["self"]],["span"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"into","","",96,[[["self"]],["u"]]],[11,"to_owned","","",96,[[["self"]],["t"]]],[11,"clone_into","","",96,N],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"try_into","","",96,[[["self"]],["result"]]],[11,"get_type_id","","",96,[[["self"]],["typeid"]]],[11,"span","","",97,[[["self"]],["span"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"into","","",97,[[["self"]],["u"]]],[11,"to_owned","","",97,[[["self"]],["t"]]],[11,"clone_into","","",97,N],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"try_into","","",97,[[["self"]],["result"]]],[11,"get_type_id","","",97,[[["self"]],["typeid"]]],[11,"span","","",98,[[["self"]],["span"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"into","","",98,[[["self"]],["u"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,N],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"try_into","","",98,[[["self"]],["result"]]],[11,"get_type_id","","",98,[[["self"]],["typeid"]]],[11,"span","","",99,[[["self"]],["span"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"into","","",99,[[["self"]],["u"]]],[11,"to_owned","","",99,[[["self"]],["t"]]],[11,"clone_into","","",99,N],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"try_into","","",99,[[["self"]],["result"]]],[11,"get_type_id","","",99,[[["self"]],["typeid"]]],[11,"span","","",100,[[["self"]],["span"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"into","","",100,[[["self"]],["u"]]],[11,"to_owned","","",100,[[["self"]],["t"]]],[11,"clone_into","","",100,N],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"try_into","","",100,[[["self"]],["result"]]],[11,"get_type_id","","",100,[[["self"]],["typeid"]]],[11,"span","","",101,[[["self"]],["span"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"into","","",101,[[["self"]],["u"]]],[11,"to_owned","","",101,[[["self"]],["t"]]],[11,"clone_into","","",101,N],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"try_into","","",101,[[["self"]],["result"]]],[11,"get_type_id","","",101,[[["self"]],["typeid"]]],[11,"span","","",102,[[["self"]],["span"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"into","","",102,[[["self"]],["u"]]],[11,"to_owned","","",102,[[["self"]],["t"]]],[11,"clone_into","","",102,N],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"try_into","","",102,[[["self"]],["result"]]],[11,"get_type_id","","",102,[[["self"]],["typeid"]]],[11,"span","","",103,[[["self"]],["span"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"into","","",103,[[["self"]],["u"]]],[11,"to_owned","","",103,[[["self"]],["t"]]],[11,"clone_into","","",103,N],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"try_into","","",103,[[["self"]],["result"]]],[11,"get_type_id","","",103,[[["self"]],["typeid"]]],[11,"span","","",104,[[["self"]],["span"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"into","","",104,[[["self"]],["u"]]],[11,"to_owned","","",104,[[["self"]],["t"]]],[11,"clone_into","","",104,N],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"try_into","","",104,[[["self"]],["result"]]],[11,"get_type_id","","",104,[[["self"]],["typeid"]]],[11,"span","","",105,[[["self"]],["span"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"into","","",105,[[["self"]],["u"]]],[11,"to_owned","","",105,[[["self"]],["t"]]],[11,"clone_into","","",105,N],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"try_into","","",105,[[["self"]],["result"]]],[11,"get_type_id","","",105,[[["self"]],["typeid"]]],[11,"span","","",106,[[["self"]],["span"]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"into","","",106,[[["self"]],["u"]]],[11,"to_owned","","",106,[[["self"]],["t"]]],[11,"clone_into","","",106,N],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"try_into","","",106,[[["self"]],["result"]]],[11,"get_type_id","","",106,[[["self"]],["typeid"]]],[11,"span","","",107,[[["self"]],["span"]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"into","","",107,[[["self"]],["u"]]],[11,"to_owned","","",107,[[["self"]],["t"]]],[11,"clone_into","","",107,N],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"try_into","","",107,[[["self"]],["result"]]],[11,"get_type_id","","",107,[[["self"]],["typeid"]]],[11,"span","","",108,[[["self"]],["span"]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"into","","",108,[[["self"]],["u"]]],[11,"to_owned","","",108,[[["self"]],["t"]]],[11,"clone_into","","",108,N],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"try_into","","",108,[[["self"]],["result"]]],[11,"get_type_id","","",108,[[["self"]],["typeid"]]],[11,"span","","",109,[[["self"]],["span"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"into","","",109,[[["self"]],["u"]]],[11,"to_owned","","",109,[[["self"]],["t"]]],[11,"clone_into","","",109,N],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"try_into","","",109,[[["self"]],["result"]]],[11,"get_type_id","","",109,[[["self"]],["typeid"]]],[11,"span","","",110,[[["self"]],["span"]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"into","","",110,[[["self"]],["u"]]],[11,"to_owned","","",110,[[["self"]],["t"]]],[11,"clone_into","","",110,N],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"try_into","","",110,[[["self"]],["result"]]],[11,"get_type_id","","",110,[[["self"]],["typeid"]]],[11,"span","","",111,[[["self"]],["span"]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"into","","",111,[[["self"]],["u"]]],[11,"to_owned","","",111,[[["self"]],["t"]]],[11,"clone_into","","",111,N],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"try_into","","",111,[[["self"]],["result"]]],[11,"get_type_id","","",111,[[["self"]],["typeid"]]],[11,"span","","",112,[[["self"]],["span"]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"into","","",112,[[["self"]],["u"]]],[11,"to_owned","","",112,[[["self"]],["t"]]],[11,"clone_into","","",112,N],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"try_into","","",112,[[["self"]],["result"]]],[11,"get_type_id","","",112,[[["self"]],["typeid"]]],[11,"span","","",113,[[["self"]],["span"]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"into","","",113,[[["self"]],["u"]]],[11,"to_owned","","",113,[[["self"]],["t"]]],[11,"clone_into","","",113,N],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"try_into","","",113,[[["self"]],["result"]]],[11,"get_type_id","","",113,[[["self"]],["typeid"]]],[11,"span","","",114,[[["self"]],["span"]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"into","","",114,[[["self"]],["u"]]],[11,"to_owned","","",114,[[["self"]],["t"]]],[11,"clone_into","","",114,N],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"try_into","","",114,[[["self"]],["result"]]],[11,"get_type_id","","",114,[[["self"]],["typeid"]]],[11,"span","","",115,[[["self"]],["span"]]],[11,"from","","",115,[[["t"]],["t"]]],[11,"into","","",115,[[["self"]],["u"]]],[11,"to_owned","","",115,[[["self"]],["t"]]],[11,"clone_into","","",115,N],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"try_into","","",115,[[["self"]],["result"]]],[11,"get_type_id","","",115,[[["self"]],["typeid"]]],[11,"span","","",116,[[["self"]],["span"]]],[11,"from","","",116,[[["t"]],["t"]]],[11,"into","","",116,[[["self"]],["u"]]],[11,"to_owned","","",116,[[["self"]],["t"]]],[11,"clone_into","","",116,N],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"try_into","","",116,[[["self"]],["result"]]],[11,"get_type_id","","",116,[[["self"]],["typeid"]]],[11,"span","","",117,[[["self"]],["span"]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"into","","",117,[[["self"]],["u"]]],[11,"to_owned","","",117,[[["self"]],["t"]]],[11,"clone_into","","",117,N],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"try_into","","",117,[[["self"]],["result"]]],[11,"get_type_id","","",117,[[["self"]],["typeid"]]],[11,"span","","",118,[[["self"]],["span"]]],[11,"from","","",118,[[["t"]],["t"]]],[11,"into","","",118,[[["self"]],["u"]]],[11,"to_owned","","",118,[[["self"]],["t"]]],[11,"clone_into","","",118,N],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"try_into","","",118,[[["self"]],["result"]]],[11,"get_type_id","","",118,[[["self"]],["typeid"]]],[11,"span","","",119,[[["self"]],["span"]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"into","","",119,[[["self"]],["u"]]],[11,"to_owned","","",119,[[["self"]],["t"]]],[11,"clone_into","","",119,N],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"try_into","","",119,[[["self"]],["result"]]],[11,"get_type_id","","",119,[[["self"]],["typeid"]]],[11,"span","","",120,[[["self"]],["span"]]],[11,"from","","",120,[[["t"]],["t"]]],[11,"into","","",120,[[["self"]],["u"]]],[11,"to_owned","","",120,[[["self"]],["t"]]],[11,"clone_into","","",120,N],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"try_into","","",120,[[["self"]],["result"]]],[11,"get_type_id","","",120,[[["self"]],["typeid"]]],[11,"span","","",121,[[["self"]],["span"]]],[11,"from","","",121,[[["t"]],["t"]]],[11,"into","","",121,[[["self"]],["u"]]],[11,"to_owned","","",121,[[["self"]],["t"]]],[11,"clone_into","","",121,N],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"try_into","","",121,[[["self"]],["result"]]],[11,"get_type_id","","",121,[[["self"]],["typeid"]]],[11,"span","","",122,[[["self"]],["span"]]],[11,"from","","",122,[[["t"]],["t"]]],[11,"into","","",122,[[["self"]],["u"]]],[11,"to_owned","","",122,[[["self"]],["t"]]],[11,"clone_into","","",122,N],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"try_into","","",122,[[["self"]],["result"]]],[11,"get_type_id","","",122,[[["self"]],["typeid"]]],[11,"span","","",123,[[["self"]],["span"]]],[11,"from","","",123,[[["t"]],["t"]]],[11,"into","","",123,[[["self"]],["u"]]],[11,"to_owned","","",123,[[["self"]],["t"]]],[11,"clone_into","","",123,N],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"try_into","","",123,[[["self"]],["result"]]],[11,"get_type_id","","",123,[[["self"]],["typeid"]]],[11,"span","","",124,[[["self"]],["span"]]],[11,"from","","",124,[[["t"]],["t"]]],[11,"into","","",124,[[["self"]],["u"]]],[11,"to_owned","","",124,[[["self"]],["t"]]],[11,"clone_into","","",124,N],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"try_into","","",124,[[["self"]],["result"]]],[11,"get_type_id","","",124,[[["self"]],["typeid"]]],[11,"span","","",125,[[["self"]],["span"]]],[11,"from","","",125,[[["t"]],["t"]]],[11,"into","","",125,[[["self"]],["u"]]],[11,"to_owned","","",125,[[["self"]],["t"]]],[11,"clone_into","","",125,N],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"try_into","","",125,[[["self"]],["result"]]],[11,"get_type_id","","",125,[[["self"]],["typeid"]]],[11,"peek","","",126,[[["cursor"]],["bool"]]],[11,"display","","",126,[[],["str"]]],[11,"span","","",126,[[["self"]],["span"]]],[11,"from","","",126,[[["t"]],["t"]]],[11,"into","","",126,[[["self"]],["u"]]],[11,"to_owned","","",126,[[["self"]],["t"]]],[11,"clone_into","","",126,N],[11,"to_string","","",126,[[["self"]],["string"]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"try_into","","",126,[[["self"]],["result"]]],[11,"get_type_id","","",126,[[["self"]],["typeid"]]],[11,"peek","","",127,[[["cursor"]],["bool"]]],[11,"display","","",127,[[],["str"]]],[11,"span","","",127,[[["self"]],["span"]]],[11,"from","","",127,[[["t"]],["t"]]],[11,"into","","",127,[[["self"]],["u"]]],[11,"to_owned","","",127,[[["self"]],["t"]]],[11,"clone_into","","",127,N],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"try_into","","",127,[[["self"]],["result"]]],[11,"get_type_id","","",127,[[["self"]],["typeid"]]],[11,"peek","","",298,[[["cursor"]],["bool"]]],[11,"display","","",298,[[],["str"]]],[11,"span","","",298,[[["self"]],["span"]]],[11,"from","","",298,[[["t"]],["t"]]],[11,"into","","",298,[[["self"]],["u"]]],[11,"to_owned","","",298,[[["self"]],["t"]]],[11,"clone_into","","",298,N],[11,"try_from","","",298,[[["u"]],["result"]]],[11,"borrow","","",298,[[["self"]],["t"]]],[11,"borrow_mut","","",298,[[["self"]],["t"]]],[11,"try_into","","",298,[[["self"]],["result"]]],[11,"get_type_id","","",298,[[["self"]],["typeid"]]],[11,"peek","","",297,[[["cursor"]],["bool"]]],[11,"display","","",297,[[],["str"]]],[11,"span","","",297,[[["self"]],["span"]]],[11,"from","","",297,[[["t"]],["t"]]],[11,"into","","",297,[[["self"]],["u"]]],[11,"to_owned","","",297,[[["self"]],["t"]]],[11,"clone_into","","",297,N],[11,"try_from","","",297,[[["u"]],["result"]]],[11,"borrow","","",297,[[["self"]],["t"]]],[11,"borrow_mut","","",297,[[["self"]],["t"]]],[11,"try_into","","",297,[[["self"]],["result"]]],[11,"get_type_id","","",297,[[["self"]],["typeid"]]],[11,"peek","","",299,[[["cursor"]],["bool"]]],[11,"display","","",299,[[],["str"]]],[11,"span","","",299,[[["self"]],["span"]]],[11,"from","","",299,[[["t"]],["t"]]],[11,"into","","",299,[[["self"]],["u"]]],[11,"to_owned","","",299,[[["self"]],["t"]]],[11,"clone_into","","",299,N],[11,"try_from","","",299,[[["u"]],["result"]]],[11,"borrow","","",299,[[["self"]],["t"]]],[11,"borrow_mut","","",299,[[["self"]],["t"]]],[11,"try_into","","",299,[[["self"]],["result"]]],[11,"get_type_id","","",299,[[["self"]],["typeid"]]],[11,"peek","","",301,[[["cursor"]],["bool"]]],[11,"display","","",301,[[],["str"]]],[11,"span","","",301,[[["self"]],["span"]]],[11,"from","","",301,[[["t"]],["t"]]],[11,"into","","",301,[[["self"]],["u"]]],[11,"to_owned","","",301,[[["self"]],["t"]]],[11,"clone_into","","",301,N],[11,"try_from","","",301,[[["u"]],["result"]]],[11,"borrow","","",301,[[["self"]],["t"]]],[11,"borrow_mut","","",301,[[["self"]],["t"]]],[11,"try_into","","",301,[[["self"]],["result"]]],[11,"get_type_id","","",301,[[["self"]],["typeid"]]],[11,"peek","","",300,[[["cursor"]],["bool"]]],[11,"display","","",300,[[],["str"]]],[11,"span","","",300,[[["self"]],["span"]]],[11,"from","","",300,[[["t"]],["t"]]],[11,"into","","",300,[[["self"]],["u"]]],[11,"to_owned","","",300,[[["self"]],["t"]]],[11,"clone_into","","",300,N],[11,"try_from","","",300,[[["u"]],["result"]]],[11,"borrow","","",300,[[["self"]],["t"]]],[11,"borrow_mut","","",300,[[["self"]],["t"]]],[11,"try_into","","",300,[[["self"]],["result"]]],[11,"get_type_id","","",300,[[["self"]],["typeid"]]],[11,"peek","","",296,[[["cursor"]],["bool"]]],[11,"display","","",296,[[],["str"]]],[11,"span","","",296,[[["self"]],["span"]]],[11,"from","","",296,[[["t"]],["t"]]],[11,"into","","",296,[[["self"]],["u"]]],[11,"to_owned","","",296,[[["self"]],["t"]]],[11,"clone_into","","",296,N],[11,"try_from","","",296,[[["u"]],["result"]]],[11,"borrow","","",296,[[["self"]],["t"]]],[11,"borrow_mut","","",296,[[["self"]],["t"]]],[11,"try_into","","",296,[[["self"]],["result"]]],[11,"get_type_id","","",296,[[["self"]],["typeid"]]],[11,"span","","",128,[[["self"]],["span"]]],[11,"from","","",128,[[["t"]],["t"]]],[11,"into","","",128,[[["self"]],["u"]]],[11,"to_owned","","",128,[[["self"]],["t"]]],[11,"clone_into","","",128,N],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"try_into","","",128,[[["self"]],["result"]]],[11,"get_type_id","","",128,[[["self"]],["typeid"]]],[11,"span","","",129,[[["self"]],["span"]]],[11,"from","","",129,[[["t"]],["t"]]],[11,"into","","",129,[[["self"]],["u"]]],[11,"to_owned","","",129,[[["self"]],["t"]]],[11,"clone_into","","",129,N],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"try_into","","",129,[[["self"]],["result"]]],[11,"get_type_id","","",129,[[["self"]],["typeid"]]],[11,"from","","",130,[[["t"]],["t"]]],[11,"into","","",130,[[["self"]],["u"]]],[11,"to_owned","","",130,[[["self"]],["t"]]],[11,"clone_into","","",130,N],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"try_into","","",130,[[["self"]],["result"]]],[11,"get_type_id","","",130,[[["self"]],["typeid"]]],[11,"from","","",131,[[["t"]],["t"]]],[11,"into","","",131,[[["self"]],["u"]]],[11,"to_owned","","",131,[[["self"]],["t"]]],[11,"clone_into","","",131,N],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"try_into","","",131,[[["self"]],["result"]]],[11,"get_type_id","","",131,[[["self"]],["typeid"]]],[11,"from","","",132,[[["t"]],["t"]]],[11,"into","","",132,[[["self"]],["u"]]],[11,"to_owned","","",132,[[["self"]],["t"]]],[11,"clone_into","","",132,N],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"try_into","","",132,[[["self"]],["result"]]],[11,"get_type_id","","",132,[[["self"]],["typeid"]]],[11,"span","","",133,[[["self"]],["span"]]],[11,"from","","",133,[[["t"]],["t"]]],[11,"into","","",133,[[["self"]],["u"]]],[11,"to_owned","","",133,[[["self"]],["t"]]],[11,"clone_into","","",133,N],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"try_into","","",133,[[["self"]],["result"]]],[11,"get_type_id","","",133,[[["self"]],["typeid"]]],[11,"span","","",134,[[["self"]],["span"]]],[11,"from","","",134,[[["t"]],["t"]]],[11,"into","","",134,[[["self"]],["u"]]],[11,"to_owned","","",134,[[["self"]],["t"]]],[11,"clone_into","","",134,N],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"try_into","","",134,[[["self"]],["result"]]],[11,"get_type_id","","",134,[[["self"]],["typeid"]]],[11,"span","","",135,[[["self"]],["span"]]],[11,"from","","",135,[[["t"]],["t"]]],[11,"into","","",135,[[["self"]],["u"]]],[11,"to_owned","","",135,[[["self"]],["t"]]],[11,"clone_into","","",135,N],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"try_into","","",135,[[["self"]],["result"]]],[11,"get_type_id","","",135,[[["self"]],["typeid"]]],[11,"span","","",136,[[["self"]],["span"]]],[11,"from","","",136,[[["t"]],["t"]]],[11,"into","","",136,[[["self"]],["u"]]],[11,"to_owned","","",136,[[["self"]],["t"]]],[11,"clone_into","","",136,N],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"try_into","","",136,[[["self"]],["result"]]],[11,"get_type_id","","",136,[[["self"]],["typeid"]]],[11,"span","","",137,[[["self"]],["span"]]],[11,"from","","",137,[[["t"]],["t"]]],[11,"into","","",137,[[["self"]],["u"]]],[11,"to_owned","","",137,[[["self"]],["t"]]],[11,"clone_into","","",137,N],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"try_into","","",137,[[["self"]],["result"]]],[11,"get_type_id","","",137,[[["self"]],["typeid"]]],[11,"span","","",138,[[["self"]],["span"]]],[11,"from","","",138,[[["t"]],["t"]]],[11,"into","","",138,[[["self"]],["u"]]],[11,"to_owned","","",138,[[["self"]],["t"]]],[11,"clone_into","","",138,N],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"try_into","","",138,[[["self"]],["result"]]],[11,"get_type_id","","",138,[[["self"]],["typeid"]]],[11,"span","","",139,[[["self"]],["span"]]],[11,"from","","",139,[[["t"]],["t"]]],[11,"into","","",139,[[["self"]],["u"]]],[11,"to_owned","","",139,[[["self"]],["t"]]],[11,"clone_into","","",139,N],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"try_into","","",139,[[["self"]],["result"]]],[11,"get_type_id","","",139,[[["self"]],["typeid"]]],[11,"span","","",140,[[["self"]],["span"]]],[11,"from","","",140,[[["t"]],["t"]]],[11,"into","","",140,[[["self"]],["u"]]],[11,"to_owned","","",140,[[["self"]],["t"]]],[11,"clone_into","","",140,N],[11,"try_from","","",140,[[["u"]],["result"]]],[11,"borrow","","",140,[[["self"]],["t"]]],[11,"borrow_mut","","",140,[[["self"]],["t"]]],[11,"try_into","","",140,[[["self"]],["result"]]],[11,"get_type_id","","",140,[[["self"]],["typeid"]]],[11,"span","","",141,[[["self"]],["span"]]],[11,"from","","",141,[[["t"]],["t"]]],[11,"into","","",141,[[["self"]],["u"]]],[11,"to_owned","","",141,[[["self"]],["t"]]],[11,"clone_into","","",141,N],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"try_into","","",141,[[["self"]],["result"]]],[11,"get_type_id","","",141,[[["self"]],["typeid"]]],[11,"span","","",142,[[["self"]],["span"]]],[11,"from","","",142,[[["t"]],["t"]]],[11,"into","","",142,[[["self"]],["u"]]],[11,"to_owned","","",142,[[["self"]],["t"]]],[11,"clone_into","","",142,N],[11,"try_from","","",142,[[["u"]],["result"]]],[11,"borrow","","",142,[[["self"]],["t"]]],[11,"borrow_mut","","",142,[[["self"]],["t"]]],[11,"try_into","","",142,[[["self"]],["result"]]],[11,"get_type_id","","",142,[[["self"]],["typeid"]]],[11,"span","","",143,[[["self"]],["span"]]],[11,"from","","",143,[[["t"]],["t"]]],[11,"into","","",143,[[["self"]],["u"]]],[11,"to_owned","","",143,[[["self"]],["t"]]],[11,"clone_into","","",143,N],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"try_into","","",143,[[["self"]],["result"]]],[11,"get_type_id","","",143,[[["self"]],["typeid"]]],[11,"span","","",144,[[["self"]],["span"]]],[11,"from","","",144,[[["t"]],["t"]]],[11,"into","","",144,[[["self"]],["u"]]],[11,"to_owned","","",144,[[["self"]],["t"]]],[11,"clone_into","","",144,N],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"try_into","","",144,[[["self"]],["result"]]],[11,"get_type_id","","",144,[[["self"]],["typeid"]]],[11,"span","","",145,[[["self"]],["span"]]],[11,"from","","",145,[[["t"]],["t"]]],[11,"into","","",145,[[["self"]],["u"]]],[11,"to_owned","","",145,[[["self"]],["t"]]],[11,"clone_into","","",145,N],[11,"try_from","","",145,[[["u"]],["result"]]],[11,"borrow","","",145,[[["self"]],["t"]]],[11,"borrow_mut","","",145,[[["self"]],["t"]]],[11,"try_into","","",145,[[["self"]],["result"]]],[11,"get_type_id","","",145,[[["self"]],["typeid"]]],[11,"span","","",146,[[["self"]],["span"]]],[11,"from","","",146,[[["t"]],["t"]]],[11,"into","","",146,[[["self"]],["u"]]],[11,"to_owned","","",146,[[["self"]],["t"]]],[11,"clone_into","","",146,N],[11,"try_from","","",146,[[["u"]],["result"]]],[11,"borrow","","",146,[[["self"]],["t"]]],[11,"borrow_mut","","",146,[[["self"]],["t"]]],[11,"try_into","","",146,[[["self"]],["result"]]],[11,"get_type_id","","",146,[[["self"]],["typeid"]]],[11,"span","","",147,[[["self"]],["span"]]],[11,"from","","",147,[[["t"]],["t"]]],[11,"into","","",147,[[["self"]],["u"]]],[11,"to_owned","","",147,[[["self"]],["t"]]],[11,"clone_into","","",147,N],[11,"try_from","","",147,[[["u"]],["result"]]],[11,"borrow","","",147,[[["self"]],["t"]]],[11,"borrow_mut","","",147,[[["self"]],["t"]]],[11,"try_into","","",147,[[["self"]],["result"]]],[11,"get_type_id","","",147,[[["self"]],["typeid"]]],[11,"span","","",148,[[["self"]],["span"]]],[11,"from","","",148,[[["t"]],["t"]]],[11,"into","","",148,[[["self"]],["u"]]],[11,"to_owned","","",148,[[["self"]],["t"]]],[11,"clone_into","","",148,N],[11,"try_from","","",148,[[["u"]],["result"]]],[11,"borrow","","",148,[[["self"]],["t"]]],[11,"borrow_mut","","",148,[[["self"]],["t"]]],[11,"try_into","","",148,[[["self"]],["result"]]],[11,"get_type_id","","",148,[[["self"]],["typeid"]]],[11,"span","","",149,[[["self"]],["span"]]],[11,"from","","",149,[[["t"]],["t"]]],[11,"into","","",149,[[["self"]],["u"]]],[11,"to_owned","","",149,[[["self"]],["t"]]],[11,"clone_into","","",149,N],[11,"try_from","","",149,[[["u"]],["result"]]],[11,"borrow","","",149,[[["self"]],["t"]]],[11,"borrow_mut","","",149,[[["self"]],["t"]]],[11,"try_into","","",149,[[["self"]],["result"]]],[11,"get_type_id","","",149,[[["self"]],["typeid"]]],[11,"span","","",150,[[["self"]],["span"]]],[11,"from","","",150,[[["t"]],["t"]]],[11,"into","","",150,[[["self"]],["u"]]],[11,"to_owned","","",150,[[["self"]],["t"]]],[11,"clone_into","","",150,N],[11,"try_from","","",150,[[["u"]],["result"]]],[11,"borrow","","",150,[[["self"]],["t"]]],[11,"borrow_mut","","",150,[[["self"]],["t"]]],[11,"try_into","","",150,[[["self"]],["result"]]],[11,"get_type_id","","",150,[[["self"]],["typeid"]]],[11,"span","","",151,[[["self"]],["span"]]],[11,"from","","",151,[[["t"]],["t"]]],[11,"into","","",151,[[["self"]],["u"]]],[11,"to_owned","","",151,[[["self"]],["t"]]],[11,"clone_into","","",151,N],[11,"try_from","","",151,[[["u"]],["result"]]],[11,"borrow","","",151,[[["self"]],["t"]]],[11,"borrow_mut","","",151,[[["self"]],["t"]]],[11,"try_into","","",151,[[["self"]],["result"]]],[11,"get_type_id","","",151,[[["self"]],["typeid"]]],[11,"span","","",152,[[["self"]],["span"]]],[11,"from","","",152,[[["t"]],["t"]]],[11,"into","","",152,[[["self"]],["u"]]],[11,"to_owned","","",152,[[["self"]],["t"]]],[11,"clone_into","","",152,N],[11,"try_from","","",152,[[["u"]],["result"]]],[11,"borrow","","",152,[[["self"]],["t"]]],[11,"borrow_mut","","",152,[[["self"]],["t"]]],[11,"try_into","","",152,[[["self"]],["result"]]],[11,"get_type_id","","",152,[[["self"]],["typeid"]]],[11,"span","","",153,[[["self"]],["span"]]],[11,"from","","",153,[[["t"]],["t"]]],[11,"into","","",153,[[["self"]],["u"]]],[11,"to_owned","","",153,[[["self"]],["t"]]],[11,"clone_into","","",153,N],[11,"try_from","","",153,[[["u"]],["result"]]],[11,"borrow","","",153,[[["self"]],["t"]]],[11,"borrow_mut","","",153,[[["self"]],["t"]]],[11,"try_into","","",153,[[["self"]],["result"]]],[11,"get_type_id","","",153,[[["self"]],["typeid"]]],[11,"span","","",154,[[["self"]],["span"]]],[11,"from","","",154,[[["t"]],["t"]]],[11,"into","","",154,[[["self"]],["u"]]],[11,"to_owned","","",154,[[["self"]],["t"]]],[11,"clone_into","","",154,N],[11,"try_from","","",154,[[["u"]],["result"]]],[11,"borrow","","",154,[[["self"]],["t"]]],[11,"borrow_mut","","",154,[[["self"]],["t"]]],[11,"try_into","","",154,[[["self"]],["result"]]],[11,"get_type_id","","",154,[[["self"]],["typeid"]]],[11,"span","","",155,[[["self"]],["span"]]],[11,"from","","",155,[[["t"]],["t"]]],[11,"into","","",155,[[["self"]],["u"]]],[11,"to_owned","","",155,[[["self"]],["t"]]],[11,"clone_into","","",155,N],[11,"try_from","","",155,[[["u"]],["result"]]],[11,"borrow","","",155,[[["self"]],["t"]]],[11,"borrow_mut","","",155,[[["self"]],["t"]]],[11,"try_into","","",155,[[["self"]],["result"]]],[11,"get_type_id","","",155,[[["self"]],["typeid"]]],[11,"span","","",156,[[["self"]],["span"]]],[11,"from","","",156,[[["t"]],["t"]]],[11,"into","","",156,[[["self"]],["u"]]],[11,"to_owned","","",156,[[["self"]],["t"]]],[11,"clone_into","","",156,N],[11,"try_from","","",156,[[["u"]],["result"]]],[11,"borrow","","",156,[[["self"]],["t"]]],[11,"borrow_mut","","",156,[[["self"]],["t"]]],[11,"try_into","","",156,[[["self"]],["result"]]],[11,"get_type_id","","",156,[[["self"]],["typeid"]]],[11,"from","","",157,[[["t"]],["t"]]],[11,"into","","",157,[[["self"]],["u"]]],[11,"to_owned","","",157,[[["self"]],["t"]]],[11,"clone_into","","",157,N],[11,"try_from","","",157,[[["u"]],["result"]]],[11,"borrow","","",157,[[["self"]],["t"]]],[11,"borrow_mut","","",157,[[["self"]],["t"]]],[11,"try_into","","",157,[[["self"]],["result"]]],[11,"get_type_id","","",157,[[["self"]],["typeid"]]],[11,"from","","",314,[[["t"]],["t"]]],[11,"into","","",314,[[["self"]],["u"]]],[11,"to_owned","","",314,[[["self"]],["t"]]],[11,"clone_into","","",314,N],[11,"to_string","","",314,[[["self"]],["string"]]],[11,"try_from","","",314,[[["u"]],["result"]]],[11,"borrow","","",314,[[["self"]],["t"]]],[11,"borrow_mut","","",314,[[["self"]],["t"]]],[11,"try_into","","",314,[[["self"]],["result"]]],[11,"get_type_id","","",314,[[["self"]],["typeid"]]],[11,"from","","",158,[[["t"]],["t"]]],[11,"into","","",158,[[["self"]],["u"]]],[11,"to_owned","","",158,[[["self"]],["t"]]],[11,"clone_into","","",158,N],[11,"try_from","","",158,[[["u"]],["result"]]],[11,"borrow","","",158,[[["self"]],["t"]]],[11,"borrow_mut","","",158,[[["self"]],["t"]]],[11,"try_into","","",158,[[["self"]],["result"]]],[11,"get_type_id","","",158,[[["self"]],["typeid"]]],[11,"span","","",159,[[["self"]],["span"]]],[11,"from","","",159,[[["t"]],["t"]]],[11,"into","","",159,[[["self"]],["u"]]],[11,"to_owned","","",159,[[["self"]],["t"]]],[11,"clone_into","","",159,N],[11,"try_from","","",159,[[["u"]],["result"]]],[11,"borrow","","",159,[[["self"]],["t"]]],[11,"borrow_mut","","",159,[[["self"]],["t"]]],[11,"try_into","","",159,[[["self"]],["result"]]],[11,"get_type_id","","",159,[[["self"]],["typeid"]]],[11,"span","","",160,[[["self"]],["span"]]],[11,"from","","",160,[[["t"]],["t"]]],[11,"into","","",160,[[["self"]],["u"]]],[11,"to_owned","","",160,[[["self"]],["t"]]],[11,"clone_into","","",160,N],[11,"try_from","","",160,[[["u"]],["result"]]],[11,"borrow","","",160,[[["self"]],["t"]]],[11,"borrow_mut","","",160,[[["self"]],["t"]]],[11,"try_into","","",160,[[["self"]],["result"]]],[11,"get_type_id","","",160,[[["self"]],["typeid"]]],[11,"span","","",161,[[["self"]],["span"]]],[11,"from","","",161,[[["t"]],["t"]]],[11,"into","","",161,[[["self"]],["u"]]],[11,"to_owned","","",161,[[["self"]],["t"]]],[11,"clone_into","","",161,N],[11,"try_from","","",161,[[["u"]],["result"]]],[11,"borrow","","",161,[[["self"]],["t"]]],[11,"borrow_mut","","",161,[[["self"]],["t"]]],[11,"try_into","","",161,[[["self"]],["result"]]],[11,"get_type_id","","",161,[[["self"]],["typeid"]]],[11,"span","","",162,[[["self"]],["span"]]],[11,"from","","",162,[[["t"]],["t"]]],[11,"into","","",162,[[["self"]],["u"]]],[11,"to_owned","","",162,[[["self"]],["t"]]],[11,"clone_into","","",162,N],[11,"try_from","","",162,[[["u"]],["result"]]],[11,"borrow","","",162,[[["self"]],["t"]]],[11,"borrow_mut","","",162,[[["self"]],["t"]]],[11,"try_into","","",162,[[["self"]],["result"]]],[11,"get_type_id","","",162,[[["self"]],["typeid"]]],[11,"span","","",163,[[["self"]],["span"]]],[11,"from","","",163,[[["t"]],["t"]]],[11,"into","","",163,[[["self"]],["u"]]],[11,"to_owned","","",163,[[["self"]],["t"]]],[11,"clone_into","","",163,N],[11,"try_from","","",163,[[["u"]],["result"]]],[11,"borrow","","",163,[[["self"]],["t"]]],[11,"borrow_mut","","",163,[[["self"]],["t"]]],[11,"try_into","","",163,[[["self"]],["result"]]],[11,"get_type_id","","",163,[[["self"]],["typeid"]]],[11,"span","","",164,[[["self"]],["span"]]],[11,"from","","",164,[[["t"]],["t"]]],[11,"into","","",164,[[["self"]],["u"]]],[11,"to_owned","","",164,[[["self"]],["t"]]],[11,"clone_into","","",164,N],[11,"try_from","","",164,[[["u"]],["result"]]],[11,"borrow","","",164,[[["self"]],["t"]]],[11,"borrow_mut","","",164,[[["self"]],["t"]]],[11,"try_into","","",164,[[["self"]],["result"]]],[11,"get_type_id","","",164,[[["self"]],["typeid"]]],[11,"span","","",165,[[["self"]],["span"]]],[11,"from","","",165,[[["t"]],["t"]]],[11,"into","","",165,[[["self"]],["u"]]],[11,"to_owned","","",165,[[["self"]],["t"]]],[11,"clone_into","","",165,N],[11,"try_from","","",165,[[["u"]],["result"]]],[11,"borrow","","",165,[[["self"]],["t"]]],[11,"borrow_mut","","",165,[[["self"]],["t"]]],[11,"try_into","","",165,[[["self"]],["result"]]],[11,"get_type_id","","",165,[[["self"]],["typeid"]]],[11,"span","","",166,[[["self"]],["span"]]],[11,"from","","",166,[[["t"]],["t"]]],[11,"into","","",166,[[["self"]],["u"]]],[11,"to_owned","","",166,[[["self"]],["t"]]],[11,"clone_into","","",166,N],[11,"try_from","","",166,[[["u"]],["result"]]],[11,"borrow","","",166,[[["self"]],["t"]]],[11,"borrow_mut","","",166,[[["self"]],["t"]]],[11,"try_into","","",166,[[["self"]],["result"]]],[11,"get_type_id","","",166,[[["self"]],["typeid"]]],[11,"from","","",167,[[["t"]],["t"]]],[11,"into","","",167,[[["self"]],["u"]]],[11,"to_owned","","",167,[[["self"]],["t"]]],[11,"clone_into","","",167,N],[11,"try_from","","",167,[[["u"]],["result"]]],[11,"borrow","","",167,[[["self"]],["t"]]],[11,"borrow_mut","","",167,[[["self"]],["t"]]],[11,"try_into","","",167,[[["self"]],["result"]]],[11,"get_type_id","","",167,[[["self"]],["typeid"]]],[11,"span","","",168,[[["self"]],["span"]]],[11,"from","","",168,[[["t"]],["t"]]],[11,"into","","",168,[[["self"]],["u"]]],[11,"to_owned","","",168,[[["self"]],["t"]]],[11,"clone_into","","",168,N],[11,"try_from","","",168,[[["u"]],["result"]]],[11,"borrow","","",168,[[["self"]],["t"]]],[11,"borrow_mut","","",168,[[["self"]],["t"]]],[11,"try_into","","",168,[[["self"]],["result"]]],[11,"get_type_id","","",168,[[["self"]],["typeid"]]],[11,"span","","",169,[[["self"]],["span"]]],[11,"from","","",169,[[["t"]],["t"]]],[11,"into","","",169,[[["self"]],["u"]]],[11,"to_owned","","",169,[[["self"]],["t"]]],[11,"clone_into","","",169,N],[11,"try_from","","",169,[[["u"]],["result"]]],[11,"borrow","","",169,[[["self"]],["t"]]],[11,"borrow_mut","","",169,[[["self"]],["t"]]],[11,"try_into","","",169,[[["self"]],["result"]]],[11,"get_type_id","","",169,[[["self"]],["typeid"]]],[11,"span","","",170,[[["self"]],["span"]]],[11,"from","","",170,[[["t"]],["t"]]],[11,"into","","",170,[[["self"]],["u"]]],[11,"to_owned","","",170,[[["self"]],["t"]]],[11,"clone_into","","",170,N],[11,"try_from","","",170,[[["u"]],["result"]]],[11,"borrow","","",170,[[["self"]],["t"]]],[11,"borrow_mut","","",170,[[["self"]],["t"]]],[11,"try_into","","",170,[[["self"]],["result"]]],[11,"get_type_id","","",170,[[["self"]],["typeid"]]],[11,"span","","",171,[[["self"]],["span"]]],[11,"from","","",171,[[["t"]],["t"]]],[11,"into","","",171,[[["self"]],["u"]]],[11,"to_owned","","",171,[[["self"]],["t"]]],[11,"clone_into","","",171,N],[11,"try_from","","",171,[[["u"]],["result"]]],[11,"borrow","","",171,[[["self"]],["t"]]],[11,"borrow_mut","","",171,[[["self"]],["t"]]],[11,"try_into","","",171,[[["self"]],["result"]]],[11,"get_type_id","","",171,[[["self"]],["typeid"]]],[11,"span","","",172,[[["self"]],["span"]]],[11,"from","","",172,[[["t"]],["t"]]],[11,"into","","",172,[[["self"]],["u"]]],[11,"to_owned","","",172,[[["self"]],["t"]]],[11,"clone_into","","",172,N],[11,"try_from","","",172,[[["u"]],["result"]]],[11,"borrow","","",172,[[["self"]],["t"]]],[11,"borrow_mut","","",172,[[["self"]],["t"]]],[11,"try_into","","",172,[[["self"]],["result"]]],[11,"get_type_id","","",172,[[["self"]],["typeid"]]],[11,"span","","",173,[[["self"]],["span"]]],[11,"from","","",173,[[["t"]],["t"]]],[11,"into","","",173,[[["self"]],["u"]]],[11,"to_owned","","",173,[[["self"]],["t"]]],[11,"clone_into","","",173,N],[11,"try_from","","",173,[[["u"]],["result"]]],[11,"borrow","","",173,[[["self"]],["t"]]],[11,"borrow_mut","","",173,[[["self"]],["t"]]],[11,"try_into","","",173,[[["self"]],["result"]]],[11,"get_type_id","","",173,[[["self"]],["typeid"]]],[11,"span","","",174,[[["self"]],["span"]]],[11,"from","","",174,[[["t"]],["t"]]],[11,"into","","",174,[[["self"]],["u"]]],[11,"to_owned","","",174,[[["self"]],["t"]]],[11,"clone_into","","",174,N],[11,"try_from","","",174,[[["u"]],["result"]]],[11,"borrow","","",174,[[["self"]],["t"]]],[11,"borrow_mut","","",174,[[["self"]],["t"]]],[11,"try_into","","",174,[[["self"]],["result"]]],[11,"get_type_id","","",174,[[["self"]],["typeid"]]],[11,"span","","",175,[[["self"]],["span"]]],[11,"from","","",175,[[["t"]],["t"]]],[11,"into","","",175,[[["self"]],["u"]]],[11,"to_owned","","",175,[[["self"]],["t"]]],[11,"clone_into","","",175,N],[11,"try_from","","",175,[[["u"]],["result"]]],[11,"borrow","","",175,[[["self"]],["t"]]],[11,"borrow_mut","","",175,[[["self"]],["t"]]],[11,"try_into","","",175,[[["self"]],["result"]]],[11,"get_type_id","","",175,[[["self"]],["typeid"]]],[11,"span","","",176,[[["self"]],["span"]]],[11,"from","","",176,[[["t"]],["t"]]],[11,"into","","",176,[[["self"]],["u"]]],[11,"to_owned","","",176,[[["self"]],["t"]]],[11,"clone_into","","",176,N],[11,"try_from","","",176,[[["u"]],["result"]]],[11,"borrow","","",176,[[["self"]],["t"]]],[11,"borrow_mut","","",176,[[["self"]],["t"]]],[11,"try_into","","",176,[[["self"]],["result"]]],[11,"get_type_id","","",176,[[["self"]],["typeid"]]],[11,"span","","",177,[[["self"]],["span"]]],[11,"from","","",177,[[["t"]],["t"]]],[11,"into","","",177,[[["self"]],["u"]]],[11,"to_owned","","",177,[[["self"]],["t"]]],[11,"clone_into","","",177,N],[11,"try_from","","",177,[[["u"]],["result"]]],[11,"borrow","","",177,[[["self"]],["t"]]],[11,"borrow_mut","","",177,[[["self"]],["t"]]],[11,"try_into","","",177,[[["self"]],["result"]]],[11,"get_type_id","","",177,[[["self"]],["typeid"]]],[11,"span","","",178,[[["self"]],["span"]]],[11,"from","","",178,[[["t"]],["t"]]],[11,"into","","",178,[[["self"]],["u"]]],[11,"to_owned","","",178,[[["self"]],["t"]]],[11,"clone_into","","",178,N],[11,"try_from","","",178,[[["u"]],["result"]]],[11,"borrow","","",178,[[["self"]],["t"]]],[11,"borrow_mut","","",178,[[["self"]],["t"]]],[11,"try_into","","",178,[[["self"]],["result"]]],[11,"get_type_id","","",178,[[["self"]],["typeid"]]],[11,"from","","",179,[[["t"]],["t"]]],[11,"into","","",179,[[["self"]],["u"]]],[11,"to_owned","","",179,[[["self"]],["t"]]],[11,"clone_into","","",179,N],[11,"try_from","","",179,[[["u"]],["result"]]],[11,"borrow","","",179,[[["self"]],["t"]]],[11,"borrow_mut","","",179,[[["self"]],["t"]]],[11,"try_into","","",179,[[["self"]],["result"]]],[11,"get_type_id","","",179,[[["self"]],["typeid"]]],[11,"from","","",180,[[["t"]],["t"]]],[11,"into","","",180,[[["self"]],["u"]]],[11,"to_owned","","",180,[[["self"]],["t"]]],[11,"clone_into","","",180,N],[11,"try_from","","",180,[[["u"]],["result"]]],[11,"borrow","","",180,[[["self"]],["t"]]],[11,"borrow_mut","","",180,[[["self"]],["t"]]],[11,"try_into","","",180,[[["self"]],["result"]]],[11,"get_type_id","","",180,[[["self"]],["typeid"]]],[11,"peek","","",181,[[["cursor"]],["bool"]]],[11,"display","","",181,[[],["str"]]],[11,"span","","",181,[[["self"]],["span"]]],[11,"from","","",181,[[["t"]],["t"]]],[11,"into","","",181,[[["self"]],["u"]]],[11,"to_owned","","",181,[[["self"]],["t"]]],[11,"clone_into","","",181,N],[11,"try_from","","",181,[[["u"]],["result"]]],[11,"borrow","","",181,[[["self"]],["t"]]],[11,"borrow_mut","","",181,[[["self"]],["t"]]],[11,"try_into","","",181,[[["self"]],["result"]]],[11,"get_type_id","","",181,[[["self"]],["typeid"]]],[11,"from","","",182,[[["t"]],["t"]]],[11,"into","","",182,[[["self"]],["u"]]],[11,"to_owned","","",182,[[["self"]],["t"]]],[11,"clone_into","","",182,N],[11,"try_from","","",182,[[["u"]],["result"]]],[11,"borrow","","",182,[[["self"]],["t"]]],[11,"borrow_mut","","",182,[[["self"]],["t"]]],[11,"try_into","","",182,[[["self"]],["result"]]],[11,"get_type_id","","",182,[[["self"]],["typeid"]]],[11,"from","","",183,[[["t"]],["t"]]],[11,"into","","",183,[[["self"]],["u"]]],[11,"to_owned","","",183,[[["self"]],["t"]]],[11,"clone_into","","",183,N],[11,"try_from","","",183,[[["u"]],["result"]]],[11,"borrow","","",183,[[["self"]],["t"]]],[11,"borrow_mut","","",183,[[["self"]],["t"]]],[11,"try_into","","",183,[[["self"]],["result"]]],[11,"get_type_id","","",183,[[["self"]],["typeid"]]],[11,"from","","",184,[[["t"]],["t"]]],[11,"into","","",184,[[["self"]],["u"]]],[11,"to_owned","","",184,[[["self"]],["t"]]],[11,"clone_into","","",184,N],[11,"try_from","","",184,[[["u"]],["result"]]],[11,"borrow","","",184,[[["self"]],["t"]]],[11,"borrow_mut","","",184,[[["self"]],["t"]]],[11,"try_into","","",184,[[["self"]],["result"]]],[11,"get_type_id","","",184,[[["self"]],["typeid"]]],[11,"span","","",185,[[["self"]],["span"]]],[11,"from","","",185,[[["t"]],["t"]]],[11,"into","","",185,[[["self"]],["u"]]],[11,"to_owned","","",185,[[["self"]],["t"]]],[11,"clone_into","","",185,N],[11,"try_from","","",185,[[["u"]],["result"]]],[11,"borrow","","",185,[[["self"]],["t"]]],[11,"borrow_mut","","",185,[[["self"]],["t"]]],[11,"try_into","","",185,[[["self"]],["result"]]],[11,"get_type_id","","",185,[[["self"]],["typeid"]]],[11,"span","","",186,[[["self"]],["span"]]],[11,"from","","",186,[[["t"]],["t"]]],[11,"into","","",186,[[["self"]],["u"]]],[11,"to_owned","","",186,[[["self"]],["t"]]],[11,"clone_into","","",186,N],[11,"try_from","","",186,[[["u"]],["result"]]],[11,"borrow","","",186,[[["self"]],["t"]]],[11,"borrow_mut","","",186,[[["self"]],["t"]]],[11,"try_into","","",186,[[["self"]],["result"]]],[11,"get_type_id","","",186,[[["self"]],["typeid"]]],[11,"span","","",187,[[["self"]],["span"]]],[11,"from","","",187,[[["t"]],["t"]]],[11,"into","","",187,[[["self"]],["u"]]],[11,"to_owned","","",187,[[["self"]],["t"]]],[11,"clone_into","","",187,N],[11,"try_from","","",187,[[["u"]],["result"]]],[11,"borrow","","",187,[[["self"]],["t"]]],[11,"borrow_mut","","",187,[[["self"]],["t"]]],[11,"try_into","","",187,[[["self"]],["result"]]],[11,"get_type_id","","",187,[[["self"]],["typeid"]]],[11,"span","","",188,[[["self"]],["span"]]],[11,"from","","",188,[[["t"]],["t"]]],[11,"into","","",188,[[["self"]],["u"]]],[11,"to_owned","","",188,[[["self"]],["t"]]],[11,"clone_into","","",188,N],[11,"try_from","","",188,[[["u"]],["result"]]],[11,"borrow","","",188,[[["self"]],["t"]]],[11,"borrow_mut","","",188,[[["self"]],["t"]]],[11,"try_into","","",188,[[["self"]],["result"]]],[11,"get_type_id","","",188,[[["self"]],["typeid"]]],[11,"span","","",189,[[["self"]],["span"]]],[11,"from","","",189,[[["t"]],["t"]]],[11,"into","","",189,[[["self"]],["u"]]],[11,"to_owned","","",189,[[["self"]],["t"]]],[11,"clone_into","","",189,N],[11,"try_from","","",189,[[["u"]],["result"]]],[11,"borrow","","",189,[[["self"]],["t"]]],[11,"borrow_mut","","",189,[[["self"]],["t"]]],[11,"try_into","","",189,[[["self"]],["result"]]],[11,"get_type_id","","",189,[[["self"]],["typeid"]]],[11,"span","","",190,[[["self"]],["span"]]],[11,"from","","",190,[[["t"]],["t"]]],[11,"into","","",190,[[["self"]],["u"]]],[11,"to_owned","","",190,[[["self"]],["t"]]],[11,"clone_into","","",190,N],[11,"try_from","","",190,[[["u"]],["result"]]],[11,"borrow","","",190,[[["self"]],["t"]]],[11,"borrow_mut","","",190,[[["self"]],["t"]]],[11,"try_into","","",190,[[["self"]],["result"]]],[11,"get_type_id","","",190,[[["self"]],["typeid"]]],[11,"span","","",191,[[["self"]],["span"]]],[11,"from","","",191,[[["t"]],["t"]]],[11,"into","","",191,[[["self"]],["u"]]],[11,"to_owned","","",191,[[["self"]],["t"]]],[11,"clone_into","","",191,N],[11,"try_from","","",191,[[["u"]],["result"]]],[11,"borrow","","",191,[[["self"]],["t"]]],[11,"borrow_mut","","",191,[[["self"]],["t"]]],[11,"try_into","","",191,[[["self"]],["result"]]],[11,"get_type_id","","",191,[[["self"]],["typeid"]]],[11,"peek","syn::token","",192,[[["cursor"]],["bool"]]],[11,"display","","",192,[[],["str"]]],[11,"span","","",192,[[["self"]],["span"]]],[11,"from","","",192,[[["t"]],["t"]]],[11,"into","","",192,[[["self"]],["u"]]],[11,"to_owned","","",192,[[["self"]],["t"]]],[11,"clone_into","","",192,N],[11,"try_from","","",192,[[["u"]],["result"]]],[11,"borrow","","",192,[[["self"]],["t"]]],[11,"borrow_mut","","",192,[[["self"]],["t"]]],[11,"try_into","","",192,[[["self"]],["result"]]],[11,"get_type_id","","",192,[[["self"]],["typeid"]]],[11,"peek","","",193,[[["cursor"]],["bool"]]],[11,"display","","",193,[[],["str"]]],[11,"span","","",193,[[["self"]],["span"]]],[11,"from","","",193,[[["t"]],["t"]]],[11,"into","","",193,[[["self"]],["u"]]],[11,"to_owned","","",193,[[["self"]],["t"]]],[11,"clone_into","","",193,N],[11,"try_from","","",193,[[["u"]],["result"]]],[11,"borrow","","",193,[[["self"]],["t"]]],[11,"borrow_mut","","",193,[[["self"]],["t"]]],[11,"try_into","","",193,[[["self"]],["result"]]],[11,"get_type_id","","",193,[[["self"]],["typeid"]]],[11,"peek","","",194,[[["cursor"]],["bool"]]],[11,"display","","",194,[[],["str"]]],[11,"span","","",194,[[["self"]],["span"]]],[11,"from","","",194,[[["t"]],["t"]]],[11,"into","","",194,[[["self"]],["u"]]],[11,"to_owned","","",194,[[["self"]],["t"]]],[11,"clone_into","","",194,N],[11,"try_from","","",194,[[["u"]],["result"]]],[11,"borrow","","",194,[[["self"]],["t"]]],[11,"borrow_mut","","",194,[[["self"]],["t"]]],[11,"try_into","","",194,[[["self"]],["result"]]],[11,"get_type_id","","",194,[[["self"]],["typeid"]]],[11,"peek","","",195,[[["cursor"]],["bool"]]],[11,"display","","",195,[[],["str"]]],[11,"span","","",195,[[["self"]],["span"]]],[11,"from","","",195,[[["t"]],["t"]]],[11,"into","","",195,[[["self"]],["u"]]],[11,"to_owned","","",195,[[["self"]],["t"]]],[11,"clone_into","","",195,N],[11,"try_from","","",195,[[["u"]],["result"]]],[11,"borrow","","",195,[[["self"]],["t"]]],[11,"borrow_mut","","",195,[[["self"]],["t"]]],[11,"try_into","","",195,[[["self"]],["result"]]],[11,"get_type_id","","",195,[[["self"]],["typeid"]]],[11,"peek","","",196,[[["cursor"]],["bool"]]],[11,"display","","",196,[[],["str"]]],[11,"span","","",196,[[["self"]],["span"]]],[11,"from","","",196,[[["t"]],["t"]]],[11,"into","","",196,[[["self"]],["u"]]],[11,"to_owned","","",196,[[["self"]],["t"]]],[11,"clone_into","","",196,N],[11,"try_from","","",196,[[["u"]],["result"]]],[11,"borrow","","",196,[[["self"]],["t"]]],[11,"borrow_mut","","",196,[[["self"]],["t"]]],[11,"try_into","","",196,[[["self"]],["result"]]],[11,"get_type_id","","",196,[[["self"]],["typeid"]]],[11,"peek","","",197,[[["cursor"]],["bool"]]],[11,"display","","",197,[[],["str"]]],[11,"span","","",197,[[["self"]],["span"]]],[11,"from","","",197,[[["t"]],["t"]]],[11,"into","","",197,[[["self"]],["u"]]],[11,"to_owned","","",197,[[["self"]],["t"]]],[11,"clone_into","","",197,N],[11,"try_from","","",197,[[["u"]],["result"]]],[11,"borrow","","",197,[[["self"]],["t"]]],[11,"borrow_mut","","",197,[[["self"]],["t"]]],[11,"try_into","","",197,[[["self"]],["result"]]],[11,"get_type_id","","",197,[[["self"]],["typeid"]]],[11,"peek","","",198,[[["cursor"]],["bool"]]],[11,"display","","",198,[[],["str"]]],[11,"span","","",198,[[["self"]],["span"]]],[11,"from","","",198,[[["t"]],["t"]]],[11,"into","","",198,[[["self"]],["u"]]],[11,"to_owned","","",198,[[["self"]],["t"]]],[11,"clone_into","","",198,N],[11,"try_from","","",198,[[["u"]],["result"]]],[11,"borrow","","",198,[[["self"]],["t"]]],[11,"borrow_mut","","",198,[[["self"]],["t"]]],[11,"try_into","","",198,[[["self"]],["result"]]],[11,"get_type_id","","",198,[[["self"]],["typeid"]]],[11,"peek","","",199,[[["cursor"]],["bool"]]],[11,"display","","",199,[[],["str"]]],[11,"span","","",199,[[["self"]],["span"]]],[11,"from","","",199,[[["t"]],["t"]]],[11,"into","","",199,[[["self"]],["u"]]],[11,"to_owned","","",199,[[["self"]],["t"]]],[11,"clone_into","","",199,N],[11,"try_from","","",199,[[["u"]],["result"]]],[11,"borrow","","",199,[[["self"]],["t"]]],[11,"borrow_mut","","",199,[[["self"]],["t"]]],[11,"try_into","","",199,[[["self"]],["result"]]],[11,"get_type_id","","",199,[[["self"]],["typeid"]]],[11,"peek","","",200,[[["cursor"]],["bool"]]],[11,"display","","",200,[[],["str"]]],[11,"span","","",200,[[["self"]],["span"]]],[11,"from","","",200,[[["t"]],["t"]]],[11,"into","","",200,[[["self"]],["u"]]],[11,"to_owned","","",200,[[["self"]],["t"]]],[11,"clone_into","","",200,N],[11,"try_from","","",200,[[["u"]],["result"]]],[11,"borrow","","",200,[[["self"]],["t"]]],[11,"borrow_mut","","",200,[[["self"]],["t"]]],[11,"try_into","","",200,[[["self"]],["result"]]],[11,"get_type_id","","",200,[[["self"]],["typeid"]]],[11,"peek","","",201,[[["cursor"]],["bool"]]],[11,"display","","",201,[[],["str"]]],[11,"span","","",201,[[["self"]],["span"]]],[11,"from","","",201,[[["t"]],["t"]]],[11,"into","","",201,[[["self"]],["u"]]],[11,"to_owned","","",201,[[["self"]],["t"]]],[11,"clone_into","","",201,N],[11,"try_from","","",201,[[["u"]],["result"]]],[11,"borrow","","",201,[[["self"]],["t"]]],[11,"borrow_mut","","",201,[[["self"]],["t"]]],[11,"try_into","","",201,[[["self"]],["result"]]],[11,"get_type_id","","",201,[[["self"]],["typeid"]]],[11,"peek","","",202,[[["cursor"]],["bool"]]],[11,"display","","",202,[[],["str"]]],[11,"span","","",202,[[["self"]],["span"]]],[11,"from","","",202,[[["t"]],["t"]]],[11,"into","","",202,[[["self"]],["u"]]],[11,"to_owned","","",202,[[["self"]],["t"]]],[11,"clone_into","","",202,N],[11,"try_from","","",202,[[["u"]],["result"]]],[11,"borrow","","",202,[[["self"]],["t"]]],[11,"borrow_mut","","",202,[[["self"]],["t"]]],[11,"try_into","","",202,[[["self"]],["result"]]],[11,"get_type_id","","",202,[[["self"]],["typeid"]]],[11,"peek","","",203,[[["cursor"]],["bool"]]],[11,"display","","",203,[[],["str"]]],[11,"span","","",203,[[["self"]],["span"]]],[11,"from","","",203,[[["t"]],["t"]]],[11,"into","","",203,[[["self"]],["u"]]],[11,"to_owned","","",203,[[["self"]],["t"]]],[11,"clone_into","","",203,N],[11,"try_from","","",203,[[["u"]],["result"]]],[11,"borrow","","",203,[[["self"]],["t"]]],[11,"borrow_mut","","",203,[[["self"]],["t"]]],[11,"try_into","","",203,[[["self"]],["result"]]],[11,"get_type_id","","",203,[[["self"]],["typeid"]]],[11,"peek","","",204,[[["cursor"]],["bool"]]],[11,"display","","",204,[[],["str"]]],[11,"span","","",204,[[["self"]],["span"]]],[11,"from","","",204,[[["t"]],["t"]]],[11,"into","","",204,[[["self"]],["u"]]],[11,"to_owned","","",204,[[["self"]],["t"]]],[11,"clone_into","","",204,N],[11,"try_from","","",204,[[["u"]],["result"]]],[11,"borrow","","",204,[[["self"]],["t"]]],[11,"borrow_mut","","",204,[[["self"]],["t"]]],[11,"try_into","","",204,[[["self"]],["result"]]],[11,"get_type_id","","",204,[[["self"]],["typeid"]]],[11,"peek","","",205,[[["cursor"]],["bool"]]],[11,"display","","",205,[[],["str"]]],[11,"span","","",205,[[["self"]],["span"]]],[11,"from","","",205,[[["t"]],["t"]]],[11,"into","","",205,[[["self"]],["u"]]],[11,"to_owned","","",205,[[["self"]],["t"]]],[11,"clone_into","","",205,N],[11,"try_from","","",205,[[["u"]],["result"]]],[11,"borrow","","",205,[[["self"]],["t"]]],[11,"borrow_mut","","",205,[[["self"]],["t"]]],[11,"try_into","","",205,[[["self"]],["result"]]],[11,"get_type_id","","",205,[[["self"]],["typeid"]]],[11,"peek","","",206,[[["cursor"]],["bool"]]],[11,"display","","",206,[[],["str"]]],[11,"span","","",206,[[["self"]],["span"]]],[11,"from","","",206,[[["t"]],["t"]]],[11,"into","","",206,[[["self"]],["u"]]],[11,"to_owned","","",206,[[["self"]],["t"]]],[11,"clone_into","","",206,N],[11,"try_from","","",206,[[["u"]],["result"]]],[11,"borrow","","",206,[[["self"]],["t"]]],[11,"borrow_mut","","",206,[[["self"]],["t"]]],[11,"try_into","","",206,[[["self"]],["result"]]],[11,"get_type_id","","",206,[[["self"]],["typeid"]]],[11,"peek","","",207,[[["cursor"]],["bool"]]],[11,"display","","",207,[[],["str"]]],[11,"span","","",207,[[["self"]],["span"]]],[11,"from","","",207,[[["t"]],["t"]]],[11,"into","","",207,[[["self"]],["u"]]],[11,"to_owned","","",207,[[["self"]],["t"]]],[11,"clone_into","","",207,N],[11,"try_from","","",207,[[["u"]],["result"]]],[11,"borrow","","",207,[[["self"]],["t"]]],[11,"borrow_mut","","",207,[[["self"]],["t"]]],[11,"try_into","","",207,[[["self"]],["result"]]],[11,"get_type_id","","",207,[[["self"]],["typeid"]]],[11,"peek","","",208,[[["cursor"]],["bool"]]],[11,"display","","",208,[[],["str"]]],[11,"span","","",208,[[["self"]],["span"]]],[11,"from","","",208,[[["t"]],["t"]]],[11,"into","","",208,[[["self"]],["u"]]],[11,"to_owned","","",208,[[["self"]],["t"]]],[11,"clone_into","","",208,N],[11,"try_from","","",208,[[["u"]],["result"]]],[11,"borrow","","",208,[[["self"]],["t"]]],[11,"borrow_mut","","",208,[[["self"]],["t"]]],[11,"try_into","","",208,[[["self"]],["result"]]],[11,"get_type_id","","",208,[[["self"]],["typeid"]]],[11,"peek","","",209,[[["cursor"]],["bool"]]],[11,"display","","",209,[[],["str"]]],[11,"span","","",209,[[["self"]],["span"]]],[11,"from","","",209,[[["t"]],["t"]]],[11,"into","","",209,[[["self"]],["u"]]],[11,"to_owned","","",209,[[["self"]],["t"]]],[11,"clone_into","","",209,N],[11,"try_from","","",209,[[["u"]],["result"]]],[11,"borrow","","",209,[[["self"]],["t"]]],[11,"borrow_mut","","",209,[[["self"]],["t"]]],[11,"try_into","","",209,[[["self"]],["result"]]],[11,"get_type_id","","",209,[[["self"]],["typeid"]]],[11,"peek","","",210,[[["cursor"]],["bool"]]],[11,"display","","",210,[[],["str"]]],[11,"span","","",210,[[["self"]],["span"]]],[11,"from","","",210,[[["t"]],["t"]]],[11,"into","","",210,[[["self"]],["u"]]],[11,"to_owned","","",210,[[["self"]],["t"]]],[11,"clone_into","","",210,N],[11,"try_from","","",210,[[["u"]],["result"]]],[11,"borrow","","",210,[[["self"]],["t"]]],[11,"borrow_mut","","",210,[[["self"]],["t"]]],[11,"try_into","","",210,[[["self"]],["result"]]],[11,"get_type_id","","",210,[[["self"]],["typeid"]]],[11,"peek","","",211,[[["cursor"]],["bool"]]],[11,"display","","",211,[[],["str"]]],[11,"span","","",211,[[["self"]],["span"]]],[11,"from","","",211,[[["t"]],["t"]]],[11,"into","","",211,[[["self"]],["u"]]],[11,"to_owned","","",211,[[["self"]],["t"]]],[11,"clone_into","","",211,N],[11,"try_from","","",211,[[["u"]],["result"]]],[11,"borrow","","",211,[[["self"]],["t"]]],[11,"borrow_mut","","",211,[[["self"]],["t"]]],[11,"try_into","","",211,[[["self"]],["result"]]],[11,"get_type_id","","",211,[[["self"]],["typeid"]]],[11,"peek","","",212,[[["cursor"]],["bool"]]],[11,"display","","",212,[[],["str"]]],[11,"span","","",212,[[["self"]],["span"]]],[11,"from","","",212,[[["t"]],["t"]]],[11,"into","","",212,[[["self"]],["u"]]],[11,"to_owned","","",212,[[["self"]],["t"]]],[11,"clone_into","","",212,N],[11,"try_from","","",212,[[["u"]],["result"]]],[11,"borrow","","",212,[[["self"]],["t"]]],[11,"borrow_mut","","",212,[[["self"]],["t"]]],[11,"try_into","","",212,[[["self"]],["result"]]],[11,"get_type_id","","",212,[[["self"]],["typeid"]]],[11,"peek","","",213,[[["cursor"]],["bool"]]],[11,"display","","",213,[[],["str"]]],[11,"span","","",213,[[["self"]],["span"]]],[11,"from","","",213,[[["t"]],["t"]]],[11,"into","","",213,[[["self"]],["u"]]],[11,"to_owned","","",213,[[["self"]],["t"]]],[11,"clone_into","","",213,N],[11,"try_from","","",213,[[["u"]],["result"]]],[11,"borrow","","",213,[[["self"]],["t"]]],[11,"borrow_mut","","",213,[[["self"]],["t"]]],[11,"try_into","","",213,[[["self"]],["result"]]],[11,"get_type_id","","",213,[[["self"]],["typeid"]]],[11,"peek","","",214,[[["cursor"]],["bool"]]],[11,"display","","",214,[[],["str"]]],[11,"span","","",214,[[["self"]],["span"]]],[11,"from","","",214,[[["t"]],["t"]]],[11,"into","","",214,[[["self"]],["u"]]],[11,"to_owned","","",214,[[["self"]],["t"]]],[11,"clone_into","","",214,N],[11,"try_from","","",214,[[["u"]],["result"]]],[11,"borrow","","",214,[[["self"]],["t"]]],[11,"borrow_mut","","",214,[[["self"]],["t"]]],[11,"try_into","","",214,[[["self"]],["result"]]],[11,"get_type_id","","",214,[[["self"]],["typeid"]]],[11,"peek","","",215,[[["cursor"]],["bool"]]],[11,"display","","",215,[[],["str"]]],[11,"span","","",215,[[["self"]],["span"]]],[11,"from","","",215,[[["t"]],["t"]]],[11,"into","","",215,[[["self"]],["u"]]],[11,"to_owned","","",215,[[["self"]],["t"]]],[11,"clone_into","","",215,N],[11,"try_from","","",215,[[["u"]],["result"]]],[11,"borrow","","",215,[[["self"]],["t"]]],[11,"borrow_mut","","",215,[[["self"]],["t"]]],[11,"try_into","","",215,[[["self"]],["result"]]],[11,"get_type_id","","",215,[[["self"]],["typeid"]]],[11,"peek","","",216,[[["cursor"]],["bool"]]],[11,"display","","",216,[[],["str"]]],[11,"span","","",216,[[["self"]],["span"]]],[11,"from","","",216,[[["t"]],["t"]]],[11,"into","","",216,[[["self"]],["u"]]],[11,"to_owned","","",216,[[["self"]],["t"]]],[11,"clone_into","","",216,N],[11,"try_from","","",216,[[["u"]],["result"]]],[11,"borrow","","",216,[[["self"]],["t"]]],[11,"borrow_mut","","",216,[[["self"]],["t"]]],[11,"try_into","","",216,[[["self"]],["result"]]],[11,"get_type_id","","",216,[[["self"]],["typeid"]]],[11,"peek","","",217,[[["cursor"]],["bool"]]],[11,"display","","",217,[[],["str"]]],[11,"span","","",217,[[["self"]],["span"]]],[11,"from","","",217,[[["t"]],["t"]]],[11,"into","","",217,[[["self"]],["u"]]],[11,"to_owned","","",217,[[["self"]],["t"]]],[11,"clone_into","","",217,N],[11,"try_from","","",217,[[["u"]],["result"]]],[11,"borrow","","",217,[[["self"]],["t"]]],[11,"borrow_mut","","",217,[[["self"]],["t"]]],[11,"try_into","","",217,[[["self"]],["result"]]],[11,"get_type_id","","",217,[[["self"]],["typeid"]]],[11,"peek","","",218,[[["cursor"]],["bool"]]],[11,"display","","",218,[[],["str"]]],[11,"span","","",218,[[["self"]],["span"]]],[11,"from","","",218,[[["t"]],["t"]]],[11,"into","","",218,[[["self"]],["u"]]],[11,"to_owned","","",218,[[["self"]],["t"]]],[11,"clone_into","","",218,N],[11,"try_from","","",218,[[["u"]],["result"]]],[11,"borrow","","",218,[[["self"]],["t"]]],[11,"borrow_mut","","",218,[[["self"]],["t"]]],[11,"try_into","","",218,[[["self"]],["result"]]],[11,"get_type_id","","",218,[[["self"]],["typeid"]]],[11,"peek","","",219,[[["cursor"]],["bool"]]],[11,"display","","",219,[[],["str"]]],[11,"span","","",219,[[["self"]],["span"]]],[11,"from","","",219,[[["t"]],["t"]]],[11,"into","","",219,[[["self"]],["u"]]],[11,"to_owned","","",219,[[["self"]],["t"]]],[11,"clone_into","","",219,N],[11,"try_from","","",219,[[["u"]],["result"]]],[11,"borrow","","",219,[[["self"]],["t"]]],[11,"borrow_mut","","",219,[[["self"]],["t"]]],[11,"try_into","","",219,[[["self"]],["result"]]],[11,"get_type_id","","",219,[[["self"]],["typeid"]]],[11,"peek","","",220,[[["cursor"]],["bool"]]],[11,"display","","",220,[[],["str"]]],[11,"span","","",220,[[["self"]],["span"]]],[11,"from","","",220,[[["t"]],["t"]]],[11,"into","","",220,[[["self"]],["u"]]],[11,"to_owned","","",220,[[["self"]],["t"]]],[11,"clone_into","","",220,N],[11,"try_from","","",220,[[["u"]],["result"]]],[11,"borrow","","",220,[[["self"]],["t"]]],[11,"borrow_mut","","",220,[[["self"]],["t"]]],[11,"try_into","","",220,[[["self"]],["result"]]],[11,"get_type_id","","",220,[[["self"]],["typeid"]]],[11,"peek","","",221,[[["cursor"]],["bool"]]],[11,"display","","",221,[[],["str"]]],[11,"span","","",221,[[["self"]],["span"]]],[11,"from","","",221,[[["t"]],["t"]]],[11,"into","","",221,[[["self"]],["u"]]],[11,"to_owned","","",221,[[["self"]],["t"]]],[11,"clone_into","","",221,N],[11,"try_from","","",221,[[["u"]],["result"]]],[11,"borrow","","",221,[[["self"]],["t"]]],[11,"borrow_mut","","",221,[[["self"]],["t"]]],[11,"try_into","","",221,[[["self"]],["result"]]],[11,"get_type_id","","",221,[[["self"]],["typeid"]]],[11,"peek","","",222,[[["cursor"]],["bool"]]],[11,"display","","",222,[[],["str"]]],[11,"span","","",222,[[["self"]],["span"]]],[11,"from","","",222,[[["t"]],["t"]]],[11,"into","","",222,[[["self"]],["u"]]],[11,"to_owned","","",222,[[["self"]],["t"]]],[11,"clone_into","","",222,N],[11,"try_from","","",222,[[["u"]],["result"]]],[11,"borrow","","",222,[[["self"]],["t"]]],[11,"borrow_mut","","",222,[[["self"]],["t"]]],[11,"try_into","","",222,[[["self"]],["result"]]],[11,"get_type_id","","",222,[[["self"]],["typeid"]]],[11,"peek","","",223,[[["cursor"]],["bool"]]],[11,"display","","",223,[[],["str"]]],[11,"span","","",223,[[["self"]],["span"]]],[11,"from","","",223,[[["t"]],["t"]]],[11,"into","","",223,[[["self"]],["u"]]],[11,"to_owned","","",223,[[["self"]],["t"]]],[11,"clone_into","","",223,N],[11,"try_from","","",223,[[["u"]],["result"]]],[11,"borrow","","",223,[[["self"]],["t"]]],[11,"borrow_mut","","",223,[[["self"]],["t"]]],[11,"try_into","","",223,[[["self"]],["result"]]],[11,"get_type_id","","",223,[[["self"]],["typeid"]]],[11,"peek","","",224,[[["cursor"]],["bool"]]],[11,"display","","",224,[[],["str"]]],[11,"span","","",224,[[["self"]],["span"]]],[11,"from","","",224,[[["t"]],["t"]]],[11,"into","","",224,[[["self"]],["u"]]],[11,"to_owned","","",224,[[["self"]],["t"]]],[11,"clone_into","","",224,N],[11,"try_from","","",224,[[["u"]],["result"]]],[11,"borrow","","",224,[[["self"]],["t"]]],[11,"borrow_mut","","",224,[[["self"]],["t"]]],[11,"try_into","","",224,[[["self"]],["result"]]],[11,"get_type_id","","",224,[[["self"]],["typeid"]]],[11,"peek","","",225,[[["cursor"]],["bool"]]],[11,"display","","",225,[[],["str"]]],[11,"span","","",225,[[["self"]],["span"]]],[11,"from","","",225,[[["t"]],["t"]]],[11,"into","","",225,[[["self"]],["u"]]],[11,"to_owned","","",225,[[["self"]],["t"]]],[11,"clone_into","","",225,N],[11,"try_from","","",225,[[["u"]],["result"]]],[11,"borrow","","",225,[[["self"]],["t"]]],[11,"borrow_mut","","",225,[[["self"]],["t"]]],[11,"try_into","","",225,[[["self"]],["result"]]],[11,"get_type_id","","",225,[[["self"]],["typeid"]]],[11,"peek","","",226,[[["cursor"]],["bool"]]],[11,"display","","",226,[[],["str"]]],[11,"span","","",226,[[["self"]],["span"]]],[11,"from","","",226,[[["t"]],["t"]]],[11,"into","","",226,[[["self"]],["u"]]],[11,"to_owned","","",226,[[["self"]],["t"]]],[11,"clone_into","","",226,N],[11,"try_from","","",226,[[["u"]],["result"]]],[11,"borrow","","",226,[[["self"]],["t"]]],[11,"borrow_mut","","",226,[[["self"]],["t"]]],[11,"try_into","","",226,[[["self"]],["result"]]],[11,"get_type_id","","",226,[[["self"]],["typeid"]]],[11,"peek","","",227,[[["cursor"]],["bool"]]],[11,"display","","",227,[[],["str"]]],[11,"span","","",227,[[["self"]],["span"]]],[11,"from","","",227,[[["t"]],["t"]]],[11,"into","","",227,[[["self"]],["u"]]],[11,"to_owned","","",227,[[["self"]],["t"]]],[11,"clone_into","","",227,N],[11,"try_from","","",227,[[["u"]],["result"]]],[11,"borrow","","",227,[[["self"]],["t"]]],[11,"borrow_mut","","",227,[[["self"]],["t"]]],[11,"try_into","","",227,[[["self"]],["result"]]],[11,"get_type_id","","",227,[[["self"]],["typeid"]]],[11,"peek","","",228,[[["cursor"]],["bool"]]],[11,"display","","",228,[[],["str"]]],[11,"span","","",228,[[["self"]],["span"]]],[11,"from","","",228,[[["t"]],["t"]]],[11,"into","","",228,[[["self"]],["u"]]],[11,"to_owned","","",228,[[["self"]],["t"]]],[11,"clone_into","","",228,N],[11,"try_from","","",228,[[["u"]],["result"]]],[11,"borrow","","",228,[[["self"]],["t"]]],[11,"borrow_mut","","",228,[[["self"]],["t"]]],[11,"try_into","","",228,[[["self"]],["result"]]],[11,"get_type_id","","",228,[[["self"]],["typeid"]]],[11,"peek","","",229,[[["cursor"]],["bool"]]],[11,"display","","",229,[[],["str"]]],[11,"span","","",229,[[["self"]],["span"]]],[11,"from","","",229,[[["t"]],["t"]]],[11,"into","","",229,[[["self"]],["u"]]],[11,"to_owned","","",229,[[["self"]],["t"]]],[11,"clone_into","","",229,N],[11,"try_from","","",229,[[["u"]],["result"]]],[11,"borrow","","",229,[[["self"]],["t"]]],[11,"borrow_mut","","",229,[[["self"]],["t"]]],[11,"try_into","","",229,[[["self"]],["result"]]],[11,"get_type_id","","",229,[[["self"]],["typeid"]]],[11,"peek","","",230,[[["cursor"]],["bool"]]],[11,"display","","",230,[[],["str"]]],[11,"span","","",230,[[["self"]],["span"]]],[11,"from","","",230,[[["t"]],["t"]]],[11,"into","","",230,[[["self"]],["u"]]],[11,"to_owned","","",230,[[["self"]],["t"]]],[11,"clone_into","","",230,N],[11,"try_from","","",230,[[["u"]],["result"]]],[11,"borrow","","",230,[[["self"]],["t"]]],[11,"borrow_mut","","",230,[[["self"]],["t"]]],[11,"try_into","","",230,[[["self"]],["result"]]],[11,"get_type_id","","",230,[[["self"]],["typeid"]]],[11,"peek","","",231,[[["cursor"]],["bool"]]],[11,"display","","",231,[[],["str"]]],[11,"span","","",231,[[["self"]],["span"]]],[11,"from","","",231,[[["t"]],["t"]]],[11,"into","","",231,[[["self"]],["u"]]],[11,"to_owned","","",231,[[["self"]],["t"]]],[11,"clone_into","","",231,N],[11,"try_from","","",231,[[["u"]],["result"]]],[11,"borrow","","",231,[[["self"]],["t"]]],[11,"borrow_mut","","",231,[[["self"]],["t"]]],[11,"try_into","","",231,[[["self"]],["result"]]],[11,"get_type_id","","",231,[[["self"]],["typeid"]]],[11,"peek","","",232,[[["cursor"]],["bool"]]],[11,"display","","",232,[[],["str"]]],[11,"span","","",232,[[["self"]],["span"]]],[11,"from","","",232,[[["t"]],["t"]]],[11,"into","","",232,[[["self"]],["u"]]],[11,"to_owned","","",232,[[["self"]],["t"]]],[11,"clone_into","","",232,N],[11,"try_from","","",232,[[["u"]],["result"]]],[11,"borrow","","",232,[[["self"]],["t"]]],[11,"borrow_mut","","",232,[[["self"]],["t"]]],[11,"try_into","","",232,[[["self"]],["result"]]],[11,"get_type_id","","",232,[[["self"]],["typeid"]]],[11,"peek","","",233,[[["cursor"]],["bool"]]],[11,"display","","",233,[[],["str"]]],[11,"span","","",233,[[["self"]],["span"]]],[11,"from","","",233,[[["t"]],["t"]]],[11,"into","","",233,[[["self"]],["u"]]],[11,"to_owned","","",233,[[["self"]],["t"]]],[11,"clone_into","","",233,N],[11,"try_from","","",233,[[["u"]],["result"]]],[11,"borrow","","",233,[[["self"]],["t"]]],[11,"borrow_mut","","",233,[[["self"]],["t"]]],[11,"try_into","","",233,[[["self"]],["result"]]],[11,"get_type_id","","",233,[[["self"]],["typeid"]]],[11,"peek","","",234,[[["cursor"]],["bool"]]],[11,"display","","",234,[[],["str"]]],[11,"span","","",234,[[["self"]],["span"]]],[11,"from","","",234,[[["t"]],["t"]]],[11,"into","","",234,[[["self"]],["u"]]],[11,"to_owned","","",234,[[["self"]],["t"]]],[11,"clone_into","","",234,N],[11,"try_from","","",234,[[["u"]],["result"]]],[11,"borrow","","",234,[[["self"]],["t"]]],[11,"borrow_mut","","",234,[[["self"]],["t"]]],[11,"try_into","","",234,[[["self"]],["result"]]],[11,"get_type_id","","",234,[[["self"]],["typeid"]]],[11,"peek","","",235,[[["cursor"]],["bool"]]],[11,"display","","",235,[[],["str"]]],[11,"span","","",235,[[["self"]],["span"]]],[11,"from","","",235,[[["t"]],["t"]]],[11,"into","","",235,[[["self"]],["u"]]],[11,"to_owned","","",235,[[["self"]],["t"]]],[11,"clone_into","","",235,N],[11,"try_from","","",235,[[["u"]],["result"]]],[11,"borrow","","",235,[[["self"]],["t"]]],[11,"borrow_mut","","",235,[[["self"]],["t"]]],[11,"try_into","","",235,[[["self"]],["result"]]],[11,"get_type_id","","",235,[[["self"]],["typeid"]]],[11,"peek","","",236,[[["cursor"]],["bool"]]],[11,"display","","",236,[[],["str"]]],[11,"span","","",236,[[["self"]],["span"]]],[11,"from","","",236,[[["t"]],["t"]]],[11,"into","","",236,[[["self"]],["u"]]],[11,"to_owned","","",236,[[["self"]],["t"]]],[11,"clone_into","","",236,N],[11,"try_from","","",236,[[["u"]],["result"]]],[11,"borrow","","",236,[[["self"]],["t"]]],[11,"borrow_mut","","",236,[[["self"]],["t"]]],[11,"try_into","","",236,[[["self"]],["result"]]],[11,"get_type_id","","",236,[[["self"]],["typeid"]]],[11,"peek","","",237,[[["cursor"]],["bool"]]],[11,"display","","",237,[[],["str"]]],[11,"span","","",237,[[["self"]],["span"]]],[11,"from","","",237,[[["t"]],["t"]]],[11,"into","","",237,[[["self"]],["u"]]],[11,"to_owned","","",237,[[["self"]],["t"]]],[11,"clone_into","","",237,N],[11,"try_from","","",237,[[["u"]],["result"]]],[11,"borrow","","",237,[[["self"]],["t"]]],[11,"borrow_mut","","",237,[[["self"]],["t"]]],[11,"try_into","","",237,[[["self"]],["result"]]],[11,"get_type_id","","",237,[[["self"]],["typeid"]]],[11,"peek","","",238,[[["cursor"]],["bool"]]],[11,"display","","",238,[[],["str"]]],[11,"span","","",238,[[["self"]],["span"]]],[11,"from","","",238,[[["t"]],["t"]]],[11,"into","","",238,[[["self"]],["u"]]],[11,"to_owned","","",238,[[["self"]],["t"]]],[11,"clone_into","","",238,N],[11,"try_from","","",238,[[["u"]],["result"]]],[11,"borrow","","",238,[[["self"]],["t"]]],[11,"borrow_mut","","",238,[[["self"]],["t"]]],[11,"try_into","","",238,[[["self"]],["result"]]],[11,"get_type_id","","",238,[[["self"]],["typeid"]]],[11,"peek","","",239,[[["cursor"]],["bool"]]],[11,"display","","",239,[[],["str"]]],[11,"span","","",239,[[["self"]],["span"]]],[11,"from","","",239,[[["t"]],["t"]]],[11,"into","","",239,[[["self"]],["u"]]],[11,"to_owned","","",239,[[["self"]],["t"]]],[11,"clone_into","","",239,N],[11,"try_from","","",239,[[["u"]],["result"]]],[11,"borrow","","",239,[[["self"]],["t"]]],[11,"borrow_mut","","",239,[[["self"]],["t"]]],[11,"try_into","","",239,[[["self"]],["result"]]],[11,"get_type_id","","",239,[[["self"]],["typeid"]]],[11,"peek","","",240,[[["cursor"]],["bool"]]],[11,"display","","",240,[[],["str"]]],[11,"span","","",240,[[["self"]],["span"]]],[11,"from","","",240,[[["t"]],["t"]]],[11,"into","","",240,[[["self"]],["u"]]],[11,"to_owned","","",240,[[["self"]],["t"]]],[11,"clone_into","","",240,N],[11,"try_from","","",240,[[["u"]],["result"]]],[11,"borrow","","",240,[[["self"]],["t"]]],[11,"borrow_mut","","",240,[[["self"]],["t"]]],[11,"try_into","","",240,[[["self"]],["result"]]],[11,"get_type_id","","",240,[[["self"]],["typeid"]]],[11,"peek","","",241,[[["cursor"]],["bool"]]],[11,"display","","",241,[[],["str"]]],[11,"span","","",241,[[["self"]],["span"]]],[11,"from","","",241,[[["t"]],["t"]]],[11,"into","","",241,[[["self"]],["u"]]],[11,"to_owned","","",241,[[["self"]],["t"]]],[11,"clone_into","","",241,N],[11,"try_from","","",241,[[["u"]],["result"]]],[11,"borrow","","",241,[[["self"]],["t"]]],[11,"borrow_mut","","",241,[[["self"]],["t"]]],[11,"try_into","","",241,[[["self"]],["result"]]],[11,"get_type_id","","",241,[[["self"]],["typeid"]]],[11,"peek","","",242,[[["cursor"]],["bool"]]],[11,"display","","",242,[[],["str"]]],[11,"span","","",242,[[["self"]],["span"]]],[11,"from","","",242,[[["t"]],["t"]]],[11,"into","","",242,[[["self"]],["u"]]],[11,"to_owned","","",242,[[["self"]],["t"]]],[11,"clone_into","","",242,N],[11,"try_from","","",242,[[["u"]],["result"]]],[11,"borrow","","",242,[[["self"]],["t"]]],[11,"borrow_mut","","",242,[[["self"]],["t"]]],[11,"try_into","","",242,[[["self"]],["result"]]],[11,"get_type_id","","",242,[[["self"]],["typeid"]]],[11,"peek","","",243,[[["cursor"]],["bool"]]],[11,"display","","",243,[[],["str"]]],[11,"span","","",243,[[["self"]],["span"]]],[11,"from","","",243,[[["t"]],["t"]]],[11,"into","","",243,[[["self"]],["u"]]],[11,"to_owned","","",243,[[["self"]],["t"]]],[11,"clone_into","","",243,N],[11,"try_from","","",243,[[["u"]],["result"]]],[11,"borrow","","",243,[[["self"]],["t"]]],[11,"borrow_mut","","",243,[[["self"]],["t"]]],[11,"try_into","","",243,[[["self"]],["result"]]],[11,"get_type_id","","",243,[[["self"]],["typeid"]]],[11,"peek","","",244,[[["cursor"]],["bool"]]],[11,"display","","",244,[[],["str"]]],[11,"span","","",244,[[["self"]],["span"]]],[11,"from","","",244,[[["t"]],["t"]]],[11,"into","","",244,[[["self"]],["u"]]],[11,"to_owned","","",244,[[["self"]],["t"]]],[11,"clone_into","","",244,N],[11,"try_from","","",244,[[["u"]],["result"]]],[11,"borrow","","",244,[[["self"]],["t"]]],[11,"borrow_mut","","",244,[[["self"]],["t"]]],[11,"try_into","","",244,[[["self"]],["result"]]],[11,"get_type_id","","",244,[[["self"]],["typeid"]]],[11,"peek","","",245,[[["cursor"]],["bool"]]],[11,"display","","",245,[[],["str"]]],[11,"span","","",245,[[["self"]],["span"]]],[11,"from","","",245,[[["t"]],["t"]]],[11,"into","","",245,[[["self"]],["u"]]],[11,"to_owned","","",245,[[["self"]],["t"]]],[11,"clone_into","","",245,N],[11,"try_from","","",245,[[["u"]],["result"]]],[11,"borrow","","",245,[[["self"]],["t"]]],[11,"borrow_mut","","",245,[[["self"]],["t"]]],[11,"try_into","","",245,[[["self"]],["result"]]],[11,"get_type_id","","",245,[[["self"]],["typeid"]]],[11,"peek","","",246,[[["cursor"]],["bool"]]],[11,"display","","",246,[[],["str"]]],[11,"span","","",246,[[["self"]],["span"]]],[11,"from","","",246,[[["t"]],["t"]]],[11,"into","","",246,[[["self"]],["u"]]],[11,"to_owned","","",246,[[["self"]],["t"]]],[11,"clone_into","","",246,N],[11,"try_from","","",246,[[["u"]],["result"]]],[11,"borrow","","",246,[[["self"]],["t"]]],[11,"borrow_mut","","",246,[[["self"]],["t"]]],[11,"try_into","","",246,[[["self"]],["result"]]],[11,"get_type_id","","",246,[[["self"]],["typeid"]]],[11,"peek","","",247,[[["cursor"]],["bool"]]],[11,"display","","",247,[[],["str"]]],[11,"span","","",247,[[["self"]],["span"]]],[11,"from","","",247,[[["t"]],["t"]]],[11,"into","","",247,[[["self"]],["u"]]],[11,"to_owned","","",247,[[["self"]],["t"]]],[11,"clone_into","","",247,N],[11,"try_from","","",247,[[["u"]],["result"]]],[11,"borrow","","",247,[[["self"]],["t"]]],[11,"borrow_mut","","",247,[[["self"]],["t"]]],[11,"try_into","","",247,[[["self"]],["result"]]],[11,"get_type_id","","",247,[[["self"]],["typeid"]]],[11,"peek","","",248,[[["cursor"]],["bool"]]],[11,"display","","",248,[[],["str"]]],[11,"span","","",248,[[["self"]],["span"]]],[11,"from","","",248,[[["t"]],["t"]]],[11,"into","","",248,[[["self"]],["u"]]],[11,"to_owned","","",248,[[["self"]],["t"]]],[11,"clone_into","","",248,N],[11,"try_from","","",248,[[["u"]],["result"]]],[11,"borrow","","",248,[[["self"]],["t"]]],[11,"borrow_mut","","",248,[[["self"]],["t"]]],[11,"try_into","","",248,[[["self"]],["result"]]],[11,"get_type_id","","",248,[[["self"]],["typeid"]]],[11,"peek","","",249,[[["cursor"]],["bool"]]],[11,"display","","",249,[[],["str"]]],[11,"span","","",249,[[["self"]],["span"]]],[11,"from","","",249,[[["t"]],["t"]]],[11,"into","","",249,[[["self"]],["u"]]],[11,"to_owned","","",249,[[["self"]],["t"]]],[11,"clone_into","","",249,N],[11,"try_from","","",249,[[["u"]],["result"]]],[11,"borrow","","",249,[[["self"]],["t"]]],[11,"borrow_mut","","",249,[[["self"]],["t"]]],[11,"try_into","","",249,[[["self"]],["result"]]],[11,"get_type_id","","",249,[[["self"]],["typeid"]]],[11,"peek","","",250,[[["cursor"]],["bool"]]],[11,"display","","",250,[[],["str"]]],[11,"span","","",250,[[["self"]],["span"]]],[11,"from","","",250,[[["t"]],["t"]]],[11,"into","","",250,[[["self"]],["u"]]],[11,"to_owned","","",250,[[["self"]],["t"]]],[11,"clone_into","","",250,N],[11,"try_from","","",250,[[["u"]],["result"]]],[11,"borrow","","",250,[[["self"]],["t"]]],[11,"borrow_mut","","",250,[[["self"]],["t"]]],[11,"try_into","","",250,[[["self"]],["result"]]],[11,"get_type_id","","",250,[[["self"]],["typeid"]]],[11,"peek","","",251,[[["cursor"]],["bool"]]],[11,"display","","",251,[[],["str"]]],[11,"span","","",251,[[["self"]],["span"]]],[11,"from","","",251,[[["t"]],["t"]]],[11,"into","","",251,[[["self"]],["u"]]],[11,"to_owned","","",251,[[["self"]],["t"]]],[11,"clone_into","","",251,N],[11,"try_from","","",251,[[["u"]],["result"]]],[11,"borrow","","",251,[[["self"]],["t"]]],[11,"borrow_mut","","",251,[[["self"]],["t"]]],[11,"try_into","","",251,[[["self"]],["result"]]],[11,"get_type_id","","",251,[[["self"]],["typeid"]]],[11,"peek","","",252,[[["cursor"]],["bool"]]],[11,"display","","",252,[[],["str"]]],[11,"span","","",252,[[["self"]],["span"]]],[11,"from","","",252,[[["t"]],["t"]]],[11,"into","","",252,[[["self"]],["u"]]],[11,"to_owned","","",252,[[["self"]],["t"]]],[11,"clone_into","","",252,N],[11,"try_from","","",252,[[["u"]],["result"]]],[11,"borrow","","",252,[[["self"]],["t"]]],[11,"borrow_mut","","",252,[[["self"]],["t"]]],[11,"try_into","","",252,[[["self"]],["result"]]],[11,"get_type_id","","",252,[[["self"]],["typeid"]]],[11,"peek","","",253,[[["cursor"]],["bool"]]],[11,"display","","",253,[[],["str"]]],[11,"span","","",253,[[["self"]],["span"]]],[11,"from","","",253,[[["t"]],["t"]]],[11,"into","","",253,[[["self"]],["u"]]],[11,"to_owned","","",253,[[["self"]],["t"]]],[11,"clone_into","","",253,N],[11,"try_from","","",253,[[["u"]],["result"]]],[11,"borrow","","",253,[[["self"]],["t"]]],[11,"borrow_mut","","",253,[[["self"]],["t"]]],[11,"try_into","","",253,[[["self"]],["result"]]],[11,"get_type_id","","",253,[[["self"]],["typeid"]]],[11,"peek","","",254,[[["cursor"]],["bool"]]],[11,"display","","",254,[[],["str"]]],[11,"span","","",254,[[["self"]],["span"]]],[11,"from","","",254,[[["t"]],["t"]]],[11,"into","","",254,[[["self"]],["u"]]],[11,"to_owned","","",254,[[["self"]],["t"]]],[11,"clone_into","","",254,N],[11,"try_from","","",254,[[["u"]],["result"]]],[11,"borrow","","",254,[[["self"]],["t"]]],[11,"borrow_mut","","",254,[[["self"]],["t"]]],[11,"try_into","","",254,[[["self"]],["result"]]],[11,"get_type_id","","",254,[[["self"]],["typeid"]]],[11,"peek","","",255,[[["cursor"]],["bool"]]],[11,"display","","",255,[[],["str"]]],[11,"span","","",255,[[["self"]],["span"]]],[11,"from","","",255,[[["t"]],["t"]]],[11,"into","","",255,[[["self"]],["u"]]],[11,"to_owned","","",255,[[["self"]],["t"]]],[11,"clone_into","","",255,N],[11,"try_from","","",255,[[["u"]],["result"]]],[11,"borrow","","",255,[[["self"]],["t"]]],[11,"borrow_mut","","",255,[[["self"]],["t"]]],[11,"try_into","","",255,[[["self"]],["result"]]],[11,"get_type_id","","",255,[[["self"]],["typeid"]]],[11,"peek","","",256,[[["cursor"]],["bool"]]],[11,"display","","",256,[[],["str"]]],[11,"span","","",256,[[["self"]],["span"]]],[11,"from","","",256,[[["t"]],["t"]]],[11,"into","","",256,[[["self"]],["u"]]],[11,"to_owned","","",256,[[["self"]],["t"]]],[11,"clone_into","","",256,N],[11,"try_from","","",256,[[["u"]],["result"]]],[11,"borrow","","",256,[[["self"]],["t"]]],[11,"borrow_mut","","",256,[[["self"]],["t"]]],[11,"try_into","","",256,[[["self"]],["result"]]],[11,"get_type_id","","",256,[[["self"]],["typeid"]]],[11,"peek","","",257,[[["cursor"]],["bool"]]],[11,"display","","",257,[[],["str"]]],[11,"span","","",257,[[["self"]],["span"]]],[11,"from","","",257,[[["t"]],["t"]]],[11,"into","","",257,[[["self"]],["u"]]],[11,"to_owned","","",257,[[["self"]],["t"]]],[11,"clone_into","","",257,N],[11,"try_from","","",257,[[["u"]],["result"]]],[11,"borrow","","",257,[[["self"]],["t"]]],[11,"borrow_mut","","",257,[[["self"]],["t"]]],[11,"try_into","","",257,[[["self"]],["result"]]],[11,"get_type_id","","",257,[[["self"]],["typeid"]]],[11,"peek","","",258,[[["cursor"]],["bool"]]],[11,"display","","",258,[[],["str"]]],[11,"span","","",258,[[["self"]],["span"]]],[11,"from","","",258,[[["t"]],["t"]]],[11,"into","","",258,[[["self"]],["u"]]],[11,"to_owned","","",258,[[["self"]],["t"]]],[11,"clone_into","","",258,N],[11,"try_from","","",258,[[["u"]],["result"]]],[11,"borrow","","",258,[[["self"]],["t"]]],[11,"borrow_mut","","",258,[[["self"]],["t"]]],[11,"try_into","","",258,[[["self"]],["result"]]],[11,"get_type_id","","",258,[[["self"]],["typeid"]]],[11,"peek","","",259,[[["cursor"]],["bool"]]],[11,"display","","",259,[[],["str"]]],[11,"span","","",259,[[["self"]],["span"]]],[11,"from","","",259,[[["t"]],["t"]]],[11,"into","","",259,[[["self"]],["u"]]],[11,"to_owned","","",259,[[["self"]],["t"]]],[11,"clone_into","","",259,N],[11,"try_from","","",259,[[["u"]],["result"]]],[11,"borrow","","",259,[[["self"]],["t"]]],[11,"borrow_mut","","",259,[[["self"]],["t"]]],[11,"try_into","","",259,[[["self"]],["result"]]],[11,"get_type_id","","",259,[[["self"]],["typeid"]]],[11,"peek","","",260,[[["cursor"]],["bool"]]],[11,"display","","",260,[[],["str"]]],[11,"span","","",260,[[["self"]],["span"]]],[11,"from","","",260,[[["t"]],["t"]]],[11,"into","","",260,[[["self"]],["u"]]],[11,"to_owned","","",260,[[["self"]],["t"]]],[11,"clone_into","","",260,N],[11,"try_from","","",260,[[["u"]],["result"]]],[11,"borrow","","",260,[[["self"]],["t"]]],[11,"borrow_mut","","",260,[[["self"]],["t"]]],[11,"try_into","","",260,[[["self"]],["result"]]],[11,"get_type_id","","",260,[[["self"]],["typeid"]]],[11,"peek","","",261,[[["cursor"]],["bool"]]],[11,"display","","",261,[[],["str"]]],[11,"span","","",261,[[["self"]],["span"]]],[11,"from","","",261,[[["t"]],["t"]]],[11,"into","","",261,[[["self"]],["u"]]],[11,"to_owned","","",261,[[["self"]],["t"]]],[11,"clone_into","","",261,N],[11,"try_from","","",261,[[["u"]],["result"]]],[11,"borrow","","",261,[[["self"]],["t"]]],[11,"borrow_mut","","",261,[[["self"]],["t"]]],[11,"try_into","","",261,[[["self"]],["result"]]],[11,"get_type_id","","",261,[[["self"]],["typeid"]]],[11,"peek","","",262,[[["cursor"]],["bool"]]],[11,"display","","",262,[[],["str"]]],[11,"span","","",262,[[["self"]],["span"]]],[11,"from","","",262,[[["t"]],["t"]]],[11,"into","","",262,[[["self"]],["u"]]],[11,"to_owned","","",262,[[["self"]],["t"]]],[11,"clone_into","","",262,N],[11,"try_from","","",262,[[["u"]],["result"]]],[11,"borrow","","",262,[[["self"]],["t"]]],[11,"borrow_mut","","",262,[[["self"]],["t"]]],[11,"try_into","","",262,[[["self"]],["result"]]],[11,"get_type_id","","",262,[[["self"]],["typeid"]]],[11,"peek","","",263,[[["cursor"]],["bool"]]],[11,"display","","",263,[[],["str"]]],[11,"span","","",263,[[["self"]],["span"]]],[11,"from","","",263,[[["t"]],["t"]]],[11,"into","","",263,[[["self"]],["u"]]],[11,"to_owned","","",263,[[["self"]],["t"]]],[11,"clone_into","","",263,N],[11,"try_from","","",263,[[["u"]],["result"]]],[11,"borrow","","",263,[[["self"]],["t"]]],[11,"borrow_mut","","",263,[[["self"]],["t"]]],[11,"try_into","","",263,[[["self"]],["result"]]],[11,"get_type_id","","",263,[[["self"]],["typeid"]]],[11,"peek","","",264,[[["cursor"]],["bool"]]],[11,"display","","",264,[[],["str"]]],[11,"span","","",264,[[["self"]],["span"]]],[11,"from","","",264,[[["t"]],["t"]]],[11,"into","","",264,[[["self"]],["u"]]],[11,"to_owned","","",264,[[["self"]],["t"]]],[11,"clone_into","","",264,N],[11,"try_from","","",264,[[["u"]],["result"]]],[11,"borrow","","",264,[[["self"]],["t"]]],[11,"borrow_mut","","",264,[[["self"]],["t"]]],[11,"try_into","","",264,[[["self"]],["result"]]],[11,"get_type_id","","",264,[[["self"]],["typeid"]]],[11,"peek","","",265,[[["cursor"]],["bool"]]],[11,"display","","",265,[[],["str"]]],[11,"span","","",265,[[["self"]],["span"]]],[11,"from","","",265,[[["t"]],["t"]]],[11,"into","","",265,[[["self"]],["u"]]],[11,"to_owned","","",265,[[["self"]],["t"]]],[11,"clone_into","","",265,N],[11,"try_from","","",265,[[["u"]],["result"]]],[11,"borrow","","",265,[[["self"]],["t"]]],[11,"borrow_mut","","",265,[[["self"]],["t"]]],[11,"try_into","","",265,[[["self"]],["result"]]],[11,"get_type_id","","",265,[[["self"]],["typeid"]]],[11,"peek","","",266,[[["cursor"]],["bool"]]],[11,"display","","",266,[[],["str"]]],[11,"span","","",266,[[["self"]],["span"]]],[11,"from","","",266,[[["t"]],["t"]]],[11,"into","","",266,[[["self"]],["u"]]],[11,"to_owned","","",266,[[["self"]],["t"]]],[11,"clone_into","","",266,N],[11,"try_from","","",266,[[["u"]],["result"]]],[11,"borrow","","",266,[[["self"]],["t"]]],[11,"borrow_mut","","",266,[[["self"]],["t"]]],[11,"try_into","","",266,[[["self"]],["result"]]],[11,"get_type_id","","",266,[[["self"]],["typeid"]]],[11,"peek","","",267,[[["cursor"]],["bool"]]],[11,"display","","",267,[[],["str"]]],[11,"span","","",267,[[["self"]],["span"]]],[11,"from","","",267,[[["t"]],["t"]]],[11,"into","","",267,[[["self"]],["u"]]],[11,"to_owned","","",267,[[["self"]],["t"]]],[11,"clone_into","","",267,N],[11,"try_from","","",267,[[["u"]],["result"]]],[11,"borrow","","",267,[[["self"]],["t"]]],[11,"borrow_mut","","",267,[[["self"]],["t"]]],[11,"try_into","","",267,[[["self"]],["result"]]],[11,"get_type_id","","",267,[[["self"]],["typeid"]]],[11,"peek","","",268,[[["cursor"]],["bool"]]],[11,"display","","",268,[[],["str"]]],[11,"span","","",268,[[["self"]],["span"]]],[11,"from","","",268,[[["t"]],["t"]]],[11,"into","","",268,[[["self"]],["u"]]],[11,"to_owned","","",268,[[["self"]],["t"]]],[11,"clone_into","","",268,N],[11,"try_from","","",268,[[["u"]],["result"]]],[11,"borrow","","",268,[[["self"]],["t"]]],[11,"borrow_mut","","",268,[[["self"]],["t"]]],[11,"try_into","","",268,[[["self"]],["result"]]],[11,"get_type_id","","",268,[[["self"]],["typeid"]]],[11,"peek","","",269,[[["cursor"]],["bool"]]],[11,"display","","",269,[[],["str"]]],[11,"span","","",269,[[["self"]],["span"]]],[11,"from","","",269,[[["t"]],["t"]]],[11,"into","","",269,[[["self"]],["u"]]],[11,"to_owned","","",269,[[["self"]],["t"]]],[11,"clone_into","","",269,N],[11,"try_from","","",269,[[["u"]],["result"]]],[11,"borrow","","",269,[[["self"]],["t"]]],[11,"borrow_mut","","",269,[[["self"]],["t"]]],[11,"try_into","","",269,[[["self"]],["result"]]],[11,"get_type_id","","",269,[[["self"]],["typeid"]]],[11,"peek","","",270,[[["cursor"]],["bool"]]],[11,"display","","",270,[[],["str"]]],[11,"span","","",270,[[["self"]],["span"]]],[11,"from","","",270,[[["t"]],["t"]]],[11,"into","","",270,[[["self"]],["u"]]],[11,"to_owned","","",270,[[["self"]],["t"]]],[11,"clone_into","","",270,N],[11,"try_from","","",270,[[["u"]],["result"]]],[11,"borrow","","",270,[[["self"]],["t"]]],[11,"borrow_mut","","",270,[[["self"]],["t"]]],[11,"try_into","","",270,[[["self"]],["result"]]],[11,"get_type_id","","",270,[[["self"]],["typeid"]]],[11,"peek","","",271,[[["cursor"]],["bool"]]],[11,"display","","",271,[[],["str"]]],[11,"span","","",271,[[["self"]],["span"]]],[11,"from","","",271,[[["t"]],["t"]]],[11,"into","","",271,[[["self"]],["u"]]],[11,"to_owned","","",271,[[["self"]],["t"]]],[11,"clone_into","","",271,N],[11,"try_from","","",271,[[["u"]],["result"]]],[11,"borrow","","",271,[[["self"]],["t"]]],[11,"borrow_mut","","",271,[[["self"]],["t"]]],[11,"try_into","","",271,[[["self"]],["result"]]],[11,"get_type_id","","",271,[[["self"]],["typeid"]]],[11,"peek","","",272,[[["cursor"]],["bool"]]],[11,"display","","",272,[[],["str"]]],[11,"span","","",272,[[["self"]],["span"]]],[11,"from","","",272,[[["t"]],["t"]]],[11,"into","","",272,[[["self"]],["u"]]],[11,"to_owned","","",272,[[["self"]],["t"]]],[11,"clone_into","","",272,N],[11,"try_from","","",272,[[["u"]],["result"]]],[11,"borrow","","",272,[[["self"]],["t"]]],[11,"borrow_mut","","",272,[[["self"]],["t"]]],[11,"try_into","","",272,[[["self"]],["result"]]],[11,"get_type_id","","",272,[[["self"]],["typeid"]]],[11,"peek","","",273,[[["cursor"]],["bool"]]],[11,"display","","",273,[[],["str"]]],[11,"span","","",273,[[["self"]],["span"]]],[11,"from","","",273,[[["t"]],["t"]]],[11,"into","","",273,[[["self"]],["u"]]],[11,"to_owned","","",273,[[["self"]],["t"]]],[11,"clone_into","","",273,N],[11,"try_from","","",273,[[["u"]],["result"]]],[11,"borrow","","",273,[[["self"]],["t"]]],[11,"borrow_mut","","",273,[[["self"]],["t"]]],[11,"try_into","","",273,[[["self"]],["result"]]],[11,"get_type_id","","",273,[[["self"]],["typeid"]]],[11,"peek","","",274,[[["cursor"]],["bool"]]],[11,"display","","",274,[[],["str"]]],[11,"span","","",274,[[["self"]],["span"]]],[11,"from","","",274,[[["t"]],["t"]]],[11,"into","","",274,[[["self"]],["u"]]],[11,"to_owned","","",274,[[["self"]],["t"]]],[11,"clone_into","","",274,N],[11,"try_from","","",274,[[["u"]],["result"]]],[11,"borrow","","",274,[[["self"]],["t"]]],[11,"borrow_mut","","",274,[[["self"]],["t"]]],[11,"try_into","","",274,[[["self"]],["result"]]],[11,"get_type_id","","",274,[[["self"]],["typeid"]]],[11,"peek","","",275,[[["cursor"]],["bool"]]],[11,"display","","",275,[[],["str"]]],[11,"span","","",275,[[["self"]],["span"]]],[11,"from","","",275,[[["t"]],["t"]]],[11,"into","","",275,[[["self"]],["u"]]],[11,"to_owned","","",275,[[["self"]],["t"]]],[11,"clone_into","","",275,N],[11,"try_from","","",275,[[["u"]],["result"]]],[11,"borrow","","",275,[[["self"]],["t"]]],[11,"borrow_mut","","",275,[[["self"]],["t"]]],[11,"try_into","","",275,[[["self"]],["result"]]],[11,"get_type_id","","",275,[[["self"]],["typeid"]]],[11,"peek","","",276,[[["cursor"]],["bool"]]],[11,"display","","",276,[[],["str"]]],[11,"span","","",276,[[["self"]],["span"]]],[11,"from","","",276,[[["t"]],["t"]]],[11,"into","","",276,[[["self"]],["u"]]],[11,"to_owned","","",276,[[["self"]],["t"]]],[11,"clone_into","","",276,N],[11,"try_from","","",276,[[["u"]],["result"]]],[11,"borrow","","",276,[[["self"]],["t"]]],[11,"borrow_mut","","",276,[[["self"]],["t"]]],[11,"try_into","","",276,[[["self"]],["result"]]],[11,"get_type_id","","",276,[[["self"]],["typeid"]]],[11,"peek","","",277,[[["cursor"]],["bool"]]],[11,"display","","",277,[[],["str"]]],[11,"span","","",277,[[["self"]],["span"]]],[11,"from","","",277,[[["t"]],["t"]]],[11,"into","","",277,[[["self"]],["u"]]],[11,"to_owned","","",277,[[["self"]],["t"]]],[11,"clone_into","","",277,N],[11,"try_from","","",277,[[["u"]],["result"]]],[11,"borrow","","",277,[[["self"]],["t"]]],[11,"borrow_mut","","",277,[[["self"]],["t"]]],[11,"try_into","","",277,[[["self"]],["result"]]],[11,"get_type_id","","",277,[[["self"]],["typeid"]]],[11,"peek","","",278,[[["cursor"]],["bool"]]],[11,"display","","",278,[[],["str"]]],[11,"span","","",278,[[["self"]],["span"]]],[11,"from","","",278,[[["t"]],["t"]]],[11,"into","","",278,[[["self"]],["u"]]],[11,"to_owned","","",278,[[["self"]],["t"]]],[11,"clone_into","","",278,N],[11,"try_from","","",278,[[["u"]],["result"]]],[11,"borrow","","",278,[[["self"]],["t"]]],[11,"borrow_mut","","",278,[[["self"]],["t"]]],[11,"try_into","","",278,[[["self"]],["result"]]],[11,"get_type_id","","",278,[[["self"]],["typeid"]]],[11,"peek","","",279,[[["cursor"]],["bool"]]],[11,"display","","",279,[[],["str"]]],[11,"span","","",279,[[["self"]],["span"]]],[11,"from","","",279,[[["t"]],["t"]]],[11,"into","","",279,[[["self"]],["u"]]],[11,"to_owned","","",279,[[["self"]],["t"]]],[11,"clone_into","","",279,N],[11,"try_from","","",279,[[["u"]],["result"]]],[11,"borrow","","",279,[[["self"]],["t"]]],[11,"borrow_mut","","",279,[[["self"]],["t"]]],[11,"try_into","","",279,[[["self"]],["result"]]],[11,"get_type_id","","",279,[[["self"]],["typeid"]]],[11,"peek","","",280,[[["cursor"]],["bool"]]],[11,"display","","",280,[[],["str"]]],[11,"span","","",280,[[["self"]],["span"]]],[11,"from","","",280,[[["t"]],["t"]]],[11,"into","","",280,[[["self"]],["u"]]],[11,"to_owned","","",280,[[["self"]],["t"]]],[11,"clone_into","","",280,N],[11,"try_from","","",280,[[["u"]],["result"]]],[11,"borrow","","",280,[[["self"]],["t"]]],[11,"borrow_mut","","",280,[[["self"]],["t"]]],[11,"try_into","","",280,[[["self"]],["result"]]],[11,"get_type_id","","",280,[[["self"]],["typeid"]]],[11,"peek","","",281,[[["cursor"]],["bool"]]],[11,"display","","",281,[[],["str"]]],[11,"span","","",281,[[["self"]],["span"]]],[11,"from","","",281,[[["t"]],["t"]]],[11,"into","","",281,[[["self"]],["u"]]],[11,"to_owned","","",281,[[["self"]],["t"]]],[11,"clone_into","","",281,N],[11,"try_from","","",281,[[["u"]],["result"]]],[11,"borrow","","",281,[[["self"]],["t"]]],[11,"borrow_mut","","",281,[[["self"]],["t"]]],[11,"try_into","","",281,[[["self"]],["result"]]],[11,"get_type_id","","",281,[[["self"]],["typeid"]]],[11,"peek","","",282,[[["cursor"]],["bool"]]],[11,"display","","",282,[[],["str"]]],[11,"span","","",282,[[["self"]],["span"]]],[11,"from","","",282,[[["t"]],["t"]]],[11,"into","","",282,[[["self"]],["u"]]],[11,"to_owned","","",282,[[["self"]],["t"]]],[11,"clone_into","","",282,N],[11,"try_from","","",282,[[["u"]],["result"]]],[11,"borrow","","",282,[[["self"]],["t"]]],[11,"borrow_mut","","",282,[[["self"]],["t"]]],[11,"try_into","","",282,[[["self"]],["result"]]],[11,"get_type_id","","",282,[[["self"]],["typeid"]]],[11,"peek","","",283,[[["cursor"]],["bool"]]],[11,"display","","",283,[[],["str"]]],[11,"span","","",283,[[["self"]],["span"]]],[11,"from","","",283,[[["t"]],["t"]]],[11,"into","","",283,[[["self"]],["u"]]],[11,"to_owned","","",283,[[["self"]],["t"]]],[11,"clone_into","","",283,N],[11,"try_from","","",283,[[["u"]],["result"]]],[11,"borrow","","",283,[[["self"]],["t"]]],[11,"borrow_mut","","",283,[[["self"]],["t"]]],[11,"try_into","","",283,[[["self"]],["result"]]],[11,"get_type_id","","",283,[[["self"]],["typeid"]]],[11,"peek","","",284,[[["cursor"]],["bool"]]],[11,"display","","",284,[[],["str"]]],[11,"span","","",284,[[["self"]],["span"]]],[11,"from","","",284,[[["t"]],["t"]]],[11,"into","","",284,[[["self"]],["u"]]],[11,"to_owned","","",284,[[["self"]],["t"]]],[11,"clone_into","","",284,N],[11,"try_from","","",284,[[["u"]],["result"]]],[11,"borrow","","",284,[[["self"]],["t"]]],[11,"borrow_mut","","",284,[[["self"]],["t"]]],[11,"try_into","","",284,[[["self"]],["result"]]],[11,"get_type_id","","",284,[[["self"]],["typeid"]]],[11,"peek","","",285,[[["cursor"]],["bool"]]],[11,"display","","",285,[[],["str"]]],[11,"span","","",285,[[["self"]],["span"]]],[11,"from","","",285,[[["t"]],["t"]]],[11,"into","","",285,[[["self"]],["u"]]],[11,"to_owned","","",285,[[["self"]],["t"]]],[11,"clone_into","","",285,N],[11,"try_from","","",285,[[["u"]],["result"]]],[11,"borrow","","",285,[[["self"]],["t"]]],[11,"borrow_mut","","",285,[[["self"]],["t"]]],[11,"try_into","","",285,[[["self"]],["result"]]],[11,"get_type_id","","",285,[[["self"]],["typeid"]]],[11,"peek","","",286,[[["cursor"]],["bool"]]],[11,"display","","",286,[[],["str"]]],[11,"span","","",286,[[["self"]],["span"]]],[11,"from","","",286,[[["t"]],["t"]]],[11,"into","","",286,[[["self"]],["u"]]],[11,"to_owned","","",286,[[["self"]],["t"]]],[11,"clone_into","","",286,N],[11,"try_from","","",286,[[["u"]],["result"]]],[11,"borrow","","",286,[[["self"]],["t"]]],[11,"borrow_mut","","",286,[[["self"]],["t"]]],[11,"try_into","","",286,[[["self"]],["result"]]],[11,"get_type_id","","",286,[[["self"]],["typeid"]]],[11,"peek","","",287,[[["cursor"]],["bool"]]],[11,"display","","",287,[[],["str"]]],[11,"span","","",287,[[["self"]],["span"]]],[11,"from","","",287,[[["t"]],["t"]]],[11,"into","","",287,[[["self"]],["u"]]],[11,"to_owned","","",287,[[["self"]],["t"]]],[11,"clone_into","","",287,N],[11,"try_from","","",287,[[["u"]],["result"]]],[11,"borrow","","",287,[[["self"]],["t"]]],[11,"borrow_mut","","",287,[[["self"]],["t"]]],[11,"try_into","","",287,[[["self"]],["result"]]],[11,"get_type_id","","",287,[[["self"]],["typeid"]]],[11,"peek","","",288,[[["cursor"]],["bool"]]],[11,"display","","",288,[[],["str"]]],[11,"span","","",288,[[["self"]],["span"]]],[11,"from","","",288,[[["t"]],["t"]]],[11,"into","","",288,[[["self"]],["u"]]],[11,"to_owned","","",288,[[["self"]],["t"]]],[11,"clone_into","","",288,N],[11,"try_from","","",288,[[["u"]],["result"]]],[11,"borrow","","",288,[[["self"]],["t"]]],[11,"borrow_mut","","",288,[[["self"]],["t"]]],[11,"try_into","","",288,[[["self"]],["result"]]],[11,"get_type_id","","",288,[[["self"]],["typeid"]]],[11,"peek","","",289,[[["cursor"]],["bool"]]],[11,"display","","",289,[[],["str"]]],[11,"span","","",289,[[["self"]],["span"]]],[11,"from","","",289,[[["t"]],["t"]]],[11,"into","","",289,[[["self"]],["u"]]],[11,"to_owned","","",289,[[["self"]],["t"]]],[11,"clone_into","","",289,N],[11,"try_from","","",289,[[["u"]],["result"]]],[11,"borrow","","",289,[[["self"]],["t"]]],[11,"borrow_mut","","",289,[[["self"]],["t"]]],[11,"try_into","","",289,[[["self"]],["result"]]],[11,"get_type_id","","",289,[[["self"]],["typeid"]]],[11,"peek","","",290,[[["cursor"]],["bool"]]],[11,"display","","",290,[[],["str"]]],[11,"span","","",290,[[["self"]],["span"]]],[11,"from","","",290,[[["t"]],["t"]]],[11,"into","","",290,[[["self"]],["u"]]],[11,"to_owned","","",290,[[["self"]],["t"]]],[11,"clone_into","","",290,N],[11,"try_from","","",290,[[["u"]],["result"]]],[11,"borrow","","",290,[[["self"]],["t"]]],[11,"borrow_mut","","",290,[[["self"]],["t"]]],[11,"try_into","","",290,[[["self"]],["result"]]],[11,"get_type_id","","",290,[[["self"]],["typeid"]]],[11,"peek","","",291,[[["cursor"]],["bool"]]],[11,"display","","",291,[[],["str"]]],[11,"from","","",291,[[["t"]],["t"]]],[11,"into","","",291,[[["self"]],["u"]]],[11,"to_owned","","",291,[[["self"]],["t"]]],[11,"clone_into","","",291,N],[11,"try_from","","",291,[[["u"]],["result"]]],[11,"borrow","","",291,[[["self"]],["t"]]],[11,"borrow_mut","","",291,[[["self"]],["t"]]],[11,"try_into","","",291,[[["self"]],["result"]]],[11,"get_type_id","","",291,[[["self"]],["typeid"]]],[11,"peek","","",292,[[["cursor"]],["bool"]]],[11,"display","","",292,[[],["str"]]],[11,"from","","",292,[[["t"]],["t"]]],[11,"into","","",292,[[["self"]],["u"]]],[11,"to_owned","","",292,[[["self"]],["t"]]],[11,"clone_into","","",292,N],[11,"try_from","","",292,[[["u"]],["result"]]],[11,"borrow","","",292,[[["self"]],["t"]]],[11,"borrow_mut","","",292,[[["self"]],["t"]]],[11,"try_into","","",292,[[["self"]],["result"]]],[11,"get_type_id","","",292,[[["self"]],["typeid"]]],[11,"peek","","",293,[[["cursor"]],["bool"]]],[11,"display","","",293,[[],["str"]]],[11,"from","","",293,[[["t"]],["t"]]],[11,"into","","",293,[[["self"]],["u"]]],[11,"to_owned","","",293,[[["self"]],["t"]]],[11,"clone_into","","",293,N],[11,"try_from","","",293,[[["u"]],["result"]]],[11,"borrow","","",293,[[["self"]],["t"]]],[11,"borrow_mut","","",293,[[["self"]],["t"]]],[11,"try_into","","",293,[[["self"]],["result"]]],[11,"get_type_id","","",293,[[["self"]],["typeid"]]],[11,"peek","","",294,[[["cursor"]],["bool"]]],[11,"display","","",294,[[],["str"]]],[11,"from","","",294,[[["t"]],["t"]]],[11,"into","","",294,[[["self"]],["u"]]],[11,"to_owned","","",294,[[["self"]],["t"]]],[11,"clone_into","","",294,N],[11,"try_from","","",294,[[["u"]],["result"]]],[11,"borrow","","",294,[[["self"]],["t"]]],[11,"borrow_mut","","",294,[[["self"]],["t"]]],[11,"try_into","","",294,[[["self"]],["result"]]],[11,"get_type_id","","",294,[[["self"]],["typeid"]]],[11,"from","syn::buffer","",302,[[["t"]],["t"]]],[11,"into","","",302,[[["self"]],["u"]]],[11,"try_from","","",302,[[["u"]],["result"]]],[11,"borrow","","",302,[[["self"]],["t"]]],[11,"borrow_mut","","",302,[[["self"]],["t"]]],[11,"try_into","","",302,[[["self"]],["result"]]],[11,"get_type_id","","",302,[[["self"]],["typeid"]]],[11,"from","","",303,[[["t"]],["t"]]],[11,"into","","",303,[[["self"]],["u"]]],[11,"to_owned","","",303,[[["self"]],["t"]]],[11,"clone_into","","",303,N],[11,"try_from","","",303,[[["u"]],["result"]]],[11,"borrow","","",303,[[["self"]],["t"]]],[11,"borrow_mut","","",303,[[["self"]],["t"]]],[11,"try_into","","",303,[[["self"]],["result"]]],[11,"get_type_id","","",303,[[["self"]],["typeid"]]],[11,"span","syn::punctuated","",306,[[["self"]],["span"]]],[11,"from","","",306,[[["t"]],["t"]]],[11,"into_iter","","",306,[[["self"]],["i"]]],[11,"into","","",306,[[["self"]],["u"]]],[11,"to_owned","","",306,[[["self"]],["t"]]],[11,"clone_into","","",306,N],[11,"try_from","","",306,[[["u"]],["result"]]],[11,"borrow","","",306,[[["self"]],["t"]]],[11,"borrow_mut","","",306,[[["self"]],["t"]]],[11,"try_into","","",306,[[["self"]],["result"]]],[11,"get_type_id","","",306,[[["self"]],["typeid"]]],[11,"from","","",318,[[["t"]],["t"]]],[11,"into_iter","","",318,[[["self"]],["i"]]],[11,"into","","",318,[[["self"]],["u"]]],[11,"try_from","","",318,[[["u"]],["result"]]],[11,"borrow","","",318,[[["self"]],["t"]]],[11,"borrow_mut","","",318,[[["self"]],["t"]]],[11,"try_into","","",318,[[["self"]],["result"]]],[11,"get_type_id","","",318,[[["self"]],["typeid"]]],[11,"from","","",319,[[["t"]],["t"]]],[11,"into_iter","","",319,[[["self"]],["i"]]],[11,"into","","",319,[[["self"]],["u"]]],[11,"try_from","","",319,[[["u"]],["result"]]],[11,"borrow","","",319,[[["self"]],["t"]]],[11,"borrow_mut","","",319,[[["self"]],["t"]]],[11,"try_into","","",319,[[["self"]],["result"]]],[11,"get_type_id","","",319,[[["self"]],["typeid"]]],[11,"from","","",320,[[["t"]],["t"]]],[11,"into_iter","","",320,[[["self"]],["i"]]],[11,"into","","",320,[[["self"]],["u"]]],[11,"try_from","","",320,[[["u"]],["result"]]],[11,"borrow","","",320,[[["self"]],["t"]]],[11,"borrow_mut","","",320,[[["self"]],["t"]]],[11,"try_into","","",320,[[["self"]],["result"]]],[11,"get_type_id","","",320,[[["self"]],["typeid"]]],[11,"from","","",321,[[["t"]],["t"]]],[11,"into_iter","","",321,[[["self"]],["i"]]],[11,"into","","",321,[[["self"]],["u"]]],[11,"try_from","","",321,[[["u"]],["result"]]],[11,"borrow","","",321,[[["self"]],["t"]]],[11,"borrow_mut","","",321,[[["self"]],["t"]]],[11,"try_into","","",321,[[["self"]],["result"]]],[11,"get_type_id","","",321,[[["self"]],["typeid"]]],[11,"from","","",322,[[["t"]],["t"]]],[11,"into_iter","","",322,[[["self"]],["i"]]],[11,"into","","",322,[[["self"]],["u"]]],[11,"try_from","","",322,[[["u"]],["result"]]],[11,"borrow","","",322,[[["self"]],["t"]]],[11,"borrow_mut","","",322,[[["self"]],["t"]]],[11,"try_into","","",322,[[["self"]],["result"]]],[11,"get_type_id","","",322,[[["self"]],["typeid"]]],[11,"from","","",323,[[["t"]],["t"]]],[11,"into_iter","","",323,[[["self"]],["i"]]],[11,"into","","",323,[[["self"]],["u"]]],[11,"try_from","","",323,[[["u"]],["result"]]],[11,"borrow","","",323,[[["self"]],["t"]]],[11,"borrow_mut","","",323,[[["self"]],["t"]]],[11,"try_into","","",323,[[["self"]],["result"]]],[11,"get_type_id","","",323,[[["self"]],["typeid"]]],[11,"span","","",305,[[["self"]],["span"]]],[11,"from","","",305,[[["t"]],["t"]]],[11,"into","","",305,[[["self"]],["u"]]],[11,"try_from","","",305,[[["u"]],["result"]]],[11,"borrow","","",305,[[["self"]],["t"]]],[11,"borrow_mut","","",305,[[["self"]],["t"]]],[11,"try_into","","",305,[[["self"]],["result"]]],[11,"get_type_id","","",305,[[["self"]],["typeid"]]],[11,"from","syn::parse","",324,[[["t"]],["t"]]],[11,"into","","",324,[[["self"]],["u"]]],[11,"try_from","","",324,[[["u"]],["result"]]],[11,"borrow","","",324,[[["self"]],["t"]]],[11,"borrow_mut","","",324,[[["self"]],["t"]]],[11,"try_into","","",324,[[["self"]],["result"]]],[11,"get_type_id","","",324,[[["self"]],["typeid"]]],[11,"from","","",313,[[["t"]],["t"]]],[11,"into","","",313,[[["self"]],["u"]]],[11,"to_string","","",313,[[["self"]],["string"]]],[11,"try_from","","",313,[[["u"]],["result"]]],[11,"borrow","","",313,[[["self"]],["t"]]],[11,"borrow_mut","","",313,[[["self"]],["t"]]],[11,"try_into","","",313,[[["self"]],["result"]]],[11,"get_type_id","","",313,[[["self"]],["typeid"]]],[11,"from","","",312,[[["t"]],["t"]]],[11,"into","","",312,[[["self"]],["u"]]],[11,"to_owned","","",312,[[["self"]],["t"]]],[11,"clone_into","","",312,N],[11,"try_from","","",312,[[["u"]],["result"]]],[11,"borrow","","",312,[[["self"]],["t"]]],[11,"borrow_mut","","",312,[[["self"]],["t"]]],[11,"try_into","","",312,[[["self"]],["result"]]],[11,"get_type_id","","",312,[[["self"]],["typeid"]]],[11,"hash","syn","",315,N],[11,"cmp","","",315,[[["self"],["ident"]],["ordering"]]],[11,"eq","","",315,[[["self"],["t"]],["bool"]]],[11,"eq","","",315,[[["self"],["ident"]],["bool"]]],[11,"fmt","","",315,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",315,[[["self"],["formatter"]],["result",["error"]]]],[11,"clone","","",315,[[["self"]],["ident"]]],[11,"partial_cmp","","",315,[[["self"],["ident"]],["option",["ordering"]]]],[11,"to_tokens","","",315,N],[11,"peek","","",126,[[["cursor"]],["bool"]]],[11,"display","","",126,[[],["str"]]],[11,"peek","","",181,[[["cursor"]],["bool"]]],[11,"display","","",181,[[],["str"]]],[11,"peek","","",296,[[["cursor"]],["bool"]]],[11,"display","","",296,[[],["str"]]],[11,"peek","","",297,[[["cursor"]],["bool"]]],[11,"display","","",297,[[],["str"]]],[11,"peek","","",298,[[["cursor"]],["bool"]]],[11,"display","","",298,[[],["str"]]],[11,"peek","","",299,[[["cursor"]],["bool"]]],[11,"display","","",299,[[],["str"]]],[11,"peek","","",300,[[["cursor"]],["bool"]]],[11,"display","","",300,[[],["str"]]],[11,"peek","","",301,[[["cursor"]],["bool"]]],[11,"display","","",301,[[],["str"]]],[11,"peek","","",127,[[["cursor"]],["bool"]]],[11,"display","","",127,[[],["str"]]],[11,"peek","syn::token","",192,[[["cursor"]],["bool"]]],[11,"display","","",192,[[],["str"]]],[11,"peek","","",293,[[["cursor"]],["bool"]]],[11,"display","","",293,[[],["str"]]],[11,"peek","","",291,[[["cursor"]],["bool"]]],[11,"display","","",291,[[],["str"]]],[11,"peek","","",292,[[["cursor"]],["bool"]]],[11,"display","","",292,[[],["str"]]],[11,"peek","","",294,[[["cursor"]],["bool"]]],[11,"display","","",294,[[],["str"]]],[11,"peek","","",193,[[["cursor"]],["bool"]]],[11,"display","","",193,[[],["str"]]],[11,"peek","","",194,[[["cursor"]],["bool"]]],[11,"display","","",194,[[],["str"]]],[11,"peek","","",195,[[["cursor"]],["bool"]]],[11,"display","","",195,[[],["str"]]],[11,"peek","","",196,[[["cursor"]],["bool"]]],[11,"display","","",196,[[],["str"]]],[11,"peek","","",197,[[["cursor"]],["bool"]]],[11,"display","","",197,[[],["str"]]],[11,"peek","","",198,[[["cursor"]],["bool"]]],[11,"display","","",198,[[],["str"]]],[11,"peek","","",199,[[["cursor"]],["bool"]]],[11,"display","","",199,[[],["str"]]],[11,"peek","","",200,[[["cursor"]],["bool"]]],[11,"display","","",200,[[],["str"]]],[11,"peek","","",201,[[["cursor"]],["bool"]]],[11,"display","","",201,[[],["str"]]],[11,"peek","","",202,[[["cursor"]],["bool"]]],[11,"display","","",202,[[],["str"]]],[11,"peek","","",203,[[["cursor"]],["bool"]]],[11,"display","","",203,[[],["str"]]],[11,"peek","","",204,[[["cursor"]],["bool"]]],[11,"display","","",204,[[],["str"]]],[11,"peek","","",205,[[["cursor"]],["bool"]]],[11,"display","","",205,[[],["str"]]],[11,"peek","","",206,[[["cursor"]],["bool"]]],[11,"display","","",206,[[],["str"]]],[11,"peek","","",207,[[["cursor"]],["bool"]]],[11,"display","","",207,[[],["str"]]],[11,"peek","","",208,[[["cursor"]],["bool"]]],[11,"display","","",208,[[],["str"]]],[11,"peek","","",209,[[["cursor"]],["bool"]]],[11,"display","","",209,[[],["str"]]],[11,"peek","","",210,[[["cursor"]],["bool"]]],[11,"display","","",210,[[],["str"]]],[11,"peek","","",211,[[["cursor"]],["bool"]]],[11,"display","","",211,[[],["str"]]],[11,"peek","","",212,[[["cursor"]],["bool"]]],[11,"display","","",212,[[],["str"]]],[11,"peek","","",213,[[["cursor"]],["bool"]]],[11,"display","","",213,[[],["str"]]],[11,"peek","","",214,[[["cursor"]],["bool"]]],[11,"display","","",214,[[],["str"]]],[11,"peek","","",215,[[["cursor"]],["bool"]]],[11,"display","","",215,[[],["str"]]],[11,"peek","","",216,[[["cursor"]],["bool"]]],[11,"display","","",216,[[],["str"]]],[11,"peek","","",217,[[["cursor"]],["bool"]]],[11,"display","","",217,[[],["str"]]],[11,"peek","","",218,[[["cursor"]],["bool"]]],[11,"display","","",218,[[],["str"]]],[11,"peek","","",219,[[["cursor"]],["bool"]]],[11,"display","","",219,[[],["str"]]],[11,"peek","","",220,[[["cursor"]],["bool"]]],[11,"display","","",220,[[],["str"]]],[11,"peek","","",221,[[["cursor"]],["bool"]]],[11,"display","","",221,[[],["str"]]],[11,"peek","","",222,[[["cursor"]],["bool"]]],[11,"display","","",222,[[],["str"]]],[11,"peek","","",223,[[["cursor"]],["bool"]]],[11,"display","","",223,[[],["str"]]],[11,"peek","","",224,[[["cursor"]],["bool"]]],[11,"display","","",224,[[],["str"]]],[11,"peek","","",225,[[["cursor"]],["bool"]]],[11,"display","","",225,[[],["str"]]],[11,"peek","","",226,[[["cursor"]],["bool"]]],[11,"display","","",226,[[],["str"]]],[11,"peek","","",227,[[["cursor"]],["bool"]]],[11,"display","","",227,[[],["str"]]],[11,"peek","","",228,[[["cursor"]],["bool"]]],[11,"display","","",228,[[],["str"]]],[11,"peek","","",229,[[["cursor"]],["bool"]]],[11,"display","","",229,[[],["str"]]],[11,"peek","","",230,[[["cursor"]],["bool"]]],[11,"display","","",230,[[],["str"]]],[11,"peek","","",231,[[["cursor"]],["bool"]]],[11,"display","","",231,[[],["str"]]],[11,"peek","","",232,[[["cursor"]],["bool"]]],[11,"display","","",232,[[],["str"]]],[11,"peek","","",233,[[["cursor"]],["bool"]]],[11,"display","","",233,[[],["str"]]],[11,"peek","","",234,[[["cursor"]],["bool"]]],[11,"display","","",234,[[],["str"]]],[11,"peek","","",235,[[["cursor"]],["bool"]]],[11,"display","","",235,[[],["str"]]],[11,"peek","","",236,[[["cursor"]],["bool"]]],[11,"display","","",236,[[],["str"]]],[11,"peek","","",237,[[["cursor"]],["bool"]]],[11,"display","","",237,[[],["str"]]],[11,"peek","","",238,[[["cursor"]],["bool"]]],[11,"display","","",238,[[],["str"]]],[11,"peek","","",239,[[["cursor"]],["bool"]]],[11,"display","","",239,[[],["str"]]],[11,"peek","","",240,[[["cursor"]],["bool"]]],[11,"display","","",240,[[],["str"]]],[11,"peek","","",241,[[["cursor"]],["bool"]]],[11,"display","","",241,[[],["str"]]],[11,"peek","","",242,[[["cursor"]],["bool"]]],[11,"display","","",242,[[],["str"]]],[11,"peek","","",243,[[["cursor"]],["bool"]]],[11,"display","","",243,[[],["str"]]],[11,"peek","","",244,[[["cursor"]],["bool"]]],[11,"display","","",244,[[],["str"]]],[11,"peek","","",245,[[["cursor"]],["bool"]]],[11,"display","","",245,[[],["str"]]],[11,"peek","","",246,[[["cursor"]],["bool"]]],[11,"display","","",246,[[],["str"]]],[11,"peek","","",247,[[["cursor"]],["bool"]]],[11,"display","","",247,[[],["str"]]],[11,"peek","","",248,[[["cursor"]],["bool"]]],[11,"display","","",248,[[],["str"]]],[11,"peek","","",249,[[["cursor"]],["bool"]]],[11,"display","","",249,[[],["str"]]],[11,"peek","","",250,[[["cursor"]],["bool"]]],[11,"display","","",250,[[],["str"]]],[11,"peek","","",251,[[["cursor"]],["bool"]]],[11,"display","","",251,[[],["str"]]],[11,"peek","","",252,[[["cursor"]],["bool"]]],[11,"display","","",252,[[],["str"]]],[11,"peek","","",253,[[["cursor"]],["bool"]]],[11,"display","","",253,[[],["str"]]],[11,"peek","","",254,[[["cursor"]],["bool"]]],[11,"display","","",254,[[],["str"]]],[11,"peek","","",255,[[["cursor"]],["bool"]]],[11,"display","","",255,[[],["str"]]],[11,"peek","","",256,[[["cursor"]],["bool"]]],[11,"display","","",256,[[],["str"]]],[11,"peek","","",257,[[["cursor"]],["bool"]]],[11,"display","","",257,[[],["str"]]],[11,"peek","","",258,[[["cursor"]],["bool"]]],[11,"display","","",258,[[],["str"]]],[11,"peek","","",259,[[["cursor"]],["bool"]]],[11,"display","","",259,[[],["str"]]],[11,"peek","","",260,[[["cursor"]],["bool"]]],[11,"display","","",260,[[],["str"]]],[11,"peek","","",261,[[["cursor"]],["bool"]]],[11,"display","","",261,[[],["str"]]],[11,"peek","","",262,[[["cursor"]],["bool"]]],[11,"display","","",262,[[],["str"]]],[11,"peek","","",263,[[["cursor"]],["bool"]]],[11,"display","","",263,[[],["str"]]],[11,"peek","","",264,[[["cursor"]],["bool"]]],[11,"display","","",264,[[],["str"]]],[11,"peek","","",265,[[["cursor"]],["bool"]]],[11,"display","","",265,[[],["str"]]],[11,"peek","","",266,[[["cursor"]],["bool"]]],[11,"display","","",266,[[],["str"]]],[11,"peek","","",267,[[["cursor"]],["bool"]]],[11,"display","","",267,[[],["str"]]],[11,"peek","","",268,[[["cursor"]],["bool"]]],[11,"display","","",268,[[],["str"]]],[11,"peek","","",269,[[["cursor"]],["bool"]]],[11,"display","","",269,[[],["str"]]],[11,"peek","","",270,[[["cursor"]],["bool"]]],[11,"display","","",270,[[],["str"]]],[11,"peek","","",271,[[["cursor"]],["bool"]]],[11,"display","","",271,[[],["str"]]],[11,"peek","","",272,[[["cursor"]],["bool"]]],[11,"display","","",272,[[],["str"]]],[11,"peek","","",273,[[["cursor"]],["bool"]]],[11,"display","","",273,[[],["str"]]],[11,"peek","","",274,[[["cursor"]],["bool"]]],[11,"display","","",274,[[],["str"]]],[11,"peek","","",275,[[["cursor"]],["bool"]]],[11,"display","","",275,[[],["str"]]],[11,"peek","","",276,[[["cursor"]],["bool"]]],[11,"display","","",276,[[],["str"]]],[11,"peek","","",277,[[["cursor"]],["bool"]]],[11,"display","","",277,[[],["str"]]],[11,"peek","","",278,[[["cursor"]],["bool"]]],[11,"display","","",278,[[],["str"]]],[11,"peek","","",279,[[["cursor"]],["bool"]]],[11,"display","","",279,[[],["str"]]],[11,"peek","","",280,[[["cursor"]],["bool"]]],[11,"display","","",280,[[],["str"]]],[11,"peek","","",281,[[["cursor"]],["bool"]]],[11,"display","","",281,[[],["str"]]],[11,"peek","","",282,[[["cursor"]],["bool"]]],[11,"display","","",282,[[],["str"]]],[11,"peek","","",283,[[["cursor"]],["bool"]]],[11,"display","","",283,[[],["str"]]],[11,"peek","","",284,[[["cursor"]],["bool"]]],[11,"display","","",284,[[],["str"]]],[11,"peek","","",285,[[["cursor"]],["bool"]]],[11,"display","","",285,[[],["str"]]],[11,"peek","","",286,[[["cursor"]],["bool"]]],[11,"display","","",286,[[],["str"]]],[11,"peek","","",287,[[["cursor"]],["bool"]]],[11,"display","","",287,[[],["str"]]],[11,"peek","","",288,[[["cursor"]],["bool"]]],[11,"display","","",288,[[],["str"]]],[11,"peek","","",289,[[["cursor"]],["bool"]]],[11,"display","","",289,[[],["str"]]],[11,"peek","","",290,[[["cursor"]],["bool"]]],[11,"display","","",290,[[],["str"]]],[11,"peek","syn","",315,[[["cursor"]],["bool"]]],[11,"display","","",315,[[],["str"]]],[11,"parse_any","","",315,[[["parsestream"]],["result"]]],[11,"parse","syn::token","",192,[[["parsestream"]],["result"]]],[11,"parse","","",193,[[["parsestream"]],["result"]]],[11,"parse","","",194,[[["parsestream"]],["result"]]],[11,"parse","","",195,[[["parsestream"]],["result"]]],[11,"parse","","",196,[[["parsestream"]],["result"]]],[11,"parse","","",197,[[["parsestream"]],["result"]]],[11,"parse","","",198,[[["parsestream"]],["result"]]],[11,"parse","","",199,[[["parsestream"]],["result"]]],[11,"parse","","",200,[[["parsestream"]],["result"]]],[11,"parse","","",201,[[["parsestream"]],["result"]]],[11,"parse","","",202,[[["parsestream"]],["result"]]],[11,"parse","","",203,[[["parsestream"]],["result"]]],[11,"parse","","",204,[[["parsestream"]],["result"]]],[11,"parse","","",205,[[["parsestream"]],["result"]]],[11,"parse","","",206,[[["parsestream"]],["result"]]],[11,"parse","","",207,[[["parsestream"]],["result"]]],[11,"parse","","",208,[[["parsestream"]],["result"]]],[11,"parse","","",209,[[["parsestream"]],["result"]]],[11,"parse","","",210,[[["parsestream"]],["result"]]],[11,"parse","","",211,[[["parsestream"]],["result"]]],[11,"parse","","",212,[[["parsestream"]],["result"]]],[11,"parse","","",213,[[["parsestream"]],["result"]]],[11,"parse","","",214,[[["parsestream"]],["result"]]],[11,"parse","","",215,[[["parsestream"]],["result"]]],[11,"parse","","",216,[[["parsestream"]],["result"]]],[11,"parse","","",217,[[["parsestream"]],["result"]]],[11,"parse","","",218,[[["parsestream"]],["result"]]],[11,"parse","","",219,[[["parsestream"]],["result"]]],[11,"parse","","",220,[[["parsestream"]],["result"]]],[11,"parse","","",221,[[["parsestream"]],["result"]]],[11,"parse","","",222,[[["parsestream"]],["result"]]],[11,"parse","","",223,[[["parsestream"]],["result"]]],[11,"parse","","",224,[[["parsestream"]],["result"]]],[11,"parse","","",225,[[["parsestream"]],["result"]]],[11,"parse","","",226,[[["parsestream"]],["result"]]],[11,"parse","","",227,[[["parsestream"]],["result"]]],[11,"parse","","",228,[[["parsestream"]],["result"]]],[11,"parse","","",229,[[["parsestream"]],["result"]]],[11,"parse","","",230,[[["parsestream"]],["result"]]],[11,"parse","","",231,[[["parsestream"]],["result"]]],[11,"parse","","",232,[[["parsestream"]],["result"]]],[11,"parse","","",233,[[["parsestream"]],["result"]]],[11,"parse","","",234,[[["parsestream"]],["result"]]],[11,"parse","","",235,[[["parsestream"]],["result"]]],[11,"parse","","",236,[[["parsestream"]],["result"]]],[11,"parse","","",237,[[["parsestream"]],["result"]]],[11,"parse","","",238,[[["parsestream"]],["result"]]],[11,"parse","","",239,[[["parsestream"]],["result"]]],[11,"parse","","",240,[[["parsestream"]],["result"]]],[11,"parse","","",241,[[["parsestream"]],["result"]]],[11,"parse","","",242,[[["parsestream"]],["result"]]],[11,"parse","","",243,[[["parsestream"]],["result"]]],[11,"parse","","",244,[[["parsestream"]],["result"]]],[11,"parse","","",245,[[["parsestream"]],["result"]]],[11,"parse","","",246,[[["parsestream"]],["result"]]],[11,"parse","","",247,[[["parsestream"]],["result"]]],[11,"parse","","",248,[[["parsestream"]],["result"]]],[11,"parse","","",249,[[["parsestream"]],["result"]]],[11,"parse","","",250,[[["parsestream"]],["result"]]],[11,"parse","","",251,[[["parsestream"]],["result"]]],[11,"parse","","",252,[[["parsestream"]],["result"]]],[11,"parse","","",253,[[["parsestream"]],["result"]]],[11,"parse","","",254,[[["parsestream"]],["result"]]],[11,"parse","","",255,[[["parsestream"]],["result"]]],[11,"parse","","",256,[[["parsestream"]],["result"]]],[11,"parse","","",257,[[["parsestream"]],["result"]]],[11,"parse","","",258,[[["parsestream"]],["result"]]],[11,"parse","","",259,[[["parsestream"]],["result"]]],[11,"parse","","",260,[[["parsestream"]],["result"]]],[11,"parse","","",261,[[["parsestream"]],["result"]]],[11,"parse","","",262,[[["parsestream"]],["result"]]],[11,"parse","","",263,[[["parsestream"]],["result"]]],[11,"parse","","",264,[[["parsestream"]],["result"]]],[11,"parse","","",265,[[["parsestream"]],["result"]]],[11,"parse","","",266,[[["parsestream"]],["result"]]],[11,"parse","","",267,[[["parsestream"]],["result"]]],[11,"parse","","",268,[[["parsestream"]],["result"]]],[11,"parse","","",269,[[["parsestream"]],["result"]]],[11,"parse","","",270,[[["parsestream"]],["result"]]],[11,"parse","","",271,[[["parsestream"]],["result"]]],[11,"parse","","",272,[[["parsestream"]],["result"]]],[11,"parse","","",273,[[["parsestream"]],["result"]]],[11,"parse","","",274,[[["parsestream"]],["result"]]],[11,"parse","","",275,[[["parsestream"]],["result"]]],[11,"parse","","",276,[[["parsestream"]],["result"]]],[11,"parse","","",277,[[["parsestream"]],["result"]]],[11,"parse","","",278,[[["parsestream"]],["result"]]],[11,"parse","","",279,[[["parsestream"]],["result"]]],[11,"parse","","",280,[[["parsestream"]],["result"]]],[11,"parse","","",281,[[["parsestream"]],["result"]]],[11,"parse","","",282,[[["parsestream"]],["result"]]],[11,"parse","","",283,[[["parsestream"]],["result"]]],[11,"parse","","",284,[[["parsestream"]],["result"]]],[11,"parse","","",285,[[["parsestream"]],["result"]]],[11,"parse","","",286,[[["parsestream"]],["result"]]],[11,"parse","","",287,[[["parsestream"]],["result"]]],[11,"parse","","",288,[[["parsestream"]],["result"]]],[11,"parse","","",289,[[["parsestream"]],["result"]]],[11,"parse","","",290,[[["parsestream"]],["result"]]],[11,"parse","syn","",315,[[["parsestream"]],["result"]]],[11,"parse","","",159,[[["parsestream"]],["result"]]],[11,"parse","","",1,[[["parsestream"]],["result"]]],[11,"parse","","",2,[[["parsestream"]],["result"]]],[11,"parse","","",160,[[["parsestream"]],["result"]]],[11,"parse","","",6,[[["parsestream"]],["result"]]],[11,"parse","","",4,[[["parsestream"]],["result"]]],[11,"parse","","",5,[[["parsestream"]],["result"]]],[11,"parse","","",162,[[["parsestream"]],["result"]]],[11,"parse","","",163,[[["parsestream"]],["result"]]],[11,"parse","","",55,[[["parsestream"]],["result"]]],[11,"parse","","",54,[[["parsestream"]],["result"]]],[11,"parse","","",167,[[["parsestream"]],["result"]]],[11,"parse","","",35,[[["parsestream"]],["result"]]],[11,"parse","","",52,[[["parsestream"]],["result"]]],[11,"parse","","",168,[[["parsestream"]],["result"]]],[11,"parse","","",166,[[["parsestream"]],["result"]]],[11,"parse","","",164,[[["parsestream"]],["result"]]],[11,"parse","","",51,[[["parsestream"]],["result",["arm"]]]],[11,"parse","","",50,[[["parsestream"]],["result"]]],[11,"parse","","",73,[[["parsestream"]],["result"]]],[11,"parse","","",169,[[["parsestream"]],["result"]]],[11,"parse","","",74,[[["parsestream"]],["result"]]],[11,"parse","","",71,[[["parsestream"]],["result"]]],[11,"parse","","",79,[[["parsestream"]],["result"]]],[11,"parse","","",171,[[["parsestream"]],["result"]]],[11,"parse","","",78,[[["parsestream"]],["result"]]],[11,"parse","","",170,[[["parsestream"]],["result"]]],[11,"parse","","",72,[[["parsestream"]],["result"]]],[11,"parse","","",80,[[["parsestream"]],["result"]]],[11,"parse","","",172,[[["parsestream"]],["result"]]],[11,"parse","","",176,[[["parsestream"]],["result"]]],[11,"parse","","",103,[[["parsestream"]],["result"]]],[11,"parse","","",104,[[["parsestream"]],["result"]]],[11,"parse","","",99,[[["parsestream"]],["result"]]],[11,"parse","","",112,[[["parsestream"]],["result"]]],[11,"parse","","",106,[[["parsestream"]],["result"]]],[11,"parse","","",96,[[["parsestream"]],["result"]]],[11,"parse","","",100,[[["parsestream"]],["result"]]],[11,"parse","","",173,[[["parsestream"]],["result"]]],[11,"parse","","",105,[[["parsestream"]],["result"]]],[11,"parse","","",101,[[["parsestream"]],["result"]]],[11,"parse","","",174,[[["parsestream"]],["result"]]],[11,"parse","","",85,[[["parsestream"]],["result"]]],[11,"parse","","",87,[[["parsestream"]],["result"]]],[11,"parse","","",88,[[["parsestream"]],["result"]]],[11,"parse","","",86,[[["parsestream"]],["result"]]],[11,"parse","","",110,[[["parsestream"]],["result"]]],[11,"parse","","",98,[[["parsestream"]],["result"]]],[11,"parse","","",107,[[["parsestream"]],["result"]]],[11,"parse","","",97,[[["parsestream"]],["result"]]],[11,"parse","","",111,[[["parsestream"]],["result"]]],[11,"parse","","",108,[[["parsestream"]],["result"]]],[11,"parse","","",109,[[["parsestream"]],["result"]]],[11,"parse","","",177,[[["parsestream"]],["result"]]],[11,"parse","","",115,[[["parsestream"]],["result"]]],[11,"parse","","",117,[[["parsestream"]],["result"]]],[11,"parse","","",118,[[["parsestream"]],["result"]]],[11,"parse","","",116,[[["parsestream"]],["result"]]],[11,"parse","","",102,[[["parsestream"]],["result"]]],[11,"parse","","",175,[[["parsestream"]],["result"]]],[11,"parse","","",90,[[["parsestream"]],["result"]]],[11,"parse","","",93,[[["parsestream"]],["result"]]],[11,"parse","","",94,[[["parsestream"]],["result"]]],[11,"parse","","",91,[[["parsestream"]],["result"]]],[11,"parse","","",92,[[["parsestream"]],["result"]]],[11,"parse","","",125,[[["parsestream"]],["result"]]],[11,"parse","","",126,[[["parsestream"]],["result"]]],[11,"parse","","",181,[[["parsestream"]],["result"]]],[11,"parse","","",296,[[["parsestream"]],["result"]]],[11,"parse","","",297,[[["parsestream"]],["result"]]],[11,"parse","","",298,[[["parsestream"]],["result"]]],[11,"parse","","",299,[[["parsestream"]],["result"]]],[11,"parse","","",300,[[["parsestream"]],["result"]]],[11,"parse","","",301,[[["parsestream"]],["result"]]],[11,"parse","","",127,[[["parsestream"]],["result"]]],[11,"parse","","",129,[[["parsestream"]],["result"]]],[11,"parse","","",133,[[["parsestream"]],["result"]]],[11,"parse","","",185,[[["parsestream"]],["result"]]],[11,"parse","","",186,[[["parsestream"]],["result"]]],[11,"parse","","",189,[[["parsestream"]],["result"]]],[11,"parse","","",147,[[["parsestream"]],["result"]]],[11,"parse","","",136,[[["parsestream"]],["result"]]],[11,"parse","","",145,[[["parsestream"]],["result"]]],[11,"parse","","",146,[[["parsestream"]],["result"]]],[11,"parse","","",137,[[["parsestream"]],["result"]]],[11,"parse","","",142,[[["parsestream"]],["result"]]],[11,"parse","","",140,[[["parsestream"]],["result"]]],[11,"parse","","",149,[[["parsestream"]],["result"]]],[11,"parse","","",141,[[["parsestream"]],["result"]]],[11,"parse","","",144,[[["parsestream"]],["result"]]],[11,"parse","","",188,[[["parsestream"]],["result"]]],[11,"parse","","",148,[[["parsestream"]],["result"]]],[11,"parse","","",139,[[["parsestream"]],["result"]]],[11,"parse","","",138,[[["parsestream"]],["result"]]],[11,"parse","","",143,[[["parsestream"]],["result"]]],[11,"parse","","",135,[[["parsestream"]],["result"]]],[11,"parse","","",187,[[["parsestream"]],["result"]]],[11,"parse","","",134,[[["parsestream"]],["result"]]],[11,"parse","","",155,[[["parsestream"]],["result"]]],[11,"parse","","",190,[[["parsestream"]],["result"]]],[11,"parse","","",151,[[["parsestream"]],["result"]]],[11,"parse","","",154,[[["parsestream"]],["result"]]],[11,"parse","","",156,[[["parsestream"]],["result"]]],[11,"parse","","",152,[[["parsestream"]],["result"]]],[11,"parse","","",153,[[["parsestream"]],["result"]]],[11,"cmp","","",126,[[["self"],["lifetime"]],["ordering"]]],[11,"eq","syn::token","",192,[[["self"],["underscore"]],["bool"]]],[11,"eq","","",193,[[["self"],["abstract"]],["bool"]]],[11,"eq","","",194,[[["self"],["as"]],["bool"]]],[11,"eq","","",195,[[["self"],["async"]],["bool"]]],[11,"eq","","",196,[[["self"],["auto"]],["bool"]]],[11,"eq","","",197,[[["self"],["become"]],["bool"]]],[11,"eq","","",198,[[["self"],["box"]],["bool"]]],[11,"eq","","",199,[[["self"],["break"]],["bool"]]],[11,"eq","","",200,[[["self"],["const"]],["bool"]]],[11,"eq","","",201,[[["self"],["continue"]],["bool"]]],[11,"eq","","",202,[[["self"],["crate"]],["bool"]]],[11,"eq","","",203,[[["self"],["default"]],["bool"]]],[11,"eq","","",204,[[["self"],["do"]],["bool"]]],[11,"eq","","",205,[[["self"],["dyn"]],["bool"]]],[11,"eq","","",206,[[["self"],["else"]],["bool"]]],[11,"eq","","",207,[[["self"],["enum"]],["bool"]]],[11,"eq","","",208,[[["self"],["existential"]],["bool"]]],[11,"eq","","",209,[[["self"],["extern"]],["bool"]]],[11,"eq","","",210,[[["self"],["final"]],["bool"]]],[11,"eq","","",211,[[["self"],["fn"]],["bool"]]],[11,"eq","","",212,[[["self"],["for"]],["bool"]]],[11,"eq","","",213,[[["self"],["if"]],["bool"]]],[11,"eq","","",214,[[["self"],["impl"]],["bool"]]],[11,"eq","","",215,[[["self"],["in"]],["bool"]]],[11,"eq","","",216,[[["self"],["let"]],["bool"]]],[11,"eq","","",217,[[["self"],["loop"]],["bool"]]],[11,"eq","","",218,[[["self"],["macro"]],["bool"]]],[11,"eq","","",219,[[["self"],["match"]],["bool"]]],[11,"eq","","",220,[[["self"],["mod"]],["bool"]]],[11,"eq","","",221,[[["self"],["move"]],["bool"]]],[11,"eq","","",222,[[["self"],["mut"]],["bool"]]],[11,"eq","","",223,[[["self"],["override"]],["bool"]]],[11,"eq","","",224,[[["self"],["priv"]],["bool"]]],[11,"eq","","",225,[[["self"],["pub"]],["bool"]]],[11,"eq","","",226,[[["self"],["ref"]],["bool"]]],[11,"eq","","",227,[[["self"],["return"]],["bool"]]],[11,"eq","","",228,[[["self"],["selftype"]],["bool"]]],[11,"eq","","",229,[[["self"],["selfvalue"]],["bool"]]],[11,"eq","","",230,[[["self"],["static"]],["bool"]]],[11,"eq","","",231,[[["self"],["struct"]],["bool"]]],[11,"eq","","",232,[[["self"],["super"]],["bool"]]],[11,"eq","","",233,[[["self"],["trait"]],["bool"]]],[11,"eq","","",234,[[["self"],["try"]],["bool"]]],[11,"eq","","",235,[[["self"],["type"]],["bool"]]],[11,"eq","","",236,[[["self"],["typeof"]],["bool"]]],[11,"eq","","",237,[[["self"],["union"]],["bool"]]],[11,"eq","","",238,[[["self"],["unsafe"]],["bool"]]],[11,"eq","","",239,[[["self"],["unsized"]],["bool"]]],[11,"eq","","",240,[[["self"],["use"]],["bool"]]],[11,"eq","","",241,[[["self"],["virtual"]],["bool"]]],[11,"eq","","",242,[[["self"],["where"]],["bool"]]],[11,"eq","","",243,[[["self"],["while"]],["bool"]]],[11,"eq","","",244,[[["self"],["yield"]],["bool"]]],[11,"eq","","",245,[[["self"],["add"]],["bool"]]],[11,"eq","","",246,[[["self"],["addeq"]],["bool"]]],[11,"eq","","",247,[[["self"],["and"]],["bool"]]],[11,"eq","","",248,[[["self"],["andand"]],["bool"]]],[11,"eq","","",249,[[["self"],["andeq"]],["bool"]]],[11,"eq","","",250,[[["self"],["at"]],["bool"]]],[11,"eq","","",251,[[["self"],["bang"]],["bool"]]],[11,"eq","","",252,[[["self"],["caret"]],["bool"]]],[11,"eq","","",253,[[["self"],["careteq"]],["bool"]]],[11,"eq","","",254,[[["self"],["colon"]],["bool"]]],[11,"eq","","",255,[[["self"],["colon2"]],["bool"]]],[11,"eq","","",256,[[["self"],["comma"]],["bool"]]],[11,"eq","","",257,[[["self"],["div"]],["bool"]]],[11,"eq","","",258,[[["self"],["diveq"]],["bool"]]],[11,"eq","","",259,[[["self"],["dollar"]],["bool"]]],[11,"eq","","",260,[[["self"],["dot"]],["bool"]]],[11,"eq","","",261,[[["self"],["dot2"]],["bool"]]],[11,"eq","","",262,[[["self"],["dot3"]],["bool"]]],[11,"eq","","",263,[[["self"],["dotdoteq"]],["bool"]]],[11,"eq","","",264,[[["self"],["eq"]],["bool"]]],[11,"eq","","",265,[[["self"],["eqeq"]],["bool"]]],[11,"eq","","",266,[[["self"],["ge"]],["bool"]]],[11,"eq","","",267,[[["self"],["gt"]],["bool"]]],[11,"eq","","",268,[[["self"],["le"]],["bool"]]],[11,"eq","","",269,[[["self"],["lt"]],["bool"]]],[11,"eq","","",270,[[["self"],["muleq"]],["bool"]]],[11,"eq","","",271,[[["self"],["ne"]],["bool"]]],[11,"eq","","",272,[[["self"],["or"]],["bool"]]],[11,"eq","","",273,[[["self"],["oreq"]],["bool"]]],[11,"eq","","",274,[[["self"],["oror"]],["bool"]]],[11,"eq","","",275,[[["self"],["pound"]],["bool"]]],[11,"eq","","",276,[[["self"],["question"]],["bool"]]],[11,"eq","","",277,[[["self"],["rarrow"]],["bool"]]],[11,"eq","","",278,[[["self"],["larrow"]],["bool"]]],[11,"eq","","",279,[[["self"],["rem"]],["bool"]]],[11,"eq","","",280,[[["self"],["remeq"]],["bool"]]],[11,"eq","","",281,[[["self"],["fatarrow"]],["bool"]]],[11,"eq","","",282,[[["self"],["semi"]],["bool"]]],[11,"eq","","",283,[[["self"],["shl"]],["bool"]]],[11,"eq","","",284,[[["self"],["shleq"]],["bool"]]],[11,"eq","","",285,[[["self"],["shr"]],["bool"]]],[11,"eq","","",286,[[["self"],["shreq"]],["bool"]]],[11,"eq","","",287,[[["self"],["star"]],["bool"]]],[11,"eq","","",288,[[["self"],["sub"]],["bool"]]],[11,"eq","","",289,[[["self"],["subeq"]],["bool"]]],[11,"eq","","",290,[[["self"],["tilde"]],["bool"]]],[11,"eq","","",291,[[["self"],["brace"]],["bool"]]],[11,"eq","","",292,[[["self"],["bracket"]],["bool"]]],[11,"eq","","",293,[[["self"],["paren"]],["bool"]]],[11,"eq","","",294,[[["self"],["group"]],["bool"]]],[11,"eq","syn","",0,[[["self"],["self"]],["bool"]]],[11,"eq","","",158,[[["self"],["attrstyle"]],["bool"]]],[11,"ne","","",158,[[["self"],["attrstyle"]],["bool"]]],[11,"eq","","",159,[[["self"],["meta"]],["bool"]]],[11,"ne","","",159,[[["self"],["meta"]],["bool"]]],[11,"eq","","",1,[[["self"],["metalist"]],["bool"]]],[11,"ne","","",1,[[["self"],["metalist"]],["bool"]]],[11,"eq","","",2,[[["self"],["metanamevalue"]],["bool"]]],[11,"ne","","",2,[[["self"],["metanamevalue"]],["bool"]]],[11,"eq","","",160,[[["self"],["nestedmeta"]],["bool"]]],[11,"ne","","",160,[[["self"],["nestedmeta"]],["bool"]]],[11,"eq","","",6,[[["self"],["variant"]],["bool"]]],[11,"ne","","",6,[[["self"],["variant"]],["bool"]]],[11,"eq","","",161,[[["self"],["fields"]],["bool"]]],[11,"ne","","",161,[[["self"],["fields"]],["bool"]]],[11,"eq","","",4,[[["self"],["fieldsnamed"]],["bool"]]],[11,"ne","","",4,[[["self"],["fieldsnamed"]],["bool"]]],[11,"eq","","",5,[[["self"],["fieldsunnamed"]],["bool"]]],[11,"ne","","",5,[[["self"],["fieldsunnamed"]],["bool"]]],[11,"eq","","",3,[[["self"],["field"]],["bool"]]],[11,"ne","","",3,[[["self"],["field"]],["bool"]]],[11,"eq","","",162,[[["self"],["visibility"]],["bool"]]],[11,"ne","","",162,[[["self"],["visibility"]],["bool"]]],[11,"eq","","",8,[[["self"],["vispublic"]],["bool"]]],[11,"ne","","",8,[[["self"],["vispublic"]],["bool"]]],[11,"eq","","",7,[[["self"],["viscrate"]],["bool"]]],[11,"ne","","",7,[[["self"],["viscrate"]],["bool"]]],[11,"eq","","",9,[[["self"],["visrestricted"]],["bool"]]],[11,"ne","","",9,[[["self"],["visrestricted"]],["bool"]]],[11,"eq","","",163,[[["self"],["expr"]],["bool"]]],[11,"ne","","",163,[[["self"],["expr"]],["bool"]]],[11,"eq","","",16,[[["self"],["exprbox"]],["bool"]]],[11,"ne","","",16,[[["self"],["exprbox"]],["bool"]]],[11,"eq","","",26,[[["self"],["exprinplace"]],["bool"]]],[11,"ne","","",26,[[["self"],["exprinplace"]],["bool"]]],[11,"eq","","",10,[[["self"],["exprarray"]],["bool"]]],[11,"ne","","",10,[[["self"],["exprarray"]],["bool"]]],[11,"eq","","",18,[[["self"],["exprcall"]],["bool"]]],[11,"ne","","",18,[[["self"],["exprcall"]],["bool"]]],[11,"eq","","",33,[[["self"],["exprmethodcall"]],["bool"]]],[11,"ne","","",33,[[["self"],["exprmethodcall"]],["bool"]]],[11,"eq","","",43,[[["self"],["exprtuple"]],["bool"]]],[11,"ne","","",43,[[["self"],["exprtuple"]],["bool"]]],[11,"eq","","",14,[[["self"],["exprbinary"]],["bool"]]],[11,"ne","","",14,[[["self"],["exprbinary"]],["bool"]]],[11,"eq","","",45,[[["self"],["exprunary"]],["bool"]]],[11,"ne","","",45,[[["self"],["exprunary"]],["bool"]]],[11,"eq","","",29,[[["self"],["exprlit"]],["bool"]]],[11,"ne","","",29,[[["self"],["exprlit"]],["bool"]]],[11,"eq","","",19,[[["self"],["exprcast"]],["bool"]]],[11,"ne","","",19,[[["self"],["exprcast"]],["bool"]]],[11,"eq","","",44,[[["self"],["exprtype"]],["bool"]]],[11,"ne","","",44,[[["self"],["exprtype"]],["bool"]]],[11,"eq","","",28,[[["self"],["exprlet"]],["bool"]]],[11,"ne","","",28,[[["self"],["exprlet"]],["bool"]]],[11,"eq","","",25,[[["self"],["exprif"]],["bool"]]],[11,"ne","","",25,[[["self"],["exprif"]],["bool"]]],[11,"eq","","",48,[[["self"],["exprwhile"]],["bool"]]],[11,"ne","","",48,[[["self"],["exprwhile"]],["bool"]]],[11,"eq","","",23,[[["self"],["exprforloop"]],["bool"]]],[11,"ne","","",23,[[["self"],["exprforloop"]],["bool"]]],[11,"eq","","",30,[[["self"],["exprloop"]],["bool"]]],[11,"ne","","",30,[[["self"],["exprloop"]],["bool"]]],[11,"eq","","",32,[[["self"],["exprmatch"]],["bool"]]],[11,"ne","","",32,[[["self"],["exprmatch"]],["bool"]]],[11,"eq","","",20,[[["self"],["exprclosure"]],["bool"]]],[11,"ne","","",20,[[["self"],["exprclosure"]],["bool"]]],[11,"eq","","",46,[[["self"],["exprunsafe"]],["bool"]]],[11,"ne","","",46,[[["self"],["exprunsafe"]],["bool"]]],[11,"eq","","",15,[[["self"],["exprblock"]],["bool"]]],[11,"ne","","",15,[[["self"],["exprblock"]],["bool"]]],[11,"eq","","",11,[[["self"],["exprassign"]],["bool"]]],[11,"ne","","",11,[[["self"],["exprassign"]],["bool"]]],[11,"eq","","",12,[[["self"],["exprassignop"]],["bool"]]],[11,"ne","","",12,[[["self"],["exprassignop"]],["bool"]]],[11,"eq","","",22,[[["self"],["exprfield"]],["bool"]]],[11,"ne","","",22,[[["self"],["exprfield"]],["bool"]]],[11,"eq","","",27,[[["self"],["exprindex"]],["bool"]]],[11,"ne","","",27,[[["self"],["exprindex"]],["bool"]]],[11,"eq","","",36,[[["self"],["exprrange"]],["bool"]]],[11,"ne","","",36,[[["self"],["exprrange"]],["bool"]]],[11,"eq","","",35,[[["self"],["exprpath"]],["bool"]]],[11,"ne","","",35,[[["self"],["exprpath"]],["bool"]]],[11,"eq","","",37,[[["self"],["exprreference"]],["bool"]]],[11,"ne","","",37,[[["self"],["exprreference"]],["bool"]]],[11,"eq","","",17,[[["self"],["exprbreak"]],["bool"]]],[11,"ne","","",17,[[["self"],["exprbreak"]],["bool"]]],[11,"eq","","",21,[[["self"],["exprcontinue"]],["bool"]]],[11,"ne","","",21,[[["self"],["exprcontinue"]],["bool"]]],[11,"eq","","",39,[[["self"],["exprreturn"]],["bool"]]],[11,"ne","","",39,[[["self"],["exprreturn"]],["bool"]]],[11,"eq","","",31,[[["self"],["exprmacro"]],["bool"]]],[11,"ne","","",31,[[["self"],["exprmacro"]],["bool"]]],[11,"eq","","",40,[[["self"],["exprstruct"]],["bool"]]],[11,"ne","","",40,[[["self"],["exprstruct"]],["bool"]]],[11,"eq","","",38,[[["self"],["exprrepeat"]],["bool"]]],[11,"ne","","",38,[[["self"],["exprrepeat"]],["bool"]]],[11,"eq","","",34,[[["self"],["exprparen"]],["bool"]]],[11,"ne","","",34,[[["self"],["exprparen"]],["bool"]]],[11,"eq","","",24,[[["self"],["exprgroup"]],["bool"]]],[11,"ne","","",24,[[["self"],["exprgroup"]],["bool"]]],[11,"eq","","",41,[[["self"],["exprtry"]],["bool"]]],[11,"ne","","",41,[[["self"],["exprtry"]],["bool"]]],[11,"eq","","",13,[[["self"],["exprasync"]],["bool"]]],[11,"ne","","",13,[[["self"],["exprasync"]],["bool"]]],[11,"eq","","",42,[[["self"],["exprtryblock"]],["bool"]]],[11,"ne","","",42,[[["self"],["exprtryblock"]],["bool"]]],[11,"eq","","",49,[[["self"],["expryield"]],["bool"]]],[11,"ne","","",49,[[["self"],["expryield"]],["bool"]]],[11,"eq","","",47,[[["self"],["self"]],["bool"]]],[11,"eq","","",164,[[["self"],["member"]],["bool"]]],[11,"ne","","",164,[[["self"],["member"]],["bool"]]],[11,"eq","","",50,[[["self"],["self"]],["bool"]]],[11,"eq","","",57,[[["self"],["methodturbofish"]],["bool"]]],[11,"ne","","",57,[[["self"],["methodturbofish"]],["bool"]]],[11,"eq","","",165,[[["self"],["genericmethodargument"]],["bool"]]],[11,"ne","","",165,[[["self"],["genericmethodargument"]],["bool"]]],[11,"eq","","",54,[[["self"],["fieldvalue"]],["bool"]]],[11,"ne","","",54,[[["self"],["fieldvalue"]],["bool"]]],[11,"eq","","",55,[[["self"],["label"]],["bool"]]],[11,"ne","","",55,[[["self"],["label"]],["bool"]]],[11,"eq","","",52,[[["self"],["block"]],["bool"]]],[11,"ne","","",52,[[["self"],["block"]],["bool"]]],[11,"eq","","",168,[[["self"],["stmt"]],["bool"]]],[11,"ne","","",168,[[["self"],["stmt"]],["bool"]]],[11,"eq","","",56,[[["self"],["local"]],["bool"]]],[11,"ne","","",56,[[["self"],["local"]],["bool"]]],[11,"eq","","",166,[[["self"],["pat"]],["bool"]]],[11,"ne","","",166,[[["self"],["pat"]],["bool"]]],[11,"eq","","",70,[[["self"],["patwild"]],["bool"]]],[11,"ne","","",70,[[["self"],["patwild"]],["bool"]]],[11,"eq","","",59,[[["self"],["patident"]],["bool"]]],[11,"ne","","",59,[[["self"],["patident"]],["bool"]]],[11,"eq","","",66,[[["self"],["patstruct"]],["bool"]]],[11,"ne","","",66,[[["self"],["patstruct"]],["bool"]]],[11,"eq","","",68,[[["self"],["pattuplestruct"]],["bool"]]],[11,"ne","","",68,[[["self"],["pattuplestruct"]],["bool"]]],[11,"eq","","",62,[[["self"],["patpath"]],["bool"]]],[11,"ne","","",62,[[["self"],["patpath"]],["bool"]]],[11,"eq","","",67,[[["self"],["pattuple"]],["bool"]]],[11,"ne","","",67,[[["self"],["pattuple"]],["bool"]]],[11,"eq","","",58,[[["self"],["patbox"]],["bool"]]],[11,"ne","","",58,[[["self"],["patbox"]],["bool"]]],[11,"eq","","",64,[[["self"],["patref"]],["bool"]]],[11,"ne","","",64,[[["self"],["patref"]],["bool"]]],[11,"eq","","",60,[[["self"],["patlit"]],["bool"]]],[11,"ne","","",60,[[["self"],["patlit"]],["bool"]]],[11,"eq","","",63,[[["self"],["patrange"]],["bool"]]],[11,"ne","","",63,[[["self"],["patrange"]],["bool"]]],[11,"eq","","",65,[[["self"],["patslice"]],["bool"]]],[11,"ne","","",65,[[["self"],["patslice"]],["bool"]]],[11,"eq","","",61,[[["self"],["patmacro"]],["bool"]]],[11,"ne","","",61,[[["self"],["patmacro"]],["bool"]]],[11,"eq","","",69,[[["self"],["self"]],["bool"]]],[11,"eq","","",51,[[["self"],["arm"]],["bool"]]],[11,"ne","","",51,[[["self"],["arm"]],["bool"]]],[11,"eq","","",167,[[["self"],["rangelimits"]],["bool"]]],[11,"ne","","",167,[[["self"],["rangelimits"]],["bool"]]],[11,"eq","","",53,[[["self"],["fieldpat"]],["bool"]]],[11,"ne","","",53,[[["self"],["fieldpat"]],["bool"]]],[11,"eq","","",73,[[["self"],["generics"]],["bool"]]],[11,"ne","","",73,[[["self"],["generics"]],["bool"]]],[11,"eq","","",169,[[["self"],["genericparam"]],["bool"]]],[11,"ne","","",169,[[["self"],["genericparam"]],["bool"]]],[11,"eq","","",79,[[["self"],["typeparam"]],["bool"]]],[11,"ne","","",79,[[["self"],["typeparam"]],["bool"]]],[11,"eq","","",74,[[["self"],["lifetimedef"]],["bool"]]],[11,"ne","","",74,[[["self"],["lifetimedef"]],["bool"]]],[11,"eq","","",72,[[["self"],["constparam"]],["bool"]]],[11,"ne","","",72,[[["self"],["constparam"]],["bool"]]],[11,"eq","","",316,[[["self"],["implgenerics"]],["bool"]]],[11,"ne","","",316,[[["self"],["implgenerics"]],["bool"]]],[11,"eq","","",295,[[["self"],["typegenerics"]],["bool"]]],[11,"ne","","",295,[[["self"],["typegenerics"]],["bool"]]],[11,"eq","","",317,[[["self"],["turbofish"]],["bool"]]],[11,"ne","","",317,[[["self"],["turbofish"]],["bool"]]],[11,"eq","","",71,[[["self"],["boundlifetimes"]],["bool"]]],[11,"ne","","",71,[[["self"],["boundlifetimes"]],["bool"]]],[11,"eq","","",171,[[["self"],["typeparambound"]],["bool"]]],[11,"ne","","",171,[[["self"],["typeparambound"]],["bool"]]],[11,"eq","","",78,[[["self"],["traitbound"]],["bool"]]],[11,"ne","","",78,[[["self"],["traitbound"]],["bool"]]],[11,"eq","","",170,[[["self"],["traitboundmodifier"]],["bool"]]],[11,"ne","","",170,[[["self"],["traitboundmodifier"]],["bool"]]],[11,"eq","","",80,[[["self"],["whereclause"]],["bool"]]],[11,"ne","","",80,[[["self"],["whereclause"]],["bool"]]],[11,"eq","","",172,[[["self"],["wherepredicate"]],["bool"]]],[11,"ne","","",172,[[["self"],["wherepredicate"]],["bool"]]],[11,"eq","","",77,[[["self"],["predicatetype"]],["bool"]]],[11,"ne","","",77,[[["self"],["predicatetype"]],["bool"]]],[11,"eq","","",76,[[["self"],["predicatelifetime"]],["bool"]]],[11,"ne","","",76,[[["self"],["predicatelifetime"]],["bool"]]],[11,"eq","","",75,[[["self"],["predicateeq"]],["bool"]]],[11,"ne","","",75,[[["self"],["predicateeq"]],["bool"]]],[11,"eq","","",176,[[["self"],["item"]],["bool"]]],[11,"ne","","",176,[[["self"],["item"]],["bool"]]],[11,"eq","","",99,[[["self"],["itemexterncrate"]],["bool"]]],[11,"ne","","",99,[[["self"],["itemexterncrate"]],["bool"]]],[11,"eq","","",112,[[["self"],["itemuse"]],["bool"]]],[11,"ne","","",112,[[["self"],["itemuse"]],["bool"]]],[11,"eq","","",106,[[["self"],["itemstatic"]],["bool"]]],[11,"ne","","",106,[[["self"],["itemstatic"]],["bool"]]],[11,"eq","","",96,[[["self"],["itemconst"]],["bool"]]],[11,"ne","","",96,[[["self"],["itemconst"]],["bool"]]],[11,"eq","","",100,[[["self"],["itemfn"]],["bool"]]],[11,"ne","","",100,[[["self"],["itemfn"]],["bool"]]],[11,"eq","","",105,[[["self"],["itemmod"]],["bool"]]],[11,"ne","","",105,[[["self"],["itemmod"]],["bool"]]],[11,"eq","","",101,[[["self"],["itemforeignmod"]],["bool"]]],[11,"ne","","",101,[[["self"],["itemforeignmod"]],["bool"]]],[11,"eq","","",110,[[["self"],["itemtype"]],["bool"]]],[11,"ne","","",110,[[["self"],["itemtype"]],["bool"]]],[11,"eq","","",98,[[["self"],["itemexistential"]],["bool"]]],[11,"ne","","",98,[[["self"],["itemexistential"]],["bool"]]],[11,"eq","","",107,[[["self"],["itemstruct"]],["bool"]]],[11,"ne","","",107,[[["self"],["itemstruct"]],["bool"]]],[11,"eq","","",97,[[["self"],["itemenum"]],["bool"]]],[11,"ne","","",97,[[["self"],["itemenum"]],["bool"]]],[11,"eq","","",111,[[["self"],["itemunion"]],["bool"]]],[11,"ne","","",111,[[["self"],["itemunion"]],["bool"]]],[11,"eq","","",108,[[["self"],["itemtrait"]],["bool"]]],[11,"ne","","",108,[[["self"],["itemtrait"]],["bool"]]],[11,"eq","","",109,[[["self"],["itemtraitalias"]],["bool"]]],[11,"ne","","",109,[[["self"],["itemtraitalias"]],["bool"]]],[11,"eq","","",102,[[["self"],["itemimpl"]],["bool"]]],[11,"ne","","",102,[[["self"],["itemimpl"]],["bool"]]],[11,"eq","","",103,[[["self"],["itemmacro"]],["bool"]]],[11,"ne","","",103,[[["self"],["itemmacro"]],["bool"]]],[11,"eq","","",104,[[["self"],["self"]],["bool"]]],[11,"eq","","",113,[[["self"],["self"]],["bool"]]],[11,"eq","","",178,[[["self"],["usetree"]],["bool"]]],[11,"ne","","",178,[[["self"],["usetree"]],["bool"]]],[11,"eq","","",123,[[["self"],["usepath"]],["bool"]]],[11,"ne","","",123,[[["self"],["usepath"]],["bool"]]],[11,"eq","","",122,[[["self"],["usename"]],["bool"]]],[11,"ne","","",122,[[["self"],["usename"]],["bool"]]],[11,"eq","","",124,[[["self"],["userename"]],["bool"]]],[11,"ne","","",124,[[["self"],["userename"]],["bool"]]],[11,"eq","","",120,[[["self"],["useglob"]],["bool"]]],[11,"ne","","",120,[[["self"],["useglob"]],["bool"]]],[11,"eq","","",121,[[["self"],["usegroup"]],["bool"]]],[11,"ne","","",121,[[["self"],["usegroup"]],["bool"]]],[11,"eq","","",174,[[["self"],["foreignitem"]],["bool"]]],[11,"ne","","",174,[[["self"],["foreignitem"]],["bool"]]],[11,"eq","","",85,[[["self"],["foreignitemfn"]],["bool"]]],[11,"ne","","",85,[[["self"],["foreignitemfn"]],["bool"]]],[11,"eq","","",87,[[["self"],["foreignitemstatic"]],["bool"]]],[11,"ne","","",87,[[["self"],["foreignitemstatic"]],["bool"]]],[11,"eq","","",88,[[["self"],["foreignitemtype"]],["bool"]]],[11,"ne","","",88,[[["self"],["foreignitemtype"]],["bool"]]],[11,"eq","","",86,[[["self"],["foreignitemmacro"]],["bool"]]],[11,"ne","","",86,[[["self"],["foreignitemmacro"]],["bool"]]],[11,"eq","","",89,[[["self"],["self"]],["bool"]]],[11,"eq","","",177,[[["self"],["traititem"]],["bool"]]],[11,"ne","","",177,[[["self"],["traititem"]],["bool"]]],[11,"eq","","",115,[[["self"],["traititemconst"]],["bool"]]],[11,"ne","","",115,[[["self"],["traititemconst"]],["bool"]]],[11,"eq","","",117,[[["self"],["traititemmethod"]],["bool"]]],[11,"ne","","",117,[[["self"],["traititemmethod"]],["bool"]]],[11,"eq","","",118,[[["self"],["traititemtype"]],["bool"]]],[11,"ne","","",118,[[["self"],["traititemtype"]],["bool"]]],[11,"eq","","",116,[[["self"],["traititemmacro"]],["bool"]]],[11,"ne","","",116,[[["self"],["traititemmacro"]],["bool"]]],[11,"eq","","",119,[[["self"],["self"]],["bool"]]],[11,"eq","","",175,[[["self"],["implitem"]],["bool"]]],[11,"ne","","",175,[[["self"],["implitem"]],["bool"]]],[11,"eq","","",90,[[["self"],["implitemconst"]],["bool"]]],[11,"ne","","",90,[[["self"],["implitemconst"]],["bool"]]],[11,"eq","","",93,[[["self"],["implitemmethod"]],["bool"]]],[11,"ne","","",93,[[["self"],["implitemmethod"]],["bool"]]],[11,"eq","","",94,[[["self"],["implitemtype"]],["bool"]]],[11,"ne","","",94,[[["self"],["implitemtype"]],["bool"]]],[11,"eq","","",91,[[["self"],["implitemexistential"]],["bool"]]],[11,"ne","","",91,[[["self"],["implitemexistential"]],["bool"]]],[11,"eq","","",92,[[["self"],["implitemmacro"]],["bool"]]],[11,"ne","","",92,[[["self"],["implitemmacro"]],["bool"]]],[11,"eq","","",95,[[["self"],["self"]],["bool"]]],[11,"eq","","",114,[[["self"],["methodsig"]],["bool"]]],[11,"ne","","",114,[[["self"],["methodsig"]],["bool"]]],[11,"eq","","",84,[[["self"],["fndecl"]],["bool"]]],[11,"ne","","",84,[[["self"],["fndecl"]],["bool"]]],[11,"eq","","",173,[[["self"],["fnarg"]],["bool"]]],[11,"ne","","",173,[[["self"],["fnarg"]],["bool"]]],[11,"eq","","",83,[[["self"],["argselfref"]],["bool"]]],[11,"ne","","",83,[[["self"],["argselfref"]],["bool"]]],[11,"eq","","",82,[[["self"],["argself"]],["bool"]]],[11,"ne","","",82,[[["self"],["argself"]],["bool"]]],[11,"eq","","",81,[[["self"],["argcaptured"]],["bool"]]],[11,"ne","","",81,[[["self"],["argcaptured"]],["bool"]]],[11,"eq","","",125,[[["self"],["file"]],["bool"]]],[11,"ne","","",125,[[["self"],["file"]],["bool"]]],[11,"eq","","",126,[[["self"],["lifetime"]],["bool"]]],[11,"eq","","",181,[[["self"],["lit"]],["bool"]]],[11,"ne","","",181,[[["self"],["lit"]],["bool"]]],[11,"eq","","",296,[[["self"],["self"]],["bool"]]],[11,"eq","","",297,[[["self"],["self"]],["bool"]]],[11,"eq","","",298,[[["self"],["self"]],["bool"]]],[11,"eq","","",299,[[["self"],["self"]],["bool"]]],[11,"eq","","",300,[[["self"],["self"]],["bool"]]],[11,"eq","","",301,[[["self"],["self"]],["bool"]]],[11,"eq","","",127,[[["self"],["self"]],["bool"]]],[11,"eq","","",128,[[["self"],["self"]],["bool"]]],[11,"eq","","",182,[[["self"],["strstyle"]],["bool"]]],[11,"ne","","",182,[[["self"],["strstyle"]],["bool"]]],[11,"eq","","",180,[[["self"],["intsuffix"]],["bool"]]],[11,"eq","","",179,[[["self"],["floatsuffix"]],["bool"]]],[11,"eq","","",183,[[["self"],["macrodelimiter"]],["bool"]]],[11,"ne","","",183,[[["self"],["macrodelimiter"]],["bool"]]],[11,"eq","","",129,[[["self"],["self"]],["bool"]]],[11,"eq","","",133,[[["self"],["deriveinput"]],["bool"]]],[11,"ne","","",133,[[["self"],["deriveinput"]],["bool"]]],[11,"eq","","",184,[[["self"],["data"]],["bool"]]],[11,"ne","","",184,[[["self"],["data"]],["bool"]]],[11,"eq","","",131,[[["self"],["datastruct"]],["bool"]]],[11,"ne","","",131,[[["self"],["datastruct"]],["bool"]]],[11,"eq","","",130,[[["self"],["dataenum"]],["bool"]]],[11,"ne","","",130,[[["self"],["dataenum"]],["bool"]]],[11,"eq","","",132,[[["self"],["dataunion"]],["bool"]]],[11,"ne","","",132,[[["self"],["dataunion"]],["bool"]]],[11,"eq","","",185,[[["self"],["binop"]],["bool"]]],[11,"ne","","",185,[[["self"],["binop"]],["bool"]]],[11,"eq","","",186,[[["self"],["unop"]],["bool"]]],[11,"ne","","",186,[[["self"],["unop"]],["bool"]]],[11,"eq","","",189,[[["self"],["type"]],["bool"]]],[11,"ne","","",189,[[["self"],["type"]],["bool"]]],[11,"eq","","",147,[[["self"],["typeslice"]],["bool"]]],[11,"ne","","",147,[[["self"],["typeslice"]],["bool"]]],[11,"eq","","",136,[[["self"],["typearray"]],["bool"]]],[11,"ne","","",136,[[["self"],["typearray"]],["bool"]]],[11,"eq","","",145,[[["self"],["typeptr"]],["bool"]]],[11,"ne","","",145,[[["self"],["typeptr"]],["bool"]]],[11,"eq","","",146,[[["self"],["typereference"]],["bool"]]],[11,"ne","","",146,[[["self"],["typereference"]],["bool"]]],[11,"eq","","",137,[[["self"],["typebarefn"]],["bool"]]],[11,"ne","","",137,[[["self"],["typebarefn"]],["bool"]]],[11,"eq","","",142,[[["self"],["typenever"]],["bool"]]],[11,"ne","","",142,[[["self"],["typenever"]],["bool"]]],[11,"eq","","",149,[[["self"],["typetuple"]],["bool"]]],[11,"ne","","",149,[[["self"],["typetuple"]],["bool"]]],[11,"eq","","",144,[[["self"],["typepath"]],["bool"]]],[11,"ne","","",144,[[["self"],["typepath"]],["bool"]]],[11,"eq","","",148,[[["self"],["typetraitobject"]],["bool"]]],[11,"ne","","",148,[[["self"],["typetraitobject"]],["bool"]]],[11,"eq","","",139,[[["self"],["typeimpltrait"]],["bool"]]],[11,"ne","","",139,[[["self"],["typeimpltrait"]],["bool"]]],[11,"eq","","",143,[[["self"],["typeparen"]],["bool"]]],[11,"ne","","",143,[[["self"],["typeparen"]],["bool"]]],[11,"eq","","",138,[[["self"],["typegroup"]],["bool"]]],[11,"ne","","",138,[[["self"],["typegroup"]],["bool"]]],[11,"eq","","",140,[[["self"],["typeinfer"]],["bool"]]],[11,"ne","","",140,[[["self"],["typeinfer"]],["bool"]]],[11,"eq","","",141,[[["self"],["typemacro"]],["bool"]]],[11,"ne","","",141,[[["self"],["typemacro"]],["bool"]]],[11,"eq","","",150,[[["self"],["self"]],["bool"]]],[11,"eq","","",134,[[["self"],["abi"]],["bool"]]],[11,"ne","","",134,[[["self"],["abi"]],["bool"]]],[11,"eq","","",135,[[["self"],["barefnarg"]],["bool"]]],[11,"ne","","",135,[[["self"],["barefnarg"]],["bool"]]],[11,"eq","","",187,[[["self"],["barefnargname"]],["bool"]]],[11,"ne","","",187,[[["self"],["barefnargname"]],["bool"]]],[11,"eq","","",188,[[["self"],["returntype"]],["bool"]]],[11,"ne","","",188,[[["self"],["returntype"]],["bool"]]],[11,"eq","","",155,[[["self"],["path"]],["bool"]]],[11,"ne","","",155,[[["self"],["path"]],["bool"]]],[11,"eq","","",156,[[["self"],["pathsegment"]],["bool"]]],[11,"ne","","",156,[[["self"],["pathsegment"]],["bool"]]],[11,"eq","","",191,[[["self"],["patharguments"]],["bool"]]],[11,"ne","","",191,[[["self"],["patharguments"]],["bool"]]],[11,"eq","","",190,[[["self"],["genericargument"]],["bool"]]],[11,"ne","","",190,[[["self"],["genericargument"]],["bool"]]],[11,"eq","","",151,[[["self"],["anglebracketedgenericarguments"]],["bool"]]],[11,"ne","","",151,[[["self"],["anglebracketedgenericarguments"]],["bool"]]],[11,"eq","","",152,[[["self"],["binding"]],["bool"]]],[11,"ne","","",152,[[["self"],["binding"]],["bool"]]],[11,"eq","","",153,[[["self"],["constraint"]],["bool"]]],[11,"ne","","",153,[[["self"],["constraint"]],["bool"]]],[11,"eq","","",154,[[["self"],["parenthesizedgenericarguments"]],["bool"]]],[11,"ne","","",154,[[["self"],["parenthesizedgenericarguments"]],["bool"]]],[11,"eq","","",157,[[["self"],["qself"]],["bool"]]],[11,"ne","","",157,[[["self"],["qself"]],["bool"]]],[11,"eq","syn::buffer","",303,[[["self"],["cursor"]],["bool"]]],[11,"ne","","",303,[[["self"],["cursor"]],["bool"]]],[11,"eq","syn::punctuated","",306,[[["self"],["punctuated"]],["bool"]]],[11,"ne","","",306,[[["self"],["punctuated"]],["bool"]]],[11,"from","syn","",315,[[["selfvalue"]],["ident"]]],[11,"from","","",315,[[["selftype"]],["ident"]]],[11,"from","","",315,[[["super"]],["ident"]]],[11,"from","","",315,[[["crate"]],["ident"]]],[11,"from","","",315,[[["extern"]],["ident"]]],[11,"from","","",315,[[["underscore"]],["ident"]]],[11,"from","","",159,[[["ident"]],["meta"]]],[11,"from","","",159,[[["metalist"]],["meta"]]],[11,"from","","",159,[[["metanamevalue"]],["meta"]]],[11,"from","","",160,[[["meta"]],["nestedmeta"]]],[11,"from","","",160,[[["lit"]],["nestedmeta"]]],[11,"from","","",161,[[["fieldsnamed"]],["fields"]]],[11,"from","","",161,[[["fieldsunnamed"]],["fields"]]],[11,"from","","",162,[[["vispublic"]],["visibility"]]],[11,"from","","",162,[[["viscrate"]],["visibility"]]],[11,"from","","",162,[[["visrestricted"]],["visibility"]]],[11,"from","","",163,[[["exprbox"]],["expr"]]],[11,"from","","",163,[[["exprinplace"]],["expr"]]],[11,"from","","",163,[[["exprarray"]],["expr"]]],[11,"from","","",163,[[["exprcall"]],["expr"]]],[11,"from","","",163,[[["exprmethodcall"]],["expr"]]],[11,"from","","",163,[[["exprtuple"]],["expr"]]],[11,"from","","",163,[[["exprbinary"]],["expr"]]],[11,"from","","",163,[[["exprunary"]],["expr"]]],[11,"from","","",163,[[["exprlit"]],["expr"]]],[11,"from","","",163,[[["exprcast"]],["expr"]]],[11,"from","","",163,[[["exprtype"]],["expr"]]],[11,"from","","",163,[[["exprlet"]],["expr"]]],[11,"from","","",163,[[["exprif"]],["expr"]]],[11,"from","","",163,[[["exprwhile"]],["expr"]]],[11,"from","","",163,[[["exprforloop"]],["expr"]]],[11,"from","","",163,[[["exprloop"]],["expr"]]],[11,"from","","",163,[[["exprmatch"]],["expr"]]],[11,"from","","",163,[[["exprclosure"]],["expr"]]],[11,"from","","",163,[[["exprunsafe"]],["expr"]]],[11,"from","","",163,[[["exprblock"]],["expr"]]],[11,"from","","",163,[[["exprassign"]],["expr"]]],[11,"from","","",163,[[["exprassignop"]],["expr"]]],[11,"from","","",163,[[["exprfield"]],["expr"]]],[11,"from","","",163,[[["exprindex"]],["expr"]]],[11,"from","","",163,[[["exprrange"]],["expr"]]],[11,"from","","",163,[[["exprpath"]],["expr"]]],[11,"from","","",163,[[["exprreference"]],["expr"]]],[11,"from","","",163,[[["exprbreak"]],["expr"]]],[11,"from","","",163,[[["exprcontinue"]],["expr"]]],[11,"from","","",163,[[["exprreturn"]],["expr"]]],[11,"from","","",163,[[["exprmacro"]],["expr"]]],[11,"from","","",163,[[["exprstruct"]],["expr"]]],[11,"from","","",163,[[["exprrepeat"]],["expr"]]],[11,"from","","",163,[[["exprparen"]],["expr"]]],[11,"from","","",163,[[["exprgroup"]],["expr"]]],[11,"from","","",163,[[["exprtry"]],["expr"]]],[11,"from","","",163,[[["exprasync"]],["expr"]]],[11,"from","","",163,[[["exprtryblock"]],["expr"]]],[11,"from","","",163,[[["expryield"]],["expr"]]],[11,"from","","",163,[[["exprverbatim"]],["expr"]]],[11,"from","","",50,[[["usize"]],["index"]]],[11,"from","","",166,[[["patwild"]],["pat"]]],[11,"from","","",166,[[["patident"]],["pat"]]],[11,"from","","",166,[[["patstruct"]],["pat"]]],[11,"from","","",166,[[["pattuplestruct"]],["pat"]]],[11,"from","","",166,[[["patpath"]],["pat"]]],[11,"from","","",166,[[["pattuple"]],["pat"]]],[11,"from","","",166,[[["patbox"]],["pat"]]],[11,"from","","",166,[[["patref"]],["pat"]]],[11,"from","","",166,[[["patlit"]],["pat"]]],[11,"from","","",166,[[["patrange"]],["pat"]]],[11,"from","","",166,[[["patslice"]],["pat"]]],[11,"from","","",166,[[["patmacro"]],["pat"]]],[11,"from","","",166,[[["patverbatim"]],["pat"]]],[11,"from","","",169,[[["typeparam"]],["genericparam"]]],[11,"from","","",169,[[["lifetimedef"]],["genericparam"]]],[11,"from","","",169,[[["constparam"]],["genericparam"]]],[11,"from","","",79,[[["ident"]],["self"]]],[11,"from","","",171,[[["traitbound"]],["typeparambound"]]],[11,"from","","",171,[[["lifetime"]],["typeparambound"]]],[11,"from","","",172,[[["predicatetype"]],["wherepredicate"]]],[11,"from","","",172,[[["predicatelifetime"]],["wherepredicate"]]],[11,"from","","",172,[[["predicateeq"]],["wherepredicate"]]],[11,"from","","",176,[[["itemexterncrate"]],["item"]]],[11,"from","","",176,[[["itemuse"]],["item"]]],[11,"from","","",176,[[["itemstatic"]],["item"]]],[11,"from","","",176,[[["itemconst"]],["item"]]],[11,"from","","",176,[[["itemfn"]],["item"]]],[11,"from","","",176,[[["itemmod"]],["item"]]],[11,"from","","",176,[[["itemforeignmod"]],["item"]]],[11,"from","","",176,[[["itemtype"]],["item"]]],[11,"from","","",176,[[["itemexistential"]],["item"]]],[11,"from","","",176,[[["itemstruct"]],["item"]]],[11,"from","","",176,[[["itemenum"]],["item"]]],[11,"from","","",176,[[["itemunion"]],["item"]]],[11,"from","","",176,[[["itemtrait"]],["item"]]],[11,"from","","",176,[[["itemtraitalias"]],["item"]]],[11,"from","","",176,[[["itemimpl"]],["item"]]],[11,"from","","",176,[[["itemmacro"]],["item"]]],[11,"from","","",176,[[["itemmacro2"]],["item"]]],[11,"from","","",176,[[["itemverbatim"]],["item"]]],[11,"from","","",176,[[["deriveinput"]],["item"]]],[11,"from","","",178,[[["usepath"]],["usetree"]]],[11,"from","","",178,[[["usename"]],["usetree"]]],[11,"from","","",178,[[["userename"]],["usetree"]]],[11,"from","","",178,[[["useglob"]],["usetree"]]],[11,"from","","",178,[[["usegroup"]],["usetree"]]],[11,"from","","",174,[[["foreignitemfn"]],["foreignitem"]]],[11,"from","","",174,[[["foreignitemstatic"]],["foreignitem"]]],[11,"from","","",174,[[["foreignitemtype"]],["foreignitem"]]],[11,"from","","",174,[[["foreignitemmacro"]],["foreignitem"]]],[11,"from","","",174,[[["foreignitemverbatim"]],["foreignitem"]]],[11,"from","","",177,[[["traititemconst"]],["traititem"]]],[11,"from","","",177,[[["traititemmethod"]],["traititem"]]],[11,"from","","",177,[[["traititemtype"]],["traititem"]]],[11,"from","","",177,[[["traititemmacro"]],["traititem"]]],[11,"from","","",177,[[["traititemverbatim"]],["traititem"]]],[11,"from","","",175,[[["implitemconst"]],["implitem"]]],[11,"from","","",175,[[["implitemmethod"]],["implitem"]]],[11,"from","","",175,[[["implitemtype"]],["implitem"]]],[11,"from","","",175,[[["implitemexistential"]],["implitem"]]],[11,"from","","",175,[[["implitemmacro"]],["implitem"]]],[11,"from","","",175,[[["implitemverbatim"]],["implitem"]]],[11,"from","","",173,[[["argselfref"]],["fnarg"]]],[11,"from","","",173,[[["argself"]],["fnarg"]]],[11,"from","","",173,[[["argcaptured"]],["fnarg"]]],[11,"from","","",173,[[["pat"]],["fnarg"]]],[11,"from","","",173,[[["type"]],["fnarg"]]],[11,"from","","",181,[[["litstr"]],["lit"]]],[11,"from","","",181,[[["litbytestr"]],["lit"]]],[11,"from","","",181,[[["litbyte"]],["lit"]]],[11,"from","","",181,[[["litchar"]],["lit"]]],[11,"from","","",181,[[["litint"]],["lit"]]],[11,"from","","",181,[[["litfloat"]],["lit"]]],[11,"from","","",181,[[["litbool"]],["lit"]]],[11,"from","","",181,[[["litverbatim"]],["lit"]]],[11,"from","","",184,[[["datastruct"]],["data"]]],[11,"from","","",184,[[["dataenum"]],["data"]]],[11,"from","","",184,[[["dataunion"]],["data"]]],[11,"from","","",189,[[["typeslice"]],["type"]]],[11,"from","","",189,[[["typearray"]],["type"]]],[11,"from","","",189,[[["typeptr"]],["type"]]],[11,"from","","",189,[[["typereference"]],["type"]]],[11,"from","","",189,[[["typebarefn"]],["type"]]],[11,"from","","",189,[[["typenever"]],["type"]]],[11,"from","","",189,[[["typetuple"]],["type"]]],[11,"from","","",189,[[["typepath"]],["type"]]],[11,"from","","",189,[[["typetraitobject"]],["type"]]],[11,"from","","",189,[[["typeimpltrait"]],["type"]]],[11,"from","","",189,[[["typeparen"]],["type"]]],[11,"from","","",189,[[["typegroup"]],["type"]]],[11,"from","","",189,[[["typeinfer"]],["type"]]],[11,"from","","",189,[[["typemacro"]],["type"]]],[11,"from","","",189,[[["typeverbatim"]],["type"]]],[11,"from","","",155,[[["t"]],["self"]]],[11,"from","","",156,[[["t"]],["self"]]],[11,"from","","",314,[[["lexerror"]],["self"]]],[11,"clone","syn::token","",192,[[["self"]],["underscore"]]],[11,"clone","","",193,[[["self"]],["abstract"]]],[11,"clone","","",194,[[["self"]],["as"]]],[11,"clone","","",195,[[["self"]],["async"]]],[11,"clone","","",196,[[["self"]],["auto"]]],[11,"clone","","",197,[[["self"]],["become"]]],[11,"clone","","",198,[[["self"]],["box"]]],[11,"clone","","",199,[[["self"]],["break"]]],[11,"clone","","",200,[[["self"]],["const"]]],[11,"clone","","",201,[[["self"]],["continue"]]],[11,"clone","","",202,[[["self"]],["crate"]]],[11,"clone","","",203,[[["self"]],["default"]]],[11,"clone","","",204,[[["self"]],["do"]]],[11,"clone","","",205,[[["self"]],["dyn"]]],[11,"clone","","",206,[[["self"]],["else"]]],[11,"clone","","",207,[[["self"]],["enum"]]],[11,"clone","","",208,[[["self"]],["existential"]]],[11,"clone","","",209,[[["self"]],["extern"]]],[11,"clone","","",210,[[["self"]],["final"]]],[11,"clone","","",211,[[["self"]],["fn"]]],[11,"clone","","",212,[[["self"]],["for"]]],[11,"clone","","",213,[[["self"]],["if"]]],[11,"clone","","",214,[[["self"]],["impl"]]],[11,"clone","","",215,[[["self"]],["in"]]],[11,"clone","","",216,[[["self"]],["let"]]],[11,"clone","","",217,[[["self"]],["loop"]]],[11,"clone","","",218,[[["self"]],["macro"]]],[11,"clone","","",219,[[["self"]],["match"]]],[11,"clone","","",220,[[["self"]],["mod"]]],[11,"clone","","",221,[[["self"]],["move"]]],[11,"clone","","",222,[[["self"]],["mut"]]],[11,"clone","","",223,[[["self"]],["override"]]],[11,"clone","","",224,[[["self"]],["priv"]]],[11,"clone","","",225,[[["self"]],["pub"]]],[11,"clone","","",226,[[["self"]],["ref"]]],[11,"clone","","",227,[[["self"]],["return"]]],[11,"clone","","",228,[[["self"]],["selftype"]]],[11,"clone","","",229,[[["self"]],["selfvalue"]]],[11,"clone","","",230,[[["self"]],["static"]]],[11,"clone","","",231,[[["self"]],["struct"]]],[11,"clone","","",232,[[["self"]],["super"]]],[11,"clone","","",233,[[["self"]],["trait"]]],[11,"clone","","",234,[[["self"]],["try"]]],[11,"clone","","",235,[[["self"]],["type"]]],[11,"clone","","",236,[[["self"]],["typeof"]]],[11,"clone","","",237,[[["self"]],["union"]]],[11,"clone","","",238,[[["self"]],["unsafe"]]],[11,"clone","","",239,[[["self"]],["unsized"]]],[11,"clone","","",240,[[["self"]],["use"]]],[11,"clone","","",241,[[["self"]],["virtual"]]],[11,"clone","","",242,[[["self"]],["where"]]],[11,"clone","","",243,[[["self"]],["while"]]],[11,"clone","","",244,[[["self"]],["yield"]]],[11,"clone","","",245,[[["self"]],["add"]]],[11,"clone","","",246,[[["self"]],["addeq"]]],[11,"clone","","",247,[[["self"]],["and"]]],[11,"clone","","",248,[[["self"]],["andand"]]],[11,"clone","","",249,[[["self"]],["andeq"]]],[11,"clone","","",250,[[["self"]],["at"]]],[11,"clone","","",251,[[["self"]],["bang"]]],[11,"clone","","",252,[[["self"]],["caret"]]],[11,"clone","","",253,[[["self"]],["careteq"]]],[11,"clone","","",254,[[["self"]],["colon"]]],[11,"clone","","",255,[[["self"]],["colon2"]]],[11,"clone","","",256,[[["self"]],["comma"]]],[11,"clone","","",257,[[["self"]],["div"]]],[11,"clone","","",258,[[["self"]],["diveq"]]],[11,"clone","","",259,[[["self"]],["dollar"]]],[11,"clone","","",260,[[["self"]],["dot"]]],[11,"clone","","",261,[[["self"]],["dot2"]]],[11,"clone","","",262,[[["self"]],["dot3"]]],[11,"clone","","",263,[[["self"]],["dotdoteq"]]],[11,"clone","","",264,[[["self"]],["eq"]]],[11,"clone","","",265,[[["self"]],["eqeq"]]],[11,"clone","","",266,[[["self"]],["ge"]]],[11,"clone","","",267,[[["self"]],["gt"]]],[11,"clone","","",268,[[["self"]],["le"]]],[11,"clone","","",269,[[["self"]],["lt"]]],[11,"clone","","",270,[[["self"]],["muleq"]]],[11,"clone","","",271,[[["self"]],["ne"]]],[11,"clone","","",272,[[["self"]],["or"]]],[11,"clone","","",273,[[["self"]],["oreq"]]],[11,"clone","","",274,[[["self"]],["oror"]]],[11,"clone","","",275,[[["self"]],["pound"]]],[11,"clone","","",276,[[["self"]],["question"]]],[11,"clone","","",277,[[["self"]],["rarrow"]]],[11,"clone","","",278,[[["self"]],["larrow"]]],[11,"clone","","",279,[[["self"]],["rem"]]],[11,"clone","","",280,[[["self"]],["remeq"]]],[11,"clone","","",281,[[["self"]],["fatarrow"]]],[11,"clone","","",282,[[["self"]],["semi"]]],[11,"clone","","",283,[[["self"]],["shl"]]],[11,"clone","","",284,[[["self"]],["shleq"]]],[11,"clone","","",285,[[["self"]],["shr"]]],[11,"clone","","",286,[[["self"]],["shreq"]]],[11,"clone","","",287,[[["self"]],["star"]]],[11,"clone","","",288,[[["self"]],["sub"]]],[11,"clone","","",289,[[["self"]],["subeq"]]],[11,"clone","","",290,[[["self"]],["tilde"]]],[11,"clone","","",291,[[["self"]],["brace"]]],[11,"clone","","",292,[[["self"]],["bracket"]]],[11,"clone","","",293,[[["self"]],["paren"]]],[11,"clone","","",294,[[["self"]],["group"]]],[11,"clone","syn","",0,[[["self"]],["attribute"]]],[11,"clone","","",158,[[["self"]],["attrstyle"]]],[11,"clone","","",159,[[["self"]],["meta"]]],[11,"clone","","",1,[[["self"]],["metalist"]]],[11,"clone","","",2,[[["self"]],["metanamevalue"]]],[11,"clone","","",160,[[["self"]],["nestedmeta"]]],[11,"clone","","",6,[[["self"]],["variant"]]],[11,"clone","","",161,[[["self"]],["fields"]]],[11,"clone","","",4,[[["self"]],["fieldsnamed"]]],[11,"clone","","",5,[[["self"]],["fieldsunnamed"]]],[11,"clone","","",3,[[["self"]],["field"]]],[11,"clone","","",162,[[["self"]],["visibility"]]],[11,"clone","","",8,[[["self"]],["vispublic"]]],[11,"clone","","",7,[[["self"]],["viscrate"]]],[11,"clone","","",9,[[["self"]],["visrestricted"]]],[11,"clone","","",163,[[["self"]],["expr"]]],[11,"clone","","",16,[[["self"]],["exprbox"]]],[11,"clone","","",26,[[["self"]],["exprinplace"]]],[11,"clone","","",10,[[["self"]],["exprarray"]]],[11,"clone","","",18,[[["self"]],["exprcall"]]],[11,"clone","","",33,[[["self"]],["exprmethodcall"]]],[11,"clone","","",43,[[["self"]],["exprtuple"]]],[11,"clone","","",14,[[["self"]],["exprbinary"]]],[11,"clone","","",45,[[["self"]],["exprunary"]]],[11,"clone","","",29,[[["self"]],["exprlit"]]],[11,"clone","","",19,[[["self"]],["exprcast"]]],[11,"clone","","",44,[[["self"]],["exprtype"]]],[11,"clone","","",28,[[["self"]],["exprlet"]]],[11,"clone","","",25,[[["self"]],["exprif"]]],[11,"clone","","",48,[[["self"]],["exprwhile"]]],[11,"clone","","",23,[[["self"]],["exprforloop"]]],[11,"clone","","",30,[[["self"]],["exprloop"]]],[11,"clone","","",32,[[["self"]],["exprmatch"]]],[11,"clone","","",20,[[["self"]],["exprclosure"]]],[11,"clone","","",46,[[["self"]],["exprunsafe"]]],[11,"clone","","",15,[[["self"]],["exprblock"]]],[11,"clone","","",11,[[["self"]],["exprassign"]]],[11,"clone","","",12,[[["self"]],["exprassignop"]]],[11,"clone","","",22,[[["self"]],["exprfield"]]],[11,"clone","","",27,[[["self"]],["exprindex"]]],[11,"clone","","",36,[[["self"]],["exprrange"]]],[11,"clone","","",35,[[["self"]],["exprpath"]]],[11,"clone","","",37,[[["self"]],["exprreference"]]],[11,"clone","","",17,[[["self"]],["exprbreak"]]],[11,"clone","","",21,[[["self"]],["exprcontinue"]]],[11,"clone","","",39,[[["self"]],["exprreturn"]]],[11,"clone","","",31,[[["self"]],["exprmacro"]]],[11,"clone","","",40,[[["self"]],["exprstruct"]]],[11,"clone","","",38,[[["self"]],["exprrepeat"]]],[11,"clone","","",34,[[["self"]],["exprparen"]]],[11,"clone","","",24,[[["self"]],["exprgroup"]]],[11,"clone","","",41,[[["self"]],["exprtry"]]],[11,"clone","","",13,[[["self"]],["exprasync"]]],[11,"clone","","",42,[[["self"]],["exprtryblock"]]],[11,"clone","","",49,[[["self"]],["expryield"]]],[11,"clone","","",47,[[["self"]],["exprverbatim"]]],[11,"clone","","",164,[[["self"]],["member"]]],[11,"clone","","",50,[[["self"]],["index"]]],[11,"clone","","",57,[[["self"]],["methodturbofish"]]],[11,"clone","","",165,[[["self"]],["genericmethodargument"]]],[11,"clone","","",54,[[["self"]],["fieldvalue"]]],[11,"clone","","",55,[[["self"]],["label"]]],[11,"clone","","",52,[[["self"]],["block"]]],[11,"clone","","",168,[[["self"]],["stmt"]]],[11,"clone","","",56,[[["self"]],["local"]]],[11,"clone","","",166,[[["self"]],["pat"]]],[11,"clone","","",70,[[["self"]],["patwild"]]],[11,"clone","","",59,[[["self"]],["patident"]]],[11,"clone","","",66,[[["self"]],["patstruct"]]],[11,"clone","","",68,[[["self"]],["pattuplestruct"]]],[11,"clone","","",62,[[["self"]],["patpath"]]],[11,"clone","","",67,[[["self"]],["pattuple"]]],[11,"clone","","",58,[[["self"]],["patbox"]]],[11,"clone","","",64,[[["self"]],["patref"]]],[11,"clone","","",60,[[["self"]],["patlit"]]],[11,"clone","","",63,[[["self"]],["patrange"]]],[11,"clone","","",65,[[["self"]],["patslice"]]],[11,"clone","","",61,[[["self"]],["patmacro"]]],[11,"clone","","",69,[[["self"]],["patverbatim"]]],[11,"clone","","",51,[[["self"]],["arm"]]],[11,"clone","","",167,[[["self"]],["rangelimits"]]],[11,"clone","","",53,[[["self"]],["fieldpat"]]],[11,"clone","","",73,[[["self"]],["generics"]]],[11,"clone","","",169,[[["self"]],["genericparam"]]],[11,"clone","","",79,[[["self"]],["typeparam"]]],[11,"clone","","",74,[[["self"]],["lifetimedef"]]],[11,"clone","","",72,[[["self"]],["constparam"]]],[11,"clone","","",316,[[["self"]],["implgenerics"]]],[11,"clone","","",295,[[["self"]],["typegenerics"]]],[11,"clone","","",317,[[["self"]],["turbofish"]]],[11,"clone","","",71,[[["self"]],["boundlifetimes"]]],[11,"clone","","",171,[[["self"]],["typeparambound"]]],[11,"clone","","",78,[[["self"]],["traitbound"]]],[11,"clone","","",170,[[["self"]],["traitboundmodifier"]]],[11,"clone","","",80,[[["self"]],["whereclause"]]],[11,"clone","","",172,[[["self"]],["wherepredicate"]]],[11,"clone","","",77,[[["self"]],["predicatetype"]]],[11,"clone","","",76,[[["self"]],["predicatelifetime"]]],[11,"clone","","",75,[[["self"]],["predicateeq"]]],[11,"clone","","",176,[[["self"]],["item"]]],[11,"clone","","",99,[[["self"]],["itemexterncrate"]]],[11,"clone","","",112,[[["self"]],["itemuse"]]],[11,"clone","","",106,[[["self"]],["itemstatic"]]],[11,"clone","","",96,[[["self"]],["itemconst"]]],[11,"clone","","",100,[[["self"]],["itemfn"]]],[11,"clone","","",105,[[["self"]],["itemmod"]]],[11,"clone","","",101,[[["self"]],["itemforeignmod"]]],[11,"clone","","",110,[[["self"]],["itemtype"]]],[11,"clone","","",98,[[["self"]],["itemexistential"]]],[11,"clone","","",107,[[["self"]],["itemstruct"]]],[11,"clone","","",97,[[["self"]],["itemenum"]]],[11,"clone","","",111,[[["self"]],["itemunion"]]],[11,"clone","","",108,[[["self"]],["itemtrait"]]],[11,"clone","","",109,[[["self"]],["itemtraitalias"]]],[11,"clone","","",102,[[["self"]],["itemimpl"]]],[11,"clone","","",103,[[["self"]],["itemmacro"]]],[11,"clone","","",104,[[["self"]],["itemmacro2"]]],[11,"clone","","",113,[[["self"]],["itemverbatim"]]],[11,"clone","","",178,[[["self"]],["usetree"]]],[11,"clone","","",123,[[["self"]],["usepath"]]],[11,"clone","","",122,[[["self"]],["usename"]]],[11,"clone","","",124,[[["self"]],["userename"]]],[11,"clone","","",120,[[["self"]],["useglob"]]],[11,"clone","","",121,[[["self"]],["usegroup"]]],[11,"clone","","",174,[[["self"]],["foreignitem"]]],[11,"clone","","",85,[[["self"]],["foreignitemfn"]]],[11,"clone","","",87,[[["self"]],["foreignitemstatic"]]],[11,"clone","","",88,[[["self"]],["foreignitemtype"]]],[11,"clone","","",86,[[["self"]],["foreignitemmacro"]]],[11,"clone","","",89,[[["self"]],["foreignitemverbatim"]]],[11,"clone","","",177,[[["self"]],["traititem"]]],[11,"clone","","",115,[[["self"]],["traititemconst"]]],[11,"clone","","",117,[[["self"]],["traititemmethod"]]],[11,"clone","","",118,[[["self"]],["traititemtype"]]],[11,"clone","","",116,[[["self"]],["traititemmacro"]]],[11,"clone","","",119,[[["self"]],["traititemverbatim"]]],[11,"clone","","",175,[[["self"]],["implitem"]]],[11,"clone","","",90,[[["self"]],["implitemconst"]]],[11,"clone","","",93,[[["self"]],["implitemmethod"]]],[11,"clone","","",94,[[["self"]],["implitemtype"]]],[11,"clone","","",91,[[["self"]],["implitemexistential"]]],[11,"clone","","",92,[[["self"]],["implitemmacro"]]],[11,"clone","","",95,[[["self"]],["implitemverbatim"]]],[11,"clone","","",114,[[["self"]],["methodsig"]]],[11,"clone","","",84,[[["self"]],["fndecl"]]],[11,"clone","","",173,[[["self"]],["fnarg"]]],[11,"clone","","",83,[[["self"]],["argselfref"]]],[11,"clone","","",82,[[["self"]],["argself"]]],[11,"clone","","",81,[[["self"]],["argcaptured"]]],[11,"clone","","",125,[[["self"]],["file"]]],[11,"clone","","",126,[[["self"]],["lifetime"]]],[11,"clone","","",181,[[["self"]],["lit"]]],[11,"clone","","",296,[[["self"]],["litstr"]]],[11,"clone","","",297,[[["self"]],["litbytestr"]]],[11,"clone","","",298,[[["self"]],["litbyte"]]],[11,"clone","","",299,[[["self"]],["litchar"]]],[11,"clone","","",300,[[["self"]],["litint"]]],[11,"clone","","",301,[[["self"]],["litfloat"]]],[11,"clone","","",127,[[["self"]],["litbool"]]],[11,"clone","","",128,[[["self"]],["litverbatim"]]],[11,"clone","","",182,[[["self"]],["strstyle"]]],[11,"clone","","",180,[[["self"]],["intsuffix"]]],[11,"clone","","",179,[[["self"]],["floatsuffix"]]],[11,"clone","","",129,[[["self"]],["macro"]]],[11,"clone","","",183,[[["self"]],["macrodelimiter"]]],[11,"clone","","",133,[[["self"]],["deriveinput"]]],[11,"clone","","",184,[[["self"]],["data"]]],[11,"clone","","",131,[[["self"]],["datastruct"]]],[11,"clone","","",130,[[["self"]],["dataenum"]]],[11,"clone","","",132,[[["self"]],["dataunion"]]],[11,"clone","","",185,[[["self"]],["binop"]]],[11,"clone","","",186,[[["self"]],["unop"]]],[11,"clone","","",189,[[["self"]],["type"]]],[11,"clone","","",147,[[["self"]],["typeslice"]]],[11,"clone","","",136,[[["self"]],["typearray"]]],[11,"clone","","",145,[[["self"]],["typeptr"]]],[11,"clone","","",146,[[["self"]],["typereference"]]],[11,"clone","","",137,[[["self"]],["typebarefn"]]],[11,"clone","","",142,[[["self"]],["typenever"]]],[11,"clone","","",149,[[["self"]],["typetuple"]]],[11,"clone","","",144,[[["self"]],["typepath"]]],[11,"clone","","",148,[[["self"]],["typetraitobject"]]],[11,"clone","","",139,[[["self"]],["typeimpltrait"]]],[11,"clone","","",143,[[["self"]],["typeparen"]]],[11,"clone","","",138,[[["self"]],["typegroup"]]],[11,"clone","","",140,[[["self"]],["typeinfer"]]],[11,"clone","","",141,[[["self"]],["typemacro"]]],[11,"clone","","",150,[[["self"]],["typeverbatim"]]],[11,"clone","","",134,[[["self"]],["abi"]]],[11,"clone","","",135,[[["self"]],["barefnarg"]]],[11,"clone","","",187,[[["self"]],["barefnargname"]]],[11,"clone","","",188,[[["self"]],["returntype"]]],[11,"clone","","",155,[[["self"]],["path"]]],[11,"clone","","",156,[[["self"]],["pathsegment"]]],[11,"clone","","",191,[[["self"]],["patharguments"]]],[11,"clone","","",190,[[["self"]],["genericargument"]]],[11,"clone","","",151,[[["self"]],["anglebracketedgenericarguments"]]],[11,"clone","","",152,[[["self"]],["binding"]]],[11,"clone","","",153,[[["self"]],["constraint"]]],[11,"clone","","",154,[[["self"]],["parenthesizedgenericarguments"]]],[11,"clone","","",157,[[["self"]],["qself"]]],[11,"clone","syn::buffer","",303,[[["self"]],["cursor"]]],[11,"clone","syn::punctuated","",306,[[["self"]],["punctuated"]]],[11,"clone","syn::parse","",312,[[["self"]],["stepcursor"]]],[11,"clone","syn","",314,[[["self"]],["self"]]],[11,"into_iter","syn::punctuated","",306,N],[11,"extend","","",306,[[["self"],["i"]]]],[11,"extend","","",306,[[["self"],["i"]]]],[11,"drop","syn::parse","",313,[[["self"]]]],[11,"partial_cmp","syn","",126,[[["self"],["lifetime"]],["option",["ordering"]]]],[11,"len","syn::punctuated","",318,[[["self"]],["usize"]]],[11,"len","","",319,[[["self"]],["usize"]]],[11,"len","","",320,[[["self"]],["usize"]]],[11,"len","","",321,[[["self"]],["usize"]]],[11,"len","","",322,[[["self"]],["usize"]]],[11,"len","","",323,[[["self"]],["usize"]]],[11,"next","","",318,[[["self"]],["option"]]],[11,"next","","",319,[[["self"]],["option"]]],[11,"next","","",320,[[["self"]],["option"]]],[11,"next","","",321,[[["self"]],["option"]]],[11,"next","","",322,[[["self"]],["option"]]],[11,"next","","",323,[[["self"]],["option"]]],[11,"default","syn::token","",192,[[],["self"]]],[11,"default","","",193,[[],["self"]]],[11,"default","","",194,[[],["self"]]],[11,"default","","",195,[[],["self"]]],[11,"default","","",196,[[],["self"]]],[11,"default","","",197,[[],["self"]]],[11,"default","","",198,[[],["self"]]],[11,"default","","",199,[[],["self"]]],[11,"default","","",200,[[],["self"]]],[11,"default","","",201,[[],["self"]]],[11,"default","","",202,[[],["self"]]],[11,"default","","",203,[[],["self"]]],[11,"default","","",204,[[],["self"]]],[11,"default","","",205,[[],["self"]]],[11,"default","","",206,[[],["self"]]],[11,"default","","",207,[[],["self"]]],[11,"default","","",208,[[],["self"]]],[11,"default","","",209,[[],["self"]]],[11,"default","","",210,[[],["self"]]],[11,"default","","",211,[[],["self"]]],[11,"default","","",212,[[],["self"]]],[11,"default","","",213,[[],["self"]]],[11,"default","","",214,[[],["self"]]],[11,"default","","",215,[[],["self"]]],[11,"default","","",216,[[],["self"]]],[11,"default","","",217,[[],["self"]]],[11,"default","","",218,[[],["self"]]],[11,"default","","",219,[[],["self"]]],[11,"default","","",220,[[],["self"]]],[11,"default","","",221,[[],["self"]]],[11,"default","","",222,[[],["self"]]],[11,"default","","",223,[[],["self"]]],[11,"default","","",224,[[],["self"]]],[11,"default","","",225,[[],["self"]]],[11,"default","","",226,[[],["self"]]],[11,"default","","",227,[[],["self"]]],[11,"default","","",228,[[],["self"]]],[11,"default","","",229,[[],["self"]]],[11,"default","","",230,[[],["self"]]],[11,"default","","",231,[[],["self"]]],[11,"default","","",232,[[],["self"]]],[11,"default","","",233,[[],["self"]]],[11,"default","","",234,[[],["self"]]],[11,"default","","",235,[[],["self"]]],[11,"default","","",236,[[],["self"]]],[11,"default","","",237,[[],["self"]]],[11,"default","","",238,[[],["self"]]],[11,"default","","",239,[[],["self"]]],[11,"default","","",240,[[],["self"]]],[11,"default","","",241,[[],["self"]]],[11,"default","","",242,[[],["self"]]],[11,"default","","",243,[[],["self"]]],[11,"default","","",244,[[],["self"]]],[11,"default","","",245,[[],["self"]]],[11,"default","","",246,[[],["self"]]],[11,"default","","",247,[[],["self"]]],[11,"default","","",248,[[],["self"]]],[11,"default","","",249,[[],["self"]]],[11,"default","","",250,[[],["self"]]],[11,"default","","",251,[[],["self"]]],[11,"default","","",252,[[],["self"]]],[11,"default","","",253,[[],["self"]]],[11,"default","","",254,[[],["self"]]],[11,"default","","",255,[[],["self"]]],[11,"default","","",256,[[],["self"]]],[11,"default","","",257,[[],["self"]]],[11,"default","","",258,[[],["self"]]],[11,"default","","",259,[[],["self"]]],[11,"default","","",260,[[],["self"]]],[11,"default","","",261,[[],["self"]]],[11,"default","","",262,[[],["self"]]],[11,"default","","",263,[[],["self"]]],[11,"default","","",264,[[],["self"]]],[11,"default","","",265,[[],["self"]]],[11,"default","","",266,[[],["self"]]],[11,"default","","",267,[[],["self"]]],[11,"default","","",268,[[],["self"]]],[11,"default","","",269,[[],["self"]]],[11,"default","","",270,[[],["self"]]],[11,"default","","",271,[[],["self"]]],[11,"default","","",272,[[],["self"]]],[11,"default","","",273,[[],["self"]]],[11,"default","","",274,[[],["self"]]],[11,"default","","",275,[[],["self"]]],[11,"default","","",276,[[],["self"]]],[11,"default","","",277,[[],["self"]]],[11,"default","","",278,[[],["self"]]],[11,"default","","",279,[[],["self"]]],[11,"default","","",280,[[],["self"]]],[11,"default","","",281,[[],["self"]]],[11,"default","","",282,[[],["self"]]],[11,"default","","",283,[[],["self"]]],[11,"default","","",284,[[],["self"]]],[11,"default","","",285,[[],["self"]]],[11,"default","","",286,[[],["self"]]],[11,"default","","",287,[[],["self"]]],[11,"default","","",288,[[],["self"]]],[11,"default","","",289,[[],["self"]]],[11,"default","","",290,[[],["self"]]],[11,"default","","",291,[[],["self"]]],[11,"default","","",292,[[],["self"]]],[11,"default","","",293,[[],["self"]]],[11,"default","","",294,[[],["self"]]],[11,"default","syn","",73,[[],["generics"]]],[11,"default","","",71,[[],["boundlifetimes"]]],[11,"default","","",191,[[],["self"]]],[11,"default","syn::punctuated","",306,[[],["self"]]],[11,"fmt","syn","",126,[[["self"],["formatter"]],["result"]]],[11,"fmt","syn::parse","",313,[[["self"],["formatter"]],["result"]]],[11,"fmt","syn","",314,[[["self"],["formatter"]],["result"]]],[11,"fmt","syn::token","",192,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",193,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",194,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",195,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",196,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",197,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",198,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",199,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",200,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",201,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",202,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",203,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",204,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",205,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",206,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",207,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",208,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",209,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",210,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",211,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",212,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",213,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",214,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",215,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",216,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",217,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",218,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",219,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",220,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",221,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",222,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",223,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",224,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",225,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",226,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",227,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",228,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",229,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",230,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",231,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",232,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",233,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",234,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",235,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",236,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",237,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",238,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",239,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",240,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",241,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",242,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",243,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",244,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",245,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",246,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",247,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",248,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",249,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",250,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",251,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",252,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",253,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",254,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",255,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",256,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",257,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",258,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",259,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",260,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",261,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",262,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",263,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",264,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",265,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",266,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",267,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",268,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",269,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",270,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",271,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",272,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",273,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",274,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",275,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",276,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",277,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",278,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",279,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",280,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",281,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",282,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",283,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",284,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",285,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",286,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",287,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",288,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",289,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",290,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",291,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",292,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",293,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",294,[[["self"],["formatter"]],["result"]]],[11,"fmt","syn","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",158,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",159,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",160,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",161,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",162,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",163,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",164,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",50,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",57,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",165,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",54,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",55,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",52,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",168,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",56,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",166,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",70,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",59,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",66,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",68,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",62,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",67,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",58,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",64,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",60,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",63,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",65,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",61,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",69,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",167,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",53,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",73,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",169,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",79,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",74,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",72,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",316,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",295,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",317,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",71,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",171,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",78,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",170,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",80,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",172,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",77,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",76,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",75,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",176,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",99,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",112,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",106,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",96,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",100,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",105,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",101,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",110,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",98,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",107,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",97,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",111,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",108,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",109,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",102,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",103,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",104,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",113,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",178,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",123,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",122,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",124,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",120,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",121,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",174,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",85,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",87,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",88,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",86,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",89,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",177,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",115,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",117,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",118,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",116,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",119,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",175,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",90,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",93,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",94,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",91,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",92,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",95,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",114,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",84,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",173,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",83,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",82,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",81,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",125,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",126,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",181,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",296,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",297,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",298,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",299,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",300,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",301,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",127,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",128,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",182,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",180,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",179,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",129,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",183,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",133,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",184,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",131,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",130,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",132,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",185,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",186,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",189,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",147,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",136,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",145,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",146,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",137,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",142,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",149,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",144,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",148,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",139,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",143,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",138,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",140,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",141,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",150,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",134,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",135,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",187,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",188,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",155,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",156,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",191,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",190,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",151,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",152,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",153,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",154,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",157,[[["self"],["formatter"]],["result"]]],[11,"fmt","syn::punctuated","",306,[[["self"],["formatter"]],["result"]]],[11,"fmt","syn::parse","",313,[[["self"],["formatter"]],["result"]]],[11,"fmt","syn","",314,[[["self"],["formatter"]],["result"]]],[11,"deref","syn::parse","",312,N],[11,"index","syn::punctuated","",306,N],[11,"index_mut","","",306,N],[11,"hash","syn::token","",192,[[["self"],["h"]]]],[11,"hash","","",193,[[["self"],["h"]]]],[11,"hash","","",194,[[["self"],["h"]]]],[11,"hash","","",195,[[["self"],["h"]]]],[11,"hash","","",196,[[["self"],["h"]]]],[11,"hash","","",197,[[["self"],["h"]]]],[11,"hash","","",198,[[["self"],["h"]]]],[11,"hash","","",199,[[["self"],["h"]]]],[11,"hash","","",200,[[["self"],["h"]]]],[11,"hash","","",201,[[["self"],["h"]]]],[11,"hash","","",202,[[["self"],["h"]]]],[11,"hash","","",203,[[["self"],["h"]]]],[11,"hash","","",204,[[["self"],["h"]]]],[11,"hash","","",205,[[["self"],["h"]]]],[11,"hash","","",206,[[["self"],["h"]]]],[11,"hash","","",207,[[["self"],["h"]]]],[11,"hash","","",208,[[["self"],["h"]]]],[11,"hash","","",209,[[["self"],["h"]]]],[11,"hash","","",210,[[["self"],["h"]]]],[11,"hash","","",211,[[["self"],["h"]]]],[11,"hash","","",212,[[["self"],["h"]]]],[11,"hash","","",213,[[["self"],["h"]]]],[11,"hash","","",214,[[["self"],["h"]]]],[11,"hash","","",215,[[["self"],["h"]]]],[11,"hash","","",216,[[["self"],["h"]]]],[11,"hash","","",217,[[["self"],["h"]]]],[11,"hash","","",218,[[["self"],["h"]]]],[11,"hash","","",219,[[["self"],["h"]]]],[11,"hash","","",220,[[["self"],["h"]]]],[11,"hash","","",221,[[["self"],["h"]]]],[11,"hash","","",222,[[["self"],["h"]]]],[11,"hash","","",223,[[["self"],["h"]]]],[11,"hash","","",224,[[["self"],["h"]]]],[11,"hash","","",225,[[["self"],["h"]]]],[11,"hash","","",226,[[["self"],["h"]]]],[11,"hash","","",227,[[["self"],["h"]]]],[11,"hash","","",228,[[["self"],["h"]]]],[11,"hash","","",229,[[["self"],["h"]]]],[11,"hash","","",230,[[["self"],["h"]]]],[11,"hash","","",231,[[["self"],["h"]]]],[11,"hash","","",232,[[["self"],["h"]]]],[11,"hash","","",233,[[["self"],["h"]]]],[11,"hash","","",234,[[["self"],["h"]]]],[11,"hash","","",235,[[["self"],["h"]]]],[11,"hash","","",236,[[["self"],["h"]]]],[11,"hash","","",237,[[["self"],["h"]]]],[11,"hash","","",238,[[["self"],["h"]]]],[11,"hash","","",239,[[["self"],["h"]]]],[11,"hash","","",240,[[["self"],["h"]]]],[11,"hash","","",241,[[["self"],["h"]]]],[11,"hash","","",242,[[["self"],["h"]]]],[11,"hash","","",243,[[["self"],["h"]]]],[11,"hash","","",244,[[["self"],["h"]]]],[11,"hash","","",245,[[["self"],["h"]]]],[11,"hash","","",246,[[["self"],["h"]]]],[11,"hash","","",247,[[["self"],["h"]]]],[11,"hash","","",248,[[["self"],["h"]]]],[11,"hash","","",249,[[["self"],["h"]]]],[11,"hash","","",250,[[["self"],["h"]]]],[11,"hash","","",251,[[["self"],["h"]]]],[11,"hash","","",252,[[["self"],["h"]]]],[11,"hash","","",253,[[["self"],["h"]]]],[11,"hash","","",254,[[["self"],["h"]]]],[11,"hash","","",255,[[["self"],["h"]]]],[11,"hash","","",256,[[["self"],["h"]]]],[11,"hash","","",257,[[["self"],["h"]]]],[11,"hash","","",258,[[["self"],["h"]]]],[11,"hash","","",259,[[["self"],["h"]]]],[11,"hash","","",260,[[["self"],["h"]]]],[11,"hash","","",261,[[["self"],["h"]]]],[11,"hash","","",262,[[["self"],["h"]]]],[11,"hash","","",263,[[["self"],["h"]]]],[11,"hash","","",264,[[["self"],["h"]]]],[11,"hash","","",265,[[["self"],["h"]]]],[11,"hash","","",266,[[["self"],["h"]]]],[11,"hash","","",267,[[["self"],["h"]]]],[11,"hash","","",268,[[["self"],["h"]]]],[11,"hash","","",269,[[["self"],["h"]]]],[11,"hash","","",270,[[["self"],["h"]]]],[11,"hash","","",271,[[["self"],["h"]]]],[11,"hash","","",272,[[["self"],["h"]]]],[11,"hash","","",273,[[["self"],["h"]]]],[11,"hash","","",274,[[["self"],["h"]]]],[11,"hash","","",275,[[["self"],["h"]]]],[11,"hash","","",276,[[["self"],["h"]]]],[11,"hash","","",277,[[["self"],["h"]]]],[11,"hash","","",278,[[["self"],["h"]]]],[11,"hash","","",279,[[["self"],["h"]]]],[11,"hash","","",280,[[["self"],["h"]]]],[11,"hash","","",281,[[["self"],["h"]]]],[11,"hash","","",282,[[["self"],["h"]]]],[11,"hash","","",283,[[["self"],["h"]]]],[11,"hash","","",284,[[["self"],["h"]]]],[11,"hash","","",285,[[["self"],["h"]]]],[11,"hash","","",286,[[["self"],["h"]]]],[11,"hash","","",287,[[["self"],["h"]]]],[11,"hash","","",288,[[["self"],["h"]]]],[11,"hash","","",289,[[["self"],["h"]]]],[11,"hash","","",290,[[["self"],["h"]]]],[11,"hash","","",291,[[["self"],["h"]]]],[11,"hash","","",292,[[["self"],["h"]]]],[11,"hash","","",293,[[["self"],["h"]]]],[11,"hash","","",294,[[["self"],["h"]]]],[11,"hash","syn","",0,[[["self"],["h"]]]],[11,"hash","","",158,N],[11,"hash","","",159,N],[11,"hash","","",1,N],[11,"hash","","",2,N],[11,"hash","","",160,N],[11,"hash","","",6,N],[11,"hash","","",161,N],[11,"hash","","",4,N],[11,"hash","","",5,N],[11,"hash","","",3,N],[11,"hash","","",162,N],[11,"hash","","",8,N],[11,"hash","","",7,N],[11,"hash","","",9,N],[11,"hash","","",163,N],[11,"hash","","",16,N],[11,"hash","","",26,N],[11,"hash","","",10,N],[11,"hash","","",18,N],[11,"hash","","",33,N],[11,"hash","","",43,N],[11,"hash","","",14,N],[11,"hash","","",45,N],[11,"hash","","",29,N],[11,"hash","","",19,N],[11,"hash","","",44,N],[11,"hash","","",28,N],[11,"hash","","",25,N],[11,"hash","","",48,N],[11,"hash","","",23,N],[11,"hash","","",30,N],[11,"hash","","",32,N],[11,"hash","","",20,N],[11,"hash","","",46,N],[11,"hash","","",15,N],[11,"hash","","",11,N],[11,"hash","","",12,N],[11,"hash","","",22,N],[11,"hash","","",27,N],[11,"hash","","",36,N],[11,"hash","","",35,N],[11,"hash","","",37,N],[11,"hash","","",17,N],[11,"hash","","",21,N],[11,"hash","","",39,N],[11,"hash","","",31,N],[11,"hash","","",40,N],[11,"hash","","",38,N],[11,"hash","","",34,N],[11,"hash","","",24,N],[11,"hash","","",41,N],[11,"hash","","",13,N],[11,"hash","","",42,N],[11,"hash","","",49,N],[11,"hash","","",47,[[["self"],["h"]]]],[11,"hash","","",164,N],[11,"hash","","",50,[[["self"],["h"]]]],[11,"hash","","",57,N],[11,"hash","","",165,N],[11,"hash","","",54,N],[11,"hash","","",55,N],[11,"hash","","",52,N],[11,"hash","","",168,N],[11,"hash","","",56,N],[11,"hash","","",166,N],[11,"hash","","",70,N],[11,"hash","","",59,N],[11,"hash","","",66,N],[11,"hash","","",68,N],[11,"hash","","",62,N],[11,"hash","","",67,N],[11,"hash","","",58,N],[11,"hash","","",64,N],[11,"hash","","",60,N],[11,"hash","","",63,N],[11,"hash","","",65,N],[11,"hash","","",61,N],[11,"hash","","",69,[[["self"],["h"]]]],[11,"hash","","",51,N],[11,"hash","","",167,N],[11,"hash","","",53,N],[11,"hash","","",73,N],[11,"hash","","",169,N],[11,"hash","","",79,N],[11,"hash","","",74,N],[11,"hash","","",72,N],[11,"hash","","",316,N],[11,"hash","","",295,N],[11,"hash","","",317,N],[11,"hash","","",71,N],[11,"hash","","",171,N],[11,"hash","","",78,N],[11,"hash","","",170,N],[11,"hash","","",80,N],[11,"hash","","",172,N],[11,"hash","","",77,N],[11,"hash","","",76,N],[11,"hash","","",75,N],[11,"hash","","",176,N],[11,"hash","","",99,N],[11,"hash","","",112,N],[11,"hash","","",106,N],[11,"hash","","",96,N],[11,"hash","","",100,N],[11,"hash","","",105,N],[11,"hash","","",101,N],[11,"hash","","",110,N],[11,"hash","","",98,N],[11,"hash","","",107,N],[11,"hash","","",97,N],[11,"hash","","",111,N],[11,"hash","","",108,N],[11,"hash","","",109,N],[11,"hash","","",102,N],[11,"hash","","",103,N],[11,"hash","","",104,[[["self"],["h"]]]],[11,"hash","","",113,[[["self"],["h"]]]],[11,"hash","","",178,N],[11,"hash","","",123,N],[11,"hash","","",122,N],[11,"hash","","",124,N],[11,"hash","","",120,N],[11,"hash","","",121,N],[11,"hash","","",174,N],[11,"hash","","",85,N],[11,"hash","","",87,N],[11,"hash","","",88,N],[11,"hash","","",86,N],[11,"hash","","",89,[[["self"],["h"]]]],[11,"hash","","",177,N],[11,"hash","","",115,N],[11,"hash","","",117,N],[11,"hash","","",118,N],[11,"hash","","",116,N],[11,"hash","","",119,[[["self"],["h"]]]],[11,"hash","","",175,N],[11,"hash","","",90,N],[11,"hash","","",93,N],[11,"hash","","",94,N],[11,"hash","","",91,N],[11,"hash","","",92,N],[11,"hash","","",95,[[["self"],["h"]]]],[11,"hash","","",114,N],[11,"hash","","",84,N],[11,"hash","","",173,N],[11,"hash","","",83,N],[11,"hash","","",82,N],[11,"hash","","",81,N],[11,"hash","","",125,N],[11,"hash","","",126,[[["self"],["h"]]]],[11,"hash","","",181,N],[11,"hash","","",296,[[["self"],["h"]]]],[11,"hash","","",297,[[["self"],["h"]]]],[11,"hash","","",298,[[["self"],["h"]]]],[11,"hash","","",299,[[["self"],["h"]]]],[11,"hash","","",300,[[["self"],["h"]]]],[11,"hash","","",301,[[["self"],["h"]]]],[11,"hash","","",127,[[["self"],["h"]]]],[11,"hash","","",128,[[["self"],["h"]]]],[11,"hash","","",182,N],[11,"hash","","",180,N],[11,"hash","","",179,N],[11,"hash","","",183,N],[11,"hash","","",129,[[["self"],["h"]]]],[11,"hash","","",133,N],[11,"hash","","",184,N],[11,"hash","","",131,N],[11,"hash","","",130,N],[11,"hash","","",132,N],[11,"hash","","",185,N],[11,"hash","","",186,N],[11,"hash","","",189,N],[11,"hash","","",147,N],[11,"hash","","",136,N],[11,"hash","","",145,N],[11,"hash","","",146,N],[11,"hash","","",137,N],[11,"hash","","",142,N],[11,"hash","","",149,N],[11,"hash","","",144,N],[11,"hash","","",148,N],[11,"hash","","",139,N],[11,"hash","","",143,N],[11,"hash","","",138,N],[11,"hash","","",140,N],[11,"hash","","",141,N],[11,"hash","","",150,[[["self"],["h"]]]],[11,"hash","","",134,N],[11,"hash","","",135,N],[11,"hash","","",187,N],[11,"hash","","",188,N],[11,"hash","","",155,N],[11,"hash","","",156,N],[11,"hash","","",191,N],[11,"hash","","",190,N],[11,"hash","","",151,N],[11,"hash","","",152,N],[11,"hash","","",153,N],[11,"hash","","",154,N],[11,"hash","","",157,N],[11,"hash","syn::punctuated","",306,N],[11,"from_iter","","",306,[[["i"]],["self"]]],[11,"from_iter","","",306,[[["i"]],["self"]]],[11,"description","syn","",314,[[["self"]],["str"]]],[11,"to_tokens","syn::token","",192,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",193,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",194,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",195,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",196,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",197,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",198,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",199,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",200,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",201,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",202,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",203,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",204,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",205,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",206,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",207,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",208,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",209,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",210,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",211,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",212,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",213,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",214,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",215,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",216,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",217,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",218,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",219,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",220,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",221,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",222,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",223,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",224,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",225,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",226,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",227,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",228,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",229,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",230,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",231,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",232,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",233,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",234,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",235,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",236,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",237,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",238,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",239,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",240,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",241,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",242,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",243,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",244,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",245,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",246,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",247,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",248,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",249,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",250,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",251,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",252,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",253,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",254,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",255,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",256,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",257,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",258,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",259,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",260,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",261,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",262,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",263,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",264,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",265,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",266,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",267,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",268,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",269,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",270,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",271,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",272,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",273,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",274,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",275,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",276,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",277,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",278,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",279,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",280,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",281,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",282,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",283,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",284,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",285,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",286,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",287,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",288,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",289,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",290,[[["self"],["tokenstream"]]]],[11,"to_tokens","syn","",159,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",160,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",0,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",1,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",2,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",161,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",162,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",6,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",4,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",5,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",3,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",8,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",7,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",9,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",163,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",166,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",16,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",26,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",10,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",18,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",33,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",57,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",165,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",43,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",14,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",45,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",29,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",19,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",44,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",28,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",25,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",48,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",23,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",30,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",32,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",13,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",42,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",49,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",20,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",46,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",15,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",11,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",12,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",22,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",164,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",50,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",27,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",36,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",35,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",37,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",17,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",21,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",39,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",31,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",40,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",38,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",24,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",34,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",41,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",47,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",55,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",54,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",51,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",70,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",59,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",66,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",68,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",62,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",67,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",58,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",64,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",60,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",63,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",65,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",61,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",69,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",53,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",52,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",168,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",56,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",169,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",171,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",172,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",73,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",316,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",295,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",317,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",71,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",74,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",79,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",78,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",170,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",72,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",80,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",77,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",76,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",75,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",176,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",178,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",174,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",177,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",175,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",173,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",99,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",112,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",106,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",96,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",100,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",105,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",101,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",110,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",98,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",97,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",107,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",111,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",108,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",109,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",102,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",103,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",104,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",113,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",123,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",122,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",124,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",120,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",121,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",115,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",117,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",118,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",116,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",119,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",90,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",93,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",94,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",91,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",92,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",95,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",85,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",87,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",88,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",86,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",89,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",114,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",83,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",82,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",81,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",125,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",126,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",181,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",296,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",297,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",298,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",299,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",300,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",301,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",127,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",128,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",129,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",133,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",185,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",186,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",189,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",147,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",136,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",145,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",146,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",137,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",142,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",149,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",144,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",148,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",139,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",138,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",143,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",140,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",141,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",150,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",188,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",135,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",187,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",134,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",155,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",156,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",191,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",190,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",151,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",152,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",153,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",154,[[["self"],["tokenstream"]]]],[11,"to_tokens","syn::punctuated","",306,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",305,[[["self"],["tokenstream"]]]],[11,"new","syn","Creates a new `Ident` with the given `string` as well as…",315,[[["str"],["span"]],["ident"]]],[11,"span","","Returns the span of this `Ident`.",315,[[["self"]],["span"]]],[11,"set_span","","Configures the span of this `Ident`, possibly changing its…",315,N],[11,"visit_abi","syn::visit","",308,[[["self"],["abi"]]]],[11,"visit_angle_bracketed_generic_arguments","","",308,[[["self"],["anglebracketedgenericarguments"]]]],[11,"visit_arg_captured","","",308,[[["self"],["argcaptured"]]]],[11,"visit_arg_self","","",308,[[["self"],["argself"]]]],[11,"visit_arg_self_ref","","",308,[[["self"],["argselfref"]]]],[11,"visit_arm","","",308,[[["self"],["arm"]]]],[11,"visit_attr_style","","",308,[[["self"],["attrstyle"]]]],[11,"visit_attribute","","",308,[[["self"],["attribute"]]]],[11,"visit_bare_fn_arg","","",308,[[["self"],["barefnarg"]]]],[11,"visit_bare_fn_arg_name","","",308,[[["self"],["barefnargname"]]]],[11,"visit_bin_op","","",308,[[["self"],["binop"]]]],[11,"visit_binding","","",308,[[["self"],["binding"]]]],[11,"visit_block","","",308,[[["self"],["block"]]]],[11,"visit_bound_lifetimes","","",308,[[["self"],["boundlifetimes"]]]],[11,"visit_const_param","","",308,[[["self"],["constparam"]]]],[11,"visit_constraint","","",308,[[["self"],["constraint"]]]],[11,"visit_data","","",308,[[["self"],["data"]]]],[11,"visit_data_enum","","",308,[[["self"],["dataenum"]]]],[11,"visit_data_struct","","",308,[[["self"],["datastruct"]]]],[11,"visit_data_union","","",308,[[["self"],["dataunion"]]]],[11,"visit_derive_input","","",308,[[["self"],["deriveinput"]]]],[11,"visit_expr","","",308,[[["self"],["expr"]]]],[11,"visit_expr_array","","",308,[[["self"],["exprarray"]]]],[11,"visit_expr_assign","","",308,[[["self"],["exprassign"]]]],[11,"visit_expr_assign_op","","",308,[[["self"],["exprassignop"]]]],[11,"visit_expr_async","","",308,[[["self"],["exprasync"]]]],[11,"visit_expr_binary","","",308,[[["self"],["exprbinary"]]]],[11,"visit_expr_block","","",308,[[["self"],["exprblock"]]]],[11,"visit_expr_box","","",308,[[["self"],["exprbox"]]]],[11,"visit_expr_break","","",308,[[["self"],["exprbreak"]]]],[11,"visit_expr_call","","",308,[[["self"],["exprcall"]]]],[11,"visit_expr_cast","","",308,[[["self"],["exprcast"]]]],[11,"visit_expr_closure","","",308,[[["self"],["exprclosure"]]]],[11,"visit_expr_continue","","",308,[[["self"],["exprcontinue"]]]],[11,"visit_expr_field","","",308,[[["self"],["exprfield"]]]],[11,"visit_expr_for_loop","","",308,[[["self"],["exprforloop"]]]],[11,"visit_expr_group","","",308,[[["self"],["exprgroup"]]]],[11,"visit_expr_if","","",308,[[["self"],["exprif"]]]],[11,"visit_expr_in_place","","",308,[[["self"],["exprinplace"]]]],[11,"visit_expr_index","","",308,[[["self"],["exprindex"]]]],[11,"visit_expr_let","","",308,[[["self"],["exprlet"]]]],[11,"visit_expr_lit","","",308,[[["self"],["exprlit"]]]],[11,"visit_expr_loop","","",308,[[["self"],["exprloop"]]]],[11,"visit_expr_macro","","",308,[[["self"],["exprmacro"]]]],[11,"visit_expr_match","","",308,[[["self"],["exprmatch"]]]],[11,"visit_expr_method_call","","",308,[[["self"],["exprmethodcall"]]]],[11,"visit_expr_paren","","",308,[[["self"],["exprparen"]]]],[11,"visit_expr_path","","",308,[[["self"],["exprpath"]]]],[11,"visit_expr_range","","",308,[[["self"],["exprrange"]]]],[11,"visit_expr_reference","","",308,[[["self"],["exprreference"]]]],[11,"visit_expr_repeat","","",308,[[["self"],["exprrepeat"]]]],[11,"visit_expr_return","","",308,[[["self"],["exprreturn"]]]],[11,"visit_expr_struct","","",308,[[["self"],["exprstruct"]]]],[11,"visit_expr_try","","",308,[[["self"],["exprtry"]]]],[11,"visit_expr_try_block","","",308,[[["self"],["exprtryblock"]]]],[11,"visit_expr_tuple","","",308,[[["self"],["exprtuple"]]]],[11,"visit_expr_type","","",308,[[["self"],["exprtype"]]]],[11,"visit_expr_unary","","",308,[[["self"],["exprunary"]]]],[11,"visit_expr_unsafe","","",308,[[["self"],["exprunsafe"]]]],[11,"visit_expr_verbatim","","",308,[[["self"],["exprverbatim"]]]],[11,"visit_expr_while","","",308,[[["self"],["exprwhile"]]]],[11,"visit_expr_yield","","",308,[[["self"],["expryield"]]]],[11,"visit_field","","",308,[[["self"],["field"]]]],[11,"visit_field_pat","","",308,[[["self"],["fieldpat"]]]],[11,"visit_field_value","","",308,[[["self"],["fieldvalue"]]]],[11,"visit_fields","","",308,[[["self"],["fields"]]]],[11,"visit_fields_named","","",308,[[["self"],["fieldsnamed"]]]],[11,"visit_fields_unnamed","","",308,[[["self"],["fieldsunnamed"]]]],[11,"visit_file","","",308,[[["self"],["file"]]]],[11,"visit_fn_arg","","",308,[[["self"],["fnarg"]]]],[11,"visit_fn_decl","","",308,[[["self"],["fndecl"]]]],[11,"visit_foreign_item","","",308,[[["self"],["foreignitem"]]]],[11,"visit_foreign_item_fn","","",308,[[["self"],["foreignitemfn"]]]],[11,"visit_foreign_item_macro","","",308,[[["self"],["foreignitemmacro"]]]],[11,"visit_foreign_item_static","","",308,[[["self"],["foreignitemstatic"]]]],[11,"visit_foreign_item_type","","",308,[[["self"],["foreignitemtype"]]]],[11,"visit_foreign_item_verbatim","","",308,[[["self"],["foreignitemverbatim"]]]],[11,"visit_generic_argument","","",308,[[["self"],["genericargument"]]]],[11,"visit_generic_method_argument","","",308,[[["self"],["genericmethodargument"]]]],[11,"visit_generic_param","","",308,[[["self"],["genericparam"]]]],[11,"visit_generics","","",308,[[["self"],["generics"]]]],[11,"visit_ident","","",308,[[["self"],["ident"]]]],[11,"visit_impl_item","","",308,[[["self"],["implitem"]]]],[11,"visit_impl_item_const","","",308,[[["self"],["implitemconst"]]]],[11,"visit_impl_item_existential","","",308,[[["self"],["implitemexistential"]]]],[11,"visit_impl_item_macro","","",308,[[["self"],["implitemmacro"]]]],[11,"visit_impl_item_method","","",308,[[["self"],["implitemmethod"]]]],[11,"visit_impl_item_type","","",308,[[["self"],["implitemtype"]]]],[11,"visit_impl_item_verbatim","","",308,[[["self"],["implitemverbatim"]]]],[11,"visit_index","","",308,[[["self"],["index"]]]],[11,"visit_item","","",308,[[["self"],["item"]]]],[11,"visit_item_const","","",308,[[["self"],["itemconst"]]]],[11,"visit_item_enum","","",308,[[["self"],["itemenum"]]]],[11,"visit_item_existential","","",308,[[["self"],["itemexistential"]]]],[11,"visit_item_extern_crate","","",308,[[["self"],["itemexterncrate"]]]],[11,"visit_item_fn","","",308,[[["self"],["itemfn"]]]],[11,"visit_item_foreign_mod","","",308,[[["self"],["itemforeignmod"]]]],[11,"visit_item_impl","","",308,[[["self"],["itemimpl"]]]],[11,"visit_item_macro","","",308,[[["self"],["itemmacro"]]]],[11,"visit_item_macro2","","",308,[[["self"],["itemmacro2"]]]],[11,"visit_item_mod","","",308,[[["self"],["itemmod"]]]],[11,"visit_item_static","","",308,[[["self"],["itemstatic"]]]],[11,"visit_item_struct","","",308,[[["self"],["itemstruct"]]]],[11,"visit_item_trait","","",308,[[["self"],["itemtrait"]]]],[11,"visit_item_trait_alias","","",308,[[["self"],["itemtraitalias"]]]],[11,"visit_item_type","","",308,[[["self"],["itemtype"]]]],[11,"visit_item_union","","",308,[[["self"],["itemunion"]]]],[11,"visit_item_use","","",308,[[["self"],["itemuse"]]]],[11,"visit_item_verbatim","","",308,[[["self"],["itemverbatim"]]]],[11,"visit_label","","",308,[[["self"],["label"]]]],[11,"visit_lifetime","","",308,[[["self"],["lifetime"]]]],[11,"visit_lifetime_def","","",308,[[["self"],["lifetimedef"]]]],[11,"visit_lit","","",308,[[["self"],["lit"]]]],[11,"visit_lit_bool","","",308,[[["self"],["litbool"]]]],[11,"visit_lit_byte","","",308,[[["self"],["litbyte"]]]],[11,"visit_lit_byte_str","","",308,[[["self"],["litbytestr"]]]],[11,"visit_lit_char","","",308,[[["self"],["litchar"]]]],[11,"visit_lit_float","","",308,[[["self"],["litfloat"]]]],[11,"visit_lit_int","","",308,[[["self"],["litint"]]]],[11,"visit_lit_str","","",308,[[["self"],["litstr"]]]],[11,"visit_lit_verbatim","","",308,[[["self"],["litverbatim"]]]],[11,"visit_local","","",308,[[["self"],["local"]]]],[11,"visit_macro","","",308,[[["self"],["macro"]]]],[11,"visit_macro_delimiter","","",308,[[["self"],["macrodelimiter"]]]],[11,"visit_member","","",308,[[["self"],["member"]]]],[11,"visit_meta","","",308,[[["self"],["meta"]]]],[11,"visit_meta_list","","",308,[[["self"],["metalist"]]]],[11,"visit_meta_name_value","","",308,[[["self"],["metanamevalue"]]]],[11,"visit_method_sig","","",308,[[["self"],["methodsig"]]]],[11,"visit_method_turbofish","","",308,[[["self"],["methodturbofish"]]]],[11,"visit_nested_meta","","",308,[[["self"],["nestedmeta"]]]],[11,"visit_parenthesized_generic_arguments","","",308,[[["self"],["parenthesizedgenericarguments"]]]],[11,"visit_pat","","",308,[[["self"],["pat"]]]],[11,"visit_pat_box","","",308,[[["self"],["patbox"]]]],[11,"visit_pat_ident","","",308,[[["self"],["patident"]]]],[11,"visit_pat_lit","","",308,[[["self"],["patlit"]]]],[11,"visit_pat_macro","","",308,[[["self"],["patmacro"]]]],[11,"visit_pat_path","","",308,[[["self"],["patpath"]]]],[11,"visit_pat_range","","",308,[[["self"],["patrange"]]]],[11,"visit_pat_ref","","",308,[[["self"],["patref"]]]],[11,"visit_pat_slice","","",308,[[["self"],["patslice"]]]],[11,"visit_pat_struct","","",308,[[["self"],["patstruct"]]]],[11,"visit_pat_tuple","","",308,[[["self"],["pattuple"]]]],[11,"visit_pat_tuple_struct","","",308,[[["self"],["pattuplestruct"]]]],[11,"visit_pat_verbatim","","",308,[[["self"],["patverbatim"]]]],[11,"visit_pat_wild","","",308,[[["self"],["patwild"]]]],[11,"visit_path","","",308,[[["self"],["path"]]]],[11,"visit_path_arguments","","",308,[[["self"],["patharguments"]]]],[11,"visit_path_segment","","",308,[[["self"],["pathsegment"]]]],[11,"visit_predicate_eq","","",308,[[["self"],["predicateeq"]]]],[11,"visit_predicate_lifetime","","",308,[[["self"],["predicatelifetime"]]]],[11,"visit_predicate_type","","",308,[[["self"],["predicatetype"]]]],[11,"visit_qself","","",308,[[["self"],["qself"]]]],[11,"visit_range_limits","","",308,[[["self"],["rangelimits"]]]],[11,"visit_return_type","","",308,[[["self"],["returntype"]]]],[11,"visit_span","","",308,[[["self"],["span"]]]],[11,"visit_stmt","","",308,[[["self"],["stmt"]]]],[11,"visit_trait_bound","","",308,[[["self"],["traitbound"]]]],[11,"visit_trait_bound_modifier","","",308,[[["self"],["traitboundmodifier"]]]],[11,"visit_trait_item","","",308,[[["self"],["traititem"]]]],[11,"visit_trait_item_const","","",308,[[["self"],["traititemconst"]]]],[11,"visit_trait_item_macro","","",308,[[["self"],["traititemmacro"]]]],[11,"visit_trait_item_method","","",308,[[["self"],["traititemmethod"]]]],[11,"visit_trait_item_type","","",308,[[["self"],["traititemtype"]]]],[11,"visit_trait_item_verbatim","","",308,[[["self"],["traititemverbatim"]]]],[11,"visit_type","","",308,[[["self"],["type"]]]],[11,"visit_type_array","","",308,[[["self"],["typearray"]]]],[11,"visit_type_bare_fn","","",308,[[["self"],["typebarefn"]]]],[11,"visit_type_group","","",308,[[["self"],["typegroup"]]]],[11,"visit_type_impl_trait","","",308,[[["self"],["typeimpltrait"]]]],[11,"visit_type_infer","","",308,[[["self"],["typeinfer"]]]],[11,"visit_type_macro","","",308,[[["self"],["typemacro"]]]],[11,"visit_type_never","","",308,[[["self"],["typenever"]]]],[11,"visit_type_param","","",308,[[["self"],["typeparam"]]]],[11,"visit_type_param_bound","","",308,[[["self"],["typeparambound"]]]],[11,"visit_type_paren","","",308,[[["self"],["typeparen"]]]],[11,"visit_type_path","","",308,[[["self"],["typepath"]]]],[11,"visit_type_ptr","","",308,[[["self"],["typeptr"]]]],[11,"visit_type_reference","","",308,[[["self"],["typereference"]]]],[11,"visit_type_slice","","",308,[[["self"],["typeslice"]]]],[11,"visit_type_trait_object","","",308,[[["self"],["typetraitobject"]]]],[11,"visit_type_tuple","","",308,[[["self"],["typetuple"]]]],[11,"visit_type_verbatim","","",308,[[["self"],["typeverbatim"]]]],[11,"visit_un_op","","",308,[[["self"],["unop"]]]],[11,"visit_use_glob","","",308,[[["self"],["useglob"]]]],[11,"visit_use_group","","",308,[[["self"],["usegroup"]]]],[11,"visit_use_name","","",308,[[["self"],["usename"]]]],[11,"visit_use_path","","",308,[[["self"],["usepath"]]]],[11,"visit_use_rename","","",308,[[["self"],["userename"]]]],[11,"visit_use_tree","","",308,[[["self"],["usetree"]]]],[11,"visit_variant","","",308,[[["self"],["variant"]]]],[11,"visit_vis_crate","","",308,[[["self"],["viscrate"]]]],[11,"visit_vis_public","","",308,[[["self"],["vispublic"]]]],[11,"visit_vis_restricted","","",308,[[["self"],["visrestricted"]]]],[11,"visit_visibility","","",308,[[["self"],["visibility"]]]],[11,"visit_where_clause","","",308,[[["self"],["whereclause"]]]],[11,"visit_where_predicate","","",308,[[["self"],["wherepredicate"]]]],[11,"visit_abi_mut","syn::visit_mut","",309,[[["self"],["abi"]]]],[11,"visit_angle_bracketed_generic_arguments_mut","","",309,[[["self"],["anglebracketedgenericarguments"]]]],[11,"visit_arg_captured_mut","","",309,[[["self"],["argcaptured"]]]],[11,"visit_arg_self_mut","","",309,[[["self"],["argself"]]]],[11,"visit_arg_self_ref_mut","","",309,[[["self"],["argselfref"]]]],[11,"visit_arm_mut","","",309,[[["self"],["arm"]]]],[11,"visit_attr_style_mut","","",309,[[["self"],["attrstyle"]]]],[11,"visit_attribute_mut","","",309,[[["self"],["attribute"]]]],[11,"visit_bare_fn_arg_mut","","",309,[[["self"],["barefnarg"]]]],[11,"visit_bare_fn_arg_name_mut","","",309,[[["self"],["barefnargname"]]]],[11,"visit_bin_op_mut","","",309,[[["self"],["binop"]]]],[11,"visit_binding_mut","","",309,[[["self"],["binding"]]]],[11,"visit_block_mut","","",309,[[["self"],["block"]]]],[11,"visit_bound_lifetimes_mut","","",309,[[["self"],["boundlifetimes"]]]],[11,"visit_const_param_mut","","",309,[[["self"],["constparam"]]]],[11,"visit_constraint_mut","","",309,[[["self"],["constraint"]]]],[11,"visit_data_mut","","",309,[[["self"],["data"]]]],[11,"visit_data_enum_mut","","",309,[[["self"],["dataenum"]]]],[11,"visit_data_struct_mut","","",309,[[["self"],["datastruct"]]]],[11,"visit_data_union_mut","","",309,[[["self"],["dataunion"]]]],[11,"visit_derive_input_mut","","",309,[[["self"],["deriveinput"]]]],[11,"visit_expr_mut","","",309,[[["self"],["expr"]]]],[11,"visit_expr_array_mut","","",309,[[["self"],["exprarray"]]]],[11,"visit_expr_assign_mut","","",309,[[["self"],["exprassign"]]]],[11,"visit_expr_assign_op_mut","","",309,[[["self"],["exprassignop"]]]],[11,"visit_expr_async_mut","","",309,[[["self"],["exprasync"]]]],[11,"visit_expr_binary_mut","","",309,[[["self"],["exprbinary"]]]],[11,"visit_expr_block_mut","","",309,[[["self"],["exprblock"]]]],[11,"visit_expr_box_mut","","",309,[[["self"],["exprbox"]]]],[11,"visit_expr_break_mut","","",309,[[["self"],["exprbreak"]]]],[11,"visit_expr_call_mut","","",309,[[["self"],["exprcall"]]]],[11,"visit_expr_cast_mut","","",309,[[["self"],["exprcast"]]]],[11,"visit_expr_closure_mut","","",309,[[["self"],["exprclosure"]]]],[11,"visit_expr_continue_mut","","",309,[[["self"],["exprcontinue"]]]],[11,"visit_expr_field_mut","","",309,[[["self"],["exprfield"]]]],[11,"visit_expr_for_loop_mut","","",309,[[["self"],["exprforloop"]]]],[11,"visit_expr_group_mut","","",309,[[["self"],["exprgroup"]]]],[11,"visit_expr_if_mut","","",309,[[["self"],["exprif"]]]],[11,"visit_expr_in_place_mut","","",309,[[["self"],["exprinplace"]]]],[11,"visit_expr_index_mut","","",309,[[["self"],["exprindex"]]]],[11,"visit_expr_let_mut","","",309,[[["self"],["exprlet"]]]],[11,"visit_expr_lit_mut","","",309,[[["self"],["exprlit"]]]],[11,"visit_expr_loop_mut","","",309,[[["self"],["exprloop"]]]],[11,"visit_expr_macro_mut","","",309,[[["self"],["exprmacro"]]]],[11,"visit_expr_match_mut","","",309,[[["self"],["exprmatch"]]]],[11,"visit_expr_method_call_mut","","",309,[[["self"],["exprmethodcall"]]]],[11,"visit_expr_paren_mut","","",309,[[["self"],["exprparen"]]]],[11,"visit_expr_path_mut","","",309,[[["self"],["exprpath"]]]],[11,"visit_expr_range_mut","","",309,[[["self"],["exprrange"]]]],[11,"visit_expr_reference_mut","","",309,[[["self"],["exprreference"]]]],[11,"visit_expr_repeat_mut","","",309,[[["self"],["exprrepeat"]]]],[11,"visit_expr_return_mut","","",309,[[["self"],["exprreturn"]]]],[11,"visit_expr_struct_mut","","",309,[[["self"],["exprstruct"]]]],[11,"visit_expr_try_mut","","",309,[[["self"],["exprtry"]]]],[11,"visit_expr_try_block_mut","","",309,[[["self"],["exprtryblock"]]]],[11,"visit_expr_tuple_mut","","",309,[[["self"],["exprtuple"]]]],[11,"visit_expr_type_mut","","",309,[[["self"],["exprtype"]]]],[11,"visit_expr_unary_mut","","",309,[[["self"],["exprunary"]]]],[11,"visit_expr_unsafe_mut","","",309,[[["self"],["exprunsafe"]]]],[11,"visit_expr_verbatim_mut","","",309,[[["self"],["exprverbatim"]]]],[11,"visit_expr_while_mut","","",309,[[["self"],["exprwhile"]]]],[11,"visit_expr_yield_mut","","",309,[[["self"],["expryield"]]]],[11,"visit_field_mut","","",309,[[["self"],["field"]]]],[11,"visit_field_pat_mut","","",309,[[["self"],["fieldpat"]]]],[11,"visit_field_value_mut","","",309,[[["self"],["fieldvalue"]]]],[11,"visit_fields_mut","","",309,[[["self"],["fields"]]]],[11,"visit_fields_named_mut","","",309,[[["self"],["fieldsnamed"]]]],[11,"visit_fields_unnamed_mut","","",309,[[["self"],["fieldsunnamed"]]]],[11,"visit_file_mut","","",309,[[["self"],["file"]]]],[11,"visit_fn_arg_mut","","",309,[[["self"],["fnarg"]]]],[11,"visit_fn_decl_mut","","",309,[[["self"],["fndecl"]]]],[11,"visit_foreign_item_mut","","",309,[[["self"],["foreignitem"]]]],[11,"visit_foreign_item_fn_mut","","",309,[[["self"],["foreignitemfn"]]]],[11,"visit_foreign_item_macro_mut","","",309,[[["self"],["foreignitemmacro"]]]],[11,"visit_foreign_item_static_mut","","",309,[[["self"],["foreignitemstatic"]]]],[11,"visit_foreign_item_type_mut","","",309,[[["self"],["foreignitemtype"]]]],[11,"visit_foreign_item_verbatim_mut","","",309,[[["self"],["foreignitemverbatim"]]]],[11,"visit_generic_argument_mut","","",309,[[["self"],["genericargument"]]]],[11,"visit_generic_method_argument_mut","","",309,[[["self"],["genericmethodargument"]]]],[11,"visit_generic_param_mut","","",309,[[["self"],["genericparam"]]]],[11,"visit_generics_mut","","",309,[[["self"],["generics"]]]],[11,"visit_ident_mut","","",309,[[["self"],["ident"]]]],[11,"visit_impl_item_mut","","",309,[[["self"],["implitem"]]]],[11,"visit_impl_item_const_mut","","",309,[[["self"],["implitemconst"]]]],[11,"visit_impl_item_existential_mut","","",309,[[["self"],["implitemexistential"]]]],[11,"visit_impl_item_macro_mut","","",309,[[["self"],["implitemmacro"]]]],[11,"visit_impl_item_method_mut","","",309,[[["self"],["implitemmethod"]]]],[11,"visit_impl_item_type_mut","","",309,[[["self"],["implitemtype"]]]],[11,"visit_impl_item_verbatim_mut","","",309,[[["self"],["implitemverbatim"]]]],[11,"visit_index_mut","","",309,[[["self"],["index"]]]],[11,"visit_item_mut","","",309,[[["self"],["item"]]]],[11,"visit_item_const_mut","","",309,[[["self"],["itemconst"]]]],[11,"visit_item_enum_mut","","",309,[[["self"],["itemenum"]]]],[11,"visit_item_existential_mut","","",309,[[["self"],["itemexistential"]]]],[11,"visit_item_extern_crate_mut","","",309,[[["self"],["itemexterncrate"]]]],[11,"visit_item_fn_mut","","",309,[[["self"],["itemfn"]]]],[11,"visit_item_foreign_mod_mut","","",309,[[["self"],["itemforeignmod"]]]],[11,"visit_item_impl_mut","","",309,[[["self"],["itemimpl"]]]],[11,"visit_item_macro_mut","","",309,[[["self"],["itemmacro"]]]],[11,"visit_item_macro2_mut","","",309,[[["self"],["itemmacro2"]]]],[11,"visit_item_mod_mut","","",309,[[["self"],["itemmod"]]]],[11,"visit_item_static_mut","","",309,[[["self"],["itemstatic"]]]],[11,"visit_item_struct_mut","","",309,[[["self"],["itemstruct"]]]],[11,"visit_item_trait_mut","","",309,[[["self"],["itemtrait"]]]],[11,"visit_item_trait_alias_mut","","",309,[[["self"],["itemtraitalias"]]]],[11,"visit_item_type_mut","","",309,[[["self"],["itemtype"]]]],[11,"visit_item_union_mut","","",309,[[["self"],["itemunion"]]]],[11,"visit_item_use_mut","","",309,[[["self"],["itemuse"]]]],[11,"visit_item_verbatim_mut","","",309,[[["self"],["itemverbatim"]]]],[11,"visit_label_mut","","",309,[[["self"],["label"]]]],[11,"visit_lifetime_mut","","",309,[[["self"],["lifetime"]]]],[11,"visit_lifetime_def_mut","","",309,[[["self"],["lifetimedef"]]]],[11,"visit_lit_mut","","",309,[[["self"],["lit"]]]],[11,"visit_lit_bool_mut","","",309,[[["self"],["litbool"]]]],[11,"visit_lit_byte_mut","","",309,[[["self"],["litbyte"]]]],[11,"visit_lit_byte_str_mut","","",309,[[["self"],["litbytestr"]]]],[11,"visit_lit_char_mut","","",309,[[["self"],["litchar"]]]],[11,"visit_lit_float_mut","","",309,[[["self"],["litfloat"]]]],[11,"visit_lit_int_mut","","",309,[[["self"],["litint"]]]],[11,"visit_lit_str_mut","","",309,[[["self"],["litstr"]]]],[11,"visit_lit_verbatim_mut","","",309,[[["self"],["litverbatim"]]]],[11,"visit_local_mut","","",309,[[["self"],["local"]]]],[11,"visit_macro_mut","","",309,[[["self"],["macro"]]]],[11,"visit_macro_delimiter_mut","","",309,[[["self"],["macrodelimiter"]]]],[11,"visit_member_mut","","",309,[[["self"],["member"]]]],[11,"visit_meta_mut","","",309,[[["self"],["meta"]]]],[11,"visit_meta_list_mut","","",309,[[["self"],["metalist"]]]],[11,"visit_meta_name_value_mut","","",309,[[["self"],["metanamevalue"]]]],[11,"visit_method_sig_mut","","",309,[[["self"],["methodsig"]]]],[11,"visit_method_turbofish_mut","","",309,[[["self"],["methodturbofish"]]]],[11,"visit_nested_meta_mut","","",309,[[["self"],["nestedmeta"]]]],[11,"visit_parenthesized_generic_arguments_mut","","",309,[[["self"],["parenthesizedgenericarguments"]]]],[11,"visit_pat_mut","","",309,[[["self"],["pat"]]]],[11,"visit_pat_box_mut","","",309,[[["self"],["patbox"]]]],[11,"visit_pat_ident_mut","","",309,[[["self"],["patident"]]]],[11,"visit_pat_lit_mut","","",309,[[["self"],["patlit"]]]],[11,"visit_pat_macro_mut","","",309,[[["self"],["patmacro"]]]],[11,"visit_pat_path_mut","","",309,[[["self"],["patpath"]]]],[11,"visit_pat_range_mut","","",309,[[["self"],["patrange"]]]],[11,"visit_pat_ref_mut","","",309,[[["self"],["patref"]]]],[11,"visit_pat_slice_mut","","",309,[[["self"],["patslice"]]]],[11,"visit_pat_struct_mut","","",309,[[["self"],["patstruct"]]]],[11,"visit_pat_tuple_mut","","",309,[[["self"],["pattuple"]]]],[11,"visit_pat_tuple_struct_mut","","",309,[[["self"],["pattuplestruct"]]]],[11,"visit_pat_verbatim_mut","","",309,[[["self"],["patverbatim"]]]],[11,"visit_pat_wild_mut","","",309,[[["self"],["patwild"]]]],[11,"visit_path_mut","","",309,[[["self"],["path"]]]],[11,"visit_path_arguments_mut","","",309,[[["self"],["patharguments"]]]],[11,"visit_path_segment_mut","","",309,[[["self"],["pathsegment"]]]],[11,"visit_predicate_eq_mut","","",309,[[["self"],["predicateeq"]]]],[11,"visit_predicate_lifetime_mut","","",309,[[["self"],["predicatelifetime"]]]],[11,"visit_predicate_type_mut","","",309,[[["self"],["predicatetype"]]]],[11,"visit_qself_mut","","",309,[[["self"],["qself"]]]],[11,"visit_range_limits_mut","","",309,[[["self"],["rangelimits"]]]],[11,"visit_return_type_mut","","",309,[[["self"],["returntype"]]]],[11,"visit_span_mut","","",309,[[["self"],["span"]]]],[11,"visit_stmt_mut","","",309,[[["self"],["stmt"]]]],[11,"visit_trait_bound_mut","","",309,[[["self"],["traitbound"]]]],[11,"visit_trait_bound_modifier_mut","","",309,[[["self"],["traitboundmodifier"]]]],[11,"visit_trait_item_mut","","",309,[[["self"],["traititem"]]]],[11,"visit_trait_item_const_mut","","",309,[[["self"],["traititemconst"]]]],[11,"visit_trait_item_macro_mut","","",309,[[["self"],["traititemmacro"]]]],[11,"visit_trait_item_method_mut","","",309,[[["self"],["traititemmethod"]]]],[11,"visit_trait_item_type_mut","","",309,[[["self"],["traititemtype"]]]],[11,"visit_trait_item_verbatim_mut","","",309,[[["self"],["traititemverbatim"]]]],[11,"visit_type_mut","","",309,[[["self"],["type"]]]],[11,"visit_type_array_mut","","",309,[[["self"],["typearray"]]]],[11,"visit_type_bare_fn_mut","","",309,[[["self"],["typebarefn"]]]],[11,"visit_type_group_mut","","",309,[[["self"],["typegroup"]]]],[11,"visit_type_impl_trait_mut","","",309,[[["self"],["typeimpltrait"]]]],[11,"visit_type_infer_mut","","",309,[[["self"],["typeinfer"]]]],[11,"visit_type_macro_mut","","",309,[[["self"],["typemacro"]]]],[11,"visit_type_never_mut","","",309,[[["self"],["typenever"]]]],[11,"visit_type_param_mut","","",309,[[["self"],["typeparam"]]]],[11,"visit_type_param_bound_mut","","",309,[[["self"],["typeparambound"]]]],[11,"visit_type_paren_mut","","",309,[[["self"],["typeparen"]]]],[11,"visit_type_path_mut","","",309,[[["self"],["typepath"]]]],[11,"visit_type_ptr_mut","","",309,[[["self"],["typeptr"]]]],[11,"visit_type_reference_mut","","",309,[[["self"],["typereference"]]]],[11,"visit_type_slice_mut","","",309,[[["self"],["typeslice"]]]],[11,"visit_type_trait_object_mut","","",309,[[["self"],["typetraitobject"]]]],[11,"visit_type_tuple_mut","","",309,[[["self"],["typetuple"]]]],[11,"visit_type_verbatim_mut","","",309,[[["self"],["typeverbatim"]]]],[11,"visit_un_op_mut","","",309,[[["self"],["unop"]]]],[11,"visit_use_glob_mut","","",309,[[["self"],["useglob"]]]],[11,"visit_use_group_mut","","",309,[[["self"],["usegroup"]]]],[11,"visit_use_name_mut","","",309,[[["self"],["usename"]]]],[11,"visit_use_path_mut","","",309,[[["self"],["usepath"]]]],[11,"visit_use_rename_mut","","",309,[[["self"],["userename"]]]],[11,"visit_use_tree_mut","","",309,[[["self"],["usetree"]]]],[11,"visit_variant_mut","","",309,[[["self"],["variant"]]]],[11,"visit_vis_crate_mut","","",309,[[["self"],["viscrate"]]]],[11,"visit_vis_public_mut","","",309,[[["self"],["vispublic"]]]],[11,"visit_vis_restricted_mut","","",309,[[["self"],["visrestricted"]]]],[11,"visit_visibility_mut","","",309,[[["self"],["visibility"]]]],[11,"visit_where_clause_mut","","",309,[[["self"],["whereclause"]]]],[11,"visit_where_predicate_mut","","",309,[[["self"],["wherepredicate"]]]],[11,"peek","syn::parse","Looks at the next token in the parse stream to determine…",324,[[["self"],["t"]],["bool"]]],[11,"error","","Triggers an error at the current position of the parse…",324,[[["self"]],["error"]]]],"paths":[[3,"Attribute"],[3,"MetaList"],[3,"MetaNameValue"],[3,"Field"],[3,"FieldsNamed"],[3,"FieldsUnnamed"],[3,"Variant"],[3,"VisCrate"],[3,"VisPublic"],[3,"VisRestricted"],[3,"ExprArray"],[3,"ExprAssign"],[3,"ExprAssignOp"],[3,"ExprAsync"],[3,"ExprBinary"],[3,"ExprBlock"],[3,"ExprBox"],[3,"ExprBreak"],[3,"ExprCall"],[3,"ExprCast"],[3,"ExprClosure"],[3,"ExprContinue"],[3,"ExprField"],[3,"ExprForLoop"],[3,"ExprGroup"],[3,"ExprIf"],[3,"ExprInPlace"],[3,"ExprIndex"],[3,"ExprLet"],[3,"ExprLit"],[3,"ExprLoop"],[3,"ExprMacro"],[3,"ExprMatch"],[3,"ExprMethodCall"],[3,"ExprParen"],[3,"ExprPath"],[3,"ExprRange"],[3,"ExprReference"],[3,"ExprRepeat"],[3,"ExprReturn"],[3,"ExprStruct"],[3,"ExprTry"],[3,"ExprTryBlock"],[3,"ExprTuple"],[3,"ExprType"],[3,"ExprUnary"],[3,"ExprUnsafe"],[3,"ExprVerbatim"],[3,"ExprWhile"],[3,"ExprYield"],[3,"Index"],[3,"Arm"],[3,"Block"],[3,"FieldPat"],[3,"FieldValue"],[3,"Label"],[3,"Local"],[3,"MethodTurbofish"],[3,"PatBox"],[3,"PatIdent"],[3,"PatLit"],[3,"PatMacro"],[3,"PatPath"],[3,"PatRange"],[3,"PatRef"],[3,"PatSlice"],[3,"PatStruct"],[3,"PatTuple"],[3,"PatTupleStruct"],[3,"PatVerbatim"],[3,"PatWild"],[3,"BoundLifetimes"],[3,"ConstParam"],[3,"Generics"],[3,"LifetimeDef"],[3,"PredicateEq"],[3,"PredicateLifetime"],[3,"PredicateType"],[3,"TraitBound"],[3,"TypeParam"],[3,"WhereClause"],[3,"ArgCaptured"],[3,"ArgSelf"],[3,"ArgSelfRef"],[3,"FnDecl"],[3,"ForeignItemFn"],[3,"ForeignItemMacro"],[3,"ForeignItemStatic"],[3,"ForeignItemType"],[3,"ForeignItemVerbatim"],[3,"ImplItemConst"],[3,"ImplItemExistential"],[3,"ImplItemMacro"],[3,"ImplItemMethod"],[3,"ImplItemType"],[3,"ImplItemVerbatim"],[3,"ItemConst"],[3,"ItemEnum"],[3,"ItemExistential"],[3,"ItemExternCrate"],[3,"ItemFn"],[3,"ItemForeignMod"],[3,"ItemImpl"],[3,"ItemMacro"],[3,"ItemMacro2"],[3,"ItemMod"],[3,"ItemStatic"],[3,"ItemStruct"],[3,"ItemTrait"],[3,"ItemTraitAlias"],[3,"ItemType"],[3,"ItemUnion"],[3,"ItemUse"],[3,"ItemVerbatim"],[3,"MethodSig"],[3,"TraitItemConst"],[3,"TraitItemMacro"],[3,"TraitItemMethod"],[3,"TraitItemType"],[3,"TraitItemVerbatim"],[3,"UseGlob"],[3,"UseGroup"],[3,"UseName"],[3,"UsePath"],[3,"UseRename"],[3,"File"],[3,"Lifetime"],[3,"LitBool"],[3,"LitVerbatim"],[3,"Macro"],[3,"DataEnum"],[3,"DataStruct"],[3,"DataUnion"],[3,"DeriveInput"],[3,"Abi"],[3,"BareFnArg"],[3,"TypeArray"],[3,"TypeBareFn"],[3,"TypeGroup"],[3,"TypeImplTrait"],[3,"TypeInfer"],[3,"TypeMacro"],[3,"TypeNever"],[3,"TypeParen"],[3,"TypePath"],[3,"TypePtr"],[3,"TypeReference"],[3,"TypeSlice"],[3,"TypeTraitObject"],[3,"TypeTuple"],[3,"TypeVerbatim"],[3,"AngleBracketedGenericArguments"],[3,"Binding"],[3,"Constraint"],[3,"ParenthesizedGenericArguments"],[3,"Path"],[3,"PathSegment"],[3,"QSelf"],[4,"AttrStyle"],[4,"Meta"],[4,"NestedMeta"],[4,"Fields"],[4,"Visibility"],[4,"Expr"],[4,"Member"],[4,"GenericMethodArgument"],[4,"Pat"],[4,"RangeLimits"],[4,"Stmt"],[4,"GenericParam"],[4,"TraitBoundModifier"],[4,"TypeParamBound"],[4,"WherePredicate"],[4,"FnArg"],[4,"ForeignItem"],[4,"ImplItem"],[4,"Item"],[4,"TraitItem"],[4,"UseTree"],[4,"FloatSuffix"],[4,"IntSuffix"],[4,"Lit"],[4,"StrStyle"],[4,"MacroDelimiter"],[4,"Data"],[4,"BinOp"],[4,"UnOp"],[4,"BareFnArgName"],[4,"ReturnType"],[4,"Type"],[4,"GenericArgument"],[4,"PathArguments"],[3,"Underscore"],[3,"Abstract"],[3,"As"],[3,"Async"],[3,"Auto"],[3,"Become"],[3,"Box"],[3,"Break"],[3,"Const"],[3,"Continue"],[3,"Crate"],[3,"Default"],[3,"Do"],[3,"Dyn"],[3,"Else"],[3,"Enum"],[3,"Existential"],[3,"Extern"],[3,"Final"],[3,"Fn"],[3,"For"],[3,"If"],[3,"Impl"],[3,"In"],[3,"Let"],[3,"Loop"],[3,"Macro"],[3,"Match"],[3,"Mod"],[3,"Move"],[3,"Mut"],[3,"Override"],[3,"Priv"],[3,"Pub"],[3,"Ref"],[3,"Return"],[3,"SelfType"],[3,"SelfValue"],[3,"Static"],[3,"Struct"],[3,"Super"],[3,"Trait"],[3,"Try"],[3,"Type"],[3,"Typeof"],[3,"Union"],[3,"Unsafe"],[3,"Unsized"],[3,"Use"],[3,"Virtual"],[3,"Where"],[3,"While"],[3,"Yield"],[3,"Add"],[3,"AddEq"],[3,"And"],[3,"AndAnd"],[3,"AndEq"],[3,"At"],[3,"Bang"],[3,"Caret"],[3,"CaretEq"],[3,"Colon"],[3,"Colon2"],[3,"Comma"],[3,"Div"],[3,"DivEq"],[3,"Dollar"],[3,"Dot"],[3,"Dot2"],[3,"Dot3"],[3,"DotDotEq"],[3,"Eq"],[3,"EqEq"],[3,"Ge"],[3,"Gt"],[3,"Le"],[3,"Lt"],[3,"MulEq"],[3,"Ne"],[3,"Or"],[3,"OrEq"],[3,"OrOr"],[3,"Pound"],[3,"Question"],[3,"RArrow"],[3,"LArrow"],[3,"Rem"],[3,"RemEq"],[3,"FatArrow"],[3,"Semi"],[3,"Shl"],[3,"ShlEq"],[3,"Shr"],[3,"ShrEq"],[3,"Star"],[3,"Sub"],[3,"SubEq"],[3,"Tilde"],[3,"Brace"],[3,"Bracket"],[3,"Paren"],[3,"Group"],[3,"TypeGenerics"],[3,"LitStr"],[3,"LitByteStr"],[3,"LitByte"],[3,"LitChar"],[3,"LitInt"],[3,"LitFloat"],[3,"TokenBuffer"],[3,"Cursor"],[8,"IdentExt"],[4,"Pair"],[3,"Punctuated"],[8,"Spanned"],[8,"Visit"],[8,"VisitMut"],[8,"Parse"],[8,"Parser"],[3,"StepCursor"],[3,"ParseBuffer"],[3,"Error"],[3,"Ident"],[3,"ImplGenerics"],[3,"Turbofish"],[3,"Pairs"],[3,"PairsMut"],[3,"IntoPairs"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Lookahead1"]]};
searchIndex["synstructure"]={"doc":"This crate provides helper types for matching against enum…","items":[[3,"BindingInfo","synstructure","Information about a specific binding. This contains both…",N,N],[12,"binding","","The name which this BindingInfo will bind to.",0,N],[12,"style","","The type of binding which this BindingInfo will create.",0,N],[3,"VariantAst","","This type is similar to `syn`'s `Variant` type, however…",N,N],[12,"attrs","","",1,N],[12,"ident","","",1,N],[12,"fields","","",1,N],[12,"discriminant","","",1,N],[3,"VariantInfo","","A wrapper around a `syn::DeriveInput`'s variant which…",N,N],[12,"prefix","","",2,N],[3,"Structure","","A wrapper around a `syn::DeriveInput` which provides…",N,N],[4,"AddBounds","","Changes how bounds are added",N,N],[13,"Both","","Add for fields and generics",3,N],[13,"Fields","","Fields only",3,N],[13,"Generics","","Generics only",3,N],[13,"None","","None",3,N],[4,"BindStyle","","The type of binding to use when generating a pattern.",N,N],[13,"Move","","`x`",4,N],[13,"MoveMut","","`mut x`",4,N],[13,"Ref","","`ref x`",4,N],[13,"RefMut","","`ref mut x`",4,N],[5,"unpretty_print","","Dumps an unpretty version of a tokenstream. Takes any type…",N,[[["t"]],["string"]]],[11,"ast","","Returns a reference to the underlying `syn` AST node which…",0,[[["self"]],["field"]]],[11,"pat","","Generates the pattern fragment for this field binding.",0,[[["self"]],["tokenstream"]]],[11,"referenced_ty_params","","Returns a list of the type parameters which are referenced…",0,[[["self"]],["vec",["ident"]]]],[11,"bindings","","Returns a slice of the bindings in this Variant.",2,N],[11,"bindings_mut","","Returns a mut slice of the bindings in this Variant.",2,N],[11,"ast","","Returns a `VariantAst` object which contains references to…",2,[[["self"]],["variantast"]]],[11,"omitted_bindings","","True if any bindings were omitted due to a `filter` call.",2,[[["self"]],["bool"]]],[11,"pat","","Generates the match-arm pattern which could be used to…",2,[[["self"]],["tokenstream"]]],[11,"construct","","Generates the token stream required to construct the…",2,[[["self"],["f"]],["tokenstream"]]],[11,"each","","Runs the passed-in function once for each bound field,…",2,[[["self"],["f"]],["tokenstream"]]],[11,"fold","","Runs the passed-in function once for each bound field,…",2,[[["self"],["i"],["f"]],["tokenstream"]]],[11,"filter","","Filter the bindings created by this `Variant` object. This…",2,[[["self"],["f"]],["self"]]],[11,"remove_binding","","Remove the binding at the given index.",2,[[["self"],["usize"]],["self"]]],[11,"bind_with","","Updates the `BindStyle` for each of the passed-in fields…",2,[[["self"],["f"]],["self"]]],[11,"binding_name","","Updates the binding name for each fo the passed-in fields…",2,[[["self"],["f"]],["self"]]],[11,"referenced_ty_params","","Returns a list of the type parameters which are referenced…",2,[[["self"]],["vec",["ident"]]]],[11,"new","","Create a new `Structure` with the variants and fields from…",5,[[["deriveinput"]],["self"]]],[11,"variants","","Returns a slice of the variants in this Structure.",5,N],[11,"variants_mut","","Returns a mut slice of the variants in this Structure.",5,N],[11,"ast","","Returns a reference to the underlying `syn` AST node which…",5,[[["self"]],["deriveinput"]]],[11,"omitted_variants","","True if any variants were omitted due to a…",5,[[["self"]],["bool"]]],[11,"each","","Runs the passed-in function once for each bound field,…",5,[[["self"],["f"]],["tokenstream"]]],[11,"fold","","Runs the passed-in function once for each bound field,…",5,[[["self"],["i"],["f"]],["tokenstream"]]],[11,"each_variant","","Runs the passed-in function once for each variant, passing…",5,[[["self"],["f"]],["tokenstream"]]],[11,"filter","","Filter the bindings created by this `Structure` object.…",5,[[["self"],["f"]],["self"]]],[11,"add_bounds","","Specify which bounds should be generated by…",5,[[["self"],["addbounds"]],["self"]]],[11,"filter_variants","","Filter the variants matched by this `Structure` object.…",5,[[["self"],["f"]],["self"]]],[11,"remove_variant","","Remove the variant at the given index.",5,[[["self"],["usize"]],["self"]]],[11,"bind_with","","Updates the `BindStyle` for each of the passed-in fields…",5,[[["self"],["f"]],["self"]]],[11,"binding_name","","Updates the binding name for each fo the passed-in fields…",5,[[["self"],["f"]],["self"]]],[11,"referenced_ty_params","","Returns a list of the type parameters which are refrenced…",5,[[["self"]],["vec",["ident"]]]],[11,"add_impl_generic","","Adds an `impl<>` generic parameter. This can be used when…",5,[[["self"],["genericparam"]],["self"]]],[11,"add_trait_bounds","","Add trait bounds for a trait with the given path for each…",5,[[["self"],["traitbound"],["option"],["addbounds"]]]],[11,"bound_impl","","NOTE: This methods' features are superceded by…",5,[[["self"],["p"],["b"]],["tokenstream"]]],[11,"unsafe_bound_impl","","NOTE: This methods' features are superceded by…",5,[[["self"],["p"],["b"]],["tokenstream"]]],[11,"unbound_impl","","NOTE: This methods' features are superceded by…",5,[[["self"],["p"],["b"]],["tokenstream"]]],[11,"unsafe_unbound_impl","","NOTE: This methods' features are superceded by…",5,[[["self"],["p"],["b"]],["tokenstream"]]],[11,"gen_impl","","Generate an impl block for the given struct. This impl…",5,[[["self"],["tokenstream"]],["tokenstream"]]],[14,"decl_derive","","The `decl_derive!` macro declares a custom derive wrapper.…",N,N],[14,"test_derive","","Run a test on a custom derive. This macro expands both the…",N,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"span","","",0,[[["self"]],["span"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"span","","",4,[[["self"]],["span"]]],[11,"eq","","",3,[[["self"],["addbounds"]],["bool"]]],[11,"eq","","",4,[[["self"],["bindstyle"]],["bool"]]],[11,"eq","","",0,[[["self"],["bindinginfo"]],["bool"]]],[11,"ne","","",0,[[["self"],["bindinginfo"]],["bool"]]],[11,"eq","","",1,[[["self"],["variantast"]],["bool"]]],[11,"ne","","",1,[[["self"],["variantast"]],["bool"]]],[11,"eq","","",2,[[["self"],["variantinfo"]],["bool"]]],[11,"ne","","",2,[[["self"],["variantinfo"]],["bool"]]],[11,"eq","","",5,[[["self"],["structure"]],["bool"]]],[11,"ne","","",5,[[["self"],["structure"]],["bool"]]],[11,"clone","","",3,[[["self"]],["addbounds"]]],[11,"clone","","",4,[[["self"]],["bindstyle"]]],[11,"clone","","",0,[[["self"]],["bindinginfo"]]],[11,"clone","","",1,[[["self"]],["variantast"]]],[11,"clone","","",2,[[["self"]],["variantinfo"]]],[11,"clone","","",5,[[["self"]],["structure"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"hash","","",3,N],[11,"hash","","",4,N],[11,"hash","","",0,N],[11,"hash","","",1,N],[11,"hash","","",2,N],[11,"hash","","",5,N],[11,"to_tokens","","",4,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",0,[[["self"],["tokenstream"]]]]],"paths":[[3,"BindingInfo"],[3,"VariantAst"],[3,"VariantInfo"],[4,"AddBounds"],[4,"BindStyle"],[3,"Structure"]]};
searchIndex["tempfile"]={"doc":"Temporary files and directories.","items":[[3,"TempDir","tempfile","A directory in the filesystem that is automatically…",N,N],[3,"NamedTempFile","","A named temporary file.",N,N],[3,"PersistError","","Error returned when persisting a temporary file fails.",N,N],[12,"error","","The underlying IO error.",0,N],[12,"file","","The temporary file that couldn't be persisted.",0,N],[3,"TempPath","","A path to a named temporary file without an open file…",N,N],[3,"SpooledTempFile","","An object that behaves like a regular temporary file, but…",N,N],[3,"Builder","","Create a new temporary file or directory with custom…",N,N],[5,"tempdir","","Create a new temporary directory.",N,[[],["result",["tempdir"]]]],[5,"tempdir_in","","Create a new temporary directory.",N,[[["p"]],["result",["tempdir"]]]],[5,"tempfile","","Create a new temporary file.",N,[[],["result",["file"]]]],[5,"tempfile_in","","Create a new temporary file in the specified directory.",N,[[["p"]],["result",["file"]]]],[5,"spooled_tempfile","","Create a new spooled temporary file.",N,[[["usize"]],["spooledtempfile"]]],[11,"new","","Attempts to make a temporary directory inside of…",1,[[],["result",["tempdir"]]]],[11,"new_in","","Attempts to make a temporary directory inside of `dir`.…",1,[[["p"]],["result",["tempdir"]]]],[11,"path","","Accesses the [`Path`] to the temporary directory.",1,[[["self"]],["path"]]],[11,"into_path","","Persist the temporary directory to disk, returning the…",1,[[["self"]],["pathbuf"]]],[11,"close","","Closes and removes the temporary directory, returing a…",1,[[["self"]],["result"]]],[11,"close","","Close and remove the temporary file.",2,[[["self"]],["result"]]],[11,"persist","","Persist the temporary file at the target path.",2,[[["self"],["p"]],["result",["pathpersisterror"]]]],[11,"persist_noclobber","","Persist the temporary file at the target path iff no file…",2,[[["self"],["p"]],["result",["pathpersisterror"]]]],[11,"new","","Create a new named temporary file.",3,[[],["result",["namedtempfile"]]]],[11,"new_in","","Create a new named temporary file in the specified…",3,[[["p"]],["result",["namedtempfile"]]]],[11,"path","","Get the temporary file's path.",3,[[["self"]],["path"]]],[11,"close","","Close and remove the temporary file.",3,[[["self"]],["result"]]],[11,"persist","","Persist the temporary file at the target path.",3,[[["self"],["p"]],["result",["file","persisterror"]]]],[11,"persist_noclobber","","Persist the temporary file at the target path iff no file…",3,[[["self"],["p"]],["result",["file","persisterror"]]]],[11,"reopen","","Reopen the temporary file.",3,[[["self"]],["result",["file"]]]],[11,"as_file","","Get a reference to the underlying file.",3,[[["self"]],["file"]]],[11,"as_file_mut","","Get a mutable reference to the underlying file.",3,[[["self"]],["file"]]],[11,"into_file","","Convert the temporary file into a `std::fs::File`.",3,[[["self"]],["file"]]],[11,"into_temp_path","","Closes the file, leaving only the temporary file path.",3,[[["self"]],["temppath"]]],[11,"new","","",4,[[["usize"]],["spooledtempfile"]]],[11,"is_rolled","","Returns true if the file has been rolled over to disk.",4,[[["self"]],["bool"]]],[11,"roll","","Rolls over to a file on disk, regardless of current size.…",4,[[["self"]],["result"]]],[11,"set_len","","",4,[[["self"],["u64"]],["result",["error"]]]],[11,"new","","Create a new `Builder`.",5,[[],["self"]]],[11,"prefix","","Set a custom filename prefix.",5,[[["self"],["str"]],["self"]]],[11,"suffix","","Set a custom filename suffix.",5,[[["self"],["str"]],["self"]]],[11,"rand_bytes","","Set the number of random bytes.",5,[[["self"],["usize"]],["self"]]],[11,"tempfile","","Create the named temporary file.",5,[[["self"]],["result",["namedtempfile"]]]],[11,"tempfile_in","","Create the named temporary file in the specified directory.",5,[[["self"],["p"]],["result",["namedtempfile"]]]],[11,"tempdir","","Attempts to make a temporary directory inside of…",5,[[["self"]],["result",["tempdir"]]]],[11,"tempdir_in","","Attempts to make a temporary directory inside of `dir`.…",5,[[["self"],["p"]],["result",["tempdir"]]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"eq","","",5,[[["self"],["builder"]],["bool"]]],[11,"ne","","",5,[[["self"],["builder"]],["bool"]]],[11,"from","","",3,[[["persisterror"]],["namedtempfile"]]],[11,"clone","","",5,[[["self"]],["builder"]]],[11,"drop","","",1,[[["self"]]]],[11,"drop","","",2,[[["self"]]]],[11,"as_ref","","",1,[[["self"]],["path"]]],[11,"as_ref","","",2,[[["self"]],["path"]]],[11,"as_ref","","",2,[[["self"]],["osstr"]]],[11,"as_ref","","",3,[[["self"]],["path"]]],[11,"default","","",5,[[],["self"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"deref","","",2,[[["self"]],["path"]]],[11,"read","","",3,N],[11,"read","","",4,N],[11,"write","","",3,N],[11,"flush","","",3,[[["self"]],["result"]]],[11,"write","","",4,N],[11,"flush","","",4,[[["self"]],["result"]]],[11,"seek","","",3,[[["self"],["seekfrom"]],["result",["u64"]]]],[11,"seek","","",4,[[["self"],["seekfrom"]],["result",["u64"]]]],[11,"description","","",0,[[["self"]],["str"]]],[11,"cause","","",0,[[["self"]],["option",["error"]]]],[11,"as_raw_fd","","",3,[[["self"]],["rawfd"]]]],"paths":[[3,"PersistError"],[3,"TempDir"],[3,"TempPath"],[3,"NamedTempFile"],[3,"SpooledTempFile"],[3,"Builder"]]};
searchIndex["termcolor"]={"doc":"This crate provides a cross platform abstraction for…","items":[[3,"StandardStream","termcolor","Satisfies `io::Write` and `WriteColor`, and supports…",N,N],[3,"StandardStreamLock","","`StandardStreamLock` is a locked reference to a…",N,N],[3,"BufferedStandardStream","","Like `StandardStream`, but does buffered writing.",N,N],[3,"BufferWriter","","Writes colored buffers to stdout or stderr.",N,N],[3,"Buffer","","Write colored text to memory.",N,N],[3,"NoColor","","Satisfies `WriteColor` but ignores all color options.",N,N],[3,"Ansi","","Satisfies `WriteColor` using standard ANSI escape sequences.",N,N],[3,"ColorSpec","","A color specification.",N,N],[3,"ParseColorError","","An error from parsing an invalid color specification.",N,N],[4,"ColorChoice","","ColorChoice represents the color preferences of an end user.",N,N],[13,"Always","","Try very hard to emit colors. This includes emitting ANSI…",0,N],[13,"AlwaysAnsi","","AlwaysAnsi is like Always, except it never tries to use…",0,N],[13,"Auto","","Try to use colors, but don't force the issue. If the…",0,N],[13,"Never","","Never emit colors.",0,N],[4,"Color","","The set of available colors for the terminal…",N,N],[13,"Black","","",1,N],[13,"Blue","","",1,N],[13,"Green","","",1,N],[13,"Red","","",1,N],[13,"Cyan","","",1,N],[13,"Magenta","","",1,N],[13,"Yellow","","",1,N],[13,"White","","",1,N],[13,"Ansi256","","",1,N],[13,"Rgb","","",1,N],[8,"WriteColor","","This trait describes the behavior of writers that support…",N,N],[10,"supports_color","","Returns true if and only if the underlying writer supports…",2,[[["self"]],["bool"]]],[10,"set_color","","Set the color settings of the writer.",2,[[["self"],["colorspec"]],["result"]]],[10,"reset","","Reset the current color settings to their original settings.",2,[[["self"]],["result"]]],[11,"is_synchronous","","Returns true if and only if the underlying writer must…",2,[[["self"]],["bool"]]],[11,"stdout","","Create a new `StandardStream` with the given color…",3,[[["colorchoice"]],["standardstream"]]],[11,"stderr","","Create a new `StandardStream` with the given color…",3,[[["colorchoice"]],["standardstream"]]],[11,"lock","","Lock the underlying writer.",3,[[["self"]],["standardstreamlock"]]],[11,"stdout","","Create a new `BufferedStandardStream` with the given color…",4,[[["colorchoice"]],["bufferedstandardstream"]]],[11,"stderr","","Create a new `BufferedStandardStream` with the given color…",4,[[["colorchoice"]],["bufferedstandardstream"]]],[11,"stdout","","Create a new `BufferWriter` that writes to stdout with the…",5,[[["colorchoice"]],["bufferwriter"]]],[11,"stderr","","Create a new `BufferWriter` that writes to stderr with the…",5,[[["colorchoice"]],["bufferwriter"]]],[11,"separator","","If set, the separator given is printed between buffers. By…",5,[[["self"],["option",["vec"]]]]],[11,"buffer","","Creates a new `Buffer` with the current color preferences.",5,[[["self"]],["buffer"]]],[11,"print","","Prints the contents of the given buffer.",5,[[["self"],["buffer"]],["result"]]],[11,"no_color","","Create a buffer that drops all color information.",6,[[],["buffer"]]],[11,"ansi","","Create a buffer that uses ANSI escape sequences.",6,[[],["buffer"]]],[11,"is_empty","","Returns true if and only if this buffer is empty.",6,[[["self"]],["bool"]]],[11,"len","","Returns the length of this buffer in bytes.",6,[[["self"]],["usize"]]],[11,"clear","","Clears this buffer.",6,[[["self"]]]],[11,"into_inner","","Consume this buffer and return the underlying raw data.",6,[[["self"]],["vec",["u8"]]]],[11,"as_slice","","Return the underlying data of the buffer.",6,N],[11,"as_mut_slice","","Return the underlying data of the buffer as a mutable slice.",6,N],[11,"new","","Create a new writer that satisfies `WriteColor` but drops…",7,[[["w"]],["nocolor"]]],[11,"into_inner","","Consume this `NoColor` value and return the inner writer.",7,[[["self"]],["w"]]],[11,"get_ref","","Return a reference to the inner writer.",7,[[["self"]],["w"]]],[11,"get_mut","","Return a mutable reference to the inner writer.",7,[[["self"]],["w"]]],[11,"new","","Create a new writer that satisfies `WriteColor` using…",8,[[["w"]],["ansi"]]],[11,"into_inner","","Consume this `Ansi` value and return the inner writer.",8,[[["self"]],["w"]]],[11,"get_ref","","Return a reference to the inner writer.",8,[[["self"]],["w"]]],[11,"get_mut","","Return a mutable reference to the inner writer.",8,[[["self"]],["w"]]],[11,"new","","Create a new color specification that has no colors or…",9,[[],["colorspec"]]],[11,"fg","","Get the foreground color.",9,[[["self"]],["option",["color"]]]],[11,"set_fg","","Set the foreground color.",9,[[["self"],["option",["color"]]],["colorspec"]]],[11,"bg","","Get the background color.",9,[[["self"]],["option",["color"]]]],[11,"set_bg","","Set the background color.",9,[[["self"],["option",["color"]]],["colorspec"]]],[11,"bold","","Get whether this is bold or not.",9,[[["self"]],["bool"]]],[11,"set_bold","","Set whether the text is bolded or not.",9,[[["self"],["bool"]],["colorspec"]]],[11,"underline","","Get whether this is underline or not.",9,[[["self"]],["bool"]]],[11,"set_underline","","Set whether the text is underlined or not.",9,[[["self"],["bool"]],["colorspec"]]],[11,"intense","","Get whether this is intense or not.",9,[[["self"]],["bool"]]],[11,"set_intense","","Set whether the text is intense or not.",9,[[["self"],["bool"]],["colorspec"]]],[11,"is_none","","Returns true if this color specification has no colors or…",9,[[["self"]],["bool"]]],[11,"clear","","Clears this color specification so that it has no…",9,[[["self"]]]],[11,"invalid","","Return the string that couldn't be parsed as a valid color.",10,[[["self"]],["str"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"to_string","","",10,[[["self"]],["string"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"supports_color","","",3,[[["self"]],["bool"]]],[11,"set_color","","",3,[[["self"],["colorspec"]],["result"]]],[11,"reset","","",3,[[["self"]],["result"]]],[11,"is_synchronous","","",3,[[["self"]],["bool"]]],[11,"supports_color","","",11,[[["self"]],["bool"]]],[11,"set_color","","",11,[[["self"],["colorspec"]],["result"]]],[11,"reset","","",11,[[["self"]],["result"]]],[11,"is_synchronous","","",11,[[["self"]],["bool"]]],[11,"supports_color","","",4,[[["self"]],["bool"]]],[11,"set_color","","",4,[[["self"],["colorspec"]],["result"]]],[11,"reset","","",4,[[["self"]],["result"]]],[11,"is_synchronous","","",4,[[["self"]],["bool"]]],[11,"supports_color","","",6,[[["self"]],["bool"]]],[11,"set_color","","",6,[[["self"],["colorspec"]],["result"]]],[11,"reset","","",6,[[["self"]],["result"]]],[11,"is_synchronous","","",6,[[["self"]],["bool"]]],[11,"supports_color","","",7,[[["self"]],["bool"]]],[11,"set_color","","",7,[[["self"],["colorspec"]],["result"]]],[11,"reset","","",7,[[["self"]],["result"]]],[11,"is_synchronous","","",7,[[["self"]],["bool"]]],[11,"supports_color","","",8,[[["self"]],["bool"]]],[11,"set_color","","",8,[[["self"],["colorspec"]],["result"]]],[11,"reset","","",8,[[["self"]],["result"]]],[11,"is_synchronous","","",8,[[["self"]],["bool"]]],[11,"eq","","",0,[[["self"],["colorchoice"]],["bool"]]],[11,"eq","","",9,[[["self"],["colorspec"]],["bool"]]],[11,"ne","","",9,[[["self"],["colorspec"]],["bool"]]],[11,"eq","","",1,[[["self"],["color"]],["bool"]]],[11,"ne","","",1,[[["self"],["color"]],["bool"]]],[11,"eq","","",10,[[["self"],["parsecolorerror"]],["bool"]]],[11,"ne","","",10,[[["self"],["parsecolorerror"]],["bool"]]],[11,"clone","","",0,[[["self"]],["colorchoice"]]],[11,"clone","","",9,[[["self"]],["colorspec"]]],[11,"clone","","",1,[[["self"]],["color"]]],[11,"clone","","",10,[[["self"]],["parsecolorerror"]]],[11,"default","","",9,[[],["colorspec"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"from_str","","",1,[[["str"]],["result",["color","parsecolorerror"]]]],[11,"write","","",3,N],[11,"flush","","",3,[[["self"]],["result"]]],[11,"write","","",11,N],[11,"flush","","",11,[[["self"]],["result"]]],[11,"write","","",4,N],[11,"flush","","",4,[[["self"]],["result"]]],[11,"write","","",6,N],[11,"flush","","",6,[[["self"]],["result"]]],[11,"write","","",7,N],[11,"flush","","",7,[[["self"]],["result"]]],[11,"write","","",8,N],[11,"flush","","",8,[[["self"]],["result"]]],[11,"description","","",10,[[["self"]],["str"]]]],"paths":[[4,"ColorChoice"],[4,"Color"],[8,"WriteColor"],[3,"StandardStream"],[3,"BufferedStandardStream"],[3,"BufferWriter"],[3,"Buffer"],[3,"NoColor"],[3,"Ansi"],[3,"ColorSpec"],[3,"ParseColorError"],[3,"StandardStreamLock"]]};
searchIndex["textwrap"]={"doc":"`textwrap` provides functions for word wrapping and…","items":[[3,"NoHyphenation","textwrap","Use this as a [`Wrapper.splitter`] to avoid any kind of…",N,N],[3,"HyphenSplitter","","Simple and default way to split words: splitting on…",N,N],[3,"Wrapper","","A Wrapper holds settings for wrapping and filling text.…",N,N],[12,"width","","The width in columns at which the text will be wrapped.",0,N],[12,"initial_indent","","Indentation used for the first line of output.",0,N],[12,"subsequent_indent","","Indentation used for subsequent lines of output.",0,N],[12,"break_words","","Allow long words to be broken if they cannot fit on a…",0,N],[12,"splitter","","The method for splitting words. If the `hyphenation`…",0,N],[3,"IntoWrapIter","","An iterator over the lines of the input string which owns…",N,N],[3,"WrapIter","","An iterator over the lines of the input string which…",N,N],[5,"fill","","Fill a line of text at `width` characters. Strings are…",N,[[["str"],["usize"]],["string"]]],[5,"wrap","","Wrap a line of text at `width` characters. Strings are…",N,[[["str"],["usize"]],["vec",["cow"]]]],[5,"wrap_iter","","Lazily wrap a line of text at `width` characters. Strings…",N,[[["str"],["usize"]],["intowrapiter",["hyphensplitter"]]]],[5,"indent","","Add prefix to each non-empty line.",N,[[["str"],["str"]],["string"]]],[5,"dedent","","Removes common leading whitespace from each line.",N,[[["str"]],["string"]]],[8,"WordSplitter","","An interface for splitting words.",N,N],[10,"split","","Return all possible splits of word. Each split is a triple…",1,[[["self"],["str"]],["vec"]]],[11,"new","","Create a new Wrapper for wrapping at the specified width.…",0,[[["usize"]],["wrapper",["hyphensplitter"]]]],[11,"with_splitter","","Use the given [`WordSplitter`] to create a new Wrapper for…",0,[[["usize"],["s"]],["wrapper"]]],[11,"initial_indent","","Change [`self.initial_indent`]. The initial indentation is…",0,[[["self"],["str"]],["wrapper"]]],[11,"subsequent_indent","","Change [`self.subsequent_indent`]. The subsequent…",0,[[["self"],["str"]],["wrapper"]]],[11,"break_words","","Change [`self.break_words`]. This controls if words longer…",0,[[["self"],["bool"]],["wrapper"]]],[11,"fill","","Fill a line of text at `self.width` characters. Strings…",0,[[["self"],["str"]],["string"]]],[11,"wrap","","Wrap a line of text at `self.width` characters. Strings…",0,[[["self"],["str"]],["vec",["cow"]]]],[11,"wrap_iter","","Lazily wrap a line of text at `self.width` characters.…",0,[[["self"],["str"]],["wrapiter"]]],[11,"into_wrap_iter","","Lazily wrap a line of text at `self.width` characters.…",0,[[["self"],["str"]],["intowrapiter"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into_iter","","",4,[[["self"]],["i"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into_iter","","",5,[[["self"]],["i"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"split","","",2,[[["self"],["str"]],["vec"]]],[11,"split","","",3,[[["self"],["str"]],["vec"]]],[11,"clone","","",2,[[["self"]],["nohyphenation"]]],[11,"clone","","",3,[[["self"]],["hyphensplitter"]]],[11,"clone","","",0,[[["self"]],["wrapper"]]],[11,"next","","",4,[[["self"]],["option",["cow"]]]],[11,"next","","",5,[[["self"]],["option",["cow"]]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]]],"paths":[[3,"Wrapper"],[8,"WordSplitter"],[3,"NoHyphenation"],[3,"HyphenSplitter"],[3,"IntoWrapIter"],[3,"WrapIter"]]};
searchIndex["thread_local"]={"doc":"Per-object thread-local storage","items":[[3,"ThreadLocal","thread_local","Thread-local variable wrapper",N,N],[3,"IterMut","","Mutable iterator over the contents of a `ThreadLocal`.",N,N],[3,"IntoIter","","An iterator that moves out of a `ThreadLocal`.",N,N],[3,"CachedThreadLocal","","Wrapper around `ThreadLocal` which adds a fast path for a…",N,N],[6,"CachedIterMut","","Mutable iterator over the contents of a `CachedThreadLocal`.",N,N],[6,"CachedIntoIter","","An iterator that moves out of a `CachedThreadLocal`.",N,N],[11,"new","","Creates a new empty `ThreadLocal`.",0,[[],["threadlocal"]]],[11,"get","","Returns the element for the current thread, if it exists.",0,[[["self"]],["option"]]],[11,"get_or","","Returns the element for the current thread, or creates it…",0,[[["self"],["f"]],["t"]]],[11,"get_or_try","","Returns the element for the current thread, or creates it…",0,[[["self"],["f"]],["result"]]],[11,"iter_mut","","Returns a mutable iterator over the local values of all…",0,[[["self"]],["itermut"]]],[11,"clear","","Removes all thread-specific values from the `ThreadLocal`,…",0,[[["self"]]]],[11,"get_default","","Returns the element for the current thread, or creates a…",0,[[["self"]],["t"]]],[11,"new","","Creates a new empty `CachedThreadLocal`.",1,[[],["cachedthreadlocal"]]],[11,"get","","Returns the element for the current thread, if it exists.",1,[[["self"]],["option"]]],[11,"get_or","","Returns the element for the current thread, or creates it…",1,[[["self"],["f"]],["t"]]],[11,"get_or_try","","Returns the element for the current thread, or creates it…",1,[[["self"],["f"]],["result"]]],[11,"iter_mut","","Returns a mutable iterator over the local values of all…",1,[[["self"]],["cacheditermut"]]],[11,"clear","","Removes all thread-specific values from the `ThreadLocal`,…",1,[[["self"]]]],[11,"get_default","","Returns the element for the current thread, or creates a…",1,[[["self"]],["t"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into_iter","","",0,[[["self"]],["i"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into_iter","","",2,[[["self"]],["i"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into_iter","","",3,[[["self"]],["i"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into_iter","","",1,[[["self"]],["i"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into_iter","","",0,[[["self"]],["intoiter"]]],[11,"into_iter","","",1,[[["self"]],["cachedintoiter"]]],[11,"drop","","",0,[[["self"]]]],[11,"next","","",2,[[["self"]],["option",["box"]]]],[11,"size_hint","","",2,N],[11,"next","","",3,[[["self"]],["option",["box"]]]],[11,"size_hint","","",3,N],[11,"default","","",0,[[],["threadlocal"]]],[11,"default","","",1,[[],["cachedthreadlocal"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]]],"paths":[[3,"ThreadLocal"],[3,"CachedThreadLocal"],[3,"IterMut"],[3,"IntoIter"]]};
searchIndex["time"]={"doc":"Simple time handling.","items":[[3,"Duration","time","ISO 8601 time duration with nanosecond precision. This…",N,N],[3,"OutOfRangeError","","Represents error when converting `Duration` to/from a…",N,N],[3,"Timespec","","A record specifying a time value in seconds and…",N,N],[12,"sec","","",0,N],[12,"nsec","","",0,N],[3,"PreciseTime","","An opaque structure representing a moment in time.",N,N],[3,"SteadyTime","","A structure representing a moment in time.",N,N],[3,"Tm","","Holds a calendar date and time broken down into its…",N,N],[12,"tm_sec","","Seconds after the minute - [0, 60]",1,N],[12,"tm_min","","Minutes after the hour - [0, 59]",1,N],[12,"tm_hour","","Hours after midnight - [0, 23]",1,N],[12,"tm_mday","","Day of the month - [1, 31]",1,N],[12,"tm_mon","","Months since January - [0, 11]",1,N],[12,"tm_year","","Years since 1900",1,N],[12,"tm_wday","","Days since Sunday - [0, 6]. 0 = Sunday, 1 = Monday, ..., 6…",1,N],[12,"tm_yday","","Days since January 1 - [0, 365]",1,N],[12,"tm_isdst","","Daylight Saving Time flag.",1,N],[12,"tm_utcoff","","Identifies the time zone that was used to compute this…",1,N],[12,"tm_nsec","","Nanoseconds after the second - [0, 109 - 1]",1,N],[3,"TmFmt","","A wrapper around a `Tm` and format string that implements…",N,N],[4,"ParseError","","",N,N],[13,"InvalidSecond","","",2,N],[13,"InvalidMinute","","",2,N],[13,"InvalidHour","","",2,N],[13,"InvalidDay","","",2,N],[13,"InvalidMonth","","",2,N],[13,"InvalidYear","","",2,N],[13,"InvalidDayOfWeek","","",2,N],[13,"InvalidDayOfMonth","","",2,N],[13,"InvalidDayOfYear","","",2,N],[13,"InvalidZoneOffset","","",2,N],[13,"InvalidTime","","",2,N],[13,"InvalidSecondsSinceEpoch","","",2,N],[13,"MissingFormatConverter","","",2,N],[13,"InvalidFormatSpecifier","","",2,N],[13,"UnexpectedCharacter","","",2,N],[5,"strptime","","Parses the time from the string according to the format…",N,[[["str"],["str"]],["result",["tm","parseerror"]]]],[5,"get_time","","Returns the current time as a `timespec` containing the…",N,[[],["timespec"]]],[5,"precise_time_ns","","Returns the current value of a high-resolution performance…",N,[[],["u64"]]],[5,"precise_time_s","","Returns the current value of a high-resolution performance…",N,[[],["f64"]]],[5,"tzset","","",N,[[]]],[5,"empty_tm","","",N,[[],["tm"]]],[5,"at_utc","","Returns the specified time in UTC",N,[[["timespec"]],["tm"]]],[5,"now_utc","","Returns the current time in UTC",N,[[],["tm"]]],[5,"at","","Returns the specified time in the local timezone",N,[[["timespec"]],["tm"]]],[5,"now","","Returns the current time in the local timezone",N,[[],["tm"]]],[5,"strftime","","Formats the time according to the format string.",N,[[["str"],["tm"]],["result",["string","parseerror"]]]],[11,"weeks","","Makes a new `Duration` with given number of weeks.…",3,[[["i64"]],["duration"]]],[11,"days","","Makes a new `Duration` with given number of days.…",3,[[["i64"]],["duration"]]],[11,"hours","","Makes a new `Duration` with given number of hours.…",3,[[["i64"]],["duration"]]],[11,"minutes","","Makes a new `Duration` with given number of minutes.…",3,[[["i64"]],["duration"]]],[11,"seconds","","Makes a new `Duration` with given number of seconds.…",3,[[["i64"]],["duration"]]],[11,"milliseconds","","Makes a new `Duration` with given number of milliseconds.",3,[[["i64"]],["duration"]]],[11,"microseconds","","Makes a new `Duration` with given number of microseconds.",3,[[["i64"]],["duration"]]],[11,"nanoseconds","","Makes a new `Duration` with given number of nanoseconds.",3,[[["i64"]],["duration"]]],[11,"span","","Runs a closure, returning the duration of time it took to…",3,[[["f"]],["duration"]]],[11,"num_weeks","","Returns the total number of whole weeks in the duration.",3,[[["self"]],["i64"]]],[11,"num_days","","Returns the total number of whole days in the duration.",3,[[["self"]],["i64"]]],[11,"num_hours","","Returns the total number of whole hours in the duration.",3,[[["self"]],["i64"]]],[11,"num_minutes","","Returns the total number of whole minutes in the duration.",3,[[["self"]],["i64"]]],[11,"num_seconds","","Returns the total number of whole seconds in the duration.",3,[[["self"]],["i64"]]],[11,"num_milliseconds","","Returns the total number of whole milliseconds in the…",3,[[["self"]],["i64"]]],[11,"num_microseconds","","Returns the total number of whole microseconds in the…",3,[[["self"]],["option",["i64"]]]],[11,"num_nanoseconds","","Returns the total number of whole nanoseconds in the…",3,[[["self"]],["option",["i64"]]]],[11,"checked_add","","Add two durations, returning `None` if overflow occurred.",3,[[["self"],["duration"]],["option",["duration"]]]],[11,"checked_sub","","Subtract two durations, returning `None` if overflow…",3,[[["self"],["duration"]],["option",["duration"]]]],[11,"min_value","","The minimum possible `Duration`: `i64::MIN` milliseconds.",3,[[],["duration"]]],[11,"max_value","","The maximum possible `Duration`: `i64::MAX` milliseconds.",3,[[],["duration"]]],[11,"zero","","A duration where the stored seconds and nanoseconds are…",3,[[],["duration"]]],[11,"is_zero","","Returns `true` if the duration equals `Duration::zero()`.",3,[[["self"]],["bool"]]],[11,"from_std","","Creates a `time::Duration` object from `std::time::Duration`",3,[[["stdduration"]],["result",["duration","outofrangeerror"]]]],[11,"to_std","","Creates a `std::time::Duration` object from `time::Duration`",3,[[["self"]],["result",["stdduration","outofrangeerror"]]]],[11,"new","","",0,[[["i64"],["i32"]],["timespec"]]],[11,"now","","Returns a `PreciseTime` representing the current moment in…",4,[[],["precisetime"]]],[11,"to","","Returns a `Duration` representing the span of time from…",4,[[["self"],["precisetime"]],["duration"]]],[11,"now","","Returns a `SteadyTime` representing the current moment in…",5,[[],["steadytime"]]],[11,"to_timespec","","Convert time to the seconds from January 1, 1970",1,[[["self"]],["timespec"]]],[11,"to_local","","Convert time to the local timezone",1,[[["self"]],["tm"]]],[11,"to_utc","","Convert time to the UTC",1,[[["self"]],["tm"]]],[11,"ctime","","Returns a TmFmt that outputs according to the `asctime`…",1,[[["self"]],["tmfmt"]]],[11,"asctime","","Returns a TmFmt that outputs according to the `asctime`…",1,[[["self"]],["tmfmt"]]],[11,"strftime","","Formats the time according to the format string.",1,[[["self"],["str"]],["result",["tmfmt","parseerror"]]]],[11,"rfc822","","Returns a TmFmt that outputs according to RFC 822.",1,[[["self"]],["tmfmt"]]],[11,"rfc822z","","Returns a TmFmt that outputs according to RFC 822 with…",1,[[["self"]],["tmfmt"]]],[11,"rfc3339","","Returns a TmFmt that outputs according to RFC 3339. RFC…",1,[[["self"]],["tmfmt"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"cmp","","",3,[[["self"],["duration"]],["ordering"]]],[11,"cmp","","",0,[[["self"],["timespec"]],["ordering"]]],[11,"cmp","","",5,[[["self"],["steadytime"]],["ordering"]]],[11,"cmp","","",1,[[["self"],["tm"]],["ordering"]]],[11,"eq","","",3,[[["self"],["duration"]],["bool"]]],[11,"ne","","",3,[[["self"],["duration"]],["bool"]]],[11,"eq","","",6,[[["self"],["outofrangeerror"]],["bool"]]],[11,"ne","","",6,[[["self"],["outofrangeerror"]],["bool"]]],[11,"eq","","",0,[[["self"],["timespec"]],["bool"]]],[11,"ne","","",0,[[["self"],["timespec"]],["bool"]]],[11,"eq","","",5,[[["self"],["steadytime"]],["bool"]]],[11,"ne","","",5,[[["self"],["steadytime"]],["bool"]]],[11,"eq","","",1,[[["self"],["tm"]],["bool"]]],[11,"ne","","",1,[[["self"],["tm"]],["bool"]]],[11,"eq","","",2,[[["self"],["parseerror"]],["bool"]]],[11,"ne","","",2,[[["self"],["parseerror"]],["bool"]]],[11,"clone","","",3,[[["self"]],["duration"]]],[11,"clone","","",6,[[["self"]],["outofrangeerror"]]],[11,"clone","","",0,[[["self"]],["timespec"]]],[11,"clone","","",4,[[["self"]],["precisetime"]]],[11,"clone","","",5,[[["self"]],["steadytime"]]],[11,"clone","","",1,[[["self"]],["tm"]]],[11,"clone","","",2,[[["self"]],["parseerror"]]],[11,"partial_cmp","","",3,[[["self"],["duration"]],["option",["ordering"]]]],[11,"lt","","",3,[[["self"],["duration"]],["bool"]]],[11,"le","","",3,[[["self"],["duration"]],["bool"]]],[11,"gt","","",3,[[["self"],["duration"]],["bool"]]],[11,"ge","","",3,[[["self"],["duration"]],["bool"]]],[11,"partial_cmp","","",0,[[["self"],["timespec"]],["option",["ordering"]]]],[11,"lt","","",0,[[["self"],["timespec"]],["bool"]]],[11,"le","","",0,[[["self"],["timespec"]],["bool"]]],[11,"gt","","",0,[[["self"],["timespec"]],["bool"]]],[11,"ge","","",0,[[["self"],["timespec"]],["bool"]]],[11,"partial_cmp","","",5,[[["self"],["steadytime"]],["option",["ordering"]]]],[11,"lt","","",5,[[["self"],["steadytime"]],["bool"]]],[11,"le","","",5,[[["self"],["steadytime"]],["bool"]]],[11,"gt","","",5,[[["self"],["steadytime"]],["bool"]]],[11,"ge","","",5,[[["self"],["steadytime"]],["bool"]]],[11,"partial_cmp","","",1,[[["self"],["tm"]],["option",["ordering"]]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"div","","",3,[[["self"],["i32"]],["duration"]]],[11,"add","","",3,[[["self"],["duration"]],["duration"]]],[11,"add","","",0,[[["self"],["duration"]],["timespec"]]],[11,"add","","",5,[[["self"],["duration"]],["steadytime"]]],[11,"add","","The resulting Tm is in UTC.",1,[[["self"],["duration"]],["tm"]]],[11,"sub","","",3,[[["self"],["duration"]],["duration"]]],[11,"sub","","",0,[[["self"],["duration"]],["timespec"]]],[11,"sub","","",0,[[["self"],["timespec"]],["duration"]]],[11,"sub","","",5,[[["self"],["steadytime"]],["duration"]]],[11,"sub","","",5,[[["self"],["duration"]],["steadytime"]]],[11,"sub","","The resulting Tm is in UTC.",1,[[["self"],["duration"]],["tm"]]],[11,"sub","","",1,[[["self"],["tm"]],["duration"]]],[11,"mul","","",3,[[["self"],["i32"]],["duration"]]],[11,"neg","","",3,[[["self"]],["duration"]]],[11,"hash","","",3,N],[11,"hash","","",0,N],[11,"hash","","",1,N],[11,"description","","",6,[[["self"]],["str"]]],[11,"description","","",2,[[["self"]],["str"]]]],"paths":[[3,"Timespec"],[3,"Tm"],[4,"ParseError"],[3,"Duration"],[3,"PreciseTime"],[3,"SteadyTime"],[3,"OutOfRangeError"],[3,"TmFmt"]]};
searchIndex["tokio_executor"]={"doc":"Task execution related traits and utilities.","items":[[3,"Enter","tokio_executor","Represents an executor context.",N,N],[3,"EnterError","","An error returned by `enter` if an execution scope has…",N,N],[3,"DefaultExecutor","","Executes futures on the default executor for the current…",N,N],[3,"SpawnError","","Errors returned by `Executor::spawn`.",N,N],[5,"enter","","Marks the current thread as being within the dynamic…",N,[[],["result",["enter","entererror"]]]],[5,"spawn","","Submits a future for execution on the default executor --…",N,[[["t"]]]],[5,"with_default","","Set the default executor for the duration of the closure",N,[[["t"],["enter"],["f"]],["r"]]],[11,"on_exit","","Register a callback to be invoked if and when the thread…",0,[[["self"],["f"]]]],[11,"make_permanent","","Treat the remainder of execution on this thread as part of…",0,[[["self"]]]],[11,"block_on","","Blocks the thread on the specified future, returning the…",0,[[["self"],["f"]],["result"]]],[11,"current","","Returns a handle to the default executor for the current…",1,[[],["defaultexecutor"]]],[0,"park","","Abstraction over blocking and unblocking the current thread.",N,N],[3,"ParkThread","tokio_executor::park","Blocks the current thread using a condition variable.",N,N],[3,"ParkError","","Error returned by [`ParkThread`]",N,N],[3,"UnparkThread","","Unblocks a thread that was blocked by `ParkThread`.",N,N],[8,"Park","","Block the current thread.",N,N],[16,"Unpark","","Unpark handle type for the `Park` implementation.",2,N],[16,"Error","","Error returned by `park`",2,N],[10,"unpark","","Get a new `Unpark` handle associated with this `Park`…",2,N],[10,"park","","Block the current thread unless or until the token is…",2,[[["self"]],["result"]]],[10,"park_timeout","","Park the current thread for at most `duration`.",2,[[["self"],["duration"]],["result"]]],[8,"Unpark","","Unblock a thread blocked by the associated [`Park`]…",N,N],[10,"unpark","","Unblock a thread that is blocked by the associated `Park`…",3,[[["self"]]]],[11,"new","","Create a new `ParkThread` handle for the current thread.",4,[[],["parkthread"]]],[8,"Executor","tokio_executor","A value that executes futures.",N,N],[10,"spawn","","Spawns a future object to run on this executor.",5,[[["self"],["box",["future"]]],["result",["spawnerror"]]]],[11,"status","","Provides a best effort hint to whether or not `spawn` will…",5,[[["self"]],["result",["spawnerror"]]]],[11,"shutdown","","Return a new `SpawnError` reflecting a shutdown executor…",6,[[],["self"]]],[11,"at_capacity","","Return a new `SpawnError` reflecting an executor at…",6,[[],["self"]]],[11,"is_shutdown","","Returns `true` if the error reflects a shutdown executor…",6,[[["self"]],["bool"]]],[11,"is_at_capacity","","Returns `true` if the error reflects an executor at…",6,[[["self"]],["bool"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","tokio_executor::park","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"unpark","","",4,N],[11,"park","","",4,[[["self"]],["result"]]],[11,"park_timeout","","",4,[[["self"],["duration"]],["result"]]],[11,"unpark","","",9,[[["self"]]]],[11,"spawn","tokio_executor","",1,[[["self"],["box",["future"]]],["result",["spawnerror"]]]],[11,"status","","",1,[[["self"]],["result",["spawnerror"]]]],[11,"clone","","",1,[[["self"]],["defaultexecutor"]]],[11,"clone","tokio_executor::park","",9,[[["self"]],["unparkthread"]]],[11,"drop","tokio_executor","",0,[[["self"]]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_executor::park","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_executor","",6,[[["self"],["formatter"]],["result"]]],[11,"description","","",7,[[["self"]],["str"]]],[11,"description","","",6,[[["self"]],["str"]]],[11,"execute","","",1,[[["self"],["t"]],["result",["executeerror"]]]]],"paths":[[3,"Enter"],[3,"DefaultExecutor"],[8,"Park"],[8,"Unpark"],[3,"ParkThread"],[8,"Executor"],[3,"SpawnError"],[3,"EnterError"],[3,"ParkError"],[3,"UnparkThread"]]};
searchIndex["tokio_io"]={"doc":"Core I/O traits and combinators when working with Tokio.","items":[[0,"io","tokio_io","I/O conveniences when working with primitives in…",N,N],[3,"AllowStdIo","tokio_io::io","A simple wrapper type which allows types that only…",N,N],[3,"Copy","","A future which will copy all data from a reader into a…",N,N],[3,"Flush","","A future used to fully flush an I/O object.",N,N],[3,"Lines","","Combinator created by the top-level `lines` method which…",N,N],[3,"Read","","A future which can be used to easily read available number…",N,N],[3,"ReadExact","","A future which can be used to easily read exactly enough…",N,N],[3,"ReadToEnd","","A future which can be used to easily read the entire…",N,N],[3,"ReadUntil","","A future which can be used to easily read the contents of…",N,N],[3,"Shutdown","","A future used to fully shutdown an I/O object.",N,N],[3,"ReadHalf","","The readable half of an object returned from…",N,N],[3,"WriteHalf","","The writable half of an object returned from…",N,N],[3,"Window","","A owned window around an underlying buffer.",N,N],[3,"WriteAll","","A future used to write the entire contents of some data to…",N,N],[5,"copy","","Creates a future which represents copying all the bytes…",N,[[["r"],["w"]],["copy"]]],[5,"flush","","Creates a future which will entirely flush an I/O object…",N,[[["a"]],["flush"]]],[5,"lines","","Creates a new stream from the I/O object given…",N,[[["a"]],["lines"]]],[5,"read","","Tries to read some bytes directly into the given `buf` in…",N,[[["r"],["t"]],["read"]]],[5,"read_exact","","Creates a future which will read exactly enough bytes to…",N,[[["a"],["t"]],["readexact"]]],[5,"read_to_end","","Creates a future which will read all the bytes associated…",N,[[["a"],["vec",["u8"]]],["readtoend"]]],[5,"read_until","","Creates a future which will read all the bytes associated…",N,[[["a"],["u8"],["vec",["u8"]]],["readuntil"]]],[5,"shutdown","","Creates a future which will entirely shutdown an I/O…",N,[[["a"]],["shutdown"]]],[5,"write_all","","Creates a future that will write the entire contents of…",N,[[["a"],["t"]],["writeall"]]],[11,"new","","Creates a new `AllowStdIo` from an existing IO object.",0,[[["t"]],["self"]]],[11,"get_ref","","Returns a reference to the contained IO object.",0,[[["self"]],["t"]]],[11,"get_mut","","Returns a mutable reference to the contained IO object.",0,[[["self"]],["t"]]],[11,"into_inner","","Consumes self and returns the contained IO object.",0,[[["self"]],["t"]]],[11,"into_inner","","Returns the underlying I/O object.",1,[[["self"]],["a"]]],[11,"new","","Creates a new window around the buffer `t` defaulting to…",2,[[["t"]],["window"]]],[11,"get_ref","","Gets a shared reference to the underlying buffer inside of…",2,[[["self"]],["t"]]],[11,"get_mut","","Gets a mutable reference to the underlying buffer inside…",2,[[["self"]],["t"]]],[11,"into_inner","","Consumes this `Window`, returning the underlying buffer.",2,[[["self"]],["t"]]],[11,"start","","Returns the starting index of this window into the…",2,[[["self"]],["usize"]]],[11,"end","","Returns the end index of this window into the underlying…",2,[[["self"]],["usize"]]],[11,"set_start","","Changes the starting index of this window to the index…",2,[[["self"],["usize"]],["window"]]],[11,"set_end","","Changes the end index of this window to the index specified.",2,[[["self"],["usize"]],["window"]]],[6,"IoFuture","tokio_io","A convenience typedef around a `Future` whose error…",N,N],[6,"IoStream","","A convenience typedef around a `Stream` whose error…",N,N],[8,"AsyncRead","","Read bytes asynchronously.",N,N],[11,"prepare_uninitialized_buffer","","Prepares an uninitialized buffer to be safe to pass to…",3,N],[11,"poll_read","","Attempt to read from the `AsyncRead` into `buf`.",3,N],[11,"read_buf","","Pull some bytes from this source into the specified…",3,[[["self"],["b"]],["poll",["usize","error"]]]],[11,"framed","","Provides a `Stream` and `Sink` interface for reading and…",3,[[["self"],["t"]],["framed"]]],[11,"split","","Helper method for splitting this read/write object into…",3,N],[8,"AsyncWrite","","Writes bytes asynchronously.",N,N],[11,"poll_write","","Attempt to write bytes from `buf` into the object.",4,N],[11,"poll_flush","","Attempt to flush the object, ensuring that any buffered…",4,[[["self"]],["poll",["error"]]]],[10,"shutdown","","Initiates or attempts to shut down this writer, returning…",4,[[["self"]],["poll",["error"]]]],[11,"write_buf","","Write a `Buf` into this value, returning how many bytes…",4,[[["self"],["b"]],["poll",["usize","error"]]]],[14,"try_nb","","A convenience macro for working with `io::Result<T>` from…",N,N],[11,"from","tokio_io::io","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into_future","","",5,[[["self"]],["f"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into_future","","",6,[[["self"]],["f"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into_future","","",7,[[["self"]],["f"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into_future","","",8,[[["self"]],["f"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into_future","","",9,[[["self"]],["f"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"into_future","","",10,[[["self"]],["f"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"into_future","","",11,[[["self"]],["f"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"into_future","","",14,[[["self"]],["f"]]],[11,"read_buf","","",12,[[["self"],["b"]],["poll",["usize","error"]]]],[11,"shutdown","","",0,[[["self"]],["poll",["error"]]]],[11,"shutdown","","",13,[[["self"]],["poll",["error"]]]],[11,"write_buf","","",13,[[["self"],["b"]],["poll",["usize","error"]]]],[11,"cmp","","",0,[[["self"],["allowstdio"]],["ordering"]]],[11,"eq","","",0,[[["self"],["allowstdio"]],["bool"]]],[11,"ne","","",0,[[["self"],["allowstdio"]],["bool"]]],[11,"clone","","",0,[[["self"]],["allowstdio"]]],[11,"partial_cmp","","",0,[[["self"],["allowstdio"]],["option",["ordering"]]]],[11,"lt","","",0,[[["self"],["allowstdio"]],["bool"]]],[11,"le","","",0,[[["self"],["allowstdio"]],["bool"]]],[11,"gt","","",0,[[["self"],["allowstdio"]],["bool"]]],[11,"ge","","",0,[[["self"],["allowstdio"]],["bool"]]],[11,"as_mut","","",2,N],[11,"as_ref","","",2,N],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"hash","","",0,N],[11,"read","","",0,N],[11,"read_to_end","","",0,[[["self"],["vec"]],["result",["usize"]]]],[11,"read_to_string","","",0,[[["self"],["string"]],["result",["usize"]]]],[11,"read_exact","","",0,N],[11,"read","","",12,N],[11,"write","","",0,N],[11,"flush","","",0,[[["self"]],["result"]]],[11,"write_all","","",0,N],[11,"write_fmt","","",0,[[["self"],["arguments"]],["result"]]],[11,"write","","",13,N],[11,"flush","","",13,[[["self"]],["result"]]],[11,"poll","","",5,[[["self"]],["poll",["error"]]]],[11,"poll","","",6,[[["self"]],["poll",["error"]]]],[11,"poll","","",7,[[["self"]],["poll",["error"]]]],[11,"poll","","",8,[[["self"]],["poll",["error"]]]],[11,"poll","","",9,[[["self"]],["poll",["error"]]]],[11,"poll","","",10,[[["self"]],["poll",["error"]]]],[11,"poll","","",11,[[["self"]],["poll",["error"]]]],[11,"poll","","",14,[[["self"]],["poll",["error"]]]],[11,"poll","","",1,[[["self"]],["poll",["option","error"]]]],[11,"prepare_uninitialized_buffer","tokio_io","Prepares an uninitialized buffer to be safe to pass to…",3,N],[11,"poll_read","","Attempt to read from the `AsyncRead` into `buf`.",3,N],[11,"read_buf","","Pull some bytes from this source into the specified…",3,[[["self"],["b"]],["poll",["usize","error"]]]],[11,"framed","","Provides a `Stream` and `Sink` interface for reading and…",3,[[["self"],["t"]],["framed"]]],[11,"split","","Helper method for splitting this read/write object into…",3,N],[11,"poll_write","","Attempt to write bytes from `buf` into the object.",4,N],[11,"poll_flush","","Attempt to flush the object, ensuring that any buffered…",4,[[["self"]],["poll",["error"]]]],[11,"write_buf","","Write a `Buf` into this value, returning how many bytes…",4,[[["self"],["b"]],["poll",["usize","error"]]]]],"paths":[[3,"AllowStdIo"],[3,"Lines"],[3,"Window"],[8,"AsyncRead"],[8,"AsyncWrite"],[3,"Copy"],[3,"Flush"],[3,"Read"],[3,"ReadExact"],[3,"ReadToEnd"],[3,"ReadUntil"],[3,"Shutdown"],[3,"ReadHalf"],[3,"WriteHalf"],[3,"WriteAll"]]};
searchIndex["tokio_reactor"]={"doc":"Event loop that drives Tokio I/O resources.","items":[[3,"Background","tokio_reactor","Handle to the reactor running on a background thread.",N,N],[3,"Shutdown","","Future that resolves when the reactor thread has shutdown.",N,N],[3,"Registration","","Associates an I/O resource with the reactor instance that…",N,N],[3,"PollEvented","","Associates an I/O resource that implements the…",N,N],[3,"Reactor","","The core reactor, or event loop.",N,N],[3,"Handle","","A reference to a reactor.",N,N],[3,"Turn","","Return value from the `turn` method on `Reactor`.",N,N],[3,"SetFallbackError","","Error returned from `Handle::set_fallback`.",N,N],[5,"with_default","","Set the default reactor for the duration of the closure",N,[[["handle"],["enter"],["f"]],["r"]]],[11,"handle","","Returns a reference to the reactor handle.",0,[[["self"]],["handle"]]],[11,"shutdown_on_idle","","Shutdown the reactor on idle.",0,[[["self"]],["shutdown"]]],[11,"shutdown_now","","Shutdown the reactor immediately",0,[[["self"]],["shutdown"]]],[11,"forget","","Run the reactor on its thread until the process terminates.",0,[[["self"]]]],[11,"new","","Creates a new `PollEvented` associated with the default…",1,[[["e"]],["pollevented"]]],[11,"new_with_handle","","Creates a new `PollEvented` associated with the specified…",1,[[["e"],["handle"]],["result"]]],[11,"get_ref","","Returns a shared reference to the underlying I/O object…",1,[[["self"]],["e"]]],[11,"get_mut","","Returns a mutable reference to the underlying I/O object…",1,[[["self"]],["e"]]],[11,"into_inner","","Consumes self, returning the inner I/O object",1,[[["self"]],["result"]]],[11,"poll_read_ready","","Check the I/O resource's read readiness state.",1,[[["self"],["ready"]],["poll",["ready","error"]]]],[11,"clear_read_ready","","Clears the I/O resource's read readiness state and…",1,[[["self"],["ready"]],["result"]]],[11,"poll_write_ready","","Check the I/O resource's write readiness state.",1,[[["self"]],["poll",["ready","error"]]]],[11,"clear_write_ready","","Resets the I/O resource's write readiness state and…",1,[[["self"]],["result"]]],[11,"new","","Create a new `Registration`.",2,[[],["registration"]]],[11,"register","","Register the I/O resource with the default reactor.",2,[[["self"],["t"]],["result",["bool"]]]],[11,"deregister","","Deregister the I/O resource from the reactor it is…",2,[[["self"],["t"]],["result"]]],[11,"register_with","","Register the I/O resource with the specified reactor.",2,[[["self"],["t"],["handle"]],["result",["bool"]]]],[11,"poll_read_ready","","Poll for events on the I/O resource's read readiness stream.",2,[[["self"]],["poll",["ready","error"]]]],[11,"take_read_ready","","Consume any pending read readiness event.",2,[[["self"]],["result",["option"]]]],[11,"poll_write_ready","","Poll for events on the I/O resource's write readiness…",2,[[["self"]],["poll",["ready","error"]]]],[11,"take_write_ready","","Consume any pending write readiness event.",2,[[["self"]],["result",["option"]]]],[11,"new","","Creates a new event loop, returning any error that…",3,[[],["result",["reactor"]]]],[11,"handle","","Returns a handle to this event loop which can be sent…",3,[[["self"]],["handle"]]],[11,"set_fallback","","Configures the fallback handle to be returned from…",3,[[["self"]],["result",["setfallbackerror"]]]],[11,"turn","","Performs one iteration of the event loop, blocking on…",3,[[["self"],["option",["duration"]]],["result",["turn"]]]],[11,"is_idle","","Returns true if the reactor is currently idle.",3,[[["self"]],["bool"]]],[11,"background","","Run this reactor on a background thread.",3,[[["self"]],["result",["background"]]]],[11,"current","","Returns a handle to the current reactor.",4,[[],["handle"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into_future","","",5,[[["self"]],["f"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"clone","","",4,[[["self"]],["handle"]]],[11,"clone","","",7,[[["self"]],["setfallbackerror"]]],[11,"drop","","",0,[[["self"]]]],[11,"drop","","",1,[[["self"]]]],[11,"default","","Returns a \"default\" handle, i.e., a handle that lazily…",4,[[],["handle"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"read","","",1,N],[11,"write","","",1,N],[11,"flush","","",1,[[["self"]],["result"]]],[11,"description","","",7,[[["self"]],["str"]]],[11,"poll","","",5,[[["self"]],["poll"]]],[11,"unpark","","",3,N],[11,"park","","",3,[[["self"]],["result"]]],[11,"park_timeout","","",3,[[["self"],["duration"]],["result"]]],[11,"unpark","","",4,[[["self"]]]],[11,"shutdown","","",1,[[["self"]],["poll",["error"]]]]],"paths":[[3,"Background"],[3,"PollEvented"],[3,"Registration"],[3,"Reactor"],[3,"Handle"],[3,"Shutdown"],[3,"Turn"],[3,"SetFallbackError"]]};
searchIndex["toml"]={"doc":"A [TOML]-parsing library","items":[[0,"value","toml","Definition of a TOML value",N,N],[3,"Datetime","toml::value","A parsed TOML datetime value",N,N],[3,"DatetimeParseError","","Error returned from parsing a `Datetime` in the `FromStr`…",N,N],[4,"Value","","Representation of a TOML value.",N,N],[13,"String","","Represents a TOML string",0,N],[13,"Integer","","Represents a TOML integer",0,N],[13,"Float","","Represents a TOML float",0,N],[13,"Boolean","","Represents a TOML boolean",0,N],[13,"Datetime","","Represents a TOML datetime",0,N],[13,"Array","","Represents a TOML array",0,N],[13,"Table","","Represents a TOML table",0,N],[6,"Array","","Type representing a TOML array, payload of the…",N,N],[6,"Table","","Type representing a TOML table, payload of the…",N,N],[8,"Index","","Types that can be used to index a `toml::Value`",N,N],[11,"try_from","","Convert a `T` into `toml::Value` which is an enum that can…",0,[[["t"]],["result",["value","error"]]]],[11,"try_into","","Interpret a `toml::Value` as an instance of type `T`.",0,[[["self"]],["result",["error"]]]],[11,"get","","Index into a TOML array or map. A string index can be used…",0,[[["self"],["i"]],["option",["value"]]]],[11,"get_mut","","Mutably index into a TOML array or map. A string index can…",0,[[["self"],["i"]],["option",["value"]]]],[11,"as_integer","","Extracts the integer value if it is an integer.",0,[[["self"]],["option",["i64"]]]],[11,"is_integer","","Tests whether this value is an integer.",0,[[["self"]],["bool"]]],[11,"as_float","","Extracts the float value if it is a float.",0,[[["self"]],["option",["f64"]]]],[11,"is_float","","Tests whether this value is a float.",0,[[["self"]],["bool"]]],[11,"as_bool","","Extracts the boolean value if it is a boolean.",0,[[["self"]],["option",["bool"]]]],[11,"is_bool","","Tests whether this value is a boolean.",0,[[["self"]],["bool"]]],[11,"as_str","","Extracts the string of this value if it is a string.",0,[[["self"]],["option",["str"]]]],[11,"is_str","","Tests if this value is a string.",0,[[["self"]],["bool"]]],[11,"as_datetime","","Extracts the datetime value if it is a datetime.",0,[[["self"]],["option",["datetime"]]]],[11,"is_datetime","","Tests whether this value is a datetime.",0,[[["self"]],["bool"]]],[11,"as_array","","Extracts the array value if it is an array.",0,[[["self"]],["option",["vec"]]]],[11,"as_array_mut","","Extracts the array value if it is an array.",0,[[["self"]],["option",["vec"]]]],[11,"is_array","","Tests whether this value is an array.",0,[[["self"]],["bool"]]],[11,"as_table","","Extracts the table value if it is a table.",0,[[["self"]],["option",["table"]]]],[11,"as_table_mut","","Extracts the table value if it is a table.",0,[[["self"]],["option",["table"]]]],[11,"is_table","","Tests whether this value is a table.",0,[[["self"]],["bool"]]],[11,"same_type","","Tests whether this and another value have the same type.",0,[[["self"],["value"]],["bool"]]],[11,"type_str","","Returns a human-readable representation of the type of…",0,[[["self"]],["str"]]],[0,"ser","toml","Serializing Rust structures into TOML.",N,N],[3,"Serializer","toml::ser","Serialization implementation for TOML.",N,N],[4,"Error","","Errors that can occur when serializing a type.",N,N],[13,"UnsupportedType","","Indicates that a Rust type was requested to be serialized…",1,N],[13,"KeyNotString","","The key of all TOML maps must be strings, but…",1,N],[13,"ArrayMixedType","","Arrays in TOML must have a homogenous type, but a…",1,N],[13,"ValueAfterTable","","All values in a TOML table must be emitted before further…",1,N],[13,"DateInvalid","","A serialized date was invalid.",1,N],[13,"NumberInvalid","","A serialized number was invalid.",1,N],[13,"UnsupportedNone","","None was attempted to be serialized, but it's not supported.",1,N],[13,"Custom","","A custom error which could be generated when serializing a…",1,N],[5,"to_vec","","Serialize the given data structure as a TOML byte vector.",N,[[["t"]],["result",["vec","error"]]]],[5,"to_string","","Serialize the given data structure as a String of TOML.",N,[[["t"]],["result",["string","error"]]]],[5,"to_string_pretty","","Serialize the given data structure as a \"pretty\" String of…",N,[[["t"]],["result",["string","error"]]]],[5,"tables_last","","Convenience function to serialize items in a map in an…",N,[[["i"],["s"]],["result"]]],[11,"new","","Creates a new serializer which will emit TOML into the…",2,[[["string"]],["serializer"]]],[11,"pretty","","Instantiate a \"pretty\" formatter",2,[[["string"]],["serializer"]]],[11,"pretty_string","","Enable or Disable pretty strings",2,[[["self"],["bool"]],["self"]]],[11,"pretty_string_literal","","Enable or Disable Literal strings for pretty strings",2,[[["self"],["bool"]],["self"]]],[11,"pretty_array","","Enable or Disable pretty arrays",2,[[["self"],["bool"]],["self"]]],[11,"pretty_array_indent","","Set the indent for pretty arrays",2,[[["self"],["usize"]],["self"]]],[11,"pretty_array_trailing_comma","","Specify whether to use a trailing comma when serializing…",2,[[["self"],["bool"]],["self"]]],[0,"de","toml","Deserializing TOML into Rust structures.",N,N],[3,"Error","toml::de","Errors that can occur when deserializing a type.",N,N],[3,"Deserializer","","Deserialization implementation for TOML.",N,N],[5,"from_slice","","Deserializes a byte slice into a type.",N,N],[5,"from_str","","Deserializes a string into a type.",N,[[["str"]],["result",["error"]]]],[11,"new","","Creates a new deserializer which will be deserializing the…",3,[[["str"]],["deserializer"]]],[11,"end","","The `Deserializer::end` method should be called after a…",3,[[["self"]],["result",["error"]]]],[11,"set_require_newline_after_table","","Historical versions of toml-rs accidentally allowed a…",3,[[["self"],["bool"]]]],[11,"line_col","","Produces a (line, column) pair of the position of the…",4,[[["self"]],["option"]]],[14,"toml","toml","Construct a [`toml::Value`] from TOML syntax.",N,N],[11,"from","toml::value","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","toml::ser","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","toml::de","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"eq","toml::value","",0,[[["self"],["value"]],["bool"]]],[11,"ne","","",0,[[["self"],["value"]],["bool"]]],[11,"eq","","",5,[[["self"],["datetime"]],["bool"]]],[11,"ne","","",5,[[["self"],["datetime"]],["bool"]]],[11,"eq","toml::ser","",1,[[["self"],["error"]],["bool"]]],[11,"ne","","",1,[[["self"],["error"]],["bool"]]],[11,"from","toml::value","",0,[[["str"]],["value"]]],[11,"from","","",0,[[["vec"]],["value"]]],[11,"from","","",0,[[["btreemap"]],["value"]]],[11,"from","","",0,[[["hashmap"]],["value"]]],[11,"from","","",0,[[["string"]],["value"]]],[11,"from","","",0,[[["i64"]],["value"]]],[11,"from","","",0,[[["i32"]],["value"]]],[11,"from","","",0,[[["i8"]],["value"]]],[11,"from","","",0,[[["u8"]],["value"]]],[11,"from","","",0,[[["u32"]],["value"]]],[11,"from","","",0,[[["f64"]],["value"]]],[11,"from","","",0,[[["f32"]],["value"]]],[11,"from","","",0,[[["bool"]],["value"]]],[11,"from","","",0,[[["datetime"]],["value"]]],[11,"clone","","",0,[[["self"]],["value"]]],[11,"clone","","",5,[[["self"]],["datetime"]]],[11,"clone","","",6,[[["self"]],["datetimeparseerror"]]],[11,"clone","toml::ser","",1,[[["self"]],["error"]]],[11,"clone","toml::de","",4,[[["self"]],["error"]]],[11,"fmt","toml::value","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","toml::ser","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","toml::de","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","toml::value","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","toml::ser","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","toml::de","",4,[[["self"],["formatter"]],["result"]]],[11,"from_str","toml::value","",0,[[["str"]],["result",["value"]]]],[11,"from_str","","",5,[[["str"]],["result",["datetime","datetimeparseerror"]]]],[11,"index","","",0,[[["self"],["i"]],["value"]]],[11,"index_mut","","",0,[[["self"],["i"]],["value"]]],[11,"description","","",6,[[["self"]],["str"]]],[11,"description","toml::ser","",1,[[["self"]],["str"]]],[11,"description","toml::de","",4,[[["self"]],["str"]]],[11,"serialize","toml::value","",0,[[["self"],["s"]],["result"]]],[11,"serialize","","",5,[[["self"],["s"]],["result"]]],[11,"custom","toml::ser","",1,[[["t"]],["error"]]],[11,"into_deserializer","toml::value","",0,[[["self"]],["self"]]],[11,"custom","toml::de","",4,[[["t"]],["error"]]],[11,"deserialize_any","toml::value","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_enum","","",0,N],[11,"deserialize_option","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_newtype_struct","","",0,[[["self"],["str"],["v"]],["result",["error"]]]],[11,"deserialize_bool","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_seq","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_map","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",0,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",0,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_struct","","",0,N],[11,"deserialize_tuple","","",0,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_identifier","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize","","",0,[[["d"]],["result",["value"]]]],[11,"deserialize","","",5,[[["d"]],["result",["datetime"]]]]],"paths":[[4,"Value"],[4,"Error"],[3,"Serializer"],[3,"Deserializer"],[3,"Error"],[3,"Datetime"],[3,"DatetimeParseError"]]};
searchIndex["traitobject"]={"doc":"traitobject","items":[[5,"data","traitobject","Get the data pointer from this trait object.",N,N],[5,"data_mut","","Get the data pointer from this trait object, mutably.",N,N],[8,"Trait","","A trait implemented for all trait objects.",N,N]],"paths":[]};
searchIndex["trilean"]={"doc":"","items":[[0,"skleene","trilean","",N,N],[4,"SKleene","trilean::skleene","",N,N],[13,"False","","",0,N],[13,"True","","",0,N],[13,"Unknown","","",0,N],[11,"and","","",0,[[["self"],["skleene"]],["skleene"]]],[11,"or","","",0,[[["self"],["skleene"]],["skleene"]]],[11,"from_bool","","",0,[[["bool"]],["skleene"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"eq","","",0,[[["self"],["skleene"]],["bool"]]],[11,"clone","","",0,[[["self"]],["skleene"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"not","","",0,[[["self"]],["skleene"]]],[11,"bitand","","",0,[[["self"],["self"]],["self"]]],[11,"bitor","","",0,[[["self"],["self"]],["self"]]]],"paths":[[4,"SKleene"]]};
searchIndex["type_checking"]={"doc":"This module implements type checking on the AST. The type…","items":[[0,"builtin_types","type_checking","",N,N],[3,"BuiltinTypes","type_checking::builtin_types","",N,N],[12,"string","","",0,N],[11,"add_to","","",0,[[["typesystem"],["stringtable"],["semanticcontext"]],["builtintypes"]]],[0,"checker","type_checking","",N,N],[3,"SemanticContext","type_checking::checker","",N,N],[12,"context","","",1,N],[12,"global_vars","","",1,N],[4,"VoidIs","","",N,N],[13,"Allowed","","",2,N],[13,"Forbidden","","",2,N],[5,"check","","",N,N],[5,"checked_type_from_basic_ty","","",N,[[["spanned"],["semanticcontext"],["typesystem"],["voidis"]],["checkedtype"]]],[5,"checked_type_from_ty","","",N,[[["type"],["semanticcontext"],["typesystem"],["voidis"]],["checkedtype"]]],[11,"new","","",1,[[["context"]],["semanticcontext"]]],[11,"report_error","","",1,[[["self"],["span"],["semanticerror"]]]],[0,"method_body_type_checker","type_checking","",N,N],[3,"MethodBodyTypeChecker","type_checking::method_body_type_checker","",N,N],[12,"context","","",3,N],[12,"type_system","","",3,N],[12,"current_class_id","","",3,N],[12,"current_class","","",3,N],[12,"current_method","","",3,N],[12,"type_analysis","","",3,N],[12,"local_scope","","",3,N],[3,"CouldNotDetermineType","","",N,N],[4,"Var","","",N,N],[13,"Local","","",4,N],[13,"Param","","",4,N],[11,"check_methods","","",3,[[["classdeclaration"],["typesystem"],["typeanalysis"],["semanticcontext"]]]],[0,"semantics","type_checking","",N,N],[4,"SemanticError","type_checking::semantics","",N,N],[13,"RedefinitionError","","",5,N],[12,"kind","type_checking::semantics::SemanticError","",5,N],[12,"name","","",5,N],[13,"MainMethodParamUsed","type_checking::semantics","",5,N],[12,"name","type_checking::semantics::SemanticError","",5,N],[13,"StaticMethodNotMain","type_checking::semantics","",5,N],[13,"NoMainMethod","","",5,N],[13,"MultipleStaticMethods","","",5,N],[12,"amount","type_checking::semantics::SemanticError","",5,N],[13,"ThisInStaticMethod","type_checking::semantics","",5,N],[13,"MightNotReturn","","",5,N],[12,"method_name","type_checking::semantics::SemanticError","",5,N],[13,"ThisMethodInvocationInStaticMethod","type_checking::semantics","",5,N],[12,"method_name","type_checking::semantics::SemanticError","",5,N],[13,"CannotCallStaticMethod","type_checking::semantics","",5,N],[12,"method_name","type_checking::semantics::SemanticError","",5,N],[13,"ConditionMustBeBoolean","type_checking::semantics","",5,N],[13,"CannotLookupVarOrField","","",5,N],[12,"name","type_checking::semantics::SemanticError","",5,N],[13,"CannotLookupVarOrFieldDidYouMean","type_checking::semantics","",5,N],[12,"name","type_checking::semantics::SemanticError","",5,N],[12,"did_you_mean","","",5,N],[13,"CannotAccessNonStaticFieldInStaticMethod","type_checking::semantics","",5,N],[12,"field_name","type_checking::semantics::SemanticError","",5,N],[13,"VoidMethodCannotReturnValue","type_checking::semantics","",5,N],[13,"VoidNotAllowed","","",5,N],[13,"MethodMustReturnSomething","","",5,N],[12,"ty","type_checking::semantics::SemanticError","",5,N],[13,"InvalidType","type_checking::semantics","",5,N],[12,"ty_expected","type_checking::semantics::SemanticError","",5,N],[12,"ty_expr","","",5,N],[13,"InvalidReferenceToClass","type_checking::semantics","",5,N],[12,"class_name","type_checking::semantics::SemanticError","",5,N],[13,"ClassDoesNotExist","type_checking::semantics","",5,N],[12,"class_name","type_checking::semantics::SemanticError","",5,N],[13,"CannotIndexNonArrayType","type_checking::semantics","",5,N],[12,"ty","type_checking::semantics::SemanticError","",5,N],[13,"MethodDoesNotExistOnType","type_checking::semantics","",5,N],[12,"method_name","type_checking::semantics::SemanticError","",5,N],[12,"ty","","",5,N],[13,"FieldDoesNotExistOnType","type_checking::semantics","",5,N],[12,"field_name","type_checking::semantics::SemanticError","",5,N],[12,"ty","","",5,N],[13,"MethodArgCountDoesNotMatch","type_checking::semantics","",5,N],[12,"expected_args","type_checking::semantics::SemanticError","",5,N],[12,"actual_args","","",5,N],[13,"CannotCompareValuesOfType1WithType2","type_checking::semantics","",5,N],[12,"ty1","type_checking::semantics::SemanticError","",5,N],[12,"ty2","","",5,N],[13,"NotAStatement","type_checking::semantics","",5,N],[13,"InvalidAssignment","","",5,N],[13,"CannotWriteToReadOnlyField","","",5,N],[12,"field_name","type_checking::semantics::SemanticError","",5,N],[13,"IntTooLarge","type_checking::semantics","",5,N],[12,"int","type_checking::semantics::SemanticError","",5,N],[5,"check","type_checking::semantics","`check` returns an `Err` iff at least one errors was…",N,[[["stringtable"],["ast"],["context"]],["result"]]],[0,"type_analysis","type_checking","",N,N],[3,"TypeAnalysis","type_checking::type_analysis","",N,N],[3,"LocalVarDef","","",N,N],[12,"name","","",6,N],[12,"ty","","",6,N],[3,"ExprInfo","","",N,N],[12,"ty","","",7,N],[12,"ref_info","","",7,N],[4,"RefInfo","","",N,N],[13,"GlobalVar","","",8,N],[13,"Var","","",8,N],[13,"Param","","",8,N],[13,"Field","","",8,N],[13,"Method","","",8,N],[13,"This","","",8,N],[13,"ArrayAccess","","",8,N],[11,"new","","",9,[[],["typeanalysis"]]],[11,"expr_info","","",9,[[["self"],["expr"]],["exprinfo"]]],[11,"set_expr_info","","",9,[[["self"],["expr"],["exprinfo"]]]],[11,"set_local_var_def","","",9,[[["self"],["stmt"],["rc",["localvardef"]]]]],[11,"local_var_def","","",9,[[["self"],["stmt"]],["option",["rc"]]]],[11,"decl_set_class_id","","",9,[[["self"],["classdeclaration"],["classdefid"]]]],[11,"decl_get_class_id","","",9,[[["self"],["classdeclaration"]],["option",["classdefid"]]]],[11,"new","","",7,[[["checkedtype"],["refinfo"]],["self"]]],[0,"type_system","type_checking","",N,N],[3,"ClassDoesNotExist","type_checking::type_system","",N,N],[3,"ClassAlreadyDeclared","","",N,N],[3,"TypeSystem","","",N,N],[12,"defined_classes","","",10,N],[3,"ClassDefId","","A `ClassDefId` refers to a class definition.",N,N],[3,"ClassDef","","",N,N],[12,"name","","",11,N],[12,"comparable","","",11,N],[3,"ClassMethodDef","","",N,N],[12,"name","","Name of the method",12,N],[12,"body","","",12,N],[12,"params","","params does not include `this` for non-static / non-main…",12,N],[12,"return_ty","","",12,N],[12,"is_static","","",12,N],[12,"is_main","","",12,N],[3,"MethodParamDef","","",N,N],[12,"name","","",13,N],[12,"ty","","",13,N],[3,"ClassFieldDef","","",N,N],[12,"name","","Name of the field",14,N],[12,"ty","","",14,N],[12,"can_write","","",14,N],[4,"BuiltinMethodBody","","",N,N],[13,"SystemOutPrintln","","",15,N],[13,"SystemOutWrite","","",15,N],[13,"SystemOutFlush","","",15,N],[13,"SystemInRead","","",15,N],[4,"ClassMethodBody","","",N,N],[13,"Builtin","","",16,N],[13,"AST","","",16,N],[4,"CheckedType","","",N,N],[13,"Int","","",17,N],[13,"Boolean","","",17,N],[13,"Void","","",17,N],[13,"Null","","",17,N],[13,"TypeRef","","",17,N],[13,"UnknownType","","",17,N],[13,"Array","","",17,N],[6,"Body","","",N,N],[11,"is_type_defined","","",10,[[["self"],["symbol"]],["bool"]]],[11,"add_class_def","","",10,[[["self"],["classdef"]],["result",["classdefid","classalreadydeclared"]]]],[11,"class_mut","","",10,[[["self"],["classdefid"]],["classdef"]]],[11,"class","","",10,[[["self"],["classdefid"]],["rc",["classdef"]]]],[11,"lookup_class_mut","","",10,[[["self"],["symbol"]],["option",["classdef"]]]],[11,"lookup_class","","",10,[[["self"],["symbol"]],["option"]]],[11,"defined_classes","","",10,[[["self"]],["hashmap"]]],[11,"as_str","","",18,[[["self"]],["str"]]],[11,"id","","",18,[[["self"]],["symbol"]]],[11,"new","","",11,[[["symbol"]],["classdef"]]],[11,"get_new_redefinition_number","","",11,[[["self"]],["usize"]]],[11,"add_field","","",11,[[["self"],["classfielddef"]],["result"]]],[11,"field_names","","",11,[[["self"]],["vec",["symbol"]]]],[11,"field","","",11,[[["self"],["symbol"]],["option",["rc"]]]],[11,"iter_fields","","",11,N],[11,"iter_methods","","",11,N],[11,"add_method","","",11,[[["self"],["classmethoddef"]],["result"]]],[11,"method","","",11,[[["self"],["symbol"]],["option",["rc"]]]],[11,"new","","",12,[[["symbol"],["classmethodbody"],["vec",["methodparamdef"]],["checkedtype"],["bool"]],["classmethoddef"]]],[11,"new","","",13,[[["symbol"],["checkedtype"]],["methodparamdef"]]],[11,"create_array_type","","",17,[[["checkedtype"],["u64"]],["checkedtype"]]],[11,"inner_type","","",17,[[["self"]],["option",["checkedtype"]]]],[11,"is_assignable_from","","",17,[[["self"],["checkedtype"],["typesystem"]],["bool"]]],[11,"from","type_checking::builtin_types","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","type_checking::checker","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","type_checking::method_body_type_checker","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","type_checking::semantics","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"as_fail","","",5,[[["self"]],["fail"]]],[11,"from","type_checking::type_analysis","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","type_checking::type_system","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"to_string","","",18,[[["self"]],["string"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"to_string","","",17,[[["self"]],["string"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"eq","","",18,[[["self"],["classdefid"]],["bool"]]],[11,"ne","","",18,[[["self"],["classdefid"]],["bool"]]],[11,"eq","","",17,[[["self"],["checkedtype"]],["bool"]]],[11,"ne","","",17,[[["self"],["checkedtype"]],["bool"]]],[11,"from","type_checking::type_analysis","",7,[[["checkedtype"]],["exprinfo"]]],[11,"from","type_checking::type_system","",17,[[["classdefid"]],["checkedtype"]]],[11,"clone","type_checking::checker","",2,[[["self"]],["voidis"]]],[11,"clone","type_checking::method_body_type_checker","",4,[[["self"]],["var"]]],[11,"clone","type_checking::type_analysis","",6,[[["self"]],["localvardef"]]],[11,"clone","","",7,[[["self"]],["exprinfo"]]],[11,"clone","","",8,[[["self"]],["refinfo"]]],[11,"clone","type_checking::type_system","",18,[[["self"]],["classdefid"]]],[11,"clone","","",15,[[["self"]],["builtinmethodbody"]]],[11,"clone","","",16,[[["self"]],["classmethodbody"]]],[11,"clone","","",17,[[["self"]],["checkedtype"]]],[11,"default","type_checking::type_analysis","",9,[[],["typeanalysis"]]],[11,"default","type_checking::type_system","",10,[[],["typesystem"]]],[11,"fmt","type_checking::semantics","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","type_checking::type_system","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","type_checking::checker","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","type_checking::method_body_type_checker","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","type_checking::semantics","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","type_checking::type_analysis","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","type_checking::type_system","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"cause","type_checking::semantics","",5,[[["self"]],["option",["fail"]]]],[11,"backtrace","","",5,[[["self"]],["option",["backtrace"]]]]],"paths":[[3,"BuiltinTypes"],[3,"SemanticContext"],[4,"VoidIs"],[3,"MethodBodyTypeChecker"],[4,"Var"],[4,"SemanticError"],[3,"LocalVarDef"],[3,"ExprInfo"],[4,"RefInfo"],[3,"TypeAnalysis"],[3,"TypeSystem"],[3,"ClassDef"],[3,"ClassMethodDef"],[3,"MethodParamDef"],[3,"ClassFieldDef"],[4,"BuiltinMethodBody"],[4,"ClassMethodBody"],[4,"CheckedType"],[3,"ClassDefId"],[3,"CouldNotDetermineType"],[3,"ClassDoesNotExist"],[3,"ClassAlreadyDeclared"]]};
searchIndex["typeable"]={"doc":"Exposes `Typeable`, which exposes the `get_type` method,…","items":[[8,"Typeable","typeable","Universal mixin trait for adding a `get_type` method.",N,N],[11,"get_type","","Get the `TypeId` of this object.",0,[[["self"]],["typeid"]]]],"paths":[[8,"Typeable"]]};
searchIndex["ucd_util"]={"doc":"The `ucd-util` crate contains a smattering of utility…","items":[[5,"hangul_name","ucd_util","Return the character name of the given precomposed Hangul…",N,[[["u32"]],["option",["string"]]]],[5,"hangul_full_canonical_decomposition","","Return the full canonical decomposition of the given…",N,[[["u32"]],["option"]]],[5,"ideograph_name","","Return the character name of the given ideograph codepoint.",N,[[["u32"]],["option",["string"]]]],[5,"character_name_normalize","","Normalize the given character name in place according to…",N,[[["string"]]]],[5,"symbolic_name_normalize","","Normalize the given symbolic name in place according to…",N,[[["string"]]]],[5,"canonical_property_name","","Find the canonical property name for the given normalized…",N,[[["propertytable"],["str"]],["option",["str"]]]],[5,"property_values","","Find the set of possible property values for a given…",N,[[["propertyvaluetable"],["str"]],["option",["propertyvalues"]]]],[5,"canonical_property_value","","Find the canonical property value for the given normalized…",N,[[["propertyvalues"],["str"]],["option",["str"]]]],[6,"PropertyTable","","The type of a property name table.",N,N],[6,"PropertyValueTable","","Type of a property value table.",N,N],[6,"PropertyValues","","A mapping of property values for a specific property.",N,N],[17,"RANGE_HANGUL_SYLLABLE","","A set of ranges that corresponds to the set of all Hangul…",N,N],[17,"RANGE_IDEOGRAPH","","A set of ranges that corresponds to the set of all…",N,N]],"paths":[]};
searchIndex["unicase"]={"doc":"Case","items":[[3,"UniCase","unicase","Case Insensitive wrapper of strings.",N,N],[12,"0","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"cmp","","",0,[[["self"],["self"]],["ordering"]]],[11,"eq","","",0,[[["self"],["s2"]],["bool"]]],[11,"from","","",0,[[["str"]],["self"]]],[11,"from","","",0,[[["str"]],["self"]]],[11,"from","","",0,[[["string"]],["self"]]],[11,"from","","",0,[[["string"]],["self"]]],[11,"clone","","",0,[[["self"]],["unicase"]]],[11,"into","","",0,[[["self"]],["str"]]],[11,"into","","",0,[[["self"]],["string"]]],[11,"partial_cmp","","",0,[[["self"],["self"]],["option",["ordering"]]]],[11,"as_ref","","",0,[[["self"]],["str"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"from_str","","",0,[[["str"]],["result",["unicase"]]]],[11,"deref","","",0,[[["self"]],["s"]]],[11,"deref_mut","","",0,[[["self"]],["s"]]],[11,"hash","","",0,[[["self"],["h"]]]]],"paths":[[3,"UniCase"]]};
searchIndex["unicode_bidi"]={"doc":"This crate implements the [Unicode Bidirectional…","items":[[3,"ParagraphInfo","unicode_bidi","Bidi information about a single paragraph",N,N],[12,"range","","The paragraphs boundaries within the text, as byte indices.",0,N],[12,"level","","The paragraph embedding level.",0,N],[3,"InitialInfo","","Initial bidi information of the text.",N,N],[12,"text","","The text",1,N],[12,"original_classes","","The BidiClass of the character at each byte in the text.…",1,N],[12,"paragraphs","","The boundaries and level of each paragraph within the text.",1,N],[3,"BidiInfo","","Bidi information of the text.",N,N],[12,"text","","The text",2,N],[12,"original_classes","","The BidiClass of the character at each byte in the text.",2,N],[12,"levels","","The directional embedding level of each byte in the text.",2,N],[12,"paragraphs","","The boundaries and paragraph embedding level of each…",2,N],[4,"BidiClass","","Represents values of the Unicode character property…",N,N],[13,"AL","","",3,N],[13,"AN","","",3,N],[13,"B","","",3,N],[13,"BN","","",3,N],[13,"CS","","",3,N],[13,"EN","","",3,N],[13,"ES","","",3,N],[13,"ET","","",3,N],[13,"FSI","","",3,N],[13,"L","","",3,N],[13,"LRE","","",3,N],[13,"LRI","","",3,N],[13,"LRO","","",3,N],[13,"NSM","","",3,N],[13,"ON","","",3,N],[13,"PDF","","",3,N],[13,"PDI","","",3,N],[13,"R","","",3,N],[13,"RLE","","",3,N],[13,"RLI","","",3,N],[13,"RLO","","",3,N],[13,"S","","",3,N],[13,"WS","","",3,N],[5,"bidi_class","","Find the `BidiClass` of a single char.",N,[[["char"]],["bidiclass"]]],[0,"deprecated","","This module holds deprecated assets only.",N,N],[5,"visual_runs","unicode_bidi::deprecated","Find the level runs within a line and return them in…",N,N],[0,"format_chars","unicode_bidi","Directional Formatting Characters",N,N],[17,"ALM","unicode_bidi::format_chars","ARABIC LETTER MARK",N,N],[17,"LRM","","LEFT-TO-RIGHT MARK",N,N],[17,"RLM","","RIGHT-TO-LEFT MARK",N,N],[17,"LRI","","LEFT‑TO‑RIGHT ISOLATE",N,N],[17,"RLI","","RIGHT‑TO‑LEFT ISOLATE",N,N],[17,"FSI","","FIRST STRONG ISOLATE",N,N],[17,"PDI","","POP DIRECTIONAL ISOLATE",N,N],[17,"LRE","","LEFT-TO-RIGHT EMBEDDING",N,N],[17,"RLE","","RIGHT-TO-LEFT EMBEDDING",N,N],[17,"PDF","","POP DIRECTIONAL FORMATTING",N,N],[17,"LRO","","LEFT-TO-RIGHT OVERRIDE",N,N],[17,"RLO","","RIGHT-TO-LEFT OVERRIDE",N,N],[0,"level","unicode_bidi","Bidi Embedding Level",N,N],[3,"Level","unicode_bidi::level","Embedding Level",N,N],[4,"Error","","Errors that can occur on Level creation or mutation",N,N],[13,"OutOfRangeNumber","","Out-of-range (invalid) embedding level number.",4,N],[5,"has_rtl","","If levels has any RTL (odd) level",N,N],[17,"LTR_LEVEL","","",N,N],[17,"RTL_LEVEL","","",N,N],[17,"MAX_EXPLICIT_DEPTH","","During explicit level resolution, embedding level can go…",N,N],[17,"MAX_IMPLICIT_DEPTH","","During implicit level resolution, embedding level can go…",N,N],[11,"ltr","","New LTR level with smallest number value (0).",5,[[],["level"]]],[11,"rtl","","New RTL level with smallest number value (1).",5,[[],["level"]]],[11,"max_implicit_depth","","Maximum depth of the directional status stack during…",5,[[],["u8"]]],[11,"max_explicit_depth","","Maximum depth of the directional status stack during…",5,[[],["u8"]]],[11,"new","","Create new level, fail if number is larger than `max_depth…",5,[[["u8"]],["result",["level","error"]]]],[11,"new_explicit","","Create new level, fail if number is larger than `max_depth`.",5,[[["u8"]],["result",["level","error"]]]],[11,"number","","The level number.",5,[[["self"]],["u8"]]],[11,"is_ltr","","If this level is left-to-right.",5,[[["self"]],["bool"]]],[11,"is_rtl","","If this level is right-to-left.",5,[[["self"]],["bool"]]],[11,"raise","","Raise level by `amount`, fail if number is larger than…",5,[[["self"],["u8"]],["result",["error"]]]],[11,"raise_explicit","","Raise level by `amount`, fail if number is larger than…",5,[[["self"],["u8"]],["result",["error"]]]],[11,"lower","","Lower level by `amount`, fail if number goes below zero.",5,[[["self"],["u8"]],["result",["error"]]]],[11,"new_explicit_next_ltr","","The next LTR (even) level greater than this, or fail if…",5,[[["self"]],["result",["level","error"]]]],[11,"new_explicit_next_rtl","","The next RTL (odd) level greater than this, or fail if…",5,[[["self"]],["result",["level","error"]]]],[11,"new_lowest_ge_rtl","","The lowest RTL (odd) level greater than or equal to this,…",5,[[["self"]],["result",["level","error"]]]],[11,"bidi_class","","Generate a character type based on a level (as specified…",5,[[["self"]],["bidiclass"]]],[11,"vec","","",5,N],[6,"LevelRun","unicode_bidi","A maximal substring of characters with the same embedding…",N,N],[17,"UNICODE_VERSION","","The Unicode version of data",N,N],[11,"new","","Find the paragraphs and BidiClasses in a string of text.",1,[[["str"],["option",["level"]]],["initialinfo"]]],[11,"new","","Split the text into paragraphs and determine the bidi…",2,[[["str"],["option",["level"]]],["bidiinfo"]]],[11,"reordered_levels","","Re-order a line based on resolved levels and return only…",2,[[["self"],["paragraphinfo"],["range",["usize"]]],["vec",["level"]]]],[11,"reordered_levels_per_char","","Re-order a line based on resolved levels and return only…",2,[[["self"],["paragraphinfo"],["range",["usize"]]],["vec",["level"]]]],[11,"reorder_line","","Re-order a line based on resolved levels and return the…",2,[[["self"],["paragraphinfo"],["range",["usize"]]],["cow",["str"]]]],[11,"visual_runs","","Find the level runs within a line and return them in…",2,N],[11,"has_rtl","","If processed text has any computed RTL levels",2,[[["self"]],["bool"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","unicode_bidi::level","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"cmp","","",5,[[["self"],["level"]],["ordering"]]],[11,"eq","","",5,[[["self"],["level"]],["bool"]]],[11,"ne","","",5,[[["self"],["level"]],["bool"]]],[11,"eq","","",4,[[["self"],["error"]],["bool"]]],[11,"eq","","",5,[[["self"],["str"]],["bool"]]],[11,"eq","","",5,[[["self"],["string"]],["bool"]]],[11,"eq","unicode_bidi","",3,[[["self"],["bidiclass"]],["bool"]]],[11,"eq","","",0,[[["self"],["paragraphinfo"]],["bool"]]],[11,"ne","","",0,[[["self"],["paragraphinfo"]],["bool"]]],[11,"eq","","",1,[[["self"],["initialinfo"]],["bool"]]],[11,"ne","","",1,[[["self"],["initialinfo"]],["bool"]]],[11,"eq","","",2,[[["self"],["bidiinfo"]],["bool"]]],[11,"ne","","",2,[[["self"],["bidiinfo"]],["bool"]]],[11,"from","unicode_bidi::level","Create level by number",5,[[["u8"]],["level"]]],[11,"clone","","",5,[[["self"]],["level"]]],[11,"clone","unicode_bidi","",3,[[["self"]],["bidiclass"]]],[11,"into","unicode_bidi::level","Convert to the level number",5,[[["self"]],["u8"]]],[11,"partial_cmp","","",5,[[["self"],["level"]],["option",["ordering"]]]],[11,"lt","","",5,[[["self"],["level"]],["bool"]]],[11,"le","","",5,[[["self"],["level"]],["bool"]]],[11,"gt","","",5,[[["self"],["level"]],["bool"]]],[11,"ge","","",5,[[["self"],["level"]],["bool"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","unicode_bidi","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]]],"paths":[[3,"ParagraphInfo"],[3,"InitialInfo"],[3,"BidiInfo"],[4,"BidiClass"],[4,"Error"],[3,"Level"]]};
searchIndex["unicode_normalization"]={"doc":"Unicode character composition and decomposition utilities…","items":[[3,"Decompositions","unicode_normalization","External iterator for a string decomposition's characters.",N,N],[3,"Recompositions","","External iterator for a string recomposition's characters.",N,N],[3,"StreamSafe","","UAX15-D4: This iterator keeps track of how many…",N,N],[4,"IsNormalized","","The QuickCheck algorithm can quickly determine if a text…",N,N],[13,"Yes","","The text is definitely normalized.",0,N],[13,"No","","The text is definitely not normalized.",0,N],[13,"Maybe","","The text may be normalized.",0,N],[5,"is_nfc","","Authoritatively check if a string is in NFC.",N,[[["str"]],["bool"]]],[5,"is_nfc_quick","","Quickly check if a string is in NFC, potentially returning…",N,[[["i"]],["isnormalized"]]],[5,"is_nfc_stream_safe","","Authoritatively check if a string is Stream-Safe NFC.",N,[[["str"]],["bool"]]],[5,"is_nfc_stream_safe_quick","","Quickly check if a string is Stream-Safe NFC.",N,[[["i"]],["isnormalized"]]],[5,"is_nfd","","Authoritatively check if a string is in NFD.",N,[[["str"]],["bool"]]],[5,"is_nfd_quick","","Quickly check if a string is in NFD.",N,[[["i"]],["isnormalized"]]],[5,"is_nfd_stream_safe","","Authoritatively check if a string is Stream-Safe NFD.",N,[[["str"]],["bool"]]],[5,"is_nfd_stream_safe_quick","","Quickly check if a string is Stream-Safe NFD.",N,[[["i"]],["isnormalized"]]],[0,"char","","Methods for composing and decomposing characters.",N,N],[5,"decompose_canonical","unicode_normalization::char","Compute canonical Unicode decomposition for character. See…",N,[[["char"],["f"]]]],[5,"decompose_compatible","","Compute canonical or compatible Unicode decomposition for…",N,[[["char"],["f"]]]],[5,"compose","","Compose two characters into a single character, if…",N,[[["char"],["char"]],["option",["char"]]]],[5,"canonical_combining_class","","",N,[[["char"]],["u8"]]],[5,"is_combining_mark","","",N,[[["char"]],["bool"]]],[17,"UNICODE_VERSION","unicode_normalization","",N,N],[8,"UnicodeNormalization","","Methods for iterating over strings while applying Unicode…",N,N],[10,"nfd","","Returns an iterator over the string in Unicode…",1,[[["self"]],["decompositions"]]],[10,"nfkd","","Returns an iterator over the string in Unicode…",1,[[["self"]],["decompositions"]]],[10,"nfc","","An Iterator over the string in Unicode Normalization Form…",1,[[["self"]],["recompositions"]]],[10,"nfkc","","An Iterator over the string in Unicode Normalization Form…",1,[[["self"]],["recompositions"]]],[10,"stream_safe","","An Iterator over the string with Conjoining Grapheme…",1,[[["self"]],["streamsafe"]]],[11,"nfd","","",2,[[["self"]],["decompositions"]]],[11,"nfkd","","",2,[[["self"]],["decompositions"]]],[11,"nfc","","",2,[[["self"]],["recompositions"]]],[11,"nfkc","","",2,[[["self"]],["recompositions"]]],[11,"stream_safe","","",2,[[["self"]],["streamsafe"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into_iter","","",2,[[["self"]],["i"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"nfd","","",3,[[["self"]],["decompositions"]]],[11,"nfkd","","",3,[[["self"]],["decompositions"]]],[11,"nfc","","",3,[[["self"]],["recompositions"]]],[11,"nfkc","","",3,[[["self"]],["recompositions"]]],[11,"stream_safe","","",3,[[["self"]],["streamsafe"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into_iter","","",3,[[["self"]],["i"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"nfd","","",4,[[["self"]],["decompositions"]]],[11,"nfkd","","",4,[[["self"]],["decompositions"]]],[11,"nfc","","",4,[[["self"]],["recompositions"]]],[11,"nfkc","","",4,[[["self"]],["recompositions"]]],[11,"stream_safe","","",4,[[["self"]],["streamsafe"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into_iter","","",4,[[["self"]],["i"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"eq","","",0,[[["self"],["isnormalized"]],["bool"]]],[11,"clone","","",2,[[["self"]],["decompositions"]]],[11,"clone","","",3,[[["self"]],["recompositions"]]],[11,"next","","",2,[[["self"]],["option",["char"]]]],[11,"size_hint","","",2,N],[11,"next","","",3,[[["self"]],["option",["char"]]]],[11,"next","","",4,[[["self"]],["option",["char"]]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]]],"paths":[[4,"IsNormalized"],[8,"UnicodeNormalization"],[3,"Decompositions"],[3,"Recompositions"],[3,"StreamSafe"]]};
searchIndex["unicode_segmentation"]={"doc":"Iterators which split strings on Grapheme Cluster or Word…","items":[[3,"Graphemes","unicode_segmentation","External iterator for a string's grapheme clusters.",N,N],[3,"GraphemeIndices","","External iterator for grapheme clusters and byte offsets.",N,N],[3,"GraphemeCursor","","Cursor-based segmenter for grapheme clusters.",N,N],[3,"UWordBounds","","External iterator for a string's word boundaries.",N,N],[3,"UWordBoundIndices","","External iterator for word boundaries and byte offsets.",N,N],[3,"UnicodeWords","","An iterator over the substrings of a string which, after…",N,N],[4,"GraphemeIncomplete","","An error return indicating that not enough content was…",N,N],[13,"PreContext","","More pre-context is needed. The caller should call…",0,N],[13,"PrevChunk","","When requesting `prev_boundary`, the cursor is moving past…",0,N],[13,"NextChunk","","When requesting `next_boundary`, the cursor is moving past…",0,N],[13,"InvalidOffset","","An error returned when the chunk given does not contain…",0,N],[11,"as_str","","View the underlying data (the part yet to be iterated) as…",1,[[["self"]],["str"]]],[11,"as_str","","View the underlying data (the part yet to be iterated) as…",2,[[["self"]],["str"]]],[11,"new","","Create a new cursor. The string and initial offset are…",3,[[["usize"],["usize"],["bool"]],["graphemecursor"]]],[11,"set_cursor","","Set the cursor to a new location in the same string.",3,[[["self"],["usize"]]]],[11,"cur_cursor","","The current offset of the cursor. Equal to the last value…",3,[[["self"]],["usize"]]],[11,"provide_context","","Provide additional pre-context when it is needed to decide…",3,[[["self"],["str"],["usize"]]]],[11,"is_boundary","","Determine whether the current cursor location is a…",3,[[["self"],["str"],["usize"]],["result",["bool","graphemeincomplete"]]]],[11,"next_boundary","","Find the next boundary after the current cursor position.…",3,[[["self"],["str"],["usize"]],["result",["option","graphemeincomplete"]]]],[11,"prev_boundary","","Find the previous boundary after the current cursor…",3,[[["self"],["str"],["usize"]],["result",["option","graphemeincomplete"]]]],[11,"as_str","","View the underlying data (the part yet to be iterated) as…",4,[[["self"]],["str"]]],[11,"as_str","","View the underlying data (the part yet to be iterated) as…",5,[[["self"]],["str"]]],[17,"UNICODE_VERSION","","The version of Unicode that this version of…",N,N],[8,"UnicodeSegmentation","","Methods for segmenting strings according to Unicode…",N,N],[10,"graphemes","","Returns an iterator over the [grapheme…",6,[[["self"],["bool"]],["graphemes"]]],[10,"grapheme_indices","","Returns an iterator over the grapheme clusters of `self`…",6,[[["self"],["bool"]],["graphemeindices"]]],[10,"unicode_words","","Returns an iterator over the words of `self`, separated on…",6,[[["self"]],["unicodewords"]]],[10,"split_word_bounds","","Returns an iterator over substrings of `self` separated on…",6,[[["self"]],["uwordbounds"]]],[10,"split_word_bound_indices","","Returns an iterator over substrings of `self`, split on…",6,[[["self"]],["uwordboundindices"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into_iter","","",2,[[["self"]],["i"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into_iter","","",1,[[["self"]],["i"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into_iter","","",5,[[["self"]],["i"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into_iter","","",4,[[["self"]],["i"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"into_iter","","",7,[[["self"]],["i"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"eq","","",0,[[["self"],["graphemeincomplete"]],["bool"]]],[11,"ne","","",0,[[["self"],["graphemeincomplete"]],["bool"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"next_back","","",1,[[["self"]],["option"]]],[11,"next_back","","",2,[[["self"]],["option",["str"]]]],[11,"next_back","","",7,[[["self"]],["option",["str"]]]],[11,"next_back","","",4,[[["self"]],["option"]]],[11,"next_back","","",5,[[["self"]],["option",["str"]]]],[11,"next","","",1,[[["self"]],["option"]]],[11,"size_hint","","",1,N],[11,"size_hint","","",2,N],[11,"next","","",2,[[["self"]],["option",["str"]]]],[11,"next","","",7,[[["self"]],["option",["str"]]]],[11,"next","","",4,[[["self"]],["option"]]],[11,"size_hint","","",4,N],[11,"size_hint","","",5,N],[11,"next","","",5,[[["self"]],["option",["str"]]]],[11,"clone","","",1,[[["self"]],["graphemeindices"]]],[11,"clone","","",2,[[["self"]],["graphemes"]]],[11,"clone","","",3,[[["self"]],["graphemecursor"]]],[11,"clone","","",5,[[["self"]],["uwordbounds"]]],[11,"clone","","",4,[[["self"]],["uwordboundindices"]]]],"paths":[[4,"GraphemeIncomplete"],[3,"GraphemeIndices"],[3,"Graphemes"],[3,"GraphemeCursor"],[3,"UWordBoundIndices"],[3,"UWordBounds"],[8,"UnicodeSegmentation"],[3,"UnicodeWords"]]};
searchIndex["unicode_width"]={"doc":"Determine displayed width of `char` and `str` types…","items":[[17,"UNICODE_VERSION","unicode_width","The version of Unicode that this version of unicode-width…",N,N],[8,"UnicodeWidthChar","","Methods for determining displayed width of Unicode…",N,N],[10,"width","","Returns the character's displayed width in columns, or…",0,[[["self"]],["option",["usize"]]]],[10,"width_cjk","","Returns the character's displayed width in columns, or…",0,[[["self"]],["option",["usize"]]]],[8,"UnicodeWidthStr","","Methods for determining displayed width of Unicode strings.",N,N],[10,"width","","Returns the string's displayed width in columns.",1,[[["self"]],["usize"]]],[10,"width_cjk","","Returns the string's displayed width in columns.",1,[[["self"]],["usize"]]]],"paths":[[8,"UnicodeWidthChar"],[8,"UnicodeWidthStr"]]};
searchIndex["unicode_xid"]={"doc":"Determine if a `char` is a valid identifier for a parser…","items":[[17,"UNICODE_VERSION","unicode_xid","The version of Unicode that this version of unicode-xid is…",N,N],[8,"UnicodeXID","","Methods for determining if a character is a valid…",N,N],[10,"is_xid_start","","Returns whether the specified character satisfies the…",0,[[["self"]],["bool"]]],[10,"is_xid_continue","","Returns whether the specified `char` satisfies the…",0,[[["self"]],["bool"]]]],"paths":[[8,"UnicodeXID"]]};
searchIndex["unreachable"]={"doc":"unreachable","items":[[5,"unreachable","unreachable","Hint to the optimizer that any code path which calls this…",N,N],[8,"UncheckedOptionExt","","An extension trait for `Option<T>` providing unchecked…",N,N],[10,"unchecked_unwrap","","Get the value out of this Option without checking for None.",0,[[["self"]],["t"]]],[10,"unchecked_unwrap_none","","Assert that this Option is a None to the optimizer.",0,[[["self"]]]],[8,"UncheckedResultExt","","An extension trait for `Result<T, E>` providing unchecked…",N,N],[10,"unchecked_unwrap_ok","","Get the value out of this Result without checking for Err.",1,[[["self"]],["t"]]],[10,"unchecked_unwrap_err","","Get the error out of this Result without checking for Ok.",1,[[["self"]],["e"]]]],"paths":[[8,"UncheckedOptionExt"],[8,"UncheckedResultExt"]]};
searchIndex["untrusted"]={"doc":"untrusted.rs: Safe, fast, zero-panic, zero-crashing,…","items":[[3,"Input","untrusted","A wrapper around `&'a [u8]` that helps in writing…",N,N],[3,"Reader","","A read-only, forward-only* cursor into the data in an…",N,N],[3,"Mark","","An index into the already-parsed input of a `Reader`.",N,N],[3,"EndOfInput","","The error type used to indicate the end of the input was…",N,N],[5,"read_all_optional","","Calls `read` with the given input as a `Reader`, ensuring…",N,[[["option",["input"]],["e"],["f"]],["result"]]],[11,"from","","Construct a new `Input` for the given input `bytes`.",0,N],[11,"is_empty","","Returns `true` if the input is empty and false otherwise.",0,[[["self"]],["bool"]]],[11,"iter","","Returns an iterator over the input.",0,N],[11,"len","","Returns the length of the `Input`.",0,[[["self"]],["usize"]]],[11,"read_all","","Calls `read` with the given input as a `Reader`, ensuring…",0,[[["self"],["e"],["f"]],["result"]]],[11,"read_all_mut","","Like `read_all`, except taking an `FnMut`.",0,[[["self"],["e"],["f"]],["result"]]],[11,"as_slice_less_safe","","Access the input as a slice so it can be processed by…",0,N],[11,"new","","Construct a new Reader for the given input. Use…",1,[[["input"]],["reader"]]],[11,"at_end","","Returns `true` if the reader is at the end of the input,…",1,[[["self"]],["bool"]]],[11,"get_input_between_marks","","Returns an `Input` for already-parsed input that has had…",1,[[["self"],["mark"],["mark"]],["result",["input","endofinput"]]]],[11,"mark","","Return the current position of the `Reader` for future use…",1,[[["self"]],["mark"]]],[11,"peek","","Returns `true` if there is at least one more byte in the…",1,[[["self"],["u8"]],["bool"]]],[11,"read_byte","","Reads the next input byte.",1,[[["self"]],["result",["u8","endofinput"]]]],[11,"skip","","Skips `num_bytes` of the input.",1,[[["self"],["usize"]],["result",["endofinput"]]]],[11,"skip_and_get_input","","Skips `num_bytes` of the input, returning the skipped…",1,[[["self"],["usize"]],["result",["input","endofinput"]]]],[11,"skip_to_end","","Skips the reader to the end of the input, returning the…",1,[[["self"]],["input"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"eq","","",0,[[["self"],["input"]],["bool"]]],[11,"eq","","",0,N],[11,"eq","","",3,[[["self"],["endofinput"]],["bool"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"clone","","",0,[[["self"]],["input"]]],[11,"clone","","",3,[[["self"]],["endofinput"]]]],"paths":[[3,"Input"],[3,"Reader"],[3,"Mark"],[3,"EndOfInput"]]};
searchIndex["url"]={"doc":"rust-url is an implementation of the URL Standard for the…","items":[[3,"OpaqueOrigin","url","Opaque identifier for URLs that have file or other schemes",N,N],[3,"HostAndPort","","This mostly exists because coherence rules don’t allow us…",N,N],[12,"host","","",0,N],[12,"port","","",0,N],[3,"SocketAddrs","","Socket addresses for an URL.",N,N],[3,"PathSegmentsMut","","Exposes methods to manipulate the path of an URL that is…",N,N],[3,"Url","","A parsed URL record.",N,N],[3,"ParseOptions","","Full configuration for the URL parser.",N,N],[3,"UrlQuery","","Implementation detail of `Url::query_pairs_mut`. Typically…",N,N],[4,"Origin","","The origin of an URL",N,N],[13,"Opaque","","A globally unique identifier",1,N],[13,"Tuple","","Consists of the URL's scheme, host and port",1,N],[4,"Host","","The host name of an URL.",N,N],[13,"Domain","","A DNS domain name, as '.' dot-separated labels. Non-ASCII…",2,N],[13,"Ipv4","","An IPv4 address. `Url::host_str` returns the serialization…",2,N],[13,"Ipv6","","An IPv6 address. `Url::host_str` returns the serialization…",2,N],[4,"ParseError","","Errors that can occur during parsing.",N,N],[13,"EmptyHost","","",3,N],[13,"IdnaError","","",3,N],[13,"InvalidPort","","",3,N],[13,"InvalidIpv4Address","","",3,N],[13,"InvalidIpv6Address","","",3,N],[13,"InvalidDomainCharacter","","",3,N],[13,"RelativeUrlWithoutBase","","",3,N],[13,"RelativeUrlWithCannotBeABaseBase","","",3,N],[13,"SetHostOnCannotBeABaseUrl","","",3,N],[13,"Overflow","","",3,N],[4,"SyntaxViolation","","Non-fatal syntax violations that can occur during parsing.",N,N],[13,"Backslash","","",4,N],[13,"C0SpaceIgnored","","",4,N],[13,"EmbeddedCredentials","","",4,N],[13,"ExpectedDoubleSlash","","",4,N],[13,"ExpectedFileDoubleSlash","","",4,N],[13,"FileWithHostAndWindowsDrive","","",4,N],[13,"NonUrlCodePoint","","",4,N],[13,"NullInFragment","","",4,N],[13,"PercentDecode","","",4,N],[13,"TabOrNewlineIgnored","","",4,N],[13,"UnencodedAtSign","","",4,N],[4,"Position","","Indicates a position within a URL based on its components.",N,N],[13,"BeforeScheme","","",5,N],[13,"AfterScheme","","",5,N],[13,"BeforeUsername","","",5,N],[13,"AfterUsername","","",5,N],[13,"BeforePassword","","",5,N],[13,"AfterPassword","","",5,N],[13,"BeforeHost","","",5,N],[13,"AfterHost","","",5,N],[13,"BeforePort","","",5,N],[13,"AfterPort","","",5,N],[13,"BeforePath","","",5,N],[13,"AfterPath","","",5,N],[13,"BeforeQuery","","",5,N],[13,"AfterQuery","","",5,N],[13,"BeforeFragment","","",5,N],[13,"AfterFragment","","",5,N],[11,"to_owned","","Return a copy of `self` that owns an allocated `String`…",2,[[["self"]],["host",["string"]]]],[11,"parse","","Parse a host: either an IPv6 address in [] square…",2,[[["str"]],["result",["parseerror"]]]],[11,"parse_opaque","","",2,[[["str"]],["result",["parseerror"]]]],[11,"to_owned","","Return a copy of `self` that owns an allocated `String`…",0,[[["self"]],["hostandport",["string"]]]],[11,"new_opaque","","Creates a new opaque origin that is only equal to itself.",1,[[],["origin"]]],[11,"is_tuple","","Return whether this origin is a (scheme, host, port) tuple…",1,[[["self"]],["bool"]]],[11,"ascii_serialization","","…",1,[[["self"]],["string"]]],[11,"unicode_serialization","","…",1,[[["self"]],["string"]]],[11,"clear","","Remove all segments in the path, leaving the minimal…",6,[[["self"]],["self"]]],[11,"pop_if_empty","","Remove the last segment of this URL’s path if it is empty,…",6,[[["self"]],["self"]]],[11,"pop","","Remove the last segment of this URL’s path.",6,[[["self"]],["self"]]],[11,"push","","Append the given segment at the end of this URL’s path.",6,[[["self"],["str"]],["self"]]],[11,"extend","","Append each segment from the given iterator at the end of…",6,[[["self"],["i"]],["self"]]],[11,"description","","",4,[[["self"]],["str"]]],[0,"form_urlencoded","","Parser and serializer for the…",N,N],[3,"Parse","url::form_urlencoded","The return type of `parse()`.",N,N],[3,"ParseIntoOwned","","Like `Parse`, but yields pairs of `String` instead of…",N,N],[3,"ByteSerialize","","Return value of `byte_serialize()`.",N,N],[3,"Serializer","","The `application/x-www-form-urlencoded` serializer.",N,N],[5,"parse","","Convert a byte string in the…",N,N],[5,"byte_serialize","","The `application/x-www-form-urlencoded` byte serializer.",N,N],[8,"Target","","",N,N],[10,"as_mut_string","","",7,[[["self"]],["string"]]],[10,"finish","","",7,N],[16,"Finished","","",7,N],[11,"into_owned","","Return a new iterator that yields pairs of `String`…",8,[[["self"]],["parseintoowned"]]],[11,"new","","Create a new `application/x-www-form-urlencoded`…",9,[[["t"]],["self"]]],[11,"for_suffix","","Create a new `application/x-www-form-urlencoded`…",9,[[["t"],["usize"]],["self"]]],[11,"clear","","Remove any existing name/value pair.",9,[[["self"]],["self"]]],[11,"custom_encoding_override","","Set the character encoding to be used for names and values…",9,[[["self"],["f"]],["self"]]],[11,"append_pair","","Serialize and append a name/value pair.",9,[[["self"],["str"],["str"]],["self"]]],[11,"extend_pairs","","Serialize and append a number of name/value pairs.",9,[[["self"],["i"]],["self"]]],[11,"finish","","If this serializer was constructed with a string, take and…",9,N],[11,"base_url","url","Change the base URL",10,[[["self"],["option",["url"]]],["self"]]],[11,"log_syntax_violation","","Call the provided function or closure on non-fatal parse…",10,[[["self"],["option",["fn"]]],["self"]]],[11,"syntax_violation_callback","","Call the provided function or closure for a non-fatal…",10,[[["self"],["option",["fn"]]],["self"]]],[11,"parse","","Parse an URL string with the configuration so far.",10,[[["self"],["str"]],["result",["url","parseerror"]]]],[11,"parse","","Parse an absolute URL from a string.",11,[[["str"]],["result",["url","parseerror"]]]],[11,"parse_with_params","","Parse an absolute URL from a string and add params to its…",11,[[["str"],["i"]],["result",["url","parseerror"]]]],[11,"join","","Parse a string as an URL, with this URL as the base URL.",11,[[["self"],["str"]],["result",["url","parseerror"]]]],[11,"options","","Return a default `ParseOptions` that can fully configure…",11,[[],["parseoptions"]]],[11,"as_str","","Return the serialization of this URL.",11,[[["self"]],["str"]]],[11,"into_string","","Return the serialization of this URL.",11,[[["self"]],["string"]]],[11,"origin","","Return the origin of this URL…",11,[[["self"]],["origin"]]],[11,"scheme","","Return the scheme of this URL, lower-cased, as an ASCII…",11,[[["self"]],["str"]]],[11,"has_authority","","Return whether the URL has an 'authority', which can…",11,[[["self"]],["bool"]]],[11,"cannot_be_a_base","","Return whether this URL is a cannot-be-a-base URL, meaning…",11,[[["self"]],["bool"]]],[11,"username","","Return the username for this URL (typically the empty…",11,[[["self"]],["str"]]],[11,"password","","Return the password for this URL, if any, as a…",11,[[["self"]],["option",["str"]]]],[11,"has_host","","Equivalent to `url.host().is_some()`.",11,[[["self"]],["bool"]]],[11,"host_str","","Return the string representation of the host (domain or IP…",11,[[["self"]],["option",["str"]]]],[11,"host","","Return the parsed representation of the host for this URL.…",11,[[["self"]],["option",["host"]]]],[11,"domain","","If this URL has a host and it is a domain name (not an IP…",11,[[["self"]],["option",["str"]]]],[11,"port","","Return the port number for this URL, if any.",11,[[["self"]],["option",["u16"]]]],[11,"port_or_known_default","","Return the port number for this URL, or the default port…",11,[[["self"]],["option",["u16"]]]],[11,"with_default_port","","If the URL has a host, return something that implements…",11,[[["self"],["f"]],["result",["hostandport"]]]],[11,"path","","Return the path for this URL, as a percent-encoded ASCII…",11,[[["self"]],["str"]]],[11,"path_segments","","Unless this URL is cannot-be-a-base, return an iterator of…",11,[[["self"]],["option",["split"]]]],[11,"query","","Return this URL’s query string, if any, as a…",11,[[["self"]],["option",["str"]]]],[11,"query_pairs","","Parse the URL’s query string, if any, as…",11,[[["self"]],["parse"]]],[11,"fragment","","Return this URL’s fragment identifier, if any.",11,[[["self"]],["option",["str"]]]],[11,"set_fragment","","Change this URL’s fragment identifier.",11,[[["self"],["option",["str"]]]]],[11,"set_query","","Change this URL’s query string.",11,[[["self"],["option",["str"]]]]],[11,"query_pairs_mut","","Manipulate this URL’s query string, viewed as a sequence…",11,[[["self"]],["serializer",["urlquery"]]]],[11,"set_path","","Change this URL’s path.",11,[[["self"],["str"]]]],[11,"path_segments_mut","","Return an object with methods to manipulate this URL’s…",11,[[["self"]],["result",["pathsegmentsmut"]]]],[11,"set_port","","Change this URL’s port number.",11,[[["self"],["option",["u16"]]],["result"]]],[11,"set_host","","Change this URL’s host.",11,[[["self"],["option",["str"]]],["result",["parseerror"]]]],[11,"set_ip_host","","Change this URL’s host to the given IP address.",11,[[["self"],["ipaddr"]],["result"]]],[11,"set_password","","Change this URL’s password.",11,[[["self"],["option",["str"]]],["result"]]],[11,"set_username","","Change this URL’s username.",11,[[["self"],["str"]],["result"]]],[11,"set_scheme","","Change this URL’s scheme.",11,[[["self"],["str"]],["result"]]],[11,"from_file_path","","Convert a file name as `std::path::Path` into an URL in…",11,[[["p"]],["result",["url"]]]],[11,"from_directory_path","","Convert a directory name as `std::path::Path` into an URL…",11,[[["p"]],["result",["url"]]]],[11,"to_file_path","","Assuming the URL is in the `file` scheme or similar,…",11,[[["self"]],["result",["pathbuf"]]]],[14,"define_encode_set","","Define a new struct that implements the `EncodeSet` trait,…",N,N],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into_iter","","",13,[[["self"]],["i"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"to_string","","",11,[[["self"]],["string"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","url::form_urlencoded","",8,[[["t"]],["t"]]],[11,"into_iter","","",8,[[["self"]],["i"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into_iter","","",15,[[["self"]],["i"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into_iter","","",16,[[["self"]],["i"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"as_mut_string","url","",14,[[["self"]],["string"]]],[11,"finish","","",14,[[["self"]],["url"]]],[11,"cmp","","",2,[[["self"],["host"]],["ordering"]]],[11,"cmp","","",11,[[["self"],["self"]],["ordering"]]],[11,"eq","","",2,[[["self"],["host"]],["bool"]]],[11,"ne","","",2,[[["self"],["host"]],["bool"]]],[11,"eq","","",1,[[["self"],["origin"]],["bool"]]],[11,"ne","","",1,[[["self"],["origin"]],["bool"]]],[11,"eq","","",12,[[["self"],["opaqueorigin"]],["bool"]]],[11,"ne","","",12,[[["self"],["opaqueorigin"]],["bool"]]],[11,"eq","","",3,[[["self"],["parseerror"]],["bool"]]],[11,"eq","","",4,[[["self"],["syntaxviolation"]],["bool"]]],[11,"eq","","",11,[[["self"],["self"]],["bool"]]],[11,"from","","",3,[[["errors"]],["parseerror"]]],[11,"clone","","",2,[[["self"]],["host"]]],[11,"clone","","",0,[[["self"]],["hostandport"]]],[11,"clone","","",1,[[["self"]],["origin"]]],[11,"clone","","",12,[[["self"]],["opaqueorigin"]]],[11,"clone","","",3,[[["self"]],["parseerror"]]],[11,"clone","","",4,[[["self"]],["syntaxviolation"]]],[11,"clone","","",5,[[["self"]],["position"]]],[11,"clone","url::form_urlencoded","",8,[[["self"]],["parse"]]],[11,"clone","url","",11,[[["self"]],["url"]]],[11,"clone","","",10,[[["self"]],["parseoptions"]]],[11,"drop","","",6,[[["self"]]]],[11,"drop","","",14,[[["self"]]]],[11,"partial_cmp","","",2,[[["self"],["host"]],["option",["ordering"]]]],[11,"lt","","",2,[[["self"],["host"]],["bool"]]],[11,"le","","",2,[[["self"],["host"]],["bool"]]],[11,"gt","","",2,[[["self"],["host"]],["bool"]]],[11,"ge","","",2,[[["self"],["host"]],["bool"]]],[11,"partial_cmp","","",11,[[["self"],["self"]],["option",["ordering"]]]],[11,"next","","",13,[[["self"]],["option",["socketaddr"]]]],[11,"next","url::form_urlencoded","",8,[[["self"]],["option"]]],[11,"next","","",15,[[["self"]],["option"]]],[11,"next","","",16,[[["self"]],["option",["str"]]]],[11,"size_hint","","",16,N],[11,"as_ref","url","",11,[[["self"]],["str"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","url::form_urlencoded","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","url","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"from_str","","",11,[[["str"]],["result",["url","parseerror"]]]],[11,"index","","",11,[[["self"],["rangefull"]],["str"]]],[11,"index","","",11,[[["self"],["rangefrom",["position"]]],["str"]]],[11,"index","","",11,[[["self"],["rangeto",["position"]]],["str"]]],[11,"index","","",11,[[["self"],["range",["position"]]],["str"]]],[11,"hash","","",2,N],[11,"hash","","",1,N],[11,"hash","","",12,N],[11,"hash","","",11,[[["self"],["h"]]]],[11,"description","","",3,[[["self"]],["str"]]],[11,"to_socket_addrs","","",0,[[["self"]],["result"]]],[11,"to_socket_addrs","","",11,[[["self"]],["result"]]]],"paths":[[3,"HostAndPort"],[4,"Origin"],[4,"Host"],[4,"ParseError"],[4,"SyntaxViolation"],[4,"Position"],[3,"PathSegmentsMut"],[8,"Target"],[3,"Parse"],[3,"Serializer"],[3,"ParseOptions"],[3,"Url"],[3,"OpaqueOrigin"],[3,"SocketAddrs"],[3,"UrlQuery"],[3,"ParseIntoOwned"],[3,"ByteSerialize"]]};
searchIndex["utf8_ranges"]={"doc":"Crate `utf8-ranges` converts ranges of Unicode scalar…","items":[[3,"Utf8Range","utf8_ranges","A single inclusive range of UTF-8 bytes.",N,N],[12,"start","","Start of byte range (inclusive).",0,N],[12,"end","","End of byte range (inclusive).",0,N],[3,"Utf8Sequences","","An iterator over ranges of matching UTF-8 byte sequences.",N,N],[4,"Utf8Sequence","","Utf8Sequence represents a sequence of byte ranges.",N,N],[13,"One","","One byte range.",1,N],[13,"Two","","Two successive byte ranges.",1,N],[13,"Three","","Three successive byte ranges.",1,N],[13,"Four","","Four successive byte ranges.",1,N],[11,"as_slice","","Returns the underlying sequence of byte ranges as a slice.",1,N],[11,"len","","Returns the number of byte ranges in this sequence.",1,[[["self"]],["usize"]]],[11,"matches","","Returns true if and only if a prefix of `bytes` matches…",1,N],[11,"matches","","Returns true if and only if the given byte is in this range.",0,[[["self"],["u8"]],["bool"]]],[11,"new","","Create a new iterator over UTF-8 byte ranges for the…",2,[[["char"],["char"]],["self"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into_iter","","",2,[[["self"]],["i"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"eq","","",1,[[["self"],["utf8sequence"]],["bool"]]],[11,"ne","","",1,[[["self"],["utf8sequence"]],["bool"]]],[11,"eq","","",0,[[["self"],["utf8range"]],["bool"]]],[11,"ne","","",0,[[["self"],["utf8range"]],["bool"]]],[11,"clone","","",1,[[["self"]],["utf8sequence"]]],[11,"clone","","",0,[[["self"]],["utf8range"]]],[11,"next","","",2,[[["self"]],["option"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]]],"paths":[[3,"Utf8Range"],[4,"Utf8Sequence"],[3,"Utf8Sequences"]]};
searchIndex["utils"]={"doc":"","items":[[3,"MultiPeekable","utils","Like [`std::iter::Peekable`], but can peek further ahead…",N,N],[4,"OutputSpecification","","",N,N],[13,"Stdout","","",0,N],[13,"File","","",0,N],[0,"color","","Helper for writing colors and font styles to the terminal.",N,N],[3,"ColorOutput","utils::color","",N,N],[11,"new","","",1,[[["writecolor"]],["self"]]],[11,"set_color","","",1,[[["self"],["option",["color"]]]]],[11,"set_bold","","",1,[[["self"],["bool"]]]],[11,"writer","","",1,[[["self"]],["writecolor"]]],[0,"ref_eq","utils","",N,N],[3,"RefEq","utils::ref_eq","",N,N],[12,"0","","",2,N],[11,"new","utils","",3,[[["i"]],["self"]]],[11,"peek","","",3,[[["self"]],["option"]]],[11,"peek_multiple","","Peek the next `n` items. Returned slice might be shorter…",3,N],[14,"matches","","",N,N],[14,"assert_matches","","",N,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"into_iter","","",3,[[["self"]],["i"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","utils::color","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","utils::ref_eq","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"eq","","",2,[[["self"],["refeq"]],["bool"]]],[11,"eq","","",2,[[["self"],["self"]],["bool"]]],[11,"clone","utils","",0,[[["self"]],["outputspecification"]]],[11,"drop","utils::color","",1,[[["self"]]]],[11,"next","utils","",3,[[["self"]],["option"]]],[11,"fmt","utils::ref_eq","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","utils","",0,[[["self"],["formatter"]],["result"]]],[11,"hash","utils::ref_eq","",2,[[["self"],["h"]]]],[11,"hash","","",2,[[["self"],["h"]]]]],"paths":[[4,"OutputSpecification"],[3,"ColorOutput"],[3,"RefEq"],[3,"MultiPeekable"]]};
searchIndex["vec_map"]={"doc":"A simple map based on a vector for small integer keys.…","items":[[3,"VecMap","vec_map","A map optimized for small integer keys.",N,N],[3,"VacantEntry","","A vacant Entry.",N,N],[3,"OccupiedEntry","","An occupied Entry.",N,N],[3,"Iter","","An iterator over the key-value pairs of a map.",N,N],[3,"IterMut","","An iterator over the key-value pairs of a map, with the…",N,N],[3,"Keys","","An iterator over the keys of a map.",N,N],[3,"Values","","An iterator over the values of a map.",N,N],[3,"ValuesMut","","An iterator over the values of a map.",N,N],[3,"IntoIter","","A consuming iterator over the key-value pairs of a map.",N,N],[3,"Drain","","A draining iterator over the key-value pairs of a map.",N,N],[4,"Entry","","A view into a single entry in a map, which may either be…",N,N],[13,"Vacant","","A vacant Entry",0,N],[13,"Occupied","","An occupied Entry",0,N],[11,"new","","Creates an empty `VecMap`.",1,[[],["self"]]],[11,"with_capacity","","Creates an empty `VecMap` with space for at least…",1,[[["usize"]],["self"]]],[11,"capacity","","Returns the number of elements the `VecMap` can hold…",1,[[["self"]],["usize"]]],[11,"reserve_len","","Reserves capacity for the given `VecMap` to contain `len`…",1,[[["self"],["usize"]]]],[11,"reserve_len_exact","","Reserves the minimum capacity for the given `VecMap` to…",1,[[["self"],["usize"]]]],[11,"shrink_to_fit","","Trims the `VecMap` of any excess capacity.",1,[[["self"]]]],[11,"keys","","Returns an iterator visiting all keys in ascending order…",1,[[["self"]],["keys"]]],[11,"values","","Returns an iterator visiting all values in ascending order…",1,[[["self"]],["values"]]],[11,"values_mut","","Returns an iterator visiting all values in ascending order…",1,[[["self"]],["valuesmut"]]],[11,"iter","","Returns an iterator visiting all key-value pairs in…",1,[[["self"]],["iter"]]],[11,"iter_mut","","Returns an iterator visiting all key-value pairs in…",1,[[["self"]],["itermut"]]],[11,"append","","Moves all elements from `other` into the map while…",1,[[["self"],["self"]]]],[11,"split_off","","Splits the collection into two at the given key.",1,[[["self"],["usize"]],["self"]]],[11,"drain","","Returns an iterator visiting all key-value pairs in…",1,[[["self"]],["drain"]]],[11,"len","","Returns the number of elements in the map.",1,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the map contains no elements.",1,[[["self"]],["bool"]]],[11,"clear","","Clears the map, removing all key-value pairs.",1,[[["self"]]]],[11,"get","","Returns a reference to the value corresponding to the key.",1,[[["self"],["usize"]],["option"]]],[11,"contains_key","","Returns true if the map contains a value for the specified…",1,[[["self"],["usize"]],["bool"]]],[11,"get_mut","","Returns a mutable reference to the value corresponding to…",1,[[["self"],["usize"]],["option"]]],[11,"insert","","Inserts a key-value pair into the map. If the key already…",1,[[["self"],["usize"],["v"]],["option"]]],[11,"remove","","Removes a key from the map, returning the value at the key…",1,[[["self"],["usize"]],["option"]]],[11,"entry","","Gets the given key's corresponding entry in the map for…",1,[[["self"],["usize"]],["entry"]]],[11,"retain","","Retains only the elements specified by the predicate.",1,[[["self"],["f"]]]],[11,"or_insert","","Ensures a value is in the entry by inserting the default…",0,[[["self"],["v"]],["v"]]],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of…",0,[[["self"],["f"]],["v"]]],[11,"insert","","Sets the value of the entry with the VacantEntry's key,…",2,[[["self"],["v"]],["v"]]],[11,"get","","Gets a reference to the value in the entry.",3,[[["self"]],["v"]]],[11,"get_mut","","Gets a mutable reference to the value in the entry.",3,[[["self"]],["v"]]],[11,"into_mut","","Converts the entry into a mutable reference to its value.",3,[[["self"]],["v"]]],[11,"insert","","Sets the value of the entry with the OccupiedEntry's key,…",3,[[["self"],["v"]],["v"]]],[11,"remove","","Takes the value of the entry out of the map, and returns it.",3,[[["self"]],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into_iter","","",1,[[["self"]],["i"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into_iter","","",4,[[["self"]],["i"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into_iter","","",5,[[["self"]],["i"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into_iter","","",6,[[["self"]],["i"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into_iter","","",7,[[["self"]],["i"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into_iter","","",8,[[["self"]],["i"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into_iter","","",9,[[["self"]],["i"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into_iter","","",10,[[["self"]],["i"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"next_back","","",4,[[["self"]],["option"]]],[11,"next_back","","",5,[[["self"]],["option"]]],[11,"next_back","","",10,[[["self"]],["option"]]],[11,"next_back","","",6,[[["self"]],["option",["usize"]]]],[11,"next_back","","",7,[[["self"]],["option"]]],[11,"next_back","","",8,[[["self"]],["option"]]],[11,"next_back","","",9,[[["self"]],["option"]]],[11,"cmp","","",1,[[["self"],["self"]],["ordering"]]],[11,"eq","","",1,[[["self"],["self"]],["bool"]]],[11,"clone","","",1,[[["self"]],["self"]]],[11,"clone_from","","",1,[[["self"],["self"]]]],[11,"clone","","",4,[[["self"]],["iter"]]],[11,"clone","","",6,[[["self"]],["keys"]]],[11,"clone","","",7,[[["self"]],["values"]]],[11,"into_iter","","Returns an iterator visiting all key-value pairs in…",1,[[["self"]],["intoiter"]]],[11,"extend","","",1,[[["self"],["i"]]]],[11,"extend","","",1,[[["self"],["i"]]]],[11,"partial_cmp","","",1,[[["self"],["self"]],["option",["ordering"]]]],[11,"next","","",4,[[["self"]],["option"]]],[11,"size_hint","","",4,N],[11,"next","","",5,[[["self"]],["option"]]],[11,"size_hint","","",5,N],[11,"next","","",10,[[["self"]],["option"]]],[11,"size_hint","","",10,N],[11,"next","","",6,[[["self"]],["option",["usize"]]]],[11,"size_hint","","",6,N],[11,"next","","",7,[[["self"]],["option"]]],[11,"size_hint","","",7,N],[11,"next","","",8,[[["self"]],["option"]]],[11,"size_hint","","",8,N],[11,"next","","",9,[[["self"]],["option"]]],[11,"size_hint","","",9,N],[11,"default","","",1,[[],["self"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"index","","",1,[[["self"],["usize"]],["v"]]],[11,"index","","",1,[[["self"],["usize"]],["v"]]],[11,"index_mut","","",1,[[["self"],["usize"]],["v"]]],[11,"index_mut","","",1,[[["self"],["usize"]],["v"]]],[11,"hash","","",1,[[["self"],["h"]]]],[11,"from_iter","","",1,[[["i"]],["self"]]]],"paths":[[4,"Entry"],[3,"VecMap"],[3,"VacantEntry"],[3,"OccupiedEntry"],[3,"Iter"],[3,"IterMut"],[3,"Keys"],[3,"Values"],[3,"ValuesMut"],[3,"IntoIter"],[3,"Drain"]]};
searchIndex["void"]={"doc":"Void","items":[[4,"Void","void","The empty type for cases which can't occur.",N,N],[5,"unreachable","","A safe version of `intrinsincs::unreachable`.",N,N],[8,"ResultVoidExt","","Extensions to `Result<T, Void>`",N,N],[10,"void_unwrap","","Get the value out of a wrapper.",0,[[["self"]],["t"]]],[8,"ResultVoidErrExt","","Extensions to `Result<Void, E>`",N,N],[10,"void_unwrap_err","","Get the error out of a wrapper.",1,[[["self"]],["e"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"eq","","",2,[[["self"],["t"]],["bool"]]],[11,"partial_cmp","","",2,[[["self"],["t"]],["option",["ordering"]]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"clone","","",2,[[["self"]],["void"]]]],"paths":[[8,"ResultVoidExt"],[8,"ResultVoidErrExt"],[4,"Void"]]};
searchIndex["wait_timeout"]={"doc":"A crate to wait on a child process with a particular…","items":[[3,"ExitStatus","wait_timeout","Exit status from a child process.",N,N],[8,"ChildExt","","Extension methods for the standard `std::process::Child`…",N,N],[10,"wait_timeout","","Wait for this child to exit, timing out after `ms`…",0,[[["self"],["duration"]],["result",["option"]]]],[11,"success","","Returns whether this exit status represents a successful…",1,[[["self"]],["bool"]]],[11,"code","","Returns the code associated with the child's exit event.",1,[[["self"]],["option",["i32"]]]],[11,"unix_signal","","Returns the Unix signal which terminated this process.",1,[[["self"]],["option",["i32"]]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"eq","","",1,[[["self"],["exitstatus"]],["bool"]]],[11,"ne","","",1,[[["self"],["exitstatus"]],["bool"]]],[11,"clone","","",1,[[["self"]],["exitstatus"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]]],"paths":[[8,"ChildExt"],[3,"ExitStatus"]]};
searchIndex["walkdir"]={"doc":"Crate `walkdir` provides an efficient and cross platform…","items":[[3,"WalkDir","walkdir","A builder to create an iterator for recursively walking a…",N,N],[3,"IntoIter","","An iterator for recursively descending into a directory.",N,N],[3,"DirEntry","","A directory entry.",N,N],[3,"FilterEntry","","A recursive directory iterator that skips entries.",N,N],[3,"Error","","An error produced by recursively walking a directory.",N,N],[6,"Result","","A result type for walkdir operations.",N,N],[8,"DirEntryExt","","Unix-specific extension methods for `walkdir::DirEntry`",N,N],[10,"ino","","Returns the underlying `d_ino` field in the contained…",0,[[["self"]],["u64"]]],[11,"new","","Create a builder for a recursive directory iterator…",1,[[["p"]],["self"]]],[11,"min_depth","","Set the minimum depth of entries yielded by the iterator.",1,[[["self"],["usize"]],["self"]]],[11,"max_depth","","Set the maximum depth of entries yield by the iterator.",1,[[["self"],["usize"]],["self"]]],[11,"follow_links","","Follow symbolic links. By default, this is disabled.",1,[[["self"],["bool"]],["self"]]],[11,"max_open","","Set the maximum number of simultaneously open file…",1,[[["self"],["usize"]],["self"]]],[11,"sort_by","","Set a function for sorting directory entries.",1,[[["self"],["f"]],["self"]]],[11,"contents_first","","Yield a directory's contents before the directory itself.…",1,[[["self"],["bool"]],["self"]]],[11,"same_file_system","","Do not cross file system boundaries.",1,[[["self"],["bool"]],["self"]]],[11,"skip_current_dir","","Skips the current directory.",2,[[["self"]]]],[11,"filter_entry","","Yields only entries which satisfy the given predicate and…",2,[[["self"],["p"]],["filterentry"]]],[11,"path","","The full path that this entry represents.",3,[[["self"]],["path"]]],[11,"into_path","","The full path that this entry represents.",3,[[["self"]],["pathbuf"]]],[11,"path_is_symlink","","Returns `true` if and only if this entry was created from…",3,[[["self"]],["bool"]]],[11,"metadata","","Return the metadata for the file that this entry points to.",3,[[["self"]],["result",["metadata"]]]],[11,"file_type","","Return the file type for the file that this entry points to.",3,[[["self"]],["filetype"]]],[11,"file_name","","Return the file name of this entry.",3,[[["self"]],["osstr"]]],[11,"depth","","Returns the depth at which this entry was created relative…",3,[[["self"]],["usize"]]],[11,"filter_entry","","Yields only entries which satisfy the given predicate and…",4,[[["self"],["p"]],["filterentry"]]],[11,"skip_current_dir","","Skips the current directory.",4,[[["self"]]]],[11,"path","","Returns the path associated with this error if one exists.",5,[[["self"]],["option",["path"]]]],[11,"loop_ancestor","","Returns the path at which a cycle was detected.",5,[[["self"]],["option",["path"]]]],[11,"depth","","Returns the depth at which this error occurred relative to…",5,[[["self"]],["usize"]]],[11,"io_error","","Inspect the original [`io::Error`] if there is one.",5,[[["self"]],["option",["error"]]]],[11,"into_io_error","","Similar to [`io_error`] except consumes self to convert to…",5,[[["self"]],["option",["error"]]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into_iter","","",1,[[["self"]],["i"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into_iter","","",2,[[["self"]],["i"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into_iter","","",4,[[["self"]],["i"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"ino","","Returns the underlying `d_ino` field in the contained…",3,[[["self"]],["u64"]]],[11,"clone","","",3,[[["self"]],["direntry"]]],[11,"into_iter","","",1,[[["self"]],["intoiter"]]],[11,"next","","Advances the iterator and returns the next value.",2,[[["self"]],["option",["result"]]]],[11,"next","","Advances the iterator and returns the next value.",4,[[["self"]],["option",["result"]]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"description","","",5,[[["self"]],["str"]]],[11,"cause","","",5,[[["self"]],["option",["error"]]]]],"paths":[[8,"DirEntryExt"],[3,"WalkDir"],[3,"IntoIter"],[3,"DirEntry"],[3,"FilterEntry"],[3,"Error"]]};
searchIndex["yaml_rust"]={"doc":"YAML 1.2 implementation in pure Rust.","items":[[0,"emitter","yaml_rust","",N,N],[3,"YamlEmitter","yaml_rust::emitter","",N,N],[4,"EmitError","","",N,N],[13,"FmtError","","",0,N],[13,"BadHashmapKey","","",0,N],[6,"EmitResult","","",N,N],[11,"new","","",1,[[["write"]],["yamlemitter"]]],[11,"compact","","Set 'compact inline notation' on or off, as described for…",1,[[["self"],["bool"]]]],[11,"is_compact","","Determine if this emitter is using 'compact inline…",1,[[["self"]],["bool"]]],[11,"dump","","",1,[[["self"],["yaml"]],["emitresult"]]],[0,"parser","yaml_rust","",N,N],[3,"Parser","yaml_rust::parser","",N,N],[4,"Event","","`Event` is used with the low-level event base parsing API,…",N,N],[13,"Nothing","","Reserved for internal use",2,N],[13,"StreamStart","","",2,N],[13,"StreamEnd","","",2,N],[13,"DocumentStart","","",2,N],[13,"DocumentEnd","","",2,N],[13,"Alias","","Refer to an anchor ID",2,N],[13,"Scalar","","Value, style, anchor_id, tag",2,N],[13,"SequenceStart","","Anchor ID",2,N],[13,"SequenceEnd","","",2,N],[13,"MappingStart","","Anchor ID",2,N],[13,"MappingEnd","","",2,N],[6,"ParseResult","","",N,N],[8,"EventReceiver","","",N,N],[10,"on_event","","",3,[[["self"],["event"]]]],[8,"MarkedEventReceiver","","",N,N],[10,"on_event","","",4,[[["self"],["event"],["marker"]]]],[11,"new","","",5,[[["t"]],["parser"]]],[11,"peek","","",5,[[["self"]],["result",["scanerror"]]]],[11,"next","","",5,[[["self"]],["parseresult"]]],[11,"load","","",5,[[["self"],["r"],["bool"]],["result",["scanerror"]]]],[0,"scanner","yaml_rust","",N,N],[3,"Marker","yaml_rust::scanner","",N,N],[3,"ScanError","","",N,N],[3,"Token","","",N,N],[12,"0","","",6,N],[12,"1","","",6,N],[3,"Scanner","","",N,N],[4,"TEncoding","","",N,N],[13,"Utf8","","",7,N],[4,"TScalarStyle","","",N,N],[13,"Any","","",8,N],[13,"Plain","","",8,N],[13,"SingleQuoted","","",8,N],[13,"DoubleQuoted","","",8,N],[13,"Literal","","",8,N],[13,"Foled","","",8,N],[4,"TokenType","","",N,N],[13,"NoToken","","",9,N],[13,"StreamStart","","",9,N],[13,"StreamEnd","","",9,N],[13,"VersionDirective","","major, minor",9,N],[13,"TagDirective","","handle, prefix",9,N],[13,"DocumentStart","","",9,N],[13,"DocumentEnd","","",9,N],[13,"BlockSequenceStart","","",9,N],[13,"BlockMappingStart","","",9,N],[13,"BlockEnd","","",9,N],[13,"FlowSequenceStart","","",9,N],[13,"FlowSequenceEnd","","",9,N],[13,"FlowMappingStart","","",9,N],[13,"FlowMappingEnd","","",9,N],[13,"BlockEntry","","",9,N],[13,"FlowEntry","","",9,N],[13,"Key","","",9,N],[13,"Value","","",9,N],[13,"Alias","","",9,N],[13,"Anchor","","",9,N],[13,"Tag","","handle, suffix",9,N],[13,"Scalar","","",9,N],[6,"ScanResult","","",N,N],[11,"index","","",10,[[["self"]],["usize"]]],[11,"line","","",10,[[["self"]],["usize"]]],[11,"col","","",10,[[["self"]],["usize"]]],[11,"new","","",11,[[["marker"],["str"]],["scanerror"]]],[11,"marker","","",11,[[["self"]],["marker"]]],[11,"new","","Creates the YAML tokenizer.",12,[[["t"]],["scanner"]]],[11,"get_error","","",12,[[["self"]],["option",["scanerror"]]]],[11,"stream_started","","",12,[[["self"]],["bool"]]],[11,"stream_ended","","",12,[[["self"]],["bool"]]],[11,"mark","","",12,[[["self"]],["marker"]]],[11,"fetch_next_token","","",12,[[["self"]],["scanresult"]]],[11,"next_token","","",12,[[["self"]],["result",["option","scanerror"]]]],[11,"fetch_more_tokens","","",12,[[["self"]],["scanresult"]]],[0,"yaml","yaml_rust","",N,N],[3,"YamlLoader","yaml_rust::yaml","",N,N],[3,"YamlIter","","",N,N],[4,"Yaml","","A YAML node is stored as this `Yaml` enumeration, which…",N,N],[13,"Real","","Float types are stored as String and parsed on demand.…",13,N],[13,"Integer","","YAML int is stored as i64.",13,N],[13,"String","","YAML scalar.",13,N],[13,"Boolean","","YAML bool, e.g. `true` or `false`.",13,N],[13,"Array","","YAML array, can be accessed as a `Vec`.",13,N],[13,"Hash","","YAML hash, can be accessed as a `LinkedHashMap`.",13,N],[13,"Alias","","Alias, not fully supported yet.",13,N],[13,"Null","","YAML null, e.g. `null` or `~`.",13,N],[13,"BadValue","","Accessing a nonexistent node via the Index trait returns…",13,N],[6,"Array","","",N,N],[6,"Hash","","",N,N],[11,"load_from_str","","",14,[[["str"]],["result",["vec","scanerror"]]]],[11,"as_bool","","",13,[[["self"]],["option",["bool"]]]],[11,"as_i64","","",13,[[["self"]],["option",["i64"]]]],[11,"as_str","","",13,[[["self"]],["option",["str"]]]],[11,"as_hash","","",13,[[["self"]],["option",["hash"]]]],[11,"as_vec","","",13,[[["self"]],["option",["array"]]]],[11,"into_bool","","",13,[[["self"]],["option",["bool"]]]],[11,"into_i64","","",13,[[["self"]],["option",["i64"]]]],[11,"into_string","","",13,[[["self"]],["option",["string"]]]],[11,"into_hash","","",13,[[["self"]],["option",["hash"]]]],[11,"into_vec","","",13,[[["self"]],["option",["array"]]]],[11,"is_null","","",13,[[["self"]],["bool"]]],[11,"is_badvalue","","",13,[[["self"]],["bool"]]],[11,"is_array","","",13,[[["self"]],["bool"]]],[11,"as_f64","","",13,[[["self"]],["option",["f64"]]]],[11,"into_f64","","",13,[[["self"]],["option",["f64"]]]],[11,"from_str","","",13,[[["str"]],["yaml"]]],[11,"from","yaml_rust::emitter","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","yaml_rust::parser","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","yaml_rust::scanner","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"to_string","","",11,[[["self"]],["string"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into_iter","","",12,[[["self"]],["i"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"on_event","yaml_rust::yaml","",14,N],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into_iter","","",15,[[["self"]],["i"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into_iter","","",13,[[["self"]],["i"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"on_event","","",14,[[["self"],["event"],["marker"]]]],[11,"cmp","","",13,[[["self"],["yaml"]],["ordering"]]],[11,"eq","yaml_rust::parser","",2,[[["self"],["event"]],["bool"]]],[11,"ne","","",2,[[["self"],["event"]],["bool"]]],[11,"eq","yaml_rust::scanner","",7,[[["self"],["tencoding"]],["bool"]]],[11,"eq","","",8,[[["self"],["tscalarstyle"]],["bool"]]],[11,"eq","","",10,[[["self"],["marker"]],["bool"]]],[11,"ne","","",10,[[["self"],["marker"]],["bool"]]],[11,"eq","","",11,[[["self"],["scanerror"]],["bool"]]],[11,"ne","","",11,[[["self"],["scanerror"]],["bool"]]],[11,"eq","","",9,[[["self"],["tokentype"]],["bool"]]],[11,"ne","","",9,[[["self"],["tokentype"]],["bool"]]],[11,"eq","","",6,[[["self"],["token"]],["bool"]]],[11,"ne","","",6,[[["self"],["token"]],["bool"]]],[11,"eq","yaml_rust::yaml","",13,[[["self"],["yaml"]],["bool"]]],[11,"ne","","",13,[[["self"],["yaml"]],["bool"]]],[11,"from","yaml_rust::emitter","",0,[[["error"]],["self"]]],[11,"clone","","",0,[[["self"]],["emiterror"]]],[11,"clone","yaml_rust::parser","",2,[[["self"]],["event"]]],[11,"clone","yaml_rust::scanner","",7,[[["self"]],["tencoding"]]],[11,"clone","","",8,[[["self"]],["tscalarstyle"]]],[11,"clone","","",10,[[["self"]],["marker"]]],[11,"clone","","",11,[[["self"]],["scanerror"]]],[11,"clone","","",9,[[["self"]],["tokentype"]]],[11,"clone","","",6,[[["self"]],["token"]]],[11,"clone","yaml_rust::yaml","",13,[[["self"]],["yaml"]]],[11,"into_iter","","",13,N],[11,"partial_cmp","","",13,[[["self"],["yaml"]],["option",["ordering"]]]],[11,"lt","","",13,[[["self"],["yaml"]],["bool"]]],[11,"le","","",13,[[["self"],["yaml"]],["bool"]]],[11,"gt","","",13,[[["self"],["yaml"]],["bool"]]],[11,"ge","","",13,[[["self"],["yaml"]],["bool"]]],[11,"next","yaml_rust::scanner","",12,[[["self"]],["option",["token"]]]],[11,"next","yaml_rust::yaml","",15,[[["self"]],["option",["yaml"]]]],[11,"fmt","yaml_rust::emitter","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","yaml_rust::scanner","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","yaml_rust::emitter","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","yaml_rust::parser","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","yaml_rust::scanner","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","yaml_rust::yaml","",13,[[["self"],["formatter"]],["result"]]],[11,"index","","",13,[[["self"],["str"]],["yaml"]]],[11,"index","","",13,[[["self"],["usize"]],["yaml"]]],[11,"hash","","",13,N],[11,"description","yaml_rust::emitter","",0,[[["self"]],["str"]]],[11,"cause","","",0,[[["self"]],["option",["error"]]]],[11,"description","yaml_rust::scanner","",11,[[["self"]],["str"]]],[11,"cause","","",11,[[["self"]],["option",["error"]]]]],"paths":[[4,"EmitError"],[3,"YamlEmitter"],[4,"Event"],[8,"EventReceiver"],[8,"MarkedEventReceiver"],[3,"Parser"],[3,"Token"],[4,"TEncoding"],[4,"TScalarStyle"],[4,"TokenType"],[3,"Marker"],[3,"ScanError"],[3,"Scanner"],[4,"Yaml"],[3,"YamlLoader"],[3,"YamlIter"]]};
searchIndex["yansi"]={"doc":"A dead simple ANSI terminal color painting library.","items":[[3,"Style","yansi","Represents a set of styling options.",N,N],[3,"Paint","","A structure encapsulating an item and styling.",N,N],[4,"Color","","An enum representing an ANSI color code.",N,N],[13,"Unset","","No color has been set. Nothing is changed when applied.",0,N],[13,"Default","","Terminal default #9. (foreground code `39`, background…",0,N],[13,"Black","","Black #0 (foreground code `30`, background code `40`).",0,N],[13,"Red","","Red: #1 (foreground code `31`, background code `41`).",0,N],[13,"Green","","Green: #2 (foreground code `32`, background code `42`).",0,N],[13,"Yellow","","Yellow: #3 (foreground code `33`, background code `43`).",0,N],[13,"Blue","","Blue: #4 (foreground code `34`, background code `44`).",0,N],[13,"Magenta","","Magenta: #5 (foreground code `35`, background code `45`).",0,N],[13,"Cyan","","Cyan: #6 (foreground code `36`, background code `46`).",0,N],[13,"White","","White: #7 (foreground code `37`, background code `47`).",0,N],[13,"Fixed","","A color number from 0 to 255, for use in 256-color…",0,N],[13,"RGB","","A 24-bit RGB color, as specified by ISO-8613-3.",0,N],[11,"new","","Constructs a new `Paint` structure encapsulating `item`…",1,[[["t"]],["paint"]]],[11,"default","","Constructs a new `Paint` structure encapsulating `item`…",1,[[["t"]],["paint"]]],[11,"masked","","Constructs a new masked `Paint` structure encapsulating…",1,[[["t"]],["paint"]]],[11,"wrapping","","Constructs a new wrapping `Paint` structure encapsulating…",1,[[["t"]],["paint"]]],[11,"rgb","","Constructs a new `Paint` structure encapsulating `item`…",1,[[["u8"],["u8"],["u8"],["t"]],["paint"]]],[11,"fixed","","Constructs a new `Paint` structure encapsulating `item`…",1,[[["u8"],["t"]],["paint"]]],[11,"black","","Constructs a new `Paint` structure encapsulating `item`…",1,[[["t"]],["paint"]]],[11,"red","","Constructs a new `Paint` structure encapsulating `item`…",1,[[["t"]],["paint"]]],[11,"green","","Constructs a new `Paint` structure encapsulating `item`…",1,[[["t"]],["paint"]]],[11,"yellow","","Constructs a new `Paint` structure encapsulating `item`…",1,[[["t"]],["paint"]]],[11,"blue","","Constructs a new `Paint` structure encapsulating `item`…",1,[[["t"]],["paint"]]],[11,"magenta","","Constructs a new `Paint` structure encapsulating `item`…",1,[[["t"]],["paint"]]],[11,"cyan","","Constructs a new `Paint` structure encapsulating `item`…",1,[[["t"]],["paint"]]],[11,"white","","Constructs a new `Paint` structure encapsulating `item`…",1,[[["t"]],["paint"]]],[11,"style","","Retrieves the style currently set on `self`.",1,[[["self"]],["style"]]],[11,"inner","","Retrieves a borrow to the inner item.",1,[[["self"]],["t"]]],[11,"with_style","","Sets the style of `self` to `style`.",1,[[["self"],["style"]],["paint"]]],[11,"mask","","Masks `self`.",1,[[["self"]],["paint"]]],[11,"wrap","","Makes `self` a wrapping `Paint`.",1,[[["self"]],["paint"]]],[11,"fg","","Sets the foreground to `color`.",1,[[["self"],["color"]],["paint"]]],[11,"bg","","Sets the background to `color`.",1,[[["self"],["color"]],["paint"]]],[11,"bold","","Enables the bold style on `self` . ",1,[[["self"]],["paint"]]],[11,"dimmed","","Enables the dimmed style on `self` . ",1,[[["self"]],["paint"]]],[11,"italic","","Enables the italic style on `self` . ",1,[[["self"]],["paint"]]],[11,"underline","","Enables the underline style on `self` . ",1,[[["self"]],["paint"]]],[11,"blink","","Enables the blink style on `self` . ",1,[[["self"]],["paint"]]],[11,"invert","","Enables the invert style on `self` . ",1,[[["self"]],["paint"]]],[11,"hidden","","Enables the hidden style on `self` . ",1,[[["self"]],["paint"]]],[11,"strikethrough","","Enables the strikethrough style on `self` . ",1,[[["self"]],["paint"]]],[11,"disable","","Disables coloring globally.",1,[[]]],[11,"enable","","Enables coloring globally. Coloring is enabled by default,…",1,[[]]],[11,"is_enabled","","Returns `true` if coloring is enabled and `false`…",1,[[],["bool"]]],[11,"enable_windows_ascii","","Enables ASCII terminal escape sequences on Windows…",1,[[],["bool"]]],[11,"new","","Default style with the foreground set to `color` and no…",2,[[["color"]],["style"]]],[11,"fg","","Sets the foreground to `color`.",2,[[["self"],["color"]],["style"]]],[11,"bg","","Sets the background to `color`.",2,[[["self"],["color"]],["style"]]],[11,"mask","","Sets `self` to be masked.",2,[[["self"]],["style"]]],[11,"wrap","","Sets `self` to be wrapping.",2,[[["self"]],["style"]]],[11,"bold","","Enables the bold style on `self` . ",2,[[["self"]],["style"]]],[11,"dimmed","","Enables the dimmed style on `self` . ",2,[[["self"]],["style"]]],[11,"italic","","Enables the italic style on `self` . ",2,[[["self"]],["style"]]],[11,"underline","","Enables the underline style on `self` . ",2,[[["self"]],["style"]]],[11,"blink","","Enables the blink style on `self` . ",2,[[["self"]],["style"]]],[11,"invert","","Enables the invert style on `self` . ",2,[[["self"]],["style"]]],[11,"hidden","","Enables the hidden style on `self` . ",2,[[["self"]],["style"]]],[11,"strikethrough","","Enables the strikethrough style on `self` . ",2,[[["self"]],["style"]]],[11,"paint","","Constructs a new `Paint` structure that encapsulates…",2,[[["self"],["t"]],["paint"]]],[11,"fg_color","","Returns the foreground color of `self`.",2,[[["self"]],["color"]]],[11,"bg_color","","Returns the foreground color of `self`.",2,[[["self"]],["color"]]],[11,"is_masked","","Returns `true` if `self` is masked.",2,[[["self"]],["bool"]]],[11,"is_wrapping","","Returns `true` if `self` is wrapping.",2,[[["self"]],["bool"]]],[11,"is_bold","","Returns `true` if the bold property is set on `self` . ",2,[[["self"]],["bool"]]],[11,"is_dimmed","","Returns `true` if the dimmed property is set on `self` . ",2,[[["self"]],["bool"]]],[11,"is_italic","","Returns `true` if the italic property is set on `self` . ",2,[[["self"]],["bool"]]],[11,"is_underline","","Returns `true` if the underline property is set on `self` . ",2,[[["self"]],["bool"]]],[11,"is_blink","","Returns `true` if the blink property is set on `self` . ",2,[[["self"]],["bool"]]],[11,"is_invert","","Returns `true` if the invert property is set on `self` . ",2,[[["self"]],["bool"]]],[11,"is_hidden","","Returns `true` if the hidden property is set on `self` . ",2,[[["self"]],["bool"]]],[11,"is_strikethrough","","Returns `true` if the strikethrough property is set on…",2,[[["self"]],["bool"]]],[11,"fmt_prefix","","Writes the ANSI code prefix for the currently set styles.",2,[[["self"],["write"]],["result"]]],[11,"fmt_suffix","","Writes the ANSI code suffix for the currently set styles.",2,[[["self"],["write"]],["result"]]],[11,"paint","","Constructs a new `Paint` structure that encapsulates…",0,[[["self"],["t"]],["paint"]]],[11,"style","","Constructs a new `Style` structure with the foreground…",0,[[["self"]],["style"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"cmp","","",1,[[["self"],["paint"]],["ordering"]]],[11,"cmp","","",2,[[["self"],["style"]],["ordering"]]],[11,"cmp","","",0,[[["self"],["color"]],["ordering"]]],[11,"eq","","",1,[[["self"],["paint"]],["bool"]]],[11,"ne","","",1,[[["self"],["paint"]],["bool"]]],[11,"eq","","",2,[[["self"],["style"]],["bool"]]],[11,"eq","","",0,[[["self"],["color"]],["bool"]]],[11,"ne","","",0,[[["self"],["color"]],["bool"]]],[11,"clone","","",1,[[["self"]],["paint"]]],[11,"clone","","",2,[[["self"]],["style"]]],[11,"clone","","",0,[[["self"]],["color"]]],[11,"partial_cmp","","",1,[[["self"],["paint"]],["option",["ordering"]]]],[11,"lt","","",1,[[["self"],["paint"]],["bool"]]],[11,"le","","",1,[[["self"],["paint"]],["bool"]]],[11,"gt","","",1,[[["self"],["paint"]],["bool"]]],[11,"ge","","",1,[[["self"],["paint"]],["bool"]]],[11,"partial_cmp","","",2,[[["self"],["style"]],["option",["ordering"]]]],[11,"lt","","",2,[[["self"],["style"]],["bool"]]],[11,"le","","",2,[[["self"],["style"]],["bool"]]],[11,"gt","","",2,[[["self"],["style"]],["bool"]]],[11,"ge","","",2,[[["self"],["style"]],["bool"]]],[11,"partial_cmp","","",0,[[["self"],["color"]],["option",["ordering"]]]],[11,"lt","","",0,[[["self"],["color"]],["bool"]]],[11,"le","","",0,[[["self"],["color"]],["bool"]]],[11,"gt","","",0,[[["self"],["color"]],["bool"]]],[11,"ge","","",0,[[["self"],["color"]],["bool"]]],[11,"default","","",1,[[],["paint"]]],[11,"default","","",2,[[],["style"]]],[11,"default","","",0,[[],["self"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"hash","","",1,N],[11,"hash","","",2,[[["self"],["h"]]]],[11,"hash","","",0,N]],"paths":[[4,"Color"],[3,"Paint"],[3,"Style"]]};
initSearch(searchIndex);addSearchOptions(searchIndex);
