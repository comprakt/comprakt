//! This is the runtime automatically linked into
//! the compiled mini java file
use std::io::{stdout, Write};

extern "C" {
    // this is the main function generated by
    // libfirm
    // running_sum (input_vec, output_vec, len) -> total
    fn running_sum(input: *const i32, output: *mut i32, size: u32) -> i32;
}

type MjInt = i32;

#[no_mangle]
extern "C" fn system_in_read() -> MjInt {
    // stuff
    0
}

#[no_mangle]
extern "C" fn system_out_println(num: MjInt) {
    println!("{}", num);
}

#[no_mangle]
// TODO: wtf is a byte in MinjJava?
extern "C" fn system_out_write(num: MjInt) {
    println!("{}", num);
}

#[no_mangle]
extern "C" fn system_out_flush() {
    stdout().flush().ok();
}

fn main() {
    println!("Hello, world!");
    // todo, this should call the main
    let input = [1, 2, 3, 4];
    let mut output = [0; 4];
    let total = unsafe { running_sum(input.as_ptr(), output.as_mut_ptr(), input.len() as u32) };
    println!("MJ Main, ran {}!", total);
}
