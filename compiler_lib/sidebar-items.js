initSidebarItems({"macro":[["breakpoint",""],["rocket_uri_macro_breakpoint","Rocket code generated wrapping URI macro."],["rocket_uri_macro_breakpoint_continue","Rocket code generated wrapping URI macro."],["rocket_uri_macro_breakpoint_list","Rocket code generated wrapping URI macro."],["rocket_uri_macro_snapshot_at_index","Rocket code generated wrapping URI macro."]],"mod":[["asciifile",""],["ast",""],["context","All state shared by the lexer, parser and semantic analysis phases."],["debugging","This is a browser-based graphical debugger for FIRM graphs."],["diagnostics","The diagnostics object controls the output of warnings and errors generated by the compiler during the lexing, parsing and semantic analysis phases. It also tracks the number of warnings and errors generated for flow control."],["dot","Converts FIRM or LIR graphs into dot graph description language for easy debugging."],["firm","Lowers the output of the semantic analysis phase (AST, Type System, Type Analysis), into Firm for code generation."],["lexer",""],["optimization",""],["parser",""],["print",""],["semantics",""],["strtab","String table with zero-copy and amortised O(1) insert"],["symtab",""],["type_checking","This module implements type checking on the AST. The type checking produces an instance of `type_system::TypeSystem`, which is later used by the `firm` module for IR graph construction."],["visitor","The visitor module for the AST."]]});