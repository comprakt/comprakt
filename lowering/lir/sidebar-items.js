initSidebarItems({"enum":[["BinopKind",""],["CodeInstruction","A unifying enum over the different operations contained in Code."],["CondOp",""],["CopyPropagationSrc",""],["IndexComputation","Index of AddressComputation variant of the Instruction enum."],["Instruction",""],["JmpKind",""],["Leave","Instructions that are at the end of a basic block."],["Operand",""],["Stride",""],["UnopKind",""]],"fn":[["is_jit_operand",""]],"struct":[["AddressComputation","This implements address computation, see http://www.c-jump.com/CIS77/CPU/x86/lecture.html#X77_0110_scaled_indexed"],["BasicBlock","This is a vertex in the basic-block graph"],["BlockGraph","A graph of basic blocks."],["Code",""],["CopyPropagation","The representation of a single element in ControlFlowTransfer.register_transitions. The consumer of the LIR (a register allocator / target arch code generator) emits the concrete instructions to flow values from one basic block to the other. It will commonly have to choose between using registers or spill code."],["Function",""],["LIR",""],["LoadMem",""],["StoreMem",""],["Var",""]]});