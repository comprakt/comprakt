language: rust

rust:
  - nightly-2018-10-14

cache: cargo

branches:
  only:
    # This is where pull requests from "bors r+" are built.
    - staging
    # This is where pull requests from "bors try" are built.
    - trying
    # This is enabled to build pull requests.
    - master

matrix:
  include:
    - os: linux
      env: TEST_KIND="comprakt-debug"
    - os: linux
      env: TEST_KIND="comprakt-release"

    - os: linux
      env: TEST_KIND="mjtest-lexer"
    - os: linux
      env: TEST_KIND="mjtest-syntax"
    - os: linux
      env: TEST_KIND="mjtest-semantic"
    - os: linux
      # only run integration tests, but redirect them
      # through the `build` and `run` scripts. We cannot
      # do this in the other CI builds, since they build
      # `debug` and `release` versions explicitly.
      env: TEST_KIND="submission-system"
    # Disable until implemented
    # - os: linux
    #   env: TEST_KIND="mjtest-ast"
    # - os: linux
    #   env: TEST_KIND="mjtest-compile-firm"
    # - os: linux
    #   env: TEST_KIND="mjtest-compile"

install: |
    case "$TEST_KIND" in
      comprakt-*)
        rustup component add clippy-preview && \
        rustup component add rustfmt-preview;
        ;;
      mjtest-*)
        curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py && python3 get-pip.py --user && \
        pip install typing --user && \
        git clone https://git.scc.kit.edu/IPDSnelting/mjtest.git && \
        cd mjtest && \
        git submodule update --init && \
        git submodule update --remote && \
        cd -;
        ;;
      submission-system)
        ;;
      *)
        echo "INVALID TEST_KIND=$TEST_KIND";
        return 1;
        ;;
    esac


script: |
    case "$TEST_KIND" in
      comprakt-*)
        case "$TEST_KIND" in
          comprakt-release)
            FLAGS="--release"
            export RUST_MIN_STACK=$((8 * 1024 * 1024)) # 8 MiB
        esac
        cargo fmt --all -- --check && \
        cargo clippy $FLAGS --all-targets --all-features -- -D warnings && \
        cargo test $FLAGS ;
        ;;
      mjtest-*)
        MJTEST_KIND=${TEST_KIND#mjtest-}
        cargo build --release && \
        MJ_TIMEOUT=60 MJ_RUN=target/release/compiler-cli python3 ./mjtest/mjt.py $MJTEST_KIND ;
        ;;
      submission-system)
        ./build && \
        COMPILER_BINARY="$(pwd)/run" cargo test --release --test integration ;
        ;;
      *)
        echo "INVALID TEST_KIND=$TEST_KIND"
        return 1 ;
        ;;
    esac


after_success: |
    case "$TEST_KIND" in
      comprakt-release)
        cargo doc \
        && echo '<!doctype html><title>Redirecting...</title><meta http-equiv=refresh content=0;url=compiler-cli/index.html><a href="compiler-cli/index.html">Redirecting to "compiler-cli" crate...</a>' > target/doc/index.html ;
        ;;
    esac


deploy:
  provider: pages
  skip-cleanup: true
  github-token: $GITHUB_TOKEN
  keep-history: true
  local-dir: target/doc/
  on:
    branch: master
    condition: $TEST_KIND = comprakt-release
