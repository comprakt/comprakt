initSidebarItems({"constant":[["ED25519_PKCS8_V2_LEN","The length of a Ed25519 PKCS#8 (v2) private key generated by `Ed25519KeyPair::generate_pkcs8()`. Ed25519 PKCS#8 files generated by other software may have different lengths, and `Ed25519KeyPair::generate_pkcs8()` may generate files of a different length in the future."],["ED25519_PUBLIC_KEY_LEN","The length of an Ed25519 public key."]],"fn":[["key_pair_from_pkcs8","Returns a key for signing that is parsed from a PKCS#8 document."],["sign","Returns a signature of the given data using the given key. The signing may or may not use `rng`, depending on the `key_pair's algorithm."],["verify","Verify the signature `signature` of message `msg` with the public key `public_key` using the algorithm `alg`."]],"mod":[["primitive","Lower-level verification primitives. Usage of `ring::signature::verify()` is preferred when the public key and signature are encoded in standard formats, as it also handles the parsing."]],"static":[["ECDSA_P256_SHA256_ASN1","Verification of ASN.1 DER-encoded ECDSA signatures using the P-256 curve and SHA-256."],["ECDSA_P256_SHA256_ASN1_SIGNING","Signing of ASN.1 DER-encoded ECDSA signatures using the P-256 curve and SHA-256."],["ECDSA_P256_SHA256_FIXED","Verification of fixed-length (PKCS#11 style) ECDSA signatures using the P-256 curve and SHA-256."],["ECDSA_P256_SHA256_FIXED_SIGNING","Signing of fixed-length (PKCS#11 style) ECDSA signatures using the P-256 curve and SHA-256."],["ECDSA_P256_SHA384_ASN1","Not recommended. Verification of ASN.1 DER-encoded ECDSA signatures using the P-256 curve and SHA-384."],["ECDSA_P384_SHA256_ASN1","Not recommended. Verification of ASN.1 DER-encoded ECDSA signatures using the P-384 curve and SHA-256."],["ECDSA_P384_SHA384_ASN1","Verification of ASN.1 DER-encoded ECDSA signatures using the P-384 curve and SHA-384."],["ECDSA_P384_SHA384_ASN1_SIGNING","Signing of ASN.1 DER-encoded ECDSA signatures using the P-384 curve and SHA-384."],["ECDSA_P384_SHA384_FIXED","Verification of fixed-length (PKCS#11 style) ECDSA signatures using the P-384 curve and SHA-384."],["ECDSA_P384_SHA384_FIXED_SIGNING","Signing of fixed-length (PKCS#11 style) ECDSA signatures using the P-384 curve and SHA-384."],["ED25519","Verification of [Ed25519] signatures."],["RSA_PKCS1_2048_8192_SHA1","Verification of signatures using RSA keys of 2048-8192 bits,              PKCS#1.5 padding, and SHA-1."],["RSA_PKCS1_2048_8192_SHA256","Verification of signatures using RSA keys of 2048-8192 bits,              PKCS#1.5 padding, and SHA-256."],["RSA_PKCS1_2048_8192_SHA384","Verification of signatures using RSA keys of 2048-8192 bits,              PKCS#1.5 padding, and SHA-384."],["RSA_PKCS1_2048_8192_SHA512","Verification of signatures using RSA keys of 2048-8192 bits,              PKCS#1.5 padding, and SHA-512."],["RSA_PKCS1_3072_8192_SHA384","Verification of signatures using RSA keys of 3072-8192 bits,              PKCS#1.5 padding, and SHA-384."],["RSA_PSS_2048_8192_SHA256","Verification of signatures using RSA keys of 2048-8192 bits,              PSS padding, and SHA-256."],["RSA_PSS_2048_8192_SHA384","Verification of signatures using RSA keys of 2048-8192 bits,              PSS padding, and SHA-384."],["RSA_PSS_2048_8192_SHA512","Verification of signatures using RSA keys of 2048-8192 bits,              PSS padding, and SHA-512."]],"struct":[["ECDSAKeyPair","An ECDSA key pair, used for signing."],["ECDSAVerification","An ECDSA verification algorithm."],["Ed25519KeyPair","An Ed25519 key pair, for signing."],["EdDSAParameters","Parameters for EdDSA signing and verification."],["KeyPair","A key pair for signing."],["RSAParameters","Parameters for RSA verification."],["Signature","A public key signature returned from a signing operation."]],"trait":[["SigningAlgorithm","An algorithm for signing."],["VerificationAlgorithm","A signature verification algorithm."]]});